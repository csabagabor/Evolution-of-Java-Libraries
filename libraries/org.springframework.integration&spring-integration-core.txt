
+###org/springframework/integration/config/ReleaseStrategyFactoryBean
@2.0.0.RELEASE
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#getObject()Lorg/springframework/integration/aggregator/ReleaseStrategy;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#getObject()Ljava/lang/Object;
@4.2.5.RELEASE
+#<init>()V
*#<init>(Ljava/lang/Object;)V[deprecated]
*#<init>(Ljava/lang/Object;Ljava/lang/String;)V[deprecated]
+#setTarget(Ljava/lang/Object;)V
+#setMethodName(Ljava/lang/String;)V
+#afterPropertiesSet()V
@5.0.0.RELEASE
-#<init>(Ljava/lang/Object;)V[deprecated]
-#<init>(Ljava/lang/Object;Ljava/lang/String;)V[deprecated]

+###org/springframework/integration/config/EnableIntegrationManagement
@4.2.0.RELEASE
+#countsEnabled()[Ljava/lang/String;
+#statsEnabled()[Ljava/lang/String;
+#defaultCountsEnabled()Ljava/lang/String;
+#defaultStatsEnabled()Ljava/lang/String;
+#defaultLoggingEnabled()Ljava/lang/String;
+#metricsFactory()Ljava/lang/String;
@5.2.0.RELEASE
*#countsEnabled()[Ljava/lang/String;[deprecated]
+#metersEnabled()[Ljava/lang/String;
*#statsEnabled()[Ljava/lang/String;[deprecated]
*#defaultStatsEnabled()Ljava/lang/String;[deprecated]
*#metricsFactory()Ljava/lang/String;[deprecated]
@5.4.0
*#metersEnabled()[Ljava/lang/String;[deprecated]
*#defaultCountsEnabled()Ljava/lang/String;[deprecated]
-#countsEnabled()[Ljava/lang/String;[deprecated]
-#statsEnabled()[Ljava/lang/String;[deprecated]
-#defaultStatsEnabled()Ljava/lang/String;[deprecated]
-#metricsFactory()Ljava/lang/String;[deprecated]
@6.0.0
+#observationPatterns()[Ljava/lang/String;
-#metersEnabled()[Ljava/lang/String;[deprecated]
-#defaultCountsEnabled()Ljava/lang/String;[deprecated]

+###org/springframework/integration/config/SpelFunctionFactoryBean
@3.0.0.RELEASE
+#<init>(Ljava/lang/Class;Ljava/lang/String;)V
+#setBeanName(Ljava/lang/String;)V
+#getFunctionName()Ljava/lang/String;
+#afterPropertiesSet()V
+#getObject()Ljava/lang/reflect/Method;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#getObject()Ljava/lang/Object;

+###org/springframework/integration/config/IntegrationConfigurationBeanFactoryPostProcessor
@4.0.0.RELEASE
+#<init>()V
+#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@4.3.0.RELEASE
+#postProcessBeanDefinitionRegistry(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V

+###org/springframework/integration/config/ExpressionControlBusFactoryBean
@2.0.0.RELEASE
+#<init>()V
+#setSendTimeout(Ljava/lang/Long;)V

+###org/springframework/integration/config/ConsumerEndpointFactoryBean
@1.0.1.RELEASE
+#<init>(Lorg/springframework/integration/message/MessageHandler;)V
+#setInputChannelName(Ljava/lang/String;)V
+#setPollerMetadata(Lorg/springframework/integration/scheduling/PollerMetadata;)V
+#setAutoStartup(Z)V
+#setBeanName(Ljava/lang/String;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#afterPropertiesSet()V
+#isSingleton()Z
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@1.0.2.RELEASE
+#<init>()V
+#setHandler(Lorg/springframework/integration/message/MessageHandler;)V
-#<init>(Lorg/springframework/integration/message/MessageHandler;)V
@1.0.3.RELEASE
+#isRunning()Z
+#start()V
+#stop()V
@2.0.0.RELEASE
+#setHandler(Lorg/springframework/integration/core/MessageHandler;)V
+#setInputChannel(Lorg/springframework/integration/MessageChannel;)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#getObject()Lorg/springframework/integration/endpoint/AbstractEndpoint;
+#isAutoStartup()Z
+#getPhase()I
+#stop(Ljava/lang/Runnable;)V
-#setHandler(Lorg/springframework/integration/message/MessageHandler;)V
-#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@2.2.0.RELEASE
+#setAdviceChain(Ljava/util/List;)V
@3.0.0.RELEASE
+#setPhase(I)V
@4.0.0.RELEASE
+#setHandler(Lorg/springframework/messaging/MessageHandler;)V
+#setInputChannel(Lorg/springframework/messaging/MessageChannel;)V
-#setHandler(Lorg/springframework/integration/core/MessageHandler;)V
-#setInputChannel(Lorg/springframework/integration/MessageChannel;)V
@4.1.3.RELEASE
+#setChannelResolver(Lorg/springframework/messaging/core/DestinationResolver;)V
@4.3.12.RELEASE
+#setAutoStartup(Ljava/lang/Boolean;)V
-#setAutoStartup(Z)V
@5.0.0.RELEASE
+#setRole(Ljava/lang/String;)V
+#setTaskScheduler(Lorg/springframework/scheduling/TaskScheduler;)V
+#destroy()V
@5.1.7.RELEASE
-#isSingleton()Z
@5.3.0.RELEASE
+#setHandler(Ljava/lang/Object;)V
-#setHandler(Lorg/springframework/messaging/MessageHandler;)V
@5.5.0
+#setReactiveCustomizer(Ljava/util/function/Function;)V
@5.5.4
+#getHandler()Lorg/springframework/messaging/MessageHandler;

+###org/springframework/integration/config/TransformerFactoryBean
@1.0.1.RELEASE
+#<init>()V
@1.0.4.RELEASE
+#setSendTimeout(Ljava/lang/Long;)V
@2.0.0.RELEASE
+#setExpression(Lorg/springframework/expression/Expression;)V
+#setExpressionString(Ljava/lang/String;)V
+#setTargetMethodName(Ljava/lang/String;)V
+#setTargetObject(Ljava/lang/Object;)V
@4.3.0.RELEASE
-#setExpression(Lorg/springframework/expression/Expression;)V
-#setExpressionString(Ljava/lang/String;)V
-#setTargetMethodName(Ljava/lang/String;)V
-#setTargetObject(Ljava/lang/Object;)V
@5.0.0.RELEASE
-#setSendTimeout(Ljava/lang/Long;)V

+###org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor
@1.0.1.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;)V
+#postProcess(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/reflect/Method;Ljava/lang/annotation/Annotation;)Ljava/lang/Object;
@4.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
+#postProcess(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/reflect/Method;Ljava/util/List;)Ljava/lang/Object;
+#shouldCreateEndpoint(Ljava/lang/reflect/Method;Ljava/util/List;)Z
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;)V
-#postProcess(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/reflect/Method;Ljava/lang/annotation/Annotation;)Ljava/lang/Object;
@4.0.8.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@4.1.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@4.1.7.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@4.2.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@4.2.1.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@6.0.0
-###org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor

+###org/springframework/integration/config/annotation/SplitterAnnotationPostProcessor
@1.0.1.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;)V
@4.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;)V
@4.0.8.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@4.1.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@4.1.7.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@4.2.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@4.2.1.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@6.0.0
-###org/springframework/integration/config/annotation/SplitterAnnotationPostProcessor

+###org/springframework/integration/config/annotation/TransformerAnnotationPostProcessor
@1.0.1.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;)V
@4.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;)V
@4.0.8.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@4.1.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@4.1.7.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@4.2.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@4.2.1.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@6.0.0
-###org/springframework/integration/config/annotation/TransformerAnnotationPostProcessor

+###org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor
@1.0.1.RELEASE
+#<init>()V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#afterPropertiesSet()V
+#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@2.0.0.RELEASE
+#isRunning()Z
+#start()V
+#stop()V
@4.0.0.RELEASE
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
@4.0.8.RELEASE
-#setEnvironment(Lorg/springframework/core/env/Environment;)V
@4.1.0.RELEASE
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
@4.1.7.RELEASE
-#setEnvironment(Lorg/springframework/core/env/Environment;)V
@4.2.0.RELEASE
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
+#afterSingletonsInstantiated()V
-#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
-#isRunning()Z
-#start()V
-#stop()V
@4.2.1.RELEASE
-#setEnvironment(Lorg/springframework/core/env/Environment;)V
@4.3.0.RELEASE
+#setRequireComponentAnnotation(Z)V
@4.3.8.RELEASE
+#addMessagingAnnotationPostProcessor(Ljava/lang/Class;Lorg/springframework/integration/config/annotation/MethodAnnotationPostProcessor;)V
@5.0.0.RELEASE
-#setRequireComponentAnnotation(Z)V
-#afterSingletonsInstantiated()V
@5.2.0.RELEASE
+#afterSingletonsInstantiated()V
@6.0.0
-###org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor

+###org/springframework/integration/config/annotation/AggregatorAnnotationPostProcessor
@1.0.1.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;)V
@4.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;)V
@4.0.8.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@4.1.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@4.1.7.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@4.2.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@4.2.1.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@6.0.0
-###org/springframework/integration/config/annotation/AggregatorAnnotationPostProcessor

+###org/springframework/integration/config/annotation/FilterAnnotationPostProcessor
@2.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;)V
@4.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;)V
@4.0.8.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@4.1.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@4.1.7.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@4.2.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@4.2.1.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@6.0.0
-###org/springframework/integration/config/annotation/FilterAnnotationPostProcessor

+###org/springframework/integration/config/annotation/InboundChannelAdapterAnnotationPostProcessor
@4.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
+#postProcess(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/reflect/Method;Ljava/util/List;)Ljava/lang/Object;
@4.0.8.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@4.1.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@4.1.7.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@4.2.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@4.2.1.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@6.0.0
-###org/springframework/integration/config/annotation/InboundChannelAdapterAnnotationPostProcessor

+###org/springframework/integration/config/annotation/RouterAnnotationPostProcessor
@1.0.1.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;)V
@4.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;)V
@4.0.8.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@4.1.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@4.1.7.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@4.2.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@4.2.1.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@6.0.0
-###org/springframework/integration/config/annotation/RouterAnnotationPostProcessor

+###org/springframework/integration/config/annotation/ServiceActivatorAnnotationPostProcessor
@1.0.1.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;)V
@4.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;)V
@4.0.8.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@4.1.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@4.1.7.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@4.2.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@4.2.1.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@6.0.0
-###org/springframework/integration/config/annotation/ServiceActivatorAnnotationPostProcessor

+###org/springframework/integration/config/annotation/BridgeFromAnnotationPostProcessor
@4.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
+#shouldCreateEndpoint(Ljava/lang/reflect/Method;Ljava/util/List;)Z
@4.0.8.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@4.1.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@4.1.7.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@4.2.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@4.2.1.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@6.0.0
-###org/springframework/integration/config/annotation/BridgeFromAnnotationPostProcessor

+###org/springframework/integration/config/annotation/BridgeToAnnotationPostProcessor
@4.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
+#shouldCreateEndpoint(Ljava/lang/reflect/Method;Ljava/util/List;)Z
@4.0.8.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@4.1.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@4.1.7.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@4.2.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
-#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@4.2.1.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;Lorg/springframework/core/env/Environment;)V
@6.0.0
-###org/springframework/integration/config/annotation/BridgeToAnnotationPostProcessor

+###org/springframework/integration/config/annotation/MethodAnnotationPostProcessor
@1.0.1.RELEASE
+#postProcess(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/reflect/Method;Ljava/lang/annotation/Annotation;)Ljava/lang/Object;
@4.0.0.RELEASE
+#postProcess(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/reflect/Method;Ljava/util/List;)Ljava/lang/Object;
+#shouldCreateEndpoint(Ljava/lang/reflect/Method;Ljava/util/List;)Z
-#postProcess(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/reflect/Method;Ljava/lang/annotation/Annotation;)Ljava/lang/Object;
@6.0.0
+#processBeanDefinition(Ljava/lang/String;Lorg/springframework/beans/factory/annotation/AnnotatedBeanDefinition;Ljava/util/List;)V
+#shouldCreateEndpoint(Lorg/springframework/core/annotation/MergedAnnotations;Ljava/util/List;)Z
+#getInputChannelAttribute()Ljava/lang/String;
+#beanAnnotationAware()Z
+#supportsPojoMethod()Z

+###org/springframework/integration/config/ServiceActivatorFactoryBean
@2.0.0.RELEASE
+#<init>()V
+#setSendTimeout(Ljava/lang/Long;)V
+#setRequiresReply(Ljava/lang/Boolean;)V
+#setExpression(Lorg/springframework/expression/Expression;)V
+#setExpressionString(Ljava/lang/String;)V
+#setTargetMethodName(Ljava/lang/String;)V
+#setTargetObject(Ljava/lang/Object;)V
@4.3.0.RELEASE
-#setExpression(Lorg/springframework/expression/Expression;)V
-#setExpressionString(Ljava/lang/String;)V
-#setTargetMethodName(Ljava/lang/String;)V
-#setTargetObject(Ljava/lang/Object;)V
@5.0.0.RELEASE
+#setNotPropagatedHeaders([Ljava/lang/String;)V
-#setSendTimeout(Ljava/lang/Long;)V
-#setRequiresReply(Ljava/lang/Boolean;)V

+###org/springframework/integration/config/EnableIntegration
@4.0.0.RELEASE

+###org/springframework/integration/config/EnablePublisher
@4.0.0.RELEASE
+#value()Ljava/lang/String;
@5.1.3.RELEASE
+#defaultChannel()Ljava/lang/String;
+#proxyTargetClass()Z
+#order()I

+###org/springframework/integration/config/IntegrationManagementConfigurer
@5.1.0.RELEASE
+#<init>()V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#setBeanName(Ljava/lang/String;)V
+#setMetricsFactory(Lorg/springframework/integration/support/management/MetricsFactory;)V
+#setMetricsFactoryBeanName(Ljava/lang/String;)V
+#setEnabledCountsPatterns([Ljava/lang/String;)V
+#setEnabledStatsPatterns([Ljava/lang/String;)V
+#setDefaultCountsEnabled(Ljava/lang/Boolean;)V
+#getDefaultCountsEnabled()Ljava/lang/Boolean;
+#setDefaultStatsEnabled(Ljava/lang/Boolean;)V
+#getDefaultStatsEnabled()Ljava/lang/Boolean;
+#setDefaultLoggingEnabled(Z)V
+#afterSingletonsInstantiated()V
+#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#requiresDestruction(Ljava/lang/Object;)Z
+#postProcessBeforeDestruction(Ljava/lang/Object;Ljava/lang/String;)V
+#getChannelNames()[Ljava/lang/String;
+#getHandlerNames()[Ljava/lang/String;
+#getSourceNames()[Ljava/lang/String;
+#getChannelMetrics(Ljava/lang/String;)Lorg/springframework/integration/support/management/MessageChannelMetrics;
+#getHandlerMetrics(Ljava/lang/String;)Lorg/springframework/integration/support/management/MessageHandlerMetrics;
+#getSourceMetrics(Ljava/lang/String;)Lorg/springframework/integration/support/management/MessageSourceMetrics;
@5.2.0.RELEASE
*#setMetricsFactory(Lorg/springframework/integration/support/management/MetricsFactory;)V[deprecated]
*#setMetricsFactoryBeanName(Ljava/lang/String;)V[deprecated]
*#setEnabledStatsPatterns([Ljava/lang/String;)V[deprecated]
*#setDefaultStatsEnabled(Ljava/lang/Boolean;)V[deprecated]
*#getDefaultStatsEnabled()Ljava/lang/Boolean;[deprecated]
@5.2.9.RELEASE
+#setMetricsCaptor(Lorg/springframework/integration/support/management/metrics/MetricsCaptor;)V
+#destroy()V
@5.2.10.RELEASE
+#onApplicationEvent(Lorg/springframework/context/event/ContextClosedEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
-#destroy()V
@5.3.0.RELEASE
-#setMetricsCaptor(Lorg/springframework/integration/support/management/metrics/MetricsCaptor;)V
-#onApplicationEvent(Lorg/springframework/context/event/ContextClosedEvent;)V
-#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@5.3.3.RELEASE
+#setMetricsCaptor(Lorg/springframework/integration/support/management/metrics/MetricsCaptor;)V
+#destroy()V
@5.3.4.RELEASE
+#onApplicationEvent(Lorg/springframework/context/event/ContextClosedEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
-#destroy()V
@5.4.0
+#destroy()V
-#setMetricsFactory(Lorg/springframework/integration/support/management/MetricsFactory;)V[deprecated]
-#setMetricsFactoryBeanName(Ljava/lang/String;)V[deprecated]
-#setEnabledCountsPatterns([Ljava/lang/String;)V
-#setEnabledStatsPatterns([Ljava/lang/String;)V[deprecated]
-#setDefaultCountsEnabled(Ljava/lang/Boolean;)V
-#getDefaultCountsEnabled()Ljava/lang/Boolean;
-#setDefaultStatsEnabled(Ljava/lang/Boolean;)V[deprecated]
-#getDefaultStatsEnabled()Ljava/lang/Boolean;[deprecated]
-#requiresDestruction(Ljava/lang/Object;)Z
-#postProcessBeforeDestruction(Ljava/lang/Object;Ljava/lang/String;)V
-#onApplicationEvent(Lorg/springframework/context/event/ContextClosedEvent;)V
-#getChannelNames()[Ljava/lang/String;
-#getHandlerNames()[Ljava/lang/String;
-#getSourceNames()[Ljava/lang/String;
-#getChannelMetrics(Ljava/lang/String;)Lorg/springframework/integration/support/management/MessageChannelMetrics;
-#getHandlerMetrics(Ljava/lang/String;)Lorg/springframework/integration/support/management/MessageHandlerMetrics;
-#getSourceMetrics(Ljava/lang/String;)Lorg/springframework/integration/support/management/MessageSourceMetrics;
-#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@5.4.1
+#onApplicationEvent(Lorg/springframework/context/event/ContextClosedEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
-#destroy()V
@6.0.0
+#setObservationRegistry(Lio/micrometer/observation/ObservationRegistry;)V
+#setObservationPatterns([Ljava/lang/String;)V

+###org/springframework/integration/config/IntegrationConfigUtils
@4.0.0.RELEASE
+#registerSpelFunctionBean(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#autoCreateDirectChannel(Ljava/lang/String;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
@4.2.0.RELEASE
+#registerRoleControllerDefinitionIfNecessary(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
@5.1.0.RELEASE
-#registerRoleControllerDefinitionIfNecessary(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
@5.5.0
+#registerSpelFunctionBean(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V
@6.0.0
+#annotationBeanNameGenerator(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)Lorg/springframework/beans/factory/support/BeanNameGenerator;

+###org/springframework/integration/config/AbstractSimpleMessageHandlerFactoryBean
@2.0.0.RELEASE
+#<init>()V
+#setOutputChannel(Lorg/springframework/integration/MessageChannel;)V
+#setOrder(Ljava/lang/Integer;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#getObject()Lorg/springframework/integration/core/MessageHandler;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#getObject()Ljava/lang/Object;
@2.2.0.RELEASE
+#setAdviceChain(Ljava/util/List;)V
@3.0.0.RELEASE
+#setComponentName(Ljava/lang/String;)V
@4.0.0.RELEASE
+#setOutputChannel(Lorg/springframework/messaging/MessageChannel;)V
+#getObject()Lorg/springframework/messaging/MessageHandler;
-#setOutputChannel(Lorg/springframework/integration/MessageChannel;)V
-#getObject()Lorg/springframework/integration/core/MessageHandler;
@4.2.1.RELEASE
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#setBeanName(Ljava/lang/String;)V
+#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
+#setChannelResolver(Lorg/springframework/messaging/core/DestinationResolver;)V
@4.3.0.RELEASE
+#setAsync(Ljava/lang/Boolean;)V
@5.2.0.RELEASE
+#setOutputChannelName(Ljava/lang/String;)V

+###org/springframework/integration/config/IntegrationRegistrar
@4.0.0.RELEASE
+#<init>()V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#registerBeanDefinitions(Lorg/springframework/core/type/AnnotationMetadata;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
@5.1.0.RELEASE
-#setBeanClassLoader(Ljava/lang/ClassLoader;)V

+###org/springframework/integration/config/IntegrationComponentScanRegistrar
@4.0.0.RELEASE
+#<init>()V
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#registerBeanDefinitions(Lorg/springframework/core/type/AnnotationMetadata;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
@4.3.0.RELEASE
-#setBeanClassLoader(Ljava/lang/ClassLoader;)V
@4.3.19.RELEASE
+#setEnvironment(Lorg/springframework/core/env/Environment;)V

+###org/springframework/integration/config/MessagingGatewayRegistrar
@4.0.0.RELEASE
+#<init>()V
+#registerBeanDefinitions(Lorg/springframework/core/type/AnnotationMetadata;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
+#parse(Ljava/util/Map;)Lorg/springframework/beans/factory/config/BeanDefinitionHolder;
@4.2.0.RELEASE
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
@5.0.0.RELEASE
-#setBeanClassLoader(Ljava/lang/ClassLoader;)V
@5.5.2
+#gatewayProxyBeanDefinition(Ljava/util/Map;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)Lorg/springframework/beans/factory/config/BeanDefinitionHolder;
-#parse(Ljava/util/Map;)Lorg/springframework/beans/factory/config/BeanDefinitionHolder;
@5.5.6
+#parse(Ljava/util/Map;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)Lorg/springframework/beans/factory/config/BeanDefinitionHolder;
-#gatewayProxyBeanDefinition(Ljava/util/Map;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)Lorg/springframework/beans/factory/config/BeanDefinitionHolder;
@6.0.0
-###org/springframework/integration/config/MessagingGatewayRegistrar

+###org/springframework/integration/config/MessageHistoryRegistrar
@4.0.0.RELEASE
+#<init>()V
+#registerBeanDefinitions(Lorg/springframework/core/type/AnnotationMetadata;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V

+###org/springframework/integration/config/GlobalChannelInterceptorInitializer
@4.0.0.RELEASE
+#<init>()V
+#initialize(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V

+###org/springframework/integration/config/IntegrationConfigurationInitializer
@4.0.0.RELEASE
+#initialize(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V

+###org/springframework/integration/config/FilterFactoryBean
@2.0.0.RELEASE
+#<init>()V
+#setDiscardChannel(Lorg/springframework/integration/MessageChannel;)V
+#setThrowExceptionOnRejection(Ljava/lang/Boolean;)V
+#setSendTimeout(Ljava/lang/Long;)V
+#setExpression(Lorg/springframework/expression/Expression;)V
+#setExpressionString(Ljava/lang/String;)V
+#setTargetMethodName(Ljava/lang/String;)V
+#setTargetObject(Ljava/lang/Object;)V
@3.0.0.RELEASE
+#setDiscardWithinAdvice(Z)V
@4.0.0.RELEASE
+#setDiscardChannel(Lorg/springframework/messaging/MessageChannel;)V
-#setDiscardChannel(Lorg/springframework/integration/MessageChannel;)V
@4.3.0.RELEASE
-#setExpression(Lorg/springframework/expression/Expression;)V
-#setExpressionString(Ljava/lang/String;)V
-#setTargetMethodName(Ljava/lang/String;)V
-#setTargetObject(Ljava/lang/Object;)V
@5.0.0.RELEASE
-#setSendTimeout(Ljava/lang/Long;)V

+###org/springframework/integration/config/ExpressionFactoryBean
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#setParserConfiguration(Lorg/springframework/expression/spel/SpelParserConfiguration;)V
+#getObjectType()Ljava/lang/Class;

+###org/springframework/integration/config/IntegrationEvaluationContextFactoryBean
@3.0.0.RELEASE
+#<init>()V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#setPropertyAccessors(Ljava/util/Map;)V
+#getPropertyAccessors()Ljava/util/Map;
+#setFunctions(Ljava/util/Map;)V
+#afterPropertiesSet()V
+#getObject()Lorg/springframework/expression/spel/support/StandardEvaluationContext;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#getObject()Ljava/lang/Object;
@3.0.2.RELEASE
+#setTypeLocator(Lorg/springframework/expression/TypeLocator;)V
@4.2.2.RELEASE
+#getFunctions()Ljava/util/Map;
@4.3.15.RELEASE
-#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
-#setPropertyAccessors(Ljava/util/Map;)V
-#getPropertyAccessors()Ljava/util/Map;
-#setFunctions(Ljava/util/Map;)V
-#getFunctions()Ljava/util/Map;
@5.0.0.RELEASE
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#setPropertyAccessors(Ljava/util/Map;)V
+#getPropertyAccessors()Ljava/util/Map;
+#setFunctions(Ljava/util/Map;)V
+#getFunctions()Ljava/util/Map;
@5.0.4.RELEASE
-#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
-#setPropertyAccessors(Ljava/util/Map;)V
-#getPropertyAccessors()Ljava/util/Map;
-#setFunctions(Ljava/util/Map;)V
-#getFunctions()Ljava/util/Map;

+###org/springframework/integration/config/IntegrationConverterInitializer
@4.0.0.RELEASE
+#<init>()V
+#initialize(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
+#registerConverter(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Lorg/springframework/beans/BeanMetadataElement;)V
@5.5.0
-#registerConverter(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Lorg/springframework/beans/BeanMetadataElement;)V

+###org/springframework/integration/config/IntegrationManagementConfiguration
@4.2.0.RELEASE
+#<init>()V
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
+#setImportMetadata(Lorg/springframework/core/type/AnnotationMetadata;)V
+#managementConfigurer()Lorg/springframework/integration/support/management/IntegrationManagementConfigurer;
@5.1.0.RELEASE
+#managementConfigurer()Lorg/springframework/integration/config/IntegrationManagementConfigurer;
-#managementConfigurer()Lorg/springframework/integration/support/management/IntegrationManagementConfigurer;
@5.2.9.RELEASE
+#managementConfigurer(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/integration/config/IntegrationManagementConfigurer;
-#managementConfigurer()Lorg/springframework/integration/config/IntegrationManagementConfigurer;
@5.3.0.RELEASE
+#managementConfigurer()Lorg/springframework/integration/config/IntegrationManagementConfigurer;
-#managementConfigurer(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/integration/config/IntegrationManagementConfigurer;
@5.3.3.RELEASE
+#managementConfigurer(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/integration/config/IntegrationManagementConfigurer;
-#managementConfigurer()Lorg/springframework/integration/config/IntegrationManagementConfigurer;
@6.0.0
+#managementConfigurer(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/integration/config/IntegrationManagementConfigurer;
-#managementConfigurer(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/integration/config/IntegrationManagementConfigurer;

+###org/springframework/integration/config/RouterFactoryBean
@1.0.1.RELEASE
+#<init>()V
+#setChannelResolver(Lorg/springframework/integration/channel/ChannelResolver;)V
+#setDefaultOutputChannel(Lorg/springframework/integration/core/MessageChannel;)V
@1.0.2.RELEASE
+#setResolutionRequired(Ljava/lang/Boolean;)V
+#setIgnoreChannelNameResolutionFailures(Ljava/lang/Boolean;)V
@1.0.3.RELEASE
+#setTimeout(Ljava/lang/Long;)V
@2.0.0.RELEASE
+#setChannelResolver(Lorg/springframework/integration/support/channel/ChannelResolver;)V
+#setDefaultOutputChannel(Lorg/springframework/integration/MessageChannel;)V
+#setApplySequence(Ljava/lang/Boolean;)V
+#setIgnoreSendFailures(Ljava/lang/Boolean;)V
+#setChannelIdentifierMap(Ljava/util/Map;)V
+#setExpression(Lorg/springframework/expression/Expression;)V
+#setExpressionString(Ljava/lang/String;)V
+#setTargetMethodName(Ljava/lang/String;)V
+#setTargetObject(Ljava/lang/Object;)V
-#setChannelResolver(Lorg/springframework/integration/channel/ChannelResolver;)V
-#setDefaultOutputChannel(Lorg/springframework/integration/core/MessageChannel;)V
@2.1.0.RELEASE
+#setChannelMappings(Ljava/util/Map;)V
-#setIgnoreChannelNameResolutionFailures(Ljava/lang/Boolean;)V
-#setChannelIdentifierMap(Ljava/util/Map;)V
@3.0.0.RELEASE
-#setChannelResolver(Lorg/springframework/integration/support/channel/ChannelResolver;)V
@4.0.0.RELEASE
+#setDefaultOutputChannel(Lorg/springframework/messaging/MessageChannel;)V
-#setDefaultOutputChannel(Lorg/springframework/integration/MessageChannel;)V
@4.2.5.RELEASE
+#setDefaultOutputChannelName(Ljava/lang/String;)V
@4.3.0.RELEASE
*#setTimeout(Ljava/lang/Long;)V[deprecated]
+#setSendTimeout(Ljava/lang/Long;)V
-#setExpression(Lorg/springframework/expression/Expression;)V
-#setExpressionString(Ljava/lang/String;)V
-#setTargetMethodName(Ljava/lang/String;)V
-#setTargetObject(Ljava/lang/Object;)V
@5.0.0.RELEASE
-#setTimeout(Ljava/lang/Long;)V[deprecated]
-#setSendTimeout(Ljava/lang/Long;)V
@6.0.0
+#setPrefix(Ljava/lang/String;)V
+#setSuffix(Ljava/lang/String;)V

+###org/springframework/integration/config/AggregatorFactoryBean
@4.2.0.RELEASE
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#setExpireGroupsUponCompletion(Z)V
+#setSendTimeout(J)V
+#setOutputChannelName(Ljava/lang/String;)V
+#configureMetrics(Lorg/springframework/integration/support/management/AbstractMessageHandlerMetrics;)V
+#setBeanName(Ljava/lang/String;)V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#setChannelResolver(Lorg/springframework/messaging/core/DestinationResolver;)V
+#setStatsEnabled(Z)V
+#setCountsEnabled(Z)V
+#setLockRegistry(Lorg/springframework/integration/support/locks/LockRegistry;)V
+#setMessageStore(Lorg/springframework/integration/store/MessageGroupStore;)V
+#setCorrelationStrategy(Lorg/springframework/integration/aggregator/CorrelationStrategy;)V
+#setReleaseStrategy(Lorg/springframework/integration/aggregator/ReleaseStrategy;)V
+#setGroupTimeoutExpression(Lorg/springframework/expression/Expression;)V
+#setForceReleaseAdviceChain(Ljava/util/List;)V
+#setTaskScheduler(Lorg/springframework/scheduling/TaskScheduler;)V
+#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
+#setDiscardChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setDiscardChannelName(Ljava/lang/String;)V
+#setSendPartialResultOnExpiry(Z)V
+#setMinimumTimeoutForEmptyGroups(J)V
+#setReleasePartialSequences(Z)V
+#setExpireGroupsUponTimeout(Z)V
@4.2.1.RELEASE
+#<init>()V
+#setProcessorBean(Ljava/lang/Object;)V
+#setMethodName(Ljava/lang/String;)V
+#setExpireGroupsUponCompletion(Ljava/lang/Boolean;)V
+#setSendTimeout(Ljava/lang/Long;)V
+#setMetrics(Lorg/springframework/integration/support/management/AbstractMessageHandlerMetrics;)V
+#setStatsEnabled(Ljava/lang/Boolean;)V
+#setCountsEnabled(Ljava/lang/Boolean;)V
+#setSendPartialResultOnExpiry(Ljava/lang/Boolean;)V
+#setMinimumTimeoutForEmptyGroups(Ljava/lang/Long;)V
+#setExpireGroupsUponTimeout(Ljava/lang/Boolean;)V
-#<init>(Ljava/lang/Object;)V
-#<init>(Ljava/lang/Object;Ljava/lang/String;)V
-#setExpireGroupsUponCompletion(Z)V
-#setSendTimeout(J)V
-#configureMetrics(Lorg/springframework/integration/support/management/AbstractMessageHandlerMetrics;)V
-#setBeanName(Ljava/lang/String;)V
-#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
-#setChannelResolver(Lorg/springframework/messaging/core/DestinationResolver;)V
-#setStatsEnabled(Z)V
-#setCountsEnabled(Z)V
-#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
-#setSendPartialResultOnExpiry(Z)V
-#setMinimumTimeoutForEmptyGroups(J)V
-#setReleasePartialSequences(Z)V
-#setExpireGroupsUponTimeout(Z)V
@5.1.0.RELEASE
+#setPopSequence(Ljava/lang/Boolean;)V
@5.1.1.RELEASE
+#setReleaseLockBeforeSend(Ljava/lang/Boolean;)V
@5.2.0.RELEASE
+#setHeadersFunction(Ljava/util/function/Function;)V
@5.3.0.RELEASE
*#setMetrics(Lorg/springframework/integration/support/management/AbstractMessageHandlerMetrics;)V[deprecated]
@5.4.0
+#setExpireTimeout(Ljava/lang/Long;)V
+#setExpireDurationMillis(Ljava/lang/Long;)V
-#setMetrics(Lorg/springframework/integration/support/management/AbstractMessageHandlerMetrics;)V[deprecated]
-#setStatsEnabled(Ljava/lang/Boolean;)V
-#setCountsEnabled(Ljava/lang/Boolean;)V
@5.5.0
+#setGroupConditionSupplier(Ljava/util/function/BiFunction;)V

+###org/springframework/integration/config/FixedSubscriberChannelBeanFactoryPostProcessor
@4.0.0.RELEASE
+#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V

+###org/springframework/integration/config/GlobalChannelInterceptor
@4.0.0.RELEASE
+#patterns()[Ljava/lang/String;
+#order()I

+###org/springframework/integration/config/IdGeneratorConfigurer
@2.0.4.RELEASE
+#<init>()V
+#onApplicationEvent(Lorg/springframework/context/event/ApplicationContextEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V

+###org/springframework/integration/config/AbstractEvaluationContextFactoryBean
@4.3.15.RELEASE
+#<init>()V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#setPropertyAccessors(Ljava/util/Map;)V
+#getPropertyAccessors()Ljava/util/Map;
+#setFunctions(Ljava/util/Map;)V
+#getFunctions()Ljava/util/Map;
@5.0.0.RELEASE
-###org/springframework/integration/config/AbstractEvaluationContextFactoryBean

+###org/springframework/integration/config/IdempotentReceiverAutoProxyCreatorInitializer
@4.1.0.RELEASE
+#<init>()V
+#initialize(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V

+###org/springframework/integration/config/IntegrationSimpleEvaluationContextFactoryBean
@4.3.15.RELEASE
+#<init>()V
+#isSingleton()Z
+#afterPropertiesSet()V
+#getObject()Lorg/springframework/expression/spel/support/SimpleEvaluationContext;
+#getObjectType()Ljava/lang/Class;
+#getObject()Ljava/lang/Object;
@5.0.0.RELEASE
-###org/springframework/integration/config/IntegrationSimpleEvaluationContextFactoryBean

+###org/springframework/integration/config/AbstractStandardMessageHandlerFactoryBean
@4.3.0.RELEASE
+#<init>()V
+#setTargetObject(Ljava/lang/Object;)V
+#setTargetMethodName(Ljava/lang/String;)V
+#setExpressionString(Ljava/lang/String;)V
+#setExpression(Lorg/springframework/expression/Expression;)V
@5.0.0.RELEASE
+#setRequiresReply(Ljava/lang/Boolean;)V
+#setSendTimeout(Ljava/lang/Long;)V
+#getSendTimeout()Ljava/lang/Long;
@5.0.7.RELEASE
+#destroy()V

+###org/springframework/integration/config/SourcePollingChannelAdapterFactoryBean
@1.0.1.RELEASE
+#<init>()V
+#setSource(Lorg/springframework/integration/message/MessageSource;)V
+#setOutputChannel(Lorg/springframework/integration/core/MessageChannel;)V
+#setPollerMetadata(Lorg/springframework/integration/scheduling/PollerMetadata;)V
+#setAutoStartup(Z)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#setBeanName(Ljava/lang/String;)V
+#afterPropertiesSet()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@1.0.2.RELEASE
+#isRunning()Z
+#start()V
+#stop()V
@2.0.0.RELEASE
+#setSource(Lorg/springframework/integration/core/MessageSource;)V
+#setOutputChannel(Lorg/springframework/integration/MessageChannel;)V
+#getObject()Lorg/springframework/integration/endpoint/SourcePollingChannelAdapter;
+#isAutoStartup()Z
+#getPhase()I
+#stop(Ljava/lang/Runnable;)V
-#setSource(Lorg/springframework/integration/message/MessageSource;)V
-#setOutputChannel(Lorg/springframework/integration/core/MessageChannel;)V
@2.0.3.RELEASE
+#setSendTimeout(J)V
@3.0.0.RELEASE
+#setPhase(I)V
@4.0.0.RELEASE
+#setOutputChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setOutputChannelName(Ljava/lang/String;)V
-#setOutputChannel(Lorg/springframework/integration/MessageChannel;)V
@4.1.3.RELEASE
+#setChannelResolver(Lorg/springframework/messaging/core/DestinationResolver;)V
@5.0.0.RELEASE
+#setRole(Ljava/lang/String;)V
+#destroy()V
@5.1.7.RELEASE
-#isSingleton()Z
@5.3.9.RELEASE
+#setAutoStartup(Ljava/lang/Boolean;)V
-#setAutoStartup(Z)V
@5.4.0
+#setAutoStartup(Z)V
-#setAutoStartup(Ljava/lang/Boolean;)V
@5.4.9
+#setAutoStartup(Ljava/lang/Boolean;)V
-#setAutoStartup(Z)V
@5.5.0
+#setAutoStartup(Z)V
-#setAutoStartup(Ljava/lang/Boolean;)V
@5.5.2
+#setAutoStartup(Ljava/lang/Boolean;)V
-#setAutoStartup(Z)V

+###org/springframework/integration/config/GlobalChannelInterceptorProcessor
@4.3.15.RELEASE
+#<init>()V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#afterSingletonsInstantiated()V
+#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#addMatchingInterceptors(Lorg/springframework/integration/channel/ChannelInterceptorAware;Ljava/lang/String;)V
@5.0.0.RELEASE
-###org/springframework/integration/config/GlobalChannelInterceptorProcessor

+###org/springframework/integration/config/IntegrationConverter
@4.0.0.RELEASE

+###org/springframework/integration/config/xml/AbstractOutboundChannelAdapterParser
@1.0.1.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/JsonToObjectTransformerParser
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/SelectorChainParser
@1.0.1.RELEASE
+#<init>()V
+#doParse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V

+###org/springframework/integration/config/xml/IntegrationManagementParser
@4.2.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/AbstractCorrelatingMessageHandlerParser
@2.1.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/TransformerParser
@1.0.1.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/MapToObjectTransformerParser
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/GlobalChannelInterceptorParser
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/EnricherParser
@2.1.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/SyslogToMapTransformerParser
@2.2.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/AbstractTransformerParser
@1.0.1.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/RetryAdviceParser
@4.0.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/HeaderValueRouterParser
@1.0.3.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/SpelFunctionParser
@3.0.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/DefaultOutboundChannelAdapterParser
@2.1.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/IntegrationNamespaceUtils
@1.0.1.RELEASE
+#<init>()V
+#setValueIfAttributeDefined(Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;Lorg/w3c/dom/Element;Ljava/lang/String;Ljava/lang/String;)V
+#setValueIfAttributeDefined(Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;Lorg/w3c/dom/Element;Ljava/lang/String;)V
+#setReferenceIfAttributeDefined(Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;Lorg/w3c/dom/Element;Ljava/lang/String;Ljava/lang/String;)V
+#setReferenceIfAttributeDefined(Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;Lorg/w3c/dom/Element;Ljava/lang/String;)V
+#configurePollerMetadata(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;Lorg/springframework/beans/factory/xml/ParserContext;)V
@1.0.3.RELEASE
+#createElementDescription(Lorg/w3c/dom/Element;)Ljava/lang/String;
@2.0.0.RELEASE
+#getTextFromAttributeOrNestedElement(Lorg/w3c/dom/Element;Ljava/lang/String;Lorg/springframework/beans/factory/xml/ParserContext;)Ljava/lang/String;
+#parseInnerHandlerDefinition(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/parsing/BeanComponentDefinition;
@2.1.0.RELEASE
+#configureHeaderMapper(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;Lorg/springframework/beans/factory/xml/ParserContext;Ljava/lang/Class;Ljava/lang/String;)V
@2.2.0.RELEASE
+#setValueIfAttributeDefined(Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;Lorg/w3c/dom/Element;Ljava/lang/String;Ljava/lang/String;Z)V
+#setValueIfAttributeDefined(Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;Lorg/w3c/dom/Element;Ljava/lang/String;Z)V
+#configureTransactionAttributes(Lorg/w3c/dom/Element;)Lorg/springframework/beans/factory/config/BeanDefinition;
+#configureTransactionDefinition(Lorg/w3c/dom/Element;)Lorg/springframework/beans/factory/config/BeanDefinition;
+#generateAlias(Lorg/w3c/dom/Element;)[Ljava/lang/String;
+#configureAndSetAdviceChainIfPresent(Lorg/w3c/dom/Element;Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/config/BeanDefinition;Lorg/springframework/beans/factory/xml/ParserContext;)V
+#configureAndSetAdviceChainIfPresent(Lorg/w3c/dom/Element;Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/config/BeanDefinition;Lorg/springframework/beans/factory/xml/ParserContext;Ljava/lang/String;)V
+#configureAdviceChain(Lorg/w3c/dom/Element;Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/config/BeanDefinition;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/support/ManagedList;
+#createExpressionDefinitionFromValueOrExpression(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/w3c/dom/Element;Z)Lorg/springframework/beans/factory/support/RootBeanDefinition;
@3.0.0.RELEASE
+#setReferenceIfAttributeDefined(Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;Lorg/w3c/dom/Element;Ljava/lang/String;Ljava/lang/String;Z)V
+#setReferenceIfAttributeDefined(Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;Lorg/w3c/dom/Element;Ljava/lang/String;Z)V
+#createExpressionDefinitionFromValueOrExpression(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/w3c/dom/Element;Z)Lorg/springframework/beans/factory/config/BeanDefinition;
+#registerSpelFunctionBean(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#createExpressionDefIfAttributeDefined(Ljava/lang/String;Lorg/w3c/dom/Element;)Lorg/springframework/beans/factory/config/BeanDefinition;
+#createDirectChannel(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Ljava/lang/String;
+#autoCreateDirectChannel(Ljava/lang/String;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
-#createExpressionDefinitionFromValueOrExpression(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/w3c/dom/Element;Z)Lorg/springframework/beans/factory/support/RootBeanDefinition;
@4.0.0.RELEASE
+#checkAndConfigureFixedSubscriberChannel(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Ljava/lang/String;Ljava/lang/String;)V
-#registerSpelFunctionBean(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
-#autoCreateDirectChannel(Ljava/lang/String;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
@4.2.0.RELEASE
+#putLifecycleInRole(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/beans/factory/xml/ParserContext;)V
+#injectPropertyWithAdapter(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;Lorg/springframework/beans/BeanMetadataElement;Lorg/springframework/beans/factory/xml/ParserContext;)V
+#injectConstructorWithAdapter(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;Lorg/springframework/beans/BeanMetadataElement;Lorg/springframework/beans/factory/xml/ParserContext;)V
@4.3.0.RELEASE
+#configureHeaderMapper(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;Ljava/lang/String;)V
@5.0.0.RELEASE
+#configureTransactionAttributes(Lorg/w3c/dom/Element;Z)Lorg/springframework/beans/factory/config/BeanDefinition;
+#configureAndSetAdviceChainIfPresent(Lorg/w3c/dom/Element;Lorg/w3c/dom/Element;ZLorg/springframework/beans/factory/config/BeanDefinition;Lorg/springframework/beans/factory/xml/ParserContext;)V
+#configureAndSetAdviceChainIfPresent(Lorg/w3c/dom/Element;Lorg/w3c/dom/Element;ZLorg/springframework/beans/factory/config/BeanDefinition;Lorg/springframework/beans/factory/xml/ParserContext;Ljava/lang/String;)V
+#configureAdviceChain(Lorg/w3c/dom/Element;Lorg/w3c/dom/Element;ZLorg/springframework/beans/factory/config/BeanDefinition;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/support/ManagedList;
-#putLifecycleInRole(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/beans/factory/xml/ParserContext;)V

+###org/springframework/integration/config/xml/AbstractChannelParser
@1.0.1.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/ObjectToStringTransformerParser
@1.0.1.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/HeaderFilterParser
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/ConverterParser
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/DefaultRouterParser
@1.0.3.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/PayloadSerializingTransformerParser
@1.0.1.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/AbstractOutboundGatewayParser
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/PointToPointChannelParser
@1.0.1.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/TransactionSynchronizationFactoryParser
@2.2.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/StandardHeaderEnricherParser
@1.0.1.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/SelectorParser
@1.0.4.RELEASE
+#<init>()V
+#doParse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)V

+###org/springframework/integration/config/xml/MessageHistoryParser
@2.0.0.RELEASE
+#<init>()V
@4.0.0.RELEASE
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/integration/config/xml/PublishingInterceptorParser
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/AnnotationConfigParser
@1.0.1.RELEASE
+#<init>()V
@2.0.0.RELEASE
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/integration/config/xml/StreamTransformerParser
@4.2.12.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/ControlBusParser
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/ResourceInboundChannelAdapterParser
@2.1.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/AbstractInboundGatewayParser
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/ObjectToJsonTransformerParser
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/ScatterGatherParser
@4.1.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/GlobalWireTapParser
@2.0.4.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/ServiceActivatorParser
@1.0.1.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/ChannelInterceptorParser
@1.0.1.RELEASE
+#<init>()V
+#parseInterceptors(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/support/ManagedList;

+###org/springframework/integration/config/xml/LoggingChannelAdapterParser
@1.0.1.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/ObjectToMapTransformerParser
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/BarrierParser
@4.2.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/ChainParser
@1.0.1.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/PayloadDeserializingTransformerParser
@1.0.1.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/PollerParser
@1.0.1.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/AbstractConsumerEndpointParser
@1.0.1.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/ClaimCheckInParser
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/DelayerParser
@1.0.3.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/SpelPropertyAccessorsParser
@3.0.0.RELEASE
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/integration/config/xml/BeanDefinitionRegisteringParser
@1.0.1.RELEASE
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Ljava/lang/String;

+###org/springframework/integration/config/xml/ErrorMessageExceptionTypeRouterParser
@2.0.4.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/PublishSubscribeChannelParser
@1.0.1.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/AbstractChannelAdapterParser
@1.0.1.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/WireTapParser
@1.0.1.RELEASE
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Ljava/lang/String;

+###org/springframework/integration/config/xml/AbstractRouterParser
@1.0.3.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/DefaultInboundChannelAdapterParser
@2.1.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/IntegrationNamespaceHandler
@1.0.1.RELEASE
+#<init>()V
+#init()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;
+#decorate(Lorg/w3c/dom/Node;Lorg/springframework/beans/factory/config/BeanDefinitionHolder;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinitionHolder;
@1.0.3.RELEASE
-#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;
-#decorate(Lorg/w3c/dom/Node;Lorg/springframework/beans/factory/config/BeanDefinitionHolder;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinitionHolder;

+###org/springframework/integration/config/xml/GatewayParser
@1.0.1.RELEASE
+#<init>()V
@4.0.0.RELEASE
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/integration/config/xml/AggregatorParser
@1.0.1.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/SplitterParser
@1.0.1.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/AbstractIntegrationNamespaceHandler
@1.0.3.RELEASE
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;
+#decorate(Lorg/w3c/dom/Node;Lorg/springframework/beans/factory/config/BeanDefinitionHolder;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinitionHolder;
@5.3.0.RELEASE
-#decorate(Lorg/w3c/dom/Node;Lorg/springframework/beans/factory/config/BeanDefinitionHolder;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinitionHolder;

+###org/springframework/integration/config/xml/FilterParser
@1.0.1.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/AbstractPollingInboundChannelAdapterParser
@1.0.1.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/BridgeParser
@1.0.1.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/ClaimCheckOutParser
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/ResequencerParser
@1.0.1.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/HeaderEnricherParserSupport
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/IdempotentReceiverInterceptorParser
@4.1.0.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/RecipientListRouterParser
@1.0.3.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/PayloadTypeRouterParser
@1.0.3.RELEASE
+#<init>()V

+###org/springframework/integration/config/xml/ApplicationEventMulticasterParser
@1.0.1.RELEASE
+#<init>()V

+###org/springframework/integration/config/PublisherRegistrar
@4.0.0.RELEASE
+#<init>()V
+#registerBeanDefinitions(Lorg/springframework/core/type/AnnotationMetadata;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V

+###org/springframework/integration/config/CorrelationStrategyFactoryBean
@2.0.0.RELEASE
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#getObject()Lorg/springframework/integration/aggregator/CorrelationStrategy;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#getObject()Ljava/lang/Object;
@4.2.5.RELEASE
+#<init>()V
*#<init>(Ljava/lang/Object;)V[deprecated]
*#<init>(Ljava/lang/Object;Ljava/lang/String;)V[deprecated]
+#setTarget(Ljava/lang/Object;)V
+#setMethodName(Ljava/lang/String;)V
+#afterPropertiesSet()V
@5.0.0.RELEASE
-#<init>(Ljava/lang/Object;)V[deprecated]
-#<init>(Ljava/lang/Object;Ljava/lang/String;)V[deprecated]

+###org/springframework/integration/config/SplitterFactoryBean
@1.0.1.RELEASE
+#<init>()V
@1.0.4.RELEASE
+#setSendTimeout(Ljava/lang/Long;)V
@2.0.0.RELEASE
+#isRequiresReply()Z
+#setRequiresReply(Z)V
+#setApplySequence(Z)V
+#setExpression(Lorg/springframework/expression/Expression;)V
+#setExpressionString(Ljava/lang/String;)V
+#setTargetMethodName(Ljava/lang/String;)V
+#setTargetObject(Ljava/lang/Object;)V
@2.0.5.RELEASE
+#setDelimiters(Ljava/lang/String;)V
@4.3.0.RELEASE
-#setExpression(Lorg/springframework/expression/Expression;)V
-#setExpressionString(Ljava/lang/String;)V
-#setTargetMethodName(Ljava/lang/String;)V
-#setTargetObject(Ljava/lang/Object;)V
@5.0.0.RELEASE
-#setSendTimeout(Ljava/lang/Long;)V
-#isRequiresReply()Z
-#setRequiresReply(Z)V
@5.2.0.RELEASE
+#setDiscardChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setDiscardChannelName(Ljava/lang/String;)V

+###org/springframework/integration/config/EnableMessageHistory
@4.0.0.RELEASE
+#value()[Ljava/lang/String;

+###org/springframework/integration/dsl/AggregatorSpec
@5.0.0.RELEASE
+#processor(Ljava/lang/Object;)Lorg/springframework/integration/dsl/AggregatorSpec;
+#processor(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/AggregatorSpec;
+#outputExpression(Ljava/lang/String;)Lorg/springframework/integration/dsl/AggregatorSpec;
+#outputProcessor(Lorg/springframework/integration/aggregator/MessageGroupProcessor;)Lorg/springframework/integration/dsl/AggregatorSpec;
+#expireGroupsUponCompletion(Z)Lorg/springframework/integration/dsl/AggregatorSpec;
+#processor(Ljava/lang/Object;)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
@5.2.0.RELEASE
+#headersFunction(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/AggregatorSpec;
+#getComponentsToRegister()Ljava/util/Map;

+###org/springframework/integration/dsl/MessageSourceSpec
@5.0.0.RELEASE
+#<init>()V
@5.0.1.RELEASE
+#messageHeaders(Ljava/util/Map;)Lorg/springframework/integration/dsl/MessageSourceSpec;

+###org/springframework/integration/dsl/IntegrationFlowBuilder
@5.0.0.RELEASE
+#get()Lorg/springframework/integration/dsl/StandardIntegrationFlow;
@5.2.0.RELEASE
+#toReactivePublisher()Lorg/reactivestreams/Publisher;
@5.5.6
+#toReactivePublisher(Z)Lorg/reactivestreams/Publisher;

+###org/springframework/integration/dsl/FluxMessageChannelSpec
@5.1.0.RELEASE

+###org/springframework/integration/dsl/RouterSpec
@5.0.0.RELEASE
+#resolutionRequired(Z)Lorg/springframework/integration/dsl/RouterSpec;
+#dynamicChannelLimit(I)Lorg/springframework/integration/dsl/RouterSpec;
+#prefix(Ljava/lang/String;)Lorg/springframework/integration/dsl/RouterSpec;
+#suffix(Ljava/lang/String;)Lorg/springframework/integration/dsl/RouterSpec;
+#channelMapping(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/RouterSpec;
+#subFlowMapping(Ljava/lang/Object;Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/RouterSpec;
+#getComponentsToRegister()Ljava/util/Map;
@5.2.0.RELEASE
+#noChannelKeyFallback()Lorg/springframework/integration/dsl/RouterSpec;
+#channelMapping(Ljava/lang/Object;Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/RouterSpec;
@6.0.0
*#noChannelKeyFallback()Lorg/springframework/integration/dsl/RouterSpec;[deprecated]
+#channelKeyFallback(Z)Lorg/springframework/integration/dsl/RouterSpec;
+#defaultOutputToParentFlow()Lorg/springframework/integration/dsl/RouterSpec;
+#defaultOutputToParentFlow()Lorg/springframework/integration/dsl/AbstractRouterSpec;

+###org/springframework/integration/dsl/IntegrationFlowAdapter
@5.0.0.RELEASE
+#<init>()V
+#configure(Lorg/springframework/integration/dsl/IntegrationFlowDefinition;)V
+#start()V
+#stop(Ljava/lang/Runnable;)V
+#stop()V
+#isRunning()Z
+#isAutoStartup()Z
+#getPhase()I
@5.0.4.RELEASE
+#getInputChannel()Lorg/springframework/messaging/MessageChannel;
@5.5.4
+#getIntegrationComponents()Ljava/util/Map;

+###org/springframework/integration/dsl/MessageChannelSpec
@5.1.0.RELEASE
+#datatype([Ljava/lang/Class;)Lorg/springframework/integration/dsl/MessageChannelSpec;
+#interceptor([Lorg/springframework/messaging/support/ChannelInterceptor;)Lorg/springframework/integration/dsl/MessageChannelSpec;
+#wireTap(Ljava/lang/String;)Lorg/springframework/integration/dsl/MessageChannelSpec;
+#wireTap(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/MessageChannelSpec;
+#wireTap(Lorg/springframework/integration/dsl/WireTapSpec;)Lorg/springframework/integration/dsl/MessageChannelSpec;
+#messageConverter(Lorg/springframework/messaging/converter/MessageConverter;)Lorg/springframework/integration/dsl/MessageChannelSpec;
+#getComponentsToRegister()Ljava/util/Map;

+###org/springframework/integration/dsl/support/MessageChannelReference
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#send(Lorg/springframework/messaging/Message;)Z
+#send(Lorg/springframework/messaging/Message;J)Z

+###org/springframework/integration/dsl/support/FixedSubscriberChannelPrototype
@5.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#send(Lorg/springframework/messaging/Message;)Z
+#send(Lorg/springframework/messaging/Message;J)Z
+#toString()Ljava/lang/String;

+###org/springframework/integration/dsl/ConsumerEndpointSpec
@5.0.0.RELEASE
+#phase(I)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
+#autoStartup(Z)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
+#poller(Lorg/springframework/integration/scheduling/PollerMetadata;)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
+#role(Ljava/lang/String;)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
+#taskScheduler(Lorg/springframework/scheduling/TaskScheduler;)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
+#advice([Lorg/aopalliance/aop/Advice;)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
+#transactional(Lorg/springframework/transaction/PlatformTransactionManager;)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
+#transactional(Lorg/springframework/transaction/PlatformTransactionManager;Z)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
+#transactional(Lorg/springframework/transaction/interceptor/TransactionInterceptor;)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
+#transactional()Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
+#transactional(Z)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
+#requiresReply(Z)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
+#sendTimeout(J)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
+#order(I)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
+#async(Z)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
+#notPropagatedHeaders([Ljava/lang/String;)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
+#role(Ljava/lang/String;)Lorg/springframework/integration/dsl/EndpointSpec;
+#autoStartup(Z)Lorg/springframework/integration/dsl/EndpointSpec;
+#phase(I)Lorg/springframework/integration/dsl/EndpointSpec;
+#poller(Lorg/springframework/integration/scheduling/PollerMetadata;)Lorg/springframework/integration/dsl/EndpointSpec;
@5.2.5.RELEASE
*#transactional(Lorg/springframework/transaction/PlatformTransactionManager;)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;[deprecated]
+#transactional(Lorg/springframework/transaction/TransactionManager;)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
*#transactional(Lorg/springframework/transaction/PlatformTransactionManager;Z)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;[deprecated]
+#transactional(Lorg/springframework/transaction/TransactionManager;Z)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
@5.3.0.RELEASE
+#handleMessageAdvice([Lorg/aopalliance/intercept/MethodInterceptor;)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
+#customizeMonoReply(Ljava/util/function/BiFunction;)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
-#transactional(Lorg/springframework/transaction/PlatformTransactionManager;)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;[deprecated]
-#transactional(Lorg/springframework/transaction/PlatformTransactionManager;Z)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;[deprecated]
@5.5.0
+#reactive()Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
+#reactive(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;

+###org/springframework/integration/dsl/CorrelationHandlerSpec
@5.0.0.RELEASE
+#messageStore(Lorg/springframework/integration/store/MessageGroupStore;)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
+#sendPartialResultOnExpiry(Z)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
+#minimumTimeoutForEmptyGroups(J)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
+#groupTimeout(J)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
+#groupTimeoutExpression(Ljava/lang/String;)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
+#groupTimeout(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
+#taskScheduler(Lorg/springframework/scheduling/TaskScheduler;)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
+#discardChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
+#discardChannel(Ljava/lang/String;)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
+#processor(Ljava/lang/Object;)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
+#correlationExpression(Ljava/lang/String;)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
+#correlationStrategy(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
+#correlationStrategy(Lorg/springframework/integration/aggregator/CorrelationStrategy;)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
+#releaseExpression(Ljava/lang/String;)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
+#releaseStrategy(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
+#releaseStrategy(Lorg/springframework/integration/aggregator/ReleaseStrategy;)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
+#expireGroupsUponTimeout(Z)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
+#forceReleaseAdvice([Lorg/aopalliance/aop/Advice;)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
+#lockRegistry(Lorg/springframework/integration/support/locks/LockRegistry;)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
+#taskScheduler(Lorg/springframework/scheduling/TaskScheduler;)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
@5.1.0.RELEASE
+#popSequence(Z)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
@5.4.0
+#setExpireTimeout(J)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
+#setExpireDuration(Ljava/time/Duration;)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
@5.5.0
*#setExpireTimeout(J)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;[deprecated]
+#expireTimeout(J)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
*#setExpireDuration(Ljava/time/Duration;)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;[deprecated]
+#expireDuration(Ljava/time/Duration;)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
+#releaseLockBeforeSend(Z)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
+#groupConditionSupplier(Ljava/util/function/BiFunction;)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;
@6.0.0
-#setExpireTimeout(J)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;[deprecated]
-#setExpireDuration(Ljava/time/Duration;)Lorg/springframework/integration/dsl/CorrelationHandlerSpec;[deprecated]

+###org/springframework/integration/dsl/IntegrationFlows
@5.0.0.RELEASE
+#from(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Ljava/lang/String;Z)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Lorg/springframework/integration/dsl/channel/MessageChannelSpec;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Lorg/springframework/integration/dsl/MessageSourceSpec;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Lorg/springframework/integration/dsl/MessageSourceSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Ljava/util/function/Supplier;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Ljava/util/function/Supplier;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Lorg/springframework/integration/core/MessageSource;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Lorg/springframework/integration/core/MessageSource;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Lorg/springframework/integration/dsl/MessageProducerSpec;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Lorg/springframework/integration/endpoint/MessageProducerSupport;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Lorg/springframework/integration/dsl/MessagingGatewaySpec;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Lorg/springframework/integration/gateway/MessagingGatewaySupport;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Ljava/lang/Class;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Lorg/reactivestreams/Publisher;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
@5.1.0.RELEASE
+#from(Lorg/springframework/integration/dsl/MessageChannelSpec;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
-#from(Lorg/springframework/integration/dsl/channel/MessageChannelSpec;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
@5.2.0.RELEASE
*#from(Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;[deprecated]
+#from(Ljava/lang/Class;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
@5.2.1.RELEASE
*#from(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;[deprecated]
*#from(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;[deprecated]
@5.3.0.RELEASE
-#from(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;[deprecated]
-#from(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;[deprecated]
-#from(Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;[deprecated]
@5.4.0
+#fromSupplier(Ljava/util/function/Supplier;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#fromSupplier(Ljava/util/function/Supplier;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
-#from(Ljava/util/function/Supplier;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
-#from(Ljava/util/function/Supplier;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
@5.5.4
+#from(Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;

+###org/springframework/integration/dsl/LoadBalancingChannelSpec
@5.1.0.RELEASE
+#loadBalancer(Lorg/springframework/integration/dispatcher/LoadBalancingStrategy;)Lorg/springframework/integration/dsl/MessageChannelSpec;
+#failover(Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/MessageChannelSpec;
+#maxSubscribers(Ljava/lang/Integer;)Lorg/springframework/integration/dsl/MessageChannelSpec;

+###org/springframework/integration/dsl/WireTapSpec
@5.1.0.RELEASE
+#<init>(Lorg/springframework/messaging/MessageChannel;)V
+#<init>(Ljava/lang/String;)V
+#selector(Ljava/lang/String;)Lorg/springframework/integration/dsl/WireTapSpec;
+#selector(Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/WireTapSpec;
+#selector(Lorg/springframework/integration/core/MessageSelector;)Lorg/springframework/integration/dsl/WireTapSpec;
+#timeout(J)Lorg/springframework/integration/dsl/WireTapSpec;
+#getComponentsToRegister()Ljava/util/Map;

+###org/springframework/integration/dsl/QueueChannelSpec
@5.1.0.RELEASE

+###org/springframework/integration/dsl/IntegrationComponentSpec
@5.0.0.RELEASE
+#<init>()V
+#getId()Ljava/lang/String;
+#get()Ljava/lang/Object;
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@5.0.7.RELEASE
+#afterPropertiesSet()V
+#destroy()V
@5.0.9.RELEASE
-#isSingleton()Z
@5.0.12.RELEASE
+#start()V
+#stop()V
+#isRunning()Z
+#isAutoStartup()Z
+#stop(Ljava/lang/Runnable;)V
+#getPhase()I
-#getObject()Ljava/lang/Object;
-#afterPropertiesSet()V
-#destroy()V
@5.1.0.RELEASE
+#getObject()Ljava/lang/Object;
+#afterPropertiesSet()V
+#destroy()V
-#start()V
-#stop()V
-#isRunning()Z
-#isAutoStartup()Z
-#stop(Ljava/lang/Runnable;)V
-#getPhase()I
@5.1.3.RELEASE
+#start()V
+#stop()V
+#isRunning()Z
+#isAutoStartup()Z
+#stop(Ljava/lang/Runnable;)V
+#getPhase()I
-#getObject()Ljava/lang/Object;
-#afterPropertiesSet()V
-#destroy()V

+###org/springframework/integration/dsl/RecipientListRouterSpec
@5.0.0.RELEASE
+#recipient(Ljava/lang/String;)Lorg/springframework/integration/dsl/RecipientListRouterSpec;
+#recipient(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/RecipientListRouterSpec;
+#recipient(Ljava/lang/String;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/RecipientListRouterSpec;
+#recipientMessageSelector(Ljava/lang/String;Lorg/springframework/integration/core/MessageSelector;)Lorg/springframework/integration/dsl/RecipientListRouterSpec;
+#recipient(Ljava/lang/String;Lorg/springframework/integration/core/GenericSelector;)Lorg/springframework/integration/dsl/RecipientListRouterSpec;
+#recipient(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/RecipientListRouterSpec;
+#recipient(Lorg/springframework/messaging/MessageChannel;Ljava/lang/String;)Lorg/springframework/integration/dsl/RecipientListRouterSpec;
+#recipient(Lorg/springframework/messaging/MessageChannel;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/RecipientListRouterSpec;
+#recipientMessageSelector(Lorg/springframework/messaging/MessageChannel;Lorg/springframework/integration/core/MessageSelector;)Lorg/springframework/integration/dsl/RecipientListRouterSpec;
+#recipient(Lorg/springframework/messaging/MessageChannel;Lorg/springframework/integration/core/GenericSelector;)Lorg/springframework/integration/dsl/RecipientListRouterSpec;
+#recipientMessageSelectorFlow(Lorg/springframework/integration/core/MessageSelector;Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/RecipientListRouterSpec;
+#recipientFlow(Lorg/springframework/integration/core/GenericSelector;Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/RecipientListRouterSpec;
+#recipientFlow(Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/RecipientListRouterSpec;
+#recipientFlow(Ljava/lang/String;Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/RecipientListRouterSpec;
+#recipientFlow(Lorg/springframework/expression/Expression;Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/RecipientListRouterSpec;

+###org/springframework/integration/dsl/DirectChannelSpec
@5.1.0.RELEASE
@5.3.0.RELEASE
+#<init>()V

+###org/springframework/integration/dsl/ExecutorChannelSpec
@5.1.0.RELEASE

+###org/springframework/integration/dsl/Transformers
@5.0.0.RELEASE
+#<init>()V
+#objectToString()Lorg/springframework/integration/transformer/ObjectToStringTransformer;
+#objectToString(Ljava/lang/String;)Lorg/springframework/integration/transformer/ObjectToStringTransformer;
+#toMap()Lorg/springframework/integration/transformer/ObjectToMapTransformer;
+#toMap(Z)Lorg/springframework/integration/transformer/ObjectToMapTransformer;
+#toMap(Lorg/springframework/integration/support/json/JsonObjectMapper;)Lorg/springframework/integration/transformer/ObjectToMapTransformer;
+#toMap(Lorg/springframework/integration/support/json/JsonObjectMapper;Z)Lorg/springframework/integration/transformer/ObjectToMapTransformer;
+#fromMap(Ljava/lang/Class;)Lorg/springframework/integration/transformer/MapToObjectTransformer;
+#fromMap(Ljava/lang/String;)Lorg/springframework/integration/transformer/MapToObjectTransformer;
+#toJson()Lorg/springframework/integration/json/ObjectToJsonTransformer;
+#toJson(Lorg/springframework/integration/support/json/JsonObjectMapper;)Lorg/springframework/integration/json/ObjectToJsonTransformer;
+#toJson(Lorg/springframework/integration/support/json/JsonObjectMapper;Lorg/springframework/integration/json/ObjectToJsonTransformer$ResultType;)Lorg/springframework/integration/json/ObjectToJsonTransformer;
+#toJson(Ljava/lang/String;)Lorg/springframework/integration/json/ObjectToJsonTransformer;
+#toJson(Lorg/springframework/integration/support/json/JsonObjectMapper;Ljava/lang/String;)Lorg/springframework/integration/json/ObjectToJsonTransformer;
+#toJson(Lorg/springframework/integration/json/ObjectToJsonTransformer$ResultType;Ljava/lang/String;)Lorg/springframework/integration/json/ObjectToJsonTransformer;
+#toJson(Lorg/springframework/integration/support/json/JsonObjectMapper;Lorg/springframework/integration/json/ObjectToJsonTransformer$ResultType;Ljava/lang/String;)Lorg/springframework/integration/json/ObjectToJsonTransformer;
+#fromJson()Lorg/springframework/integration/json/JsonToObjectTransformer;
+#fromJson(Ljava/lang/Class;)Lorg/springframework/integration/json/JsonToObjectTransformer;
+#fromJson(Lorg/springframework/integration/support/json/JsonObjectMapper;)Lorg/springframework/integration/json/JsonToObjectTransformer;
+#fromJson(Ljava/lang/Class;Lorg/springframework/integration/support/json/JsonObjectMapper;)Lorg/springframework/integration/json/JsonToObjectTransformer;
+#serializer()Lorg/springframework/integration/transformer/PayloadSerializingTransformer;
+#serializer(Lorg/springframework/core/serializer/Serializer;)Lorg/springframework/integration/transformer/PayloadSerializingTransformer;
+#deserializer([Ljava/lang/String;)Lorg/springframework/integration/transformer/PayloadDeserializingTransformer;
+#deserializer(Lorg/springframework/core/serializer/Deserializer;[Ljava/lang/String;)Lorg/springframework/integration/transformer/PayloadDeserializingTransformer;
+#converter(Lorg/springframework/core/convert/converter/Converter;)Lorg/springframework/integration/transformer/PayloadTypeConvertingTransformer;
+#syslogToMap()Lorg/springframework/integration/transformer/SyslogToMapTransformer;
+#encoding(Lorg/springframework/integration/codec/Codec;)Lorg/springframework/integration/transformer/EncodingPayloadTransformer;
+#decoding(Lorg/springframework/integration/codec/Codec;Ljava/lang/Class;)Lorg/springframework/integration/transformer/DecodingTransformer;
+#decoding(Lorg/springframework/integration/codec/Codec;Ljava/lang/String;)Lorg/springframework/integration/transformer/DecodingTransformer;
+#decoding(Lorg/springframework/integration/codec/Codec;Ljava/util/function/Function;)Lorg/springframework/integration/transformer/DecodingTransformer;
+#decoding(Lorg/springframework/integration/codec/Codec;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/transformer/DecodingTransformer;
+#fromStream()Lorg/springframework/integration/transformer/StreamTransformer;
+#fromStream(Ljava/lang/String;)Lorg/springframework/integration/transformer/StreamTransformer;
@5.0.9.RELEASE
+#toJson(Lorg/springframework/integration/json/ObjectToJsonTransformer$ResultType;)Lorg/springframework/integration/json/ObjectToJsonTransformer;
@5.2.0.RELEASE
+#fromJson(Lorg/springframework/core/ResolvableType;)Lorg/springframework/integration/json/JsonToObjectTransformer;
+#fromJson(Lorg/springframework/core/ResolvableType;Lorg/springframework/integration/support/json/JsonObjectMapper;)Lorg/springframework/integration/json/JsonToObjectTransformer;

+###org/springframework/integration/dsl/context/StandardIntegrationFlowContext
@5.1.0.RELEASE
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#registration(Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/context/StandardIntegrationFlowContext$StandardIntegrationFlowRegistrationBuilder;
+#isUseIdAsPrefix(Ljava/lang/String;)Z
+#getRegistrationById(Ljava/lang/String;)Lorg/springframework/integration/dsl/context/IntegrationFlowContext$IntegrationFlowRegistration;
+#remove(Ljava/lang/String;)V
+#messagingTemplateFor(Ljava/lang/String;)Lorg/springframework/integration/core/MessagingTemplate;
+#getRegistry()Ljava/util/Map;
+#registration(Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/context/IntegrationFlowContext$IntegrationFlowRegistrationBuilder;

+###org/springframework/integration/dsl/context/IntegrationFlowContext
@5.0.0.RELEASE
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#registration(Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/context/IntegrationFlowContext$IntegrationFlowRegistrationBuilder;
+#getRegistrationById(Ljava/lang/String;)Lorg/springframework/integration/dsl/context/IntegrationFlowRegistration;
+#remove(Ljava/lang/String;)V
+#messagingTemplateFor(Ljava/lang/String;)Lorg/springframework/integration/core/MessagingTemplate;
+#getRegistry()Ljava/util/Map;
@5.0.6.RELEASE
+#isUseIdAsPrefix(Ljava/lang/String;)Z
@5.1.0.RELEASE
+#getRegistrationById(Ljava/lang/String;)Lorg/springframework/integration/dsl/context/IntegrationFlowContext$IntegrationFlowRegistration;
-#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
-#getRegistrationById(Ljava/lang/String;)Lorg/springframework/integration/dsl/context/IntegrationFlowRegistration;

+###org/springframework/integration/dsl/context/IntegrationFlowBeanPostProcessor
@5.1.0.RELEASE
+#<init>()V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#afterSingletonsInstantiated()V

+###org/springframework/integration/dsl/context/DslIntegrationConfigurationInitializer
@5.1.0.RELEASE
+#<init>()V
+#initialize(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V

+###org/springframework/integration/dsl/context/IntegrationFlowContext$IntegrationFlowRegistrationBuilder
@5.0.0.RELEASE
+#id(Ljava/lang/String;)Lorg/springframework/integration/dsl/context/IntegrationFlowContext$IntegrationFlowRegistrationBuilder;
+#autoStartup(Z)Lorg/springframework/integration/dsl/context/IntegrationFlowContext$IntegrationFlowRegistrationBuilder;
+#addBean(Ljava/lang/Object;)Lorg/springframework/integration/dsl/context/IntegrationFlowContext$IntegrationFlowRegistrationBuilder;
+#addBean(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/dsl/context/IntegrationFlowContext$IntegrationFlowRegistrationBuilder;
+#register()Lorg/springframework/integration/dsl/context/IntegrationFlowRegistration;
@5.0.6.RELEASE
+#useFlowIdAsPrefix()Lorg/springframework/integration/dsl/context/IntegrationFlowContext$IntegrationFlowRegistrationBuilder;
@5.1.0.RELEASE
+#register()Lorg/springframework/integration/dsl/context/IntegrationFlowContext$IntegrationFlowRegistration;
-#register()Lorg/springframework/integration/dsl/context/IntegrationFlowRegistration;
@5.2.0.RELEASE
+#setSource(Ljava/lang/Object;)Lorg/springframework/integration/dsl/context/IntegrationFlowContext$IntegrationFlowRegistrationBuilder;

+###org/springframework/integration/dsl/context/StandardIntegrationFlowContext$StandardIntegrationFlowRegistrationBuilder
@5.1.0.RELEASE
+#id(Ljava/lang/String;)Lorg/springframework/integration/dsl/context/StandardIntegrationFlowContext$StandardIntegrationFlowRegistrationBuilder;
+#autoStartup(Z)Lorg/springframework/integration/dsl/context/StandardIntegrationFlowContext$StandardIntegrationFlowRegistrationBuilder;
+#addBean(Ljava/lang/Object;)Lorg/springframework/integration/dsl/context/StandardIntegrationFlowContext$StandardIntegrationFlowRegistrationBuilder;
+#addBean(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/dsl/context/StandardIntegrationFlowContext$StandardIntegrationFlowRegistrationBuilder;
+#useFlowIdAsPrefix()Lorg/springframework/integration/dsl/context/IntegrationFlowContext$IntegrationFlowRegistrationBuilder;
+#register()Lorg/springframework/integration/dsl/context/IntegrationFlowContext$IntegrationFlowRegistration;
+#addBean(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/dsl/context/IntegrationFlowContext$IntegrationFlowRegistrationBuilder;
+#addBean(Ljava/lang/Object;)Lorg/springframework/integration/dsl/context/IntegrationFlowContext$IntegrationFlowRegistrationBuilder;
+#autoStartup(Z)Lorg/springframework/integration/dsl/context/IntegrationFlowContext$IntegrationFlowRegistrationBuilder;
+#id(Ljava/lang/String;)Lorg/springframework/integration/dsl/context/IntegrationFlowContext$IntegrationFlowRegistrationBuilder;
@5.2.0.RELEASE
+#setSource(Ljava/lang/Object;)Lorg/springframework/integration/dsl/context/IntegrationFlowContext$IntegrationFlowRegistrationBuilder;

+###org/springframework/integration/dsl/context/IntegrationFlowContext$IntegrationFlowRegistration
@5.1.0.RELEASE
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getIntegrationFlow()Lorg/springframework/integration/dsl/IntegrationFlow;
+#setIntegrationFlow(Lorg/springframework/integration/dsl/IntegrationFlow;)V
+#getInputChannel()Lorg/springframework/messaging/MessageChannel;
+#setIntegrationFlowContext(Lorg/springframework/integration/dsl/context/IntegrationFlowContext;)V
+#getMessagingTemplate()Lorg/springframework/integration/core/MessagingTemplate;
+#start()V
+#stop()V
+#destroy()V
@5.4.0
-#setId(Ljava/lang/String;)V
-#setIntegrationFlow(Lorg/springframework/integration/dsl/IntegrationFlow;)V
-#setIntegrationFlowContext(Lorg/springframework/integration/dsl/context/IntegrationFlowContext;)V

+###org/springframework/integration/dsl/Channels
@5.0.0.RELEASE
+#direct()Lorg/springframework/integration/dsl/channel/DirectChannelSpec;
+#direct(Ljava/lang/String;)Lorg/springframework/integration/dsl/channel/DirectChannelSpec;
+#queue()Lorg/springframework/integration/dsl/channel/QueueChannelSpec;
+#queue(Ljava/lang/String;)Lorg/springframework/integration/dsl/channel/QueueChannelSpec;
+#queue(Ljava/lang/Integer;)Lorg/springframework/integration/dsl/channel/QueueChannelSpec;
+#queue(Ljava/lang/String;Ljava/lang/Integer;)Lorg/springframework/integration/dsl/channel/QueueChannelSpec;
+#queue(Ljava/util/Queue;)Lorg/springframework/integration/dsl/channel/QueueChannelSpec;
+#queue(Ljava/lang/String;Ljava/util/Queue;)Lorg/springframework/integration/dsl/channel/QueueChannelSpec;
+#queue(Lorg/springframework/integration/store/ChannelMessageStore;Ljava/lang/Object;)Lorg/springframework/integration/dsl/channel/QueueChannelSpec$MessageStoreSpec;
+#queue(Ljava/lang/String;Lorg/springframework/integration/store/ChannelMessageStore;Ljava/lang/Object;)Lorg/springframework/integration/dsl/channel/QueueChannelSpec$MessageStoreSpec;
+#priority()Lorg/springframework/integration/dsl/channel/PriorityChannelSpec;
+#priority(Ljava/lang/String;)Lorg/springframework/integration/dsl/channel/PriorityChannelSpec;
+#priority(Ljava/lang/String;Lorg/springframework/integration/store/PriorityCapableChannelMessageStore;Ljava/lang/Object;)Lorg/springframework/integration/dsl/channel/PriorityChannelSpec;
+#rendezvous()Lorg/springframework/integration/dsl/channel/RendezvousChannelSpec;
+#priority(Lorg/springframework/integration/store/PriorityCapableChannelMessageStore;Ljava/lang/Object;)Lorg/springframework/integration/dsl/channel/PriorityChannelSpec;
+#rendezvous(Ljava/lang/String;)Lorg/springframework/integration/dsl/channel/RendezvousChannelSpec;
+#publishSubscribe()Lorg/springframework/integration/dsl/channel/PublishSubscribeChannelSpec;
+#publishSubscribe(Ljava/util/concurrent/Executor;)Lorg/springframework/integration/dsl/channel/PublishSubscribeChannelSpec;
+#publishSubscribe(Ljava/lang/String;Ljava/util/concurrent/Executor;)Lorg/springframework/integration/dsl/channel/PublishSubscribeChannelSpec;
+#publishSubscribe(Ljava/lang/String;)Lorg/springframework/integration/dsl/channel/PublishSubscribeChannelSpec;
+#executor(Ljava/util/concurrent/Executor;)Lorg/springframework/integration/dsl/channel/ExecutorChannelSpec;
+#executor(Ljava/lang/String;Ljava/util/concurrent/Executor;)Lorg/springframework/integration/dsl/channel/ExecutorChannelSpec;
+#flux()Lorg/springframework/integration/dsl/channel/FluxMessageChannelSpec;
+#flux(Ljava/lang/String;)Lorg/springframework/integration/dsl/channel/FluxMessageChannelSpec;
@5.1.0.RELEASE
+#direct()Lorg/springframework/integration/dsl/DirectChannelSpec;
+#direct(Ljava/lang/String;)Lorg/springframework/integration/dsl/DirectChannelSpec;
+#queue()Lorg/springframework/integration/dsl/QueueChannelSpec;
+#queue(Ljava/lang/String;)Lorg/springframework/integration/dsl/QueueChannelSpec;
+#queue(Ljava/lang/Integer;)Lorg/springframework/integration/dsl/QueueChannelSpec;
+#queue(Ljava/lang/String;Ljava/lang/Integer;)Lorg/springframework/integration/dsl/QueueChannelSpec;
+#queue(Ljava/util/Queue;)Lorg/springframework/integration/dsl/QueueChannelSpec;
+#queue(Ljava/lang/String;Ljava/util/Queue;)Lorg/springframework/integration/dsl/QueueChannelSpec;
+#queue(Lorg/springframework/integration/store/ChannelMessageStore;Ljava/lang/Object;)Lorg/springframework/integration/dsl/QueueChannelSpec$MessageStoreSpec;
+#queue(Ljava/lang/String;Lorg/springframework/integration/store/ChannelMessageStore;Ljava/lang/Object;)Lorg/springframework/integration/dsl/QueueChannelSpec$MessageStoreSpec;
+#priority()Lorg/springframework/integration/dsl/PriorityChannelSpec;
+#priority(Ljava/lang/String;)Lorg/springframework/integration/dsl/PriorityChannelSpec;
+#priority(Ljava/lang/String;Lorg/springframework/integration/store/PriorityCapableChannelMessageStore;Ljava/lang/Object;)Lorg/springframework/integration/dsl/PriorityChannelSpec;
+#rendezvous()Lorg/springframework/integration/dsl/RendezvousChannelSpec;
+#priority(Lorg/springframework/integration/store/PriorityCapableChannelMessageStore;Ljava/lang/Object;)Lorg/springframework/integration/dsl/PriorityChannelSpec;
+#rendezvous(Ljava/lang/String;)Lorg/springframework/integration/dsl/RendezvousChannelSpec;
+#publishSubscribe()Lorg/springframework/integration/dsl/PublishSubscribeChannelSpec;
+#publishSubscribe(Ljava/util/concurrent/Executor;)Lorg/springframework/integration/dsl/PublishSubscribeChannelSpec;
+#publishSubscribe(Ljava/lang/String;Ljava/util/concurrent/Executor;)Lorg/springframework/integration/dsl/PublishSubscribeChannelSpec;
+#publishSubscribe(Ljava/lang/String;)Lorg/springframework/integration/dsl/PublishSubscribeChannelSpec;
+#executor(Ljava/util/concurrent/Executor;)Lorg/springframework/integration/dsl/ExecutorChannelSpec;
+#executor(Ljava/lang/String;Ljava/util/concurrent/Executor;)Lorg/springframework/integration/dsl/ExecutorChannelSpec;
+#flux()Lorg/springframework/integration/dsl/FluxMessageChannelSpec;
+#flux(Ljava/lang/String;)Lorg/springframework/integration/dsl/FluxMessageChannelSpec;
-#direct()Lorg/springframework/integration/dsl/channel/DirectChannelSpec;
-#direct(Ljava/lang/String;)Lorg/springframework/integration/dsl/channel/DirectChannelSpec;
-#queue()Lorg/springframework/integration/dsl/channel/QueueChannelSpec;
-#queue(Ljava/lang/String;)Lorg/springframework/integration/dsl/channel/QueueChannelSpec;
-#queue(Ljava/lang/Integer;)Lorg/springframework/integration/dsl/channel/QueueChannelSpec;
-#queue(Ljava/lang/String;Ljava/lang/Integer;)Lorg/springframework/integration/dsl/channel/QueueChannelSpec;
-#queue(Ljava/util/Queue;)Lorg/springframework/integration/dsl/channel/QueueChannelSpec;
-#queue(Ljava/lang/String;Ljava/util/Queue;)Lorg/springframework/integration/dsl/channel/QueueChannelSpec;
-#queue(Lorg/springframework/integration/store/ChannelMessageStore;Ljava/lang/Object;)Lorg/springframework/integration/dsl/channel/QueueChannelSpec$MessageStoreSpec;
-#queue(Ljava/lang/String;Lorg/springframework/integration/store/ChannelMessageStore;Ljava/lang/Object;)Lorg/springframework/integration/dsl/channel/QueueChannelSpec$MessageStoreSpec;
-#priority()Lorg/springframework/integration/dsl/channel/PriorityChannelSpec;
-#priority(Ljava/lang/String;)Lorg/springframework/integration/dsl/channel/PriorityChannelSpec;
-#priority(Ljava/lang/String;Lorg/springframework/integration/store/PriorityCapableChannelMessageStore;Ljava/lang/Object;)Lorg/springframework/integration/dsl/channel/PriorityChannelSpec;
-#rendezvous()Lorg/springframework/integration/dsl/channel/RendezvousChannelSpec;
-#priority(Lorg/springframework/integration/store/PriorityCapableChannelMessageStore;Ljava/lang/Object;)Lorg/springframework/integration/dsl/channel/PriorityChannelSpec;
-#rendezvous(Ljava/lang/String;)Lorg/springframework/integration/dsl/channel/RendezvousChannelSpec;
-#publishSubscribe()Lorg/springframework/integration/dsl/channel/PublishSubscribeChannelSpec;
-#publishSubscribe(Ljava/util/concurrent/Executor;)Lorg/springframework/integration/dsl/channel/PublishSubscribeChannelSpec;
-#publishSubscribe(Ljava/lang/String;Ljava/util/concurrent/Executor;)Lorg/springframework/integration/dsl/channel/PublishSubscribeChannelSpec;
-#publishSubscribe(Ljava/lang/String;)Lorg/springframework/integration/dsl/channel/PublishSubscribeChannelSpec;
-#executor(Ljava/util/concurrent/Executor;)Lorg/springframework/integration/dsl/channel/ExecutorChannelSpec;
-#executor(Ljava/lang/String;Ljava/util/concurrent/Executor;)Lorg/springframework/integration/dsl/channel/ExecutorChannelSpec;
-#flux()Lorg/springframework/integration/dsl/channel/FluxMessageChannelSpec;
-#flux(Ljava/lang/String;)Lorg/springframework/integration/dsl/channel/FluxMessageChannelSpec;
@5.4.3
+#publishSubscribe(Z)Lorg/springframework/integration/dsl/PublishSubscribeChannelSpec;
+#publishSubscribe(Ljava/util/concurrent/Executor;Z)Lorg/springframework/integration/dsl/PublishSubscribeChannelSpec;
+#publishSubscribe(Ljava/lang/String;Ljava/util/concurrent/Executor;Z)Lorg/springframework/integration/dsl/PublishSubscribeChannelSpec;
+#publishSubscribe(Ljava/lang/String;Z)Lorg/springframework/integration/dsl/PublishSubscribeChannelSpec;

+###org/springframework/integration/dsl/Pollers
@5.0.0.RELEASE
+#trigger(Lorg/springframework/scheduling/Trigger;)Lorg/springframework/integration/dsl/PollerSpec;
+#fixedRate(J)Lorg/springframework/integration/dsl/PollerSpec;
+#fixedRate(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/integration/dsl/PollerSpec;
+#fixedRate(JJ)Lorg/springframework/integration/dsl/PollerSpec;
+#fixedRate(JLjava/util/concurrent/TimeUnit;J)Lorg/springframework/integration/dsl/PollerSpec;
+#fixedDelay(J)Lorg/springframework/integration/dsl/PollerSpec;
+#fixedDelay(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/integration/dsl/PollerSpec;
+#fixedDelay(JJ)Lorg/springframework/integration/dsl/PollerSpec;
+#fixedDelay(JLjava/util/concurrent/TimeUnit;J)Lorg/springframework/integration/dsl/PollerSpec;
+#cron(Ljava/lang/String;)Lorg/springframework/integration/dsl/PollerSpec;
+#cron(Ljava/lang/String;Ljava/util/TimeZone;)Lorg/springframework/integration/dsl/PollerSpec;
@5.1.3.RELEASE
+#fixedRate(Ljava/time/Duration;)Lorg/springframework/integration/dsl/PollerSpec;
+#fixedRate(Ljava/time/Duration;Ljava/time/Duration;)Lorg/springframework/integration/dsl/PollerSpec;
+#fixedDelay(Ljava/time/Duration;)Lorg/springframework/integration/dsl/PollerSpec;
+#fixedDelay(Ljava/time/Duration;Ljava/time/Duration;)Lorg/springframework/integration/dsl/PollerSpec;
@6.0.0
*#fixedRate(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/integration/dsl/PollerSpec;[deprecated]
*#fixedRate(JLjava/util/concurrent/TimeUnit;J)Lorg/springframework/integration/dsl/PollerSpec;[deprecated]
*#fixedDelay(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/integration/dsl/PollerSpec;[deprecated]
*#fixedDelay(JLjava/util/concurrent/TimeUnit;J)Lorg/springframework/integration/dsl/PollerSpec;[deprecated]

+###org/springframework/integration/dsl/ComponentsRegistration
@5.0.0.RELEASE
+#getComponentsToRegister()Ljava/util/Map;

+###org/springframework/integration/dsl/AbstractRouterSpec
@5.0.0.RELEASE
+#ignoreSendFailures(Z)Lorg/springframework/integration/dsl/AbstractRouterSpec;
+#applySequence(Z)Lorg/springframework/integration/dsl/AbstractRouterSpec;
+#defaultOutputChannel(Ljava/lang/String;)Lorg/springframework/integration/dsl/AbstractRouterSpec;
+#defaultOutputChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/AbstractRouterSpec;
+#defaultSubFlowMapping(Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/AbstractRouterSpec;
+#defaultOutputToParentFlow()Lorg/springframework/integration/dsl/AbstractRouterSpec;

+###org/springframework/integration/dsl/PollerSpec
@5.0.0.RELEASE
+#transactionSynchronizationFactory(Lorg/springframework/integration/transaction/TransactionSynchronizationFactory;)Lorg/springframework/integration/dsl/PollerSpec;
+#errorHandler(Lorg/springframework/util/ErrorHandler;)Lorg/springframework/integration/dsl/PollerSpec;
+#errorChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/PollerSpec;
+#errorChannel(Ljava/lang/String;)Lorg/springframework/integration/dsl/PollerSpec;
+#maxMessagesPerPoll(J)Lorg/springframework/integration/dsl/PollerSpec;
+#receiveTimeout(J)Lorg/springframework/integration/dsl/PollerSpec;
+#advice([Lorg/aopalliance/aop/Advice;)Lorg/springframework/integration/dsl/PollerSpec;
+#transactional(Lorg/springframework/transaction/PlatformTransactionManager;)Lorg/springframework/integration/dsl/PollerSpec;
+#transactional()Lorg/springframework/integration/dsl/PollerSpec;
+#transactional(Lorg/springframework/transaction/interceptor/TransactionInterceptor;)Lorg/springframework/integration/dsl/PollerSpec;
+#taskExecutor(Ljava/util/concurrent/Executor;)Lorg/springframework/integration/dsl/PollerSpec;
+#sendTimeout(J)Lorg/springframework/integration/dsl/PollerSpec;
+#getComponentsToRegister()Ljava/util/Map;
@5.2.5.RELEASE
*#transactional(Lorg/springframework/transaction/PlatformTransactionManager;)Lorg/springframework/integration/dsl/PollerSpec;[deprecated]
+#transactional(Lorg/springframework/transaction/TransactionManager;)Lorg/springframework/integration/dsl/PollerSpec;
@5.3.0.RELEASE
-#transactional(Lorg/springframework/transaction/PlatformTransactionManager;)Lorg/springframework/integration/dsl/PollerSpec;[deprecated]

+###org/springframework/integration/dsl/IntegrationFlow
@5.0.0.RELEASE
+#configure(Lorg/springframework/integration/dsl/IntegrationFlowDefinition;)V
@5.0.4.RELEASE
+#getInputChannel()Lorg/springframework/messaging/MessageChannel;
@5.5.4
+#getIntegrationComponents()Ljava/util/Map;
@6.0.0
+#from(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Lorg/springframework/integration/dsl/MessageChannelSpec;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Ljava/lang/String;Z)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Lorg/springframework/integration/dsl/MessageSourceSpec;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Lorg/springframework/integration/dsl/MessageSourceSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#fromSupplier(Ljava/util/function/Supplier;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#fromSupplier(Ljava/util/function/Supplier;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Lorg/springframework/integration/core/MessageSource;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Lorg/springframework/integration/core/MessageSource;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Lorg/springframework/integration/dsl/MessageProducerSpec;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Lorg/springframework/integration/endpoint/MessageProducerSupport;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Lorg/springframework/integration/dsl/MessagingGatewaySpec;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Lorg/springframework/integration/gateway/MessagingGatewaySupport;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Ljava/lang/Class;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Ljava/lang/Class;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Lorg/reactivestreams/Publisher;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;
+#from(Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/IntegrationFlowBuilder;

+###org/springframework/integration/dsl/MessageHandlerSpec
@5.0.0.RELEASE
+#<init>()V

+###org/springframework/integration/dsl/SourcePollingChannelAdapterSpec
@5.0.0.RELEASE
+#phase(I)Lorg/springframework/integration/dsl/SourcePollingChannelAdapterSpec;
+#autoStartup(Z)Lorg/springframework/integration/dsl/SourcePollingChannelAdapterSpec;
+#poller(Lorg/springframework/integration/scheduling/PollerMetadata;)Lorg/springframework/integration/dsl/SourcePollingChannelAdapterSpec;
+#role(Ljava/lang/String;)Lorg/springframework/integration/dsl/SourcePollingChannelAdapterSpec;
+#role(Ljava/lang/String;)Lorg/springframework/integration/dsl/EndpointSpec;
+#autoStartup(Z)Lorg/springframework/integration/dsl/EndpointSpec;
+#phase(I)Lorg/springframework/integration/dsl/EndpointSpec;
+#poller(Lorg/springframework/integration/scheduling/PollerMetadata;)Lorg/springframework/integration/dsl/EndpointSpec;

+###org/springframework/integration/dsl/SplitterEndpointSpec
@5.0.0.RELEASE
+#applySequence(Z)Lorg/springframework/integration/dsl/SplitterEndpointSpec;
+#delimiters(Ljava/lang/String;)Lorg/springframework/integration/dsl/SplitterEndpointSpec;
@5.2.0.RELEASE
+#discardChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/SplitterEndpointSpec;
+#discardChannel(Ljava/lang/String;)Lorg/springframework/integration/dsl/SplitterEndpointSpec;
+#discardFlow(Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/SplitterEndpointSpec;

+###org/springframework/integration/dsl/ScatterGatherSpec
@5.0.0.RELEASE
+#gatherChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/ScatterGatherSpec;
+#gatherTimeout(J)Lorg/springframework/integration/dsl/ScatterGatherSpec;
@5.1.3.RELEASE
+#errorChannel(Ljava/lang/String;)Lorg/springframework/integration/dsl/ScatterGatherSpec;

+###org/springframework/integration/dsl/MessagingGatewaySpec
@5.0.0.RELEASE
+#<init>(Lorg/springframework/integration/gateway/MessagingGatewaySupport;)V
+#id(Ljava/lang/String;)Lorg/springframework/integration/dsl/MessagingGatewaySpec;
+#phase(I)Lorg/springframework/integration/dsl/MessagingGatewaySpec;
+#autoStartup(Z)Lorg/springframework/integration/dsl/MessagingGatewaySpec;
+#replyChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/MessagingGatewaySpec;
+#replyChannel(Ljava/lang/String;)Lorg/springframework/integration/dsl/MessagingGatewaySpec;
+#requestChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/MessagingGatewaySpec;
+#requestChannel(Ljava/lang/String;)Lorg/springframework/integration/dsl/MessagingGatewaySpec;
+#errorChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/MessagingGatewaySpec;
+#errorChannel(Ljava/lang/String;)Lorg/springframework/integration/dsl/MessagingGatewaySpec;
+#requestTimeout(J)Lorg/springframework/integration/dsl/MessagingGatewaySpec;
+#replyTimeout(J)Lorg/springframework/integration/dsl/MessagingGatewaySpec;
+#requestMapper(Lorg/springframework/integration/mapping/InboundMessageMapper;)Lorg/springframework/integration/dsl/MessagingGatewaySpec;
+#replyMapper(Lorg/springframework/integration/mapping/OutboundMessageMapper;)Lorg/springframework/integration/dsl/MessagingGatewaySpec;
+#id(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationComponentSpec;
@5.0.2.RELEASE
+#shouldTrack(Z)Lorg/springframework/integration/dsl/MessagingGatewaySpec;
@5.2.2.RELEASE
+#errorOnTimeout(Z)Lorg/springframework/integration/dsl/MessagingGatewaySpec;

+###org/springframework/integration/dsl/PriorityChannelSpec
@5.1.0.RELEASE
+#capacity(I)Lorg/springframework/integration/dsl/PriorityChannelSpec;
+#comparator(Ljava/util/Comparator;)Lorg/springframework/integration/dsl/PriorityChannelSpec;
+#messageStore(Lorg/springframework/integration/store/PriorityCapableChannelMessageStore;Ljava/lang/Object;)Lorg/springframework/integration/dsl/PriorityChannelSpec;

+###org/springframework/integration/dsl/MessageProducerSpec
@5.0.0.RELEASE
+#<init>(Lorg/springframework/integration/endpoint/MessageProducerSupport;)V
+#id(Ljava/lang/String;)Lorg/springframework/integration/dsl/MessageProducerSpec;
+#phase(I)Lorg/springframework/integration/dsl/MessageProducerSpec;
+#autoStartup(Z)Lorg/springframework/integration/dsl/MessageProducerSpec;
+#outputChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/MessageProducerSpec;
+#outputChannel(Ljava/lang/String;)Lorg/springframework/integration/dsl/MessageProducerSpec;
+#errorChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/MessageProducerSpec;
+#errorChannel(Ljava/lang/String;)Lorg/springframework/integration/dsl/MessageProducerSpec;
+#id(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationComponentSpec;
@5.0.2.RELEASE
+#sendTimeout(J)Lorg/springframework/integration/dsl/MessageProducerSpec;
+#shouldTrack(Z)Lorg/springframework/integration/dsl/MessageProducerSpec;
+#errorMessageStrategy(Lorg/springframework/integration/support/ErrorMessageStrategy;)Lorg/springframework/integration/dsl/MessageProducerSpec;

+###org/springframework/integration/dsl/EnricherSpec
@5.0.0.RELEASE
+#requestChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/EnricherSpec;
+#requestChannel(Ljava/lang/String;)Lorg/springframework/integration/dsl/EnricherSpec;
+#replyChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/EnricherSpec;
+#replyChannel(Ljava/lang/String;)Lorg/springframework/integration/dsl/EnricherSpec;
+#requestTimeout(Ljava/lang/Long;)Lorg/springframework/integration/dsl/EnricherSpec;
+#replyTimeout(Ljava/lang/Long;)Lorg/springframework/integration/dsl/EnricherSpec;
+#requestPayloadExpression(Ljava/lang/String;)Lorg/springframework/integration/dsl/EnricherSpec;
+#requestPayload(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/EnricherSpec;
+#requestSubFlow(Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/EnricherSpec;
+#shouldClonePayload(Z)Lorg/springframework/integration/dsl/EnricherSpec;
+#property(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/dsl/EnricherSpec;
+#propertyExpression(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/EnricherSpec;
+#propertyFunction(Ljava/lang/String;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/EnricherSpec;
+#header(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/dsl/EnricherSpec;
+#header(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/EnricherSpec;
+#headerExpression(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/EnricherSpec;
+#headerExpression(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/EnricherSpec;
+#headerFunction(Ljava/lang/String;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/EnricherSpec;
+#headerFunction(Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/EnricherSpec;
+#header(Ljava/lang/String;Lorg/springframework/integration/transformer/support/HeaderValueMessageProcessor;)Lorg/springframework/integration/dsl/EnricherSpec;
@5.0.1.RELEASE
+#errorChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/EnricherSpec;
+#errorChannel(Ljava/lang/String;)Lorg/springframework/integration/dsl/EnricherSpec;

+###org/springframework/integration/dsl/PollerFactory
@5.0.0.RELEASE
+#trigger(Lorg/springframework/scheduling/Trigger;)Lorg/springframework/integration/dsl/PollerSpec;
+#cron(Ljava/lang/String;)Lorg/springframework/integration/dsl/PollerSpec;
+#cron(Ljava/lang/String;Ljava/util/TimeZone;)Lorg/springframework/integration/dsl/PollerSpec;
+#fixedRate(J)Lorg/springframework/integration/dsl/PollerSpec;
+#fixedRate(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/integration/dsl/PollerSpec;
+#fixedRate(JJ)Lorg/springframework/integration/dsl/PollerSpec;
+#fixedDelay(JLjava/util/concurrent/TimeUnit;J)Lorg/springframework/integration/dsl/PollerSpec;
+#fixedRate(JLjava/util/concurrent/TimeUnit;J)Lorg/springframework/integration/dsl/PollerSpec;
+#fixedDelay(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/integration/dsl/PollerSpec;
+#fixedDelay(JJ)Lorg/springframework/integration/dsl/PollerSpec;
+#fixedDelay(J)Lorg/springframework/integration/dsl/PollerSpec;

+###org/springframework/integration/dsl/IntegrationFlowDefinition
@5.0.0.RELEASE
+#fixedSubscriberChannel()Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#fixedSubscriberChannel(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#channel(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#channel(Lorg/springframework/integration/dsl/channel/MessageChannelSpec;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#channel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#channel(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#publishSubscribeChannel(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#publishSubscribeChannel(Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#wireTap(Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#wireTap(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#wireTap(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#wireTap(Lorg/springframework/integration/dsl/IntegrationFlow;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#wireTap(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#wireTap(Lorg/springframework/messaging/MessageChannel;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#wireTap(Lorg/springframework/integration/dsl/channel/WireTapSpec;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#controlBus()Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#controlBus(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#transform(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#transform(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#transform(Ljava/lang/Object;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#transform(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#transform(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#transform(Lorg/springframework/integration/transformer/GenericTransformer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#transform(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#transform(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#transform(Ljava/lang/Class;Lorg/springframework/integration/transformer/GenericTransformer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#transform(Lorg/springframework/integration/transformer/GenericTransformer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#transform(Ljava/lang/Class;Lorg/springframework/integration/transformer/GenericTransformer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#filter(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#filter(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#filter(Ljava/lang/Object;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#filter(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#filter(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#filter(Lorg/springframework/integration/core/GenericSelector;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#filter(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#filter(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#filter(Ljava/lang/Class;Lorg/springframework/integration/core/GenericSelector;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#filter(Lorg/springframework/integration/core/GenericSelector;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#filter(Ljava/lang/Class;Lorg/springframework/integration/core/GenericSelector;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#handle(Lorg/springframework/integration/dsl/MessageHandlerSpec;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#handle(Lorg/springframework/messaging/MessageHandler;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#handle(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#handle(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#handle(Ljava/lang/Object;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#handle(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#handle(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#handle(Lorg/springframework/integration/handler/GenericHandler;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#handle(Lorg/springframework/integration/handler/GenericHandler;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#handle(Ljava/lang/Class;Lorg/springframework/integration/handler/GenericHandler;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#handle(Ljava/lang/Class;Lorg/springframework/integration/handler/GenericHandler;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#handle(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#handle(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#handle(Lorg/springframework/integration/dsl/MessageHandlerSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#handle(Lorg/springframework/messaging/MessageHandler;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#bridge()Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#bridge(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#delay(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#delay(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#enrich(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#enrichHeaders(Lorg/springframework/integration/support/MapBuilder;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#enrichHeaders(Lorg/springframework/integration/support/MapBuilder;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#enrichHeaders(Ljava/util/Map;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#enrichHeaders(Ljava/util/Map;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#enrichHeaders(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#split()Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#split(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#split(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#split(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#split(Ljava/lang/Object;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#split(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#split(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#split(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#split(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#split(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#split(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#split(Ljava/lang/Class;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#split(Ljava/util/function/Function;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#split(Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#split(Lorg/springframework/integration/dsl/MessageHandlerSpec;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#split(Lorg/springframework/integration/dsl/MessageHandlerSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#split(Lorg/springframework/integration/splitter/AbstractMessageSplitter;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#split(Lorg/springframework/integration/splitter/AbstractMessageSplitter;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#headerFilter([Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#headerFilter(Ljava/lang/String;Z)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#headerFilter(Lorg/springframework/integration/transformer/HeaderFilter;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#claimCheckIn(Lorg/springframework/integration/store/MessageStore;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#claimCheckIn(Lorg/springframework/integration/store/MessageStore;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#claimCheckOut(Lorg/springframework/integration/store/MessageStore;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#claimCheckOut(Lorg/springframework/integration/store/MessageStore;Z)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#claimCheckOut(Lorg/springframework/integration/store/MessageStore;ZLjava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#resequence()Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#resequence(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#aggregate()Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#aggregate(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#route(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#route(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#route(Ljava/lang/Object;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#route(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#route(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#route(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#route(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#route(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#route(Ljava/lang/Class;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#route(Ljava/util/function/Function;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#route(Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#route(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#route(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#routeToRecipients(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#routeByException(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#route(Lorg/springframework/integration/router/AbstractMessageRouter;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#route(Lorg/springframework/integration/router/AbstractMessageRouter;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#gateway(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#gateway(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#gateway(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#gateway(Lorg/springframework/messaging/MessageChannel;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#gateway(Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#gateway(Lorg/springframework/integration/dsl/IntegrationFlow;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#log()Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#log(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#log(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#log(Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#log(Ljava/lang/String;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#log(Ljava/lang/String;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#scatterGather(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#scatterGather(Lorg/springframework/messaging/MessageChannel;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#scatterGather(Lorg/springframework/messaging/MessageChannel;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#scatterGather(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#scatterGather(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#scatterGather(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#barrier(J)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#barrier(JLjava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#trigger(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#trigger(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#trigger(Lorg/springframework/integration/handler/MessageTriggerAction;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#trigger(Lorg/springframework/integration/handler/MessageTriggerAction;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#toReactivePublisher()Lorg/reactivestreams/Publisher;
@5.1.0.RELEASE
+#channel(Lorg/springframework/integration/dsl/MessageChannelSpec;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#wireTap(Lorg/springframework/integration/dsl/WireTapSpec;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#convert(Ljava/lang/Class;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#convert(Ljava/lang/Class;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#logAndReply()Lorg/springframework/integration/dsl/IntegrationFlow;
+#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#logAndReply(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#logAndReply(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#logAndReply(Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#logAndReply(Ljava/lang/String;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#logAndReply(Ljava/lang/String;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#fluxTransform(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#nullChannel()Lorg/springframework/integration/dsl/IntegrationFlow;
-#channel(Lorg/springframework/integration/dsl/channel/MessageChannelSpec;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#wireTap(Lorg/springframework/integration/dsl/channel/WireTapSpec;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
@5.2.0.RELEASE
-#toReactivePublisher()Lorg/reactivestreams/Publisher;
@5.2.1.RELEASE
+#enrichHeaders(Ljava/util/Map;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#fluxTransform(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#trigger(Lorg/springframework/integration/handler/MessageTriggerAction;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#trigger(Lorg/springframework/integration/handler/MessageTriggerAction;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#trigger(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#trigger(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#barrier(JLjava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#barrier(J)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#scatterGather(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#scatterGather(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#scatterGather(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#scatterGather(Lorg/springframework/messaging/MessageChannel;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#scatterGather(Lorg/springframework/messaging/MessageChannel;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#scatterGather(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log(Ljava/lang/String;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log(Ljava/lang/String;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log(Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log()Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#gateway(Lorg/springframework/integration/dsl/IntegrationFlow;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#gateway(Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#gateway(Lorg/springframework/messaging/MessageChannel;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#gateway(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#gateway(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#gateway(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Lorg/springframework/integration/router/AbstractMessageRouter;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Lorg/springframework/integration/router/AbstractMessageRouter;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#routeByException(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#routeToRecipients(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Ljava/lang/Class;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Ljava/lang/Object;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#aggregate(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#aggregate()Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#resequence(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#resequence()Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#claimCheckOut(Lorg/springframework/integration/store/MessageStore;ZLjava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#claimCheckOut(Lorg/springframework/integration/store/MessageStore;Z)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#claimCheckOut(Lorg/springframework/integration/store/MessageStore;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#claimCheckIn(Lorg/springframework/integration/store/MessageStore;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#claimCheckIn(Lorg/springframework/integration/store/MessageStore;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#headerFilter(Lorg/springframework/integration/transformer/HeaderFilter;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#headerFilter(Ljava/lang/String;Z)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#headerFilter([Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Lorg/springframework/integration/splitter/AbstractMessageSplitter;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Lorg/springframework/integration/splitter/AbstractMessageSplitter;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Lorg/springframework/integration/dsl/MessageHandlerSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Lorg/springframework/integration/dsl/MessageHandlerSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Ljava/lang/Class;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Ljava/lang/Object;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split()Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#enrichHeaders(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#enrichHeaders(Ljava/util/Map;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#enrichHeaders(Lorg/springframework/integration/support/MapBuilder;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#enrichHeaders(Lorg/springframework/integration/support/MapBuilder;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#enrich(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#delay(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#delay(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#bridge(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#bridge()Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Lorg/springframework/messaging/MessageHandler;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Lorg/springframework/integration/dsl/MessageHandlerSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Ljava/lang/Class;Lorg/springframework/integration/handler/GenericHandler;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Ljava/lang/Class;Lorg/springframework/integration/handler/GenericHandler;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Ljava/lang/Object;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Lorg/springframework/messaging/MessageHandler;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Lorg/springframework/integration/dsl/MessageHandlerSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#filter(Ljava/lang/Class;Lorg/springframework/integration/core/GenericSelector;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#filter(Ljava/lang/Class;Lorg/springframework/integration/core/GenericSelector;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#filter(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#filter(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#filter(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#filter(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#filter(Ljava/lang/Object;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#filter(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#filter(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#transform(Ljava/lang/Class;Lorg/springframework/integration/transformer/GenericTransformer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#convert(Ljava/lang/Class;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#transform(Ljava/lang/Class;Lorg/springframework/integration/transformer/GenericTransformer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#convert(Ljava/lang/Class;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#transform(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#transform(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#transform(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#transform(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#transform(Ljava/lang/Object;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#transform(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#transform(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#controlBus(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#controlBus()Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#wireTap(Lorg/springframework/integration/dsl/WireTapSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#wireTap(Lorg/springframework/messaging/MessageChannel;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#wireTap(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#wireTap(Lorg/springframework/integration/dsl/IntegrationFlow;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#wireTap(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#wireTap(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#wireTap(Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#publishSubscribeChannel(Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#publishSubscribeChannel(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#channel(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#channel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#channel(Lorg/springframework/integration/dsl/MessageChannelSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#channel(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#fixedSubscriberChannel(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#fixedSubscriberChannel()Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
@5.4.0
-#fixedSubscriberChannel()Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#fixedSubscriberChannel(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#channel(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#channel(Lorg/springframework/integration/dsl/MessageChannelSpec;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#channel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#channel(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#publishSubscribeChannel(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#publishSubscribeChannel(Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#wireTap(Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#wireTap(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#wireTap(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#wireTap(Lorg/springframework/integration/dsl/IntegrationFlow;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#wireTap(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#wireTap(Lorg/springframework/messaging/MessageChannel;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#wireTap(Lorg/springframework/integration/dsl/WireTapSpec;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#controlBus()Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#controlBus(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#transform(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#transform(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#transform(Ljava/lang/Object;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#transform(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#transform(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#transform(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#transform(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#convert(Ljava/lang/Class;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#transform(Ljava/lang/Class;Lorg/springframework/integration/transformer/GenericTransformer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#convert(Ljava/lang/Class;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#transform(Ljava/lang/Class;Lorg/springframework/integration/transformer/GenericTransformer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#filter(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#filter(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#filter(Ljava/lang/Object;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#filter(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#filter(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#filter(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#filter(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#filter(Ljava/lang/Class;Lorg/springframework/integration/core/GenericSelector;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#filter(Ljava/lang/Class;Lorg/springframework/integration/core/GenericSelector;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#handle(Lorg/springframework/integration/dsl/MessageHandlerSpec;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#handle(Lorg/springframework/messaging/MessageHandler;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#handle(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#handle(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#handle(Ljava/lang/Object;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#handle(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#handle(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#handle(Ljava/lang/Class;Lorg/springframework/integration/handler/GenericHandler;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#handle(Ljava/lang/Class;Lorg/springframework/integration/handler/GenericHandler;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#handle(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#handle(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#handle(Lorg/springframework/integration/dsl/MessageHandlerSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#handle(Lorg/springframework/messaging/MessageHandler;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#bridge()Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#bridge(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#delay(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#delay(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#enrich(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#enrichHeaders(Lorg/springframework/integration/support/MapBuilder;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#enrichHeaders(Lorg/springframework/integration/support/MapBuilder;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#enrichHeaders(Ljava/util/Map;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#enrichHeaders(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#split()Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#split(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#split(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#split(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#split(Ljava/lang/Object;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#split(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#split(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#split(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#split(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#split(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#split(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#split(Ljava/lang/Class;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#split(Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#split(Lorg/springframework/integration/dsl/MessageHandlerSpec;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#split(Lorg/springframework/integration/dsl/MessageHandlerSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#split(Lorg/springframework/integration/splitter/AbstractMessageSplitter;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#split(Lorg/springframework/integration/splitter/AbstractMessageSplitter;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#headerFilter([Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#headerFilter(Ljava/lang/String;Z)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#headerFilter(Lorg/springframework/integration/transformer/HeaderFilter;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#claimCheckIn(Lorg/springframework/integration/store/MessageStore;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#claimCheckIn(Lorg/springframework/integration/store/MessageStore;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#claimCheckOut(Lorg/springframework/integration/store/MessageStore;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#claimCheckOut(Lorg/springframework/integration/store/MessageStore;Z)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#claimCheckOut(Lorg/springframework/integration/store/MessageStore;ZLjava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#resequence()Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#resequence(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#aggregate()Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#aggregate(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#route(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#route(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#route(Ljava/lang/Object;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#route(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#route(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#route(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#route(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#route(Ljava/lang/Class;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#route(Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#route(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#route(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#routeToRecipients(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#routeByException(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#route(Lorg/springframework/integration/router/AbstractMessageRouter;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#route(Lorg/springframework/integration/router/AbstractMessageRouter;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#gateway(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#gateway(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#gateway(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#gateway(Lorg/springframework/messaging/MessageChannel;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#gateway(Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#gateway(Lorg/springframework/integration/dsl/IntegrationFlow;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#log()Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#log(Lorg/springframework/integration/handler/LoggingHandler$Level;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#log(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#log(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#log(Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#log(Ljava/lang/String;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#log(Ljava/lang/String;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#logAndReply()Lorg/springframework/integration/dsl/IntegrationFlow;
-#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#logAndReply(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#logAndReply(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#logAndReply(Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#logAndReply(Ljava/lang/String;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#logAndReply(Ljava/lang/String;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#scatterGather(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#scatterGather(Lorg/springframework/messaging/MessageChannel;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#scatterGather(Lorg/springframework/messaging/MessageChannel;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#scatterGather(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#scatterGather(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#scatterGather(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#barrier(J)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#barrier(JLjava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#trigger(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#trigger(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#trigger(Lorg/springframework/integration/handler/MessageTriggerAction;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#trigger(Lorg/springframework/integration/handler/MessageTriggerAction;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#fluxTransform(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#nullChannel()Lorg/springframework/integration/dsl/IntegrationFlow;
-#enrichHeaders(Ljava/util/Map;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#fluxTransform(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#trigger(Lorg/springframework/integration/handler/MessageTriggerAction;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#trigger(Lorg/springframework/integration/handler/MessageTriggerAction;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#trigger(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#trigger(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#barrier(JLjava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#barrier(J)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#scatterGather(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#scatterGather(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#scatterGather(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#scatterGather(Lorg/springframework/messaging/MessageChannel;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#scatterGather(Lorg/springframework/messaging/MessageChannel;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#scatterGather(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#log(Ljava/lang/String;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#log(Ljava/lang/String;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#log(Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#log(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#log(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#log(Lorg/springframework/integration/handler/LoggingHandler$Level;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#log()Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#gateway(Lorg/springframework/integration/dsl/IntegrationFlow;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#gateway(Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#gateway(Lorg/springframework/messaging/MessageChannel;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#gateway(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#gateway(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#gateway(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#route(Lorg/springframework/integration/router/AbstractMessageRouter;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#route(Lorg/springframework/integration/router/AbstractMessageRouter;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#routeByException(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#routeToRecipients(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#route(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#route(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#route(Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#route(Ljava/lang/Class;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#route(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#route(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#route(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#route(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#route(Ljava/lang/Object;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#route(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#route(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#aggregate(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#aggregate()Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#resequence(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#resequence()Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#claimCheckOut(Lorg/springframework/integration/store/MessageStore;ZLjava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#claimCheckOut(Lorg/springframework/integration/store/MessageStore;Z)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#claimCheckOut(Lorg/springframework/integration/store/MessageStore;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#claimCheckIn(Lorg/springframework/integration/store/MessageStore;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#claimCheckIn(Lorg/springframework/integration/store/MessageStore;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#headerFilter(Lorg/springframework/integration/transformer/HeaderFilter;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#headerFilter(Ljava/lang/String;Z)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#headerFilter([Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#split(Lorg/springframework/integration/splitter/AbstractMessageSplitter;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#split(Lorg/springframework/integration/splitter/AbstractMessageSplitter;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#split(Lorg/springframework/integration/dsl/MessageHandlerSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#split(Lorg/springframework/integration/dsl/MessageHandlerSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#split(Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#split(Ljava/lang/Class;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#split(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#split(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#split(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#split(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#split(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#split(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#split(Ljava/lang/Object;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#split(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#split(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#split(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#split()Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#enrichHeaders(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#enrichHeaders(Ljava/util/Map;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#enrichHeaders(Ljava/util/Map;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#enrichHeaders(Lorg/springframework/integration/support/MapBuilder;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#enrichHeaders(Lorg/springframework/integration/support/MapBuilder;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#enrich(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#delay(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#delay(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#bridge(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#bridge()Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#handle(Lorg/springframework/messaging/MessageHandler;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#handle(Lorg/springframework/integration/dsl/MessageHandlerSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#handle(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#handle(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#handle(Ljava/lang/Class;Lorg/springframework/integration/handler/GenericHandler;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#handle(Ljava/lang/Class;Lorg/springframework/integration/handler/GenericHandler;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#handle(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#handle(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#handle(Ljava/lang/Object;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#handle(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#handle(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#handle(Lorg/springframework/messaging/MessageHandler;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#handle(Lorg/springframework/integration/dsl/MessageHandlerSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#filter(Ljava/lang/Class;Lorg/springframework/integration/core/GenericSelector;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#filter(Ljava/lang/Class;Lorg/springframework/integration/core/GenericSelector;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#filter(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#filter(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#filter(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#filter(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#filter(Ljava/lang/Object;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#filter(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#filter(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#transform(Ljava/lang/Class;Lorg/springframework/integration/transformer/GenericTransformer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#convert(Ljava/lang/Class;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#transform(Ljava/lang/Class;Lorg/springframework/integration/transformer/GenericTransformer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#convert(Ljava/lang/Class;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#transform(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#transform(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#transform(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#transform(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#transform(Ljava/lang/Object;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#transform(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#transform(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#controlBus(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#controlBus()Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#wireTap(Lorg/springframework/integration/dsl/WireTapSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#wireTap(Lorg/springframework/messaging/MessageChannel;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#wireTap(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#wireTap(Lorg/springframework/integration/dsl/IntegrationFlow;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#wireTap(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#wireTap(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#wireTap(Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#publishSubscribeChannel(Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#publishSubscribeChannel(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#channel(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#channel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#channel(Lorg/springframework/integration/dsl/MessageChannelSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#channel(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#fixedSubscriberChannel(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#fixedSubscriberChannel()Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
@6.0.0
+#transform(Lorg/springframework/integration/core/GenericTransformer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#transform(Lorg/springframework/integration/core/GenericTransformer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#handle(Lorg/springframework/integration/core/GenericHandler;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#handle(Lorg/springframework/integration/core/GenericHandler;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#transform(Lorg/springframework/integration/transformer/GenericTransformer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#transform(Lorg/springframework/integration/transformer/GenericTransformer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#handle(Lorg/springframework/integration/handler/GenericHandler;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
-#handle(Lorg/springframework/integration/handler/GenericHandler;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/IntegrationFlowDefinition;

+###org/springframework/integration/dsl/ResequencerSpec
@5.0.0.RELEASE
+#releasePartialSequences(Z)Lorg/springframework/integration/dsl/ResequencerSpec;

+###org/springframework/integration/dsl/GatewayEndpointSpec
@5.0.0.RELEASE
+#replyChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/GatewayEndpointSpec;
+#replyChannel(Ljava/lang/String;)Lorg/springframework/integration/dsl/GatewayEndpointSpec;
+#errorChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/GatewayEndpointSpec;
+#errorChannel(Ljava/lang/String;)Lorg/springframework/integration/dsl/GatewayEndpointSpec;
+#requestTimeout(Ljava/lang/Long;)Lorg/springframework/integration/dsl/GatewayEndpointSpec;
+#replyTimeout(Ljava/lang/Long;)Lorg/springframework/integration/dsl/GatewayEndpointSpec;

+###org/springframework/integration/dsl/PublishSubscribeChannelSpec
@5.1.0.RELEASE
+#errorHandler(Lorg/springframework/util/ErrorHandler;)Lorg/springframework/integration/dsl/PublishSubscribeChannelSpec;
+#ignoreFailures(Z)Lorg/springframework/integration/dsl/PublishSubscribeChannelSpec;
+#applySequence(Z)Lorg/springframework/integration/dsl/PublishSubscribeChannelSpec;
+#maxSubscribers(Ljava/lang/Integer;)Lorg/springframework/integration/dsl/PublishSubscribeChannelSpec;
+#minSubscribers(I)Lorg/springframework/integration/dsl/PublishSubscribeChannelSpec;

+###org/springframework/integration/dsl/EndpointSpec
@5.0.0.RELEASE
+#id(Ljava/lang/String;)Lorg/springframework/integration/dsl/EndpointSpec;
+#poller(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/EndpointSpec;
+#poller(Lorg/springframework/integration/dsl/PollerSpec;)Lorg/springframework/integration/dsl/EndpointSpec;
+#poller(Lorg/springframework/integration/scheduling/PollerMetadata;)Lorg/springframework/integration/dsl/EndpointSpec;
+#phase(I)Lorg/springframework/integration/dsl/EndpointSpec;
+#autoStartup(Z)Lorg/springframework/integration/dsl/EndpointSpec;
+#role(Ljava/lang/String;)Lorg/springframework/integration/dsl/EndpointSpec;
+#getComponentsToRegister()Ljava/util/Map;
+#id(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationComponentSpec;

+###org/springframework/integration/dsl/RendezvousChannelSpec
@5.1.0.RELEASE

+###org/springframework/integration/dsl/QueueChannelSpec$MessageStoreSpec
@5.1.0.RELEASE
+#capacity(Ljava/lang/Integer;)Lorg/springframework/integration/dsl/QueueChannelSpec$MessageStoreSpec;
+#storeLock(Ljava/util/concurrent/locks/Lock;)Lorg/springframework/integration/dsl/QueueChannelSpec$MessageStoreSpec;

+###org/springframework/integration/dsl/StandardIntegrationFlow
@5.0.0.RELEASE
+#setIntegrationComponents(Ljava/util/Map;)V
+#getIntegrationComponents()Ljava/util/Map;
+#configure(Lorg/springframework/integration/dsl/IntegrationFlowDefinition;)V
+#start()V
+#stop(Ljava/lang/Runnable;)V
+#stop()V
+#isRunning()Z
+#isAutoStartup()Z
+#getPhase()I
@5.0.3.RELEASE
+#toString()Ljava/lang/String;
@5.0.4.RELEASE
+#getInputChannel()Lorg/springframework/messaging/MessageChannel;
@5.5.6
+#setBeanName(Ljava/lang/String;)V
+#getComponentName()Ljava/lang/String;
+#getComponentType()Ljava/lang/String;

+###org/springframework/integration/dsl/HeaderEnricherSpec
@5.0.0.RELEASE
+#defaultOverwrite(Z)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#shouldSkipNulls(Z)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#messageProcessor(Lorg/springframework/integration/handler/MessageProcessor;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#messageProcessor(Ljava/lang/String;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#messageProcessor(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#headers(Lorg/springframework/integration/support/MapBuilder;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#headers(Lorg/springframework/integration/support/MapBuilder;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#headers(Ljava/util/Map;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#headers(Ljava/util/Map;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#headerExpressions(Lorg/springframework/integration/support/MapBuilder;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#headerExpressions(Lorg/springframework/integration/support/MapBuilder;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#headerExpressions(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#headerExpressions(Ljava/util/function/Consumer;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#headerExpressions(Ljava/util/Map;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#headerExpressions(Ljava/util/Map;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#header(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#header(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#headerExpression(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#headerExpression(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#headerFunction(Ljava/lang/String;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#headerFunction(Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#header(Ljava/lang/String;Lorg/springframework/integration/transformer/support/HeaderValueMessageProcessor;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#headerChannelsToString()Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#headerChannelsToString(Ljava/lang/String;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
@5.2.0.RELEASE
+#correlationId(Ljava/lang/Object;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#correlationId(Ljava/lang/Object;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#correlationIdExpression(Ljava/lang/String;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#correlationIdExpression(Ljava/lang/String;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#correlationIdFunction(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#correlationIdFunction(Ljava/util/function/Function;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#replyChannel(Ljava/lang/Object;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#replyChannel(Ljava/lang/Object;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#replyChannelExpression(Ljava/lang/String;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#replyChannelExpression(Ljava/lang/String;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#replyChannelFunction(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#replyChannelFunction(Ljava/util/function/Function;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#errorChannel(Ljava/lang/Object;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#errorChannel(Ljava/lang/Object;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#errorChannelExpression(Ljava/lang/String;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#errorChannelExpression(Ljava/lang/String;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#errorChannelFunction(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#errorChannelFunction(Ljava/util/function/Function;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#priority(Ljava/lang/Number;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#priority(Ljava/lang/Number;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#priorityExpression(Ljava/lang/String;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#priorityExpression(Ljava/lang/String;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#priorityFunction(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#priorityFunction(Ljava/util/function/Function;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#expirationDate(Ljava/lang/Object;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#expirationDate(Ljava/lang/Object;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#expirationDateExpression(Ljava/lang/String;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#expirationDateExpression(Ljava/lang/String;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#expirationDateFunction(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#expirationDateFunction(Ljava/util/function/Function;Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#routingSlip([Ljava/lang/Object;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;
+#routingSlip(Ljava/lang/Boolean;[Ljava/lang/Object;)Lorg/springframework/integration/dsl/HeaderEnricherSpec;

+###org/springframework/integration/dsl/PublishSubscribeSpec
@5.0.0.RELEASE
+#id(Ljava/lang/String;)Lorg/springframework/integration/dsl/PublishSubscribeSpec;
+#subscribe(Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/PublishSubscribeSpec;
+#getComponentsToRegister()Ljava/util/Map;
+#id(Ljava/lang/String;)Lorg/springframework/integration/dsl/channel/MessageChannelSpec;
+#id(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationComponentSpec;
@5.1.0.RELEASE
+#id(Ljava/lang/String;)Lorg/springframework/integration/dsl/MessageChannelSpec;
-#id(Ljava/lang/String;)Lorg/springframework/integration/dsl/channel/MessageChannelSpec;
@5.2.0.RELEASE
-#id(Ljava/lang/String;)Lorg/springframework/integration/dsl/MessageChannelSpec;

+###org/springframework/integration/dsl/MessageProcessorSpec
@5.0.0.RELEASE
+#<init>()V

+###org/springframework/integration/dsl/DelayerEndpointSpec
@5.0.0.RELEASE
+#defaultDelay(J)Lorg/springframework/integration/dsl/DelayerEndpointSpec;
+#ignoreExpressionFailures(Z)Lorg/springframework/integration/dsl/DelayerEndpointSpec;
+#messageStore(Lorg/springframework/integration/store/MessageGroupStore;)Lorg/springframework/integration/dsl/DelayerEndpointSpec;
+#delayedAdvice([Lorg/aopalliance/aop/Advice;)Lorg/springframework/integration/dsl/DelayerEndpointSpec;
+#delayExpression(Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/DelayerEndpointSpec;
+#delayExpression(Ljava/lang/String;)Lorg/springframework/integration/dsl/DelayerEndpointSpec;
+#delayFunction(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/DelayerEndpointSpec;
@5.0.8.RELEASE
+#delayedMessageErrorChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/DelayerEndpointSpec;
+#delayedMessageErrorChannel(Ljava/lang/String;)Lorg/springframework/integration/dsl/DelayerEndpointSpec;
+#maxAttempts(I)Lorg/springframework/integration/dsl/DelayerEndpointSpec;
+#retryDelay(J)Lorg/springframework/integration/dsl/DelayerEndpointSpec;
+#transactionalRelease()Lorg/springframework/integration/dsl/DelayerEndpointSpec;
+#transactionalRelease(Lorg/springframework/transaction/interceptor/TransactionInterceptor;)Lorg/springframework/integration/dsl/DelayerEndpointSpec;
+#transactionalRelease(Lorg/springframework/transaction/PlatformTransactionManager;)Lorg/springframework/integration/dsl/DelayerEndpointSpec;
@5.2.5.RELEASE
*#transactionalRelease(Lorg/springframework/transaction/PlatformTransactionManager;)Lorg/springframework/integration/dsl/DelayerEndpointSpec;[deprecated]
+#transactionalRelease(Lorg/springframework/transaction/TransactionManager;)Lorg/springframework/integration/dsl/DelayerEndpointSpec;
@5.3.0.RELEASE
-#transactionalRelease(Lorg/springframework/transaction/PlatformTransactionManager;)Lorg/springframework/integration/dsl/DelayerEndpointSpec;[deprecated]

+###org/springframework/integration/dsl/MessageChannels
@5.1.0.RELEASE
+#direct()Lorg/springframework/integration/dsl/DirectChannelSpec;
+#direct(Ljava/lang/String;)Lorg/springframework/integration/dsl/DirectChannelSpec;
+#queue()Lorg/springframework/integration/dsl/QueueChannelSpec;
+#queue(Ljava/lang/String;)Lorg/springframework/integration/dsl/QueueChannelSpec;
+#queue(Ljava/util/Queue;)Lorg/springframework/integration/dsl/QueueChannelSpec;
+#queue(Ljava/lang/String;Ljava/util/Queue;)Lorg/springframework/integration/dsl/QueueChannelSpec;
+#queue(Ljava/lang/Integer;)Lorg/springframework/integration/dsl/QueueChannelSpec;
+#queue(Ljava/lang/String;Ljava/lang/Integer;)Lorg/springframework/integration/dsl/QueueChannelSpec;
+#queue(Lorg/springframework/integration/store/ChannelMessageStore;Ljava/lang/Object;)Lorg/springframework/integration/dsl/QueueChannelSpec$MessageStoreSpec;
+#queue(Ljava/lang/String;Lorg/springframework/integration/store/ChannelMessageStore;Ljava/lang/Object;)Lorg/springframework/integration/dsl/QueueChannelSpec$MessageStoreSpec;
+#executor(Ljava/util/concurrent/Executor;)Lorg/springframework/integration/dsl/ExecutorChannelSpec;
+#executor(Ljava/lang/String;Ljava/util/concurrent/Executor;)Lorg/springframework/integration/dsl/ExecutorChannelSpec;
+#rendezvous()Lorg/springframework/integration/dsl/RendezvousChannelSpec;
+#rendezvous(Ljava/lang/String;)Lorg/springframework/integration/dsl/RendezvousChannelSpec;
+#priority()Lorg/springframework/integration/dsl/PriorityChannelSpec;
+#priority(Ljava/lang/String;)Lorg/springframework/integration/dsl/PriorityChannelSpec;
+#priority(Lorg/springframework/integration/store/PriorityCapableChannelMessageStore;Ljava/lang/Object;)Lorg/springframework/integration/dsl/PriorityChannelSpec;
+#priority(Ljava/lang/String;Lorg/springframework/integration/store/PriorityCapableChannelMessageStore;Ljava/lang/Object;)Lorg/springframework/integration/dsl/PriorityChannelSpec;
+#publishSubscribe()Lorg/springframework/integration/dsl/PublishSubscribeChannelSpec;
+#publishSubscribe(Ljava/lang/String;)Lorg/springframework/integration/dsl/PublishSubscribeChannelSpec;
+#publishSubscribe(Ljava/util/concurrent/Executor;)Lorg/springframework/integration/dsl/PublishSubscribeChannelSpec;
+#publishSubscribe(Ljava/lang/String;Ljava/util/concurrent/Executor;)Lorg/springframework/integration/dsl/PublishSubscribeChannelSpec;
+#flux()Lorg/springframework/integration/dsl/FluxMessageChannelSpec;
+#flux(Ljava/lang/String;)Lorg/springframework/integration/dsl/FluxMessageChannelSpec;
@5.4.3
+#publishSubscribe(Z)Lorg/springframework/integration/dsl/PublishSubscribeChannelSpec;
+#publishSubscribe(Ljava/lang/String;Z)Lorg/springframework/integration/dsl/PublishSubscribeChannelSpec;
+#publishSubscribe(Ljava/util/concurrent/Executor;Z)Lorg/springframework/integration/dsl/PublishSubscribeChannelSpec;
+#publishSubscribe(Ljava/lang/String;Ljava/util/concurrent/Executor;Z)Lorg/springframework/integration/dsl/PublishSubscribeChannelSpec;

+###org/springframework/integration/dsl/GenericEndpointSpec
@5.0.0.RELEASE

+###org/springframework/integration/dsl/FilterEndpointSpec
@5.0.0.RELEASE
+#throwExceptionOnRejection(Z)Lorg/springframework/integration/dsl/FilterEndpointSpec;
+#discardChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/FilterEndpointSpec;
+#discardChannel(Ljava/lang/String;)Lorg/springframework/integration/dsl/FilterEndpointSpec;
+#discardFlow(Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/FilterEndpointSpec;
+#discardWithinAdvice(Z)Lorg/springframework/integration/dsl/FilterEndpointSpec;

+###org/springframework/integration/dsl/BarrierSpec
@5.0.0.RELEASE
+#outputProcessor(Lorg/springframework/integration/aggregator/MessageGroupProcessor;)Lorg/springframework/integration/dsl/BarrierSpec;
+#correlationStrategy(Lorg/springframework/integration/aggregator/CorrelationStrategy;)Lorg/springframework/integration/dsl/BarrierSpec;
+#requiresReply(Z)Lorg/springframework/integration/dsl/BarrierSpec;
+#sendTimeout(J)Lorg/springframework/integration/dsl/BarrierSpec;
+#order(I)Lorg/springframework/integration/dsl/BarrierSpec;
+#async(Z)Lorg/springframework/integration/dsl/BarrierSpec;
+#doGet()Lreactor/util/function/Tuple2;
+#async(Z)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
+#order(I)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
+#sendTimeout(J)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
+#requiresReply(Z)Lorg/springframework/integration/dsl/ConsumerEndpointSpec;
+#doGet()Ljava/lang/Object;

+###org/springframework/integration/dsl/IntegrationFlowDefinition$ReplyProducerCleaner
@5.0.7.RELEASE
+#requiresDestruction(Ljava/lang/Object;)Z
+#postProcessBeforeDestruction(Ljava/lang/Object;Ljava/lang/String;)V
@5.2.1.RELEASE
-###org/springframework/integration/dsl/IntegrationFlowDefinition$ReplyProducerCleaner

+###org/springframework/integration/store/SimpleMessageGroupFactory
@4.3.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/integration/store/SimpleMessageGroupFactory$GroupType;)V
+#create(Ljava/lang/Object;)Lorg/springframework/integration/store/MessageGroup;
+#create(Ljava/util/Collection;Ljava/lang/Object;)Lorg/springframework/integration/store/MessageGroup;
+#create(Ljava/util/Collection;Ljava/lang/Object;JZ)Lorg/springframework/integration/store/MessageGroup;
+#create(Lorg/springframework/integration/store/MessageGroupStore;Ljava/lang/Object;)Lorg/springframework/integration/store/MessageGroup;
+#create(Lorg/springframework/integration/store/MessageGroupStore;Ljava/lang/Object;JZ)Lorg/springframework/integration/store/MessageGroup;

+###org/springframework/integration/store/MessageGroupStore
@2.0.0.RELEASE
+#getMessageCountForAllMessageGroups()I
+#getMarkedMessageCountForAllMessageGroups()I
+#getMessageGroupCount()I
+#getMessageGroup(Ljava/lang/Object;)Lorg/springframework/integration/store/MessageGroup;
+#addMessageToGroup(Ljava/lang/Object;Lorg/springframework/integration/Message;)Lorg/springframework/integration/store/MessageGroup;
+#markMessageGroup(Lorg/springframework/integration/store/MessageGroup;)Lorg/springframework/integration/store/MessageGroup;
+#removeMessageFromGroup(Ljava/lang/Object;Lorg/springframework/integration/Message;)Lorg/springframework/integration/store/MessageGroup;
+#markMessageFromGroup(Ljava/lang/Object;Lorg/springframework/integration/Message;)Lorg/springframework/integration/store/MessageGroup;
+#removeMessageGroup(Ljava/lang/Object;)V
+#registerMessageGroupExpiryCallback(Lorg/springframework/integration/store/MessageGroupCallback;)V
+#expireMessageGroups(J)I
@2.1.0.RELEASE
+#messageGroupSize(Ljava/lang/Object;)I
+#setLastReleasedSequenceNumberForGroup(Ljava/lang/Object;I)V
+#iterator()Ljava/util/Iterator;
+#pollMessageFromGroup(Ljava/lang/Object;)Lorg/springframework/integration/Message;
+#completeGroup(Ljava/lang/Object;)V
-#getMarkedMessageCountForAllMessageGroups()I
-#markMessageGroup(Lorg/springframework/integration/store/MessageGroup;)Lorg/springframework/integration/store/MessageGroup;
-#markMessageFromGroup(Ljava/lang/Object;Lorg/springframework/integration/Message;)Lorg/springframework/integration/store/MessageGroup;
@3.0.0.RELEASE
+#registerMessageGroupExpiryCallback(Lorg/springframework/integration/store/MessageGroupStore$MessageGroupCallback;)V
-#registerMessageGroupExpiryCallback(Lorg/springframework/integration/store/MessageGroupCallback;)V
@4.0.0.RELEASE
+#removeMessageFromGroup(Ljava/lang/Object;Lorg/springframework/messaging/Message;)Lorg/springframework/integration/store/MessageGroup;
+#getGroupMetadata(Ljava/lang/Object;)Lorg/springframework/integration/store/MessageGroupMetadata;
+#getOneMessageFromGroup(Ljava/lang/Object;)Lorg/springframework/messaging/Message;
-#messageGroupSize(Ljava/lang/Object;)I
-#getMessageGroup(Ljava/lang/Object;)Lorg/springframework/integration/store/MessageGroup;
-#addMessageToGroup(Ljava/lang/Object;Lorg/springframework/integration/Message;)Lorg/springframework/integration/store/MessageGroup;
-#removeMessageFromGroup(Ljava/lang/Object;Lorg/springframework/integration/Message;)Lorg/springframework/integration/store/MessageGroup;
-#removeMessageGroup(Ljava/lang/Object;)V
-#pollMessageFromGroup(Ljava/lang/Object;)Lorg/springframework/integration/Message;
@4.2.0.RELEASE
+#removeMessagesFromGroup(Ljava/lang/Object;Ljava/util/Collection;)V
+#removeMessagesFromGroup(Ljava/lang/Object;[Lorg/springframework/messaging/Message;)V
@4.3.0.RELEASE
*#removeMessageFromGroup(Ljava/lang/Object;Lorg/springframework/messaging/Message;)Lorg/springframework/integration/store/MessageGroup;[deprecated]
+#addMessagesToGroup(Ljava/lang/Object;[Lorg/springframework/messaging/Message;)V
+#getMessagesForGroup(Ljava/lang/Object;)Ljava/util/Collection;
@5.0.0.RELEASE
-#removeMessageFromGroup(Ljava/lang/Object;Lorg/springframework/messaging/Message;)Lorg/springframework/integration/store/MessageGroup;[deprecated]
@5.5.0
+#setGroupCondition(Ljava/lang/Object;Ljava/lang/String;)V
+#streamMessagesForGroup(Ljava/lang/Object;)Ljava/util/stream/Stream;

+###org/springframework/integration/store/SimpleMessageGroup
@2.0.0.RELEASE
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/util/Collection;Ljava/lang/Object;)V
+#<init>(Ljava/util/Collection;Ljava/util/Collection;Ljava/lang/Object;J)V
+#<init>(Lorg/springframework/integration/store/MessageGroup;)V
+#getTimestamp()J
+#canAdd(Lorg/springframework/integration/Message;)Z
+#add(Lorg/springframework/integration/Message;)V
+#remove(Lorg/springframework/integration/Message;)V
+#getUnmarked()Ljava/util/Collection;
+#getMarked()Ljava/util/Collection;
+#getGroupId()Ljava/lang/Object;
+#isComplete()Z
+#getSequenceSize()I
+#mark(Lorg/springframework/integration/Message;)V
+#markAll()V
+#size()I
+#getOne()Lorg/springframework/integration/Message;
+#toString()Ljava/lang/String;
@2.1.0.RELEASE
+#<init>(Ljava/util/Collection;Ljava/lang/Object;JZ)V
+#setLastModified(J)V
+#getLastModified()J
+#getLastReleasedMessageSequenceNumber()I
+#getMessages()Ljava/util/Collection;
+#setLastReleasedMessageSequenceNumber(I)V
+#complete()V
+#clear()V
-#<init>(Ljava/util/Collection;Ljava/util/Collection;Ljava/lang/Object;J)V
-#getUnmarked()Ljava/util/Collection;
-#getMarked()Ljava/util/Collection;
-#mark(Lorg/springframework/integration/Message;)V
-#markAll()V
@3.0.7.RELEASE
+#remove(Lorg/springframework/integration/Message;)Z
-#remove(Lorg/springframework/integration/Message;)V
@4.0.0.RELEASE
+#canAdd(Lorg/springframework/messaging/Message;)Z
+#add(Lorg/springframework/messaging/Message;)V
+#remove(Lorg/springframework/messaging/Message;)V
+#getOne()Lorg/springframework/messaging/Message;
-#canAdd(Lorg/springframework/integration/Message;)Z
-#add(Lorg/springframework/integration/Message;)V
-#remove(Lorg/springframework/integration/Message;)Z
-#getOne()Lorg/springframework/integration/Message;
@4.0.6.RELEASE
+#remove(Lorg/springframework/messaging/Message;)Z
-#remove(Lorg/springframework/messaging/Message;)V
@4.1.0.RELEASE
+#remove(Lorg/springframework/messaging/Message;)V
-#remove(Lorg/springframework/messaging/Message;)Z
@4.1.1.RELEASE
+#remove(Lorg/springframework/messaging/Message;)Z
-#remove(Lorg/springframework/messaging/Message;)V
@4.3.7.RELEASE
+#containsSequence(Ljava/lang/Integer;)Z
@5.0.1.RELEASE
+#<init>(Ljava/util/Collection;Ljava/util/Collection;Ljava/lang/Object;JZZ)V
@5.5.0
+#setCondition(Ljava/lang/String;)V
+#getCondition()Ljava/lang/String;

+###org/springframework/integration/store/ChannelMessageStore
@4.0.0.RELEASE

+###org/springframework/integration/store/MessageGroup
@2.0.0.RELEASE
+#canAdd(Lorg/springframework/integration/Message;)Z
+#getUnmarked()Ljava/util/Collection;
+#getMarked()Ljava/util/Collection;
+#getGroupId()Ljava/lang/Object;
+#isComplete()Z
+#getSequenceSize()I
+#size()I
+#getOne()Lorg/springframework/integration/Message;
+#getTimestamp()J
@2.1.0.RELEASE
+#getMessages()Ljava/util/Collection;
+#getLastReleasedMessageSequenceNumber()I
+#complete()V
+#getLastModified()J
-#getUnmarked()Ljava/util/Collection;
-#getMarked()Ljava/util/Collection;
@4.0.0.RELEASE
+#canAdd(Lorg/springframework/messaging/Message;)Z
+#getOne()Lorg/springframework/messaging/Message;
-#canAdd(Lorg/springframework/integration/Message;)Z
-#getOne()Lorg/springframework/integration/Message;
@4.3.0.RELEASE
+#add(Lorg/springframework/messaging/Message;)V
+#remove(Lorg/springframework/messaging/Message;)Z
+#setLastReleasedMessageSequenceNumber(I)V
+#setLastModified(J)V
+#clear()V
@5.5.0
+#streamMessages()Ljava/util/stream/Stream;
+#setCondition(Ljava/lang/String;)V
+#getCondition()Ljava/lang/String;

+###org/springframework/integration/store/PriorityCapableChannelMessageStore
@4.0.0.RELEASE
+#isPriorityEnabled()Z

+###org/springframework/integration/store/AbstractKeyValueMessageStore
@2.1.0.RELEASE
+#<init>()V
+#getMessage(Ljava/util/UUID;)Lorg/springframework/integration/Message;
+#addMessage(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
+#removeMessage(Ljava/util/UUID;)Lorg/springframework/integration/Message;
+#getMessageCount()J
+#getMessageGroup(Ljava/lang/Object;)Lorg/springframework/integration/store/MessageGroup;
+#addMessageToGroup(Ljava/lang/Object;Lorg/springframework/integration/Message;)Lorg/springframework/integration/store/MessageGroup;
+#removeMessageFromGroup(Ljava/lang/Object;Lorg/springframework/integration/Message;)Lorg/springframework/integration/store/MessageGroup;
+#completeGroup(Ljava/lang/Object;)V
+#removeMessageGroup(Ljava/lang/Object;)V
+#setLastReleasedSequenceNumberForGroup(Ljava/lang/Object;I)V
+#pollMessageFromGroup(Ljava/lang/Object;)Lorg/springframework/integration/Message;
+#iterator()Ljava/util/Iterator;
+#messageGroupSize(Ljava/lang/Object;)I
@4.0.0.RELEASE
+#getMessage(Ljava/util/UUID;)Lorg/springframework/messaging/Message;
+#addMessage(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
+#removeMessage(Ljava/util/UUID;)Lorg/springframework/messaging/Message;
+#addMessageToGroup(Ljava/lang/Object;Lorg/springframework/messaging/Message;)Lorg/springframework/integration/store/MessageGroup;
+#removeMessageFromGroup(Ljava/lang/Object;Lorg/springframework/messaging/Message;)Lorg/springframework/integration/store/MessageGroup;
+#pollMessageFromGroup(Ljava/lang/Object;)Lorg/springframework/messaging/Message;
-#getMessage(Ljava/util/UUID;)Lorg/springframework/integration/Message;
-#addMessage(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
-#removeMessage(Ljava/util/UUID;)Lorg/springframework/integration/Message;
-#addMessageToGroup(Ljava/lang/Object;Lorg/springframework/integration/Message;)Lorg/springframework/integration/store/MessageGroup;
-#removeMessageFromGroup(Ljava/lang/Object;Lorg/springframework/integration/Message;)Lorg/springframework/integration/store/MessageGroup;
-#pollMessageFromGroup(Ljava/lang/Object;)Lorg/springframework/integration/Message;
@4.2.0.RELEASE
+#removeMessagesFromGroup(Ljava/lang/Object;Ljava/util/Collection;)V
@4.3.0.RELEASE
+#getGroupMetadata(Ljava/lang/Object;)Lorg/springframework/integration/store/MessageGroupMetadata;
+#addMessagesToGroup(Ljava/lang/Object;[Lorg/springframework/messaging/Message;)V
*#removeMessageFromGroup(Ljava/lang/Object;Lorg/springframework/messaging/Message;)Lorg/springframework/integration/store/MessageGroup;[deprecated]
+#getOneMessageFromGroup(Ljava/lang/Object;)Lorg/springframework/messaging/Message;
+#getMessagesForGroup(Ljava/lang/Object;)Ljava/util/Collection;
-#addMessageToGroup(Ljava/lang/Object;Lorg/springframework/messaging/Message;)Lorg/springframework/integration/store/MessageGroup;
@4.3.12.RELEASE
+#getGroupPrefix()Ljava/lang/String;
-#<init>()V
@5.0.0.RELEASE
+#getMessageMetadata(Ljava/util/UUID;)Lorg/springframework/integration/store/MessageMetadata;
-#removeMessageFromGroup(Ljava/lang/Object;Lorg/springframework/messaging/Message;)Lorg/springframework/integration/store/MessageGroup;[deprecated]
@5.5.0
+#setGroupCondition(Ljava/lang/Object;Ljava/lang/String;)V
+#streamMessagesForGroup(Ljava/lang/Object;)Ljava/util/stream/Stream;

+###org/springframework/integration/store/MessageGroupMetadata
@2.1.0.RELEASE
+#<init>(Lorg/springframework/integration/store/MessageGroup;)V
+#remove(Ljava/util/UUID;)V
+#setLastModified(J)V
+#getGroupId()Ljava/lang/Object;
+#messageIdIterator()Ljava/util/Iterator;
+#size()I
+#firstId()Ljava/util/UUID;
+#isComplete()Z
+#getLastModified()J
+#getTimestamp()J
+#getLastReleasedMessageSequenceNumber()I
@4.0.0.RELEASE
+#<init>(Lorg/springframework/integration/store/MessageGroup;ZLjava/util/UUID;)V
@4.3.0.RELEASE
-#<init>(Lorg/springframework/integration/store/MessageGroup;ZLjava/util/UUID;)V
-#setLastModified(J)V
@4.3.10.RELEASE
+#getMessageIds()Ljava/util/List;
-#getGroupId()Ljava/lang/Object;
@5.1.0.RELEASE
+#removeAll(Ljava/util/Collection;)V
@5.5.0
+#getCondition()Ljava/lang/String;
+#setCondition(Ljava/lang/String;)V
@5.5.1
+#<init>()V
+#setLastModified(J)V
+#complete()V
+#setTimestamp(J)V
+#setLastReleasedMessageSequenceNumber(I)V

+###org/springframework/integration/store/AbstractMessageGroupStore
@2.0.0.RELEASE
+#<init>()V
+#setExpiryCallbacks(Ljava/util/Collection;)V
+#registerMessageGroupExpiryCallback(Lorg/springframework/integration/store/MessageGroupCallback;)V
+#expireMessageGroups(J)I
+#iterator()Ljava/util/Iterator;
+#getMessageCountForAllMessageGroups()I
+#getMarkedMessageCountForAllMessageGroups()I
+#getMessageGroupCount()I
@2.1.0.RELEASE
+#isTimeoutOnIdle()Z
+#setTimeoutOnIdle(Z)V
-#iterator()Ljava/util/Iterator;
-#getMarkedMessageCountForAllMessageGroups()I
@3.0.0.RELEASE
+#registerMessageGroupExpiryCallback(Lorg/springframework/integration/store/MessageGroupStore$MessageGroupCallback;)V
-#registerMessageGroupExpiryCallback(Lorg/springframework/integration/store/MessageGroupCallback;)V
@4.0.0.RELEASE
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#getGroupMetadata(Ljava/lang/Object;)Lorg/springframework/integration/store/MessageGroupMetadata;
+#getOneMessageFromGroup(Ljava/lang/Object;)Lorg/springframework/messaging/Message;
@4.2.0.RELEASE
+#removeMessagesFromGroup(Ljava/lang/Object;[Lorg/springframework/messaging/Message;)V
@4.3.0.RELEASE
+#setLazyLoadMessageGroups(Z)V
+#addMessageToGroup(Ljava/lang/Object;Lorg/springframework/messaging/Message;)Lorg/springframework/integration/store/MessageGroup;
-#<init>()V
-#getOneMessageFromGroup(Ljava/lang/Object;)Lorg/springframework/messaging/Message;
@5.0.0.RELEASE
-#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V

+###org/springframework/integration/store/MessageGroupStore$MessageGroupCallback
@3.0.0.RELEASE
+#execute(Lorg/springframework/integration/store/MessageGroupStore;Lorg/springframework/integration/store/MessageGroup;)V

+###org/springframework/integration/store/MessageMetadata
@5.0.0.RELEASE
+#<init>(Ljava/util/UUID;)V
+#setTimestamp(J)V
+#getMessageId()Ljava/util/UUID;
+#getTimestamp()J

+###org/springframework/integration/store/MessageGroupStoreReaper
@2.0.0.RELEASE
+#<init>(Lorg/springframework/integration/store/MessageGroupStore;)V
+#<init>()V
+#setExpireOnDestroy(Z)V
+#setTimeout(J)V
+#setMessageGroupStore(Lorg/springframework/integration/store/MessageGroupStore;)V
+#afterPropertiesSet()V
+#destroy()V
+#run()V
+#start()V
+#stop()V
+#isRunning()Z
+#getPhase()I
+#setPhase(I)V
+#isAutoStartup()Z
+#setAutoStartup(Z)V
+#stop(Ljava/lang/Runnable;)V
@5.1.7.RELEASE
-#stop(Ljava/lang/Runnable;)V

+###org/springframework/integration/store/MessageStore
@2.0.0.RELEASE
+#getMessage(Ljava/util/UUID;)Lorg/springframework/integration/Message;
+#addMessage(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
+#removeMessage(Ljava/util/UUID;)Lorg/springframework/integration/Message;
+#getMessageCount()I
@2.1.0.RELEASE
+#getMessageCount()J
-#getMessageCount()I
@4.0.0.RELEASE
+#getMessage(Ljava/util/UUID;)Lorg/springframework/messaging/Message;
+#addMessage(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
+#removeMessage(Ljava/util/UUID;)Lorg/springframework/messaging/Message;
-#getMessage(Ljava/util/UUID;)Lorg/springframework/integration/Message;
-#addMessage(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
-#removeMessage(Ljava/util/UUID;)Lorg/springframework/integration/Message;
@5.0.0.RELEASE
+#getMessageMetadata(Ljava/util/UUID;)Lorg/springframework/integration/store/MessageMetadata;

+###org/springframework/integration/store/UniqueExpiryCallback
@5.0.10.RELEASE
@5.1.0.RELEASE
-###org/springframework/integration/store/UniqueExpiryCallback

+###org/springframework/integration/store/MessageHolder
@5.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/Message;)V
+#setTimestamp(J)V
+#getMessage()Lorg/springframework/messaging/Message;
+#getMessageMetadata()Lorg/springframework/integration/store/MessageMetadata;

+###org/springframework/integration/store/MessageGroupQueue
@2.0.0.RELEASE
+#<init>(Lorg/springframework/integration/store/MessageGroupStore;Ljava/lang/Object;)V
+#<init>(Lorg/springframework/integration/store/MessageGroupStore;Ljava/lang/Object;I)V
+#setStoreLock(Ljava/lang/Object;)V
+#iterator()Ljava/util/Iterator;
+#size()I
+#offer(Lorg/springframework/integration/Message;)Z
+#peek()Lorg/springframework/integration/Message;
+#poll()Lorg/springframework/integration/Message;
+#drainTo(Ljava/util/Collection;)I
+#drainTo(Ljava/util/Collection;I)I
+#offer(Lorg/springframework/integration/Message;JLjava/util/concurrent/TimeUnit;)Z
+#poll(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/integration/Message;
+#put(Lorg/springframework/integration/Message;)V
+#remainingCapacity()I
+#take()Lorg/springframework/integration/Message;
+#peek()Ljava/lang/Object;
+#poll()Ljava/lang/Object;
+#offer(Ljava/lang/Object;)Z
+#poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#take()Ljava/lang/Object;
+#offer(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
+#put(Ljava/lang/Object;)V
@2.1.0.RELEASE
+#<init>(Lorg/springframework/integration/store/MessageGroupStore;Ljava/lang/Object;Ljava/util/concurrent/locks/Lock;)V
+#<init>(Lorg/springframework/integration/store/MessageGroupStore;Ljava/lang/Object;ILjava/util/concurrent/locks/Lock;)V
-#setStoreLock(Ljava/lang/Object;)V
@4.0.0.RELEASE
+#<init>(Lorg/springframework/integration/store/BasicMessageGroupStore;Ljava/lang/Object;)V
+#<init>(Lorg/springframework/integration/store/BasicMessageGroupStore;Ljava/lang/Object;I)V
+#<init>(Lorg/springframework/integration/store/BasicMessageGroupStore;Ljava/lang/Object;Ljava/util/concurrent/locks/Lock;)V
+#<init>(Lorg/springframework/integration/store/BasicMessageGroupStore;Ljava/lang/Object;ILjava/util/concurrent/locks/Lock;)V
+#setPriority(Z)V
+#peek()Lorg/springframework/messaging/Message;
+#poll(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/messaging/Message;
+#poll()Lorg/springframework/messaging/Message;
+#offer(Lorg/springframework/messaging/Message;)Z
+#offer(Lorg/springframework/messaging/Message;JLjava/util/concurrent/TimeUnit;)Z
+#put(Lorg/springframework/messaging/Message;)V
+#take()Lorg/springframework/messaging/Message;
-#<init>(Lorg/springframework/integration/store/MessageGroupStore;Ljava/lang/Object;)V
-#<init>(Lorg/springframework/integration/store/MessageGroupStore;Ljava/lang/Object;I)V
-#<init>(Lorg/springframework/integration/store/MessageGroupStore;Ljava/lang/Object;Ljava/util/concurrent/locks/Lock;)V
-#<init>(Lorg/springframework/integration/store/MessageGroupStore;Ljava/lang/Object;ILjava/util/concurrent/locks/Lock;)V
-#peek()Lorg/springframework/integration/Message;
-#poll(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/integration/Message;
-#poll()Lorg/springframework/integration/Message;
-#offer(Lorg/springframework/integration/Message;)Z
-#offer(Lorg/springframework/integration/Message;JLjava/util/concurrent/TimeUnit;)Z
-#put(Lorg/springframework/integration/Message;)V
-#take()Lorg/springframework/integration/Message;
@5.5.0
+#stream()Ljava/util/stream/Stream;

+###org/springframework/integration/store/SimpleMessageGroupFactory$GroupType
@4.3.0.RELEASE
+#values()[Lorg/springframework/integration/store/SimpleMessageGroupFactory$GroupType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/integration/store/SimpleMessageGroupFactory$GroupType;

+###org/springframework/integration/store/AbstractBatchingMessageGroupStore
@4.2.0.RELEASE
+#<init>()V
+#setRemoveBatchSize(I)V
+#getRemoveBatchSize()I
@4.3.0.RELEASE
+#setMessageGroupFactory(Lorg/springframework/integration/store/MessageGroupFactory;)V

+###org/springframework/integration/store/MessageGroupFactory
@4.3.0.RELEASE
+#create(Ljava/lang/Object;)Lorg/springframework/integration/store/MessageGroup;
+#create(Ljava/util/Collection;Ljava/lang/Object;)Lorg/springframework/integration/store/MessageGroup;
+#create(Ljava/util/Collection;Ljava/lang/Object;JZ)Lorg/springframework/integration/store/MessageGroup;
+#create(Lorg/springframework/integration/store/MessageGroupStore;Ljava/lang/Object;)Lorg/springframework/integration/store/MessageGroup;
+#create(Lorg/springframework/integration/store/MessageGroupStore;Ljava/lang/Object;JZ)Lorg/springframework/integration/store/MessageGroup;

+###org/springframework/integration/store/MessageStoreException
@2.1.0.RELEASE
+#<init>(Lorg/springframework/integration/Message;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;)V
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/Message;)V
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;)V
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
-#<init>(Lorg/springframework/integration/Message;)V
-#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;)V
-#<init>(Lorg/springframework/integration/Message;Ljava/lang/Throwable;)V
-#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/integration/store/BasicMessageGroupStore
@4.0.0.RELEASE
+#messageGroupSize(Ljava/lang/Object;)I
+#getMessageGroup(Ljava/lang/Object;)Lorg/springframework/integration/store/MessageGroup;
+#addMessageToGroup(Ljava/lang/Object;Lorg/springframework/messaging/Message;)Lorg/springframework/integration/store/MessageGroup;
+#pollMessageFromGroup(Ljava/lang/Object;)Lorg/springframework/messaging/Message;
+#removeMessageGroup(Ljava/lang/Object;)V

+###org/springframework/integration/store/SimpleMessageStore
@2.0.0.RELEASE
+#<init>(II)V
+#<init>(I)V
+#<init>()V
+#getMessageCount()I
+#addMessage(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
+#getMessage(Ljava/util/UUID;)Lorg/springframework/integration/Message;
+#removeMessage(Ljava/util/UUID;)Lorg/springframework/integration/Message;
+#getMessageGroup(Ljava/lang/Object;)Lorg/springframework/integration/store/MessageGroup;
+#addMessageToGroup(Ljava/lang/Object;Lorg/springframework/integration/Message;)Lorg/springframework/integration/store/MessageGroup;
+#markMessageGroup(Lorg/springframework/integration/store/MessageGroup;)Lorg/springframework/integration/store/MessageGroup;
+#removeMessageGroup(Ljava/lang/Object;)V
+#removeMessageFromGroup(Ljava/lang/Object;Lorg/springframework/integration/Message;)Lorg/springframework/integration/store/MessageGroup;
+#markMessageFromGroup(Ljava/lang/Object;Lorg/springframework/integration/Message;)Lorg/springframework/integration/store/MessageGroup;
+#iterator()Ljava/util/Iterator;
@2.1.0.RELEASE
+#getMessageCount()J
+#setLastReleasedSequenceNumberForGroup(Ljava/lang/Object;I)V
+#completeGroup(Ljava/lang/Object;)V
+#pollMessageFromGroup(Ljava/lang/Object;)Lorg/springframework/integration/Message;
+#messageGroupSize(Ljava/lang/Object;)I
-#getMessageCount()I
-#markMessageGroup(Lorg/springframework/integration/store/MessageGroup;)Lorg/springframework/integration/store/MessageGroup;
-#markMessageFromGroup(Ljava/lang/Object;Lorg/springframework/integration/Message;)Lorg/springframework/integration/store/MessageGroup;
@2.1.2.RELEASE
+#<init>(IILorg/springframework/integration/util/LockRegistry;)V
+#setLockRegistry(Lorg/springframework/integration/util/LockRegistry;)V
@4.0.0.RELEASE
+#<init>(IILorg/springframework/integration/support/locks/LockRegistry;)V
+#setLockRegistry(Lorg/springframework/integration/support/locks/LockRegistry;)V
+#addMessage(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
+#getMessage(Ljava/util/UUID;)Lorg/springframework/messaging/Message;
+#removeMessage(Ljava/util/UUID;)Lorg/springframework/messaging/Message;
+#addMessageToGroup(Ljava/lang/Object;Lorg/springframework/messaging/Message;)Lorg/springframework/integration/store/MessageGroup;
+#removeMessageFromGroup(Ljava/lang/Object;Lorg/springframework/messaging/Message;)Lorg/springframework/integration/store/MessageGroup;
+#pollMessageFromGroup(Ljava/lang/Object;)Lorg/springframework/messaging/Message;
+#getGroupMetadata(Ljava/lang/Object;)Lorg/springframework/integration/store/MessageGroupMetadata;
+#getOneMessageFromGroup(Ljava/lang/Object;)Lorg/springframework/messaging/Message;
-#<init>(IILorg/springframework/integration/util/LockRegistry;)V
-#setLockRegistry(Lorg/springframework/integration/util/LockRegistry;)V
-#addMessage(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
-#getMessage(Ljava/util/UUID;)Lorg/springframework/integration/Message;
-#removeMessage(Ljava/util/UUID;)Lorg/springframework/integration/Message;
-#addMessageToGroup(Ljava/lang/Object;Lorg/springframework/integration/Message;)Lorg/springframework/integration/store/MessageGroup;
-#removeMessageFromGroup(Ljava/lang/Object;Lorg/springframework/integration/Message;)Lorg/springframework/integration/store/MessageGroup;
-#pollMessageFromGroup(Ljava/lang/Object;)Lorg/springframework/integration/Message;
@4.0.1.RELEASE
+#fastMessageStore(I)Lorg/springframework/integration/store/SimpleMessageStore;
+#setCopyOnGet(Z)V
@4.1.0.RELEASE
*#fastMessageStore(I)Lorg/springframework/integration/store/SimpleMessageStore;[deprecated]
@4.2.0.RELEASE
+#removeMessagesFromGroup(Ljava/lang/Object;Ljava/util/Collection;)V
@4.3.0.RELEASE
+#<init>(IIJ)V
+#<init>(IIJLorg/springframework/integration/support/locks/LockRegistry;)V
+#setLazyLoadMessageGroups(Z)V
+#addMessagesToGroup(Ljava/lang/Object;[Lorg/springframework/messaging/Message;)V
*#removeMessageFromGroup(Ljava/lang/Object;Lorg/springframework/messaging/Message;)Lorg/springframework/integration/store/MessageGroup;[deprecated]
+#getMessagesForGroup(Ljava/lang/Object;)Ljava/util/Collection;
+#clearMessageGroup(Ljava/lang/Object;)V
-#fastMessageStore(I)Lorg/springframework/integration/store/SimpleMessageStore;[deprecated]
-#addMessageToGroup(Ljava/lang/Object;Lorg/springframework/messaging/Message;)Lorg/springframework/integration/store/MessageGroup;
@5.0.0.RELEASE
+#getMessageMetadata(Ljava/util/UUID;)Lorg/springframework/integration/store/MessageMetadata;
-#removeMessageFromGroup(Ljava/lang/Object;Lorg/springframework/messaging/Message;)Lorg/springframework/integration/store/MessageGroup;[deprecated]
@5.5.0
+#setGroupCondition(Ljava/lang/Object;Ljava/lang/String;)V

+###org/springframework/integration/scattergather/ScatterGatherHandler
@4.2.0.RELEASE
+#<init>(Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/MessageHandler;)V
+#<init>(Lorg/springframework/messaging/MessageHandler;Lorg/springframework/messaging/MessageHandler;)V
+#setGatherChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setGatherTimeout(J)V
+#start()V
+#stop()V
+#isRunning()Z
@5.1.3.RELEASE
+#setErrorChannelName(Ljava/lang/String;)V
@5.3.0.RELEASE
+#getComponentType()Ljava/lang/String;
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/metadata/SimpleMetadataStore
@3.0.0.RELEASE
+#<init>()V
+#put(Ljava/lang/String;Ljava/lang/String;)V
+#get(Ljava/lang/String;)Ljava/lang/String;
+#remove(Ljava/lang/String;)Ljava/lang/String;
@4.0.0.RELEASE
+#putIfAbsent(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#replace(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
@4.1.4.RELEASE
+#<init>(Ljava/util/concurrent/ConcurrentMap;)V

+###org/springframework/integration/metadata/PropertiesPersistingMetadataStore
@3.0.0.RELEASE
+#<init>()V
+#setBaseDirectory(Ljava/lang/String;)V
+#afterPropertiesSet()V
+#put(Ljava/lang/String;Ljava/lang/String;)V
+#get(Ljava/lang/String;)Ljava/lang/String;
+#remove(Ljava/lang/String;)Ljava/lang/String;
+#destroy()V
@4.0.0.RELEASE
+#putIfAbsent(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#replace(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
@4.1.2.RELEASE
+#close()V
+#flush()V
@4.1.7.RELEASE
+#setFileName(Ljava/lang/String;)V

+###org/springframework/integration/metadata/ConcurrentMetadataStore
@4.0.0.RELEASE
+#putIfAbsent(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#replace(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z

+###org/springframework/integration/metadata/MetadataStoreListenerAdapter
@4.2.0.RELEASE
+#<init>()V
+#onAdd(Ljava/lang/String;Ljava/lang/String;)V
+#onRemove(Ljava/lang/String;Ljava/lang/String;)V
+#onUpdate(Ljava/lang/String;Ljava/lang/String;)V

+###org/springframework/integration/metadata/MetadataStoreListener
@4.2.0.RELEASE
+#onAdd(Ljava/lang/String;Ljava/lang/String;)V
+#onRemove(Ljava/lang/String;Ljava/lang/String;)V
+#onUpdate(Ljava/lang/String;Ljava/lang/String;)V

+###org/springframework/integration/metadata/ListenableMetadataStore
@4.2.0.RELEASE
+#addListener(Lorg/springframework/integration/metadata/MetadataStoreListener;)V
+#removeListener(Lorg/springframework/integration/metadata/MetadataStoreListener;)V

+###org/springframework/integration/metadata/MetadataStore
@3.0.0.RELEASE
+#put(Ljava/lang/String;Ljava/lang/String;)V
+#get(Ljava/lang/String;)Ljava/lang/String;
+#remove(Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/integration/splitter/ExpressionEvaluatingSplitter
@2.0.0.RELEASE
+#<init>(Lorg/springframework/expression/Expression;)V
+#onInit()V
@3.0.0.RELEASE
-#onInit()V
@4.2.0.RELEASE
+#isRunning()Z
+#stop()V
+#start()V

+###org/springframework/integration/splitter/AbstractMessageSplitter
@1.0.1.RELEASE
+#<init>()V
@2.0.0.RELEASE
+#setApplySequence(Z)V
+#getComponentType()Ljava/lang/String;
@5.2.0.RELEASE
+#setDiscardChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setDiscardChannelName(Ljava/lang/String;)V
+#getDiscardChannel()Lorg/springframework/messaging/MessageChannel;
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/splitter/DefaultMessageSplitter
@1.0.1.RELEASE
+#<init>()V
+#setDelimiters(Ljava/lang/String;)V

+###org/springframework/integration/splitter/MethodInvokingSplitter
@1.0.1.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#<init>(Ljava/lang/Object;)V
@2.0.0.RELEASE
+#onInit()V
@3.0.0.RELEASE
-#onInit()V
@4.2.0.RELEASE
+#isRunning()Z
+#stop()V
+#start()V

+###org/springframework/integration/support/locks/PassThruLockRegistry
@4.0.0.RELEASE
+#<init>()V
+#obtain(Ljava/lang/Object;)Ljava/util/concurrent/locks/Lock;

+###org/springframework/integration/support/locks/LockRegistry
@4.0.0.RELEASE
+#obtain(Ljava/lang/Object;)Ljava/util/concurrent/locks/Lock;

+###org/springframework/integration/support/locks/DefaultLockRegistry
@4.0.0.RELEASE
+#<init>()V
+#<init>(I)V
+#obtain(Ljava/lang/Object;)Ljava/util/concurrent/locks/Lock;

+###org/springframework/integration/support/locks/ExpirableLockRegistry
@4.2.0.RELEASE
+#expireUnusedOlderThan(J)V

+###org/springframework/integration/support/ErrorMessageStrategy
@4.3.10.RELEASE
+#buildErrorMessage(Ljava/lang/Throwable;Lorg/springframework/core/AttributeAccessor;)Lorg/springframework/messaging/support/ErrorMessage;

+###org/springframework/integration/support/MutableMessageBuilderFactory
@4.1.0.RELEASE
+#<init>()V
+#fromMessage(Lorg/springframework/messaging/Message;)Lorg/springframework/integration/support/MutableMessageBuilder;
+#withPayload(Ljava/lang/Object;)Lorg/springframework/integration/support/MutableMessageBuilder;
+#withPayload(Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#fromMessage(Lorg/springframework/messaging/Message;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;

+###org/springframework/integration/support/IdGenerators$SimpleIncrementingIdGenerator
@4.0.0.RELEASE
+#<init>()V
+#generateId()Ljava/util/UUID;

+###org/springframework/integration/support/StringObjectMapBuilder
@5.0.6.RELEASE
+#<init>()V

+###org/springframework/integration/support/ObjectStringMapBuilder
@5.0.2.RELEASE
+#<init>()V

+###org/springframework/integration/support/DefaultErrorMessageStrategy
@4.3.10.RELEASE
+#<init>()V
+#buildErrorMessage(Ljava/lang/Throwable;Lorg/springframework/core/AttributeAccessor;)Lorg/springframework/messaging/support/ErrorMessage;

+###org/springframework/integration/support/MessageBuilderFactory
@4.0.0.RELEASE
+#fromMessage(Lorg/springframework/messaging/Message;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#withPayload(Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;

+###org/springframework/integration/support/DefaultMessageBuilderFactory
@4.0.0.RELEASE
+#<init>()V
+#fromMessage(Lorg/springframework/messaging/Message;)Lorg/springframework/integration/support/MessageBuilder;
+#withPayload(Ljava/lang/Object;)Lorg/springframework/integration/support/MessageBuilder;
+#withPayload(Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#fromMessage(Lorg/springframework/messaging/Message;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
@4.3.2.RELEASE
+#setReadOnlyHeaders([Ljava/lang/String;)V
@4.3.10.RELEASE
+#addReadOnlyHeaders([Ljava/lang/String;)V

+###org/springframework/integration/support/ErrorMessageUtils
@4.3.10.RELEASE
+#getAttributeAccessor(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/Message;)Lorg/springframework/core/AttributeAccessor;

+###org/springframework/integration/support/utils/PatternMatchUtils
@5.1.0.RELEASE
+#smartMatchIgnoreCase(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Boolean;
+#smartMatch(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Boolean;

+###org/springframework/integration/support/utils/IntegrationUtils
@4.0.0.RELEASE
+#<init>()V
+#getConversionService(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/core/convert/ConversionService;
+#getMessageBuilderFactory(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/integration/support/MessageBuilderFactory;
@4.2.0.RELEASE
+#stringToBytes(Ljava/lang/String;Ljava/lang/String;)[B
+#bytesToString([BLjava/lang/String;)Ljava/lang/String;
@4.3.0.RELEASE
-#<init>()V
@5.0.4.RELEASE
+#wrapInDeliveryExceptionIfNecessary(Lorg/springframework/messaging/Message;Ljava/util/function/Supplier;Ljava/lang/Exception;)Ljava/lang/RuntimeException;
+#wrapInHandlingExceptionIfNecessary(Lorg/springframework/messaging/Message;Ljava/util/function/Supplier;Ljava/lang/Exception;)Ljava/lang/RuntimeException;
@5.2.0.RELEASE
+#wrapInDeliveryExceptionIfNecessary(Lorg/springframework/messaging/Message;Ljava/util/function/Supplier;Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
+#wrapInHandlingExceptionIfNecessary(Lorg/springframework/messaging/Message;Ljava/util/function/Supplier;Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
-#wrapInDeliveryExceptionIfNecessary(Lorg/springframework/messaging/Message;Ljava/util/function/Supplier;Ljava/lang/Exception;)Ljava/lang/RuntimeException;
-#wrapInHandlingExceptionIfNecessary(Lorg/springframework/messaging/Message;Ljava/util/function/Supplier;Ljava/lang/Exception;)Ljava/lang/RuntimeException;
@5.3.0.RELEASE
+#obtainComponentName(Lorg/springframework/integration/support/context/NamedComponent;)Ljava/lang/String;

+###org/springframework/integration/support/PropertiesBuilder
@5.0.0.RELEASE
+#<init>()V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/integration/support/PropertiesBuilder;
+#get()Ljava/util/Properties;

+###org/springframework/integration/support/context/NamedComponent
@3.0.0.RELEASE
+#getComponentName()Ljava/lang/String;
+#getComponentType()Ljava/lang/String;
@5.1.3.RELEASE
+#getBeanName()Ljava/lang/String;

+###org/springframework/integration/support/MutableMessageHeaders
@4.2.0.RELEASE
+#<init>(Ljava/util/Map;)V
+#putAll(Ljava/util/Map;)V
+#put(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/integration/support/SmartLifecycleRoleController
@4.2.0.RELEASE
+#<init>(Ljava/util/List;Ljava/util/List;)V
+#<init>(Lorg/springframework/util/MultiValueMap;)V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#addLifecycleToRole(Ljava/lang/String;Lorg/springframework/context/SmartLifecycle;)V
+#addLifecycleToRole(Ljava/lang/String;Ljava/lang/String;)V
+#addLifecyclesToRole(Ljava/lang/String;Ljava/util/List;)V
+#startLifecyclesInRole(Ljava/lang/String;)V
+#stopLifecyclesInRole(Ljava/lang/String;)V
+#onApplicationEvent(Lorg/springframework/integration/leader/event/AbstractLeaderEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@4.3.8.RELEASE
+#getRoles()Ljava/util/Collection;
+#allEndpointsRunning(Ljava/lang/String;)Z
+#noEndpointsRunning(Ljava/lang/String;)Z
+#getEndpointsRunningStatus(Ljava/lang/String;)Ljava/util/Map;
@5.0.0.RELEASE
+#removeLifecycle(Lorg/springframework/context/SmartLifecycle;)Z
@5.5.0
+#<init>()V

+###org/springframework/integration/support/MessageBuilder
@2.0.0.RELEASE
+#fromMessage(Lorg/springframework/integration/Message;)Lorg/springframework/integration/support/MessageBuilder;
+#withPayload(Ljava/lang/Object;)Lorg/springframework/integration/support/MessageBuilder;
+#setHeader(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/support/MessageBuilder;
+#setHeaderIfAbsent(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/support/MessageBuilder;
+#removeHeader(Ljava/lang/String;)Lorg/springframework/integration/support/MessageBuilder;
+#copyHeaders(Ljava/util/Map;)Lorg/springframework/integration/support/MessageBuilder;
+#copyHeadersIfAbsent(Ljava/util/Map;)Lorg/springframework/integration/support/MessageBuilder;
+#setExpirationDate(Ljava/lang/Long;)Lorg/springframework/integration/support/MessageBuilder;
+#setExpirationDate(Ljava/util/Date;)Lorg/springframework/integration/support/MessageBuilder;
+#setCorrelationId(Ljava/lang/Object;)Lorg/springframework/integration/support/MessageBuilder;
+#pushSequenceDetails(Ljava/lang/Object;II)Lorg/springframework/integration/support/MessageBuilder;
+#popSequenceDetails()Lorg/springframework/integration/support/MessageBuilder;
+#setReplyChannel(Lorg/springframework/integration/MessageChannel;)Lorg/springframework/integration/support/MessageBuilder;
+#setReplyChannelName(Ljava/lang/String;)Lorg/springframework/integration/support/MessageBuilder;
+#setErrorChannel(Lorg/springframework/integration/MessageChannel;)Lorg/springframework/integration/support/MessageBuilder;
+#setErrorChannelName(Ljava/lang/String;)Lorg/springframework/integration/support/MessageBuilder;
+#setSequenceNumber(Ljava/lang/Integer;)Lorg/springframework/integration/support/MessageBuilder;
+#setSequenceSize(Ljava/lang/Integer;)Lorg/springframework/integration/support/MessageBuilder;
+#setPriority(Ljava/lang/Integer;)Lorg/springframework/integration/support/MessageBuilder;
+#build()Lorg/springframework/integration/Message;
@2.0.5.RELEASE
+#removeHeaders([Ljava/lang/String;)Lorg/springframework/integration/support/MessageBuilder;
@4.0.0.RELEASE
+#fromMessage(Lorg/springframework/messaging/Message;)Lorg/springframework/integration/support/MessageBuilder;
+#setReplyChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/support/MessageBuilder;
+#setErrorChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/support/MessageBuilder;
+#build()Lorg/springframework/messaging/Message;
+#setPriority(Ljava/lang/Integer;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#setSequenceSize(Ljava/lang/Integer;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#setSequenceNumber(Ljava/lang/Integer;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#setErrorChannelName(Ljava/lang/String;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#setErrorChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#setReplyChannelName(Ljava/lang/String;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#setReplyChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#popSequenceDetails()Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#pushSequenceDetails(Ljava/lang/Object;II)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#setCorrelationId(Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#setExpirationDate(Ljava/util/Date;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#setExpirationDate(Ljava/lang/Long;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#copyHeadersIfAbsent(Ljava/util/Map;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#copyHeaders(Ljava/util/Map;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#removeHeader(Ljava/lang/String;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#removeHeaders([Ljava/lang/String;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#setHeaderIfAbsent(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#setHeader(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
-#fromMessage(Lorg/springframework/integration/Message;)Lorg/springframework/integration/support/MessageBuilder;
-#setReplyChannel(Lorg/springframework/integration/MessageChannel;)Lorg/springframework/integration/support/MessageBuilder;
-#setErrorChannel(Lorg/springframework/integration/MessageChannel;)Lorg/springframework/integration/support/MessageBuilder;
-#build()Lorg/springframework/integration/Message;
@4.3.0.RELEASE
+#getPayload()Ljava/lang/Object;
+#getHeaders()Ljava/util/Map;
@4.3.2.RELEASE
+#readOnlyHeaders([Ljava/lang/String;)Lorg/springframework/integration/support/MessageBuilder;
@5.2.0.RELEASE
+#getHeader(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;

+###org/springframework/integration/support/json/Jackson2JsonObjectMapper
@3.0.0.RELEASE
+#<init>()V
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;)V
+#toJson(Ljava/lang/Object;)Ljava/lang/String;
+#toJson(Ljava/lang/Object;Ljava/io/Writer;)V
+#fromJson(Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/reflect/Type;)Ljava/lang/Object;
+#populateJavaTypes(Ljava/util/Map;Ljava/lang/Class;)V
+#fromJson(Ljava/lang/Object;Ljava/lang/reflect/Type;)Ljava/lang/Object;
@4.0.0.RELEASE
+#toJsonNode(Ljava/lang/Object;)Lcom/fasterxml/jackson/databind/JsonNode;
+#toJsonNode(Ljava/lang/Object;)Ljava/lang/Object;
@4.1.0.RELEASE
-#populateJavaTypes(Ljava/util/Map;Ljava/lang/Class;)V
@5.0.0.RELEASE
+#getObjectMapper()Lcom/fasterxml/jackson/databind/ObjectMapper;

+###org/springframework/integration/support/json/JsonObjectMapperAdapter
@3.0.0.RELEASE
+#<init>()V
+#toJson(Ljava/lang/Object;)Ljava/lang/String;
+#toJson(Ljava/lang/Object;Ljava/io/Writer;)V
+#fromJson(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#fromJson(Ljava/lang/Object;Ljava/lang/reflect/Type;)Ljava/lang/Object;
+#fromJson(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Object;
+#populateJavaTypes(Ljava/util/Map;Ljava/lang/Class;)V
@4.0.0.RELEASE
+#toJsonNode(Ljava/lang/Object;)Ljava/lang/Object;
@4.1.0.RELEASE
+#populateJavaTypes(Ljava/util/Map;Ljava/lang/Object;)V
-#populateJavaTypes(Ljava/util/Map;Ljava/lang/Class;)V
@5.2.0.RELEASE
-#toJson(Ljava/lang/Object;)Ljava/lang/String;
-#toJson(Ljava/lang/Object;Ljava/io/Writer;)V
-#toJsonNode(Ljava/lang/Object;)Ljava/lang/Object;
-#fromJson(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
-#fromJson(Ljava/lang/Object;Ljava/lang/reflect/Type;)Ljava/lang/Object;
-#fromJson(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Object;
-#populateJavaTypes(Ljava/util/Map;Ljava/lang/Object;)V
@5.3.0.RELEASE
-###org/springframework/integration/support/json/JsonObjectMapperAdapter

+###org/springframework/integration/support/json/GenericMessageJacksonDeserializer
@4.3.10.RELEASE
+#<init>()V

+###org/springframework/integration/support/json/MessageHeadersJacksonSerializer
@4.3.10.RELEASE
+#<init>()V
+#serializeWithType(Lorg/springframework/messaging/MessageHeaders;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V
+#serialize(Lorg/springframework/messaging/MessageHeaders;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
+#serializeWithType(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V

+###org/springframework/integration/support/json/Jackson2JsonMessageParser
@3.0.0.RELEASE
+#<init>()V
+#doInParser(Lorg/springframework/integration/support/json/JsonInboundMessageMapper;Ljava/lang/String;)Lorg/springframework/integration/Message;
@4.0.0.RELEASE
+#doInParser(Lorg/springframework/integration/support/json/JsonInboundMessageMapper;Ljava/lang/String;)Lorg/springframework/messaging/Message;
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
-#doInParser(Lorg/springframework/integration/support/json/JsonInboundMessageMapper;Ljava/lang/String;)Lorg/springframework/integration/Message;
@4.3.0.RELEASE
+#<init>(Lorg/springframework/integration/support/json/Jackson2JsonObjectMapper;)V
@5.0.0.RELEASE
+#doInParser(Lorg/springframework/integration/support/json/JsonInboundMessageMapper;Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/messaging/Message;
-#doInParser(Lorg/springframework/integration/support/json/JsonInboundMessageMapper;Ljava/lang/String;)Lorg/springframework/messaging/Message;

+###org/springframework/integration/support/json/JsonObjectMapper
@3.0.0.RELEASE
+#toJson(Ljava/lang/Object;)Ljava/lang/String;
+#toJson(Ljava/lang/Object;Ljava/io/Writer;)V
+#fromJson(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#fromJson(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Object;
+#fromJson(Ljava/lang/Object;Ljava/lang/reflect/Type;)Ljava/lang/Object;
+#populateJavaTypes(Ljava/util/Map;Ljava/lang/Class;)V
@4.0.0.RELEASE
+#toJsonNode(Ljava/lang/Object;)Ljava/lang/Object;
@4.1.0.RELEASE
+#populateJavaTypes(Ljava/util/Map;Ljava/lang/Object;)V
-#populateJavaTypes(Ljava/util/Map;Ljava/lang/Class;)V
@5.2.0.RELEASE
+#fromJson(Ljava/lang/Object;Lorg/springframework/core/ResolvableType;)Ljava/lang/Object;
+#buildResolvableType(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
@5.2.4.RELEASE
-#buildResolvableType(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;

+###org/springframework/integration/support/json/JsonOutboundMessageMapper
@3.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/integration/support/json/JsonObjectMapper;)V
+#setShouldExtractPayload(Z)V
+#fromMessage(Lorg/springframework/integration/Message;)Ljava/lang/String;
+#fromMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;
@4.0.0.RELEASE
+#fromMessage(Lorg/springframework/messaging/Message;)Ljava/lang/String;
+#fromMessage(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
-#fromMessage(Lorg/springframework/integration/Message;)Ljava/lang/String;
-#fromMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;

+###org/springframework/integration/support/json/JsonInboundMessageMapper
@3.0.0.RELEASE
+#<init>(Ljava/lang/Class;Lorg/springframework/integration/support/json/JsonInboundMessageMapper$JsonMessageParser;)V
+#<init>(Ljava/lang/reflect/Type;Lorg/springframework/integration/support/json/JsonInboundMessageMapper$JsonMessageParser;)V
+#isMapToPayload()Z
+#getPayloadType()Ljava/lang/reflect/Type;
+#getHeaderTypes()Ljava/util/Map;
+#toMessage(Ljava/lang/String;)Lorg/springframework/integration/Message;
+#toMessage(Ljava/lang/Object;)Lorg/springframework/integration/Message;
@4.0.0.RELEASE
+#toMessage(Ljava/lang/String;)Lorg/springframework/messaging/Message;
+#toMessage(Ljava/lang/Object;)Lorg/springframework/messaging/Message;
-#toMessage(Ljava/lang/String;)Lorg/springframework/integration/Message;
-#toMessage(Ljava/lang/Object;)Lorg/springframework/integration/Message;
@5.0.0.RELEASE
+#toMessage(Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/messaging/Message;
+#toMessage(Ljava/lang/Object;Ljava/util/Map;)Lorg/springframework/messaging/Message;
-#toMessage(Ljava/lang/String;)Lorg/springframework/messaging/Message;
-#toMessage(Ljava/lang/Object;)Lorg/springframework/messaging/Message;
@5.2.0.RELEASE
-#isMapToPayload()Z

+###org/springframework/integration/support/json/MessageJacksonDeserializer
@4.3.10.RELEASE
+#setMapper(Lcom/fasterxml/jackson/databind/ObjectMapper;)V
+#convert(Lcom/fasterxml/jackson/databind/JsonNode;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lorg/springframework/messaging/Message;
+#convert(Lcom/fasterxml/jackson/databind/JsonNode;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
@6.0.0
+#deserializeWithType(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/jsontype/TypeDeserializer;)Ljava/lang/Object;

+###org/springframework/integration/support/json/JsonInboundMessageMapper$JsonMessageParser
@3.0.0.RELEASE
+#doInParser(Lorg/springframework/integration/support/json/JsonInboundMessageMapper;Ljava/lang/String;)Lorg/springframework/integration/Message;
@4.0.0.RELEASE
+#doInParser(Lorg/springframework/integration/support/json/JsonInboundMessageMapper;Ljava/lang/String;)Lorg/springframework/messaging/Message;
-#doInParser(Lorg/springframework/integration/support/json/JsonInboundMessageMapper;Ljava/lang/String;)Lorg/springframework/integration/Message;
@5.0.0.RELEASE
+#doInParser(Lorg/springframework/integration/support/json/JsonInboundMessageMapper;Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/messaging/Message;
-#doInParser(Lorg/springframework/integration/support/json/JsonInboundMessageMapper;Ljava/lang/String;)Lorg/springframework/messaging/Message;

+###org/springframework/integration/support/json/EmbeddedJsonHeadersMessageMapper
@5.0.0.RELEASE
+#<init>()V
+#<init>([Ljava/lang/String;)V
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;)V
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;[Ljava/lang/String;)V
+#setRawBytes(Z)V
+#setCaseSensitive(Z)V
+#getHeaderPatterns()Ljava/util/Collection;
+#fromMessage(Lorg/springframework/messaging/Message;)[B
+#toMessage([BLjava/util/Map;)Lorg/springframework/messaging/Message;
+#toMessage(Ljava/lang/Object;Ljava/util/Map;)Lorg/springframework/messaging/Message;
+#fromMessage(Lorg/springframework/messaging/Message;)Ljava/lang/Object;

+###org/springframework/integration/support/json/ErrorMessageJacksonDeserializer
@4.3.10.RELEASE
+#<init>()V

+###org/springframework/integration/support/json/BoonJsonObjectMapper
@4.1.0.RELEASE
+#<init>()V
+#<init>(Lorg/boon/json/JsonParserFactory;Lorg/boon/json/JsonSerializerFactory;)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#toJson(Ljava/lang/Object;)Ljava/lang/String;
+#toJson(Ljava/lang/Object;Ljava/io/Writer;)V
+#toJsonNode(Ljava/lang/Object;)Ljava/util/Map;
+#fromJson(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#fromJson(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Object;
+#fromJson(Ljava/lang/Object;Ljava/lang/reflect/Type;)Ljava/lang/Object;
+#toJsonNode(Ljava/lang/Object;)Ljava/lang/Object;
@5.3.0.RELEASE
-###org/springframework/integration/support/json/BoonJsonObjectMapper

+###org/springframework/integration/support/json/AbstractJsonInboundMessageMapper
@3.0.0.RELEASE
+#<init>(Ljava/lang/reflect/Type;)V
+#setHeaderTypes(Ljava/util/Map;)V
+#setMapToPayload(Z)V
@5.2.0.RELEASE
+#isMapToPayload()Z

+###org/springframework/integration/support/json/JacksonPresent
@4.3.10.RELEASE
+#isJackson2Present()Z
+#isJacksonPresent()Z
@5.3.0.RELEASE
*#isJacksonPresent()Z[deprecated]
@5.4.0
-#isJacksonPresent()Z[deprecated]

+###org/springframework/integration/support/json/MutableMessageJacksonDeserializer
@4.3.10.RELEASE
+#<init>()V

+###org/springframework/integration/support/json/JacksonJsonUtils
@3.0.0.RELEASE
+#<init>()V
+#isJackson2Present()Z
+#isJacksonPresent()Z
+#getNoJacksonLibException()Ljava/lang/IllegalStateException;
@4.1.0.RELEASE
-#getNoJacksonLibException()Ljava/lang/IllegalStateException;
@4.3.0.RELEASE
-#<init>()V
@4.3.10.RELEASE
*#isJackson2Present()Z[deprecated]
*#isJacksonPresent()Z[deprecated]
+#messagingAwareMapper()Lcom/fasterxml/jackson/databind/ObjectMapper;
@4.3.11.RELEASE
+#messagingAwareMapper([Ljava/lang/String;)Lcom/fasterxml/jackson/databind/ObjectMapper;
-#messagingAwareMapper()Lcom/fasterxml/jackson/databind/ObjectMapper;
@5.0.0.RELEASE
-#isJackson2Present()Z[deprecated]
-#isJacksonPresent()Z[deprecated]

+###org/springframework/integration/support/json/AbstractJacksonJsonObjectMapper
@3.0.0.RELEASE
+#<init>()V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#fromJson(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#fromJson(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Object;
@5.2.0.RELEASE
+#fromJson(Ljava/lang/Object;Lorg/springframework/core/ResolvableType;)Ljava/lang/Object;

+###org/springframework/integration/support/json/AdviceMessageJacksonDeserializer
@4.3.10.RELEASE
+#<init>()V

+###org/springframework/integration/support/json/JsonObjectMapperProvider
@4.1.0.RELEASE
+#<init>()V
+#newInstance()Lorg/springframework/integration/support/json/JsonObjectMapper;
@4.2.7.RELEASE
+#jsonAvailable()Z
-#<init>()V

+###org/springframework/integration/support/IdGenerators$JdkIdGenerator
@4.0.0.RELEASE
+#<init>()V
+#generateId()Ljava/util/UUID;

+###org/springframework/integration/support/channel/BeanFactoryChannelResolver
@2.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/beans/factory/BeanFactory;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#resolveChannelName(Ljava/lang/String;)Lorg/springframework/integration/MessageChannel;
@4.0.0.RELEASE
+#resolveDestination(Ljava/lang/String;)Lorg/springframework/messaging/MessageChannel;
+#resolveDestination(Ljava/lang/String;)Ljava/lang/Object;
-#resolveChannelName(Ljava/lang/String;)Lorg/springframework/integration/MessageChannel;

+###org/springframework/integration/support/channel/HeaderChannelRegistry
@3.0.0.RELEASE
+#channelToChannelName(Ljava/lang/Object;)Ljava/lang/Object;
+#channelNameToChannel(Ljava/lang/String;)Lorg/springframework/integration/MessageChannel;
+#size()I
+#runReaper()V
@4.0.0.RELEASE
+#channelNameToChannel(Ljava/lang/String;)Lorg/springframework/messaging/MessageChannel;
-#channelNameToChannel(Ljava/lang/String;)Lorg/springframework/integration/MessageChannel;
@4.1.0.RELEASE
+#channelToChannelName(Ljava/lang/Object;J)Ljava/lang/Object;

+###org/springframework/integration/support/MutableMessage
@4.2.0.RELEASE
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/util/Map;)V
+#getHeaders()Lorg/springframework/integration/support/MutableMessageHeaders;
+#getPayload()Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getHeaders()Lorg/springframework/messaging/MessageHeaders;
@6.0.0
+#of(Lorg/springframework/messaging/Message;)Lorg/springframework/integration/support/MutableMessage;

+###org/springframework/integration/support/MessageDecorator
@4.2.9.RELEASE
+#decorateMessage(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
@4.3.0.RELEASE
-###org/springframework/integration/support/MessageDecorator

+###org/springframework/integration/support/NullAwarePayloadArgumentResolver
@5.1.0.RELEASE
+#<init>(Lorg/springframework/messaging/converter/MessageConverter;)V
+#<init>(Lorg/springframework/messaging/converter/MessageConverter;Lorg/springframework/validation/Validator;)V

+###org/springframework/integration/support/MutableMessageBuilder
@4.0.0.RELEASE
+#fromMessage(Lorg/springframework/messaging/Message;)Lorg/springframework/integration/support/MutableMessageBuilder;
+#withPayload(Ljava/lang/Object;)Lorg/springframework/integration/support/MutableMessageBuilder;
+#setHeader(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#setHeaderIfAbsent(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#removeHeaders([Ljava/lang/String;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#removeHeader(Ljava/lang/String;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#copyHeaders(Ljava/util/Map;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#copyHeadersIfAbsent(Ljava/util/Map;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#build()Lorg/springframework/messaging/Message;
@4.3.0.RELEASE
+#getPayload()Ljava/lang/Object;
+#getHeaders()Ljava/util/Map;
@5.0.0.RELEASE
+#withPayload(Ljava/lang/Object;Z)Lorg/springframework/integration/support/MutableMessageBuilder;
@5.2.0.RELEASE
+#getHeader(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;

+###org/springframework/integration/support/StringStringMapBuilder
@5.0.0.RELEASE
+#<init>()V

+###org/springframework/integration/support/MessagingExceptionWrapper
@5.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessagingException;)V

+###org/springframework/integration/support/MapBuilder
@5.0.0.RELEASE
+#<init>()V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/integration/support/MapBuilder;
+#get()Ljava/util/Map;

+###org/springframework/integration/support/management/Statistics
@4.2.0.RELEASE
+#<init>(JDDDD)V
+#getCount()I
+#getCountLong()J
+#getMin()D
+#getMax()D
+#getMean()D
+#getStandardDeviation()D
+#toString()Ljava/lang/String;
@4.2.13.RELEASE
+#setMean(D)V
@4.3.0.RELEASE
-#setMean(D)V
@4.3.9.RELEASE
+#setMean(D)V
@5.4.0
-###org/springframework/integration/support/management/Statistics

+###org/springframework/integration/support/management/AggregatingMessageChannelMetrics
@4.2.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;Lorg/springframework/integration/support/management/ExponentialMovingAverage;Lorg/springframework/integration/support/management/ExponentialMovingAverageRate;Lorg/springframework/integration/support/management/ExponentialMovingAverageRatio;Lorg/springframework/integration/support/management/ExponentialMovingAverageRate;I)V
+#beforeSend()Lorg/springframework/integration/support/management/MetricsContext;
+#afterSend(Lorg/springframework/integration/support/management/MetricsContext;Z)V
@5.4.0
-###org/springframework/integration/support/management/AggregatingMessageChannelMetrics

+###org/springframework/integration/support/management/IntegrationManagement
@4.2.0.RELEASE
+#setLoggingEnabled(Z)V
+#isLoggingEnabled()Z
+#reset()V
+#setCountsEnabled(Z)V
+#isCountsEnabled()Z
@5.0.0.RELEASE
+#getOverrides()Lorg/springframework/integration/support/management/IntegrationManagement$ManagementOverrides;
@5.0.3.RELEASE
+#registerMeterRegistry(Lio/micrometer/core/instrument/MeterRegistry;)V
@5.0.4.RELEASE
+#registerMetricsCaptor(Lorg/springframework/integration/support/management/MetricsCaptor;)V
-#registerMeterRegistry(Lio/micrometer/core/instrument/MeterRegistry;)V
@5.1.0.RELEASE
+#registerMetricsCaptor(Lorg/springframework/integration/support/management/metrics/MetricsCaptor;)V
-#registerMetricsCaptor(Lorg/springframework/integration/support/management/MetricsCaptor;)V
@5.2.0.RELEASE
+#destroy()V
@5.3.0.RELEASE
*#reset()V[deprecated]
*#setCountsEnabled(Z)V[deprecated]
*#isCountsEnabled()Z[deprecated]
@5.4.0
+#setManagedName(Ljava/lang/String;)V
+#getManagedName()Ljava/lang/String;
+#setManagedType(Ljava/lang/String;)V
+#getManagedType()Ljava/lang/String;
+#getThisAs()Ljava/lang/Object;
-#reset()V[deprecated]
-#setCountsEnabled(Z)V[deprecated]
-#isCountsEnabled()Z[deprecated]
@6.0.0
+#registerObservationRegistry(Lio/micrometer/observation/ObservationRegistry;)V
@6.0.1
+#isObserved()Z

+###org/springframework/integration/support/management/LifecycleMessageHandlerMetrics
@4.2.0.RELEASE
+#<init>(Lorg/springframework/context/Lifecycle;Lorg/springframework/integration/support/management/MessageHandlerMetrics;)V
+#configureMetrics(Lorg/springframework/integration/support/management/AbstractMessageHandlerMetrics;)V
+#isRunning()Z
+#start()V
+#stop()V
+#reset()V
+#getErrorCount()I
+#getHandleCount()I
+#getMaxDuration()D
+#getMeanDuration()D
+#getMinDuration()D
+#getStandardDeviationDuration()D
+#getDuration()Lorg/springframework/integration/support/management/Statistics;
+#getManagedName()Ljava/lang/String;
+#getManagedType()Ljava/lang/String;
+#getActiveCount()I
+#getHandleCountLong()J
+#getErrorCountLong()J
+#getActiveCountLong()J
+#setStatsEnabled(Z)V
+#setCountsEnabled(Z)V
+#isStatsEnabled()Z
+#isCountsEnabled()Z
+#setLoggingEnabled(Z)V
+#isLoggingEnabled()Z
+#setManagedName(Ljava/lang/String;)V
+#setManagedType(Ljava/lang/String;)V
+#configureMetrics(Lorg/springframework/integration/support/management/ConfigurableMetrics;)V
@4.3.0.RELEASE
+#getDelegate()Lorg/springframework/integration/support/management/MessageHandlerMetrics;
@5.0.0.RELEASE
+#getOverrides()Lorg/springframework/integration/support/management/IntegrationManagement$ManagementOverrides;
@5.0.2.RELEASE
+#setTimer(Lio/micrometer/core/instrument/Timer;)V
+#setErrorCounter(Lio/micrometer/core/instrument/Counter;)V
@5.0.4.RELEASE
-#setTimer(Lio/micrometer/core/instrument/Timer;)V
-#setErrorCounter(Lio/micrometer/core/instrument/Counter;)V
@5.1.0.RELEASE
+#destroy()V
@5.4.0
-###org/springframework/integration/support/management/LifecycleMessageHandlerMetrics

+###org/springframework/integration/support/management/micrometer/MicrometerMetricsCaptor$AbstractMeter
@5.1.0.RELEASE
+#remove()Lorg/springframework/integration/support/management/metrics/MeterFacade;

+###org/springframework/integration/support/management/micrometer/MicrometerMetricsCaptor$MicroGauge
@5.1.0.RELEASE
@5.1.3.RELEASE
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/integration/support/management/micrometer/MicrometerMetricsCaptor$MicroTimerBuilder
@5.1.0.RELEASE
+#tag(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/support/management/micrometer/MicrometerMetricsCaptor$MicroTimerBuilder;
+#description(Ljava/lang/String;)Lorg/springframework/integration/support/management/micrometer/MicrometerMetricsCaptor$MicroTimerBuilder;
+#build()Lorg/springframework/integration/support/management/micrometer/MicrometerMetricsCaptor$MicroTimer;
+#build()Lorg/springframework/integration/support/management/metrics/TimerFacade;
+#description(Ljava/lang/String;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor$TimerBuilder;
+#tag(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor$TimerBuilder;

+###org/springframework/integration/support/management/micrometer/MicrometerMetricsCaptor$MicroCounterBuilder
@5.1.0.RELEASE
+#tag(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor$CounterBuilder;
+#description(Ljava/lang/String;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor$CounterBuilder;
+#build()Lorg/springframework/integration/support/management/metrics/CounterFacade;

+###org/springframework/integration/support/management/micrometer/MicrometerMetricsCaptor$MicroCounter
@5.1.0.RELEASE
+#increment()V
@5.1.3.RELEASE
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/integration/support/management/micrometer/MicrometerMetricsCaptor$MicroGaugeBuilder
@5.1.0.RELEASE
+#tag(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor$GaugeBuilder;
+#description(Ljava/lang/String;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor$GaugeBuilder;
+#build()Lorg/springframework/integration/support/management/metrics/GaugeFacade;

+###org/springframework/integration/support/management/micrometer/MicrometerMetricsCaptor$MicroTimer
@5.1.0.RELEASE
+#record(JLjava/util/concurrent/TimeUnit;)V
@5.1.3.RELEASE
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/integration/support/management/micrometer/MicrometerMetricsCaptor
@5.0.4.RELEASE
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;)V
+#timerBuilder(Ljava/lang/String;)Lorg/springframework/integration/support/management/MetricsCaptor$TimerBuilder;
+#counterBuilder(Ljava/lang/String;)Lorg/springframework/integration/support/management/MetricsCaptor$CounterBuilder;
+#gaugeBuilder(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lorg/springframework/integration/support/management/MetricsCaptor$GaugeBuilder;
+#start()Lorg/springframework/integration/support/management/SampleFacade;
+#loadCaptor(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/integration/support/management/MetricsCaptor;
@5.1.0.RELEASE
+#timerBuilder(Ljava/lang/String;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor$TimerBuilder;
+#counterBuilder(Ljava/lang/String;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor$CounterBuilder;
+#gaugeBuilder(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor$GaugeBuilder;
+#start()Lorg/springframework/integration/support/management/metrics/SampleFacade;
+#removeMeter(Lorg/springframework/integration/support/management/metrics/MeterFacade;)Lorg/springframework/integration/support/management/metrics/MeterFacade;
+#loadCaptor(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor;
-#timerBuilder(Ljava/lang/String;)Lorg/springframework/integration/support/management/MetricsCaptor$TimerBuilder;
-#counterBuilder(Ljava/lang/String;)Lorg/springframework/integration/support/management/MetricsCaptor$CounterBuilder;
-#gaugeBuilder(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lorg/springframework/integration/support/management/MetricsCaptor$GaugeBuilder;
-#start()Lorg/springframework/integration/support/management/SampleFacade;
-#loadCaptor(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/integration/support/management/MetricsCaptor;
@5.2.9.RELEASE
+#getMeterRegistry()Lio/micrometer/core/instrument/MeterRegistry;
*#loadCaptor(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor;[deprecated]
@5.3.0.RELEASE
-#getMeterRegistry()Lio/micrometer/core/instrument/MeterRegistry;
@5.3.3.RELEASE
+#getMeterRegistry()Lio/micrometer/core/instrument/MeterRegistry;
*#loadCaptor(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor;[deprecated]
@6.0.0
-#loadCaptor(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor;[deprecated]

+###org/springframework/integration/support/management/RouterMetrics
@4.2.0.RELEASE
+#<init>(Lorg/springframework/context/Lifecycle;Lorg/springframework/integration/support/management/MappingMessageRouterManagement;)V
+#setChannelMapping(Ljava/lang/String;Ljava/lang/String;)V
+#removeChannelMapping(Ljava/lang/String;)V
+#replaceChannelMappings(Ljava/util/Properties;)V
+#getChannelMappings()Ljava/util/Map;
+#setChannelMappings(Ljava/util/Map;)V
@4.3.0.RELEASE
+#getDynamicChannelNames()Ljava/util/Collection;
@5.4.0
-###org/springframework/integration/support/management/RouterMetrics

+###org/springframework/integration/support/management/AggregatingMetricsFactory
@4.2.0.RELEASE
+#<init>(I)V
+#createChannelMetrics(Ljava/lang/String;)Lorg/springframework/integration/support/management/AbstractMessageChannelMetrics;
+#createHandlerMetrics(Ljava/lang/String;)Lorg/springframework/integration/support/management/AbstractMessageHandlerMetrics;
@5.4.0
-###org/springframework/integration/support/management/AggregatingMetricsFactory

+###org/springframework/integration/support/management/PollableChannelManagement
@4.2.0.RELEASE
+#getReceiveCount()I
+#getReceiveCountLong()J
+#getReceiveErrorCount()I
+#getReceiveErrorCountLong()J
@5.2.0.RELEASE
+#receiveCount()J
+#receiveErrorCount()J
@5.4.0
-###org/springframework/integration/support/management/PollableChannelManagement

+###org/springframework/integration/support/management/MessageSourceManagement
@5.1.0.RELEASE
+#setMaxFetchSize(I)V
+#getMaxFetchSize()I

+###org/springframework/integration/support/management/ExponentialMovingAverage
@4.2.0.RELEASE
+#<init>(I)V
+#<init>(ID)V
+#reset()V
+#append(D)V
+#getCount()I
+#getCountLong()J
+#getMean()D
+#getStandardDeviation()D
+#getMax()D
+#getMin()D
+#getStatistics()Lorg/springframework/integration/support/management/Statistics;
+#toString()Ljava/lang/String;
@5.4.0
-###org/springframework/integration/support/management/ExponentialMovingAverage

+###org/springframework/integration/support/management/IntegrationManagedResource
@4.2.0.RELEASE
+#value()Ljava/lang/String;
+#objectName()Ljava/lang/String;
+#description()Ljava/lang/String;
+#currencyTimeLimit()I
+#log()Z
+#logFile()Ljava/lang/String;
+#persistPolicy()Ljava/lang/String;
+#persistPeriod()I
+#persistName()Ljava/lang/String;
+#persistLocation()Ljava/lang/String;

+###org/springframework/integration/support/management/MetricsContext
@4.2.0.RELEASE
@5.4.0
-###org/springframework/integration/support/management/MetricsContext

+###org/springframework/integration/support/management/MessageChannelMetrics
@4.2.0.RELEASE
+#getSendCount()I
+#getSendCountLong()J
+#getSendErrorCount()I
+#getSendErrorCountLong()J
+#getTimeSinceLastSend()D
+#getMeanSendRate()D
+#getMeanErrorRate()D
+#getMeanErrorRatio()D
+#getMeanSendDuration()D
+#getMinSendDuration()D
+#getMaxSendDuration()D
+#getStandardDeviationSendDuration()D
+#getSendDuration()Lorg/springframework/integration/support/management/Statistics;
+#getSendRate()Lorg/springframework/integration/support/management/Statistics;
+#getErrorRate()Lorg/springframework/integration/support/management/Statistics;
@5.2.0.RELEASE
+#sendCount()J
+#sendErrorCount()J
@5.4.0
-###org/springframework/integration/support/management/MessageChannelMetrics

+###org/springframework/integration/support/management/DefaultMessageChannelMetrics$DefaultChannelMetricsContext
@4.2.0.RELEASE
@5.4.0
-###org/springframework/integration/support/management/DefaultMessageChannelMetrics$DefaultChannelMetricsContext

+###org/springframework/integration/support/management/LifecycleTrackableMessageHandlerMetrics
@4.2.0.RELEASE
+#<init>(Lorg/springframework/context/Lifecycle;Lorg/springframework/integration/support/management/MessageHandlerMetrics;)V
+#getComponentName()Ljava/lang/String;
+#getComponentType()Ljava/lang/String;
+#setShouldTrack(Z)V
@5.1.3.RELEASE
+#getBeanName()Ljava/lang/String;
@5.4.0
-###org/springframework/integration/support/management/LifecycleTrackableMessageHandlerMetrics

+###org/springframework/integration/support/management/LifecycleMessageSourceMetrics
@4.2.0.RELEASE
+#<init>(Lorg/springframework/context/Lifecycle;Lorg/springframework/integration/support/management/MessageSourceMetrics;)V
+#reset()V
+#isRunning()Z
+#start()V
+#stop()V
+#getManagedName()Ljava/lang/String;
+#getManagedType()Ljava/lang/String;
+#getMessageCount()I
+#getMessageCountLong()J
+#setCountsEnabled(Z)V
+#isCountsEnabled()Z
+#setLoggingEnabled(Z)V
+#isLoggingEnabled()Z
+#setManagedName(Ljava/lang/String;)V
+#setManagedType(Ljava/lang/String;)V
@4.3.0.RELEASE
+#getDelegate()Lorg/springframework/integration/support/management/MessageSourceMetrics;
@5.0.0.RELEASE
+#getOverrides()Lorg/springframework/integration/support/management/IntegrationManagement$ManagementOverrides;
@5.0.2.RELEASE
+#setCounter(Lio/micrometer/core/instrument/Counter;)V
@5.0.3.RELEASE
-#setCounter(Lio/micrometer/core/instrument/Counter;)V
@5.1.0.RELEASE
+#destroy()V
@5.4.0
-###org/springframework/integration/support/management/LifecycleMessageSourceMetrics

+###org/springframework/integration/support/management/ExponentialMovingAverageRate
@4.2.0.RELEASE
+#<init>(DDI)V
+#<init>(DDIZ)V
+#reset()V
+#increment()V
+#increment(J)V
+#getCount()I
+#getCountLong()J
+#getTimeSinceLastMeasurement()D
+#getMean()D
+#getStandardDeviation()D
+#getMax()D
+#getMin()D
+#getStatistics()Lorg/springframework/integration/support/management/Statistics;
+#toString()Ljava/lang/String;
@5.4.0
-###org/springframework/integration/support/management/ExponentialMovingAverageRate

+###org/springframework/integration/support/management/DefaultMetricsFactory
@4.2.0.RELEASE
+#<init>()V
+#createChannelMetrics(Ljava/lang/String;)Lorg/springframework/integration/support/management/AbstractMessageChannelMetrics;
+#createHandlerMetrics(Ljava/lang/String;)Lorg/springframework/integration/support/management/AbstractMessageHandlerMetrics;
@5.4.0
-###org/springframework/integration/support/management/DefaultMetricsFactory

+###org/springframework/integration/support/management/AbstractMessageChannelMetrics
@4.2.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#setFullStatsEnabled(Z)V
+#beforeSend()Lorg/springframework/integration/support/management/MetricsContext;
+#afterSend(Lorg/springframework/integration/support/management/MetricsContext;Z)V
+#reset()V
+#getSendCount()I
+#getSendCountLong()J
+#getSendErrorCount()I
+#getSendErrorCountLong()J
+#getTimeSinceLastSend()D
+#getMeanSendRate()D
+#getMeanErrorRate()D
+#getMeanErrorRatio()D
+#getMeanSendDuration()D
+#getMinSendDuration()D
+#getMaxSendDuration()D
+#getStandardDeviationSendDuration()D
+#getSendDuration()Lorg/springframework/integration/support/management/Statistics;
+#getSendRate()Lorg/springframework/integration/support/management/Statistics;
+#getErrorRate()Lorg/springframework/integration/support/management/Statistics;
+#afterReceive()V
+#afterError()V
+#getReceiveCount()I
+#getReceiveCountLong()J
+#getReceiveErrorCount()I
+#getReceiveErrorCountLong()J
@5.0.2.RELEASE
+#<init>(Ljava/lang/String;Lio/micrometer/core/instrument/Timer;Lio/micrometer/core/instrument/Counter;Lio/micrometer/core/instrument/Counter;Lio/micrometer/core/instrument/Counter;)V
+#getTimer()Lio/micrometer/core/instrument/Timer;
+#getErrorCounter()Lio/micrometer/core/instrument/Counter;
+#getReceiveCounter()Lio/micrometer/core/instrument/Counter;
+#getReceiveErrorCounter()Lio/micrometer/core/instrument/Counter;
@5.0.4.RELEASE
-#<init>(Ljava/lang/String;Lio/micrometer/core/instrument/Timer;Lio/micrometer/core/instrument/Counter;Lio/micrometer/core/instrument/Counter;Lio/micrometer/core/instrument/Counter;)V
-#getTimer()Lio/micrometer/core/instrument/Timer;
-#getErrorCounter()Lio/micrometer/core/instrument/Counter;
-#getReceiveCounter()Lio/micrometer/core/instrument/Counter;
-#getReceiveErrorCounter()Lio/micrometer/core/instrument/Counter;
@5.4.0
-###org/springframework/integration/support/management/AbstractMessageChannelMetrics

+###org/springframework/integration/support/management/metrics/MetricsCaptor$TimerBuilder
@5.1.0.RELEASE
+#tag(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor$TimerBuilder;
+#description(Ljava/lang/String;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor$TimerBuilder;
+#build()Lorg/springframework/integration/support/management/metrics/TimerFacade;

+###org/springframework/integration/support/management/metrics/SampleFacade
@5.1.0.RELEASE
+#stop(Lorg/springframework/integration/support/management/metrics/TimerFacade;)V

+###org/springframework/integration/support/management/metrics/CounterFacade
@5.1.0.RELEASE
+#increment()V

+###org/springframework/integration/support/management/metrics/MetricsCaptor$GaugeBuilder
@5.1.0.RELEASE
+#tag(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor$GaugeBuilder;
+#description(Ljava/lang/String;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor$GaugeBuilder;
+#build()Lorg/springframework/integration/support/management/metrics/GaugeFacade;

+###org/springframework/integration/support/management/metrics/MeterFacade
@5.1.0.RELEASE
+#remove()Lorg/springframework/integration/support/management/metrics/MeterFacade;

+###org/springframework/integration/support/management/metrics/TimerFacade
@5.1.0.RELEASE
+#record(JLjava/util/concurrent/TimeUnit;)V

+###org/springframework/integration/support/management/metrics/MetricsCaptor
@5.1.0.RELEASE
+#timerBuilder(Ljava/lang/String;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor$TimerBuilder;
+#counterBuilder(Ljava/lang/String;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor$CounterBuilder;
+#gaugeBuilder(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor$GaugeBuilder;
+#start()Lorg/springframework/integration/support/management/metrics/SampleFacade;
+#removeMeter(Lorg/springframework/integration/support/management/metrics/MeterFacade;)Lorg/springframework/integration/support/management/metrics/MeterFacade;

+###org/springframework/integration/support/management/metrics/MetricsCaptor$CounterBuilder
@5.1.0.RELEASE
+#tag(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor$CounterBuilder;
+#description(Ljava/lang/String;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor$CounterBuilder;
+#build()Lorg/springframework/integration/support/management/metrics/CounterFacade;

+###org/springframework/integration/support/management/metrics/GaugeFacade
@5.1.0.RELEASE

+###org/springframework/integration/support/management/DefaultMessageHandlerMetrics$DefaultHandlerMetricsContext
@4.2.0.RELEASE
@5.4.0
-###org/springframework/integration/support/management/DefaultMessageHandlerMetrics$DefaultHandlerMetricsContext

+###org/springframework/integration/support/management/SubscribableChannelManagement
@4.3.6.RELEASE
+#getSubscriberCount()I

+###org/springframework/integration/support/management/MessageSourceMetricsConfigurer
@5.0.2.RELEASE
+#configure(Lorg/springframework/integration/support/management/MessageSourceMetrics;Ljava/lang/String;)V
@5.4.0
-###org/springframework/integration/support/management/MessageSourceMetricsConfigurer

+###org/springframework/integration/support/management/DefaultMessageHandlerMetrics
@4.2.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/springframework/integration/support/management/ExponentialMovingAverage;)V
+#beforeHandle()Lorg/springframework/integration/support/management/MetricsContext;
+#afterHandle(Lorg/springframework/integration/support/management/MetricsContext;Z)V
+#reset()V
+#getHandleCountLong()J
+#getHandleCount()I
+#getErrorCount()I
+#getErrorCountLong()J
+#getMeanDuration()D
+#getMinDuration()D
+#getMaxDuration()D
+#getStandardDeviationDuration()D
+#getActiveCount()I
+#getActiveCountLong()J
+#getDuration()Lorg/springframework/integration/support/management/Statistics;
@5.0.2.RELEASE
+#<init>(Ljava/lang/String;Lio/micrometer/core/instrument/Timer;Lio/micrometer/core/instrument/Counter;)V
+#<init>(Ljava/lang/String;Lorg/springframework/integration/support/management/ExponentialMovingAverage;Lio/micrometer/core/instrument/Timer;Lio/micrometer/core/instrument/Counter;)V
@5.0.4.RELEASE
-#<init>(Ljava/lang/String;Lio/micrometer/core/instrument/Timer;Lio/micrometer/core/instrument/Counter;)V
-#<init>(Ljava/lang/String;Lorg/springframework/integration/support/management/ExponentialMovingAverage;Lio/micrometer/core/instrument/Timer;Lio/micrometer/core/instrument/Counter;)V
@5.4.0
-###org/springframework/integration/support/management/DefaultMessageHandlerMetrics

+###org/springframework/integration/support/management/QueueChannelManagement
@4.2.0.RELEASE
+#getQueueSize()I
+#getRemainingCapacity()I
@5.4.0
-###org/springframework/integration/support/management/QueueChannelManagement

+###org/springframework/integration/support/management/AggregatingMessageHandlerMetrics$AggregatingHandlerMetricsContext
@4.2.0.RELEASE
+#<init>(JJ)V
@5.4.0
-###org/springframework/integration/support/management/AggregatingMessageHandlerMetrics$AggregatingHandlerMetricsContext

+###org/springframework/integration/support/management/ConfigurableMetrics
@4.2.0.RELEASE
@5.4.0
-###org/springframework/integration/support/management/ConfigurableMetrics

+###org/springframework/integration/support/management/MetricsFactory
@4.2.0.RELEASE
+#createChannelMetrics(Ljava/lang/String;)Lorg/springframework/integration/support/management/AbstractMessageChannelMetrics;
+#createHandlerMetrics(Ljava/lang/String;)Lorg/springframework/integration/support/management/AbstractMessageHandlerMetrics;
@5.0.2.RELEASE
+#createPollableChannelMetrics(Ljava/lang/String;)Lorg/springframework/integration/support/management/AbstractMessageChannelMetrics;
@5.4.0
-###org/springframework/integration/support/management/MetricsFactory

+###org/springframework/integration/support/management/AggregatingMessageHandlerMetrics
@4.2.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;Lorg/springframework/integration/support/management/ExponentialMovingAverage;I)V
+#beforeHandle()Lorg/springframework/integration/support/management/MetricsContext;
+#afterHandle(Lorg/springframework/integration/support/management/MetricsContext;Z)V
@5.4.0
-###org/springframework/integration/support/management/AggregatingMessageHandlerMetrics

+###org/springframework/integration/support/management/AbstractMessageHandlerMetrics
@4.2.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#setFullStatsEnabled(Z)V
+#beforeHandle()Lorg/springframework/integration/support/management/MetricsContext;
+#afterHandle(Lorg/springframework/integration/support/management/MetricsContext;Z)V
+#reset()V
+#getHandleCountLong()J
+#getHandleCount()I
+#getErrorCount()I
+#getErrorCountLong()J
+#getMeanDuration()D
+#getMinDuration()D
+#getMaxDuration()D
+#getStandardDeviationDuration()D
+#getActiveCount()I
+#getActiveCountLong()J
+#getDuration()Lorg/springframework/integration/support/management/Statistics;
@5.0.2.RELEASE
+#<init>(Ljava/lang/String;Lio/micrometer/core/instrument/Timer;Lio/micrometer/core/instrument/Counter;)V
+#getTimer()Lio/micrometer/core/instrument/Timer;
+#getErrorCounter()Lio/micrometer/core/instrument/Counter;
@5.0.4.RELEASE
-#<init>(Ljava/lang/String;Lio/micrometer/core/instrument/Timer;Lio/micrometer/core/instrument/Counter;)V
-#getTimer()Lio/micrometer/core/instrument/Timer;
-#getErrorCounter()Lio/micrometer/core/instrument/Counter;
@5.4.0
-###org/springframework/integration/support/management/AbstractMessageHandlerMetrics

+###org/springframework/integration/support/management/TrackableComponent
@4.2.0.RELEASE
+#setShouldTrack(Z)V

+###org/springframework/integration/support/management/ConfigurableMetricsAware
@4.2.0.RELEASE
+#configureMetrics(Lorg/springframework/integration/support/management/ConfigurableMetrics;)V
@5.4.0
-###org/springframework/integration/support/management/ConfigurableMetricsAware

+###org/springframework/integration/support/management/TrackableRouterMetrics
@4.2.0.RELEASE
+#<init>(Lorg/springframework/context/Lifecycle;Lorg/springframework/integration/support/management/MappingMessageRouterManagement;)V
+#getComponentName()Ljava/lang/String;
+#getComponentType()Ljava/lang/String;
+#setShouldTrack(Z)V
@5.1.3.RELEASE
+#getBeanName()Ljava/lang/String;
@5.4.0
-###org/springframework/integration/support/management/TrackableRouterMetrics

+###org/springframework/integration/support/management/MessageSourceMetrics
@4.2.0.RELEASE
+#getMessageCount()I
+#getMessageCountLong()J
+#setManagedName(Ljava/lang/String;)V
+#getManagedName()Ljava/lang/String;
+#setManagedType(Ljava/lang/String;)V
+#getManagedType()Ljava/lang/String;
@5.0.2.RELEASE
+#setCounter(Lio/micrometer/core/instrument/Counter;)V
@5.0.3.RELEASE
*#setCounter(Lio/micrometer/core/instrument/Counter;)V[deprecated]
@5.0.4.RELEASE
+#setCounter(Lorg/springframework/integration/support/management/CounterFacade;)V[deprecated]
-#setCounter(Lio/micrometer/core/instrument/Counter;)V[deprecated]
@5.1.0.RELEASE
-#setCounter(Lorg/springframework/integration/support/management/CounterFacade;)V[deprecated]
@5.2.0.RELEASE
+#messageCount()J
@5.4.0
-###org/springframework/integration/support/management/MessageSourceMetrics

+###org/springframework/integration/support/management/ExponentialMovingAverageRatio
@4.2.0.RELEASE
+#<init>(DI)V
+#<init>(DIZ)V
+#success()V
+#success(J)V
+#failure()V
+#failure(J)V
+#reset()V
+#getCount()I
+#getCountLong()J
+#getTimeSinceLastMeasurement()D
+#getMean()D
+#getStandardDeviation()D
+#getMax()D
+#getMin()D
+#getStatistics()Lorg/springframework/integration/support/management/Statistics;
+#toString()Ljava/lang/String;
@5.4.0
-###org/springframework/integration/support/management/ExponentialMovingAverageRatio

+###org/springframework/integration/support/management/MappingMessageRouterManagement
@4.2.0.RELEASE
+#setChannelMapping(Ljava/lang/String;Ljava/lang/String;)V
+#removeChannelMapping(Ljava/lang/String;)V
+#replaceChannelMappings(Ljava/util/Properties;)V
+#getChannelMappings()Ljava/util/Map;
+#setChannelMappings(Ljava/util/Map;)V
@4.3.0.RELEASE
+#getDynamicChannelNames()Ljava/util/Collection;

+###org/springframework/integration/support/management/LifecycleTrackableMessageSourceManagement
@5.0.0.RELEASE
+#<init>(Lorg/springframework/context/Lifecycle;Lorg/springframework/integration/endpoint/MessageSourceManagement;)V
+#setMaxFetchSize(I)V
+#getMaxFetchSize()I
@5.1.0.RELEASE
+#<init>(Lorg/springframework/context/Lifecycle;Lorg/springframework/integration/support/management/MessageSourceManagement;)V
-#<init>(Lorg/springframework/context/Lifecycle;Lorg/springframework/integration/endpoint/MessageSourceManagement;)V
@5.4.0
-###org/springframework/integration/support/management/LifecycleTrackableMessageSourceManagement

+###org/springframework/integration/support/management/AggregatingMessageChannelMetrics$AggregatingChannelMetricsContext
@4.2.0.RELEASE
+#<init>(JJ)V
@5.4.0
-###org/springframework/integration/support/management/AggregatingMessageChannelMetrics$AggregatingChannelMetricsContext

+###org/springframework/integration/support/management/DefaultMessageChannelMetrics
@4.2.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/springframework/integration/support/management/ExponentialMovingAverage;Lorg/springframework/integration/support/management/ExponentialMovingAverageRate;Lorg/springframework/integration/support/management/ExponentialMovingAverageRatio;Lorg/springframework/integration/support/management/ExponentialMovingAverageRate;)V
+#destroy()V
+#beforeSend()Lorg/springframework/integration/support/management/MetricsContext;
+#afterSend(Lorg/springframework/integration/support/management/MetricsContext;Z)V
+#reset()V
+#getSendCount()I
+#getSendCountLong()J
+#getSendErrorCount()I
+#getSendErrorCountLong()J
+#getTimeSinceLastSend()D
+#getMeanSendRate()D
+#getMeanErrorRate()D
+#getMeanErrorRatio()D
+#getMeanSendDuration()D
+#getMinSendDuration()D
+#getMaxSendDuration()D
+#getStandardDeviationSendDuration()D
+#getSendDuration()Lorg/springframework/integration/support/management/Statistics;
+#getSendRate()Lorg/springframework/integration/support/management/Statistics;
+#getErrorRate()Lorg/springframework/integration/support/management/Statistics;
+#afterReceive()V
+#afterError()V
+#getReceiveCount()I
+#getReceiveCountLong()J
+#getReceiveErrorCount()I
+#getReceiveErrorCountLong()J
+#toString()Ljava/lang/String;
@5.0.2.RELEASE
+#<init>(Ljava/lang/String;Lio/micrometer/core/instrument/Timer;Lio/micrometer/core/instrument/Counter;Lio/micrometer/core/instrument/Counter;Lio/micrometer/core/instrument/Counter;)V
+#<init>(Ljava/lang/String;Lorg/springframework/integration/support/management/ExponentialMovingAverage;Lorg/springframework/integration/support/management/ExponentialMovingAverageRate;Lorg/springframework/integration/support/management/ExponentialMovingAverageRatio;Lorg/springframework/integration/support/management/ExponentialMovingAverageRate;Lio/micrometer/core/instrument/Timer;Lio/micrometer/core/instrument/Counter;Lio/micrometer/core/instrument/Counter;Lio/micrometer/core/instrument/Counter;)V
@5.0.4.RELEASE
-#<init>(Ljava/lang/String;Lio/micrometer/core/instrument/Timer;Lio/micrometer/core/instrument/Counter;Lio/micrometer/core/instrument/Counter;Lio/micrometer/core/instrument/Counter;)V
-#<init>(Ljava/lang/String;Lorg/springframework/integration/support/management/ExponentialMovingAverage;Lorg/springframework/integration/support/management/ExponentialMovingAverageRate;Lorg/springframework/integration/support/management/ExponentialMovingAverageRatio;Lorg/springframework/integration/support/management/ExponentialMovingAverageRate;Lio/micrometer/core/instrument/Timer;Lio/micrometer/core/instrument/Counter;Lio/micrometer/core/instrument/Counter;Lio/micrometer/core/instrument/Counter;)V
@5.4.0
-###org/springframework/integration/support/management/DefaultMessageChannelMetrics

+###org/springframework/integration/support/management/LifecycleMessageSourceManagement
@5.0.0.RELEASE
+#<init>(Lorg/springframework/context/Lifecycle;Lorg/springframework/integration/endpoint/MessageSourceManagement;)V
+#setMaxFetchSize(I)V
+#getMaxFetchSize()I
@5.1.0.RELEASE
+#<init>(Lorg/springframework/context/Lifecycle;Lorg/springframework/integration/support/management/MessageSourceManagement;)V
-#<init>(Lorg/springframework/context/Lifecycle;Lorg/springframework/integration/endpoint/MessageSourceManagement;)V
@5.4.0
-###org/springframework/integration/support/management/LifecycleMessageSourceManagement

+###org/springframework/integration/support/management/LifecycleTrackableMessageSourceMetrics
@4.2.0.RELEASE
+#<init>(Lorg/springframework/context/Lifecycle;Lorg/springframework/integration/support/management/MessageSourceMetrics;)V
+#getComponentName()Ljava/lang/String;
+#getComponentType()Ljava/lang/String;
+#setShouldTrack(Z)V
@5.1.3.RELEASE
+#getBeanName()Ljava/lang/String;
@5.4.0
-###org/springframework/integration/support/management/LifecycleTrackableMessageSourceMetrics

+###org/springframework/integration/support/management/MessageHandlerMetrics
@4.2.0.RELEASE
+#getHandleCount()I
+#getHandleCountLong()J
+#getErrorCount()I
+#getErrorCountLong()J
+#getMeanDuration()D
+#getMinDuration()D
+#getMaxDuration()D
+#getStandardDeviationDuration()D
+#getActiveCount()I
+#getActiveCountLong()J
+#getDuration()Lorg/springframework/integration/support/management/Statistics;
+#setManagedName(Ljava/lang/String;)V
+#getManagedName()Ljava/lang/String;
+#setManagedType(Ljava/lang/String;)V
+#getManagedType()Ljava/lang/String;
@5.2.0.RELEASE
+#handleCount()J
+#errorCount()J
@5.4.0
-###org/springframework/integration/support/management/MessageHandlerMetrics

+###org/springframework/integration/support/management/IntegrationManagement$ManagementOverrides
@5.0.0.RELEASE
+#<init>()V

+###org/springframework/integration/support/management/IntegrationStatsManagement
@4.2.0.RELEASE
+#setStatsEnabled(Z)V
+#isStatsEnabled()Z
@5.0.2.RELEASE
+#setTimer(Lio/micrometer/core/instrument/Timer;)V
+#setErrorCounter(Lio/micrometer/core/instrument/Counter;)V
@5.0.4.RELEASE
-#setTimer(Lio/micrometer/core/instrument/Timer;)V
-#setErrorCounter(Lio/micrometer/core/instrument/Counter;)V
@5.4.0
-###org/springframework/integration/support/management/IntegrationStatsManagement

+###org/springframework/integration/support/AbstractIntegrationMessageBuilder
@4.0.0.RELEASE
+#<init>()V
+#setHeader(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#setHeaderIfAbsent(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#removeHeaders([Ljava/lang/String;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#removeHeader(Ljava/lang/String;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#copyHeaders(Ljava/util/Map;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#copyHeadersIfAbsent(Ljava/util/Map;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#setExpirationDate(Ljava/lang/Long;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#setExpirationDate(Ljava/util/Date;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#setCorrelationId(Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#pushSequenceDetails(Ljava/lang/Object;II)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#popSequenceDetails()Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#setReplyChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#setReplyChannelName(Ljava/lang/String;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#setErrorChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#setErrorChannelName(Ljava/lang/String;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#setSequenceNumber(Ljava/lang/Integer;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#setSequenceSize(Ljava/lang/Integer;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#setPriority(Ljava/lang/Integer;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#build()Lorg/springframework/messaging/Message;
@4.3.0.RELEASE
+#getPayload()Ljava/lang/Object;
+#getHeaders()Ljava/util/Map;
@5.1.0.RELEASE
+#filterAndCopyHeadersIfAbsent(Ljava/util/Map;[Ljava/lang/String;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
@5.2.0.RELEASE
+#getHeader(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;

+###org/springframework/integration/support/leader/LockRegistryLeaderInitiator$LeaderSelector
@4.3.1.RELEASE
+#call()Ljava/lang/Void;
+#isLeader()Z
+#call()Ljava/lang/Object;

+###org/springframework/integration/support/leader/LockRegistryLeaderInitiator
@4.3.1.RELEASE
+#<init>(Lorg/springframework/integration/support/locks/LockRegistry;)V
+#<init>(Lorg/springframework/integration/support/locks/LockRegistry;Lorg/springframework/integration/leader/Candidate;)V
+#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
+#setHeartBeatMillis(J)V
+#setBusyWaitMillis(J)V
+#setLeaderEventPublisher(Lorg/springframework/integration/leader/event/LeaderEventPublisher;)V
+#isRunning()Z
+#getPhase()I
+#setPhase(I)V
+#isAutoStartup()Z
+#setAutoStartup(Z)V
+#getContext()Lorg/springframework/integration/leader/Context;
+#start()V
+#destroy()V
+#stop(Ljava/lang/Runnable;)V
+#stop()V
@5.0.0.RELEASE
+#isPublishFailedEvents()Z
+#setPublishFailedEvents(Z)V
@5.0.2.RELEASE
+#setExecutorService(Ljava/util/concurrent/ExecutorService;)V
@5.1.7.RELEASE
-#stop(Ljava/lang/Runnable;)V

+###org/springframework/integration/support/IdGenerators
@4.0.0.RELEASE
+#<init>()V

+###org/springframework/integration/support/converter/MapMessageConverter
@3.0.0.RELEASE
+#<init>()V
+#setHeaderNames([Ljava/lang/String;)V
+#setFilterHeadersInToMessage(Z)V
+#toMessage(Ljava/lang/Object;)Lorg/springframework/integration/Message;
+#fromMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;
@4.0.0.RELEASE
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#toMessage(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
+#fromMessage(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Ljava/lang/Object;
-#toMessage(Ljava/lang/Object;)Lorg/springframework/integration/Message;
-#fromMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;

+###org/springframework/integration/support/converter/ConfigurableCompositeMessageConverter
@5.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/Collection;)V
+#<init>(Ljava/util/Collection;Z)V
@5.1.8.RELEASE
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#afterPropertiesSet()V

+###org/springframework/integration/support/converter/SimpleMessageConverter
@2.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/integration/mapping/InboundMessageMapper;)V
+#<init>(Lorg/springframework/integration/mapping/OutboundMessageMapper;)V
+#<init>(Lorg/springframework/integration/mapping/InboundMessageMapper;Lorg/springframework/integration/mapping/OutboundMessageMapper;)V
+#setInboundMessageMapper(Lorg/springframework/integration/mapping/InboundMessageMapper;)V
+#setOutboundMessageMapper(Lorg/springframework/integration/mapping/OutboundMessageMapper;)V
+#toMessage(Ljava/lang/Object;)Lorg/springframework/integration/Message;
+#fromMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;
@4.0.0.RELEASE
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#toMessage(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
+#fromMessage(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Ljava/lang/Object;
-#toMessage(Ljava/lang/Object;)Lorg/springframework/integration/Message;
-#fromMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;

+###org/springframework/integration/support/converter/PassThruMessageConverter
@4.2.0.RELEASE
+#<init>()V
+#fromMessage(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Ljava/lang/Object;
+#toMessage(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;

+###org/springframework/integration/support/converter/DefaultDatatypeChannelMessageConverter
@4.0.0.RELEASE
+#<init>()V
+#setConversionService(Lorg/springframework/core/convert/ConversionService;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#fromMessage(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Ljava/lang/Object;
+#toMessage(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;

+###org/springframework/integration/support/converter/ObjectStringMessageConverter
@5.0.0.RELEASE
+#<init>()V

+###org/springframework/integration/support/converter/WhiteListDeserializingConverter
@4.2.13.RELEASE
+#<init>()V
+#<init>(Ljava/lang/ClassLoader;)V
+#<init>(Lorg/springframework/core/serializer/Deserializer;)V
+#setWhiteListPatterns([Ljava/lang/String;)V
+#addWhiteListPatterns([Ljava/lang/String;)V
+#convert([B)Ljava/lang/Object;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@4.3.0.RELEASE
-###org/springframework/integration/support/converter/WhiteListDeserializingConverter

+###org/springframework/integration/support/PartialSuccessException
@4.2.0.RELEASE
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;Ljava/lang/Throwable;Ljava/util/Collection;Ljava/util/Collection;)V
+#getPartialResults()Ljava/util/Collection;
+#getDerivedInput()Ljava/util/Collection;
+#getPartialResults(Ljava/lang/Class;)Ljava/util/Collection;
+#getDerivedInput(Ljava/lang/Class;)Ljava/util/Collection;
+#toString()Ljava/lang/String;

+###org/springframework/integration/core/ErrorMessagePublisher
@5.1.0.RELEASE
+#<init>()V
+#setErrorMessageStrategy(Lorg/springframework/integration/support/ErrorMessageStrategy;)V
+#setChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setChannelName(Ljava/lang/String;)V
+#getErrorMessageStrategy()Lorg/springframework/integration/support/ErrorMessageStrategy;
+#getChannel()Lorg/springframework/messaging/MessageChannel;
+#setSendTimeout(J)V
+#setChannelResolver(Lorg/springframework/messaging/core/DestinationResolver;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#publish(Lorg/springframework/messaging/MessagingException;)V
+#publish(Lorg/springframework/messaging/Message;Ljava/lang/Throwable;)V
+#publish(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessagingException;)V
+#publish(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/Message;Ljava/lang/Throwable;)V
+#publish(Ljava/lang/Throwable;Lorg/springframework/core/AttributeAccessor;)V

+###org/springframework/integration/core/MessageSelector
@2.0.0.RELEASE
+#accept(Lorg/springframework/integration/Message;)Z
@4.0.0.RELEASE
+#accept(Lorg/springframework/messaging/Message;)Z
-#accept(Lorg/springframework/integration/Message;)Z
@5.0.0.RELEASE
+#accept(Ljava/lang/Object;)Z

+###org/springframework/integration/core/MessageSource
@2.0.0.RELEASE
+#receive()Lorg/springframework/integration/Message;
@4.0.0.RELEASE
+#receive()Lorg/springframework/messaging/Message;
-#receive()Lorg/springframework/integration/Message;
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/core/MessagingTemplate
@2.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/integration/MessageChannel;)V
+#setDefaultChannel(Lorg/springframework/integration/MessageChannel;)V
+#setChannelResolver(Lorg/springframework/integration/support/channel/ChannelResolver;)V
+#setMessageConverter(Lorg/springframework/integration/support/converter/MessageConverter;)V
+#setSendTimeout(J)V
+#setReceiveTimeout(J)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#afterPropertiesSet()V
+#send(Lorg/springframework/integration/Message;)V
+#send(Lorg/springframework/integration/MessageChannel;Lorg/springframework/integration/Message;)V
+#send(Ljava/lang/String;Lorg/springframework/integration/Message;)V
+#convertAndSend(Ljava/lang/Object;)V
+#convertAndSend(Lorg/springframework/integration/MessageChannel;Ljava/lang/Object;)V
+#convertAndSend(Ljava/lang/String;Ljava/lang/Object;)V
+#convertAndSend(Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)V
+#convertAndSend(Lorg/springframework/integration/MessageChannel;Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)V
+#convertAndSend(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)V
+#receive()Lorg/springframework/integration/Message;
+#receive(Lorg/springframework/integration/core/PollableChannel;)Lorg/springframework/integration/Message;
+#receive(Ljava/lang/String;)Lorg/springframework/integration/Message;
+#receiveAndConvert()Ljava/lang/Object;
+#receiveAndConvert(Lorg/springframework/integration/core/PollableChannel;)Ljava/lang/Object;
+#receiveAndConvert(Ljava/lang/String;)Ljava/lang/Object;
+#sendAndReceive(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
+#sendAndReceive(Lorg/springframework/integration/MessageChannel;Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
+#sendAndReceive(Ljava/lang/String;Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
+#convertSendAndReceive(Ljava/lang/Object;)Ljava/lang/Object;
+#convertSendAndReceive(Lorg/springframework/integration/MessageChannel;Ljava/lang/Object;)Ljava/lang/Object;
+#convertSendAndReceive(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#convertSendAndReceive(Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)Ljava/lang/Object;
+#convertSendAndReceive(Lorg/springframework/integration/MessageChannel;Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)Ljava/lang/Object;
+#convertSendAndReceive(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)Ljava/lang/Object;
@3.0.0.RELEASE
+#setThrowExceptionOnLateReply(Z)V
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/MessageChannel;)V
+#setDefaultChannel(Lorg/springframework/messaging/MessageChannel;)V
-#<init>(Lorg/springframework/integration/MessageChannel;)V
-#setDefaultChannel(Lorg/springframework/integration/MessageChannel;)V
-#setChannelResolver(Lorg/springframework/integration/support/channel/ChannelResolver;)V
-#setMessageConverter(Lorg/springframework/integration/support/converter/MessageConverter;)V
-#setSendTimeout(J)V
-#setReceiveTimeout(J)V
-#setThrowExceptionOnLateReply(Z)V
-#afterPropertiesSet()V
-#send(Lorg/springframework/integration/Message;)V
-#send(Lorg/springframework/integration/MessageChannel;Lorg/springframework/integration/Message;)V
-#send(Ljava/lang/String;Lorg/springframework/integration/Message;)V
-#convertAndSend(Ljava/lang/Object;)V
-#convertAndSend(Lorg/springframework/integration/MessageChannel;Ljava/lang/Object;)V
-#convertAndSend(Ljava/lang/String;Ljava/lang/Object;)V
-#convertAndSend(Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)V
-#convertAndSend(Lorg/springframework/integration/MessageChannel;Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)V
-#convertAndSend(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)V
-#receive()Lorg/springframework/integration/Message;
-#receive(Lorg/springframework/integration/core/PollableChannel;)Lorg/springframework/integration/Message;
-#receive(Ljava/lang/String;)Lorg/springframework/integration/Message;
-#receiveAndConvert()Ljava/lang/Object;
-#receiveAndConvert(Lorg/springframework/integration/core/PollableChannel;)Ljava/lang/Object;
-#receiveAndConvert(Ljava/lang/String;)Ljava/lang/Object;
-#sendAndReceive(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
-#sendAndReceive(Lorg/springframework/integration/MessageChannel;Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
-#sendAndReceive(Ljava/lang/String;Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
-#convertSendAndReceive(Ljava/lang/Object;)Ljava/lang/Object;
-#convertSendAndReceive(Lorg/springframework/integration/MessageChannel;Ljava/lang/Object;)Ljava/lang/Object;
-#convertSendAndReceive(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
-#convertSendAndReceive(Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)Ljava/lang/Object;
-#convertSendAndReceive(Lorg/springframework/integration/MessageChannel;Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)Ljava/lang/Object;
-#convertSendAndReceive(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)Ljava/lang/Object;
@4.2.0.RELEASE
+#setThrowExceptionOnLateReply(Z)V
+#sendAndReceive(Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
+#sendAndReceive(Ljava/lang/Object;Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
@5.0.0.RELEASE
+#receiveAndConvert(Lorg/springframework/messaging/MessageChannel;J)Ljava/lang/Object;
+#receive(Lorg/springframework/messaging/MessageChannel;J)Lorg/springframework/messaging/Message;

+###org/springframework/integration/core/MessageProducer
@2.0.0.RELEASE
+#setOutputChannel(Lorg/springframework/integration/MessageChannel;)V
@4.0.0.RELEASE
+#setOutputChannel(Lorg/springframework/messaging/MessageChannel;)V
-#setOutputChannel(Lorg/springframework/integration/MessageChannel;)V
@4.3.0.RELEASE
+#getOutputChannel()Lorg/springframework/messaging/MessageChannel;
@5.1.2.RELEASE
+#setOutputChannelName(Ljava/lang/String;)V

+###org/springframework/integration/core/AsyncMessagingOperations
@2.0.0.RELEASE
+#asyncSend(Lorg/springframework/integration/Message;)Ljava/util/concurrent/Future;
+#asyncSend(Lorg/springframework/integration/MessageChannel;Lorg/springframework/integration/Message;)Ljava/util/concurrent/Future;
+#asyncSend(Ljava/lang/String;Lorg/springframework/integration/Message;)Ljava/util/concurrent/Future;
+#asyncConvertAndSend(Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#asyncConvertAndSend(Lorg/springframework/integration/MessageChannel;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#asyncConvertAndSend(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#asyncReceive()Ljava/util/concurrent/Future;
+#asyncReceive(Lorg/springframework/integration/core/PollableChannel;)Ljava/util/concurrent/Future;
+#asyncReceive(Ljava/lang/String;)Ljava/util/concurrent/Future;
+#asyncReceiveAndConvert()Ljava/util/concurrent/Future;
+#asyncReceiveAndConvert(Lorg/springframework/integration/core/PollableChannel;)Ljava/util/concurrent/Future;
+#asyncReceiveAndConvert(Ljava/lang/String;)Ljava/util/concurrent/Future;
+#asyncSendAndReceive(Lorg/springframework/integration/Message;)Ljava/util/concurrent/Future;
+#asyncSendAndReceive(Lorg/springframework/integration/MessageChannel;Lorg/springframework/integration/Message;)Ljava/util/concurrent/Future;
+#asyncSendAndReceive(Ljava/lang/String;Lorg/springframework/integration/Message;)Ljava/util/concurrent/Future;
+#asyncConvertSendAndReceive(Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#asyncConvertSendAndReceive(Lorg/springframework/integration/MessageChannel;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#asyncConvertSendAndReceive(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#asyncConvertSendAndReceive(Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)Ljava/util/concurrent/Future;
+#asyncConvertSendAndReceive(Lorg/springframework/integration/MessageChannel;Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)Ljava/util/concurrent/Future;
+#asyncConvertSendAndReceive(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)Ljava/util/concurrent/Future;
@4.0.0.RELEASE
+#asyncSend(Lorg/springframework/messaging/Message;)Ljava/util/concurrent/Future;
+#asyncSend(Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/Message;)Ljava/util/concurrent/Future;
+#asyncSend(Ljava/lang/String;Lorg/springframework/messaging/Message;)Ljava/util/concurrent/Future;
+#asyncConvertAndSend(Lorg/springframework/messaging/MessageChannel;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#asyncReceive(Lorg/springframework/messaging/PollableChannel;)Ljava/util/concurrent/Future;
+#asyncReceiveAndConvert(Lorg/springframework/messaging/PollableChannel;)Ljava/util/concurrent/Future;
+#asyncSendAndReceive(Lorg/springframework/messaging/Message;)Ljava/util/concurrent/Future;
+#asyncSendAndReceive(Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/Message;)Ljava/util/concurrent/Future;
+#asyncSendAndReceive(Ljava/lang/String;Lorg/springframework/messaging/Message;)Ljava/util/concurrent/Future;
+#asyncConvertSendAndReceive(Lorg/springframework/messaging/MessageChannel;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#asyncConvertSendAndReceive(Ljava/lang/Object;Lorg/springframework/messaging/core/MessagePostProcessor;)Ljava/util/concurrent/Future;
+#asyncConvertSendAndReceive(Lorg/springframework/messaging/MessageChannel;Ljava/lang/Object;Lorg/springframework/messaging/core/MessagePostProcessor;)Ljava/util/concurrent/Future;
+#asyncConvertSendAndReceive(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/messaging/core/MessagePostProcessor;)Ljava/util/concurrent/Future;
-#asyncSend(Lorg/springframework/integration/Message;)Ljava/util/concurrent/Future;
-#asyncSend(Lorg/springframework/integration/MessageChannel;Lorg/springframework/integration/Message;)Ljava/util/concurrent/Future;
-#asyncSend(Ljava/lang/String;Lorg/springframework/integration/Message;)Ljava/util/concurrent/Future;
-#asyncConvertAndSend(Lorg/springframework/integration/MessageChannel;Ljava/lang/Object;)Ljava/util/concurrent/Future;
-#asyncReceive(Lorg/springframework/integration/core/PollableChannel;)Ljava/util/concurrent/Future;
-#asyncReceiveAndConvert(Lorg/springframework/integration/core/PollableChannel;)Ljava/util/concurrent/Future;
-#asyncSendAndReceive(Lorg/springframework/integration/Message;)Ljava/util/concurrent/Future;
-#asyncSendAndReceive(Lorg/springframework/integration/MessageChannel;Lorg/springframework/integration/Message;)Ljava/util/concurrent/Future;
-#asyncSendAndReceive(Ljava/lang/String;Lorg/springframework/integration/Message;)Ljava/util/concurrent/Future;
-#asyncConvertSendAndReceive(Lorg/springframework/integration/MessageChannel;Ljava/lang/Object;)Ljava/util/concurrent/Future;
-#asyncConvertSendAndReceive(Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)Ljava/util/concurrent/Future;
-#asyncConvertSendAndReceive(Lorg/springframework/integration/MessageChannel;Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)Ljava/util/concurrent/Future;
-#asyncConvertSendAndReceive(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)Ljava/util/concurrent/Future;

+###org/springframework/integration/core/AsyncMessagingTemplate
@2.0.0.RELEASE
+#<init>()V
+#setExecutor(Ljava/util/concurrent/Executor;)V
+#asyncSend(Lorg/springframework/integration/Message;)Ljava/util/concurrent/Future;
+#asyncSend(Lorg/springframework/integration/MessageChannel;Lorg/springframework/integration/Message;)Ljava/util/concurrent/Future;
+#asyncSend(Ljava/lang/String;Lorg/springframework/integration/Message;)Ljava/util/concurrent/Future;
+#asyncConvertAndSend(Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#asyncConvertAndSend(Lorg/springframework/integration/MessageChannel;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#asyncConvertAndSend(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#asyncReceive()Ljava/util/concurrent/Future;
+#asyncReceive(Lorg/springframework/integration/core/PollableChannel;)Ljava/util/concurrent/Future;
+#asyncReceive(Ljava/lang/String;)Ljava/util/concurrent/Future;
+#asyncReceiveAndConvert()Ljava/util/concurrent/Future;
+#asyncReceiveAndConvert(Lorg/springframework/integration/core/PollableChannel;)Ljava/util/concurrent/Future;
+#asyncReceiveAndConvert(Ljava/lang/String;)Ljava/util/concurrent/Future;
+#asyncSendAndReceive(Lorg/springframework/integration/Message;)Ljava/util/concurrent/Future;
+#asyncSendAndReceive(Lorg/springframework/integration/MessageChannel;Lorg/springframework/integration/Message;)Ljava/util/concurrent/Future;
+#asyncSendAndReceive(Ljava/lang/String;Lorg/springframework/integration/Message;)Ljava/util/concurrent/Future;
+#asyncConvertSendAndReceive(Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#asyncConvertSendAndReceive(Lorg/springframework/integration/MessageChannel;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#asyncConvertSendAndReceive(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#asyncConvertSendAndReceive(Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)Ljava/util/concurrent/Future;
+#asyncConvertSendAndReceive(Lorg/springframework/integration/MessageChannel;Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)Ljava/util/concurrent/Future;
+#asyncConvertSendAndReceive(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)Ljava/util/concurrent/Future;
@4.0.0.RELEASE
+#asyncSend(Lorg/springframework/messaging/Message;)Ljava/util/concurrent/Future;
+#asyncSend(Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/Message;)Ljava/util/concurrent/Future;
+#asyncSend(Ljava/lang/String;Lorg/springframework/messaging/Message;)Ljava/util/concurrent/Future;
+#asyncConvertAndSend(Lorg/springframework/messaging/MessageChannel;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#asyncReceive(Lorg/springframework/messaging/PollableChannel;)Ljava/util/concurrent/Future;
+#asyncReceiveAndConvert(Lorg/springframework/messaging/PollableChannel;)Ljava/util/concurrent/Future;
+#asyncSendAndReceive(Lorg/springframework/messaging/Message;)Ljava/util/concurrent/Future;
+#asyncSendAndReceive(Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/Message;)Ljava/util/concurrent/Future;
+#asyncSendAndReceive(Ljava/lang/String;Lorg/springframework/messaging/Message;)Ljava/util/concurrent/Future;
+#asyncConvertSendAndReceive(Lorg/springframework/messaging/MessageChannel;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#asyncConvertSendAndReceive(Ljava/lang/Object;Lorg/springframework/messaging/core/MessagePostProcessor;)Ljava/util/concurrent/Future;
+#asyncConvertSendAndReceive(Lorg/springframework/messaging/MessageChannel;Ljava/lang/Object;Lorg/springframework/messaging/core/MessagePostProcessor;)Ljava/util/concurrent/Future;
+#asyncConvertSendAndReceive(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/messaging/core/MessagePostProcessor;)Ljava/util/concurrent/Future;
-#asyncSend(Lorg/springframework/integration/Message;)Ljava/util/concurrent/Future;
-#asyncSend(Lorg/springframework/integration/MessageChannel;Lorg/springframework/integration/Message;)Ljava/util/concurrent/Future;
-#asyncSend(Ljava/lang/String;Lorg/springframework/integration/Message;)Ljava/util/concurrent/Future;
-#asyncConvertAndSend(Lorg/springframework/integration/MessageChannel;Ljava/lang/Object;)Ljava/util/concurrent/Future;
-#asyncReceive(Lorg/springframework/integration/core/PollableChannel;)Ljava/util/concurrent/Future;
-#asyncReceiveAndConvert(Lorg/springframework/integration/core/PollableChannel;)Ljava/util/concurrent/Future;
-#asyncSendAndReceive(Lorg/springframework/integration/Message;)Ljava/util/concurrent/Future;
-#asyncSendAndReceive(Lorg/springframework/integration/MessageChannel;Lorg/springframework/integration/Message;)Ljava/util/concurrent/Future;
-#asyncSendAndReceive(Ljava/lang/String;Lorg/springframework/integration/Message;)Ljava/util/concurrent/Future;
-#asyncConvertSendAndReceive(Lorg/springframework/integration/MessageChannel;Ljava/lang/Object;)Ljava/util/concurrent/Future;
-#asyncConvertSendAndReceive(Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)Ljava/util/concurrent/Future;
-#asyncConvertSendAndReceive(Lorg/springframework/integration/MessageChannel;Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)Ljava/util/concurrent/Future;
-#asyncConvertSendAndReceive(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)Ljava/util/concurrent/Future;

+###org/springframework/integration/core/GenericSelector
@4.0.0.RELEASE
+#accept(Ljava/lang/Object;)Z

+###org/springframework/integration/annotation/EndpointId
@5.0.4.RELEASE
+#value()Ljava/lang/String;

+###org/springframework/integration/annotation/Router
@1.0.1.RELEASE
+#inputChannel()Ljava/lang/String;
+#defaultOutputChannel()Ljava/lang/String;
@4.0.0.RELEASE
+#channelMappings()[Ljava/lang/String;
+#prefix()Ljava/lang/String;
+#suffix()Ljava/lang/String;
+#resolutionRequired()Ljava/lang/String;
+#applySequence()Ljava/lang/String;
+#ignoreSendFailures()Ljava/lang/String;
+#autoStartup()Ljava/lang/String;
+#phase()Ljava/lang/String;
+#poller()[Lorg/springframework/integration/annotation/Poller;
@4.2.0.RELEASE
+#sendTimeout()Ljava/lang/String;
@5.5.0
+#reactive()Lorg/springframework/integration/annotation/Reactive;
@6.0.0
+#poller()Lorg/springframework/integration/annotation/Poller;
-#poller()[Lorg/springframework/integration/annotation/Poller;

+###org/springframework/integration/annotation/BridgeTo
@4.0.0.RELEASE
+#value()Ljava/lang/String;
+#autoStartup()Ljava/lang/String;
+#phase()Ljava/lang/String;
+#poller()[Lorg/springframework/integration/annotation/Poller;
@5.5.0
+#reactive()Lorg/springframework/integration/annotation/Reactive;
@6.0.0
+#poller()Lorg/springframework/integration/annotation/Poller;
-#poller()[Lorg/springframework/integration/annotation/Poller;

+###org/springframework/integration/annotation/BridgeFrom
@4.0.0.RELEASE
+#value()Ljava/lang/String;
+#autoStartup()Ljava/lang/String;
+#phase()Ljava/lang/String;
+#poller()[Lorg/springframework/integration/annotation/Poller;
@5.5.0
+#reactive()Lorg/springframework/integration/annotation/Reactive;
@6.0.0
+#poller()Lorg/springframework/integration/annotation/Poller;
-#poller()[Lorg/springframework/integration/annotation/Poller;

+###org/springframework/integration/annotation/Publisher
@2.0.0.RELEASE
+#channel()Ljava/lang/String;
@5.0.4.RELEASE
+#value()Ljava/lang/String;

+###org/springframework/integration/annotation/InboundChannelAdapter
@4.0.0.RELEASE
+#value()Ljava/lang/String;
+#autoStartup()Ljava/lang/String;
+#phase()Ljava/lang/String;
+#poller()[Lorg/springframework/integration/annotation/Poller;
@4.3.0.RELEASE
+#channel()Ljava/lang/String;
@6.0.0
+#poller()Lorg/springframework/integration/annotation/Poller;
-#poller()[Lorg/springframework/integration/annotation/Poller;

+###org/springframework/integration/annotation/ServiceActivator
@1.0.1.RELEASE
+#inputChannel()Ljava/lang/String;
+#outputChannel()Ljava/lang/String;
@3.0.0.RELEASE
+#adviceChain()[Ljava/lang/String;
@4.0.0.RELEASE
+#requiresReply()Ljava/lang/String;
+#autoStartup()Ljava/lang/String;
+#phase()Ljava/lang/String;
+#poller()[Lorg/springframework/integration/annotation/Poller;
@4.2.0.RELEASE
+#sendTimeout()Ljava/lang/String;
@5.0.1.RELEASE
+#async()Ljava/lang/String;
@5.5.0
+#reactive()Lorg/springframework/integration/annotation/Reactive;
@6.0.0
+#poller()Lorg/springframework/integration/annotation/Poller;
-#poller()[Lorg/springframework/integration/annotation/Poller;

+###org/springframework/integration/annotation/IdempotentReceiver
@4.1.0.RELEASE
+#value()[Ljava/lang/String;

+###org/springframework/integration/annotation/Transformer
@1.0.1.RELEASE
+#inputChannel()Ljava/lang/String;
+#outputChannel()Ljava/lang/String;
@3.0.0.RELEASE
+#adviceChain()[Ljava/lang/String;
@4.0.0.RELEASE
+#autoStartup()Ljava/lang/String;
+#phase()Ljava/lang/String;
+#poller()[Lorg/springframework/integration/annotation/Poller;
@4.2.0.RELEASE
+#sendTimeout()Ljava/lang/String;
@5.5.0
+#reactive()Lorg/springframework/integration/annotation/Reactive;
@6.0.0
+#poller()Lorg/springframework/integration/annotation/Poller;
-#poller()[Lorg/springframework/integration/annotation/Poller;

+###org/springframework/integration/annotation/MessageEndpoint
@1.0.1.RELEASE
+#value()Ljava/lang/String;

+###org/springframework/integration/annotation/Default
@5.0.0.RELEASE

+###org/springframework/integration/annotation/GatewayHeader
@4.0.0.RELEASE
+#name()Ljava/lang/String;
+#value()Ljava/lang/String;
+#expression()Ljava/lang/String;

+###org/springframework/integration/annotation/AnnotationConstants
@4.1.0.RELEASE

+###org/springframework/integration/annotation/MessagingGateway
@4.0.0.RELEASE
+#name()Ljava/lang/String;
+#defaultRequestChannel()Ljava/lang/String;
+#defaultReplyChannel()Ljava/lang/String;
+#errorChannel()Ljava/lang/String;
+#defaultRequestTimeout()J
+#defaultReplyTimeout()J
+#asyncExecutor()Ljava/lang/String;
+#defaultPayloadExpression()Ljava/lang/String;
+#defaultHeaders()[Lorg/springframework/integration/annotation/GatewayHeader;
+#mapper()Ljava/lang/String;
@4.1.0.RELEASE
+#reactorEnvironment()Ljava/lang/String;
@4.2.0.RELEASE
+#defaultRequestTimeout()Ljava/lang/String;
+#defaultReplyTimeout()Ljava/lang/String;
-#defaultRequestTimeout()J
-#defaultReplyTimeout()J
@4.3.0.RELEASE
*#reactorEnvironment()Ljava/lang/String;[deprecated]
@5.0.0.RELEASE
-#reactorEnvironment()Ljava/lang/String;[deprecated]
@5.3.0.RELEASE
+#proxyDefaultMethods()Z
@6.0.0
+#value()Ljava/lang/String;

+###org/springframework/integration/annotation/Filter
@2.0.0.RELEASE
+#inputChannel()Ljava/lang/String;
+#outputChannel()Ljava/lang/String;
@3.0.0.RELEASE
+#adviceChain()[Ljava/lang/String;
+#discardWithinAdvice()Z
@4.0.0.RELEASE
+#discardChannel()Ljava/lang/String;
+#throwExceptionOnRejection()Ljava/lang/String;
+#autoStartup()Ljava/lang/String;
+#phase()Ljava/lang/String;
+#poller()[Lorg/springframework/integration/annotation/Poller;
@4.1.0.RELEASE
+#discardWithinAdvice()Ljava/lang/String;
-#discardWithinAdvice()Z
@4.2.0.RELEASE
+#sendTimeout()Ljava/lang/String;
@5.5.0
+#reactive()Lorg/springframework/integration/annotation/Reactive;
@6.0.0
+#poller()Lorg/springframework/integration/annotation/Poller;
-#poller()[Lorg/springframework/integration/annotation/Poller;

+###org/springframework/integration/annotation/Splitter
@1.0.1.RELEASE
+#inputChannel()Ljava/lang/String;
+#outputChannel()Ljava/lang/String;
@3.0.0.RELEASE
+#adviceChain()[Ljava/lang/String;
@4.0.0.RELEASE
+#applySequence()Ljava/lang/String;
+#autoStartup()Ljava/lang/String;
+#phase()Ljava/lang/String;
+#poller()[Lorg/springframework/integration/annotation/Poller;
@4.2.0.RELEASE
+#sendTimeout()Ljava/lang/String;
@5.5.0
+#reactive()Lorg/springframework/integration/annotation/Reactive;
@6.0.0
+#poller()Lorg/springframework/integration/annotation/Poller;
-#poller()[Lorg/springframework/integration/annotation/Poller;

+###org/springframework/integration/annotation/Payloads
@2.0.0.RELEASE
+#value()Ljava/lang/String;

+###org/springframework/integration/annotation/Gateway
@1.0.1.RELEASE
+#requestChannel()Ljava/lang/String;
+#replyChannel()Ljava/lang/String;
+#requestTimeout()J
+#replyTimeout()J
@4.0.0.RELEASE
+#payloadExpression()Ljava/lang/String;
+#headers()[Lorg/springframework/integration/annotation/GatewayHeader;
@5.0.0.RELEASE
+#requestTimeoutExpression()Ljava/lang/String;
+#replyTimeoutExpression()Ljava/lang/String;

+###org/springframework/integration/annotation/UseSpelInvoker
@5.0.0.RELEASE
+#value()Ljava/lang/String;
+#compilerMode()Ljava/lang/String;

+###org/springframework/integration/annotation/Role
@4.2.0.RELEASE
+#value()Ljava/lang/String;

+###org/springframework/integration/annotation/CorrelationStrategy
@1.0.2.RELEASE

+###org/springframework/integration/annotation/Poller
@4.0.0.RELEASE
+#value()Ljava/lang/String;
+#trigger()Ljava/lang/String;
+#taskExecutor()Ljava/lang/String;
+#maxMessagesPerPoll()Ljava/lang/String;
+#fixedDelay()Ljava/lang/String;
+#fixedRate()Ljava/lang/String;
+#cron()Ljava/lang/String;
@4.3.4.RELEASE
+#errorChannel()Ljava/lang/String;
@5.1.0.RELEASE
+#receiveTimeout()Ljava/lang/String;

+###org/springframework/integration/annotation/IntegrationComponentScan
@4.0.0.RELEASE
+#value()[Ljava/lang/String;
+#basePackages()[Ljava/lang/String;
+#basePackageClasses()[Ljava/lang/Class;
@5.0.0.RELEASE
+#useDefaultFilters()Z
+#includeFilters()[Lorg/springframework/context/annotation/ComponentScan$Filter;
+#excludeFilters()[Lorg/springframework/context/annotation/ComponentScan$Filter;
@6.0.0
+#nameGenerator()Ljava/lang/Class;

+###org/springframework/integration/annotation/ReleaseStrategy
@2.0.0.RELEASE

+###org/springframework/integration/annotation/Aggregator
@1.0.1.RELEASE
+#inputChannel()Ljava/lang/String;
+#outputChannel()Ljava/lang/String;
+#discardChannel()Ljava/lang/String;
+#sendTimeout()J
+#timeout()J
+#sendPartialResultsOnTimeout()Z
+#reaperInterval()J
+#trackedCorrelationIdCapacity()I
@2.0.0.RELEASE
+#sendPartialResultsOnExpiry()Z
-#timeout()J
-#sendPartialResultsOnTimeout()Z
-#reaperInterval()J
-#trackedCorrelationIdCapacity()I
@4.0.0.RELEASE
+#autoStartup()Ljava/lang/String;
+#phase()Ljava/lang/String;
+#poller()[Lorg/springframework/integration/annotation/Poller;
@4.2.0.RELEASE
+#sendTimeout()Ljava/lang/String;
+#sendPartialResultsOnExpiry()Ljava/lang/String;
-#sendTimeout()J
-#sendPartialResultsOnExpiry()Z
@5.5.0
+#reactive()Lorg/springframework/integration/annotation/Reactive;
@6.0.0
+#poller()Lorg/springframework/integration/annotation/Poller;
-#poller()[Lorg/springframework/integration/annotation/Poller;

+###org/springframework/integration/gateway/MethodArgsMessageMapper
@3.0.0.RELEASE

+###org/springframework/integration/gateway/GatewayMessageHandler
@5.0.0.RELEASE
+#<init>()V
+#setRequestChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setRequestChannelName(Ljava/lang/String;)V
+#setReplyChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setReplyChannelName(Ljava/lang/String;)V
+#setErrorChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setErrorChannelName(Ljava/lang/String;)V
+#setRequestTimeout(Ljava/lang/Long;)V
+#setReplyTimeout(Ljava/lang/Long;)V
+#start()V
+#stop()V
+#isRunning()Z

+###org/springframework/integration/gateway/AnnotationGatewayProxyFactoryBean
@5.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V

+###org/springframework/integration/gateway/RequestReplyExchanger
@2.0.0.RELEASE
+#exchange(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
@4.0.0.RELEASE
+#exchange(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
-#exchange(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;

+###org/springframework/integration/gateway/GatewayMethodMetadata
@3.0.0.RELEASE
+#<init>()V
+#getPayloadExpression()Ljava/lang/String;
+#setPayloadExpression(Ljava/lang/String;)V
+#getHeaderExpressions()Ljava/util/Map;
+#setHeaderExpressions(Ljava/util/Map;)V
+#getRequestChannelName()Ljava/lang/String;
+#setRequestChannelName(Ljava/lang/String;)V
+#getReplyChannelName()Ljava/lang/String;
+#setReplyChannelName(Ljava/lang/String;)V
+#getRequestTimeout()Ljava/lang/String;
+#setRequestTimeout(Ljava/lang/String;)V
+#getReplyTimeout()Ljava/lang/String;
+#setReplyTimeout(Ljava/lang/String;)V
@5.2.0.RELEASE
+#getPayloadExpression()Lorg/springframework/expression/Expression;
+#setPayloadExpression(Lorg/springframework/expression/Expression;)V
-#getPayloadExpression()Ljava/lang/String;
-#setPayloadExpression(Ljava/lang/String;)V

+###org/springframework/integration/gateway/MethodArgsHolder
@3.0.0.RELEASE
+#<init>(Ljava/lang/reflect/Method;[Ljava/lang/Object;)V
+#getMethod()Ljava/lang/reflect/Method;
+#getArgs()[Ljava/lang/Object;

+###org/springframework/integration/gateway/GatewayProxyFactoryBean
@1.0.1.RELEASE
+#<init>()V
+#setServiceInterface(Ljava/lang/Class;)V
+#setDefaultRequestChannel(Lorg/springframework/integration/core/MessageChannel;)V
+#setDefaultReplyChannel(Lorg/springframework/integration/core/MessageChannel;)V
+#setDefaultRequestTimeout(J)V
+#setDefaultReplyTimeout(J)V
+#setTypeConverter(Lorg/springframework/beans/TypeConverter;)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
@2.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#setDefaultRequestChannel(Lorg/springframework/integration/MessageChannel;)V
+#setDefaultReplyChannel(Lorg/springframework/integration/MessageChannel;)V
+#setErrorChannel(Lorg/springframework/integration/MessageChannel;)V
+#setShouldTrack(Z)V
+#setAsyncExecutor(Ljava/util/concurrent/Executor;)V
+#setMethodMetadataMap(Ljava/util/Map;)V
-#setDefaultRequestChannel(Lorg/springframework/integration/core/MessageChannel;)V
-#setDefaultReplyChannel(Lorg/springframework/integration/core/MessageChannel;)V
@3.0.0.RELEASE
+#setGlobalMethodMetadata(Lorg/springframework/integration/gateway/GatewayMethodMetadata;)V
+#setMapper(Lorg/springframework/integration/gateway/MethodArgsMessageMapper;)V
@4.0.0.RELEASE
+#setDefaultRequestChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setDefaultReplyChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setErrorChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setDefaultRequestTimeout(Ljava/lang/Long;)V
+#setDefaultReplyTimeout(Ljava/lang/Long;)V
-#setDefaultRequestChannel(Lorg/springframework/integration/MessageChannel;)V
-#setDefaultReplyChannel(Lorg/springframework/integration/MessageChannel;)V
-#setErrorChannel(Lorg/springframework/integration/MessageChannel;)V
-#setDefaultRequestTimeout(J)V
-#setDefaultReplyTimeout(J)V
@4.1.0.RELEASE
+#setReactorEnvironment(Lreactor/core/Environment;)V
@4.2.0.RELEASE
+#setReactorEnvironment(Ljava/lang/Object;)V
-#setReactorEnvironment(Lreactor/core/Environment;)V
@4.2.9.RELEASE
+#setDefaultRequestChannelName(Ljava/lang/String;)V
+#setDefaultReplyChannelName(Ljava/lang/String;)V
+#setErrorChannelName(Ljava/lang/String;)V
@4.3.0.RELEASE
*#setReactorEnvironment(Ljava/lang/Object;)V[deprecated]
+#getGateways()Ljava/util/Map;
-#setDefaultRequestChannelName(Ljava/lang/String;)V
-#setDefaultReplyChannelName(Ljava/lang/String;)V
-#setErrorChannelName(Ljava/lang/String;)V
@4.3.1.RELEASE
+#setDefaultRequestChannelName(Ljava/lang/String;)V
+#setDefaultReplyChannelName(Ljava/lang/String;)V
+#setErrorChannelName(Ljava/lang/String;)V
@5.0.0.RELEASE
+#setDefaultRequestTimeoutExpression(Lorg/springframework/expression/Expression;)V
+#setDefaultRequestTimeoutExpressionString(Ljava/lang/String;)V
+#setDefaultReplyTimeoutExpression(Lorg/springframework/expression/Expression;)V
+#setDefaultReplyTimeoutExpressionString(Ljava/lang/String;)V
-#setReactorEnvironment(Ljava/lang/Object;)V[deprecated]
@5.2.1.RELEASE
*#setServiceInterface(Ljava/lang/Class;)V[deprecated]
-#isSingleton()Z
@5.3.0.RELEASE
+#setProxyDefaultMethods(Z)V
-#setServiceInterface(Ljava/lang/Class;)V[deprecated]
@5.3.4.RELEASE
+#destroy()V
@5.4.0
+#registerMetricsCaptor(Lorg/springframework/integration/support/management/metrics/MetricsCaptor;)V

+###org/springframework/integration/gateway/GatewayMethodInboundMessageMapper$DefaultMethodArgsMessageMapper
@3.0.0.RELEASE
+#<init>(Lorg/springframework/integration/gateway/GatewayMethodInboundMessageMapper;)V
+#toMessage(Lorg/springframework/integration/gateway/MethodArgsHolder;)Lorg/springframework/integration/Message;
+#toMessage(Ljava/lang/Object;)Lorg/springframework/integration/Message;
@4.0.0.RELEASE
+#toMessage(Lorg/springframework/integration/gateway/MethodArgsHolder;)Lorg/springframework/messaging/Message;
+#toMessage(Ljava/lang/Object;)Lorg/springframework/messaging/Message;
-#toMessage(Lorg/springframework/integration/gateway/MethodArgsHolder;)Lorg/springframework/integration/Message;
-#toMessage(Ljava/lang/Object;)Lorg/springframework/integration/Message;
@5.0.0.RELEASE
+#toMessage(Lorg/springframework/integration/gateway/MethodArgsHolder;Ljava/util/Map;)Lorg/springframework/messaging/Message;
+#toMessage(Ljava/lang/Object;Ljava/util/Map;)Lorg/springframework/messaging/Message;
-#toMessage(Lorg/springframework/integration/gateway/MethodArgsHolder;)Lorg/springframework/messaging/Message;
-#toMessage(Ljava/lang/Object;)Lorg/springframework/messaging/Message;

+###org/springframework/integration/gateway/MessagingGatewaySupport
@2.0.0.RELEASE
+#<init>()V
+#setRequestChannel(Lorg/springframework/integration/MessageChannel;)V
+#setReplyChannel(Lorg/springframework/integration/MessageChannel;)V
+#setErrorChannel(Lorg/springframework/integration/MessageChannel;)V
+#setRequestTimeout(J)V
+#setReplyTimeout(J)V
+#setRequestMapper(Lorg/springframework/integration/mapping/InboundMessageMapper;)V
+#setReplyMapper(Lorg/springframework/integration/mapping/OutboundMessageMapper;)V
+#setShouldTrack(Z)V
+#getComponentType()Ljava/lang/String;
@4.0.0.RELEASE
+#setRequestChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setReplyChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setErrorChannel(Lorg/springframework/messaging/MessageChannel;)V
-#setRequestChannel(Lorg/springframework/integration/MessageChannel;)V
-#setReplyChannel(Lorg/springframework/integration/MessageChannel;)V
-#setErrorChannel(Lorg/springframework/integration/MessageChannel;)V
@4.1.0.RELEASE
+#setRequestChannelName(Ljava/lang/String;)V
+#setReplyChannelName(Ljava/lang/String;)V
+#setErrorChannelName(Ljava/lang/String;)V
@4.2.0.RELEASE
+#<init>(Z)V
@4.2.1.RELEASE
+#getMessageCount()I
+#getMessageCountLong()J
+#setManagedName(Ljava/lang/String;)V
+#getManagedName()Ljava/lang/String;
+#setManagedType(Ljava/lang/String;)V
+#getManagedType()Ljava/lang/String;
+#setLoggingEnabled(Z)V
+#isLoggingEnabled()Z
+#setCountsEnabled(Z)V
+#isCountsEnabled()Z
+#getRequestChannel()Lorg/springframework/messaging/MessageChannel;
+#reset()V
@4.3.0.RELEASE
+#getErrorChannel()Lorg/springframework/messaging/MessageChannel;
@4.3.10.RELEASE
+#setErrorMessageStrategy(Lorg/springframework/integration/support/ErrorMessageStrategy;)V
@5.0.0.RELEASE
+#getOverrides()Lorg/springframework/integration/support/management/IntegrationManagement$ManagementOverrides;
@5.1.0.RELEASE
+#getReplyChannel()Lorg/springframework/messaging/MessageChannel;
@5.2.2.RELEASE
+#setErrorOnTimeout(Z)V
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;
@5.4.0
+#registerMetricsCaptor(Lorg/springframework/integration/support/management/metrics/MetricsCaptor;)V
+#destroy()V
-#getMessageCount()I
-#getMessageCountLong()J
-#setCountsEnabled(Z)V
-#isCountsEnabled()Z
-#reset()V
@6.0.0
+#registerObservationRegistry(Lio/micrometer/observation/ObservationRegistry;)V
+#setObservationConvention(Lorg/springframework/integration/support/management/observation/MessageRequestReplyReceiverObservationConvention;)V
@6.0.1
+#isObserved()Z

+###org/springframework/integration/codec/Codec
@4.1.7.RELEASE
+#encode(Ljava/lang/Object;Ljava/io/OutputStream;)V
+#encode(Ljava/lang/Object;)[B
+#decode(Ljava/io/InputStream;Ljava/lang/Class;)Ljava/lang/Object;
+#decode([BLjava/lang/Class;)Ljava/lang/Object;

+###org/springframework/integration/codec/kryo/KryoClassListRegistrar
@4.1.7.RELEASE
+#<init>(Ljava/util/List;)V
+#setInitialValue(I)V
+#getRegistrations()Ljava/util/List;
@4.3.23.RELEASE
+#<init>([Ljava/lang/Class;)V
@5.0.0.RELEASE
-#<init>([Ljava/lang/Class;)V
@5.1.12.RELEASE
+#<init>([Ljava/lang/Class;)V
@5.2.0.RELEASE
-#<init>([Ljava/lang/Class;)V
@5.2.8.RELEASE
+#<init>([Ljava/lang/Class;)V
@5.3.0.RELEASE
-#<init>([Ljava/lang/Class;)V
@5.3.2.RELEASE
+#<init>([Ljava/lang/Class;)V

+###org/springframework/integration/codec/kryo/MessageKryoRegistrar
@4.2.0.RELEASE
+#<init>()V
+#setMessageHeadersRegistrationId(I)V
+#setMutableMessageHeadersRegistrationId(I)V
+#getRegistrations()Ljava/util/List;
@4.3.23.RELEASE
+#setGenericMessageRegistrationId(I)V
+#setErrorMessageRegistrationId(I)V
+#setAdviceMessageRegistrationId(I)V
+#setMutableMessageRegistrationId(I)V
+#setHashMapRegistrationId(I)V
+#setUuidRegistrationId(I)V
+#registerTypes(Lcom/esotericsoftware/kryo/Kryo;)V
@5.0.0.RELEASE
-#setGenericMessageRegistrationId(I)V
-#setErrorMessageRegistrationId(I)V
-#setAdviceMessageRegistrationId(I)V
-#setMutableMessageRegistrationId(I)V
-#setHashMapRegistrationId(I)V
-#setUuidRegistrationId(I)V
-#registerTypes(Lcom/esotericsoftware/kryo/Kryo;)V
@5.1.12.RELEASE
+#setGenericMessageRegistrationId(I)V
+#setErrorMessageRegistrationId(I)V
+#setAdviceMessageRegistrationId(I)V
+#setMutableMessageRegistrationId(I)V
+#setHashMapRegistrationId(I)V
+#setUuidRegistrationId(I)V
+#registerTypes(Lcom/esotericsoftware/kryo/Kryo;)V
@5.2.0.RELEASE
-#setGenericMessageRegistrationId(I)V
-#setErrorMessageRegistrationId(I)V
-#setAdviceMessageRegistrationId(I)V
-#setMutableMessageRegistrationId(I)V
-#setHashMapRegistrationId(I)V
-#setUuidRegistrationId(I)V
-#registerTypes(Lcom/esotericsoftware/kryo/Kryo;)V
@5.2.8.RELEASE
+#setGenericMessageRegistrationId(I)V
+#setErrorMessageRegistrationId(I)V
+#setAdviceMessageRegistrationId(I)V
+#setMutableMessageRegistrationId(I)V
+#setHashMapRegistrationId(I)V
+#setUuidRegistrationId(I)V
+#registerTypes(Lcom/esotericsoftware/kryo/Kryo;)V
@5.3.0.RELEASE
-#setGenericMessageRegistrationId(I)V
-#setErrorMessageRegistrationId(I)V
-#setAdviceMessageRegistrationId(I)V
-#setMutableMessageRegistrationId(I)V
-#setHashMapRegistrationId(I)V
-#setUuidRegistrationId(I)V
-#registerTypes(Lcom/esotericsoftware/kryo/Kryo;)V
@5.3.2.RELEASE
+#setGenericMessageRegistrationId(I)V
+#setErrorMessageRegistrationId(I)V
+#setAdviceMessageRegistrationId(I)V
+#setMutableMessageRegistrationId(I)V
+#setHashMapRegistrationId(I)V
+#setUuidRegistrationId(I)V
+#registerTypes(Lcom/esotericsoftware/kryo/Kryo;)V

+###org/springframework/integration/codec/kryo/PojoCodec
@4.1.7.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/integration/codec/kryo/KryoRegistrar;)V
+#<init>(Ljava/util/List;)V
+#<init>(Lorg/springframework/integration/codec/kryo/KryoRegistrar;Z)V
+#<init>(Ljava/util/List;Z)V

+###org/springframework/integration/codec/kryo/RegistrationIds
@4.2.0.RELEASE

+###org/springframework/integration/codec/kryo/MessageCodec
@4.2.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/integration/codec/kryo/MessageKryoRegistrar;)V

+###org/springframework/integration/codec/kryo/KryoClassMapRegistrar
@4.1.7.RELEASE
+#<init>(Ljava/util/Map;)V
+#getRegistrations()Ljava/util/List;

+###org/springframework/integration/codec/kryo/AbstractKryoCodec
@4.1.7.RELEASE
+#encode(Ljava/lang/Object;Ljava/io/OutputStream;)V
+#decode([BLjava/lang/Class;)Ljava/lang/Object;
+#decode(Ljava/io/InputStream;Ljava/lang/Class;)Ljava/lang/Object;
+#encode(Ljava/lang/Object;)[B

+###org/springframework/integration/codec/kryo/KryoRegistrationRegistrar
@4.1.7.RELEASE
+#<init>(Ljava/util/List;)V
+#getRegistrations()Ljava/util/List;

+###org/springframework/integration/codec/kryo/FileSerializer
@4.1.7.RELEASE
+#<init>()V
+#write(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Output;Ljava/io/File;)V
+#read(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/io/File;
+#read(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/lang/Object;
+#write(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;)V

+###org/springframework/integration/codec/kryo/FileKryoRegistrar
@4.1.7.RELEASE
+#<init>()V
+#<init>(I)V
+#getRegistrations()Ljava/util/List;

+###org/springframework/integration/codec/kryo/AbstractKryoRegistrar
@4.1.7.RELEASE
+#<init>()V
+#registerTypes(Lcom/esotericsoftware/kryo/Kryo;)V
+#getRegistrations()Ljava/util/List;
@5.1.2.RELEASE
-#getRegistrations()Ljava/util/List;

+###org/springframework/integration/codec/kryo/KryoRegistrar
@4.1.7.RELEASE
+#registerTypes(Lcom/esotericsoftware/kryo/Kryo;)V
+#getRegistrations()Ljava/util/List;

+###org/springframework/integration/codec/kryo/CompositeKryoRegistrar
@4.1.7.RELEASE
+#<init>(Ljava/util/List;)V
+#getRegistrations()Ljava/util/List;
@4.3.23.RELEASE
+#registerTypes(Lcom/esotericsoftware/kryo/Kryo;)V
@5.0.0.RELEASE
-#registerTypes(Lcom/esotericsoftware/kryo/Kryo;)V
@5.1.12.RELEASE
+#registerTypes(Lcom/esotericsoftware/kryo/Kryo;)V
@5.2.0.RELEASE
-#registerTypes(Lcom/esotericsoftware/kryo/Kryo;)V
@5.2.8.RELEASE
+#registerTypes(Lcom/esotericsoftware/kryo/Kryo;)V
@5.3.0.RELEASE
-#registerTypes(Lcom/esotericsoftware/kryo/Kryo;)V
@5.3.2.RELEASE
+#registerTypes(Lcom/esotericsoftware/kryo/Kryo;)V

+###org/springframework/integration/codec/CompositeCodec
@4.1.7.RELEASE
+#<init>(Ljava/util/Map;Lorg/springframework/integration/codec/Codec;)V
+#<init>(Lorg/springframework/integration/codec/Codec;)V
+#encode(Ljava/lang/Object;Ljava/io/OutputStream;)V
+#encode(Ljava/lang/Object;)[B
+#decode(Ljava/io/InputStream;Ljava/lang/Class;)Ljava/lang/Object;
+#decode([BLjava/lang/Class;)Ljava/lang/Object;

+###org/springframework/integration/codec/CodecMessageConverter
@4.2.0.RELEASE
+#<init>(Lorg/springframework/integration/codec/Codec;)V
+#fromMessage(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Ljava/lang/Object;
+#toMessage(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;

+###org/springframework/integration/scheduling/PollSkipAdvice
@4.1.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/integration/scheduling/PollSkipStrategy;)V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;

+###org/springframework/integration/scheduling/SimplePollSkipStrategy
@4.2.5.RELEASE
+#<init>()V
+#skipPoll()Z
+#skipPolls()V
+#reset()V

+###org/springframework/integration/scheduling/PollerMetadata
@1.0.1.RELEASE
+#<init>()V
+#setTrigger(Lorg/springframework/integration/scheduling/Trigger;)V
+#getTrigger()Lorg/springframework/integration/scheduling/Trigger;
+#setMaxMessagesPerPoll(I)V
+#getMaxMessagesPerPoll()I
+#setReceiveTimeout(J)V
+#getReceiveTimeout()J
+#setAdviceChain(Ljava/util/List;)V
+#getAdviceChain()Ljava/util/List;
+#setTaskExecutor(Lorg/springframework/core/task/TaskExecutor;)V
+#getTaskExecutor()Lorg/springframework/core/task/TaskExecutor;
+#setTransactionManager(Lorg/springframework/transaction/PlatformTransactionManager;)V
+#getTransactionManager()Lorg/springframework/transaction/PlatformTransactionManager;
+#setTransactionDefinition(Lorg/springframework/transaction/TransactionDefinition;)V
+#getTransactionDefinition()Lorg/springframework/transaction/TransactionDefinition;
@2.0.0.RELEASE
+#setTrigger(Lorg/springframework/scheduling/Trigger;)V
+#getTrigger()Lorg/springframework/scheduling/Trigger;
+#setMaxMessagesPerPoll(J)V
+#getMaxMessagesPerPoll()J
+#setTaskExecutor(Ljava/util/concurrent/Executor;)V
+#getTaskExecutor()Ljava/util/concurrent/Executor;
-#setTrigger(Lorg/springframework/integration/scheduling/Trigger;)V
-#getTrigger()Lorg/springframework/integration/scheduling/Trigger;
-#setMaxMessagesPerPoll(I)V
-#getMaxMessagesPerPoll()I
-#setTaskExecutor(Lorg/springframework/core/task/TaskExecutor;)V
-#getTaskExecutor()Lorg/springframework/core/task/TaskExecutor;
-#setTransactionManager(Lorg/springframework/transaction/PlatformTransactionManager;)V
-#getTransactionManager()Lorg/springframework/transaction/PlatformTransactionManager;
-#setTransactionDefinition(Lorg/springframework/transaction/TransactionDefinition;)V
-#getTransactionDefinition()Lorg/springframework/transaction/TransactionDefinition;
@2.0.3.RELEASE
+#getErrorHandler()Lorg/springframework/util/ErrorHandler;
+#setErrorHandler(Lorg/springframework/util/ErrorHandler;)V
@2.2.0.RELEASE
+#setTransactionSynchronizationFactory(Lorg/springframework/integration/transaction/TransactionSynchronizationFactory;)V
+#getTransactionSynchronizationFactory()Lorg/springframework/integration/transaction/TransactionSynchronizationFactory;
+#getSendTimeout()J
+#setSendTimeout(J)V
+#getDefaultPollerMetadata(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/integration/scheduling/PollerMetadata;

+###org/springframework/integration/scheduling/PollSkipStrategy
@4.1.0.RELEASE
+#skipPoll()Z

+###org/springframework/integration/context/ExpressionCapable
@4.3.0.RELEASE
+#getExpression()Lorg/springframework/expression/Expression;

+###org/springframework/integration/context/IntegrationObjectSupport
@1.0.1.RELEASE
+#<init>()V
+#setBeanName(Ljava/lang/String;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#toString()Ljava/lang/String;
@2.0.0.RELEASE
+#getComponentName()Ljava/lang/String;
+#setComponentName(Ljava/lang/String;)V
+#getComponentType()Ljava/lang/String;
+#afterPropertiesSet()V
@3.0.0.RELEASE
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#getConversionService()Lorg/springframework/core/convert/ConversionService;
+#getApplicationContextId()Ljava/lang/String;
@4.0.0.RELEASE
+#setMessageBuilderFactory(Lorg/springframework/integration/support/MessageBuilderFactory;)V
@4.1.3.RELEASE
+#setChannelResolver(Lorg/springframework/messaging/core/DestinationResolver;)V
@4.3.0.RELEASE
+#getExpression()Lorg/springframework/expression/Expression;
+#setPrimaryExpression(Lorg/springframework/expression/Expression;)V
@5.1.2.RELEASE
+#extractTypeIfPossible(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#generateId()Ljava/util/UUID;
@5.1.3.RELEASE
+#getBeanName()Ljava/lang/String;
+#setTaskScheduler(Lorg/springframework/scheduling/TaskScheduler;)V
@5.2.0.RELEASE
+#getBeanDescription()Ljava/lang/String;

+###org/springframework/integration/context/IntegrationProperties
@3.0.0.RELEASE
+#defaults()Ljava/util/Properties;
+#getExpressionFor(Ljava/lang/String;)Ljava/lang/String;
@5.5.0
+#<init>()V
+#setChannelsAutoCreate(Z)V
+#isChannelsAutoCreate()Z
+#setChannelsMaxUnicastSubscribers(I)V
+#getChannelsMaxUnicastSubscribers()I
+#setChannelsMaxBroadcastSubscribers(I)V
+#getChannelsMaxBroadcastSubscribers()I
+#setErrorChannelRequireSubscribers(Z)V
+#isErrorChannelRequireSubscribers()Z
+#setErrorChannelIgnoreFailures(Z)V
+#isErrorChannelIgnoreFailures()Z
+#setTaskSchedulerPoolSize(I)V
+#getTaskSchedulerPoolSize()I
+#setMessagingTemplateThrowExceptionOnLateReply(Z)V
+#isMessagingTemplateThrowExceptionOnLateReply()Z
+#setReadOnlyHeaders([Ljava/lang/String;)V
+#getReadOnlyHeaders()[Ljava/lang/String;
+#setNoAutoStartupEndpoints([Ljava/lang/String;)V
+#getNoAutoStartupEndpoints()[Ljava/lang/String;
+#toProperties()Ljava/util/Properties;
+#parse(Ljava/util/Properties;)Lorg/springframework/integration/context/IntegrationProperties;

+###org/springframework/integration/context/IntegrationContextUtils
@1.0.1.RELEASE
+#<init>()V
+#getErrorChannel(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/integration/core/MessageChannel;
+#getTaskScheduler(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/integration/scheduling/TaskScheduler;
+#getRequiredTaskScheduler(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/integration/scheduling/TaskScheduler;
+#getDefaultPollerMetadata(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/integration/scheduling/PollerMetadata;
+#createThreadPoolTaskExecutor(IIILjava/lang/String;)Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
@2.0.0.RELEASE
+#getMetadataStore(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/integration/store/MetadataStore;
+#getErrorChannel(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/integration/MessageChannel;
+#getTaskScheduler(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/scheduling/TaskScheduler;
+#getRequiredTaskScheduler(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/scheduling/TaskScheduler;
+#getConversionService(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/core/convert/ConversionService;
-#getErrorChannel(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/integration/core/MessageChannel;
-#getTaskScheduler(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/integration/scheduling/TaskScheduler;
-#getRequiredTaskScheduler(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/integration/scheduling/TaskScheduler;
-#createThreadPoolTaskExecutor(IIILjava/lang/String;)Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
@2.2.0.RELEASE
-#getDefaultPollerMetadata(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/integration/scheduling/PollerMetadata;
@3.0.0.RELEASE
+#getMetadataStore(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/integration/metadata/MetadataStore;
+#getEvaluationContext(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/expression/spel/support/StandardEvaluationContext;
+#getIntegrationProperties(Lorg/springframework/beans/factory/BeanFactory;)Ljava/util/Properties;
-#getMetadataStore(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/integration/store/MetadataStore;
@4.0.0.RELEASE
+#getErrorChannel(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/messaging/MessageChannel;
-#getErrorChannel(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/integration/MessageChannel;
-#getConversionService(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/core/convert/ConversionService;
@4.3.15.RELEASE
+#getSimpleEvaluationContext(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/expression/spel/support/SimpleEvaluationContext;
@5.0.0.RELEASE
-#getSimpleEvaluationContext(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/expression/spel/support/SimpleEvaluationContext;
@5.0.4.RELEASE
+#getSimpleEvaluationContext(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/expression/spel/support/SimpleEvaluationContext;
@5.1.10.RELEASE
+#getBeanDefinition(Ljava/lang/String;Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)Lorg/springframework/beans/factory/config/BeanDefinition;
@5.2.0.RELEASE
-#getBeanDefinition(Ljava/lang/String;Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)Lorg/springframework/beans/factory/config/BeanDefinition;
@5.2.6.RELEASE
+#getBeanDefinition(Ljava/lang/String;Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)Lorg/springframework/beans/factory/config/BeanDefinition;
@6.0.0
+#getIntegrationProperties(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/integration/context/IntegrationProperties;
-#getIntegrationProperties(Lorg/springframework/beans/factory/BeanFactory;)Ljava/util/Properties;

+###org/springframework/integration/context/Orderable
@2.0.0.RELEASE
+#setOrder(I)V

+###org/springframework/integration/context/OrderlyShutdownCapable
@2.2.0.RELEASE
+#beforeShutdown()I
+#afterShutdown()I

+###org/springframework/integration/dispatcher/UnicastingDispatcher
@1.0.3.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/core/task/TaskExecutor;)V
+#setFailover(Z)V
+#setLoadBalancingStrategy(Lorg/springframework/integration/dispatcher/LoadBalancingStrategy;)V
+#dispatch(Lorg/springframework/integration/core/Message;)Z
@2.0.0.RELEASE
+#<init>(Ljava/util/concurrent/Executor;)V
+#dispatch(Lorg/springframework/integration/Message;)Z
-#<init>(Lorg/springframework/core/task/TaskExecutor;)V
-#dispatch(Lorg/springframework/integration/core/Message;)Z
@4.0.0.RELEASE
+#dispatch(Lorg/springframework/messaging/Message;)Z
-#dispatch(Lorg/springframework/integration/Message;)Z
@4.2.0.RELEASE
+#setMessageHandlingTaskDecorator(Lorg/springframework/integration/dispatcher/MessageHandlingTaskDecorator;)V

+###org/springframework/integration/dispatcher/MessageHandlingTaskDecorator
@4.2.0.RELEASE
+#decorate(Lorg/springframework/messaging/support/MessageHandlingRunnable;)Ljava/lang/Runnable;

+###org/springframework/integration/dispatcher/AggregateMessageDeliveryException
@1.0.3.RELEASE
+#<init>(Lorg/springframework/integration/core/Message;Ljava/lang/String;Ljava/util/List;)V
+#getAggregatedExceptions()Ljava/util/List;
@2.0.0.RELEASE
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;Ljava/util/List;)V
+#getMessage()Ljava/lang/String;
-#<init>(Lorg/springframework/integration/core/Message;Ljava/lang/String;Ljava/util/List;)V
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;Ljava/util/List;)V
-#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;Ljava/util/List;)V

+###org/springframework/integration/dispatcher/MessageDispatcher
@1.0.1.RELEASE
+#addHandler(Lorg/springframework/integration/message/MessageHandler;)Z
+#removeHandler(Lorg/springframework/integration/message/MessageHandler;)Z
+#dispatch(Lorg/springframework/integration/core/Message;)Z
@2.0.0.RELEASE
+#addHandler(Lorg/springframework/integration/core/MessageHandler;)Z
+#removeHandler(Lorg/springframework/integration/core/MessageHandler;)Z
+#dispatch(Lorg/springframework/integration/Message;)Z
-#addHandler(Lorg/springframework/integration/message/MessageHandler;)Z
-#removeHandler(Lorg/springframework/integration/message/MessageHandler;)Z
-#dispatch(Lorg/springframework/integration/core/Message;)Z
@4.0.0.RELEASE
+#addHandler(Lorg/springframework/messaging/MessageHandler;)Z
+#removeHandler(Lorg/springframework/messaging/MessageHandler;)Z
+#dispatch(Lorg/springframework/messaging/Message;)Z
-#addHandler(Lorg/springframework/integration/core/MessageHandler;)Z
-#removeHandler(Lorg/springframework/integration/core/MessageHandler;)Z
-#dispatch(Lorg/springframework/integration/Message;)Z
@5.0.0.RELEASE
+#getHandlerCount()I

+###org/springframework/integration/dispatcher/LoadBalancingStrategy
@1.0.3.RELEASE
+#getHandlerIterator(Lorg/springframework/integration/core/Message;Ljava/util/List;)Ljava/util/Iterator;
@2.0.0.RELEASE
+#getHandlerIterator(Lorg/springframework/integration/Message;Ljava/util/List;)Ljava/util/Iterator;
-#getHandlerIterator(Lorg/springframework/integration/core/Message;Ljava/util/List;)Ljava/util/Iterator;
@2.2.0.RELEASE
+#getHandlerIterator(Lorg/springframework/integration/Message;Ljava/util/Collection;)Ljava/util/Iterator;
-#getHandlerIterator(Lorg/springframework/integration/Message;Ljava/util/List;)Ljava/util/Iterator;
@4.0.0.RELEASE
+#getHandlerIterator(Lorg/springframework/messaging/Message;Ljava/util/Collection;)Ljava/util/Iterator;
-#getHandlerIterator(Lorg/springframework/integration/Message;Ljava/util/Collection;)Ljava/util/Iterator;

+###org/springframework/integration/dispatcher/RoundRobinLoadBalancingStrategy
@1.0.3.RELEASE
+#<init>()V
+#getHandlerIterator(Lorg/springframework/integration/core/Message;Ljava/util/List;)Ljava/util/Iterator;
@2.0.0.RELEASE
+#getHandlerIterator(Lorg/springframework/integration/Message;Ljava/util/List;)Ljava/util/Iterator;
-#getHandlerIterator(Lorg/springframework/integration/core/Message;Ljava/util/List;)Ljava/util/Iterator;
@2.2.0.RELEASE
+#getHandlerIterator(Lorg/springframework/integration/Message;Ljava/util/Collection;)Ljava/util/Iterator;
-#getHandlerIterator(Lorg/springframework/integration/Message;Ljava/util/List;)Ljava/util/Iterator;
@4.0.0.RELEASE
+#getHandlerIterator(Lorg/springframework/messaging/Message;Ljava/util/Collection;)Ljava/util/Iterator;
-#getHandlerIterator(Lorg/springframework/integration/Message;Ljava/util/Collection;)Ljava/util/Iterator;

+###org/springframework/integration/dispatcher/BroadcastingDispatcher
@1.0.1.RELEASE
+#<init>()V
+#setApplySequence(Z)V
+#dispatch(Lorg/springframework/integration/core/Message;)Z
@1.0.3.RELEASE
+#<init>(Lorg/springframework/core/task/TaskExecutor;)V
+#setIgnoreFailures(Z)V
@2.0.0.RELEASE
+#<init>(Ljava/util/concurrent/Executor;)V
+#dispatch(Lorg/springframework/integration/Message;)Z
-#<init>(Lorg/springframework/core/task/TaskExecutor;)V
-#dispatch(Lorg/springframework/integration/core/Message;)Z
@2.1.1.RELEASE
+#<init>(Z)V
+#<init>(Ljava/util/concurrent/Executor;Z)V
@3.0.0.RELEASE
+#setMinSubscribers(I)V
@4.0.0.RELEASE
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#dispatch(Lorg/springframework/messaging/Message;)Z
-#dispatch(Lorg/springframework/integration/Message;)Z
@4.2.0.RELEASE
+#setMessageHandlingTaskDecorator(Lorg/springframework/integration/dispatcher/MessageHandlingTaskDecorator;)V

+###org/springframework/integration/dispatcher/AbstractDispatcher
@1.0.1.RELEASE
+#<init>()V
+#addHandler(Lorg/springframework/integration/message/MessageHandler;)Z
+#removeHandler(Lorg/springframework/integration/message/MessageHandler;)Z
+#setTaskExecutor(Lorg/springframework/core/task/TaskExecutor;)V
+#toString()Ljava/lang/String;
@1.0.3.RELEASE
-#setTaskExecutor(Lorg/springframework/core/task/TaskExecutor;)V
@2.0.0.RELEASE
+#addHandler(Lorg/springframework/integration/core/MessageHandler;)Z
+#removeHandler(Lorg/springframework/integration/core/MessageHandler;)Z
-#addHandler(Lorg/springframework/integration/message/MessageHandler;)Z
-#removeHandler(Lorg/springframework/integration/message/MessageHandler;)Z
@2.0.6.RELEASE
+#getHandlerCount()I
@2.1.0.RELEASE
-#getHandlerCount()I
@2.1.1.RELEASE
+#getHandlerCount()I
@2.2.0.RELEASE
+#setMaxSubscribers(I)V
@4.0.0.RELEASE
+#addHandler(Lorg/springframework/messaging/MessageHandler;)Z
+#removeHandler(Lorg/springframework/messaging/MessageHandler;)Z
-#addHandler(Lorg/springframework/integration/core/MessageHandler;)Z
-#removeHandler(Lorg/springframework/integration/core/MessageHandler;)Z

+###org/springframework/integration/router/HeaderValueRouter
@1.0.3.RELEASE
+#<init>(Ljava/lang/String;)V

+###org/springframework/integration/router/ErrorMessageExceptionTypeRouter
@1.0.1.RELEASE
+#<init>()V
+#setExceptionTypeChannelMap(Ljava/util/Map;)V
@2.0.0.RELEASE
-#setExceptionTypeChannelMap(Ljava/util/Map;)V
@4.3.0.RELEASE
+#setChannelMappings(Ljava/util/Map;)V
+#setChannelMapping(Ljava/lang/String;Ljava/lang/String;)V
+#removeChannelMapping(Ljava/lang/String;)V
+#replaceChannelMappings(Ljava/util/Properties;)V

+###org/springframework/integration/router/ExpressionEvaluatingRouter
@2.0.0.RELEASE
+#<init>(Lorg/springframework/expression/Expression;)V
@4.2.0.RELEASE
+#isRunning()Z
+#stop()V
+#start()V
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;)V

+###org/springframework/integration/router/PayloadTypeRouter
@1.0.1.RELEASE
+#<init>()V
+#setPayloadTypeChannelMap(Ljava/util/Map;)V
@2.0.0.RELEASE
-#setPayloadTypeChannelMap(Ljava/util/Map;)V

+###org/springframework/integration/router/MethodInvokingRouter
@1.0.1.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#<init>(Ljava/lang/Object;)V
+#setChannelResolver(Lorg/springframework/integration/channel/ChannelResolver;)V
@1.0.2.RELEASE
-#setChannelResolver(Lorg/springframework/integration/channel/ChannelResolver;)V
@4.2.0.RELEASE
+#isRunning()Z
+#stop()V
+#start()V

+###org/springframework/integration/router/MessageRouter
@4.3.0.RELEASE
+#getDefaultOutputChannel()Lorg/springframework/messaging/MessageChannel;

+###org/springframework/integration/router/AbstractMessageRouter
@1.0.1.RELEASE
+#<init>()V
+#setDefaultOutputChannel(Lorg/springframework/integration/core/MessageChannel;)V
+#setTimeout(J)V
+#setResolutionRequired(Z)V
@1.0.4.RELEASE
+#setIgnoreSendFailures(Z)V
+#setApplySequence(Z)V
@2.0.0.RELEASE
+#setChannelResolver(Lorg/springframework/integration/support/channel/ChannelResolver;)V
+#setPrefix(Ljava/lang/String;)V
+#setSuffix(Ljava/lang/String;)V
+#setChannelIdentifierMap(Ljava/util/Map;)V
+#setChannelMapping(Ljava/lang/String;Ljava/lang/String;)V
+#removeChannelMapping(Ljava/lang/String;)V
+#setDefaultOutputChannel(Lorg/springframework/integration/MessageChannel;)V
+#setIgnoreChannelNameResolutionFailures(Z)V
+#getComponentType()Ljava/lang/String;
+#onInit()V
-#setDefaultOutputChannel(Lorg/springframework/integration/core/MessageChannel;)V
@2.1.0.RELEASE
-#setChannelResolver(Lorg/springframework/integration/support/channel/ChannelResolver;)V
-#setPrefix(Ljava/lang/String;)V
-#setSuffix(Ljava/lang/String;)V
-#setChannelIdentifierMap(Ljava/util/Map;)V
-#setChannelMapping(Ljava/lang/String;Ljava/lang/String;)V
-#removeChannelMapping(Ljava/lang/String;)V
-#setResolutionRequired(Z)V
-#setIgnoreChannelNameResolutionFailures(Z)V
-#onInit()V
@4.0.0.RELEASE
+#setDefaultOutputChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setDefaultOutputChannelName(Ljava/lang/String;)V
-#setDefaultOutputChannel(Lorg/springframework/integration/MessageChannel;)V
@4.3.0.RELEASE
+#getDefaultOutputChannel()Lorg/springframework/messaging/MessageChannel;
*#setTimeout(J)V[deprecated]
+#setSendTimeout(J)V
@5.0.0.RELEASE
-#setTimeout(J)V[deprecated]
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/router/RecipientListRouter
@1.0.1.RELEASE
+#<init>()V
+#setChannels(Ljava/util/List;)V
+#afterPropertiesSet()V
@1.0.3.RELEASE
+#setTimeout(J)V
+#setIgnoreSendFailures(Z)V
+#setApplySequence(Z)V
@1.0.4.RELEASE
-#setTimeout(J)V
-#setIgnoreSendFailures(Z)V
-#setApplySequence(Z)V
@2.0.0.RELEASE
+#setRecipients(Ljava/util/List;)V
+#getComponentType()Ljava/lang/String;
+#onInit()V
-#afterPropertiesSet()V
@4.1.0.RELEASE
+#setRecipientMappings(Ljava/util/Map;)V
+#addRecipient(Ljava/lang/String;Ljava/lang/String;)V
+#addRecipient(Ljava/lang/String;)V
+#removeRecipient(Ljava/lang/String;)I
+#removeRecipient(Ljava/lang/String;Ljava/lang/String;)I
+#getRecipients()Ljava/util/Collection;
+#replaceRecipients(Ljava/util/Properties;)V
-#onInit()V
@5.0.0.RELEASE
+#addRecipient(Ljava/lang/String;Lorg/springframework/integration/core/MessageSelector;)V
+#addRecipient(Lorg/springframework/messaging/MessageChannel;)V
+#addRecipient(Lorg/springframework/messaging/MessageChannel;Lorg/springframework/integration/core/MessageSelector;)V
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/router/RecipientListRouter$Recipient
@2.0.0.RELEASE
+#<init>(Lorg/springframework/integration/MessageChannel;)V
+#<init>(Lorg/springframework/integration/MessageChannel;Lorg/springframework/integration/core/MessageSelector;)V
+#getChannel()Lorg/springframework/integration/MessageChannel;
+#accept(Lorg/springframework/integration/Message;)Z
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/MessageChannel;)V
+#<init>(Lorg/springframework/messaging/MessageChannel;Lorg/springframework/integration/core/MessageSelector;)V
+#getChannel()Lorg/springframework/messaging/MessageChannel;
+#accept(Lorg/springframework/messaging/Message;)Z
-#<init>(Lorg/springframework/integration/MessageChannel;)V
-#<init>(Lorg/springframework/integration/MessageChannel;Lorg/springframework/integration/core/MessageSelector;)V
-#getChannel()Lorg/springframework/integration/MessageChannel;
-#accept(Lorg/springframework/integration/Message;)Z
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/springframework/integration/core/MessageSelector;)V
+#setChannelResolver(Lorg/springframework/messaging/core/DestinationResolver;)V

+###org/springframework/integration/router/AbstractMappingMessageRouter
@2.1.0.RELEASE
+#<init>()V
+#setChannelMappings(Ljava/util/Map;)V
+#setChannelResolver(Lorg/springframework/integration/support/channel/ChannelResolver;)V
+#setPrefix(Ljava/lang/String;)V
+#setSuffix(Ljava/lang/String;)V
+#setResolutionRequired(Z)V
+#setChannelMapping(Ljava/lang/String;Ljava/lang/String;)V
+#removeChannelMapping(Ljava/lang/String;)V
+#onInit()V
@4.0.0.RELEASE
+#setChannelResolver(Lorg/springframework/messaging/core/DestinationResolver;)V
+#getChannelMappings()Ljava/util/Map;
+#replaceChannelMappings(Ljava/util/Properties;)V
-#setChannelResolver(Lorg/springframework/integration/support/channel/ChannelResolver;)V
@4.1.3.RELEASE
-#setChannelResolver(Lorg/springframework/messaging/core/DestinationResolver;)V
-#onInit()V
@4.3.0.RELEASE
+#setDynamicChannelLimit(I)V
+#getDynamicChannelNames()Ljava/util/Collection;
@5.2.0.RELEASE
+#setChannelKeyFallback(Z)V
@6.0.0
+#setDefaultOutputChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setDefaultOutputChannelName(Ljava/lang/String;)V

+###org/springframework/integration/router/RecipientListRouterManagement
@4.1.0.RELEASE
+#addRecipient(Ljava/lang/String;Ljava/lang/String;)V
+#addRecipient(Ljava/lang/String;)V
+#removeRecipient(Ljava/lang/String;)I
+#removeRecipient(Ljava/lang/String;Ljava/lang/String;)I
+#getRecipients()Ljava/util/Collection;
+#replaceRecipients(Ljava/util/Properties;)V
+#setRecipientMappings(Ljava/util/Map;)V

+###org/springframework/integration/message/AdviceMessage
@2.2.0.RELEASE
+#<init>(Ljava/lang/Object;Lorg/springframework/integration/Message;)V
+#<init>(Ljava/lang/Object;Ljava/util/Map;Lorg/springframework/integration/Message;)V
+#getInputMessage()Lorg/springframework/integration/Message;
@4.0.0.RELEASE
+#<init>(Ljava/lang/Object;Lorg/springframework/messaging/Message;)V
+#<init>(Ljava/lang/Object;Ljava/util/Map;Lorg/springframework/messaging/Message;)V
+#getInputMessage()Lorg/springframework/messaging/Message;
-#<init>(Ljava/lang/Object;Lorg/springframework/integration/Message;)V
-#<init>(Ljava/lang/Object;Ljava/util/Map;Lorg/springframework/integration/Message;)V
-#getInputMessage()Lorg/springframework/integration/Message;
@4.3.7.RELEASE
+#toString()Ljava/lang/String;
@4.3.10.RELEASE
+#<init>(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;Lorg/springframework/messaging/Message;)V
@5.3.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/integration/graph/ErrorCapableCompositeMessageHandlerNode
@5.1.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/integration/handler/CompositeMessageHandler;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
+#getErrors()Ljava/lang/String;

+###org/springframework/integration/graph/ErrorCapableNode
@5.1.0.RELEASE
+#getErrors()Ljava/lang/String;

+###org/springframework/integration/graph/RoutingMessageHandlerNode
@5.1.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/messaging/MessageHandler;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V
+#getRoutes()Ljava/util/Collection;

+###org/springframework/integration/graph/ErrorCapableMessageHandlerNode
@5.1.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/messaging/MessageHandler;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getErrors()Ljava/lang/String;

+###org/springframework/integration/graph/IntegrationNode$Stats
@5.1.0.RELEASE
+#<init>()V
@5.2.0.RELEASE
+#getDeprecated()Ljava/lang/String;
@5.4.0
-###org/springframework/integration/graph/IntegrationNode$Stats

+###org/springframework/integration/graph/MessageChannelNode
@5.1.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/messaging/MessageChannel;)V
@5.2.0.RELEASE
+#getSendTimers()Lorg/springframework/integration/graph/SendTimers;
+#sendTimers(Ljava/util/function/Supplier;)V

+###org/springframework/integration/graph/MessageProducerNode
@5.1.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/integration/endpoint/MessageProducerSupport;Ljava/lang/String;Ljava/lang/String;)V

+###org/springframework/integration/graph/IntegrationNode
@5.1.0.RELEASE
+#getNodeId()I
+#getName()Ljava/lang/String;
+#getComponentType()Ljava/lang/String;
+#getStats()Lorg/springframework/integration/graph/IntegrationNode$Stats;
+#getProperties()Ljava/util/Map;
+#addProperty(Ljava/lang/String;Ljava/lang/Object;)V
+#addProperties(Ljava/util/Map;)V
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;
+#getIntegrationPatternCategory()Lorg/springframework/integration/IntegrationPatternType$IntegrationPatternCategory;
@5.4.0
-#getStats()Lorg/springframework/integration/graph/IntegrationNode$Stats;
@6.0.1
+#isObserved()Z

+###org/springframework/integration/graph/MessageHandlerNode$Stats
@5.1.0.RELEASE
+#isLoggingEnabled()Z
+#getHandleCount()J
+#getErrorCount()J
+#getMeanDuration()D
+#getMinDuration()D
+#getMaxDuration()D
+#getStandardDeviationDuration()D
+#getActiveCount()J
+#getDuration()Lorg/springframework/integration/support/management/Statistics;
+#isStatsEnabled()Z
+#isCountsEnabled()Z
@5.4.0
-###org/springframework/integration/graph/MessageHandlerNode$Stats

+###org/springframework/integration/graph/LinkNode
@5.1.0.RELEASE
+#<init>(IILorg/springframework/integration/graph/LinkNode$Type;)V
+#getFrom()I
+#getTo()I
+#getType()Lorg/springframework/integration/graph/LinkNode$Type;

+###org/springframework/integration/graph/MessageHandlerNode
@5.1.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/messaging/MessageHandler;Ljava/lang/String;Ljava/lang/String;)V
+#getInput()Ljava/lang/String;
@5.2.0.RELEASE
+#getSendTimers()Lorg/springframework/integration/graph/SendTimers;
+#sendTimers(Ljava/util/function/Supplier;)V

+###org/springframework/integration/graph/LinkNode$Type
@5.1.0.RELEASE
+#values()[Lorg/springframework/integration/graph/LinkNode$Type;
+#valueOf(Ljava/lang/String;)Lorg/springframework/integration/graph/LinkNode$Type;

+###org/springframework/integration/graph/MessageSourceNode$Stats
@5.1.0.RELEASE
+#getMessageCount()J
@5.4.0
-###org/springframework/integration/graph/MessageSourceNode$Stats

+###org/springframework/integration/graph/CompositeMessageHandlerNode$InnerHandler
@5.1.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getType()Ljava/lang/String;

+###org/springframework/integration/graph/ErrorCapableRoutingNode
@5.1.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/messaging/MessageHandler;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V
+#getErrors()Ljava/lang/String;

+###org/springframework/integration/graph/Graph
@5.1.0.RELEASE
+#<init>(Ljava/util/Map;Ljava/util/Collection;Ljava/util/Collection;)V
+#getContentDescriptor()Ljava/util/Map;
+#getNodes()Ljava/util/Collection;
+#getLinks()Ljava/util/Collection;

+###org/springframework/integration/graph/IntegrationGraphServer
@5.1.0.RELEASE
+#<init>()V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#setApplicationName(Ljava/lang/String;)V
+#setAdditionalPropertiesCallback(Ljava/util/function/Function;)V
+#onApplicationEvent(Lorg/springframework/context/event/ContextRefreshedEvent;)V
+#getGraph()Lorg/springframework/integration/graph/Graph;
+#rebuild()Lorg/springframework/integration/graph/Graph;
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V

+###org/springframework/integration/graph/ErrorCapableEndpointNode
@5.1.0.RELEASE
+#getErrors()Ljava/lang/String;

+###org/springframework/integration/graph/DiscardingMessageHandlerNode
@5.1.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/messaging/MessageHandler;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getDiscards()Ljava/lang/String;

+###org/springframework/integration/graph/MessageSourceNode
@5.1.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/integration/core/MessageSource;Ljava/lang/String;Ljava/lang/String;)V
@5.2.0.RELEASE
+#getReceiveCounters()Lorg/springframework/integration/graph/ReceiveCounters;
+#receiveCounters(Ljava/util/function/Supplier;)V

+###org/springframework/integration/graph/EndpointNode
@5.1.0.RELEASE
+#getOutput()Ljava/lang/String;

+###org/springframework/integration/graph/ErrorCapableDiscardingMessageHandlerNode
@5.1.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/messaging/MessageHandler;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getErrors()Ljava/lang/String;

+###org/springframework/integration/graph/CompositeMessageHandlerNode
@5.1.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/messaging/MessageHandler;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
+#getHandlers()Ljava/util/List;

+###org/springframework/integration/graph/MessageChannelNode$Stats
@5.1.0.RELEASE
+#isCountsEnabled()Z
+#isLoggingEnabled()Z
+#getSendCount()J
+#getSendErrorCount()J
+#getTimeSinceLastSend()D
+#getMeanSendRate()D
+#getMeanErrorRate()D
+#getMeanErrorRatio()D
+#getMeanSendDuration()D
+#getMinSendDuration()D
+#getMaxSendDuration()D
+#getStandardDeviationSendDuration()D
+#getSendDuration()Lorg/springframework/integration/support/management/Statistics;
+#getSendRate()Lorg/springframework/integration/support/management/Statistics;
+#getErrorRate()Lorg/springframework/integration/support/management/Statistics;
+#isStatsEnabled()Z
@5.4.0
-###org/springframework/integration/graph/MessageChannelNode$Stats

+###org/springframework/integration/graph/MessageGatewayNode$Stats
@5.1.0.RELEASE
+#getSendCount()J
@5.4.0
-###org/springframework/integration/graph/MessageGatewayNode$Stats

+###org/springframework/integration/graph/MessageGatewayNode
@5.1.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/integration/gateway/MessagingGatewaySupport;Ljava/lang/String;Ljava/lang/String;)V

+###org/springframework/integration/MessageDispatchingException
@2.1.1.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;)V
+#<init>(Lorg/springframework/integration/Message;)V
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;)V
+#<init>(Lorg/springframework/messaging/Message;)V
-#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
-#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;)V
-#<init>(Lorg/springframework/integration/Message;)V

+###org/springframework/integration/history/MessageHistory
@2.0.0.RELEASE
+#read(Lorg/springframework/integration/Message;)Lorg/springframework/integration/history/MessageHistory;
+#write(Lorg/springframework/integration/Message;Lorg/springframework/integration/context/NamedComponent;)Lorg/springframework/integration/Message;
+#size()I
+#isEmpty()Z
+#contains(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#get(I)Ljava/util/Properties;
+#iterator()Ljava/util/Iterator;
+#listIterator()Ljava/util/ListIterator;
+#listIterator(I)Ljava/util/ListIterator;
+#subList(II)Ljava/util/List;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#indexOf(Ljava/lang/Object;)I
+#lastIndexOf(Ljava/lang/Object;)I
+#toString()Ljava/lang/String;
+#add(Ljava/util/Properties;)Z
+#add(ILjava/util/Properties;)V
+#addAll(Ljava/util/Collection;)Z
+#addAll(ILjava/util/Collection;)Z
+#set(ILjava/util/Properties;)Ljava/util/Properties;
+#remove(I)Ljava/util/Properties;
+#remove(Ljava/lang/Object;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#clear()V
+#remove(I)Ljava/lang/Object;
+#add(ILjava/lang/Object;)V
+#set(ILjava/lang/Object;)Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#add(Ljava/lang/Object;)Z
@3.0.0.RELEASE
+#write(Lorg/springframework/integration/Message;Lorg/springframework/integration/support/context/NamedComponent;)Lorg/springframework/integration/Message;
-#write(Lorg/springframework/integration/Message;Lorg/springframework/integration/context/NamedComponent;)Lorg/springframework/integration/Message;
@4.0.0.RELEASE
+#read(Lorg/springframework/messaging/Message;)Lorg/springframework/integration/history/MessageHistory;
+#write(Lorg/springframework/messaging/Message;Lorg/springframework/integration/support/context/NamedComponent;)Lorg/springframework/messaging/Message;
+#write(Lorg/springframework/messaging/Message;Lorg/springframework/integration/support/context/NamedComponent;Lorg/springframework/integration/support/MessageBuilderFactory;)Lorg/springframework/messaging/Message;
-#read(Lorg/springframework/integration/Message;)Lorg/springframework/integration/history/MessageHistory;
-#write(Lorg/springframework/integration/Message;Lorg/springframework/integration/support/context/NamedComponent;)Lorg/springframework/integration/Message;
@5.3.9.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.4.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.9
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.5.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.5.2
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/integration/history/MessageHistoryConfigurer
@2.0.0.RELEASE
+#<init>()V
+#setComponentNamePatterns([Ljava/lang/String;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#isRunning()Z
+#isAutoStartup()Z
+#getPhase()I
+#start()V
+#stop()V
+#stop(Ljava/lang/Runnable;)V
@4.0.0.RELEASE
+#setComponentNamePatternsString(Ljava/lang/String;)V
+#getComponentNamePatternsString()Ljava/lang/String;
+#setComponentNamePatternsSet(Ljava/util/Set;)V
@5.0.7.RELEASE
+#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#requiresDestruction(Ljava/lang/Object;)Z
+#postProcessBeforeDestruction(Ljava/lang/Object;Ljava/lang/String;)V
+#setAutoStartup(Z)V
+#setPhase(I)V
@5.1.7.RELEASE
-#stop(Ljava/lang/Runnable;)V

+###org/springframework/integration/history/MessageHistory$Entry
@2.0.0.RELEASE
+#<init>()V
+#getName()Ljava/lang/String;
+#getType()Ljava/lang/String;
+#getTimestamp()Ljava/lang/String;

+###org/springframework/integration/history/HistoryWritingMessagePostProcessor
@2.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/integration/history/TrackableComponent;)V
+#setTrackableComponent(Lorg/springframework/integration/history/TrackableComponent;)V
+#setShouldTrack(Z)V
+#postProcessMessage(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
@4.0.0.RELEASE
+#setMessageBuilderFactory(Lorg/springframework/integration/support/MessageBuilderFactory;)V
+#postProcessMessage(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
-#postProcessMessage(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
@4.2.0.RELEASE
+#<init>(Lorg/springframework/integration/support/management/TrackableComponent;)V
+#setTrackableComponent(Lorg/springframework/integration/support/management/TrackableComponent;)V
-#<init>(Lorg/springframework/integration/history/TrackableComponent;)V
-#setTrackableComponent(Lorg/springframework/integration/history/TrackableComponent;)V

+###org/springframework/integration/json/JsonPropertyAccessor$ToStringFriendlyJsonNode
@3.0.0.RELEASE
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;)V
+#toString()Ljava/lang/String;
@4.0.4.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0.RELEASE
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;)V
@5.0.1.RELEASE
+#getTarget()Lcom/fasterxml/jackson/databind/JsonNode;
@5.5.0
-###org/springframework/integration/json/JsonPropertyAccessor$ToStringFriendlyJsonNode

+###org/springframework/integration/json/JsonPropertyAccessor$ArrayNodeAsList
@5.0.0.RELEASE
+#get(I)Lorg/springframework/integration/json/JsonPropertyAccessor$WrappedJsonNode;
+#size()I
+#iterator()Ljava/util/Iterator;
+#get(I)Ljava/lang/Object;
@5.0.1.RELEASE
+#getTarget()Lcom/fasterxml/jackson/databind/node/ArrayNode;
+#getTarget()Lcom/fasterxml/jackson/databind/JsonNode;
@5.5.0
-###org/springframework/integration/json/JsonPropertyAccessor$ArrayNodeAsList

+###org/springframework/integration/json/JsonPropertyAccessor$WrappedJsonNode
@5.0.0.RELEASE
@5.0.1.RELEASE
+#getTarget()Lcom/fasterxml/jackson/databind/JsonNode;
@5.5.0
-###org/springframework/integration/json/JsonPropertyAccessor$WrappedJsonNode

+###org/springframework/integration/json/SimpleJsonSerializer
@5.0.0.RELEASE
+#toJson(Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/integration/json/JsonPathUtils
@3.0.0.RELEASE
+#evaluate(Ljava/lang/Object;Ljava/lang/String;[Lcom/jayway/jsonpath/Filter;)Ljava/lang/Object;
@4.2.0.RELEASE
+#evaluate(Ljava/lang/Object;Ljava/lang/String;[Lcom/jayway/jsonpath/Predicate;)Ljava/lang/Object;
-#evaluate(Ljava/lang/Object;Ljava/lang/String;[Lcom/jayway/jsonpath/Filter;)Ljava/lang/Object;

+###org/springframework/integration/json/ObjectToJsonTransformer$ResultType
@4.0.0.RELEASE
+#values()[Lorg/springframework/integration/json/ObjectToJsonTransformer$ResultType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/integration/json/ObjectToJsonTransformer$ResultType;

+###org/springframework/integration/json/JsonPropertyAccessor
@3.0.0.RELEASE
+#<init>()V
+#getSpecificTargetClasses()[Ljava/lang/Class;
+#canRead(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;)Z
+#read(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/expression/TypedValue;
+#canWrite(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;)Z
+#write(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
+#setObjectMapper(Lcom/fasterxml/jackson/databind/ObjectMapper;)V
@5.0.0.RELEASE
+#wrap(Lcom/fasterxml/jackson/databind/JsonNode;)Lorg/springframework/integration/json/JsonPropertyAccessor$WrappedJsonNode;
@5.5.0
+#wrap(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/lang/Object;
-#wrap(Lcom/fasterxml/jackson/databind/JsonNode;)Lorg/springframework/integration/json/JsonPropertyAccessor$WrappedJsonNode;

+###org/springframework/integration/json/ObjectToJsonTransformer
@2.0.0.RELEASE
+#<init>(Lorg/codehaus/jackson/map/ObjectMapper;)V
+#<init>()V
@2.2.0.RELEASE
+#setContentType(Ljava/lang/String;)V
@3.0.0.RELEASE
+#<init>(Ljava/lang/Object;)V[deprecated]
+#<init>(Lorg/springframework/integration/support/json/JsonObjectMapper;)V
-#<init>(Lorg/codehaus/jackson/map/ObjectMapper;)V
@4.0.0.RELEASE
+#<init>(Lorg/springframework/integration/json/ObjectToJsonTransformer$ResultType;)V
+#<init>(Lorg/springframework/integration/support/json/JsonObjectMapper;Lorg/springframework/integration/json/ObjectToJsonTransformer$ResultType;)V
+#getComponentType()Ljava/lang/String;
-#<init>(Ljava/lang/Object;)V[deprecated]

+###org/springframework/integration/json/JsonToObjectTransformer
@2.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#<init>(Ljava/lang/Class;Lorg/codehaus/jackson/map/ObjectMapper;)V
@3.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/Class;Ljava/lang/Object;)V[deprecated]
+#<init>(Lorg/springframework/integration/support/json/JsonObjectMapper;)V
+#<init>(Ljava/lang/Class;Lorg/springframework/integration/support/json/JsonObjectMapper;)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
-#<init>(Ljava/lang/Class;Lorg/codehaus/jackson/map/ObjectMapper;)V
@4.0.0.RELEASE
+#getComponentType()Ljava/lang/String;
-#<init>(Ljava/lang/Class;Ljava/lang/Object;)V[deprecated]
@5.2.0.RELEASE
+#<init>(Lorg/springframework/core/ResolvableType;)V
+#<init>(Lorg/springframework/core/ResolvableType;Lorg/springframework/integration/support/json/JsonObjectMapper;)V
@5.2.6.RELEASE
+#setValueTypeExpressionString(Ljava/lang/String;)V
+#setValueTypeExpression(Lorg/springframework/expression/Expression;)V

+###org/springframework/integration/selector/MetadataStoreSelector
@4.1.0.RELEASE
+#<init>(Lorg/springframework/integration/handler/MessageProcessor;)V
+#<init>(Lorg/springframework/integration/handler/MessageProcessor;Lorg/springframework/integration/handler/MessageProcessor;)V
+#<init>(Lorg/springframework/integration/handler/MessageProcessor;Lorg/springframework/integration/metadata/ConcurrentMetadataStore;)V
+#<init>(Lorg/springframework/integration/handler/MessageProcessor;Lorg/springframework/integration/handler/MessageProcessor;Lorg/springframework/integration/metadata/ConcurrentMetadataStore;)V
+#accept(Lorg/springframework/messaging/Message;)Z
+#accept(Ljava/lang/Object;)Z
@5.3.0.RELEASE
+#setCompareValues(Ljava/util/function/BiPredicate;)V
+#compareValues(Ljava/util/function/BiPredicate;)Lorg/springframework/integration/selector/MetadataStoreSelector;

+###org/springframework/integration/selector/MessageSelectorChain$VotingStrategy
@1.0.1.RELEASE
+#values()[Lorg/springframework/integration/selector/MessageSelectorChain$VotingStrategy;
+#valueOf(Ljava/lang/String;)Lorg/springframework/integration/selector/MessageSelectorChain$VotingStrategy;

+###org/springframework/integration/selector/PayloadTypeSelector
@1.0.1.RELEASE
+#<init>([Ljava/lang/Class;)V
+#accept(Lorg/springframework/integration/core/Message;)Z
@2.0.0.RELEASE
+#accept(Lorg/springframework/integration/Message;)Z
-#accept(Lorg/springframework/integration/core/Message;)Z
@4.0.0.RELEASE
+#accept(Lorg/springframework/messaging/Message;)Z
+#accept(Ljava/lang/Object;)Z
-#accept(Lorg/springframework/integration/Message;)Z

+###org/springframework/integration/selector/UnexpiredMessageSelector
@1.0.1.RELEASE
+#<init>()V
+#accept(Lorg/springframework/integration/core/Message;)Z
@2.0.0.RELEASE
+#accept(Lorg/springframework/integration/Message;)Z
-#accept(Lorg/springframework/integration/core/Message;)Z
@4.0.0.RELEASE
+#accept(Lorg/springframework/messaging/Message;)Z
+#accept(Ljava/lang/Object;)Z
-#accept(Lorg/springframework/integration/Message;)Z

+###org/springframework/integration/selector/MessageSelectorChain
@1.0.1.RELEASE
+#<init>()V
+#setVotingStrategy(Lorg/springframework/integration/selector/MessageSelectorChain$VotingStrategy;)V
+#add(Lorg/springframework/integration/selector/MessageSelector;)V
+#add(ILorg/springframework/integration/selector/MessageSelector;)V
+#setSelectors(Ljava/util/List;)V
+#accept(Lorg/springframework/integration/core/Message;)Z
@2.0.0.RELEASE
+#add(Lorg/springframework/integration/core/MessageSelector;)V
+#add(ILorg/springframework/integration/core/MessageSelector;)V
+#accept(Lorg/springframework/integration/Message;)Z
-#add(Lorg/springframework/integration/selector/MessageSelector;)V
-#add(ILorg/springframework/integration/selector/MessageSelector;)V
-#accept(Lorg/springframework/integration/core/Message;)Z
@4.0.0.RELEASE
+#accept(Lorg/springframework/messaging/Message;)Z
+#accept(Ljava/lang/Object;)Z
-#accept(Lorg/springframework/integration/Message;)Z

+###org/springframework/integration/mapping/RequestReplyHeaderMapper
@2.1.0.RELEASE
+#fromHeadersToRequest(Lorg/springframework/integration/MessageHeaders;Ljava/lang/Object;)V
+#fromHeadersToReply(Lorg/springframework/integration/MessageHeaders;Ljava/lang/Object;)V
+#toHeadersFromRequest(Ljava/lang/Object;)Ljava/util/Map;
+#toHeadersFromReply(Ljava/lang/Object;)Ljava/util/Map;
@4.0.0.RELEASE
+#fromHeadersToRequest(Lorg/springframework/messaging/MessageHeaders;Ljava/lang/Object;)V
+#fromHeadersToReply(Lorg/springframework/messaging/MessageHeaders;Ljava/lang/Object;)V
-#fromHeadersToRequest(Lorg/springframework/integration/MessageHeaders;Ljava/lang/Object;)V
-#fromHeadersToReply(Lorg/springframework/integration/MessageHeaders;Ljava/lang/Object;)V

+###org/springframework/integration/mapping/HeaderMapper
@2.0.0.RELEASE
+#fromHeaders(Lorg/springframework/integration/MessageHeaders;Ljava/lang/Object;)V
+#toHeaders(Ljava/lang/Object;)Ljava/util/Map;
@4.0.0.RELEASE
+#fromHeaders(Lorg/springframework/messaging/MessageHeaders;Ljava/lang/Object;)V
-#fromHeaders(Lorg/springframework/integration/MessageHeaders;Ljava/lang/Object;)V

+###org/springframework/integration/mapping/BytesMessageMapper
@5.0.0.RELEASE
@5.1.2.RELEASE
+#toMessage([B)Lorg/springframework/messaging/Message;
+#toMessage([BLjava/util/Map;)Lorg/springframework/messaging/Message;
+#toMessage(Ljava/lang/Object;Ljava/util/Map;)Lorg/springframework/messaging/Message;
+#toMessage(Ljava/lang/Object;)Lorg/springframework/messaging/Message;

+###org/springframework/integration/mapping/support/JsonHeaders
@3.0.0.RELEASE
+#<init>()V
@4.3.0.RELEASE
-#<init>()V
@5.2.4.RELEASE
+#buildResolvableType(Ljava/lang/ClassLoader;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/core/ResolvableType;
+#buildResolvableType(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;

+###org/springframework/integration/mapping/AbstractHeaderMapper$PatternBasedHeaderMatcher
@4.1.0.RELEASE
+#<init>(Ljava/util/Collection;)V
+#matchHeader(Ljava/lang/String;)Z
@4.3.0.RELEASE
+#isNegated()Z
@5.2.5.RELEASE
-#isNegated()Z

+###org/springframework/integration/mapping/AbstractHeaderMapper$CompositeHeaderMatcher
@4.1.0.RELEASE
+#matchHeader(Ljava/lang/String;)Z
@4.3.0.RELEASE
+#isNegated()Z
@5.2.5.RELEASE
-#isNegated()Z

+###org/springframework/integration/mapping/AbstractHeaderMapper$PrefixBasedMatcher
@4.1.0.RELEASE
+#<init>(ZLjava/lang/String;)V
+#matchHeader(Ljava/lang/String;)Z
@4.3.0.RELEASE
+#isNegated()Z
@5.2.5.RELEASE
-#isNegated()Z

+###org/springframework/integration/mapping/OutboundMessageMapper
@2.0.0.RELEASE
+#fromMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;
@4.0.0.RELEASE
+#fromMessage(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
-#fromMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;

+###org/springframework/integration/mapping/AbstractHeaderMapper$ContentBasedHeaderMatcher
@4.1.0.RELEASE
+#<init>(ZLjava/util/Collection;)V
+#matchHeader(Ljava/lang/String;)Z
@4.3.0.RELEASE
+#isNegated()Z
@5.2.5.RELEASE
-#isNegated()Z

+###org/springframework/integration/mapping/MessageMappingException
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;)V
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;)V
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
-#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;)V
-#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher
@4.1.0.RELEASE
+#matchHeader(Ljava/lang/String;)Z
@4.3.0.RELEASE
+#isNegated()Z

+###org/springframework/integration/mapping/InboundMessageMapper
@2.0.0.RELEASE
+#toMessage(Ljava/lang/Object;)Lorg/springframework/integration/Message;
@4.0.0.RELEASE
+#toMessage(Ljava/lang/Object;)Lorg/springframework/messaging/Message;
-#toMessage(Ljava/lang/Object;)Lorg/springframework/integration/Message;
@5.0.0.RELEASE
+#toMessage(Ljava/lang/Object;Ljava/util/Map;)Lorg/springframework/messaging/Message;

+###org/springframework/integration/mapping/AbstractHeaderMapper
@2.1.0.RELEASE
+#setRequestHeaderNames([Ljava/lang/String;)V
+#setReplyHeaderNames([Ljava/lang/String;)V
+#setUserDefinedHeaderPrefix(Ljava/lang/String;)V
+#fromHeadersToRequest(Lorg/springframework/integration/MessageHeaders;Ljava/lang/Object;)V
+#fromHeadersToReply(Lorg/springframework/integration/MessageHeaders;Ljava/lang/Object;)V
+#toHeadersFromRequest(Ljava/lang/Object;)Ljava/util/Map;
+#toHeadersFromReply(Ljava/lang/Object;)Ljava/util/Map;
@4.0.0.RELEASE
+#fromHeadersToRequest(Lorg/springframework/messaging/MessageHeaders;Ljava/lang/Object;)V
+#fromHeadersToReply(Lorg/springframework/messaging/MessageHeaders;Ljava/lang/Object;)V
-#fromHeadersToRequest(Lorg/springframework/integration/MessageHeaders;Ljava/lang/Object;)V
-#fromHeadersToReply(Lorg/springframework/integration/MessageHeaders;Ljava/lang/Object;)V
@4.1.0.RELEASE
-#setUserDefinedHeaderPrefix(Ljava/lang/String;)V
@5.2.4.RELEASE
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V

+###org/springframework/integration/mapping/AbstractHeaderMapper$SinglePatternBasedHeaderMatcher
@4.3.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Z)V
+#matchHeader(Ljava/lang/String;)Z
+#isNegated()Z

+###org/springframework/integration/acks/AcknowledgmentCallback
@5.1.0.RELEASE
+#acknowledge(Lorg/springframework/integration/acks/AcknowledgmentCallback$Status;)V
+#isAcknowledged()Z
+#noAutoAck()V
+#isAutoAck()Z
@5.3.0.RELEASE
+#acknowledge()V

+###org/springframework/integration/acks/AcknowledgmentCallback$Status
@5.1.0.RELEASE
+#values()[Lorg/springframework/integration/acks/AcknowledgmentCallback$Status;
+#valueOf(Ljava/lang/String;)Lorg/springframework/integration/acks/AcknowledgmentCallback$Status;

+###org/springframework/integration/acks/AcknowledgmentCallbackFactory
@5.1.0.RELEASE
+#createCallback(Ljava/lang/Object;)Lorg/springframework/integration/acks/AcknowledgmentCallback;

+###org/springframework/integration/acks/AckUtils
@5.1.0.RELEASE
+#getAckCallback(Lorg/springframework/messaging/Message;)Lorg/springframework/integration/acks/AcknowledgmentCallback;[deprecated]
+#autoAck(Lorg/springframework/integration/acks/AcknowledgmentCallback;)V
+#autoNack(Lorg/springframework/integration/acks/AcknowledgmentCallback;)V
+#accept(Lorg/springframework/integration/acks/AcknowledgmentCallback;)V
+#reject(Lorg/springframework/integration/acks/AcknowledgmentCallback;)V
+#requeue(Lorg/springframework/integration/acks/AcknowledgmentCallback;)V
@5.3.0.RELEASE
-#getAckCallback(Lorg/springframework/messaging/Message;)Lorg/springframework/integration/acks/AcknowledgmentCallback;[deprecated]

+###org/springframework/integration/MessageTimeoutException
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;)V
+#<init>(Lorg/springframework/integration/Message;)V
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;)V
+#<init>(Lorg/springframework/messaging/Message;)V
-#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
-#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;)V
-#<init>(Lorg/springframework/integration/Message;)V

+###org/springframework/integration/endpoint/AbstractPollingEndpoint
@1.0.1.RELEASE
+#<init>()V
+#setTrigger(Lorg/springframework/integration/scheduling/Trigger;)V
+#setMaxMessagesPerPoll(I)V
+#setTaskExecutor(Lorg/springframework/core/task/TaskExecutor;)V
+#setErrorHandler(Lorg/springframework/integration/util/ErrorHandler;)V
+#setTransactionManager(Lorg/springframework/transaction/PlatformTransactionManager;)V
+#setTransactionDefinition(Lorg/springframework/transaction/TransactionDefinition;)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#setAdviceChain(Ljava/util/List;)V
@2.0.0.RELEASE
+#setPollerMetadata(Lorg/springframework/integration/scheduling/PollerMetadata;)V
+#setErrorHandler(Lorg/springframework/util/ErrorHandler;)V
-#setTrigger(Lorg/springframework/integration/scheduling/Trigger;)V
-#setMaxMessagesPerPoll(I)V
-#setTaskExecutor(Lorg/springframework/core/task/TaskExecutor;)V
-#setErrorHandler(Lorg/springframework/integration/util/ErrorHandler;)V
-#setTransactionManager(Lorg/springframework/transaction/PlatformTransactionManager;)V
-#setTransactionDefinition(Lorg/springframework/transaction/TransactionDefinition;)V
-#setAdviceChain(Ljava/util/List;)V
@2.0.3.RELEASE
+#setTaskExecutor(Ljava/util/concurrent/Executor;)V
+#setTrigger(Lorg/springframework/scheduling/Trigger;)V
+#setAdviceChain(Ljava/util/List;)V
+#setMaxMessagesPerPoll(J)V
@2.0.4.RELEASE
*#setPollerMetadata(Lorg/springframework/integration/scheduling/PollerMetadata;)V[deprecated]
@3.0.0.RELEASE
+#setTransactionSynchronizationFactory(Lorg/springframework/integration/transaction/TransactionSynchronizationFactory;)V
-#setPollerMetadata(Lorg/springframework/integration/scheduling/PollerMetadata;)V[deprecated]
@4.3.0.RELEASE
+#getDefaultErrorChannel()Lorg/springframework/messaging/MessageChannel;
@5.5.0
+#getMaxMessagesPerPoll()J

+###org/springframework/integration/endpoint/ExpressionMessageProducerSupport
@3.0.0.RELEASE
+#<init>()V
+#setPayloadExpression(Ljava/lang/String;)V
+#setIntegrationEvaluationContext(Lorg/springframework/expression/EvaluationContext;)V
@4.1.0.RELEASE
*#setPayloadExpression(Ljava/lang/String;)V[deprecated]
+#setExpressionPayload(Lorg/springframework/expression/Expression;)V
@4.3.0.RELEASE
+#setPayloadExpression(Lorg/springframework/expression/Expression;)V
+#setPayloadExpressionString(Ljava/lang/String;)V
*#setExpressionPayload(Lorg/springframework/expression/Expression;)V[deprecated]
-#setPayloadExpression(Ljava/lang/String;)V[deprecated]
@5.0.0.RELEASE
-#setExpressionPayload(Lorg/springframework/expression/Expression;)V[deprecated]

+###org/springframework/integration/endpoint/MethodInvokingMessageSource
@2.0.0.RELEASE
+#<init>()V
+#setObject(Ljava/lang/Object;)V
+#setMethod(Ljava/lang/reflect/Method;)V
+#setMethodName(Ljava/lang/String;)V
+#afterPropertiesSet()V
@4.0.0.RELEASE
+#getComponentType()Ljava/lang/String;
@4.2.0.RELEASE
+#start()V
+#stop()V
+#isRunning()Z
@5.1.0.RELEASE
-#afterPropertiesSet()V

+###org/springframework/integration/endpoint/ExpressionEvaluatingMessageSource
@2.0.0.RELEASE
+#<init>(Lorg/springframework/expression/Expression;Ljava/lang/Class;)V
+#doReceive()Ljava/lang/Object;
@4.0.0.RELEASE
+#getComponentType()Ljava/lang/String;
@4.3.0.RELEASE
+#getExpression()Lorg/springframework/expression/Expression;

+###org/springframework/integration/endpoint/MessageProducerSupport
@1.0.1.RELEASE
+#<init>()V
+#setOutputChannel(Lorg/springframework/integration/core/MessageChannel;)V
+#setSendTimeout(J)V
@2.0.0.RELEASE
+#setOutputChannel(Lorg/springframework/integration/MessageChannel;)V
+#setErrorChannel(Lorg/springframework/integration/MessageChannel;)V
+#setShouldTrack(Z)V
-#setOutputChannel(Lorg/springframework/integration/core/MessageChannel;)V
@4.0.0.RELEASE
+#setOutputChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setErrorChannel(Lorg/springframework/messaging/MessageChannel;)V
-#setOutputChannel(Lorg/springframework/integration/MessageChannel;)V
-#setErrorChannel(Lorg/springframework/integration/MessageChannel;)V
@4.1.0.RELEASE
-#<init>()V
@4.3.0.RELEASE
+#setOutputChannelName(Ljava/lang/String;)V
+#getOutputChannel()Lorg/springframework/messaging/MessageChannel;
+#setErrorChannelName(Ljava/lang/String;)V
+#getErrorChannel()Lorg/springframework/messaging/MessageChannel;
+#afterSingletonsInstantiated()V
@4.3.10.RELEASE
+#setErrorMessageStrategy(Lorg/springframework/integration/support/ErrorMessageStrategy;)V
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;
@6.0.0
+#setObservationConvention(Lorg/springframework/integration/support/management/observation/MessageReceiverObservationConvention;)V
+#registerObservationRegistry(Lio/micrometer/observation/ObservationRegistry;)V
@6.0.1
+#isObserved()Z

+###org/springframework/integration/endpoint/AbstractMessageSource
@2.0.0.RELEASE
+#<init>()V
+#setHeaderExpressions(Ljava/util/Map;)V
+#receive()Lorg/springframework/integration/Message;
@4.0.0.RELEASE
+#setBeanName(Ljava/lang/String;)V
+#getComponentName()Ljava/lang/String;
+#receive()Lorg/springframework/messaging/Message;
-#receive()Lorg/springframework/integration/Message;
@4.2.0.RELEASE
+#setManagedType(Ljava/lang/String;)V
+#getManagedType()Ljava/lang/String;
+#setManagedName(Ljava/lang/String;)V
+#getManagedName()Ljava/lang/String;
+#isCountsEnabled()Z
+#setCountsEnabled(Z)V
+#isLoggingEnabled()Z
+#setLoggingEnabled(Z)V
+#reset()V
+#getMessageCount()I
+#getMessageCountLong()J
@5.0.0.RELEASE
+#getOverrides()Lorg/springframework/integration/support/management/IntegrationManagement$ManagementOverrides;
@5.0.2.RELEASE
+#setCounter(Lio/micrometer/core/instrument/Counter;)V
@5.0.3.RELEASE
+#registerMeterRegistry(Lio/micrometer/core/instrument/MeterRegistry;)V
-#setCounter(Lio/micrometer/core/instrument/Counter;)V
@5.0.4.RELEASE
+#registerMetricsCaptor(Lorg/springframework/integration/support/management/MetricsCaptor;)V
-#registerMeterRegistry(Lio/micrometer/core/instrument/MeterRegistry;)V
@5.1.0.RELEASE
+#registerMetricsCaptor(Lorg/springframework/integration/support/management/metrics/MetricsCaptor;)V
+#destroy()V
-#registerMetricsCaptor(Lorg/springframework/integration/support/management/MetricsCaptor;)V
@5.1.3.RELEASE
+#getBeanName()Ljava/lang/String;
@5.3.0.RELEASE
*#reset()V[deprecated]
*#getMessageCount()I[deprecated]
*#getMessageCountLong()J[deprecated]
@5.4.0
-#isCountsEnabled()Z
-#setCountsEnabled(Z)V
-#reset()V[deprecated]
-#getMessageCount()I[deprecated]
-#getMessageCountLong()J[deprecated]

+###org/springframework/integration/endpoint/SourcePollingChannelAdapter
@1.0.1.RELEASE
+#<init>()V
+#setSource(Lorg/springframework/integration/message/MessageSource;)V
+#setOutputChannel(Lorg/springframework/integration/core/MessageChannel;)V
+#setSendTimeout(J)V
@2.0.0.RELEASE
+#setSource(Lorg/springframework/integration/core/MessageSource;)V
+#setOutputChannel(Lorg/springframework/integration/MessageChannel;)V
+#setShouldTrack(Z)V
+#getComponentType()Ljava/lang/String;
-#setSource(Lorg/springframework/integration/message/MessageSource;)V
-#setOutputChannel(Lorg/springframework/integration/core/MessageChannel;)V
@2.2.0.RELEASE
+#setTransactionSynchronizationFactory(Lorg/springframework/integration/transaction/TransactionSynchronizationFactory;)V
@3.0.0.RELEASE
-#setTransactionSynchronizationFactory(Lorg/springframework/integration/transaction/TransactionSynchronizationFactory;)V
@4.0.0.RELEASE
+#setOutputChannel(Lorg/springframework/messaging/MessageChannel;)V
-#setOutputChannel(Lorg/springframework/integration/MessageChannel;)V
@4.3.0.RELEASE
+#getMessageSource()Lorg/springframework/integration/core/MessageSource;
+#setOutputChannelName(Ljava/lang/String;)V
+#getOutputChannel()Lorg/springframework/messaging/MessageChannel;

+###org/springframework/integration/endpoint/PollingConsumer
@1.0.1.RELEASE
+#<init>(Lorg/springframework/integration/channel/PollableChannel;Lorg/springframework/integration/message/MessageHandler;)V
+#setReceiveTimeout(J)V
@2.0.0.RELEASE
+#<init>(Lorg/springframework/integration/core/PollableChannel;Lorg/springframework/integration/core/MessageHandler;)V
-#<init>(Lorg/springframework/integration/channel/PollableChannel;Lorg/springframework/integration/message/MessageHandler;)V
@2.2.0.RELEASE
+#setTransactionSynchronizationFactory(Lorg/springframework/integration/transaction/TransactionSynchronizationFactory;)V
@3.0.0.RELEASE
-#setTransactionSynchronizationFactory(Lorg/springframework/integration/transaction/TransactionSynchronizationFactory;)V
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/PollableChannel;Lorg/springframework/messaging/MessageHandler;)V
-#<init>(Lorg/springframework/integration/core/PollableChannel;Lorg/springframework/integration/core/MessageHandler;)V
@4.3.0.RELEASE
+#getInputChannel()Lorg/springframework/messaging/MessageChannel;
+#getOutputChannel()Lorg/springframework/messaging/MessageChannel;
+#getHandler()Lorg/springframework/messaging/MessageHandler;

+###org/springframework/integration/endpoint/EventDrivenConsumer
@1.0.1.RELEASE
+#<init>(Lorg/springframework/integration/channel/SubscribableChannel;Lorg/springframework/integration/message/MessageHandler;)V
@2.0.0.RELEASE
+#<init>(Lorg/springframework/integration/core/SubscribableChannel;Lorg/springframework/integration/core/MessageHandler;)V
-#<init>(Lorg/springframework/integration/channel/SubscribableChannel;Lorg/springframework/integration/message/MessageHandler;)V
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/MessageHandler;)V
-#<init>(Lorg/springframework/integration/core/SubscribableChannel;Lorg/springframework/integration/core/MessageHandler;)V
@4.3.0.RELEASE
+#getInputChannel()Lorg/springframework/messaging/MessageChannel;
+#getOutputChannel()Lorg/springframework/messaging/MessageChannel;
+#getHandler()Lorg/springframework/messaging/MessageHandler;

+###org/springframework/integration/endpoint/PollingOperations
@5.0.1.RELEASE
+#poll(Lorg/springframework/messaging/MessageHandler;)Z

+###org/springframework/integration/endpoint/ReactiveStreamsConsumer
@5.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/MessageHandler;)V
+#<init>(Lorg/springframework/messaging/MessageChannel;Lorg/reactivestreams/Subscriber;)V
+#setErrorHandler(Lorg/springframework/util/ErrorHandler;)V
+#getInputChannel()Lorg/springframework/messaging/MessageChannel;
+#getOutputChannel()Lorg/springframework/messaging/MessageChannel;
+#getHandler()Lorg/springframework/messaging/MessageHandler;
@5.3.0.RELEASE
+#<init>(Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/ReactiveMessageHandler;)V
@5.5.0
+#setReactiveCustomizer(Ljava/util/function/Function;)V

+###org/springframework/integration/endpoint/Pausable
@5.0.3.RELEASE
+#pause()V
+#resume()V
@5.2.0.RELEASE
-###org/springframework/integration/endpoint/Pausable

+###org/springframework/integration/endpoint/MessageProcessorMessageSource
@5.0.0.RELEASE
+#<init>(Lorg/springframework/integration/handler/MessageProcessor;)V
+#getComponentType()Ljava/lang/String;

+###org/springframework/integration/endpoint/IntegrationConsumer
@4.3.0.RELEASE
+#getInputChannel()Lorg/springframework/messaging/MessageChannel;
+#getOutputChannel()Lorg/springframework/messaging/MessageChannel;
+#getHandler()Lorg/springframework/messaging/MessageHandler;

+###org/springframework/integration/endpoint/AbstractFetchLimitingMessageSource
@5.0.0.RELEASE
+#<init>()V
+#setMaxFetchSize(I)V
+#getMaxFetchSize()I

+###org/springframework/integration/endpoint/MessageSourcePollingTemplate
@5.0.1.RELEASE
+#<init>(Lorg/springframework/integration/core/MessageSource;)V
+#poll(Lorg/springframework/messaging/MessageHandler;)Z

+###org/springframework/integration/endpoint/AbstractEndpoint
@1.0.1.RELEASE
+#<init>()V
+#setAutoStartup(Z)V
+#setTaskScheduler(Lorg/springframework/integration/scheduling/TaskScheduler;)V
+#afterPropertiesSet()V
+#isRunning()Z
+#start()V
+#stop()V
@2.0.0.RELEASE
+#setPhase(I)V
+#setTaskScheduler(Lorg/springframework/scheduling/TaskScheduler;)V
+#isAutoStartup()Z
+#getPhase()I
+#stop(Ljava/lang/Runnable;)V
-#setTaskScheduler(Lorg/springframework/integration/scheduling/TaskScheduler;)V
-#afterPropertiesSet()V
@5.0.0.RELEASE
+#setRole(Ljava/lang/String;)V
+#getRole()Ljava/lang/String;
+#destroy()V
@5.1.3.RELEASE
-#setTaskScheduler(Lorg/springframework/scheduling/TaskScheduler;)V
@5.3.4.RELEASE
+#isActive()Z
@5.4.0
-#isActive()Z
@5.4.1
+#isActive()Z

+###org/springframework/integration/channel/PriorityChannel
@1.0.1.RELEASE
+#<init>(ILjava/util/Comparator;)V
+#<init>(I)V
+#<init>(Ljava/util/Comparator;)V
+#<init>()V
@4.3.1.RELEASE
+#getRemainingCapacity()I
@5.0.0.RELEASE
+#<init>(Lorg/springframework/integration/store/PriorityCapableChannelMessageStore;Ljava/lang/Object;)V
+#<init>(Lorg/springframework/integration/store/MessageGroupQueue;)V

+###org/springframework/integration/channel/AbstractExecutorChannel
@4.2.0.RELEASE
+#<init>(Ljava/util/concurrent/Executor;)V
+#setMaxSubscribers(I)V
+#setInterceptors(Ljava/util/List;)V
+#addInterceptor(Lorg/springframework/messaging/support/ChannelInterceptor;)V
+#addInterceptor(ILorg/springframework/messaging/support/ChannelInterceptor;)V
+#removeInterceptor(Lorg/springframework/messaging/support/ChannelInterceptor;)Z
+#removeInterceptor(I)Lorg/springframework/messaging/support/ChannelInterceptor;
+#hasExecutorInterceptors()Z
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/channel/NullChannel
@1.0.1.RELEASE
+#<init>()V
+#getName()Ljava/lang/String;
+#clear()Ljava/util/List;
+#purge(Lorg/springframework/integration/selector/MessageSelector;)Ljava/util/List;
+#receive()Lorg/springframework/integration/core/Message;
+#receive(J)Lorg/springframework/integration/core/Message;
+#send(Lorg/springframework/integration/core/Message;)Z
+#send(Lorg/springframework/integration/core/Message;J)Z
@1.0.3.RELEASE
+#setBeanName(Ljava/lang/String;)V
@2.0.0.RELEASE
+#send(Lorg/springframework/integration/Message;)Z
+#send(Lorg/springframework/integration/Message;J)Z
+#receive()Lorg/springframework/integration/Message;
+#receive(J)Lorg/springframework/integration/Message;
-#setBeanName(Ljava/lang/String;)V
-#getName()Ljava/lang/String;
-#clear()Ljava/util/List;
-#purge(Lorg/springframework/integration/selector/MessageSelector;)Ljava/util/List;
-#receive()Lorg/springframework/integration/core/Message;
-#receive(J)Lorg/springframework/integration/core/Message;
-#send(Lorg/springframework/integration/core/Message;)Z
-#send(Lorg/springframework/integration/core/Message;J)Z
@4.0.0.RELEASE
+#send(Lorg/springframework/messaging/Message;)Z
+#send(Lorg/springframework/messaging/Message;J)Z
+#receive()Lorg/springframework/messaging/Message;
+#receive(J)Lorg/springframework/messaging/Message;
-#send(Lorg/springframework/integration/Message;)Z
-#send(Lorg/springframework/integration/Message;J)Z
-#receive()Lorg/springframework/integration/Message;
-#receive(J)Lorg/springframework/integration/Message;
@4.2.0.RELEASE
+#setBeanName(Ljava/lang/String;)V
+#isLoggingEnabled()Z
+#setLoggingEnabled(Z)V
+#getComponentName()Ljava/lang/String;
+#getComponentType()Ljava/lang/String;
+#configureMetrics(Lorg/springframework/integration/support/management/AbstractMessageChannelMetrics;)V
+#reset()V
+#setCountsEnabled(Z)V
+#isCountsEnabled()Z
+#setStatsEnabled(Z)V
+#isStatsEnabled()Z
+#getSendCount()I
+#getSendCountLong()J
+#getSendErrorCount()I
+#getSendErrorCountLong()J
+#getTimeSinceLastSend()D
+#getMeanSendRate()D
+#getMeanErrorRate()D
+#getMeanErrorRatio()D
+#getMeanSendDuration()D
+#getMinSendDuration()D
+#getMaxSendDuration()D
+#getStandardDeviationSendDuration()D
+#getSendDuration()Lorg/springframework/integration/support/management/Statistics;
+#getSendRate()Lorg/springframework/integration/support/management/Statistics;
+#getErrorRate()Lorg/springframework/integration/support/management/Statistics;
+#configureMetrics(Lorg/springframework/integration/support/management/ConfigurableMetrics;)V
@4.2.1.RELEASE
+#toString()Ljava/lang/String;
@5.0.0.RELEASE
+#getOverrides()Lorg/springframework/integration/support/management/IntegrationManagement$ManagementOverrides;
@5.0.3.RELEASE
+#registerMeterRegistry(Lio/micrometer/core/instrument/MeterRegistry;)V
@5.0.4.RELEASE
+#registerMetricsCaptor(Lorg/springframework/integration/support/management/MetricsCaptor;)V
-#registerMeterRegistry(Lio/micrometer/core/instrument/MeterRegistry;)V
@5.1.0.RELEASE
+#registerMetricsCaptor(Lorg/springframework/integration/support/management/metrics/MetricsCaptor;)V
+#destroy()V
-#registerMetricsCaptor(Lorg/springframework/integration/support/management/MetricsCaptor;)V
@5.1.3.RELEASE
+#getBeanName()Ljava/lang/String;
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;
*#reset()V[deprecated]
*#setCountsEnabled(Z)V[deprecated]
*#isCountsEnabled()Z[deprecated]
*#setStatsEnabled(Z)V[deprecated]
*#isStatsEnabled()Z[deprecated]
*#getSendCount()I[deprecated]
*#getSendCountLong()J[deprecated]
*#getSendErrorCount()I[deprecated]
*#getSendErrorCountLong()J[deprecated]
*#getTimeSinceLastSend()D[deprecated]
*#getMeanSendRate()D[deprecated]
*#getMeanErrorRate()D[deprecated]
*#getMeanErrorRatio()D[deprecated]
*#getMeanSendDuration()D[deprecated]
*#getMinSendDuration()D[deprecated]
*#getMaxSendDuration()D[deprecated]
*#getStandardDeviationSendDuration()D[deprecated]
*#getSendDuration()Lorg/springframework/integration/support/management/Statistics;[deprecated]
*#getSendRate()Lorg/springframework/integration/support/management/Statistics;[deprecated]
*#getErrorRate()Lorg/springframework/integration/support/management/Statistics;[deprecated]
@5.4.0
-#configureMetrics(Lorg/springframework/integration/support/management/AbstractMessageChannelMetrics;)V
-#reset()V[deprecated]
-#setCountsEnabled(Z)V[deprecated]
-#isCountsEnabled()Z[deprecated]
-#setStatsEnabled(Z)V[deprecated]
-#isStatsEnabled()Z[deprecated]
-#getSendCount()I[deprecated]
-#getSendCountLong()J[deprecated]
-#getSendErrorCount()I[deprecated]
-#getSendErrorCountLong()J[deprecated]
-#getTimeSinceLastSend()D[deprecated]
-#getMeanSendRate()D[deprecated]
-#getMeanErrorRate()D[deprecated]
-#getMeanErrorRatio()D[deprecated]
-#getMeanSendDuration()D[deprecated]
-#getMinSendDuration()D[deprecated]
-#getMaxSendDuration()D[deprecated]
-#getStandardDeviationSendDuration()D[deprecated]
-#getSendDuration()Lorg/springframework/integration/support/management/Statistics;[deprecated]
-#getSendRate()Lorg/springframework/integration/support/management/Statistics;[deprecated]
-#getErrorRate()Lorg/springframework/integration/support/management/Statistics;[deprecated]
-#configureMetrics(Lorg/springframework/integration/support/management/ConfigurableMetrics;)V

+###org/springframework/integration/channel/PublishSubscribeChannel
@1.0.1.RELEASE
+#<init>(Lorg/springframework/core/task/TaskExecutor;)V
+#<init>()V
+#setErrorHandler(Lorg/springframework/integration/util/ErrorHandler;)V
+#setApplySequence(Z)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@1.0.3.RELEASE
+#setIgnoreFailures(Z)V
@2.0.0.RELEASE
+#getComponentType()Ljava/lang/String;
+#<init>(Ljava/util/concurrent/Executor;)V
+#setErrorHandler(Lorg/springframework/util/ErrorHandler;)V
+#onInit()V
-#<init>(Lorg/springframework/core/task/TaskExecutor;)V
-#setErrorHandler(Lorg/springframework/integration/util/ErrorHandler;)V
-#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@2.2.0.RELEASE
+#setMaxSubscribers(I)V
@3.0.0.RELEASE
+#setMinSubscribers(I)V
@4.2.0.RELEASE
-#setMaxSubscribers(I)V
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;
@5.4.3
+#<init>(Z)V
+#<init>(Ljava/util/concurrent/Executor;Z)V

+###org/springframework/integration/channel/AbstractExecutorChannel$MessageHandlingTask
@4.2.0.RELEASE
+#<init>(Lorg/springframework/integration/channel/AbstractExecutorChannel;Lorg/springframework/messaging/support/MessageHandlingRunnable;)V
+#run()V

+###org/springframework/integration/channel/AbstractPollableChannel
@1.0.1.RELEASE
+#<init>()V
+#receive()Lorg/springframework/integration/core/Message;
+#receive(J)Lorg/springframework/integration/core/Message;
@2.0.0.RELEASE
+#receive()Lorg/springframework/integration/Message;
+#receive(J)Lorg/springframework/integration/Message;
-#receive()Lorg/springframework/integration/core/Message;
-#receive(J)Lorg/springframework/integration/core/Message;
@4.0.0.RELEASE
+#receive()Lorg/springframework/messaging/Message;
+#receive(J)Lorg/springframework/messaging/Message;
-#receive()Lorg/springframework/integration/Message;
-#receive(J)Lorg/springframework/integration/Message;
@4.2.0.RELEASE
+#getReceiveCount()I
+#getReceiveCountLong()J
+#getReceiveErrorCount()I
+#getReceiveErrorCountLong()J
+#setInterceptors(Ljava/util/List;)V
+#addInterceptor(Lorg/springframework/messaging/support/ChannelInterceptor;)V
+#addInterceptor(ILorg/springframework/messaging/support/ChannelInterceptor;)V
+#removeInterceptor(Lorg/springframework/messaging/support/ChannelInterceptor;)Z
+#removeInterceptor(I)Lorg/springframework/messaging/support/ChannelInterceptor;
+#hasExecutorInterceptors()Z
@5.1.0.RELEASE
+#destroy()V
@5.2.0.RELEASE
-#destroy()V
@5.3.0.RELEASE
*#getReceiveCount()I[deprecated]
*#getReceiveCountLong()J[deprecated]
*#getReceiveErrorCount()I[deprecated]
*#getReceiveErrorCountLong()J[deprecated]
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;
@5.4.0
-#getReceiveCount()I[deprecated]
-#getReceiveCountLong()J[deprecated]
-#getReceiveErrorCount()I[deprecated]
-#getReceiveErrorCountLong()J[deprecated]

+###org/springframework/integration/channel/DefaultHeaderChannelRegistry
@3.0.0.RELEASE
+#<init>()V
+#<init>(J)V
+#setReaperDelay(J)V
+#getReaperDelay()J
+#setTaskScheduler(Lorg/springframework/scheduling/TaskScheduler;)V
+#getPhase()I
+#setPhase(I)V
+#isAutoStartup()Z
+#setAutoStartup(Z)V
+#size()I
+#start()V
+#stop()V
+#stop(Ljava/lang/Runnable;)V
+#isRunning()Z
+#channelToChannelName(Ljava/lang/Object;)Ljava/lang/Object;
+#channelNameToChannel(Ljava/lang/String;)Lorg/springframework/integration/MessageChannel;
+#runReaper()V
+#run()V
@3.0.6.RELEASE
*#getPhase()I[deprecated]
*#setPhase(I)V[deprecated]
*#isAutoStartup()Z[deprecated]
*#setAutoStartup(Z)V[deprecated]
@4.0.0.RELEASE
+#channelNameToChannel(Ljava/lang/String;)Lorg/springframework/messaging/MessageChannel;
-#channelNameToChannel(Ljava/lang/String;)Lorg/springframework/integration/MessageChannel;
@4.0.5.RELEASE
*#getPhase()I[deprecated]
*#setPhase(I)V[deprecated]
*#isAutoStartup()Z[deprecated]
*#setAutoStartup(Z)V[deprecated]
@4.1.0.RELEASE
+#setRemoveOnGet(Z)V
+#channelToChannelName(Ljava/lang/Object;J)Ljava/lang/Object;
@4.2.0.RELEASE
-#getPhase()I[deprecated]
-#setPhase(I)V[deprecated]
-#isAutoStartup()Z[deprecated]
-#setAutoStartup(Z)V[deprecated]
@5.1.3.RELEASE
-#setTaskScheduler(Lorg/springframework/scheduling/TaskScheduler;)V

+###org/springframework/integration/channel/AbstractMessageChannel
@1.0.1.RELEASE
+#<init>()V
+#setBeanName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setInterceptors(Ljava/util/List;)V
+#addInterceptor(Lorg/springframework/integration/channel/ChannelInterceptor;)V
+#send(Lorg/springframework/integration/core/Message;)Z
+#send(Lorg/springframework/integration/core/Message;J)Z
+#toString()Ljava/lang/String;
@2.0.0.RELEASE
+#getComponentType()Ljava/lang/String;
+#setShouldTrack(Z)V
+#setDatatypes([Ljava/lang/Class;)V
+#setConversionService(Lorg/springframework/core/convert/ConversionService;)V
+#send(Lorg/springframework/integration/Message;)Z
+#send(Lorg/springframework/integration/Message;J)Z
-#setBeanName(Ljava/lang/String;)V
-#getName()Ljava/lang/String;
-#send(Lorg/springframework/integration/core/Message;)Z
-#send(Lorg/springframework/integration/core/Message;J)Z
-#toString()Ljava/lang/String;
@3.0.0.RELEASE
+#getFullChannelName()Ljava/lang/String;
@4.0.0.RELEASE
+#addInterceptor(Lorg/springframework/messaging/support/ChannelInterceptor;)V
+#addInterceptor(ILorg/springframework/messaging/support/ChannelInterceptor;)V
*#setConversionService(Lorg/springframework/core/convert/ConversionService;)V[deprecated]
+#setMessageConverter(Lorg/springframework/messaging/converter/MessageConverter;)V
+#getChannelInterceptors()Ljava/util/List;
+#send(Lorg/springframework/messaging/Message;)Z
+#send(Lorg/springframework/messaging/Message;J)Z
-#addInterceptor(Lorg/springframework/integration/channel/ChannelInterceptor;)V
-#send(Lorg/springframework/integration/Message;)Z
-#send(Lorg/springframework/integration/Message;J)Z
@4.1.0.RELEASE
+#removeInterceptor(Lorg/springframework/messaging/support/ChannelInterceptor;)Z
+#removeInterceptor(I)Lorg/springframework/messaging/support/ChannelInterceptor;
@4.2.0.RELEASE
+#setCountsEnabled(Z)V
+#isCountsEnabled()Z
+#setStatsEnabled(Z)V
+#isStatsEnabled()Z
+#isLoggingEnabled()Z
+#setLoggingEnabled(Z)V
+#configureMetrics(Lorg/springframework/integration/support/management/AbstractMessageChannelMetrics;)V
+#reset()V
+#getSendCount()I
+#getSendCountLong()J
+#getSendErrorCount()I
+#getSendErrorCountLong()J
+#getTimeSinceLastSend()D
+#getMeanSendRate()D
+#getMeanErrorRate()D
+#getMeanErrorRatio()D
+#getMeanSendDuration()D
+#getMinSendDuration()D
+#getMaxSendDuration()D
+#getStandardDeviationSendDuration()D
+#getSendDuration()Lorg/springframework/integration/support/management/Statistics;
+#getSendRate()Lorg/springframework/integration/support/management/Statistics;
+#getErrorRate()Lorg/springframework/integration/support/management/Statistics;
+#configureMetrics(Lorg/springframework/integration/support/management/ConfigurableMetrics;)V
@4.3.0.RELEASE
-#setConversionService(Lorg/springframework/core/convert/ConversionService;)V[deprecated]
@5.0.0.RELEASE
+#getOverrides()Lorg/springframework/integration/support/management/IntegrationManagement$ManagementOverrides;
@5.0.3.RELEASE
+#registerMeterRegistry(Lio/micrometer/core/instrument/MeterRegistry;)V
@5.0.4.RELEASE
+#registerMetricsCaptor(Lorg/springframework/integration/support/management/MetricsCaptor;)V
-#registerMeterRegistry(Lio/micrometer/core/instrument/MeterRegistry;)V
@5.1.0.RELEASE
+#registerMetricsCaptor(Lorg/springframework/integration/support/management/metrics/MetricsCaptor;)V
+#destroy()V
-#registerMetricsCaptor(Lorg/springframework/integration/support/management/MetricsCaptor;)V
@5.2.0.RELEASE
+#getInterceptors()Ljava/util/List;
-#getChannelInterceptors()Ljava/util/List;
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;
*#configureMetrics(Lorg/springframework/integration/support/management/AbstractMessageChannelMetrics;)V[deprecated]
*#reset()V[deprecated]
*#getSendCount()I[deprecated]
*#getSendCountLong()J[deprecated]
*#getSendErrorCount()I[deprecated]
*#getSendErrorCountLong()J[deprecated]
*#getTimeSinceLastSend()D[deprecated]
*#getMeanSendRate()D[deprecated]
*#getMeanErrorRate()D[deprecated]
*#getMeanErrorRatio()D[deprecated]
*#getMeanSendDuration()D[deprecated]
*#getMinSendDuration()D[deprecated]
*#getMaxSendDuration()D[deprecated]
*#getStandardDeviationSendDuration()D[deprecated]
*#getSendDuration()Lorg/springframework/integration/support/management/Statistics;[deprecated]
*#getSendRate()Lorg/springframework/integration/support/management/Statistics;[deprecated]
*#getErrorRate()Lorg/springframework/integration/support/management/Statistics;[deprecated]
*#configureMetrics(Lorg/springframework/integration/support/management/ConfigurableMetrics;)V[deprecated]
@5.4.0
-#setCountsEnabled(Z)V
-#isCountsEnabled()Z
-#setStatsEnabled(Z)V
-#isStatsEnabled()Z
-#configureMetrics(Lorg/springframework/integration/support/management/AbstractMessageChannelMetrics;)V[deprecated]
-#reset()V[deprecated]
-#getSendCount()I[deprecated]
-#getSendCountLong()J[deprecated]
-#getSendErrorCount()I[deprecated]
-#getSendErrorCountLong()J[deprecated]
-#getTimeSinceLastSend()D[deprecated]
-#getMeanSendRate()D[deprecated]
-#getMeanErrorRate()D[deprecated]
-#getMeanErrorRatio()D[deprecated]
-#getMeanSendDuration()D[deprecated]
-#getMinSendDuration()D[deprecated]
-#getMaxSendDuration()D[deprecated]
-#getStandardDeviationSendDuration()D[deprecated]
-#getSendDuration()Lorg/springframework/integration/support/management/Statistics;[deprecated]
-#getSendRate()Lorg/springframework/integration/support/management/Statistics;[deprecated]
-#getErrorRate()Lorg/springframework/integration/support/management/Statistics;[deprecated]
-#configureMetrics(Lorg/springframework/integration/support/management/ConfigurableMetrics;)V[deprecated]
@6.0.0
+#setObservationConvention(Lorg/springframework/integration/support/management/observation/MessageSenderObservationConvention;)V
+#registerObservationRegistry(Lio/micrometer/observation/ObservationRegistry;)V
@6.0.1
+#isObserved()Z

+###org/springframework/integration/channel/ChannelPurger
@1.0.1.RELEASE
+#<init>([Lorg/springframework/integration/channel/PollableChannel;)V
+#<init>(Lorg/springframework/integration/selector/MessageSelector;[Lorg/springframework/integration/channel/PollableChannel;)V
+#purge()Ljava/util/List;
@2.0.0.RELEASE
+#<init>([Lorg/springframework/integration/channel/QueueChannel;)V
+#<init>(Lorg/springframework/integration/core/MessageSelector;[Lorg/springframework/integration/channel/QueueChannel;)V
-#<init>([Lorg/springframework/integration/channel/PollableChannel;)V
-#<init>(Lorg/springframework/integration/selector/MessageSelector;[Lorg/springframework/integration/channel/PollableChannel;)V

+###org/springframework/integration/channel/interceptor/MessageSelectingInterceptor
@1.0.1.RELEASE
+#<init>([Lorg/springframework/integration/selector/MessageSelector;)V
+#preSend(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;)Lorg/springframework/integration/core/Message;
@2.0.0.RELEASE
+#<init>([Lorg/springframework/integration/core/MessageSelector;)V
+#preSend(Lorg/springframework/integration/Message;Lorg/springframework/integration/MessageChannel;)Lorg/springframework/integration/Message;
-#<init>([Lorg/springframework/integration/selector/MessageSelector;)V
-#preSend(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;)Lorg/springframework/integration/core/Message;
@4.0.0.RELEASE
+#preSend(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/messaging/Message;
-#preSend(Lorg/springframework/integration/Message;Lorg/springframework/integration/MessageChannel;)Lorg/springframework/integration/Message;

+###org/springframework/integration/channel/interceptor/WireTap
@1.0.1.RELEASE
+#<init>(Lorg/springframework/integration/core/MessageChannel;)V
+#<init>(Lorg/springframework/integration/core/MessageChannel;Lorg/springframework/integration/selector/MessageSelector;)V
+#setTimeout(J)V
+#isRunning()Z
+#start()V
+#stop()V
+#preSend(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;)Lorg/springframework/integration/core/Message;
@2.0.0.RELEASE
+#<init>(Lorg/springframework/integration/MessageChannel;)V
+#<init>(Lorg/springframework/integration/MessageChannel;Lorg/springframework/integration/core/MessageSelector;)V
+#preSend(Lorg/springframework/integration/Message;Lorg/springframework/integration/MessageChannel;)Lorg/springframework/integration/Message;
-#<init>(Lorg/springframework/integration/core/MessageChannel;)V
-#<init>(Lorg/springframework/integration/core/MessageChannel;Lorg/springframework/integration/selector/MessageSelector;)V
-#preSend(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;)Lorg/springframework/integration/core/Message;
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/MessageChannel;)V
+#<init>(Lorg/springframework/messaging/MessageChannel;Lorg/springframework/integration/core/MessageSelector;)V
+#preSend(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/messaging/Message;
+#shouldIntercept(Ljava/lang/String;Lorg/springframework/integration/channel/ChannelInterceptorAware;)Z
-#<init>(Lorg/springframework/integration/MessageChannel;)V
-#<init>(Lorg/springframework/integration/MessageChannel;Lorg/springframework/integration/core/MessageSelector;)V
-#preSend(Lorg/springframework/integration/Message;Lorg/springframework/integration/MessageChannel;)Lorg/springframework/integration/Message;
@4.3.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/springframework/integration/core/MessageSelector;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@5.2.0.RELEASE
+#shouldIntercept(Ljava/lang/String;Lorg/springframework/messaging/support/InterceptableChannel;)Z
-#shouldIntercept(Ljava/lang/String;Lorg/springframework/integration/channel/ChannelInterceptorAware;)Z

+###org/springframework/integration/channel/interceptor/ThreadStatePropagationChannelInterceptor
@4.2.0.RELEASE
+#<init>()V
+#preSend(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/messaging/Message;
+#postReceive(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/messaging/Message;
+#beforeHandle(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/MessageHandler;)Lorg/springframework/messaging/Message;
+#afterMessageHandled(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/MessageHandler;Ljava/lang/Exception;)V
@6.0.0
-#afterMessageHandled(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/MessageHandler;Ljava/lang/Exception;)V

+###org/springframework/integration/channel/interceptor/GlobalChannelInterceptorWrapper
@2.0.0.RELEASE
+#<init>(Lorg/springframework/integration/channel/ChannelInterceptor;)V
+#getChannelInterceptor()Lorg/springframework/integration/channel/ChannelInterceptor;
+#setOrder(I)V
+#getOrder()I
+#setPatterns([Ljava/lang/String;)V
+#getPatterns()[Ljava/lang/String;
+#toString()Ljava/lang/String;
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/support/ChannelInterceptor;)V
+#getChannelInterceptor()Lorg/springframework/messaging/support/ChannelInterceptor;
-#<init>(Lorg/springframework/integration/channel/ChannelInterceptor;)V
-#getChannelInterceptor()Lorg/springframework/integration/channel/ChannelInterceptor;

+###org/springframework/integration/channel/interceptor/VetoCapableInterceptor
@4.0.0.RELEASE
+#shouldIntercept(Ljava/lang/String;Lorg/springframework/integration/channel/ChannelInterceptorAware;)Z
@5.2.0.RELEASE
+#shouldIntercept(Ljava/lang/String;Lorg/springframework/messaging/support/InterceptableChannel;)Z
-#shouldIntercept(Ljava/lang/String;Lorg/springframework/integration/channel/ChannelInterceptorAware;)Z

+###org/springframework/integration/channel/ReactiveStreamsSubscribableChannel
@5.0.0.RELEASE
+#subscribeTo(Lorg/reactivestreams/Publisher;)V
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/channel/MessageChannelReactiveUtils
@5.0.0.RELEASE
+#toPublisher(Lorg/springframework/messaging/MessageChannel;)Lorg/reactivestreams/Publisher;
@6.0.0
-###org/springframework/integration/channel/MessageChannelReactiveUtils

+###org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList
@1.0.1.RELEASE
+#set(Ljava/util/List;)Z
+#add(Lorg/springframework/integration/channel/ChannelInterceptor;)Z
+#preSend(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;)Lorg/springframework/integration/core/Message;
+#postSend(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;Z)V
+#preReceive(Lorg/springframework/integration/core/MessageChannel;)Z
+#postReceive(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;)Lorg/springframework/integration/core/Message;
@2.0.0.RELEASE
+#preSend(Lorg/springframework/integration/Message;Lorg/springframework/integration/MessageChannel;)Lorg/springframework/integration/Message;
+#postSend(Lorg/springframework/integration/Message;Lorg/springframework/integration/MessageChannel;Z)V
+#preReceive(Lorg/springframework/integration/MessageChannel;)Z
+#postReceive(Lorg/springframework/integration/Message;Lorg/springframework/integration/MessageChannel;)Lorg/springframework/integration/Message;
-#preSend(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;)Lorg/springframework/integration/core/Message;
-#postSend(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;Z)V
-#preReceive(Lorg/springframework/integration/core/MessageChannel;)Z
-#postReceive(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;)Lorg/springframework/integration/core/Message;
@4.0.0.RELEASE
+#add(Lorg/springframework/messaging/support/ChannelInterceptor;)Z
+#add(ILorg/springframework/messaging/support/ChannelInterceptor;)V
+#preSend(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/messaging/Message;
+#postSend(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;Z)V
+#preReceive(Lorg/springframework/messaging/MessageChannel;)Z
+#postReceive(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/messaging/Message;
+#getInterceptors()Ljava/util/List;
-#add(Lorg/springframework/integration/channel/ChannelInterceptor;)Z
-#preSend(Lorg/springframework/integration/Message;Lorg/springframework/integration/MessageChannel;)Lorg/springframework/integration/Message;
-#postSend(Lorg/springframework/integration/Message;Lorg/springframework/integration/MessageChannel;Z)V
-#preReceive(Lorg/springframework/integration/MessageChannel;)Z
-#postReceive(Lorg/springframework/integration/Message;Lorg/springframework/integration/MessageChannel;)Lorg/springframework/integration/Message;
@4.1.0.RELEASE
+#preSend(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;Ljava/util/Deque;)Lorg/springframework/messaging/Message;
+#afterSendCompletion(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;ZLjava/lang/Exception;Ljava/util/Deque;)V
+#preReceive(Lorg/springframework/messaging/MessageChannel;Ljava/util/Deque;)Z
+#afterReceiveCompletion(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;Ljava/lang/Exception;Ljava/util/Deque;)V
+#remove(Lorg/springframework/messaging/support/ChannelInterceptor;)Z
+#remove(I)Lorg/springframework/messaging/support/ChannelInterceptor;
-#preSend(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/messaging/Message;
-#preReceive(Lorg/springframework/messaging/MessageChannel;)Z
@4.1.3.RELEASE
+#<init>(Lorg/apache/commons/logging/Log;)V
@4.1.5.RELEASE
+#getSize()I
@5.4.0
+#<init>(Lorg/springframework/core/log/LogAccessor;)V
-#<init>(Lorg/apache/commons/logging/Log;)V

+###org/springframework/integration/channel/AbstractSubscribableChannel
@1.0.1.RELEASE
+#<init>(Lorg/springframework/integration/dispatcher/MessageDispatcher;)V
+#subscribe(Lorg/springframework/integration/message/MessageHandler;)Z
+#unsubscribe(Lorg/springframework/integration/message/MessageHandler;)Z
@1.0.3.RELEASE
+#<init>()V
-#<init>(Lorg/springframework/integration/dispatcher/MessageDispatcher;)V
@2.0.0.RELEASE
+#subscribe(Lorg/springframework/integration/core/MessageHandler;)Z
+#unsubscribe(Lorg/springframework/integration/core/MessageHandler;)Z
-#subscribe(Lorg/springframework/integration/message/MessageHandler;)Z
-#unsubscribe(Lorg/springframework/integration/message/MessageHandler;)Z
@4.0.0.RELEASE
+#subscribe(Lorg/springframework/messaging/MessageHandler;)Z
+#unsubscribe(Lorg/springframework/messaging/MessageHandler;)Z
-#subscribe(Lorg/springframework/integration/core/MessageHandler;)Z
-#unsubscribe(Lorg/springframework/integration/core/MessageHandler;)Z
@4.3.6.RELEASE
+#getSubscriberCount()I

+###org/springframework/integration/channel/DirectChannel
@1.0.1.RELEASE
+#<init>()V
@1.0.2.RELEASE
+#<init>(Lorg/springframework/integration/dispatcher/AbstractUnicastDispatcher;)V
@1.0.3.RELEASE
+#<init>(Lorg/springframework/integration/dispatcher/LoadBalancingStrategy;)V
+#setFailover(Z)V
-#<init>(Lorg/springframework/integration/dispatcher/AbstractUnicastDispatcher;)V
@2.2.0.RELEASE
+#setMaxSubscribers(I)V

+###org/springframework/integration/channel/RendezvousChannel
@1.0.1.RELEASE
+#<init>()V

+###org/springframework/integration/channel/ExecutorChannel
@1.0.3.RELEASE
+#<init>(Lorg/springframework/core/task/TaskExecutor;)V
+#<init>(Lorg/springframework/core/task/TaskExecutor;Lorg/springframework/integration/dispatcher/LoadBalancingStrategy;)V
+#setFailover(Z)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@2.0.0.RELEASE
+#<init>(Ljava/util/concurrent/Executor;)V
+#<init>(Ljava/util/concurrent/Executor;Lorg/springframework/integration/dispatcher/LoadBalancingStrategy;)V
+#onInit()V
-#<init>(Lorg/springframework/core/task/TaskExecutor;)V
-#<init>(Lorg/springframework/core/task/TaskExecutor;Lorg/springframework/integration/dispatcher/LoadBalancingStrategy;)V
-#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@2.2.0.RELEASE
+#setMaxSubscribers(I)V
@4.2.0.RELEASE
-#setMaxSubscribers(I)V

+###org/springframework/integration/channel/ExecutorChannelInterceptorAware
@4.2.0.RELEASE
+#hasExecutorInterceptors()Z

+###org/springframework/integration/channel/MessagePublishingErrorHandler
@1.0.1.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/integration/channel/ChannelResolver;)V
+#setDefaultErrorChannel(Lorg/springframework/integration/core/MessageChannel;)V
+#setSendTimeout(J)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#handle(Ljava/lang/Throwable;)V
@2.0.0.RELEASE
+#<init>(Lorg/springframework/integration/support/channel/ChannelResolver;)V
+#setDefaultErrorChannel(Lorg/springframework/integration/MessageChannel;)V
+#handleError(Ljava/lang/Throwable;)V
-#<init>(Lorg/springframework/integration/channel/ChannelResolver;)V
-#setDefaultErrorChannel(Lorg/springframework/integration/core/MessageChannel;)V
-#handle(Ljava/lang/Throwable;)V
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/core/DestinationResolver;)V
+#setDefaultErrorChannel(Lorg/springframework/messaging/MessageChannel;)V
-#<init>(Lorg/springframework/integration/support/channel/ChannelResolver;)V
-#setDefaultErrorChannel(Lorg/springframework/integration/MessageChannel;)V
@4.3.0.RELEASE
+#getDefaultErrorChannel()Lorg/springframework/messaging/MessageChannel;
@4.3.4.RELEASE
+#setDefaultErrorChannelName(Ljava/lang/String;)V
@5.0.0.RELEASE
-#setSendTimeout(J)V
-#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V

+###org/springframework/integration/channel/QueueChannel
@1.0.1.RELEASE
+#<init>(Ljava/util/concurrent/BlockingQueue;)V
+#<init>(I)V
+#<init>()V
+#clear()Ljava/util/List;
+#purge(Lorg/springframework/integration/selector/MessageSelector;)Ljava/util/List;
+#getMesssageCount()I
+#getRemainingCapacity()I
@1.0.4.RELEASE
+#getMessageCount()I
-#getMesssageCount()I
@2.0.0.RELEASE
+#purge(Lorg/springframework/integration/core/MessageSelector;)Ljava/util/List;
+#getQueueSize()I
-#purge(Lorg/springframework/integration/selector/MessageSelector;)Ljava/util/List;
-#getMessageCount()I
@4.1.0.RELEASE
+#<init>(Ljava/util/Queue;)V
-#<init>(Ljava/util/concurrent/BlockingQueue;)V
@5.1.13.RELEASE
+#registerMetricsCaptor(Lorg/springframework/integration/support/management/metrics/MetricsCaptor;)V
+#destroy()V
@5.2.0.RELEASE
-#registerMetricsCaptor(Lorg/springframework/integration/support/management/metrics/MetricsCaptor;)V
-#destroy()V
@5.2.9.RELEASE
+#registerMetricsCaptor(Lorg/springframework/integration/support/management/metrics/MetricsCaptor;)V
+#destroy()V
@5.3.0.RELEASE
-#registerMetricsCaptor(Lorg/springframework/integration/support/management/metrics/MetricsCaptor;)V
-#destroy()V
@5.3.3.RELEASE
+#registerMetricsCaptor(Lorg/springframework/integration/support/management/metrics/MetricsCaptor;)V
+#destroy()V

+###org/springframework/integration/channel/ChannelInterceptorAware
@4.0.0.RELEASE
+#setInterceptors(Ljava/util/List;)V
+#addInterceptor(Lorg/springframework/messaging/support/ChannelInterceptor;)V
+#addInterceptor(ILorg/springframework/messaging/support/ChannelInterceptor;)V
+#getChannelInterceptors()Ljava/util/List;
@4.1.0.RELEASE
+#removeInterceptor(Lorg/springframework/messaging/support/ChannelInterceptor;)Z
+#removeInterceptor(I)Lorg/springframework/messaging/support/ChannelInterceptor;
@5.2.0.RELEASE
-#setInterceptors(Ljava/util/List;)V
-#addInterceptor(Lorg/springframework/messaging/support/ChannelInterceptor;)V
-#addInterceptor(ILorg/springframework/messaging/support/ChannelInterceptor;)V
-#removeInterceptor(Lorg/springframework/messaging/support/ChannelInterceptor;)Z
-#removeInterceptor(I)Lorg/springframework/messaging/support/ChannelInterceptor;
@5.3.0.RELEASE
-###org/springframework/integration/channel/ChannelInterceptorAware

+###org/springframework/integration/channel/FixedSubscriberChannel
@4.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/messaging/MessageHandler;)V
+#setBeanName(Ljava/lang/String;)V
+#send(Lorg/springframework/messaging/Message;)Z
+#send(Lorg/springframework/messaging/Message;J)Z
+#subscribe(Lorg/springframework/messaging/MessageHandler;)Z
+#unsubscribe(Lorg/springframework/messaging/MessageHandler;)Z
+#getComponentType()Ljava/lang/String;
+#getComponentName()Ljava/lang/String;
@5.1.3.RELEASE
+#getBeanName()Ljava/lang/String;

+###org/springframework/integration/channel/QueueChannelOperations
@3.0.0.RELEASE
+#clear()Ljava/util/List;
+#purge(Lorg/springframework/integration/core/MessageSelector;)Ljava/util/List;
+#getQueueSize()I
+#getRemainingCapacity()I

+###org/springframework/integration/channel/FluxMessageChannel
@5.0.0.RELEASE
+#<init>()V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#subscribeTo(Lorg/reactivestreams/Publisher;)V
@5.2.2.RELEASE
+#destroy()V

+###org/springframework/integration/routingslip/ExpressionEvaluatingRoutingSlipRouteStrategy
@4.1.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/expression/Expression;)V
+#setIntegrationEvaluationContext(Lorg/springframework/expression/EvaluationContext;)V
+#getNextPath(Lorg/springframework/messaging/Message;Ljava/lang/Object;)Ljava/lang/Object;
+#toString()Ljava/lang/String;
@4.2.0.RELEASE
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#afterPropertiesSet()V

+###org/springframework/integration/routingslip/RoutingSlipRouteStrategy
@4.1.0.RELEASE
+#getNextPath(Lorg/springframework/messaging/Message;Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/integration/routingslip/ExpressionEvaluatingRoutingSlipRouteStrategy$RequestAndReply
@4.1.0.RELEASE
+#getRequest()Lorg/springframework/messaging/Message;
+#getReply()Ljava/lang/Object;

+###org/springframework/integration/filter/MethodInvokingSelector
@1.0.1.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#accept(Lorg/springframework/integration/core/Message;)Z
@2.0.0.RELEASE
+#<init>(Ljava/lang/Object;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
-#accept(Lorg/springframework/integration/core/Message;)Z
@4.1.0.RELEASE
-#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V

+###org/springframework/integration/filter/ExpressionEvaluatingSelector
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/expression/Expression;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@4.1.0.RELEASE
+#getExpressionString()Ljava/lang/String;
+#toString()Ljava/lang/String;
-#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V

+###org/springframework/integration/filter/AbstractMessageProcessingSelector
@4.1.0.RELEASE
+#<init>(Lorg/springframework/integration/handler/MessageProcessor;)V
+#setConversionService(Lorg/springframework/core/convert/ConversionService;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#accept(Lorg/springframework/messaging/Message;)Z
+#accept(Ljava/lang/Object;)Z
@4.2.0.RELEASE
+#start()V
+#stop()V
+#isRunning()Z

+###org/springframework/integration/filter/MessageFilter
@1.0.1.RELEASE
+#<init>(Lorg/springframework/integration/selector/MessageSelector;)V
+#setThrowExceptionOnRejection(Z)V
@1.0.3.RELEASE
+#setDiscardChannel(Lorg/springframework/integration/core/MessageChannel;)V
@2.0.0.RELEASE
+#<init>(Lorg/springframework/integration/core/MessageSelector;)V
+#setDiscardChannel(Lorg/springframework/integration/MessageChannel;)V
+#getComponentType()Ljava/lang/String;
+#onInit()V
-#<init>(Lorg/springframework/integration/selector/MessageSelector;)V
-#setDiscardChannel(Lorg/springframework/integration/core/MessageChannel;)V
@3.0.0.RELEASE
+#setDiscardWithinAdvice(Z)V
+#postProcess(Lorg/springframework/integration/Message;Ljava/lang/Object;)Ljava/lang/Object;
-#onInit()V
@4.0.0.RELEASE
+#setDiscardChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setDiscardChannelName(Ljava/lang/String;)V
+#postProcess(Lorg/springframework/messaging/Message;Ljava/lang/Object;)Ljava/lang/Object;
-#setDiscardChannel(Lorg/springframework/integration/MessageChannel;)V
-#postProcess(Lorg/springframework/integration/Message;Ljava/lang/Object;)Ljava/lang/Object;
@4.2.0.RELEASE
+#start()V
+#stop()V
+#isRunning()Z
@4.3.0.RELEASE
+#getDiscardChannel()Lorg/springframework/messaging/MessageChannel;
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/handler/GenericHandler
@5.0.0.RELEASE
+#handle(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Object;
@5.1.0.RELEASE
+#handle(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Ljava/lang/Object;
-#handle(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Object;
@6.0.0
-###org/springframework/integration/handler/GenericHandler

+###org/springframework/integration/handler/PostProcessingMessageHandler
@3.0.0.RELEASE
+#postProcess(Lorg/springframework/integration/Message;Ljava/lang/Object;)Ljava/lang/Object;
@4.0.0.RELEASE
+#postProcess(Lorg/springframework/messaging/Message;Ljava/lang/Object;)Ljava/lang/Object;
-#postProcess(Lorg/springframework/integration/Message;Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/integration/handler/ReplyRequiredException
@2.1.0.RELEASE
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;)V
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;)V
-#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;)V
@4.3.0.RELEASE
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/integration/handler/LoggingHandler
@1.0.1.RELEASE
+#<init>(Ljava/lang/String;)V
@1.0.3.RELEASE
+#setShouldLogFullMessage(Z)V
@2.0.0.RELEASE
+#setExpression(Ljava/lang/String;)V
+#getComponentType()Ljava/lang/String;
@2.0.6.RELEASE
+#setLoggerName(Ljava/lang/String;)V
@3.0.0.RELEASE
+#getLevel()Lorg/springframework/integration/handler/LoggingHandler$Level;
+#setLevel(Lorg/springframework/integration/handler/LoggingHandler$Level;)V
@4.3.0.RELEASE
+#<init>(Lorg/springframework/integration/handler/LoggingHandler$Level;)V
*#setExpression(Ljava/lang/String;)V[deprecated]
+#setLogExpressionString(Ljava/lang/String;)V
+#setLogExpression(Lorg/springframework/expression/Expression;)V
@5.0.0.RELEASE
-#setExpression(Ljava/lang/String;)V[deprecated]

+###org/springframework/integration/handler/support/PayloadsArgumentResolver
@5.0.0.RELEASE
+#<init>()V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Ljava/lang/Object;

+###org/springframework/integration/handler/support/HandlerMethodArgumentResolversHolder
@5.1.0.RELEASE
+#<init>(Ljava/util/List;)V
+#getResolvers()Ljava/util/List;
+#addResolver(Lorg/springframework/messaging/handler/invocation/HandlerMethodArgumentResolver;)V
+#removeResolver(Lorg/springframework/messaging/handler/invocation/HandlerMethodArgumentResolver;)Z
@5.2.0.RELEASE
-###org/springframework/integration/handler/support/HandlerMethodArgumentResolversHolder

+###org/springframework/integration/handler/support/PayloadExpressionArgumentResolver
@5.0.0.RELEASE
+#<init>()V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Ljava/lang/Object;

+###org/springframework/integration/handler/support/MessagingMethodInvokerHelper
@5.1.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;Ljava/lang/Class;Z)V
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;Z)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;Z)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;Z)V
+#<init>(Ljava/lang/Object;Ljava/lang/Class;Z)V
+#<init>(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;Z)V
+#setUseSpelInvoker(Z)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#setConversionService(Lorg/springframework/core/convert/ConversionService;)V
+#process(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
+#process(Ljava/util/Collection;Ljava/util/Map;)Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#start()V
+#stop()V
+#isRunning()Z
@5.2.0.RELEASE
-#setConversionService(Lorg/springframework/core/convert/ConversionService;)V
@6.0.0
+#isAsync()Z

+###org/springframework/integration/handler/support/MapArgumentResolver
@5.0.0.RELEASE
+#<init>()V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Ljava/lang/Object;

+###org/springframework/integration/handler/support/MessagingMethodInvokerHelper$ParametersWrapper
@5.1.0.RELEASE
+#getHeader(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object;
+#getPayload()Ljava/lang/Object;
+#getMessages()Ljava/util/Collection;
+#getHeaders()Ljava/util/Map;
+#getMessage()Lorg/springframework/messaging/Message;
+#getFirstParameterType()Ljava/lang/Class;
+#toString()Ljava/lang/String;

+###org/springframework/integration/handler/support/CollectionArgumentResolver
@5.0.0.RELEASE
+#<init>(Z)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Ljava/lang/Object;

+###org/springframework/integration/handler/ExpressionEvaluatingMessageProcessor
@2.0.0.RELEASE
+#<init>(Lorg/springframework/expression/Expression;)V
+#<init>(Lorg/springframework/expression/Expression;Ljava/lang/Class;)V
+#processMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;
@4.0.0.RELEASE
+#processMessage(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
-#processMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;
@4.1.0.RELEASE
+#toString()Ljava/lang/String;
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Class;)V

+###org/springframework/integration/handler/DelayHandler
@1.0.3.RELEASE
+#<init>(J)V
+#<init>(JLjava/util/concurrent/ScheduledExecutorService;)V
+#setDefaultDelay(J)V
+#setDelayHeaderName(Ljava/lang/String;)V
+#setOutputChannel(Lorg/springframework/integration/core/MessageChannel;)V
+#setSendTimeout(J)V
+#setWaitForTasksToCompleteOnShutdown(Z)V
+#setOrder(I)V
+#getOrder()I
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#handleMessage(Lorg/springframework/integration/core/Message;)V
+#destroy()V
@2.0.0.RELEASE
+#getComponentType()Ljava/lang/String;
+#<init>(JLorg/springframework/scheduling/TaskScheduler;)V
+#setMessageStore(Lorg/springframework/integration/store/MessageStore;)V
+#setOutputChannel(Lorg/springframework/integration/MessageChannel;)V
+#handleMessage(Lorg/springframework/integration/Message;)V
-#<init>(JLjava/util/concurrent/ScheduledExecutorService;)V
-#setOutputChannel(Lorg/springframework/integration/core/MessageChannel;)V
-#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
-#handleMessage(Lorg/springframework/integration/core/Message;)V
@2.2.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/springframework/scheduling/TaskScheduler;)V
+#setMessageStore(Lorg/springframework/integration/store/MessageGroupStore;)V
+#setDelayedAdviceChain(Ljava/util/List;)V
+#getDelayedMessageCount()I
+#reschedulePersistedMessages()V
+#onApplicationEvent(Lorg/springframework/context/event/ContextRefreshedEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
-#<init>(J)V
-#<init>(JLorg/springframework/scheduling/TaskScheduler;)V
-#setMessageStore(Lorg/springframework/integration/store/MessageStore;)V
-#setOutputChannel(Lorg/springframework/integration/MessageChannel;)V
-#setSendTimeout(J)V
-#setWaitForTasksToCompleteOnShutdown(Z)V
-#setOrder(I)V
-#getOrder()I
-#handleMessage(Lorg/springframework/integration/Message;)V
-#destroy()V
@3.0.0.RELEASE
*#setDelayHeaderName(Ljava/lang/String;)V[deprecated]
+#setDelayExpression(Lorg/springframework/expression/Expression;)V
+#setIgnoreExpressionFailures(Z)V
@4.3.0.RELEASE
-#setDelayHeaderName(Ljava/lang/String;)V[deprecated]
@5.0.0.RELEASE
+#setDelayExpressionString(Ljava/lang/String;)V
@5.0.8.RELEASE
+#setDelayedMessageErrorChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setDelayedMessageErrorChannelName(Ljava/lang/String;)V
+#setMaxAttempts(I)V
+#setRetryDelay(J)V
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/handler/ReplyProducingMessageHandlerWrapper
@5.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/MessageHandler;)V
+#start()V
+#stop()V
+#isRunning()Z
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/handler/DelayHandlerManagement
@2.2.0.RELEASE
+#getDelayedMessageCount()I
+#reschedulePersistedMessages()V

+###org/springframework/integration/handler/AbstractReplyProducingPostProcessingMessageHandler
@3.0.0.RELEASE
+#<init>()V
+#setPostProcessWithinAdvice(Z)V

+###org/springframework/integration/handler/ExpressionEvaluatingMessageHandler
@2.1.0.RELEASE
+#<init>(Lorg/springframework/expression/Expression;)V
+#setComponentType(Ljava/lang/String;)V
+#getComponentType()Ljava/lang/String;

+###org/springframework/integration/handler/AbstractMessageProcessor
@2.0.0.RELEASE
+#<init>()V
+#processMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;
@4.0.0.RELEASE
+#processMessage(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
-#processMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;

+###org/springframework/integration/handler/MethodInvokingMessageHandler
@1.0.1.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#handleMessage(Lorg/springframework/integration/core/Message;)V
@1.0.3.RELEASE
+#setOrder(I)V
+#getOrder()I
@2.0.0.RELEASE
+#handleMessage(Lorg/springframework/integration/Message;)V
-#handleMessage(Lorg/springframework/integration/core/Message;)V
@2.0.4.RELEASE
+#setComponentType(Ljava/lang/String;)V
+#getComponentType()Ljava/lang/String;
-#setOrder(I)V
-#getOrder()I
-#handleMessage(Lorg/springframework/integration/Message;)V
@4.2.0.RELEASE
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#start()V
+#stop()V
+#isRunning()Z

+###org/springframework/integration/handler/LambdaMessageProcessor
@5.0.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/Class;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#processMessage(Lorg/springframework/messaging/Message;)Ljava/lang/Object;

+###org/springframework/integration/handler/AbstractReplyProducingMessageHandler$RequestHandler
@2.2.0.RELEASE
+#handleRequestMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;
+#toString()Ljava/lang/String;
@4.0.0.RELEASE
+#handleRequestMessage(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
-#handleRequestMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;
@4.3.2.RELEASE
+#getAdvisedHandler()Lorg/springframework/integration/handler/AbstractReplyProducingMessageHandler;
@5.1.0.RELEASE
-#toString()Ljava/lang/String;

+###org/springframework/integration/handler/MessageProcessor
@2.0.0.RELEASE
+#processMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;
@4.0.0.RELEASE
+#processMessage(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
-#processMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;

+###org/springframework/integration/handler/MethodInvokingMessageProcessor
@2.0.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;Z)V
+#<init>(Ljava/lang/Object;Ljava/lang/Class;)V
+#setConversionService(Lorg/springframework/core/convert/ConversionService;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#processMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;
@4.0.0.RELEASE
+#processMessage(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
-#processMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;
@4.2.0.RELEASE
+#start()V
+#stop()V
+#isRunning()Z
@5.0.0.RELEASE
+#setUseSpelInvoker(Z)V
@6.0.0
+#isAsync()Z

+###org/springframework/integration/handler/BeanNameMessageProcessor
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#processMessage(Lorg/springframework/messaging/Message;)Ljava/lang/Object;

+###org/springframework/integration/handler/HeaderPropagationAware
@4.3.11.RELEASE
+#setNotPropagatedHeaders([Ljava/lang/String;)V
+#getNotPropagatedHeaders()Ljava/util/Collection;
+#addNotPropagatedHeaders([Ljava/lang/String;)V

+###org/springframework/integration/handler/ServiceActivatingHandler
@1.0.1.RELEASE
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
@2.0.0.RELEASE
+#<init>(Lorg/springframework/integration/handler/AbstractMessageProcessor;)V
+#getComponentType()Ljava/lang/String;
+#onInit()V
@2.0.6.RELEASE
+#<init>(Lorg/springframework/integration/handler/MessageProcessor;)V
-#<init>(Lorg/springframework/integration/handler/AbstractMessageProcessor;)V
@2.1.0.RELEASE
+#<init>(Lorg/springframework/integration/handler/AbstractMessageProcessor;)V
-#<init>(Lorg/springframework/integration/handler/MessageProcessor;)V
@2.1.1.RELEASE
+#<init>(Lorg/springframework/integration/handler/MessageProcessor;)V
-#<init>(Lorg/springframework/integration/handler/AbstractMessageProcessor;)V
@3.0.0.RELEASE
-#onInit()V
@4.2.0.RELEASE
+#start()V
+#stop()V
+#isRunning()Z
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/handler/advice/HandleMessageAdvice
@4.3.1.RELEASE

+###org/springframework/integration/handler/advice/AbstractRequestHandlerAdvice
@2.2.0.RELEASE
+#<init>()V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;

+###org/springframework/integration/handler/advice/RequestHandlerRetryAdvice
@2.2.0.RELEASE
+#<init>()V
+#setRetryTemplate(Lorg/springframework/retry/support/RetryTemplate;)V
+#setRecoveryCallback(Lorg/springframework/retry/RecoveryCallback;)V
+#setRetryStateGenerator(Lorg/springframework/integration/handler/advice/RetryStateGenerator;)V
+#open(Lorg/springframework/retry/RetryContext;Lorg/springframework/retry/RetryCallback;)Z
+#close(Lorg/springframework/retry/RetryContext;Lorg/springframework/retry/RetryCallback;Ljava/lang/Throwable;)V
+#onError(Lorg/springframework/retry/RetryContext;Lorg/springframework/retry/RetryCallback;Ljava/lang/Throwable;)V

+###org/springframework/integration/handler/advice/RequestHandlerCircuitBreakerAdvice
@2.2.0.RELEASE
+#<init>()V
+#setThreshold(I)V
+#setHalfOpenAfter(J)V

+###org/springframework/integration/handler/advice/ErrorMessageSendingRecoverer
@2.2.0.RELEASE
+#<init>(Lorg/springframework/integration/MessageChannel;)V
+#setSendTimeout(J)V
+#recover(Lorg/springframework/retry/RetryContext;)Ljava/lang/Object;
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/MessageChannel;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
-#<init>(Lorg/springframework/integration/MessageChannel;)V
@4.3.10.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/messaging/MessageChannel;Lorg/springframework/integration/support/ErrorMessageStrategy;)V
-#setSendTimeout(J)V
-#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V

+###org/springframework/integration/handler/advice/AbstractRequestHandlerAdvice$ExecutionCallback
@2.2.0.RELEASE
+#execute()Ljava/lang/Object;
@2.2.1.RELEASE
+#cloneAndExecute()Ljava/lang/Object;

+###org/springframework/integration/handler/advice/IdempotentReceiverInterceptor
@4.1.0.RELEASE
+#<init>(Lorg/springframework/integration/core/MessageSelector;)V
+#setTimeout(J)V
+#setThrowExceptionOnRejection(Z)V
+#setDiscardChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
@4.3.1.RELEASE
-#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
@5.0.1.RELEASE
+#setDiscardChannelName(Ljava/lang/String;)V
+#getComponentType()Ljava/lang/String;
-#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V

+###org/springframework/integration/handler/advice/ExpressionEvaluatingRequestHandlerAdvice$MessageHandlingExpressionEvaluatingAdviceException
@2.2.0.RELEASE
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/Object;)V
+#getEvaluationResult()Ljava/lang/Object;
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/Object;)V
-#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/Object;)V

+###org/springframework/integration/handler/advice/ExpressionEvaluatingRequestHandlerAdvice
@2.2.0.RELEASE
+#<init>()V
+#setOnSuccessExpression(Ljava/lang/String;)V
+#setOnFailureExpression(Ljava/lang/String;)V
+#setSuccessChannel(Lorg/springframework/integration/MessageChannel;)V
+#setFailureChannel(Lorg/springframework/integration/MessageChannel;)V
+#setTrapException(Z)V
+#setReturnFailureExpressionResult(Z)V
+#setPropagateEvaluationFailures(Z)V
@4.0.0.RELEASE
+#setSuccessChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setFailureChannel(Lorg/springframework/messaging/MessageChannel;)V
-#setSuccessChannel(Lorg/springframework/integration/MessageChannel;)V
-#setFailureChannel(Lorg/springframework/integration/MessageChannel;)V
@4.1.0.RELEASE
+#setOnSuccessExpression(Lorg/springframework/expression/Expression;)V
+#setOnFailureExpression(Lorg/springframework/expression/Expression;)V
@4.1.2.RELEASE
+#setExpressionOnSuccess(Lorg/springframework/expression/Expression;)V
+#setExpressionOnFailure(Lorg/springframework/expression/Expression;)V
-#setOnSuccessExpression(Lorg/springframework/expression/Expression;)V
-#setOnFailureExpression(Lorg/springframework/expression/Expression;)V
@4.3.7.RELEASE
*#setOnSuccessExpression(Ljava/lang/String;)V[deprecated]
+#setOnSuccessExpressionString(Ljava/lang/String;)V
*#setOnFailureExpression(Ljava/lang/String;)V[deprecated]
+#setOnFailureExpressionString(Ljava/lang/String;)V
+#setSuccessChannelName(Ljava/lang/String;)V
+#setFailureChannelName(Ljava/lang/String;)V
@5.0.0.RELEASE
+#setOnSuccessExpression(Lorg/springframework/expression/Expression;)V
*#setExpressionOnSuccess(Lorg/springframework/expression/Expression;)V[deprecated]
+#setOnFailureExpression(Lorg/springframework/expression/Expression;)V
*#setExpressionOnFailure(Lorg/springframework/expression/Expression;)V[deprecated]
-#setOnSuccessExpression(Ljava/lang/String;)V[deprecated]
-#setOnFailureExpression(Ljava/lang/String;)V[deprecated]
@5.3.0.RELEASE
-#setExpressionOnSuccess(Lorg/springframework/expression/Expression;)V[deprecated]
-#setExpressionOnFailure(Lorg/springframework/expression/Expression;)V[deprecated]

+###org/springframework/integration/handler/advice/SpelExpressionRetryStateGenerator
@2.2.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#setClassifier(Lorg/springframework/classify/Classifier;)V
+#determineRetryState(Lorg/springframework/integration/Message;)Lorg/springframework/retry/RetryState;
@4.0.0.RELEASE
+#determineRetryState(Lorg/springframework/messaging/Message;)Lorg/springframework/retry/RetryState;
-#determineRetryState(Lorg/springframework/integration/Message;)Lorg/springframework/retry/RetryState;

+###org/springframework/integration/handler/advice/AbstractHandleMessageAdvice
@4.3.1.RELEASE
+#<init>()V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;

+###org/springframework/integration/handler/advice/ErrorMessageSendingRecoverer$RetryExceptionNotAvailableException
@2.2.0.RELEASE
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;)V
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;)V
-#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;)V

+###org/springframework/integration/handler/advice/RequestHandlerCircuitBreakerAdvice$CircuitBreakerOpenException
@4.3.0.RELEASE
@5.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;)V

+###org/springframework/integration/handler/advice/RetryStateGenerator
@2.2.0.RELEASE
+#determineRetryState(Lorg/springframework/integration/Message;)Lorg/springframework/retry/RetryState;
@4.0.0.RELEASE
+#determineRetryState(Lorg/springframework/messaging/Message;)Lorg/springframework/retry/RetryState;
-#determineRetryState(Lorg/springframework/integration/Message;)Lorg/springframework/retry/RetryState;

+###org/springframework/integration/handler/BridgeHandler
@1.0.1.RELEASE
+#<init>()V
@1.0.2.RELEASE
+#afterPropertiesSet()V
@1.0.3.RELEASE
-#afterPropertiesSet()V
@2.0.0.RELEASE
+#getComponentType()Ljava/lang/String;
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/handler/MessageTriggerAction
@4.2.0.RELEASE
+#trigger(Lorg/springframework/messaging/Message;)V

+###org/springframework/integration/handler/AbstractMessageProducingHandler
@4.1.0.RELEASE
+#<init>()V
+#setSendTimeout(J)V
+#setOutputChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setOutputChannelName(Ljava/lang/String;)V
+#setChannelResolver(Lorg/springframework/messaging/core/DestinationResolver;)V
+#getOutputChannel()Lorg/springframework/messaging/MessageChannel;
@4.1.3.RELEASE
-#setChannelResolver(Lorg/springframework/messaging/core/DestinationResolver;)V
@4.3.0.RELEASE
+#setAsync(Z)V
@4.3.10.RELEASE
+#setNotPropagatedHeaders([Ljava/lang/String;)V
+#getNotPropagatedHeaders()Ljava/util/Collection;
+#addNotPropagatedHeaders([Ljava/lang/String;)V

+###org/springframework/integration/handler/AbstractReplyProducingMessageHandler
@1.0.1.RELEASE
+#<init>()V
+#setOutputChannel(Lorg/springframework/integration/core/MessageChannel;)V
+#setSendTimeout(J)V
+#setChannelResolver(Lorg/springframework/integration/channel/ChannelResolver;)V
+#setRequiresReply(Z)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@2.0.0.RELEASE
+#setOutputChannel(Lorg/springframework/integration/MessageChannel;)V
+#setChannelResolver(Lorg/springframework/integration/support/channel/ChannelResolver;)V
-#setOutputChannel(Lorg/springframework/integration/core/MessageChannel;)V
-#setChannelResolver(Lorg/springframework/integration/channel/ChannelResolver;)V
-#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@2.2.0.RELEASE
+#setAdviceChain(Ljava/util/List;)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
@4.0.0.RELEASE
+#setOutputChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setOutputChannelName(Ljava/lang/String;)V
+#setChannelResolver(Lorg/springframework/messaging/core/DestinationResolver;)V
-#setOutputChannel(Lorg/springframework/integration/MessageChannel;)V
-#setChannelResolver(Lorg/springframework/integration/support/channel/ChannelResolver;)V
@4.1.0.RELEASE
-#setOutputChannel(Lorg/springframework/messaging/MessageChannel;)V
-#setOutputChannelName(Ljava/lang/String;)V
-#setSendTimeout(J)V
-#setChannelResolver(Lorg/springframework/messaging/core/DestinationResolver;)V
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/handler/LoggingHandler$Level
@3.0.0.RELEASE
+#values()[Lorg/springframework/integration/handler/LoggingHandler$Level;
+#valueOf(Ljava/lang/String;)Lorg/springframework/integration/handler/LoggingHandler$Level;

+###org/springframework/integration/handler/ExpressionCommandMessageProcessor
@2.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/expression/MethodFilter;)V
+#processMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;
@3.0.0.RELEASE
+#<init>(Lorg/springframework/expression/MethodFilter;Lorg/springframework/beans/factory/BeanFactory;)V
@4.0.0.RELEASE
+#processMessage(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
-#processMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;
@5.2.0.RELEASE
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/handler/AbstractMessageHandler
@1.0.1.RELEASE
+#<init>()V
+#handleMessage(Lorg/springframework/integration/core/Message;)V
@1.0.3.RELEASE
+#setOrder(I)V
+#getOrder()I
@2.0.0.RELEASE
+#getComponentType()Ljava/lang/String;
+#setShouldTrack(Z)V
+#handleMessage(Lorg/springframework/integration/Message;)V
-#handleMessage(Lorg/springframework/integration/core/Message;)V
@4.0.0.RELEASE
+#handleMessage(Lorg/springframework/messaging/Message;)V
-#handleMessage(Lorg/springframework/integration/Message;)V
@4.2.0.RELEASE
+#isLoggingEnabled()Z
+#setLoggingEnabled(Z)V
+#configureMetrics(Lorg/springframework/integration/support/management/AbstractMessageHandlerMetrics;)V
+#reset()V
+#getHandleCountLong()J
+#getHandleCount()I
+#getErrorCount()I
+#getErrorCountLong()J
+#getMeanDuration()D
+#getMinDuration()D
+#getMaxDuration()D
+#getStandardDeviationDuration()D
+#getActiveCount()I
+#getActiveCountLong()J
+#getDuration()Lorg/springframework/integration/support/management/Statistics;
+#setStatsEnabled(Z)V
+#isStatsEnabled()Z
+#setCountsEnabled(Z)V
+#isCountsEnabled()Z
+#setManagedName(Ljava/lang/String;)V
+#getManagedName()Ljava/lang/String;
+#setManagedType(Ljava/lang/String;)V
+#getManagedType()Ljava/lang/String;
+#configureMetrics(Lorg/springframework/integration/support/management/ConfigurableMetrics;)V
@5.0.0.RELEASE
+#getOverrides()Lorg/springframework/integration/support/management/IntegrationManagement$ManagementOverrides;
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Lorg/springframework/messaging/Message;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#onNext(Ljava/lang/Object;)V
@5.0.3.RELEASE
+#registerMeterRegistry(Lio/micrometer/core/instrument/MeterRegistry;)V
@5.0.4.RELEASE
+#registerMetricsCaptor(Lorg/springframework/integration/support/management/MetricsCaptor;)V
-#registerMeterRegistry(Lio/micrometer/core/instrument/MeterRegistry;)V
@5.1.0.RELEASE
+#registerMetricsCaptor(Lorg/springframework/integration/support/management/metrics/MetricsCaptor;)V
+#destroy()V
-#registerMetricsCaptor(Lorg/springframework/integration/support/management/MetricsCaptor;)V
@5.3.0.RELEASE
-#isLoggingEnabled()Z
-#setLoggingEnabled(Z)V
-#registerMetricsCaptor(Lorg/springframework/integration/support/management/metrics/MetricsCaptor;)V
-#setOrder(I)V
-#getOrder()I
-#getComponentType()Ljava/lang/String;
-#setShouldTrack(Z)V
-#configureMetrics(Lorg/springframework/integration/support/management/AbstractMessageHandlerMetrics;)V
-#getOverrides()Lorg/springframework/integration/support/management/IntegrationManagement$ManagementOverrides;
-#reset()V
-#getHandleCountLong()J
-#getHandleCount()I
-#getErrorCount()I
-#getErrorCountLong()J
-#getMeanDuration()D
-#getMinDuration()D
-#getMaxDuration()D
-#getStandardDeviationDuration()D
-#getActiveCount()I
-#getActiveCountLong()J
-#getDuration()Lorg/springframework/integration/support/management/Statistics;
-#setStatsEnabled(Z)V
-#isStatsEnabled()Z
-#setCountsEnabled(Z)V
-#isCountsEnabled()Z
-#setManagedName(Ljava/lang/String;)V
-#getManagedName()Ljava/lang/String;
-#setManagedType(Ljava/lang/String;)V
-#getManagedType()Ljava/lang/String;
-#destroy()V
-#configureMetrics(Lorg/springframework/integration/support/management/ConfigurableMetrics;)V
@6.0.0
+#setObservationConvention(Lorg/springframework/integration/support/management/observation/MessageReceiverObservationConvention;)V

+###org/springframework/integration/handler/MessageHandlerChain
@1.0.1.RELEASE
+#<init>()V
+#setHandlers(Ljava/util/List;)V
+#setOutputChannel(Lorg/springframework/integration/core/MessageChannel;)V
+#afterPropertiesSet()V
+#handleMessage(Lorg/springframework/integration/core/Message;)V
@1.0.3.RELEASE
+#setOrder(I)V
+#getOrder()I
@2.0.0.RELEASE
+#setOutputChannel(Lorg/springframework/integration/MessageChannel;)V
+#setSendTimeout(J)V
+#getComponentType()Ljava/lang/String;
-#setOutputChannel(Lorg/springframework/integration/core/MessageChannel;)V
-#afterPropertiesSet()V
-#handleMessage(Lorg/springframework/integration/core/Message;)V
@2.0.4.RELEASE
+#setComponentName(Ljava/lang/String;)V
@2.2.0.RELEASE
+#isAutoStartup()Z
+#getPhase()I
+#isRunning()Z
+#start()V
+#stop()V
+#stop(Ljava/lang/Runnable;)V
+#setAutoStartup(Z)V
+#setPhase(I)V
-#setOrder(I)V
-#getOrder()I
@3.0.0.RELEASE
-#setComponentName(Ljava/lang/String;)V
-#isAutoStartup()Z
-#getPhase()I
-#setAutoStartup(Z)V
-#setPhase(I)V
@4.0.0.RELEASE
+#setOutputChannel(Lorg/springframework/messaging/MessageChannel;)V
-#setOutputChannel(Lorg/springframework/integration/MessageChannel;)V
@4.1.0.RELEASE
-#setOutputChannel(Lorg/springframework/messaging/MessageChannel;)V
-#setSendTimeout(J)V
@4.3.0.RELEASE
+#getHandlers()Ljava/util/List;
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/handler/DelayHandler$DelayedMessageWrapper
@2.2.5.RELEASE
+#getRequestDate()J
+#getOriginal()Lorg/springframework/integration/Message;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@4.0.0.RELEASE
+#getOriginal()Lorg/springframework/messaging/Message;
-#getOriginal()Lorg/springframework/integration/Message;

+###org/springframework/integration/handler/DiscardingMessageHandler
@4.3.0.RELEASE
+#getDiscardChannel()Lorg/springframework/messaging/MessageChannel;

+###org/springframework/integration/handler/CompositeMessageHandler
@4.3.0.RELEASE
+#getHandlers()Ljava/util/List;

+###org/springframework/integration/transformer/PayloadTypeConvertingTransformer
@2.0.0.RELEASE
+#<init>()V
+#setConverter(Lorg/springframework/core/convert/converter/Converter;)V

+###org/springframework/integration/transformer/HeaderFilter
@2.0.0.RELEASE
+#<init>([Ljava/lang/String;)V
+#transform(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
@2.0.5.RELEASE
+#setPatternMatch(Z)V
@4.0.0.RELEASE
+#getComponentType()Ljava/lang/String;
+#transform(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
+#transform(Ljava/lang/Object;)Ljava/lang/Object;
-#transform(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/transformer/support/RoutingSlipHeaderValueMessageProcessor
@4.1.0.RELEASE
+#<init>([Ljava/lang/Object;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#processMessage(Lorg/springframework/messaging/Message;)Ljava/util/Map;
+#processMessage(Lorg/springframework/messaging/Message;)Ljava/lang/Object;

+###org/springframework/integration/transformer/support/HeaderValueMessageProcessor
@3.0.0.RELEASE
+#isOverwrite()Ljava/lang/Boolean;

+###org/springframework/integration/transformer/support/ExpressionEvaluatingHeaderValueMessageProcessor
@4.0.0.RELEASE
+#<init>(Lorg/springframework/expression/Expression;Ljava/lang/Class;)V
+#<init>(Ljava/lang/String;Ljava/lang/Class;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#processMessage(Lorg/springframework/messaging/Message;)Ljava/lang/Object;

+###org/springframework/integration/transformer/support/StaticHeaderValueMessageProcessor
@4.0.0.RELEASE
+#<init>(Ljava/lang/Object;)V
+#processMessage(Lorg/springframework/messaging/Message;)Ljava/lang/Object;

+###org/springframework/integration/transformer/support/MessageProcessingHeaderValueMessageProcessor
@4.0.0.RELEASE
+#<init>(Lorg/springframework/integration/handler/MessageProcessor;)V
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#processMessage(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
@4.2.0.RELEASE
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V

+###org/springframework/integration/transformer/support/AbstractHeaderValueMessageProcessor
@4.0.0.RELEASE
+#<init>()V
+#setOverwrite(Ljava/lang/Boolean;)V
+#isOverwrite()Ljava/lang/Boolean;

+###org/springframework/integration/transformer/GenericTransformer
@4.0.0.RELEASE
+#transform(Ljava/lang/Object;)Ljava/lang/Object;
@6.0.0
-###org/springframework/integration/transformer/GenericTransformer

+###org/springframework/integration/transformer/ObjectToStringTransformer
@1.0.1.RELEASE
+#<init>()V
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
@4.0.0.RELEASE
+#getComponentType()Ljava/lang/String;

+###org/springframework/integration/transformer/HeaderEnricher
@1.0.1.RELEASE
+#<init>(Ljava/util/Map;)V
+#setOverwrite(Z)V
@2.0.0.RELEASE
+#<init>()V
+#setMessageProcessor(Lorg/springframework/integration/handler/MessageProcessor;)V
+#setDefaultOverwrite(Z)V
+#setShouldSkipNulls(Z)V
+#transform(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
-#setOverwrite(Z)V
@2.0.6.RELEASE
+#setBeanName(Ljava/lang/String;)V
+#afterPropertiesSet()V
@4.0.0.RELEASE
+#getComponentType()Ljava/lang/String;
+#transform(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
+#onInit()V
+#transform(Ljava/lang/Object;)Ljava/lang/Object;
-#transform(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
-#setBeanName(Ljava/lang/String;)V
-#afterPropertiesSet()V
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/transformer/DecodingTransformer
@4.2.0.RELEASE
+#<init>(Lorg/springframework/integration/codec/Codec;Ljava/lang/Class;)V
+#<init>(Lorg/springframework/integration/codec/Codec;Lorg/springframework/expression/Expression;)V
+#setEvaluationContext(Lorg/springframework/expression/spel/support/StandardEvaluationContext;)V

+###org/springframework/integration/transformer/ExpressionEvaluatingTransformer
@2.0.0.RELEASE
+#<init>(Lorg/springframework/expression/Expression;)V

+###org/springframework/integration/transformer/PayloadSerializingTransformer
@1.0.1.RELEASE
+#<init>()V
@2.0.0.RELEASE
+#setSerializer(Lorg/springframework/core/serializer/Serializer;)V

+###org/springframework/integration/transformer/MethodInvokingTransformer
@1.0.1.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#<init>(Ljava/lang/Object;)V
+#transform(Lorg/springframework/integration/core/Message;)Lorg/springframework/integration/core/Message;
@2.0.0.RELEASE
-#transform(Lorg/springframework/integration/core/Message;)Lorg/springframework/integration/core/Message;

+###org/springframework/integration/transformer/StreamTransformer
@4.2.11.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/springframework/integration/transformer/ClaimCheckOutTransformer
@2.0.0.RELEASE
+#<init>(Lorg/springframework/integration/store/MessageStore;)V
@2.0.4.RELEASE
+#setRemoveMessage(Z)V
@4.0.0.RELEASE
+#getComponentType()Ljava/lang/String;
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/transformer/ContentEnricher
@2.1.0.RELEASE
+#<init>()V
+#setPropertyExpressions(Ljava/util/Map;)V
+#setRequestChannel(Lorg/springframework/integration/MessageChannel;)V
+#setReplyChannel(Lorg/springframework/integration/MessageChannel;)V
+#setRequestTimeout(Ljava/lang/Long;)V
+#setReplyTimeout(Ljava/lang/Long;)V
+#setRequestPayloadExpression(Lorg/springframework/expression/Expression;)V
+#setShouldClonePayload(Z)V
+#onInit()V
+#start()V
+#stop()V
+#isRunning()Z
@3.0.0.RELEASE
+#setHeaderExpressions(Ljava/util/Map;)V
+#setIntegrationEvaluationContext(Lorg/springframework/expression/EvaluationContext;)V
-#onInit()V
@4.0.0.RELEASE
+#setRequestChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setRequestChannelName(Ljava/lang/String;)V
+#setReplyChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setReplyChannelName(Ljava/lang/String;)V
+#getComponentType()Ljava/lang/String;
-#setRequestChannel(Lorg/springframework/integration/MessageChannel;)V
-#setReplyChannel(Lorg/springframework/integration/MessageChannel;)V
@4.1.0.RELEASE
+#setNullResultPropertyExpressions(Ljava/util/Map;)V
+#setNullResultHeaderExpressions(Ljava/util/Map;)V
+#setErrorChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setErrorChannelName(Ljava/lang/String;)V
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/transformer/Transformer
@1.0.1.RELEASE
+#transform(Lorg/springframework/integration/core/Message;)Lorg/springframework/integration/core/Message;
@2.0.0.RELEASE
+#transform(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
-#transform(Lorg/springframework/integration/core/Message;)Lorg/springframework/integration/core/Message;
@4.0.0.RELEASE
+#transform(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
-#transform(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
@5.0.0.RELEASE
+#transform(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/integration/transformer/AbstractMessageProcessingTransformer
@2.0.0.RELEASE
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#transform(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
@4.0.0.RELEASE
+#transform(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
+#transform(Ljava/lang/Object;)Ljava/lang/Object;
-#transform(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
@4.2.0.RELEASE
+#start()V
+#stop()V
+#isRunning()Z
@5.1.0.RELEASE
+#setNotPropagatedHeaders([Ljava/lang/String;)V

+###org/springframework/integration/transformer/MapToObjectTransformer
@2.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#<init>(Ljava/lang/String;)V
@4.0.0.RELEASE
+#getComponentType()Ljava/lang/String;

+###org/springframework/integration/transformer/AbstractPayloadTransformer
@1.0.1.RELEASE
+#<init>()V
+#transform(Lorg/springframework/integration/core/Message;)Lorg/springframework/integration/core/Message;
@2.0.0.RELEASE
+#doTransform(Lorg/springframework/integration/Message;)Ljava/lang/Object;
-#transform(Lorg/springframework/integration/core/Message;)Lorg/springframework/integration/core/Message;
@4.0.0.RELEASE
+#doTransform(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
-#doTransform(Lorg/springframework/integration/Message;)Ljava/lang/Object;

+###org/springframework/integration/transformer/EncodingPayloadTransformer
@4.2.0.RELEASE
+#<init>(Lorg/springframework/integration/codec/Codec;)V

+###org/springframework/integration/transformer/MessageTransformingHandler
@1.0.1.RELEASE
+#<init>(Lorg/springframework/integration/transformer/Transformer;)V
@2.0.0.RELEASE
+#getComponentType()Ljava/lang/String;
@4.2.0.RELEASE
+#start()V
+#stop()V
+#isRunning()Z
@5.1.0.RELEASE
+#addNotPropagatedHeaders([Ljava/lang/String;)V
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/transformer/ObjectToMapTransformer
@2.0.0.RELEASE
+#<init>()V
@2.1.0.RELEASE
+#setShouldFlattenKeys(Z)V
@4.0.0.RELEASE
+#getComponentType()Ljava/lang/String;
@5.0.0.RELEASE
+#<init>(Lorg/springframework/integration/support/json/JsonObjectMapper;)V

+###org/springframework/integration/transformer/MessageTransformationException
@1.0.1.RELEASE
+#<init>(Lorg/springframework/integration/core/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/integration/core/Message;Ljava/lang/String;)V
+#<init>(Lorg/springframework/integration/core/Message;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
@2.0.0.RELEASE
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;)V
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/Throwable;)V
-#<init>(Lorg/springframework/integration/core/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
-#<init>(Lorg/springframework/integration/core/Message;Ljava/lang/String;)V
-#<init>(Lorg/springframework/integration/core/Message;Ljava/lang/Throwable;)V
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;)V
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/Throwable;)V
-#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
-#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;)V
-#<init>(Lorg/springframework/integration/Message;Ljava/lang/Throwable;)V
@4.2.0.RELEASE
*#<init>(Lorg/springframework/messaging/Message;Ljava/lang/Throwable;)V[deprecated]
@4.3.0.RELEASE
-#<init>(Lorg/springframework/messaging/Message;Ljava/lang/Throwable;)V[deprecated]

+###org/springframework/integration/transformer/PayloadDeserializingTransformer
@1.0.1.RELEASE
+#<init>()V
@2.0.0.RELEASE
+#setDeserializer(Lorg/springframework/core/serializer/Deserializer;)V
@4.2.13.RELEASE
+#setWhiteListPatterns([Ljava/lang/String;)V
@4.3.0.RELEASE
-#setWhiteListPatterns([Ljava/lang/String;)V
@4.3.12.RELEASE
+#setWhiteListPatterns([Ljava/lang/String;)V
@5.4.0
+#setAllowedPatterns([Ljava/lang/String;)V
-#setWhiteListPatterns([Ljava/lang/String;)V

+###org/springframework/integration/transformer/AbstractTransformer
@2.0.0.RELEASE
+#<init>()V
+#transform(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
@4.0.0.RELEASE
+#transform(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
+#transform(Ljava/lang/Object;)Ljava/lang/Object;
-#transform(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;

+###org/springframework/integration/transformer/SyslogToMapTransformer
@2.2.0.RELEASE
+#<init>()V

+###org/springframework/integration/transformer/ClaimCheckInTransformer
@2.0.0.RELEASE
+#<init>(Lorg/springframework/integration/store/MessageStore;)V
@4.0.0.RELEASE
+#getComponentType()Ljava/lang/String;
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/expression/SupplierExpression
@5.0.0.RELEASE
+#<init>(Lorg/boon/core/Supplier;)V
+#getValue()Ljava/lang/Object;
+#getValue(Ljava/lang/Object;)Ljava/lang/Object;
+#getValue(Ljava/lang/Class;)Ljava/lang/Object;
+#getValue(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#getValue(Lorg/springframework/expression/EvaluationContext;)Ljava/lang/Object;
+#getValue(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;)Ljava/lang/Object;
+#getValue(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Class;)Ljava/lang/Object;
+#getValue(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#getValueType()Ljava/lang/Class;
+#getValueType(Ljava/lang/Object;)Ljava/lang/Class;
+#getValueType(Lorg/springframework/expression/EvaluationContext;)Ljava/lang/Class;
+#getValueType(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;)Ljava/lang/Class;
+#getValueTypeDescriptor()Lorg/springframework/core/convert/TypeDescriptor;
+#getValueTypeDescriptor(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
+#getValueTypeDescriptor(Lorg/springframework/expression/EvaluationContext;)Lorg/springframework/core/convert/TypeDescriptor;
+#getValueTypeDescriptor(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
+#setValue(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;)V
+#setValue(Ljava/lang/Object;Ljava/lang/Object;)V
+#setValue(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/Object;)V
+#isWritable(Lorg/springframework/expression/EvaluationContext;)Z
+#isWritable(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;)Z
+#isWritable(Ljava/lang/Object;)Z
+#getExpressionString()Ljava/lang/String;
@5.1.2.RELEASE
+#<init>(Ljava/util/function/Supplier;)V
-#<init>(Lorg/boon/core/Supplier;)V

+###org/springframework/integration/expression/ExpressionUtils
@2.2.0.RELEASE
+#<init>()V
+#createStandardEvaluationContext()Lorg/springframework/expression/spel/support/StandardEvaluationContext;
+#createStandardEvaluationContext(Lorg/springframework/expression/BeanResolver;)Lorg/springframework/expression/spel/support/StandardEvaluationContext;
+#createStandardEvaluationContext(Lorg/springframework/core/convert/ConversionService;)Lorg/springframework/expression/spel/support/StandardEvaluationContext;
+#createStandardEvaluationContext(Lorg/springframework/expression/BeanResolver;Lorg/springframework/core/convert/ConversionService;)Lorg/springframework/expression/spel/support/StandardEvaluationContext;
+#createStandardEvaluationContext(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/expression/spel/support/StandardEvaluationContext;
@3.0.0.RELEASE
-#createStandardEvaluationContext(Lorg/springframework/expression/BeanResolver;)Lorg/springframework/expression/spel/support/StandardEvaluationContext;
-#createStandardEvaluationContext(Lorg/springframework/core/convert/ConversionService;)Lorg/springframework/expression/spel/support/StandardEvaluationContext;
-#createStandardEvaluationContext(Lorg/springframework/expression/BeanResolver;Lorg/springframework/core/convert/ConversionService;)Lorg/springframework/expression/spel/support/StandardEvaluationContext;
@4.3.15.RELEASE
+#createSimpleEvaluationContext()Lorg/springframework/expression/spel/support/SimpleEvaluationContext;
+#createSimpleEvaluationContext(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/expression/spel/support/SimpleEvaluationContext;
@5.0.0.RELEASE
+#expressionToFile(Lorg/springframework/expression/Expression;Lorg/springframework/expression/EvaluationContext;Lorg/springframework/messaging/Message;Ljava/lang/String;)Ljava/io/File;
+#intExpression(Ljava/lang/String;)Lorg/springframework/expression/Expression;
+#longExpression(Ljava/lang/String;)Lorg/springframework/expression/Expression;
-#<init>()V
-#createSimpleEvaluationContext()Lorg/springframework/expression/spel/support/SimpleEvaluationContext;
-#createSimpleEvaluationContext(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/expression/spel/support/SimpleEvaluationContext;
@5.0.4.RELEASE
+#createSimpleEvaluationContext()Lorg/springframework/expression/spel/support/SimpleEvaluationContext;
+#createSimpleEvaluationContext(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/expression/spel/support/SimpleEvaluationContext;

+###org/springframework/integration/expression/ControlBusMethodFilter
@4.0.0.RELEASE
+#<init>()V
+#filter(Ljava/util/List;)Ljava/util/List;

+###org/springframework/integration/expression/DynamicExpression
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/integration/expression/ExpressionSource;)V
+#getValue()Ljava/lang/Object;
+#getValue(Ljava/lang/Object;)Ljava/lang/Object;
+#getValue(Ljava/lang/Class;)Ljava/lang/Object;
+#getValue(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#getValue(Lorg/springframework/expression/EvaluationContext;)Ljava/lang/Object;
+#getValue(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;)Ljava/lang/Object;
+#getValue(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Class;)Ljava/lang/Object;
+#getValue(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#getValueType()Ljava/lang/Class;
+#getValueType(Ljava/lang/Object;)Ljava/lang/Class;
+#getValueType(Lorg/springframework/expression/EvaluationContext;)Ljava/lang/Class;
+#getValueType(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;)Ljava/lang/Class;
+#getValueTypeDescriptor()Lorg/springframework/core/convert/TypeDescriptor;
+#getValueTypeDescriptor(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
+#getValueTypeDescriptor(Lorg/springframework/expression/EvaluationContext;)Lorg/springframework/core/convert/TypeDescriptor;
+#getValueTypeDescriptor(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
+#isWritable(Lorg/springframework/expression/EvaluationContext;)Z
+#isWritable(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;)Z
+#isWritable(Ljava/lang/Object;)Z
+#setValue(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;)V
+#setValue(Ljava/lang/Object;Ljava/lang/Object;)V
+#setValue(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/Object;)V
+#getExpressionString()Ljava/lang/String;

+###org/springframework/integration/expression/ExpressionEvalMap
@3.0.0.RELEASE
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#values()Ljava/util/Collection;
+#containsKey(Ljava/lang/Object;)Z
+#keySet()Ljava/util/Set;
+#isEmpty()Z
+#size()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#entrySet()Ljava/util/Set;
+#put(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#clear()V
+#containsValue(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#from(Ljava/util/Map;)Lorg/springframework/integration/expression/ExpressionEvalMap$ExpressionEvalMapBuilder;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/integration/expression/SpelPropertyAccessorRegistrar
@4.3.8.RELEASE
+#<init>()V
+#<init>([Lorg/springframework/expression/PropertyAccessor;)V
+#<init>(Ljava/util/Map;)V
+#getPropertyAccessors()Ljava/util/Map;
+#add(Ljava/lang/String;Lorg/springframework/expression/PropertyAccessor;)Lorg/springframework/integration/expression/SpelPropertyAccessorRegistrar;
+#add([Lorg/springframework/expression/PropertyAccessor;)Lorg/springframework/integration/expression/SpelPropertyAccessorRegistrar;

+###org/springframework/integration/expression/ReloadableResourceBundleExpressionSource
@2.0.0.RELEASE
+#<init>()V
+#setBasename(Ljava/lang/String;)V
+#setBasenames([Ljava/lang/String;)V
+#setDefaultEncoding(Ljava/lang/String;)V
+#setFileEncodings(Ljava/util/Properties;)V
+#setFallbackToSystemLocale(Z)V
+#setCacheSeconds(I)V
+#setPropertiesPersister(Lorg/springframework/util/PropertiesPersister;)V
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#getExpression(Ljava/lang/String;Ljava/util/Locale;)Lorg/springframework/expression/Expression;
+#clearCache()V
+#toString()Ljava/lang/String;

+###org/springframework/integration/expression/ValueExpression
@4.0.0.RELEASE
+#<init>(Ljava/lang/Object;)V
+#getValue()Ljava/lang/Object;
+#getValue(Ljava/lang/Object;)Ljava/lang/Object;
+#getValue(Lorg/springframework/expression/EvaluationContext;)Ljava/lang/Object;
+#getValue(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;)Ljava/lang/Object;
+#getValue(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#getValue(Ljava/lang/Class;)Ljava/lang/Object;
+#getValue(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#getValue(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Class;)Ljava/lang/Object;
+#getValueType()Ljava/lang/Class;
+#getValueType(Ljava/lang/Object;)Ljava/lang/Class;
+#getValueType(Lorg/springframework/expression/EvaluationContext;)Ljava/lang/Class;
+#getValueType(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;)Ljava/lang/Class;
+#getValueTypeDescriptor()Lorg/springframework/core/convert/TypeDescriptor;
+#getValueTypeDescriptor(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
+#getValueTypeDescriptor(Lorg/springframework/expression/EvaluationContext;)Lorg/springframework/core/convert/TypeDescriptor;
+#getValueTypeDescriptor(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
+#isWritable(Lorg/springframework/expression/EvaluationContext;)Z
+#isWritable(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;)Z
+#isWritable(Ljava/lang/Object;)Z
+#setValue(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;)V
+#setValue(Ljava/lang/Object;Ljava/lang/Object;)V
+#setValue(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/Object;)V
+#getExpressionString()Ljava/lang/String;
@5.0.0.RELEASE
+#toString()Ljava/lang/String;

+###org/springframework/integration/expression/FunctionExpression
@5.0.0.RELEASE
+#<init>(Ljava/util/function/Function;)V
+#getValue()Ljava/lang/Object;
+#getValue(Ljava/lang/Object;)Ljava/lang/Object;
+#getValue(Ljava/lang/Class;)Ljava/lang/Object;
+#getValue(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#getValue(Lorg/springframework/expression/EvaluationContext;)Ljava/lang/Object;
+#getValue(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;)Ljava/lang/Object;
+#getValue(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Class;)Ljava/lang/Object;
+#getValue(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#getValueType()Ljava/lang/Class;
+#getValueType(Ljava/lang/Object;)Ljava/lang/Class;
+#getValueType(Lorg/springframework/expression/EvaluationContext;)Ljava/lang/Class;
+#getValueType(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;)Ljava/lang/Class;
+#getValueTypeDescriptor()Lorg/springframework/core/convert/TypeDescriptor;
+#getValueTypeDescriptor(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
+#getValueTypeDescriptor(Lorg/springframework/expression/EvaluationContext;)Lorg/springframework/core/convert/TypeDescriptor;
+#getValueTypeDescriptor(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
+#setValue(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;)V
+#setValue(Ljava/lang/Object;Ljava/lang/Object;)V
+#setValue(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/Object;)V
+#isWritable(Lorg/springframework/expression/EvaluationContext;)Z
+#isWritable(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;)Z
+#isWritable(Ljava/lang/Object;)Z
+#getExpressionString()Ljava/lang/String;

+###org/springframework/integration/expression/ExpressionEvalMap$EvaluationCallback
@3.0.0.RELEASE
+#evaluate(Lorg/springframework/expression/Expression;)Ljava/lang/Object;

+###org/springframework/integration/expression/ExpressionSource
@2.0.0.RELEASE
+#getExpression(Ljava/lang/String;Ljava/util/Locale;)Lorg/springframework/expression/Expression;

+###org/springframework/integration/expression/ExpressionEvalMap$ExpressionEvalMapBuilder
@3.0.0.RELEASE
+#usingCallback(Lorg/springframework/integration/expression/ExpressionEvalMap$EvaluationCallback;)Lorg/springframework/integration/expression/ExpressionEvalMap$ExpressionEvalMapFinalBuilder;
+#usingSimpleCallback()Lorg/springframework/integration/expression/ExpressionEvalMap$ExpressionEvalMapFinalBuilder;
+#usingEvaluationContext(Lorg/springframework/expression/EvaluationContext;)Lorg/springframework/integration/expression/ExpressionEvalMap$ExpressionEvalMapComponentsBuilder;
+#withRoot(Ljava/lang/Object;)Lorg/springframework/integration/expression/ExpressionEvalMap$ExpressionEvalMapComponentsBuilder;
+#withReturnType(Ljava/lang/Class;)Lorg/springframework/integration/expression/ExpressionEvalMap$ExpressionEvalMapComponentsBuilder;

+###org/springframework/integration/expression/ExpressionEvalMap$ExpressionEvalMapComponentsBuilder
@3.0.0.RELEASE
+#usingEvaluationContext(Lorg/springframework/expression/EvaluationContext;)Lorg/springframework/integration/expression/ExpressionEvalMap$ExpressionEvalMapComponentsBuilder;
+#withRoot(Ljava/lang/Object;)Lorg/springframework/integration/expression/ExpressionEvalMap$ExpressionEvalMapComponentsBuilder;
+#withReturnType(Ljava/lang/Class;)Lorg/springframework/integration/expression/ExpressionEvalMap$ExpressionEvalMapComponentsBuilder;

+###org/springframework/integration/expression/ExpressionEvalMap$ComponentsEvaluationCallback
@3.0.0.RELEASE
+#<init>(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/Class;)V
+#evaluate(Lorg/springframework/expression/Expression;)Ljava/lang/Object;
@5.2.2.RELEASE
+#<init>(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;ZLjava/lang/Class;)V
-#<init>(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/Class;)V

+###org/springframework/integration/expression/ExpressionEvalMap$ExpressionEvalMapFinalBuilder
@3.0.0.RELEASE
+#build()Lorg/springframework/integration/expression/ExpressionEvalMap;

+###org/springframework/integration/StaticMessageHeaderAccessor
@5.1.0.RELEASE
+#getId(Lorg/springframework/messaging/Message;)Ljava/util/UUID;
+#getTimestamp(Lorg/springframework/messaging/Message;)Ljava/lang/Long;
+#getContentType(Lorg/springframework/messaging/Message;)Lorg/springframework/util/MimeType;
+#getExpirationDate(Lorg/springframework/messaging/Message;)Ljava/lang/Long;
+#getSequenceNumber(Lorg/springframework/messaging/Message;)I
+#getSequenceSize(Lorg/springframework/messaging/Message;)I
+#getPriority(Lorg/springframework/messaging/Message;)Ljava/lang/Integer;
+#getCloseableResource(Lorg/springframework/messaging/Message;)Ljava/io/Closeable;
+#getDeliveryAttempt(Lorg/springframework/messaging/Message;)Ljava/util/concurrent/atomic/AtomicInteger;
+#getAcknowledgmentCallback(Lorg/springframework/messaging/Message;)Lorg/springframework/integration/acks/AcknowledgmentCallback;
@5.1.6.RELEASE
+#getSourceData(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
@5.3.0.RELEASE
+#getAcknowledgment(Lorg/springframework/messaging/Message;)Lorg/springframework/integration/acks/SimpleAcknowledgment;

+###org/springframework/integration/MessageRejectedException
@2.0.0.RELEASE
+#<init>(Lorg/springframework/integration/Message;)V
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;)V
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/Message;)V
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;)V
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
-#<init>(Lorg/springframework/integration/Message;)V
-#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;)V
-#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
@4.2.0.RELEASE
*#<init>(Lorg/springframework/messaging/Message;)V[deprecated]
@4.3.0.RELEASE
-#<init>(Lorg/springframework/messaging/Message;)V[deprecated]

+###org/springframework/integration/aggregator/ExpressionEvaluatingMessageListProcessor
@2.0.0.RELEASE
+#setExpectedType(Ljava/lang/Class;)V
+#<init>(Ljava/lang/String;)V
+#process(Ljava/util/Collection;)Ljava/lang/Object;
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Class;)V
+#<init>(Lorg/springframework/expression/Expression;Ljava/lang/Class;)V
+#<init>(Lorg/springframework/expression/Expression;)V

+###org/springframework/integration/aggregator/MessageCountReleaseStrategy
@2.0.0.RELEASE
+#<init>(I)V
+#<init>()V
+#canRelease(Lorg/springframework/integration/store/MessageGroup;)Z

+###org/springframework/integration/aggregator/HeaderAttributeCorrelationStrategy
@1.0.2.RELEASE
+#<init>(Ljava/lang/String;)V
+#getCorrelationKey(Lorg/springframework/integration/core/Message;)Ljava/lang/Object;
@2.0.0.RELEASE
+#getCorrelationKey(Lorg/springframework/integration/Message;)Ljava/lang/Object;
-#getCorrelationKey(Lorg/springframework/integration/core/Message;)Ljava/lang/Object;
@4.0.0.RELEASE
+#getCorrelationKey(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
-#getCorrelationKey(Lorg/springframework/integration/Message;)Ljava/lang/Object;

+###org/springframework/integration/aggregator/MethodInvokingCorrelationStrategy
@2.0.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#getCorrelationKey(Lorg/springframework/integration/Message;)Ljava/lang/Object;
@4.0.0.RELEASE
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#getCorrelationKey(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
-#getCorrelationKey(Lorg/springframework/integration/Message;)Ljava/lang/Object;
@5.0.0.RELEASE
+#start()V
+#stop()V
+#isRunning()Z

+###org/springframework/integration/aggregator/MessageSequenceComparator
@1.0.1.RELEASE
+#<init>()V
+#compare(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/Message;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@2.0.0.RELEASE
+#compare(Lorg/springframework/integration/Message;Lorg/springframework/integration/Message;)I
-#compare(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/Message;)I
@4.0.0.RELEASE
+#compare(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/Message;)I
-#compare(Lorg/springframework/integration/Message;Lorg/springframework/integration/Message;)I

+###org/springframework/integration/aggregator/BarrierMessageHandler
@4.2.0.RELEASE
+#<init>(J)V
+#<init>(JLorg/springframework/integration/aggregator/MessageGroupProcessor;)V
+#<init>(JLorg/springframework/integration/aggregator/CorrelationStrategy;)V
+#<init>(JLorg/springframework/integration/aggregator/MessageGroupProcessor;Lorg/springframework/integration/aggregator/CorrelationStrategy;)V
+#trigger(Lorg/springframework/messaging/Message;)V
@4.2.1.RELEASE
+#getComponentType()Ljava/lang/String;
@4.3.5.RELEASE
+#setDiscardChannelName(Ljava/lang/String;)V
+#setDiscardChannel(Lorg/springframework/messaging/MessageChannel;)V
+#getDiscardChannel()Lorg/springframework/messaging/MessageChannel;
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;
@5.4.0
+#<init>(JJ)V
+#<init>(JJLorg/springframework/integration/aggregator/MessageGroupProcessor;)V
+#<init>(JJLorg/springframework/integration/aggregator/CorrelationStrategy;)V
+#<init>(JJLorg/springframework/integration/aggregator/MessageGroupProcessor;Lorg/springframework/integration/aggregator/CorrelationStrategy;)V

+###org/springframework/integration/aggregator/SimpleSequenceSizeReleaseStrategy
@4.3.7.RELEASE
+#<init>()V
+#canRelease(Lorg/springframework/integration/store/MessageGroup;)Z

+###org/springframework/integration/aggregator/ExpressionEvaluatingMessageGroupProcessor
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#setConversionService(Lorg/springframework/core/convert/ConversionService;)V
+#setExpectedType(Ljava/lang/Class;)V

+###org/springframework/integration/aggregator/AggregatingMessageHandler
@2.1.0.RELEASE
+#<init>(Lorg/springframework/integration/aggregator/MessageGroupProcessor;Lorg/springframework/integration/store/MessageGroupStore;Lorg/springframework/integration/aggregator/CorrelationStrategy;Lorg/springframework/integration/aggregator/ReleaseStrategy;)V
+#<init>(Lorg/springframework/integration/aggregator/MessageGroupProcessor;Lorg/springframework/integration/store/MessageGroupStore;)V
+#<init>(Lorg/springframework/integration/aggregator/MessageGroupProcessor;)V
+#setExpireGroupsUponCompletion(Z)V
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/aggregator/ExpressionEvaluatingCorrelationStrategy
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/expression/Expression;)V
+#getCorrelationKey(Lorg/springframework/integration/Message;)Ljava/lang/Object;
@2.1.3.RELEASE
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#afterPropertiesSet()V
@4.0.0.RELEASE
+#getCorrelationKey(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
-#getCorrelationKey(Lorg/springframework/integration/Message;)Ljava/lang/Object;
-#afterPropertiesSet()V

+###org/springframework/integration/aggregator/TimeoutCountSequenceSizeReleaseStrategy
@2.0.0.RELEASE
+#<init>()V
+#<init>(IJ)V
+#canRelease(Lorg/springframework/integration/store/MessageGroup;)Z

+###org/springframework/integration/aggregator/MethodInvokingMessageGroupProcessor
@2.0.0.RELEASE
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#setConversionService(Lorg/springframework/core/convert/ConversionService;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@5.0.0.RELEASE
+#start()V
+#stop()V
+#isRunning()Z

+###org/springframework/integration/aggregator/SequenceSizeReleaseStrategy
@2.0.0.RELEASE
+#<init>()V
+#<init>(Z)V
+#setReleasePartialSequences(Z)V
+#canRelease(Lorg/springframework/integration/store/MessageGroup;)Z

+###org/springframework/integration/aggregator/MessageListProcessor
@2.0.0.RELEASE
+#process(Ljava/util/Collection;)Ljava/lang/Object;

+###org/springframework/integration/aggregator/ResequencingMessageGroupProcessor
@2.0.0.RELEASE
+#<init>()V
+#setComparator(Ljava/util/Comparator;)V
+#processMessageGroup(Lorg/springframework/integration/store/MessageGroup;)Ljava/lang/Object;
@2.2.0.RELEASE
-#setComparator(Ljava/util/Comparator;)V

+###org/springframework/integration/aggregator/MethodInvokingMessageListProcessor
@2.0.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;Ljava/lang/Class;)V
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Class;)V
+#toString()Ljava/lang/String;
+#process(Ljava/util/Collection;Ljava/util/Map;)Ljava/lang/Object;
@4.2.0.RELEASE
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@5.0.0.RELEASE
+#setUseSpelInvoker(Z)V
+#start()V
+#stop()V
+#isRunning()Z

+###org/springframework/integration/aggregator/MessageGroupExpiredEvent
@4.0.1.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/Object;ILjava/util/Date;Ljava/util/Date;Z)V
+#getGroupId()Ljava/lang/Object;
+#getMessageCount()I
+#getExpired()Ljava/util/Date;
+#isDiscarded()Z
+#toString()Ljava/lang/String;

+###org/springframework/integration/aggregator/ResequencingMessageHandler
@2.1.0.RELEASE
+#<init>(Lorg/springframework/integration/aggregator/MessageGroupProcessor;Lorg/springframework/integration/store/MessageGroupStore;Lorg/springframework/integration/aggregator/CorrelationStrategy;Lorg/springframework/integration/aggregator/ReleaseStrategy;)V
+#<init>(Lorg/springframework/integration/aggregator/MessageGroupProcessor;Lorg/springframework/integration/store/MessageGroupStore;)V
+#<init>(Lorg/springframework/integration/aggregator/MessageGroupProcessor;)V
@4.1.0.RELEASE
+#setExpireGroupsUponTimeout(Z)V
@4.3.17.RELEASE
+#getComponentType()Ljava/lang/String;
@5.0.0.RELEASE
-#getComponentType()Ljava/lang/String;
@5.0.6.RELEASE
+#getComponentType()Ljava/lang/String;
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/aggregator/MethodInvokingReleaseStrategy
@2.0.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#setConversionService(Lorg/springframework/core/convert/ConversionService;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#canRelease(Lorg/springframework/integration/store/MessageGroup;)Z
@5.0.0.RELEASE
+#start()V
+#stop()V
+#isRunning()Z

+###org/springframework/integration/aggregator/DefaultAggregatingMessageGroupProcessor
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/integration/aggregator/AbstractCorrelatingMessageHandler$SequenceAwareMessageGroup
@4.0.0.RELEASE
+#<init>(Lorg/springframework/integration/store/MessageGroup;)V
+#canAdd(Lorg/springframework/messaging/Message;)Z

+###org/springframework/integration/aggregator/CorrelationStrategy
@1.0.2.RELEASE
+#getCorrelationKey(Lorg/springframework/integration/core/Message;)Ljava/lang/Object;
@2.0.0.RELEASE
+#getCorrelationKey(Lorg/springframework/integration/Message;)Ljava/lang/Object;
-#getCorrelationKey(Lorg/springframework/integration/core/Message;)Ljava/lang/Object;
@4.0.0.RELEASE
+#getCorrelationKey(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
-#getCorrelationKey(Lorg/springframework/integration/Message;)Ljava/lang/Object;

+###org/springframework/integration/aggregator/MessageGroupProcessor
@2.0.0.RELEASE
+#processMessageGroup(Lorg/springframework/integration/store/MessageGroup;)Ljava/lang/Object;

+###org/springframework/integration/aggregator/CorrelatingMessageBarrier
@2.0.0.RELEASE
+#<init>(Lorg/springframework/integration/store/MessageGroupStore;)V
+#<init>()V
+#setCorrelationStrategy(Lorg/springframework/integration/aggregator/CorrelationStrategy;)V
+#setReleaseStrategy(Lorg/springframework/integration/aggregator/ReleaseStrategy;)V
+#receive()Lorg/springframework/integration/Message;
@4.0.0.RELEASE
+#receive()Lorg/springframework/messaging/Message;
-#receive()Lorg/springframework/integration/Message;

+###org/springframework/integration/aggregator/AbstractAggregatingMessageGroupProcessor
@2.0.0.RELEASE
+#<init>()V
+#processMessageGroup(Lorg/springframework/integration/store/MessageGroup;)Ljava/lang/Object;
@4.0.0.RELEASE
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@5.2.0.RELEASE
+#setHeadersFunction(Ljava/util/function/Function;)V

+###org/springframework/integration/aggregator/ExpressionEvaluatingReleaseStrategy
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#canRelease(Lorg/springframework/integration/store/MessageGroup;)Z
@5.0.0.RELEASE
+#<init>(Lorg/springframework/expression/Expression;)V

+###org/springframework/integration/aggregator/ReleaseStrategy
@2.0.0.RELEASE
+#canRelease(Lorg/springframework/integration/store/MessageGroup;)Z

+###org/springframework/integration/aggregator/SimpleMessageGroupProcessor
@4.2.0.RELEASE
+#<init>()V
+#processMessageGroup(Lorg/springframework/integration/store/MessageGroup;)Ljava/lang/Object;

+###org/springframework/integration/aggregator/AbstractCorrelatingMessageHandler
@2.1.0.RELEASE
+#<init>(Lorg/springframework/integration/aggregator/MessageGroupProcessor;Lorg/springframework/integration/store/MessageGroupStore;Lorg/springframework/integration/aggregator/CorrelationStrategy;Lorg/springframework/integration/aggregator/ReleaseStrategy;)V
+#<init>(Lorg/springframework/integration/aggregator/MessageGroupProcessor;Lorg/springframework/integration/store/MessageGroupStore;)V
+#<init>(Lorg/springframework/integration/aggregator/MessageGroupProcessor;)V
+#setMessageStore(Lorg/springframework/integration/store/MessageGroupStore;)V
+#setCorrelationStrategy(Lorg/springframework/integration/aggregator/CorrelationStrategy;)V
+#setReleaseStrategy(Lorg/springframework/integration/aggregator/ReleaseStrategy;)V
+#setOutputChannel(Lorg/springframework/integration/MessageChannel;)V
+#setDiscardChannel(Lorg/springframework/integration/MessageChannel;)V
+#setSendTimeout(J)V
+#setSendPartialResultOnExpiry(Z)V
+#setReleasePartialSequences(Z)V
+#getComponentType()Ljava/lang/String;
@2.1.1.RELEASE
+#setLockRegistry(Lorg/springframework/integration/util/LockRegistry;)V
@2.1.5.RELEASE
+#setMinimumTimeoutForEmptyGroups(J)V
@4.0.0.RELEASE
+#setLockRegistry(Lorg/springframework/integration/support/locks/LockRegistry;)V
+#setOutputChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setOutputChannelName(Ljava/lang/String;)V
+#setGroupTimeoutExpression(Lorg/springframework/expression/Expression;)V
+#setIntegrationEvaluationContext(Lorg/springframework/expression/EvaluationContext;)V
+#setTaskScheduler(Lorg/springframework/scheduling/TaskScheduler;)V
+#setDiscardChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setDiscardChannelName(Ljava/lang/String;)V
+#destroy()V
-#setLockRegistry(Lorg/springframework/integration/util/LockRegistry;)V
-#setOutputChannel(Lorg/springframework/integration/MessageChannel;)V
-#setDiscardChannel(Lorg/springframework/integration/MessageChannel;)V
@4.0.1.RELEASE
+#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
@4.1.0.RELEASE
+#setForceReleaseAdviceChain(Ljava/util/List;)V
+#setExpireGroupsUponTimeout(Z)V
+#getMessageStore()Lorg/springframework/integration/store/MessageGroupStore;
-#setOutputChannel(Lorg/springframework/messaging/MessageChannel;)V
-#setOutputChannelName(Ljava/lang/String;)V
-#setSendTimeout(J)V
@4.3.0.RELEASE
+#getDiscardChannel()Lorg/springframework/messaging/MessageChannel;
@5.0.0.RELEASE
+#setOutputProcessor(Lorg/springframework/integration/aggregator/MessageGroupProcessor;)V
+#start()V
+#stop()V
+#isRunning()Z
-#setIntegrationEvaluationContext(Lorg/springframework/expression/EvaluationContext;)V
@5.1.0.RELEASE
+#setPopSequence(Z)V
@5.1.1.RELEASE
+#setReleaseLockBeforeSend(Z)V
@5.1.3.RELEASE
-#setTaskScheduler(Lorg/springframework/scheduling/TaskScheduler;)V
@5.2.0.RELEASE
+#getOutputProcessor()Lorg/springframework/integration/aggregator/MessageGroupProcessor;
@5.4.0
+#setExpireTimeout(J)V
+#setExpireDurationMillis(J)V
+#setExpireDuration(Ljava/time/Duration;)V
+#purgeOrphanedGroups()V
@5.5.0
+#setGroupConditionSupplier(Ljava/util/function/BiFunction;)V

+###org/springframework/integration/IntegrationMessageHeaderAccessor
@4.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/Message;)V
+#getExpirationDate()Ljava/lang/Long;
+#getCorrelationId()Ljava/lang/Object;
+#getSequenceNumber()Ljava/lang/Integer;
+#getSequenceSize()Ljava/lang/Integer;
+#getPriority()Ljava/lang/Integer;
+#getHeader(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
@4.2.11.RELEASE
+#getCloseableResource()Ljava/io/Closeable;
@4.3.2.RELEASE
+#setReadOnlyHeaders([Ljava/lang/String;)V
@4.3.10.RELEASE
+#isReadOnly(Ljava/lang/String;)Z
+#toMap()Ljava/util/Map;
@5.0.0.RELEASE
+#getSequenceNumber()I
+#getSequenceSize()I
-#getSequenceNumber()Ljava/lang/Integer;
-#getSequenceSize()Ljava/lang/Integer;
@5.0.1.RELEASE
+#getAcknowledgmentCallback()Lorg/springframework/integration/support/AcknowledgmentCallback;
+#getDeliveryAttempt()Ljava/util/concurrent/atomic/AtomicInteger;
@5.1.0.RELEASE
+#getAcknowledgmentCallback()Lorg/springframework/integration/acks/AcknowledgmentCallback;
-#getAcknowledgmentCallback()Lorg/springframework/integration/support/AcknowledgmentCallback;
@5.1.6.RELEASE
+#getSourceData()Ljava/lang/Object;

+###org/springframework/integration/aop/MethodNameMappingPublisherMetadataSource
@2.0.0.RELEASE
+#<init>(Ljava/util/Map;)V
+#setHeaderExpressionMap(Ljava/util/Map;)V
+#setChannelMap(Ljava/util/Map;)V
+#getPayloadExpression(Ljava/lang/reflect/Method;)Ljava/lang/String;
+#getHeaderExpressions(Ljava/lang/reflect/Method;)Ljava/util/Map;
+#getChannelName(Ljava/lang/reflect/Method;)Ljava/lang/String;
@5.0.4.RELEASE
+#getExpressionForPayload(Ljava/lang/reflect/Method;)Lorg/springframework/expression/Expression;
*#getPayloadExpression(Ljava/lang/reflect/Method;)Ljava/lang/String;[deprecated]
*#getHeaderExpressions(Ljava/lang/reflect/Method;)Ljava/util/Map;[deprecated]
+#getExpressionsForHeaders(Ljava/lang/reflect/Method;)Ljava/util/Map;
@5.2.0.RELEASE
-#getPayloadExpression(Ljava/lang/reflect/Method;)Ljava/lang/String;[deprecated]
-#getHeaderExpressions(Ljava/lang/reflect/Method;)Ljava/util/Map;[deprecated]

+###org/springframework/integration/aop/AbstractMessageSourceAdvice
@4.2.0.RELEASE
+#<init>()V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
+#beforeReceive(Lorg/springframework/integration/core/MessageSource;)Z
+#afterReceive(Lorg/springframework/messaging/Message;Lorg/springframework/integration/core/MessageSource;)Lorg/springframework/messaging/Message;
@5.0.7.RELEASE
-#beforeReceive(Lorg/springframework/integration/core/MessageSource;)Z
-#afterReceive(Lorg/springframework/messaging/Message;Lorg/springframework/integration/core/MessageSource;)Lorg/springframework/messaging/Message;
@5.3.0.RELEASE
-#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
@6.0.0
-###org/springframework/integration/aop/AbstractMessageSourceAdvice

+###org/springframework/integration/aop/MessagePublishingInterceptor
@2.0.0.RELEASE
+#<init>(Lorg/springframework/integration/aop/PublisherMetadataSource;)V
+#setPublisherMetadataSource(Lorg/springframework/integration/aop/PublisherMetadataSource;)V
+#setDefaultChannel(Lorg/springframework/integration/MessageChannel;)V
+#setChannelResolver(Lorg/springframework/integration/support/channel/ChannelResolver;)V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
@3.0.0.RELEASE
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@4.0.0.RELEASE
+#setDefaultChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setChannelResolver(Lorg/springframework/messaging/core/DestinationResolver;)V
-#setDefaultChannel(Lorg/springframework/integration/MessageChannel;)V
-#setChannelResolver(Lorg/springframework/integration/support/channel/ChannelResolver;)V
@4.0.3.RELEASE
*#setDefaultChannel(Lorg/springframework/messaging/MessageChannel;)V[deprecated]
+#setDefaultChannelName(Ljava/lang/String;)V
@4.3.0.RELEASE
-#setDefaultChannel(Lorg/springframework/messaging/MessageChannel;)V[deprecated]
@5.2.0.RELEASE
*#setPublisherMetadataSource(Lorg/springframework/integration/aop/PublisherMetadataSource;)V[deprecated]
@5.3.0.RELEASE
-#setPublisherMetadataSource(Lorg/springframework/integration/aop/PublisherMetadataSource;)V[deprecated]

+###org/springframework/integration/aop/SimplePublisherMetadataSource
@2.0.0.RELEASE
+#<init>()V
+#setChannelName(Ljava/lang/String;)V
+#getChannelName(Ljava/lang/reflect/Method;)Ljava/lang/String;
+#setPayloadExpression(Ljava/lang/String;)V
+#getPayloadExpression(Ljava/lang/reflect/Method;)Ljava/lang/String;
+#setHeaderExpressions(Ljava/util/Map;)V
+#getHeaderExpressions(Ljava/lang/reflect/Method;)Ljava/util/Map;
@5.0.4.RELEASE
*#getPayloadExpression(Ljava/lang/reflect/Method;)Ljava/lang/String;[deprecated]
+#getExpressionForPayload(Ljava/lang/reflect/Method;)Lorg/springframework/expression/Expression;
*#getHeaderExpressions(Ljava/lang/reflect/Method;)Ljava/util/Map;[deprecated]
+#getExpressionsForHeaders(Ljava/lang/reflect/Method;)Ljava/util/Map;
@5.2.0.RELEASE
-#getPayloadExpression(Ljava/lang/reflect/Method;)Ljava/lang/String;[deprecated]
-#getHeaderExpressions(Ljava/lang/reflect/Method;)Ljava/util/Map;[deprecated]

+###org/springframework/integration/aop/SimpleActiveIdleMessageSourceAdvice
@4.2.0.RELEASE
+#<init>(Lorg/springframework/integration/util/DynamicPeriodicTrigger;)V
+#setIdlePollPeriod(J)V
+#setActivePollPeriod(J)V
+#beforeReceive(Lorg/springframework/integration/core/MessageSource;)Z
+#afterReceive(Lorg/springframework/messaging/Message;Lorg/springframework/integration/core/MessageSource;)Lorg/springframework/messaging/Message;
@5.0.7.RELEASE
-#beforeReceive(Lorg/springframework/integration/core/MessageSource;)Z
@6.0.0
-###org/springframework/integration/aop/SimpleActiveIdleMessageSourceAdvice

+###org/springframework/integration/aop/CompoundTriggerAdvice
@4.3.0.RELEASE
+#<init>(Lorg/springframework/integration/util/CompoundTrigger;Lorg/springframework/scheduling/Trigger;)V
+#beforeReceive(Lorg/springframework/integration/core/MessageSource;)Z
+#afterReceive(Lorg/springframework/messaging/Message;Lorg/springframework/integration/core/MessageSource;)Lorg/springframework/messaging/Message;
@5.0.7.RELEASE
-#beforeReceive(Lorg/springframework/integration/core/MessageSource;)Z
@5.3.0.RELEASE
*#afterReceive(Lorg/springframework/messaging/Message;Lorg/springframework/integration/core/MessageSource;)Lorg/springframework/messaging/Message;[deprecated]
+#afterReceive(Lorg/springframework/messaging/Message;Ljava/lang/Object;)Lorg/springframework/messaging/Message;
@6.0.0
-#afterReceive(Lorg/springframework/messaging/Message;Ljava/lang/Object;)Lorg/springframework/messaging/Message;

+###org/springframework/integration/aop/PublisherAnnotationBeanPostProcessor
@2.0.0.RELEASE
+#<init>()V
+#setDefaultChannel(Lorg/springframework/integration/MessageChannel;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#setOrder(I)V
+#getOrder()I
+#afterPropertiesSet()V
+#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
@4.0.0.RELEASE
+#setDefaultChannel(Lorg/springframework/messaging/MessageChannel;)V
-#setDefaultChannel(Lorg/springframework/integration/MessageChannel;)V
@4.0.3.RELEASE
*#setDefaultChannel(Lorg/springframework/messaging/MessageChannel;)V[deprecated]
+#setDefaultChannelName(Ljava/lang/String;)V
@4.3.0.RELEASE
-#setDefaultChannel(Lorg/springframework/messaging/MessageChannel;)V[deprecated]
@5.1.3.RELEASE
+#setBeanName(Ljava/lang/String;)V
-#setBeanClassLoader(Ljava/lang/ClassLoader;)V
-#setOrder(I)V
-#getOrder()I
-#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
-#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
@5.5.7
+#afterSingletonsInstantiated()V
-#afterPropertiesSet()V

+###org/springframework/integration/aop/MessageSourceMutator
@5.0.7.RELEASE
+#beforeReceive(Lorg/springframework/integration/core/MessageSource;)Z
+#afterReceive(Lorg/springframework/messaging/Message;Lorg/springframework/integration/core/MessageSource;)Lorg/springframework/messaging/Message;
@5.3.0.RELEASE
+#beforeReceive(Ljava/lang/Object;)Z
+#afterReceive(Lorg/springframework/messaging/Message;Ljava/lang/Object;)Lorg/springframework/messaging/Message;

+###org/springframework/integration/aop/PublisherAnnotationAdvisor
@2.0.0.RELEASE
+#<init>([Ljava/lang/Class;)V
+#<init>()V
+#setDefaultChannel(Lorg/springframework/integration/MessageChannel;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#getAdvice()Lorg/aopalliance/aop/Advice;
+#getPointcut()Lorg/springframework/aop/Pointcut;
@4.0.0.RELEASE
+#setDefaultChannel(Lorg/springframework/messaging/MessageChannel;)V
-#setDefaultChannel(Lorg/springframework/integration/MessageChannel;)V
@4.0.3.RELEASE
*#setDefaultChannel(Lorg/springframework/messaging/MessageChannel;)V[deprecated]
+#setDefaultChannelName(Ljava/lang/String;)V
@4.3.0.RELEASE
-#setDefaultChannel(Lorg/springframework/messaging/MessageChannel;)V[deprecated]

+###org/springframework/integration/aop/MethodAnnotationPublisherMetadataSource
@2.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/Set;)V
+#setChannelAttributeName(Ljava/lang/String;)V
+#getChannelName(Ljava/lang/reflect/Method;)Ljava/lang/String;
+#getPayloadExpression(Ljava/lang/reflect/Method;)Ljava/lang/String;
+#getHeaderExpressions(Ljava/lang/reflect/Method;)Ljava/util/Map;
@5.0.4.RELEASE
+#getExpressionForPayload(Ljava/lang/reflect/Method;)Lorg/springframework/expression/Expression;
*#getPayloadExpression(Ljava/lang/reflect/Method;)Ljava/lang/String;[deprecated]
+#getExpressionsForHeaders(Ljava/lang/reflect/Method;)Ljava/util/Map;
*#getHeaderExpressions(Ljava/lang/reflect/Method;)Ljava/util/Map;[deprecated]
@5.2.0.RELEASE
-#getPayloadExpression(Ljava/lang/reflect/Method;)Ljava/lang/String;[deprecated]
-#getHeaderExpressions(Ljava/lang/reflect/Method;)Ljava/util/Map;[deprecated]

+###org/springframework/integration/transaction/DefaultTransactionSynchronizationFactory
@2.2.0.RELEASE
+#<init>(Lorg/springframework/integration/transaction/TransactionSynchronizationProcessor;)V
+#create(Ljava/lang/Object;)Lorg/springframework/transaction/support/TransactionSynchronization;

+###org/springframework/integration/transaction/TransactionSynchronizationProcessor
@2.2.0.RELEASE
+#processBeforeCommit(Lorg/springframework/integration/transaction/IntegrationResourceHolder;)V
+#processAfterCommit(Lorg/springframework/integration/transaction/IntegrationResourceHolder;)V
+#processAfterRollback(Lorg/springframework/integration/transaction/IntegrationResourceHolder;)V

+###org/springframework/integration/transaction/ExpressionEvaluatingTransactionSynchronizationProcessor
@2.2.0.RELEASE
+#<init>()V
+#setBeforeCommitChannel(Lorg/springframework/integration/MessageChannel;)V
+#setAfterCommitChannel(Lorg/springframework/integration/MessageChannel;)V
+#setAfterRollbackChannel(Lorg/springframework/integration/MessageChannel;)V
+#setBeforeCommitExpression(Lorg/springframework/expression/Expression;)V
+#setAfterCommitExpression(Lorg/springframework/expression/Expression;)V
+#setAfterRollbackExpression(Lorg/springframework/expression/Expression;)V
+#processBeforeCommit(Lorg/springframework/integration/transaction/IntegrationResourceHolder;)V
+#processAfterCommit(Lorg/springframework/integration/transaction/IntegrationResourceHolder;)V
+#processAfterRollback(Lorg/springframework/integration/transaction/IntegrationResourceHolder;)V
@3.0.3.RELEASE
+#setIntegrationEvaluationContext(Lorg/springframework/expression/EvaluationContext;)V
@4.0.0.RELEASE
+#setBeforeCommitChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setAfterCommitChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setAfterRollbackChannel(Lorg/springframework/messaging/MessageChannel;)V
-#setIntegrationEvaluationContext(Lorg/springframework/expression/EvaluationContext;)V
-#setBeforeCommitChannel(Lorg/springframework/integration/MessageChannel;)V
-#setAfterCommitChannel(Lorg/springframework/integration/MessageChannel;)V
-#setAfterRollbackChannel(Lorg/springframework/integration/MessageChannel;)V
@4.0.1.RELEASE
+#setIntegrationEvaluationContext(Lorg/springframework/expression/EvaluationContext;)V

+###org/springframework/integration/transaction/PseudoTransactionManager
@2.2.0.RELEASE
+#<init>()V

+###org/springframework/integration/transaction/TransactionSynchronizationFactoryBean
@4.0.1.RELEASE
+#<init>()V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#beforeCommit(Ljava/lang/String;)Lorg/springframework/integration/transaction/TransactionSynchronizationFactoryBean;
+#beforeCommit(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/transaction/TransactionSynchronizationFactoryBean;
+#beforeCommit(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/transaction/TransactionSynchronizationFactoryBean;
+#beforeCommit(Ljava/lang/String;Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/transaction/TransactionSynchronizationFactoryBean;
+#afterCommit(Ljava/lang/String;)Lorg/springframework/integration/transaction/TransactionSynchronizationFactoryBean;
+#afterCommit(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/transaction/TransactionSynchronizationFactoryBean;
+#afterCommit(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/transaction/TransactionSynchronizationFactoryBean;
+#afterCommit(Ljava/lang/String;Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/transaction/TransactionSynchronizationFactoryBean;
+#afterRollback(Ljava/lang/String;)Lorg/springframework/integration/transaction/TransactionSynchronizationFactoryBean;
+#afterRollback(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/transaction/TransactionSynchronizationFactoryBean;
+#afterRollback(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/transaction/TransactionSynchronizationFactoryBean;
+#afterRollback(Ljava/lang/String;Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/transaction/TransactionSynchronizationFactoryBean;
+#getObject()Lorg/springframework/integration/transaction/DefaultTransactionSynchronizationFactory;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#getObject()Ljava/lang/Object;
@4.1.3.RELEASE
+#channelResolver(Lorg/springframework/messaging/core/DestinationResolver;)Lorg/springframework/integration/transaction/TransactionSynchronizationFactoryBean;

+###org/springframework/integration/transaction/IntegrationResourceHolder
@2.2.0.RELEASE
+#<init>()V
+#setMessage(Lorg/springframework/integration/Message;)V
+#getMessage()Lorg/springframework/integration/Message;
+#addAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#getAttributes()Ljava/util/Map;
+#reset()V
+#unbound()V
+#isVoid()Z
@4.0.0.RELEASE
+#setMessage(Lorg/springframework/messaging/Message;)V
+#getMessage()Lorg/springframework/messaging/Message;
-#setMessage(Lorg/springframework/integration/Message;)V
-#getMessage()Lorg/springframework/integration/Message;

+###org/springframework/integration/transaction/TransactionInterceptorBuilder
@5.0.0.RELEASE
+#<init>()V
+#<init>(Z)V
+#propagation(Lorg/springframework/transaction/annotation/Propagation;)Lorg/springframework/integration/transaction/TransactionInterceptorBuilder;
+#isolation(Lorg/springframework/transaction/annotation/Isolation;)Lorg/springframework/integration/transaction/TransactionInterceptorBuilder;
+#timeout(I)Lorg/springframework/integration/transaction/TransactionInterceptorBuilder;
+#readOnly(Z)Lorg/springframework/integration/transaction/TransactionInterceptorBuilder;
+#transactionAttribute(Lorg/springframework/transaction/interceptor/TransactionAttribute;)Lorg/springframework/integration/transaction/TransactionInterceptorBuilder;
+#transactionManager(Lorg/springframework/transaction/PlatformTransactionManager;)Lorg/springframework/integration/transaction/TransactionInterceptorBuilder;
+#build()Lorg/springframework/transaction/interceptor/TransactionInterceptor;
@5.2.5.RELEASE
+#transactionManager(Lorg/springframework/transaction/TransactionManager;)Lorg/springframework/integration/transaction/TransactionInterceptorBuilder;
*#transactionManager(Lorg/springframework/transaction/PlatformTransactionManager;)Lorg/springframework/integration/transaction/TransactionInterceptorBuilder;[deprecated]
@5.3.0.RELEASE
-#transactionManager(Lorg/springframework/transaction/PlatformTransactionManager;)Lorg/springframework/integration/transaction/TransactionInterceptorBuilder;[deprecated]

+###org/springframework/integration/transaction/PassThroughTransactionSynchronizationFactory
@5.0.0.RELEASE
+#<init>()V
+#create(Ljava/lang/Object;)Lorg/springframework/transaction/support/TransactionSynchronization;

+###org/springframework/integration/transaction/TransactionHandleMessageAdvice
@5.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/transaction/PlatformTransactionManager;Ljava/util/Properties;)V
+#<init>(Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/interceptor/TransactionAttributeSource;)V
@5.2.5.RELEASE
+#<init>(Lorg/springframework/transaction/TransactionManager;Lorg/springframework/transaction/interceptor/TransactionAttributeSource;)V
*#<init>(Lorg/springframework/transaction/PlatformTransactionManager;Ljava/util/Properties;)V[deprecated]
*#<init>(Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/interceptor/TransactionAttributeSource;)V[deprecated]
@5.3.0.RELEASE
+#<init>(Lorg/springframework/transaction/TransactionManager;Ljava/util/Properties;)V
-#<init>(Lorg/springframework/transaction/PlatformTransactionManager;Ljava/util/Properties;)V[deprecated]
-#<init>(Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/interceptor/TransactionAttributeSource;)V[deprecated]

+###org/springframework/integration/transaction/TransactionSynchronizationFactory
@2.2.0.RELEASE
+#create(Ljava/lang/Object;)Lorg/springframework/transaction/support/TransactionSynchronization;

+###org/springframework/integration/transaction/IntegrationResourceHolderSynchronization
@4.0.1.RELEASE
+#<init>(Lorg/springframework/integration/transaction/IntegrationResourceHolder;Ljava/lang/Object;)V
+#getResourceHolder()Lorg/springframework/integration/transaction/IntegrationResourceHolder;
@5.0.0.RELEASE
+#setShouldUnbindAtCompletion(Z)V

+###org/springframework/integration/leader/AbstractCandidate
@4.2.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getRole()Ljava/lang/String;
+#getId()Ljava/lang/String;
+#onGranted(Lorg/springframework/integration/leader/Context;)V
+#onRevoked(Lorg/springframework/integration/leader/Context;)V

+###org/springframework/integration/leader/Context
@4.2.0.RELEASE
+#isLeader()Z
+#yield()V
@5.0.6.RELEASE
+#getRole()Ljava/lang/String;

+###org/springframework/integration/leader/DefaultCandidate
@4.2.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#onGranted(Lorg/springframework/integration/leader/Context;)V
+#onRevoked(Lorg/springframework/integration/leader/Context;)V
+#yieldLeadership()V
+#toString()Ljava/lang/String;

+###org/springframework/integration/leader/Candidate
@4.2.0.RELEASE
+#getRole()Ljava/lang/String;
+#getId()Ljava/lang/String;
+#onGranted(Lorg/springframework/integration/leader/Context;)V
+#onRevoked(Lorg/springframework/integration/leader/Context;)V

+###org/springframework/integration/leader/event/DefaultLeaderEventPublisher
@4.2.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/context/ApplicationEventPublisher;)V
+#publishOnGranted(Ljava/lang/Object;Lorg/springframework/integration/leader/Context;Ljava/lang/String;)V
+#publishOnRevoked(Ljava/lang/Object;Lorg/springframework/integration/leader/Context;Ljava/lang/String;)V
+#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
@5.0.0.RELEASE
+#publishOnFailedToAcquire(Ljava/lang/Object;Lorg/springframework/integration/leader/Context;Ljava/lang/String;)V

+###org/springframework/integration/leader/event/AbstractLeaderEvent
@4.2.0.RELEASE
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Lorg/springframework/integration/leader/Context;Ljava/lang/String;)V
+#getContext()Lorg/springframework/integration/leader/Context;
+#getRole()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/springframework/integration/leader/event/LeaderEventPublisher
@4.2.0.RELEASE
+#publishOnGranted(Ljava/lang/Object;Lorg/springframework/integration/leader/Context;Ljava/lang/String;)V
+#publishOnRevoked(Ljava/lang/Object;Lorg/springframework/integration/leader/Context;Ljava/lang/String;)V
@5.0.0.RELEASE
+#publishOnFailedToAcquire(Ljava/lang/Object;Lorg/springframework/integration/leader/Context;Ljava/lang/String;)V

+###org/springframework/integration/leader/event/OnRevokedEvent
@4.2.0.RELEASE
+#<init>(Ljava/lang/Object;Lorg/springframework/integration/leader/Context;Ljava/lang/String;)V

+###org/springframework/integration/leader/event/OnGrantedEvent
@4.2.0.RELEASE
+#<init>(Ljava/lang/Object;Lorg/springframework/integration/leader/Context;Ljava/lang/String;)V

+###org/springframework/integration/leader/event/OnFailedToAcquireMutexEvent
@5.0.0.RELEASE
+#<init>(Ljava/lang/Object;Lorg/springframework/integration/leader/Context;Ljava/lang/String;)V

+###org/springframework/integration/events/IntegrationEvent
@5.1.0.RELEASE
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#getCause()Ljava/lang/Throwable;
+#toString()Ljava/lang/String;
@5.4.0
+#getSourceAsType()Ljava/lang/Object;

+###org/springframework/integration/util/CompoundTrigger
@4.3.0.RELEASE
+#<init>(Lorg/springframework/scheduling/Trigger;)V
+#setPrimary(Lorg/springframework/scheduling/Trigger;)V
+#setOverride(Lorg/springframework/scheduling/Trigger;)V
+#nextExecutionTime(Lorg/springframework/scheduling/TriggerContext;)Ljava/util/Date;
@6.0.0
+#nextExecution(Lorg/springframework/scheduling/TriggerContext;)Ljava/time/Instant;
-#nextExecutionTime(Lorg/springframework/scheduling/TriggerContext;)Ljava/util/Date;

+###org/springframework/integration/util/MessagingAnnotationUtils
@4.1.0.RELEASE
+#resolveAttribute(Ljava/util/List;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#hasValue(Ljava/lang/Object;)Z
+#findAnnotatedMethod(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/reflect/Method;
+#findMessagePartAnnotation([Ljava/lang/annotation/Annotation;Z)Ljava/lang/annotation/Annotation;
@5.0.4.RELEASE
+#endpointIdValue(Ljava/lang/reflect/Method;)Ljava/lang/String;
@6.0.0
+#endpointIdValue(Lorg/springframework/core/annotation/MergedAnnotations;)Ljava/lang/String;
+#getAnnotationChain(Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Ljava/util/List;

+###org/springframework/integration/util/UpperBound
@2.0.0.RELEASE
+#<init>(I)V
+#tryAcquire(J)Z
+#release()V
@2.0.4.RELEASE
+#release(I)V
@2.1.0.RELEASE
+#availablePermits()I
@4.3.0.RELEASE
+#toString()Ljava/lang/String;

+###org/springframework/integration/util/Pool
@2.2.0.RELEASE
+#getItem()Ljava/lang/Object;
+#releaseItem(Ljava/lang/Object;)V
+#removeAllIdleItems()V
+#getPoolSize()I
+#getIdleCount()I
+#getActiveCount()I
+#getAllocatedCount()I
@5.1.12.RELEASE
+#close()V
@5.2.0.RELEASE
-#close()V
@5.2.8.RELEASE
+#close()V
@5.3.0.RELEASE
-#close()V
@5.3.2.RELEASE
+#close()V

+###org/springframework/integration/util/PoolItemNotAvailableException
@5.1.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V

+###org/springframework/integration/util/ClassUtils
@2.0.0.RELEASE
+#<init>()V
+#findClosestMatch(Ljava/lang/Class;Ljava/util/Set;Z)Ljava/lang/Class;
@2.2.7.RELEASE
+#resolvePrimitiveType(Ljava/lang/Class;)Ljava/lang/Class;
@5.2.0.RELEASE
+#isLambda(Ljava/lang/Class;)Z
+#isKotlinFaction0(Ljava/lang/Class;)Z
+#isKotlinFaction1(Ljava/lang/Class;)Z
@5.3.2.RELEASE
+#isKotlinUnit(Ljava/lang/Class;)Z
@5.5.14
*#isKotlinFaction0(Ljava/lang/Class;)Z[deprecated]
+#isKotlinFunction0(Ljava/lang/Class;)Z
*#isKotlinFaction1(Ljava/lang/Class;)Z[deprecated]
+#isKotlinFunction1(Ljava/lang/Class;)Z
@6.0.0
-#isKotlinFaction0(Ljava/lang/Class;)Z[deprecated]
-#isKotlinFaction1(Ljava/lang/Class;)Z[deprecated]

+###org/springframework/integration/util/UniqueMethodFilter
@2.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#matches(Ljava/lang/reflect/Method;)Z

+###org/springframework/integration/util/WhileLockedProcessor
@2.2.0.RELEASE
+#<init>(Lorg/springframework/integration/util/LockRegistry;Ljava/lang/Object;)V
+#doWhileLocked()V
@4.0.0.RELEASE
+#<init>(Lorg/springframework/integration/support/locks/LockRegistry;Ljava/lang/Object;)V
-#<init>(Lorg/springframework/integration/util/LockRegistry;Ljava/lang/Object;)V

+###org/springframework/integration/util/CompositeExecutor
@3.0.3.RELEASE
+#<init>(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V
+#execute(Ljava/lang/Runnable;)V
+#execute2(Ljava/lang/Runnable;)V
@4.0.0.RELEASE
-###org/springframework/integration/util/CompositeExecutor

+###org/springframework/integration/util/CloseableIterator
@4.3.15.RELEASE
@5.0.0.RELEASE
-###org/springframework/integration/util/CloseableIterator

+###org/springframework/integration/util/FunctionIterator
@4.0.4.RELEASE
+#<init>(Ljava/lang/Iterable;Lorg/springframework/integration/util/Function;)V
+#<init>(Ljava/util/Iterator;Lorg/springframework/integration/util/Function;)V
+#remove()V
+#hasNext()Z
+#next()Ljava/lang/Object;
@4.1.0.RELEASE
+#<init>(Ljava/lang/Iterable;Lreactor/function/Function;)V
+#<init>(Ljava/util/Iterator;Lreactor/function/Function;)V
-#<init>(Ljava/lang/Iterable;Lorg/springframework/integration/util/Function;)V
-#<init>(Ljava/util/Iterator;Lorg/springframework/integration/util/Function;)V
@4.2.0.RELEASE
+#<init>(Ljava/lang/Iterable;Lorg/springframework/integration/util/Function;)V
+#<init>(Ljava/util/Iterator;Lorg/springframework/integration/util/Function;)V
-#<init>(Ljava/lang/Iterable;Lreactor/function/Function;)V
-#<init>(Ljava/util/Iterator;Lreactor/function/Function;)V
@4.3.15.RELEASE
+#close()V
@5.0.0.RELEASE
+#<init>(Ljava/lang/Iterable;Ljava/util/function/Function;)V
+#<init>(Ljava/util/Iterator;Ljava/util/function/Function;)V
-#<init>(Ljava/lang/Iterable;Lorg/springframework/integration/util/Function;)V
-#<init>(Ljava/util/Iterator;Lorg/springframework/integration/util/Function;)V
-#close()V
@5.0.4.RELEASE
+#close()V
@5.0.7.RELEASE
+#<init>(Ljava/lang/AutoCloseable;Ljava/lang/Iterable;Ljava/util/function/Function;)V
+#<init>(Ljava/lang/AutoCloseable;Ljava/util/Iterator;Ljava/util/function/Function;)V
-#remove()V

+###org/springframework/integration/util/SimplePool
@2.2.0.RELEASE
+#<init>(ILorg/springframework/integration/util/SimplePool$PoolItemCallback;)V
+#setPoolSize(I)V
+#getPoolSize()I
+#getIdleCount()I
+#getActiveCount()I
+#getAllocatedCount()I
+#setWaitTimeout(J)V
+#getItem()Ljava/lang/Object;
+#releaseItem(Ljava/lang/Object;)V
+#removeAllIdleItems()V
@4.3.23.RELEASE
+#close()V
@5.0.0.RELEASE
-#close()V
@5.1.12.RELEASE
+#close()V
@5.2.0.RELEASE
-#close()V
@5.2.8.RELEASE
+#close()V
@5.3.0.RELEASE
-#close()V
@5.3.2.RELEASE
+#close()V

+###org/springframework/integration/util/SimplePool$PoolItemCallback
@2.2.0.RELEASE
+#createForPool()Ljava/lang/Object;
+#isStale(Ljava/lang/Object;)Z
+#removedFromPool(Ljava/lang/Object;)V

+###org/springframework/integration/util/BeanFactoryTypeConverter
@2.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/core/convert/ConversionService;)V
+#setConversionService(Lorg/springframework/core/convert/ConversionService;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#canConvert(Ljava/lang/Class;Ljava/lang/Class;)Z
+#canConvert(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
+#convertValue(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;

+###org/springframework/integration/util/CallerBlocksPolicy
@3.0.3.RELEASE
+#<init>(J)V
+#rejectedExecution(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V
@4.0.0.RELEASE
-###org/springframework/integration/util/CallerBlocksPolicy

+###org/springframework/integration/util/DynamicPeriodicTrigger
@4.2.0.RELEASE
+#<init>(J)V
+#<init>(JLjava/util/concurrent/TimeUnit;)V
+#setInitialDelay(J)V
+#setFixedRate(Z)V
+#nextExecutionTime(Lorg/springframework/scheduling/TriggerContext;)Ljava/util/Date;
+#getPeriod()J
+#setPeriod(J)V
+#getTimeUnit()Ljava/util/concurrent/TimeUnit;
+#setTimeUnit(Ljava/util/concurrent/TimeUnit;)V
+#getInitialDelay()J
+#isFixedRate()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.1.0.RELEASE
*#<init>(JLjava/util/concurrent/TimeUnit;)V[deprecated]
+#<init>(Ljava/time/Duration;)V
*#setInitialDelay(J)V[deprecated]
+#setInitialDuration(Ljava/time/Duration;)V
+#getDuration()Ljava/time/Duration;
+#setDuration(Ljava/time/Duration;)V
+#getInitialDuration()Ljava/time/Duration;
*#getPeriod()J[deprecated]
*#setPeriod(J)V[deprecated]
*#getTimeUnit()Ljava/util/concurrent/TimeUnit;[deprecated]
*#setTimeUnit(Ljava/util/concurrent/TimeUnit;)V[deprecated]
*#getInitialDelay()J[deprecated]
@5.3.0.RELEASE
-#<init>(JLjava/util/concurrent/TimeUnit;)V[deprecated]
-#setInitialDelay(J)V[deprecated]
-#getPeriod()J[deprecated]
-#setPeriod(J)V[deprecated]
-#getTimeUnit()Ljava/util/concurrent/TimeUnit;[deprecated]
-#setTimeUnit(Ljava/util/concurrent/TimeUnit;)V[deprecated]
-#getInitialDelay()J[deprecated]
@6.0.0
+#nextExecution(Lorg/springframework/scheduling/TriggerContext;)Ljava/time/Instant;
-#nextExecutionTime(Lorg/springframework/scheduling/TriggerContext;)Ljava/util/Date;

+###org/springframework/integration/util/FixedMethodFilter
@2.0.0.RELEASE
+#<init>(Ljava/lang/reflect/Method;)V
+#filter(Ljava/util/List;)Ljava/util/List;

+###org/springframework/integration/util/ErrorHandlingTaskExecutor
@1.0.1.RELEASE
+#<init>(Lorg/springframework/core/task/TaskExecutor;Lorg/springframework/integration/util/ErrorHandler;)V
+#execute(Ljava/lang/Runnable;)V
@2.0.0.RELEASE
+#<init>(Ljava/util/concurrent/Executor;Lorg/springframework/util/ErrorHandler;)V
-#<init>(Lorg/springframework/core/task/TaskExecutor;Lorg/springframework/integration/util/ErrorHandler;)V
@5.0.7.RELEASE
+#isSyncExecutor()Z

+###org/springframework/integration/util/AnnotatedMethodFilter
@2.0.0.RELEASE
+#<init>(Ljava/lang/Class;Ljava/lang/String;Z)V
+#filter(Ljava/util/List;)Ljava/util/List;

+###org/springframework/integration/util/StackTraceUtils
@3.0.0.RELEASE
+#isFrameContainingXBeforeFrameContainingY(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/StackTraceElement;)Z

+###org/springframework/integration/util/AcceptOnceCollectionFilter
@2.1.0.RELEASE
+#<init>()V
+#filter(Ljava/util/Collection;)Ljava/util/Collection;

+###org/springframework/integration/util/AbstractExpressionEvaluator
@2.0.0.RELEASE
+#<init>()V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#setBeanResolver(Lorg/springframework/expression/BeanResolver;)V
+#setConversionService(Lorg/springframework/core/convert/ConversionService;)V
@3.0.0.RELEASE
+#afterPropertiesSet()V
-#setBeanResolver(Lorg/springframework/expression/BeanResolver;)V

+###org/springframework/integration/util/CollectionFilter
@2.1.0.RELEASE
+#filter(Ljava/util/Collection;)Ljava/util/Collection;

+###org/springframework/integration/util/UUIDConverter
@2.0.0.RELEASE
+#<init>()V
+#convert(Ljava/lang/Object;)Ljava/util/UUID;
+#getUUID(Ljava/lang/Object;)Ljava/util/UUID;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/integration/resource/ResourceRetrievingMessageSource
@2.1.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#setPatternResolver(Lorg/springframework/core/io/support/ResourcePatternResolver;)V
+#setFilter(Lorg/springframework/integration/util/CollectionFilter;)V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#afterPropertiesSet()V
@4.0.0.RELEASE
+#getComponentType()Ljava/lang/String;
@5.1.0.RELEASE
-#afterPropertiesSet()V

+###org/springframework/integration/MessageDeliveryException
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/integration/Message;)V
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;)V
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
@4.0.0.RELEASE
-###org/springframework/integration/MessageDeliveryException

+###org/springframework/integration/Message
@2.0.0.RELEASE
+#getHeaders()Lorg/springframework/integration/MessageHeaders;
+#getPayload()Ljava/lang/Object;
@4.0.0.RELEASE
-###org/springframework/integration/Message

+###org/springframework/integration/MessagingException
@2.0.0.RELEASE
+#<init>(Lorg/springframework/integration/Message;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;)V
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getFailedMessage()Lorg/springframework/integration/Message;
+#setFailedMessage(Lorg/springframework/integration/Message;)V
@4.0.0.RELEASE
-###org/springframework/integration/MessagingException

+###org/springframework/integration/MessageChannel
@2.0.0.RELEASE
+#send(Lorg/springframework/integration/Message;)Z
+#send(Lorg/springframework/integration/Message;J)Z
@4.0.0.RELEASE
-###org/springframework/integration/MessageChannel

+###org/springframework/integration/MessageHeaders$IdGenerator
@2.0.4.RELEASE
+#generateId()Ljava/util/UUID;
@4.0.0.RELEASE
-###org/springframework/integration/MessageHeaders$IdGenerator

+###org/springframework/integration/MessageHandlingException
@2.0.0.RELEASE
+#<init>(Lorg/springframework/integration/Message;)V
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;)V
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
@4.0.0.RELEASE
-###org/springframework/integration/MessageHandlingException

+###org/springframework/integration/MessageHeaders
@2.0.0.RELEASE
+#<init>(Ljava/util/Map;)V
+#getId()Ljava/util/UUID;
+#getTimestamp()Ljava/lang/Long;
+#getExpirationDate()Ljava/lang/Long;
+#getCorrelationId()Ljava/lang/Object;
+#getReplyChannel()Ljava/lang/Object;
+#getErrorChannel()Ljava/lang/Object;
+#getSequenceNumber()Ljava/lang/Integer;
+#getSequenceSize()Ljava/lang/Integer;
+#getPriority()Ljava/lang/Integer;
+#get(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#entrySet()Ljava/util/Set;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#isEmpty()Z
+#keySet()Ljava/util/Set;
+#size()I
+#values()Ljava/util/Collection;
+#put(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@4.0.0.RELEASE
-###org/springframework/integration/MessageHeaders

+###org/springframework/integration/annotation/Payload
@2.0.0.RELEASE
+#value()Ljava/lang/String;
@5.0.0.RELEASE
-###org/springframework/integration/annotation/Payload

+###org/springframework/integration/annotation/Headers
@1.0.1.RELEASE
@5.0.0.RELEASE
-###org/springframework/integration/annotation/Headers

+###org/springframework/integration/annotation/Header
@1.0.1.RELEASE
+#value()Ljava/lang/String;
+#required()Z
@5.0.0.RELEASE
-###org/springframework/integration/annotation/Header

+###org/springframework/integration/channel/ChannelInterceptor
@1.0.1.RELEASE
+#preSend(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;)Lorg/springframework/integration/core/Message;
+#postSend(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;Z)V
+#preReceive(Lorg/springframework/integration/core/MessageChannel;)Z
+#postReceive(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;)Lorg/springframework/integration/core/Message;
@2.0.0.RELEASE
+#preSend(Lorg/springframework/integration/Message;Lorg/springframework/integration/MessageChannel;)Lorg/springframework/integration/Message;
+#postSend(Lorg/springframework/integration/Message;Lorg/springframework/integration/MessageChannel;Z)V
+#preReceive(Lorg/springframework/integration/MessageChannel;)Z
+#postReceive(Lorg/springframework/integration/Message;Lorg/springframework/integration/MessageChannel;)Lorg/springframework/integration/Message;
-#preSend(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;)Lorg/springframework/integration/core/Message;
-#postSend(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;Z)V
-#preReceive(Lorg/springframework/integration/core/MessageChannel;)Z
-#postReceive(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;)Lorg/springframework/integration/core/Message;
@4.0.0.RELEASE
-###org/springframework/integration/channel/ChannelInterceptor

+###org/springframework/integration/channel/interceptor/ChannelInterceptorAdapter
@1.0.1.RELEASE
+#<init>()V
+#preSend(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;)Lorg/springframework/integration/core/Message;
+#postSend(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;Z)V
+#preReceive(Lorg/springframework/integration/core/MessageChannel;)Z
+#postReceive(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;)Lorg/springframework/integration/core/Message;
@2.0.0.RELEASE
+#preSend(Lorg/springframework/integration/Message;Lorg/springframework/integration/MessageChannel;)Lorg/springframework/integration/Message;
+#postSend(Lorg/springframework/integration/Message;Lorg/springframework/integration/MessageChannel;Z)V
+#preReceive(Lorg/springframework/integration/MessageChannel;)Z
+#postReceive(Lorg/springframework/integration/Message;Lorg/springframework/integration/MessageChannel;)Lorg/springframework/integration/Message;
-#preSend(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;)Lorg/springframework/integration/core/Message;
-#postSend(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;Z)V
-#preReceive(Lorg/springframework/integration/core/MessageChannel;)Z
-#postReceive(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;)Lorg/springframework/integration/core/Message;
@4.0.0.RELEASE
-###org/springframework/integration/channel/interceptor/ChannelInterceptorAdapter

+###org/springframework/integration/aggregator/PassThroughMessageGroupProcessor
@2.0.0.RELEASE
+#<init>()V
+#processMessageGroup(Lorg/springframework/integration/store/MessageGroup;)Ljava/lang/Object;
@5.0.0.RELEASE
-###org/springframework/integration/aggregator/PassThroughMessageGroupProcessor

+###org/springframework/integration/aggregator/SequenceNumberComparator
@2.0.0.RELEASE
+#<init>()V
+#compare(Lorg/springframework/integration/Message;Lorg/springframework/integration/Message;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@4.0.0.RELEASE
+#compare(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/Message;)I
-#compare(Lorg/springframework/integration/Message;Lorg/springframework/integration/Message;)I
@5.0.0.RELEASE
-###org/springframework/integration/aggregator/SequenceNumberComparator

+###org/springframework/integration/transformer/MessageTransformingChannelInterceptor
@1.0.1.RELEASE
+#<init>(Lorg/springframework/integration/transformer/Transformer;)V
+#getTransformOnSend()Z
+#setTransformOnSend(Z)V
+#preSend(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;)Lorg/springframework/integration/core/Message;
+#postReceive(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;)Lorg/springframework/integration/core/Message;
@2.0.0.RELEASE
+#preSend(Lorg/springframework/integration/Message;Lorg/springframework/integration/MessageChannel;)Lorg/springframework/integration/Message;
+#postReceive(Lorg/springframework/integration/Message;Lorg/springframework/integration/MessageChannel;)Lorg/springframework/integration/Message;
-#preSend(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;)Lorg/springframework/integration/core/Message;
-#postReceive(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;)Lorg/springframework/integration/core/Message;
@4.0.0.RELEASE
+#preSend(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/messaging/Message;
+#postReceive(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/messaging/Message;
-#preSend(Lorg/springframework/integration/Message;Lorg/springframework/integration/MessageChannel;)Lorg/springframework/integration/Message;
-#postReceive(Lorg/springframework/integration/Message;Lorg/springframework/integration/MessageChannel;)Lorg/springframework/integration/Message;
@5.0.0.RELEASE
-###org/springframework/integration/transformer/MessageTransformingChannelInterceptor

+###org/springframework/integration/transformer/HeaderEnricher$HeaderValueMessageProcessor
@2.0.0.RELEASE
+#isOverwrite()Ljava/lang/Boolean;
@3.0.0.RELEASE
-###org/springframework/integration/transformer/HeaderEnricher$HeaderValueMessageProcessor

+###org/springframework/integration/history/TrackableComponent
@2.0.0.RELEASE
+#setShouldTrack(Z)V
@4.2.0.RELEASE
-###org/springframework/integration/history/TrackableComponent

+###org/springframework/integration/router/MappingMessageRouterManagement
@2.1.1.RELEASE
+#setChannelMapping(Ljava/lang/String;Ljava/lang/String;)V
+#removeChannelMapping(Ljava/lang/String;)V
@4.0.0.RELEASE
+#replaceChannelMappings(Ljava/util/Properties;)V
+#getChannelMappings()Ljava/util/Map;
+#setChannelMappings(Ljava/util/Map;)V
@4.2.0.RELEASE
-###org/springframework/integration/router/MappingMessageRouterManagement

+###org/springframework/integration/context/NamedComponent
@2.0.0.RELEASE
+#getComponentName()Ljava/lang/String;
+#getComponentType()Ljava/lang/String;
@3.0.0.RELEASE
-###org/springframework/integration/context/NamedComponent

+###org/springframework/integration/util/LockRegistry
@2.0.6.RELEASE
+#obtain(Ljava/lang/Object;)Ljava/util/concurrent/locks/Lock;
@2.1.0.RELEASE
-###org/springframework/integration/util/LockRegistry

+###org/springframework/integration/util/MessagingMethodInvokerHelper
@2.0.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;Ljava/lang/Class;Z)V
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;Z)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;Z)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;Z)V
+#<init>(Ljava/lang/Object;Ljava/lang/Class;Z)V
+#<init>(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;Z)V
+#process(Lorg/springframework/integration/Message;)Ljava/lang/Object;
+#process(Ljava/util/Collection;Ljava/util/Map;)Ljava/lang/Object;
+#toString()Ljava/lang/String;
@4.0.0.RELEASE
+#process(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
-#process(Lorg/springframework/integration/Message;)Ljava/lang/Object;
@4.2.0.RELEASE
+#start()V
+#stop()V
+#isRunning()Z
@5.0.0.RELEASE
+#setUseSpelInvoker(Z)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#setConversionService(Lorg/springframework/core/convert/ConversionService;)V
@5.1.0.RELEASE
-###org/springframework/integration/util/MessagingMethodInvokerHelper

+###org/springframework/integration/util/DefaultLockRegistry
@2.0.6.RELEASE
+#<init>()V
+#<init>(I)V
+#obtain(Ljava/lang/Object;)Ljava/util/concurrent/locks/Lock;
@2.1.0.RELEASE
-###org/springframework/integration/util/DefaultLockRegistry

+###org/springframework/integration/store/SimpleMetadataStore
@2.0.0.RELEASE
+#<init>()V
+#put(Ljava/lang/String;Ljava/lang/String;)V
+#get(Ljava/lang/String;)Ljava/lang/String;
@3.0.0.RELEASE
-###org/springframework/integration/store/SimpleMetadataStore

+###org/springframework/integration/store/PropertiesPersistingMetadataStore
@2.0.0.RELEASE
+#<init>()V
+#setBaseDirectory(Ljava/lang/String;)V
+#afterPropertiesSet()V
+#put(Ljava/lang/String;Ljava/lang/String;)V
+#get(Ljava/lang/String;)Ljava/lang/String;
+#destroy()V
@3.0.0.RELEASE
-###org/springframework/integration/store/PropertiesPersistingMetadataStore

+###org/springframework/integration/store/MetadataStore
@2.0.0.RELEASE
+#put(Ljava/lang/String;Ljava/lang/String;)V
+#get(Ljava/lang/String;)Ljava/lang/String;
@3.0.0.RELEASE
-###org/springframework/integration/store/MetadataStore

+###org/springframework/integration/store/MessageGroupCallback
@2.0.0.RELEASE
+#execute(Lorg/springframework/integration/store/MessageGroupStore;Lorg/springframework/integration/store/MessageGroup;)V
@3.0.0.RELEASE
-###org/springframework/integration/store/MessageGroupCallback

+###org/springframework/integration/message/ErrorMessage
@1.0.1.RELEASE
+#<init>(Ljava/lang/Throwable;)V
@2.0.0.RELEASE
+#<init>(Ljava/lang/Throwable;Ljava/util/Map;)V
@4.0.0.RELEASE
-###org/springframework/integration/message/ErrorMessage

+###org/springframework/integration/message/GenericMessage
@1.0.1.RELEASE
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/util/Map;)V
+#getHeaders()Lorg/springframework/integration/core/MessageHeaders;
+#getPayload()Ljava/lang/Object;
+#toString()Ljava/lang/String;
@1.0.2.RELEASE
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@2.0.0.RELEASE
+#getHeaders()Lorg/springframework/integration/MessageHeaders;
-#getHeaders()Lorg/springframework/integration/core/MessageHeaders;
@4.0.0.RELEASE
-###org/springframework/integration/message/GenericMessage

+###org/springframework/integration/json/JsonInboundMessageMapper
@2.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#<init>(Lorg/codehaus/jackson/type/TypeReference;)V
+#setObjectMapper(Lorg/codehaus/jackson/map/ObjectMapper;)V
+#setHeaderTypes(Ljava/util/Map;)V
+#setMapToPayload(Z)V
+#toMessage(Ljava/lang/String;)Lorg/springframework/integration/Message;
+#toMessage(Ljava/lang/Object;)Lorg/springframework/integration/Message;
@3.0.0.RELEASE
-###org/springframework/integration/json/JsonInboundMessageMapper

+###org/springframework/integration/json/JsonOutboundMessageMapper
@2.0.0.RELEASE
+#<init>()V
+#setObjectMapper(Lorg/codehaus/jackson/map/ObjectMapper;)V
+#setShouldExtractPayload(Z)V
+#fromMessage(Lorg/springframework/integration/Message;)Ljava/lang/String;
+#fromMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;
@3.0.0.RELEASE
-###org/springframework/integration/json/JsonOutboundMessageMapper

+###org/springframework/integration/support/channel/ChannelResolutionException
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@4.0.0.RELEASE
-###org/springframework/integration/support/channel/ChannelResolutionException

+###org/springframework/integration/support/channel/ChannelResolver
@2.0.0.RELEASE
+#resolveChannelName(Ljava/lang/String;)Lorg/springframework/integration/MessageChannel;
@4.0.0.RELEASE
-###org/springframework/integration/support/channel/ChannelResolver

+###org/springframework/integration/support/converter/MessageConversionException
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/integration/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
@4.0.0.RELEASE
-###org/springframework/integration/support/converter/MessageConversionException

+###org/springframework/integration/support/converter/MessageConverter
@2.0.0.RELEASE
+#toMessage(Ljava/lang/Object;)Lorg/springframework/integration/Message;
+#fromMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;
@4.0.0.RELEASE
-###org/springframework/integration/support/converter/MessageConverter

+###org/springframework/integration/core/MessageHandler
@2.0.0.RELEASE
+#handleMessage(Lorg/springframework/integration/Message;)V
@4.0.0.RELEASE
-###org/springframework/integration/core/MessageHandler

+###org/springframework/integration/core/MessagePostProcessor
@2.0.0.RELEASE
+#postProcessMessage(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
@4.0.0.RELEASE
-###org/springframework/integration/core/MessagePostProcessor

+###org/springframework/integration/core/PollableChannel
@2.0.0.RELEASE
+#receive()Lorg/springframework/integration/Message;
+#receive(J)Lorg/springframework/integration/Message;
@4.0.0.RELEASE
-###org/springframework/integration/core/PollableChannel

+###org/springframework/integration/core/SubscribableChannel
@2.0.0.RELEASE
+#subscribe(Lorg/springframework/integration/core/MessageHandler;)Z
+#unsubscribe(Lorg/springframework/integration/core/MessageHandler;)Z
@4.0.0.RELEASE
-###org/springframework/integration/core/SubscribableChannel

+###org/springframework/integration/core/MessagingOperations
@2.0.0.RELEASE
+#send(Lorg/springframework/integration/Message;)V
+#send(Lorg/springframework/integration/MessageChannel;Lorg/springframework/integration/Message;)V
+#send(Ljava/lang/String;Lorg/springframework/integration/Message;)V
+#convertAndSend(Ljava/lang/Object;)V
+#convertAndSend(Lorg/springframework/integration/MessageChannel;Ljava/lang/Object;)V
+#convertAndSend(Ljava/lang/String;Ljava/lang/Object;)V
+#convertAndSend(Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)V
+#convertAndSend(Lorg/springframework/integration/MessageChannel;Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)V
+#convertAndSend(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)V
+#receive()Lorg/springframework/integration/Message;
+#receive(Lorg/springframework/integration/core/PollableChannel;)Lorg/springframework/integration/Message;
+#receive(Ljava/lang/String;)Lorg/springframework/integration/Message;
+#receiveAndConvert()Ljava/lang/Object;
+#receiveAndConvert(Lorg/springframework/integration/core/PollableChannel;)Ljava/lang/Object;
+#receiveAndConvert(Ljava/lang/String;)Ljava/lang/Object;
+#sendAndReceive(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
+#sendAndReceive(Lorg/springframework/integration/MessageChannel;Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
+#sendAndReceive(Ljava/lang/String;Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
+#convertSendAndReceive(Ljava/lang/Object;)Ljava/lang/Object;
+#convertSendAndReceive(Lorg/springframework/integration/MessageChannel;Ljava/lang/Object;)Ljava/lang/Object;
+#convertSendAndReceive(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#convertSendAndReceive(Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)Ljava/lang/Object;
+#convertSendAndReceive(Lorg/springframework/integration/MessageChannel;Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)Ljava/lang/Object;
+#convertSendAndReceive(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/integration/core/MessagePostProcessor;)Ljava/lang/Object;
@4.0.0.RELEASE
-###org/springframework/integration/core/MessagingOperations

+###org/springframework/integration/config/annotation/AnnotationMetadataAdapter
@5.2.0.RELEASE
+#<init>()V
+#getAnnotatedMethods(Ljava/lang/String;)Ljava/util/Set;
+#getAnnotations()Lorg/springframework/core/annotation/MergedAnnotations;
+#getClassName()Ljava/lang/String;
+#isInterface()Z
+#isAnnotation()Z
+#isAbstract()Z
+#isFinal()Z
+#isIndependent()Z
+#getEnclosingClassName()Ljava/lang/String;
+#getSuperClassName()Ljava/lang/String;
+#getInterfaceNames()[Ljava/lang/String;
+#getMemberClassNames()[Ljava/lang/String;

+###org/springframework/integration/dsl/BaseIntegrationFlowDefinition
@5.2.1.RELEASE
+#fixedSubscriberChannel()Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#fixedSubscriberChannel(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#channel(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#channel(Lorg/springframework/integration/dsl/MessageChannelSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#channel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#channel(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#publishSubscribeChannel(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#publishSubscribeChannel(Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#wireTap(Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#wireTap(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#wireTap(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#wireTap(Lorg/springframework/integration/dsl/IntegrationFlow;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#wireTap(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#wireTap(Lorg/springframework/messaging/MessageChannel;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#wireTap(Lorg/springframework/integration/dsl/WireTapSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#controlBus()Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#controlBus(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#transform(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#transform(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#transform(Ljava/lang/Object;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#transform(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#transform(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#transform(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#transform(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#convert(Ljava/lang/Class;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#transform(Ljava/lang/Class;Lorg/springframework/integration/transformer/GenericTransformer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#convert(Ljava/lang/Class;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#transform(Ljava/lang/Class;Lorg/springframework/integration/transformer/GenericTransformer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#filter(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#filter(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#filter(Ljava/lang/Object;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#filter(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#filter(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#filter(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#filter(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#filter(Ljava/lang/Class;Lorg/springframework/integration/core/GenericSelector;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#filter(Ljava/lang/Class;Lorg/springframework/integration/core/GenericSelector;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Lorg/springframework/integration/dsl/MessageHandlerSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Lorg/springframework/messaging/MessageHandler;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Ljava/lang/Object;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Ljava/lang/Class;Lorg/springframework/integration/handler/GenericHandler;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Ljava/lang/Class;Lorg/springframework/integration/handler/GenericHandler;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Lorg/springframework/integration/dsl/MessageHandlerSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Lorg/springframework/messaging/MessageHandler;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#bridge()Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#bridge(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#delay(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#delay(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#enrich(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#enrichHeaders(Lorg/springframework/integration/support/MapBuilder;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#enrichHeaders(Lorg/springframework/integration/support/MapBuilder;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#enrichHeaders(Ljava/util/Map;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#enrichHeaders(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split()Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Ljava/lang/Object;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Ljava/lang/Class;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Lorg/springframework/integration/dsl/MessageHandlerSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Lorg/springframework/integration/dsl/MessageHandlerSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Lorg/springframework/integration/splitter/AbstractMessageSplitter;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#split(Lorg/springframework/integration/splitter/AbstractMessageSplitter;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#headerFilter([Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#headerFilter(Ljava/lang/String;Z)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#headerFilter(Lorg/springframework/integration/transformer/HeaderFilter;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#claimCheckIn(Lorg/springframework/integration/store/MessageStore;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#claimCheckIn(Lorg/springframework/integration/store/MessageStore;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#claimCheckOut(Lorg/springframework/integration/store/MessageStore;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#claimCheckOut(Lorg/springframework/integration/store/MessageStore;Z)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#claimCheckOut(Lorg/springframework/integration/store/MessageStore;ZLjava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#resequence()Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#resequence(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#aggregate()Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#aggregate(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Ljava/lang/Object;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Ljava/lang/Class;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Lorg/springframework/integration/dsl/MessageProcessorSpec;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Lorg/springframework/integration/dsl/MessageProcessorSpec;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#routeToRecipients(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#routeByException(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Lorg/springframework/integration/router/AbstractMessageRouter;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#route(Lorg/springframework/integration/router/AbstractMessageRouter;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#gateway(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#gateway(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#gateway(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#gateway(Lorg/springframework/messaging/MessageChannel;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#gateway(Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#gateway(Lorg/springframework/integration/dsl/IntegrationFlow;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log()Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log(Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log(Ljava/lang/String;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log(Ljava/lang/String;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#logAndReply()Lorg/springframework/integration/dsl/IntegrationFlow;
+#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#logAndReply(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#logAndReply(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#logAndReply(Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#logAndReply(Ljava/lang/String;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#logAndReply(Ljava/lang/String;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#scatterGather(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#scatterGather(Lorg/springframework/messaging/MessageChannel;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#scatterGather(Lorg/springframework/messaging/MessageChannel;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#scatterGather(Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#scatterGather(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#scatterGather(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#barrier(J)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#barrier(JLjava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#trigger(Ljava/lang/String;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#trigger(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#trigger(Lorg/springframework/integration/handler/MessageTriggerAction;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#trigger(Lorg/springframework/integration/handler/MessageTriggerAction;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#fluxTransform(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#nullChannel()Lorg/springframework/integration/dsl/IntegrationFlow;
+#enrichHeaders(Ljava/util/Map;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
@5.3.0.RELEASE
+#publishSubscribeChannel(Lorg/springframework/integration/channel/BroadcastCapableChannel;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#intercept([Lorg/springframework/messaging/support/ChannelInterceptor;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
@5.5.0
+#aggregate(Ljava/lang/Object;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
@5.5.4
+#to(Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/IntegrationFlow;
@6.0.0
+#transform(Ljava/lang/Class;Lorg/springframework/integration/core/GenericTransformer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#transform(Ljava/lang/Class;Lorg/springframework/integration/core/GenericTransformer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Ljava/lang/Class;Lorg/springframework/integration/core/GenericHandler;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
+#handle(Ljava/lang/Class;Lorg/springframework/integration/core/GenericHandler;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
*#logAndReply()Lorg/springframework/integration/dsl/IntegrationFlow;[deprecated]
*#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;)Lorg/springframework/integration/dsl/IntegrationFlow;[deprecated]
*#logAndReply(Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlow;[deprecated]
*#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlow;[deprecated]
*#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/dsl/IntegrationFlow;[deprecated]
*#logAndReply(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlow;[deprecated]
*#logAndReply(Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/IntegrationFlow;[deprecated]
*#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/IntegrationFlow;[deprecated]
*#logAndReply(Ljava/lang/String;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/IntegrationFlow;[deprecated]
*#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlow;[deprecated]
*#logAndReply(Ljava/lang/String;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlow;[deprecated]
*#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/IntegrationFlow;[deprecated]
*#logAndReply(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/IntegrationFlow;[deprecated]
-#transform(Ljava/lang/Class;Lorg/springframework/integration/transformer/GenericTransformer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#transform(Ljava/lang/Class;Lorg/springframework/integration/transformer/GenericTransformer;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#handle(Ljava/lang/Class;Lorg/springframework/integration/handler/GenericHandler;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;
-#handle(Ljava/lang/Class;Lorg/springframework/integration/handler/GenericHandler;Ljava/util/function/Consumer;)Lorg/springframework/integration/dsl/BaseIntegrationFlowDefinition;

+###org/springframework/integration/dsl/BaseIntegrationFlowDefinition$ReplyProducerCleaner
@5.2.1.RELEASE
+#requiresDestruction(Ljava/lang/Object;)Z
+#postProcessBeforeDestruction(Ljava/lang/Object;Ljava/lang/String;)V
@5.5.0
+#<init>()V

+###org/springframework/integration/dsl/IntegrationFlowExtension
@5.3.0.RELEASE
+#get()Lorg/springframework/integration/dsl/StandardIntegrationFlow;

+###org/springframework/integration/dsl/GatewayProxySpec
@5.2.0.RELEASE
+#beanName(Ljava/lang/String;)Lorg/springframework/integration/dsl/GatewayProxySpec;
+#replyChannel(Ljava/lang/String;)Lorg/springframework/integration/dsl/GatewayProxySpec;
+#replyChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/GatewayProxySpec;
+#errorChannel(Ljava/lang/String;)Lorg/springframework/integration/dsl/GatewayProxySpec;
+#errorChannel(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/GatewayProxySpec;
+#requestTimeout(J)Lorg/springframework/integration/dsl/GatewayProxySpec;
+#replyTimeout(J)Lorg/springframework/integration/dsl/GatewayProxySpec;
+#asyncExecutor(Ljava/util/concurrent/Executor;)Lorg/springframework/integration/dsl/GatewayProxySpec;
+#payloadExpression(Ljava/lang/String;)Lorg/springframework/integration/dsl/GatewayProxySpec;
+#payloadFunction(Ljava/util/function/Function;)Lorg/springframework/integration/dsl/GatewayProxySpec;
+#payloadExpression(Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/GatewayProxySpec;
+#header(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/dsl/GatewayProxySpec;
+#header(Ljava/lang/String;Ljava/util/function/Function;)Lorg/springframework/integration/dsl/GatewayProxySpec;
+#header(Ljava/lang/String;Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/GatewayProxySpec;
+#mapper(Lorg/springframework/integration/gateway/MethodArgsMessageMapper;)Lorg/springframework/integration/dsl/GatewayProxySpec;
@5.3.0.RELEASE
+#proxyDefaultMethods(Z)Lorg/springframework/integration/dsl/GatewayProxySpec;
@5.4.0
+#getComponentsToRegister()Ljava/util/Map;
@6.0.0
-#getComponentsToRegister()Ljava/util/Map;

+###org/springframework/integration/dsl/BroadcastPublishSubscribeSpec
@5.3.0.RELEASE
+#subscribe(Lorg/springframework/integration/dsl/IntegrationFlow;)Lorg/springframework/integration/dsl/BroadcastPublishSubscribeSpec;
+#getComponentsToRegister()Ljava/util/Map;

+###org/springframework/integration/support/channel/ChannelResolverUtils
@5.2.0.RELEASE
+#getChannelResolver(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/messaging/core/DestinationResolver;

+###org/springframework/integration/support/management/micrometer/MicrometerMetricsCaptorRegistrar
@5.2.9.RELEASE
+#<init>()V
+#registerBeanDefinitions(Lorg/springframework/core/type/AnnotationMetadata;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
@5.3.0.RELEASE
-###org/springframework/integration/support/management/micrometer/MicrometerMetricsCaptorRegistrar

+###org/springframework/integration/support/management/BaseHandlerMetrics
@5.2.0.RELEASE
+#handleCount()J
+#errorCount()J
@5.4.0
-###org/springframework/integration/support/management/BaseHandlerMetrics

+###org/springframework/integration/support/management/BaseChannelMetrics
@5.2.0.RELEASE
+#sendCount()J
+#sendErrorCount()J
@5.4.0
-###org/springframework/integration/support/management/BaseChannelMetrics

+###org/springframework/integration/support/management/PollableChannelMetrics
@5.2.0.RELEASE
+#receiveCount()J
+#receiveErrorCount()J
@5.4.0
-###org/springframework/integration/support/management/PollableChannelMetrics

+###org/springframework/integration/support/management/BaseSourceMetrics
@5.2.0.RELEASE
+#messageCount()J
@5.4.0
-###org/springframework/integration/support/management/BaseSourceMetrics

+###org/springframework/integration/core/Pausable
@5.2.0.RELEASE
+#pause()V
+#resume()V
@5.4.0
+#isPaused()Z

+###org/springframework/integration/IntegrationPattern
@5.3.0.RELEASE
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/IntegrationPatternType
@5.3.0.RELEASE
+#values()[Lorg/springframework/integration/IntegrationPatternType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/integration/IntegrationPatternType;
+#getPatternCategory()Lorg/springframework/integration/IntegrationPatternType$IntegrationPatternCategory;

+###org/springframework/integration/IntegrationPatternType$IntegrationPatternCategory
@5.3.0.RELEASE
+#values()[Lorg/springframework/integration/IntegrationPatternType$IntegrationPatternCategory;
+#valueOf(Ljava/lang/String;)Lorg/springframework/integration/IntegrationPatternType$IntegrationPatternCategory;
+#getPatternTypes()Ljava/util/Set;

+###org/springframework/integration/graph/MicrometerNodeEnhancer
@5.2.0.RELEASE

+###org/springframework/integration/graph/PollableChannelNode
@5.2.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/messaging/MessageChannel;)V
+#getReceiveCounters()Lorg/springframework/integration/graph/ReceiveCounters;
+#receiveCounters(Ljava/util/function/Supplier;)V

+###org/springframework/integration/graph/ReceiveCountersAware
@5.2.0.RELEASE
+#receiveCounters(Ljava/util/function/Supplier;)V

+###org/springframework/integration/graph/SendTimersAware
@5.2.0.RELEASE
+#sendTimers(Ljava/util/function/Supplier;)V

+###org/springframework/integration/graph/ReceiveCounters
@5.2.0.RELEASE
+#<init>(JJ)V
+#getSuccesses()J
+#getFailures()J

+###org/springframework/integration/graph/TimerStats
@5.2.0.RELEASE
+#<init>(JDD)V
+#getCount()J
+#getMean()D
+#getMax()D

+###org/springframework/integration/graph/SendTimers
@5.2.0.RELEASE
+#<init>(Lorg/springframework/integration/graph/TimerStats;Lorg/springframework/integration/graph/TimerStats;)V
+#getSuccesses()Lorg/springframework/integration/graph/TimerStats;
+#getFailures()Lorg/springframework/integration/graph/TimerStats;

+###org/springframework/integration/acks/SimpleAcknowledgment
@5.3.0.RELEASE
+#acknowledge()V

+###org/springframework/integration/endpoint/ReactiveMessageSourceProducer
@5.3.0.RELEASE
+#<init>(Lorg/springframework/integration/core/MessageSource;)V
+#setDelayWhenEmpty(Ljava/time/Duration;)V

+###org/springframework/integration/channel/ChannelUtils
@5.2.0.RELEASE
+#getErrorHandler(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/util/ErrorHandler;

+###org/springframework/integration/channel/BroadcastCapableChannel
@5.3.0.RELEASE
+#isBroadcast()Z

+###org/springframework/integration/handler/AbstractReactiveMessageHandler
@5.3.0.RELEASE
+#<init>()V
+#handleMessage(Lorg/springframework/messaging/Message;)Lreactor/core/publisher/Mono;

+###org/springframework/integration/handler/advice/ReactiveRequestHandlerAdvice
@5.3.0.RELEASE
+#<init>(Ljava/util/function/BiFunction;)V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;

+###org/springframework/integration/handler/advice/HandleMessageAdviceAdapter
@5.3.0.RELEASE
+#<init>(Lorg/aopalliance/intercept/MethodInterceptor;)V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;

+###org/springframework/integration/handler/advice/AbstractRequestHandlerAdvice$ThrowableHolderException
@5.2.0.RELEASE

+###org/springframework/integration/handler/advice/CacheRequestHandlerAdvice
@5.2.0.RELEASE
+#<init>([Ljava/lang/String;)V
+#setCacheOperations([Lorg/springframework/cache/interceptor/CacheOperation;)V
+#setCacheManager(Lorg/springframework/cache/CacheManager;)V
+#setCacheResolver(Lorg/springframework/cache/interceptor/CacheResolver;)V
+#setErrorHandler(Lorg/springframework/cache/interceptor/CacheErrorHandler;)V
+#setKeyExpressionString(Ljava/lang/String;)V
+#setKeyFunction(Ljava/util/function/Function;)V
+#setKeyExpression(Lorg/springframework/expression/Expression;)V
+#afterSingletonsInstantiated()V

+###org/springframework/integration/handler/advice/RateLimiterRequestHandlerAdvice
@5.2.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lio/github/resilience4j/ratelimiter/RateLimiter;)V
+#<init>(Lio/github/resilience4j/ratelimiter/RateLimiterConfig;)V
+#<init>(Lio/github/resilience4j/ratelimiter/RateLimiterConfig;Ljava/lang/String;)V
+#setLimitForPeriod(I)V
+#setTimeoutDuration(Ljava/time/Duration;)V
+#getMetrics()Lio/github/resilience4j/ratelimiter/RateLimiter$Metrics;
+#getRateLimiter()Lio/github/resilience4j/ratelimiter/RateLimiter;

+###org/springframework/integration/handler/advice/RateLimiterRequestHandlerAdvice$RateLimitExceededException
@5.2.0.RELEASE

+###org/springframework/integration/handler/ReactiveMessageHandlerAdapter
@5.3.0.RELEASE
+#<init>(Lorg/springframework/messaging/ReactiveMessageHandler;)V
+#getDelegate()Lorg/springframework/messaging/ReactiveMessageHandler;
+#handleMessage(Lorg/springframework/messaging/Message;)V

+###org/springframework/integration/handler/MessageHandlerSupport
@5.3.0.RELEASE
+#<init>()V
+#isLoggingEnabled()Z
+#setLoggingEnabled(Z)V
+#registerMetricsCaptor(Lorg/springframework/integration/support/management/metrics/MetricsCaptor;)V
+#setOrder(I)V
+#getOrder()I
+#getComponentType()Ljava/lang/String;
+#setShouldTrack(Z)V
+#configureMetrics(Lorg/springframework/integration/support/management/AbstractMessageHandlerMetrics;)V[deprecated]
+#getOverrides()Lorg/springframework/integration/support/management/IntegrationManagement$ManagementOverrides;
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;
+#reset()V[deprecated]
+#getHandleCountLong()J[deprecated]
+#getHandleCount()I[deprecated]
+#getErrorCount()I[deprecated]
+#getErrorCountLong()J[deprecated]
+#getMeanDuration()D[deprecated]
+#getMinDuration()D[deprecated]
+#getMaxDuration()D[deprecated]
+#getStandardDeviationDuration()D[deprecated]
+#getActiveCount()I[deprecated]
+#getActiveCountLong()J[deprecated]
+#getDuration()Lorg/springframework/integration/support/management/Statistics;[deprecated]
+#setStatsEnabled(Z)V[deprecated]
+#isStatsEnabled()Z[deprecated]
+#setCountsEnabled(Z)V[deprecated]
+#isCountsEnabled()Z[deprecated]
+#setManagedName(Ljava/lang/String;)V
+#getManagedName()Ljava/lang/String;
+#setManagedType(Ljava/lang/String;)V
+#getManagedType()Ljava/lang/String;
+#destroy()V
+#configureMetrics(Lorg/springframework/integration/support/management/ConfigurableMetrics;)V[deprecated]
@5.4.0
-#configureMetrics(Lorg/springframework/integration/support/management/AbstractMessageHandlerMetrics;)V[deprecated]
-#reset()V[deprecated]
-#getHandleCountLong()J[deprecated]
-#getHandleCount()I[deprecated]
-#getErrorCount()I[deprecated]
-#getErrorCountLong()J[deprecated]
-#getMeanDuration()D[deprecated]
-#getMinDuration()D[deprecated]
-#getMaxDuration()D[deprecated]
-#getStandardDeviationDuration()D[deprecated]
-#getActiveCount()I[deprecated]
-#getActiveCountLong()J[deprecated]
-#getDuration()Lorg/springframework/integration/support/management/Statistics;[deprecated]
-#setStatsEnabled(Z)V[deprecated]
-#isStatsEnabled()Z[deprecated]
-#setCountsEnabled(Z)V[deprecated]
-#isCountsEnabled()Z[deprecated]
-#configureMetrics(Lorg/springframework/integration/support/management/ConfigurableMetrics;)V[deprecated]
@6.0.0
+#registerObservationRegistry(Lio/micrometer/observation/ObservationRegistry;)V
@6.0.1
+#isObserved()Z

+###org/springframework/integration/transformer/support/AvroHeaders
@5.2.0.RELEASE

+###org/springframework/integration/transformer/SimpleToAvroTransformer
@5.2.0.RELEASE
+#<init>()V
+#typeExpression(Lorg/springframework/expression/Expression;)Lorg/springframework/integration/transformer/SimpleToAvroTransformer;
+#typeExpression(Ljava/lang/String;)Lorg/springframework/integration/transformer/SimpleToAvroTransformer;
+#setTypeExpression(Lorg/springframework/expression/Expression;)V
+#setTypeExpressionString(Ljava/lang/String;)V

+###org/springframework/integration/transformer/SimpleFromAvroTransformer
@5.2.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#typeExpression(Lorg/springframework/expression/Expression;)Lorg/springframework/integration/transformer/SimpleFromAvroTransformer;
+#typeExpression(Ljava/lang/String;)Lorg/springframework/integration/transformer/SimpleFromAvroTransformer;
+#setTypeExpression(Lorg/springframework/expression/Expression;)V
+#setTypeExpressionString(Ljava/lang/String;)V

+###org/springframework/integration/aggregator/DelegatingMessageGroupProcessor
@5.2.0.RELEASE
+#<init>(Lorg/springframework/integration/aggregator/MessageGroupProcessor;Ljava/util/function/Function;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#processMessageGroup(Lorg/springframework/integration/store/MessageGroup;)Ljava/lang/Object;
+#start()V
+#stop()V
+#isRunning()Z

+###org/springframework/integration/aggregator/FluxAggregatorMessageHandler
@5.2.0.RELEASE
+#<init>()V
+#setCorrelationStrategy(Lorg/springframework/integration/aggregator/CorrelationStrategy;)V
+#setCombineFunction(Ljava/util/function/Function;)V
+#setBoundaryTrigger(Ljava/util/function/Predicate;)V
+#setWindowSize(I)V
+#setWindowSizeFunction(Ljava/util/function/Function;)V
+#setWindowTimespan(Ljava/time/Duration;)V
+#setWindowConfigurer(Ljava/util/function/Function;)V
+#start()V
+#stop()V
+#isRunning()Z
@5.3.0.RELEASE
+#getComponentType()Ljava/lang/String;
+#getIntegrationPatternType()Lorg/springframework/integration/IntegrationPatternType;

+###org/springframework/integration/aggregator/DefaultAggregateHeadersFunction
@5.2.0.RELEASE
+#<init>()V
+#apply(Lorg/springframework/integration/store/MessageGroup;)Ljava/util/Map;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/integration/aop/ReceiveMessageAdvice
@5.3.0.RELEASE
+#beforeReceive(Ljava/lang/Object;)Z
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
+#afterReceive(Lorg/springframework/messaging/Message;Ljava/lang/Object;)Lorg/springframework/messaging/Message;

+###org/springframework/integration/aop/SimpleActiveIdleReceiveMessageAdvice
@5.3.0.RELEASE
+#<init>(Lorg/springframework/integration/util/DynamicPeriodicTrigger;)V
+#setIdlePollPeriod(J)V
+#setActivePollPeriod(J)V
+#afterReceive(Lorg/springframework/messaging/Message;Ljava/lang/Object;)Lorg/springframework/messaging/Message;

+###org/springframework/integration/util/JavaUtils
@5.1.3.RELEASE
+#acceptIfCondition(ZLjava/lang/Object;Ljava/util/function/Consumer;)Lorg/springframework/integration/util/JavaUtils;
+#acceptIfNotNull(Ljava/lang/Object;Ljava/util/function/Consumer;)Lorg/springframework/integration/util/JavaUtils;
@5.2.0.RELEASE
+#acceptIfHasText(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/util/JavaUtils;
+#acceptIfNotEmpty(Ljava/util/List;Ljava/util/function/Consumer;)Lorg/springframework/integration/util/JavaUtils;
+#acceptIfNotEmpty([Ljava/lang/Object;Ljava/util/function/Consumer;)Lorg/springframework/integration/util/JavaUtils;
+#acceptIfCondition(ZLjava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiConsumer;)Lorg/springframework/integration/util/JavaUtils;
+#acceptIfNotNull(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiConsumer;)Lorg/springframework/integration/util/JavaUtils;
+#acceptIfHasText(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/BiConsumer;)Lorg/springframework/integration/util/JavaUtils;
@6.0.0
-###org/springframework/integration/util/JavaUtils

+###org/springframework/integration/util/IntegrationReactiveUtils
@5.3.0.RELEASE
+#messageSourceToFlux(Lorg/springframework/integration/core/MessageSource;)Lreactor/core/publisher/Flux;
+#messageChannelToFlux(Lorg/springframework/messaging/MessageChannel;)Lreactor/core/publisher/Flux;

+###org/springframework/integration/dsl/KotlinIntegrationFlowDefinition$convert$1
@5.3.0.RELEASE
+#invoke(Ljava/lang/Object;)Ljava/lang/Object;
+#invoke(Lorg/springframework/integration/dsl/GenericEndpointSpec;)V
+#<init>()V

+###org/springframework/integration/dsl/KotlinIntegrationFlowDefinition$split$3
@5.3.0.RELEASE
+#accept(Ljava/lang/Object;)V
+#accept(Lorg/springframework/integration/dsl/SplitterEndpointSpec;)V
+#<init>(Lkotlin/jvm/functions/Function1;)V

+###org/springframework/integration/dsl/AbstractKotlinRouterSpec
@5.3.0.RELEASE
+#ignoreSendFailures(Z)V
+#applySequence(Z)V
+#defaultOutputChannel(Ljava/lang/String;)V
+#defaultOutputChannel(Lorg/springframework/messaging/MessageChannel;)V
+#defaultSubFlowMapping(Lkotlin/jvm/functions/Function1;)V
+#defaultOutputToParentFlow()V
+#getDelegate()Lorg/springframework/integration/dsl/AbstractRouterSpec;
+#<init>(Lorg/springframework/integration/dsl/AbstractRouterSpec;)V

+###org/springframework/integration/dsl/KotlinIntegrationFlowDefinition$filter$3
@5.3.0.RELEASE
+#accept(Ljava/lang/Object;)V
+#accept(Lorg/springframework/integration/dsl/FilterEndpointSpec;)V
+#<init>(Lkotlin/jvm/functions/Function1;)V

+###org/springframework/integration/dsl/KotlinIntegrationFlowDefinition$route$2
@5.3.0.RELEASE
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lkotlin/jvm/functions/Function1;)V

+###org/springframework/integration/dsl/KotlinIntegrationFlowDefinition$filter$1
@5.3.0.RELEASE
+#accept(Ljava/lang/Object;)Z
+#<init>(Lkotlin/jvm/functions/Function1;)V

+###org/springframework/integration/dsl/KotlinIntegrationFlowDefinition
@5.3.0.RELEASE
+#convert(Lkotlin/jvm/functions/Function1;)V
+#convert$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#transform(Lkotlin/jvm/functions/Function1;)V
+#transform(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
+#split(Lkotlin/jvm/functions/Function1;)V
+#split(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
+#filter(Lkotlin/jvm/functions/Function1;)V
+#filter(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
+#route(Lkotlin/jvm/functions/Function1;)V
+#route(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
+#fixedSubscriberChannel(Ljava/lang/String;)V
+#fixedSubscriberChannel$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Ljava/lang/String;ILjava/lang/Object;)V
+#channel(Ljava/lang/String;)V
+#channel(Lorg/springframework/integration/dsl/MessageChannelSpec;)V
+#channel(Lorg/springframework/messaging/MessageChannel;)V
+#channel(Lkotlin/jvm/functions/Function1;)V
+#publishSubscribe(Lorg/springframework/integration/channel/BroadcastCapableChannel;[Lkotlin/jvm/functions/Function1;)V
+#wireTap(Lkotlin/jvm/functions/Function1;)V
+#wireTap(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
+#wireTap(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#wireTap$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#wireTap(Lorg/springframework/messaging/MessageChannel;Lkotlin/jvm/functions/Function1;)V
+#wireTap$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lorg/springframework/messaging/MessageChannel;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#wireTap(Lorg/springframework/integration/dsl/WireTapSpec;)V
+#controlBus(Lkotlin/jvm/functions/Function1;)V
+#controlBus$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#transform(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#transform$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#transform(Ljava/lang/Object;Ljava/lang/String;)V
+#transform$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Ljava/lang/Object;Ljava/lang/String;ILjava/lang/Object;)V
+#transform(Ljava/lang/Object;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#transform(Lorg/springframework/integration/dsl/MessageProcessorSpec;Lkotlin/jvm/functions/Function1;)V
+#transform$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lorg/springframework/integration/dsl/MessageProcessorSpec;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#filter(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#filter$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#filter(Ljava/lang/Object;Ljava/lang/String;)V
+#filter$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Ljava/lang/Object;Ljava/lang/String;ILjava/lang/Object;)V
+#filter(Ljava/lang/Object;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#filter(Lorg/springframework/integration/dsl/MessageProcessorSpec;Lkotlin/jvm/functions/Function1;)V
+#filter$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lorg/springframework/integration/dsl/MessageProcessorSpec;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#handle(Lorg/springframework/integration/dsl/MessageHandlerSpec;)V
+#handle(Lorg/springframework/messaging/MessageHandler;)V
+#handle(Ljava/lang/String;Ljava/lang/String;)V
+#handle$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
+#handle(Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#handle(Ljava/lang/Object;Ljava/lang/String;)V
+#handle$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Ljava/lang/Object;Ljava/lang/String;ILjava/lang/Object;)V
+#handle(Ljava/lang/Object;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#handle(Lkotlin/jvm/functions/Function2;)V
+#handle(Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;)V
+#handle(Lorg/springframework/integration/dsl/MessageProcessorSpec;Lkotlin/jvm/functions/Function1;)V
+#handle$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lorg/springframework/integration/dsl/MessageProcessorSpec;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#handle(Lorg/springframework/integration/dsl/MessageHandlerSpec;Lkotlin/jvm/functions/Function1;)V
+#handle$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lorg/springframework/integration/dsl/MessageHandlerSpec;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#handle(Lkotlin/jvm/functions/Function1;)V
+#handle(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
+#handle(Lorg/springframework/messaging/MessageHandler;Lkotlin/jvm/functions/Function1;)V
+#handle$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lorg/springframework/messaging/MessageHandler;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#bridge(Lkotlin/jvm/functions/Function1;)V
+#bridge$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#delay(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#delay$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#enrich(Lkotlin/jvm/functions/Function1;)V
+#enrichHeaders(Lorg/springframework/integration/support/MapBuilder;Lkotlin/jvm/functions/Function1;)V
+#enrichHeaders$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lorg/springframework/integration/support/MapBuilder;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#enrichHeaders(Ljava/util/Map;Lkotlin/jvm/functions/Function1;)V
+#enrichHeaders$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Ljava/util/Map;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#enrichHeaders(Lkotlin/jvm/functions/Function1;)V
+#split()V
+#split(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#split$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#split(Ljava/lang/Object;Ljava/lang/String;)V
+#split$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Ljava/lang/Object;Ljava/lang/String;ILjava/lang/Object;)V
+#split(Ljava/lang/Object;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#split(Ljava/lang/String;Ljava/lang/String;)V
+#split$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
+#split(Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#split(Lorg/springframework/integration/dsl/MessageProcessorSpec;Lkotlin/jvm/functions/Function1;)V
+#split$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lorg/springframework/integration/dsl/MessageProcessorSpec;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#split(Lorg/springframework/integration/dsl/MessageHandlerSpec;Lkotlin/jvm/functions/Function1;)V
+#split$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lorg/springframework/integration/dsl/MessageHandlerSpec;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#split(Lorg/springframework/integration/splitter/AbstractMessageSplitter;Lkotlin/jvm/functions/Function1;)V
+#split$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lorg/springframework/integration/splitter/AbstractMessageSplitter;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#headerFilter(Ljava/lang/String;Z)V
+#headerFilter$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Ljava/lang/String;ZILjava/lang/Object;)V
+#headerFilter(Lorg/springframework/integration/transformer/HeaderFilter;Lkotlin/jvm/functions/Function1;)V
+#claimCheckIn(Lorg/springframework/integration/store/MessageStore;Lkotlin/jvm/functions/Function1;)V
+#claimCheckIn$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lorg/springframework/integration/store/MessageStore;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#claimCheckOut(Lorg/springframework/integration/store/MessageStore;Z)V
+#claimCheckOut$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lorg/springframework/integration/store/MessageStore;ZILjava/lang/Object;)V
+#claimCheckOut(Lorg/springframework/integration/store/MessageStore;ZLkotlin/jvm/functions/Function1;)V
+#resequence(Lkotlin/jvm/functions/Function1;)V
+#resequence$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#aggregate(Lkotlin/jvm/functions/Function1;)V
+#aggregate$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#route(Ljava/lang/String;Ljava/lang/String;)V
+#route$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
+#route(Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#route(Ljava/lang/Object;Ljava/lang/String;)V
+#route$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Ljava/lang/Object;Ljava/lang/String;ILjava/lang/Object;)V
+#route(Ljava/lang/Object;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#route(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#route$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#route(Lorg/springframework/integration/dsl/MessageProcessorSpec;Lkotlin/jvm/functions/Function1;)V
+#route$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lorg/springframework/integration/dsl/MessageProcessorSpec;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#routeToRecipients(Lkotlin/jvm/functions/Function1;)V
+#routeByException(Lkotlin/jvm/functions/Function1;)V
+#route(Lorg/springframework/integration/router/AbstractMessageRouter;Lkotlin/jvm/functions/Function1;)V
+#route$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lorg/springframework/integration/router/AbstractMessageRouter;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#gateway(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#gateway$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#gateway(Lorg/springframework/messaging/MessageChannel;Lkotlin/jvm/functions/Function1;)V
+#gateway$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lorg/springframework/messaging/MessageChannel;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#gateway(Lkotlin/jvm/functions/Function1;)V
+#gateway(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
+#log()V
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;)V
+#log$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;ILjava/lang/Object;)V
+#log(Ljava/lang/String;)V
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Ljava/lang/String;)V
+#log(Lkotlin/jvm/functions/Function1;)V
+#log(Lorg/springframework/expression/Expression;)V
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Lorg/springframework/expression/Expression;)V
+#log(Ljava/lang/String;Lorg/springframework/expression/Expression;)V
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Lkotlin/jvm/functions/Function1;)V
+#log(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#log(Lorg/springframework/integration/handler/LoggingHandler$Level;Ljava/lang/String;Lorg/springframework/expression/Expression;)V
+#scatterGather(Lorg/springframework/messaging/MessageChannel;Lkotlin/jvm/functions/Function1;)V
+#scatterGather$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lorg/springframework/messaging/MessageChannel;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#scatterGather(Lorg/springframework/messaging/MessageChannel;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
+#scatterGather(Lkotlin/jvm/functions/Function1;)V
+#scatterGather(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
+#scatterGather(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
+#barrier(JLkotlin/jvm/functions/Function1;)V
+#barrier$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;JLkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#trigger(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#trigger$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#trigger(Lorg/springframework/integration/handler/MessageTriggerAction;Lkotlin/jvm/functions/Function1;)V
+#trigger$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lorg/springframework/integration/handler/MessageTriggerAction;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#fluxTransform(Lkotlin/jvm/functions/Function1;)V
+#delegate$annotations()V
+#getDelegate()Lorg/springframework/integration/dsl/IntegrationFlowDefinition;
+#<init>(Lorg/springframework/integration/dsl/IntegrationFlowDefinition;)V
@5.3.1.RELEASE
+#transform(Lorg/springframework/integration/transformer/Transformer;Lkotlin/jvm/functions/Function1;)V
+#transform$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lorg/springframework/integration/transformer/Transformer;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
+#filter(Lorg/springframework/integration/core/MessageSelector;Lkotlin/jvm/functions/Function1;)V
+#filter$default(Lorg/springframework/integration/dsl/KotlinIntegrationFlowDefinition;Lorg/springframework/integration/core/MessageSelector;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
@5.4.0
+#getDelegate$annotations()V
-#delegate$annotations()V
@5.5.0
+#aggregate(Ljava/lang/Object;)V
+#delegate$annotations()V
-#getDelegate$annotations()V
@5.5.4
+#getDelegate$annotations()V
-#delegate$annotations()V
@5.5.8
+#intercept([Lorg/springframework/messaging/support/ChannelInterceptor;)V

+###org/springframework/integration/dsl/KotlinRecipientListRouterSpec$recipient$1
@5.3.0.RELEASE
+#accept(Ljava/lang/Object;)Z
+#accept(Lorg/springframework/messaging/Message;)Z
+#<init>(Lkotlin/jvm/functions/Function1;)V

+###org/springframework/integration/dsl/KotlinIntegrationFlowDefinition$route$$inlined$route$1
@5.3.0.RELEASE
+#<init>()V
+#accept(Ljava/lang/Object;)V
+#accept(Lorg/springframework/integration/dsl/RouterSpec;)V

+###org/springframework/integration/dsl/KotlinIntegrationFlowDefinition$handle$1
@5.3.0.RELEASE
+#handle(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Ljava/lang/Object;
+#<init>(Lkotlin/jvm/functions/Function2;)V

+###org/springframework/integration/dsl/KotlinIntegrationFlowDefinition$transform$1
@5.3.0.RELEASE
+#transform(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lkotlin/jvm/functions/Function1;)V

+###org/springframework/integration/dsl/KotlinRecipientListRouterSpec$recipientFlow$2
@5.3.0.RELEASE
+#configure(Lorg/springframework/integration/dsl/IntegrationFlowDefinition;)V
+#<init>(Lkotlin/jvm/functions/Function1;)V

+###org/springframework/integration/dsl/KotlinRecipientListRouterSpec$recipient$4
@5.3.0.RELEASE
+#accept(Ljava/lang/Object;)Z
+#<init>(Lkotlin/jvm/functions/Function1;)V

+###org/springframework/integration/dsl/KotlinEnricherSpec
@5.3.0.RELEASE
+#requestChannel(Lorg/springframework/messaging/MessageChannel;)V
+#requestChannel(Ljava/lang/String;)V
+#replyChannel(Lorg/springframework/messaging/MessageChannel;)V
+#replyChannel(Ljava/lang/String;)V
+#errorChannel(Lorg/springframework/messaging/MessageChannel;)V
+#errorChannel(Ljava/lang/String;)V
+#requestTimeout(J)V
+#replyTimeout(J)V
+#requestPayloadExpression(Ljava/lang/String;)V
+#requestPayload(Lkotlin/jvm/functions/Function1;)V
+#requestSubFlow(Lkotlin/jvm/functions/Function1;)V
+#shouldClonePayload(Z)V
+#property(Ljava/lang/String;Ljava/lang/Object;)V
+#propertyExpression(Ljava/lang/String;Ljava/lang/String;)V
+#propertyFunction(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#header(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Boolean;)V
+#headerExpression(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;)V
+#headerFunction(Ljava/lang/String;Lkotlin/jvm/functions/Function1;Ljava/lang/Boolean;)V
+#header(Ljava/lang/String;Lorg/springframework/integration/transformer/support/HeaderValueMessageProcessor;)V
+#getDelegate()Lorg/springframework/integration/dsl/EnricherSpec;
+#<init>(Lorg/springframework/integration/dsl/EnricherSpec;)V

+###org/springframework/integration/dsl/KotlinFilterEndpointSpec
@5.3.0.RELEASE
+#throwExceptionOnRejection(Z)V
+#discardChannel(Lorg/springframework/messaging/MessageChannel;)V
+#discardChannel(Ljava/lang/String;)V
+#discardWithinAdvice(Z)V
+#discardFlow(Lkotlin/jvm/functions/Function1;)V
+#getDelegate()Lorg/springframework/integration/dsl/FilterEndpointSpec;
+#<init>(Lorg/springframework/integration/dsl/FilterEndpointSpec;)V

+###org/springframework/integration/dsl/KotlinRecipientListRouterSpec$recipient$2
@5.3.0.RELEASE
+#accept(Ljava/lang/Object;)Z
+#<init>(Lkotlin/jvm/functions/Function1;)V

+###org/springframework/integration/dsl/KotlinRecipientListRouterSpec
@5.3.0.RELEASE
+#recipient(Ljava/lang/String;)V
+#recipient(Ljava/lang/String;Ljava/lang/String;)V
+#recipient(Ljava/lang/String;Lorg/springframework/expression/Expression;)V
+#recipient(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#recipient(Lorg/springframework/messaging/MessageChannel;)V
+#recipient(Lorg/springframework/messaging/MessageChannel;Ljava/lang/String;)V
+#recipient(Lorg/springframework/messaging/MessageChannel;Lorg/springframework/expression/Expression;)V
+#recipient(Lorg/springframework/messaging/MessageChannel;Lkotlin/jvm/functions/Function1;)V
+#recipientFlow(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
+#recipientFlow(Lkotlin/jvm/functions/Function1;)V
+#recipientFlow(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#recipientFlow(Lorg/springframework/expression/Expression;Lkotlin/jvm/functions/Function1;)V
+#getDelegate()Lorg/springframework/integration/dsl/RecipientListRouterSpec;
+#getDelegate()Lorg/springframework/integration/dsl/AbstractRouterSpec;
+#<init>(Lorg/springframework/integration/dsl/RecipientListRouterSpec;)V

+###org/springframework/integration/dsl/IntegrationFlowDslKt$integrationFlow$2
@5.3.0.RELEASE
+#invoke(Ljava/lang/Object;)Ljava/lang/Object;
+#invoke(Lorg/springframework/integration/dsl/GatewayProxySpec;)V
+#<init>()V

+###org/springframework/integration/dsl/KotlinIntegrationFlowDefinition$convert$2
@5.3.0.RELEASE
+#accept(Ljava/lang/Object;)V
+#accept(Lorg/springframework/integration/dsl/GenericEndpointSpec;)V
+#<init>(Lkotlin/jvm/functions/Function1;)V

+###org/springframework/integration/dsl/KotlinSplitterEndpointSpec
@5.3.0.RELEASE
+#applySequence(Z)V
+#delimiters(Ljava/lang/String;)V
+#discardChannel(Lorg/springframework/messaging/MessageChannel;)V
+#discardChannel(Ljava/lang/String;)V
+#discardFlow(Lkotlin/jvm/functions/Function1;)V
+#getDelegate()Lorg/springframework/integration/dsl/SplitterEndpointSpec;
+#<init>(Lorg/springframework/integration/dsl/SplitterEndpointSpec;)V

+###org/springframework/integration/dsl/KotlinIntegrationFlowDefinition$transform$3
@5.3.0.RELEASE
+#accept(Ljava/lang/Object;)V
+#accept(Lorg/springframework/integration/dsl/GenericEndpointSpec;)V
+#<init>(Lkotlin/jvm/functions/Function1;)V

+###org/springframework/integration/dsl/KotlinIntegrationFlowDefinition$transform$2
@5.3.0.RELEASE
+#transform(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lkotlin/jvm/functions/Function1;)V

+###org/springframework/integration/dsl/KotlinIntegrationFlowDefinition$split$2
@5.3.0.RELEASE
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lkotlin/jvm/functions/Function1;)V

+###org/springframework/integration/dsl/KotlinRecipientListRouterSpec$recipientFlow$3
@5.3.0.RELEASE
+#accept(Ljava/lang/Object;)Z
+#<init>(Lkotlin/jvm/functions/Function1;)V

+###org/springframework/integration/dsl/KotlinIntegrationFlowDefinition$handle$3
@5.3.0.RELEASE
+#accept(Ljava/lang/Object;)V
+#accept(Lorg/springframework/integration/dsl/GenericEndpointSpec;)V
+#<init>(Lkotlin/jvm/functions/Function1;)V

+###org/springframework/integration/dsl/KotlinRecipientListRouterSpec$recipient$3
@5.3.0.RELEASE
+#accept(Ljava/lang/Object;)Z
+#accept(Lorg/springframework/messaging/Message;)Z
+#<init>(Lkotlin/jvm/functions/Function1;)V

+###org/springframework/integration/dsl/KotlinRouterSpec
@5.3.0.RELEASE
+#resolutionRequired(Z)V
+#dynamicChannelLimit(I)V
+#prefix(Ljava/lang/String;)V
+#suffix(Ljava/lang/String;)V
+#noChannelKeyFallback()V
+#channelMapping(Ljava/lang/Object;Ljava/lang/String;)V
+#channelMapping(Ljava/lang/Object;Lorg/springframework/messaging/MessageChannel;)V
+#subFlowMapping(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V
+#getDelegate()Lorg/springframework/integration/dsl/RouterSpec;
+#getDelegate()Lorg/springframework/integration/dsl/AbstractRouterSpec;
+#<init>(Lorg/springframework/integration/dsl/RouterSpec;)V
@6.0.0
+#channelKeyFallback(Z)V

+###org/springframework/integration/dsl/KotlinIntegrationFlowDefinition$handle$2
@5.3.0.RELEASE
+#handle(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Ljava/lang/Object;
+#<init>(Lkotlin/jvm/functions/Function2;)V

+###org/springframework/integration/dsl/IntegrationFlowDslKt
@5.3.0.RELEASE
+#integrationFlow(Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#integrationFlow(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#integrationFlow$default(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#integrationFlow(Ljava/lang/String;ZLkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#integrationFlow$default(Ljava/lang/String;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#integrationFlow(Lorg/springframework/messaging/MessageChannel;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#integrationFlow(Lorg/springframework/integration/core/MessageSource;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#integrationFlow$default(Lorg/springframework/integration/core/MessageSource;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#integrationFlow(Lorg/springframework/integration/dsl/MessageSourceSpec;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#integrationFlow$default(Lorg/springframework/integration/dsl/MessageSourceSpec;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#integrationFlow(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#integrationFlow$default(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#integrationFlow(Lorg/reactivestreams/Publisher;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#integrationFlow(Lorg/springframework/integration/gateway/MessagingGatewaySupport;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#integrationFlow(Lorg/springframework/integration/dsl/MessagingGatewaySpec;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#integrationFlow(Lorg/springframework/integration/endpoint/MessageProducerSupport;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/IntegrationFlow;
+#integrationFlow(Lorg/springframework/integration/dsl/MessageProducerSpec;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/IntegrationFlow;
@5.5.8
+#integrationFlow(Ljava/lang/String;ZLkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/StandardIntegrationFlow;
+#integrationFlow$default(Ljava/lang/String;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/integration/dsl/StandardIntegrationFlow;
+#integrationFlow(Lorg/springframework/messaging/MessageChannel;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/StandardIntegrationFlow;
+#integrationFlow(Lorg/springframework/integration/core/MessageSource;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/StandardIntegrationFlow;
+#integrationFlow$default(Lorg/springframework/integration/core/MessageSource;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/integration/dsl/StandardIntegrationFlow;
+#integrationFlow(Lorg/springframework/integration/dsl/MessageSourceSpec;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/StandardIntegrationFlow;
+#integrationFlow$default(Lorg/springframework/integration/dsl/MessageSourceSpec;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/integration/dsl/StandardIntegrationFlow;
+#integrationFlow(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/StandardIntegrationFlow;
+#integrationFlow$default(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/integration/dsl/StandardIntegrationFlow;
+#integrationFlow(Lorg/reactivestreams/Publisher;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/StandardIntegrationFlow;
+#integrationFlow(Lorg/springframework/integration/gateway/MessagingGatewaySupport;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/StandardIntegrationFlow;
+#integrationFlow(Lorg/springframework/integration/dsl/MessagingGatewaySpec;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/StandardIntegrationFlow;
+#integrationFlow(Lorg/springframework/integration/endpoint/MessageProducerSupport;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/StandardIntegrationFlow;
+#integrationFlow(Lorg/springframework/integration/dsl/MessageProducerSpec;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/StandardIntegrationFlow;
+#integrationFlow(Lorg/springframework/integration/dsl/IntegrationFlow;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/StandardIntegrationFlow;
-#integrationFlow(Ljava/lang/String;ZLkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#integrationFlow$default(Ljava/lang/String;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#integrationFlow(Lorg/springframework/messaging/MessageChannel;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#integrationFlow(Lorg/springframework/integration/core/MessageSource;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#integrationFlow$default(Lorg/springframework/integration/core/MessageSource;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#integrationFlow(Lorg/springframework/integration/dsl/MessageSourceSpec;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#integrationFlow$default(Lorg/springframework/integration/dsl/MessageSourceSpec;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#integrationFlow(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#integrationFlow$default(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#integrationFlow(Lorg/reactivestreams/Publisher;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#integrationFlow(Lorg/springframework/integration/gateway/MessagingGatewaySupport;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#integrationFlow(Lorg/springframework/integration/dsl/MessagingGatewaySpec;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#integrationFlow(Lorg/springframework/integration/endpoint/MessageProducerSupport;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/IntegrationFlow;
-#integrationFlow(Lorg/springframework/integration/dsl/MessageProducerSpec;Lkotlin/jvm/functions/Function1;)Lorg/springframework/integration/dsl/IntegrationFlow;

+###org/springframework/integration/dsl/KotlinIntegrationFlowDefinition$split$1
@5.3.0.RELEASE
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lkotlin/jvm/functions/Function1;)V

+###org/springframework/integration/dsl/KotlinIntegrationFlowDefinition$filter$2
@5.3.0.RELEASE
+#accept(Ljava/lang/Object;)Z
+#<init>(Lkotlin/jvm/functions/Function1;)V

+###org/springframework/integration/dsl/IntegrationFlowDslKt$integrationFlow$flowBuilder$1
@5.3.0.RELEASE
+#accept(Ljava/lang/Object;)V
+#accept(Lorg/springframework/integration/dsl/GatewayProxySpec;)V
+#<init>(Lkotlin/jvm/functions/Function1;)V

+###org/springframework/integration/dsl/KotlinIntegrationFlowDefinition$route$3
@5.3.0.RELEASE
+#accept(Ljava/lang/Object;)V
+#accept(Lorg/springframework/integration/dsl/RouterSpec;)V
+#<init>(Lkotlin/jvm/functions/Function1;)V

+###org/springframework/integration/dsl/KotlinRecipientListRouterSpec$recipientFlow$4
@5.3.0.RELEASE
+#configure(Lorg/springframework/integration/dsl/IntegrationFlowDefinition;)V
+#<init>(Lkotlin/jvm/functions/Function1;)V

+###org/springframework/integration/dsl/KotlinRecipientListRouterSpec$recipientFlow$1
@5.3.0.RELEASE
+#accept(Ljava/lang/Object;)Z
+#accept(Lorg/springframework/messaging/Message;)Z
+#<init>(Lkotlin/jvm/functions/Function1;)V

+###org/springframework/integration/MessageHeaders$JdkIdGenerator
@3.0.0.RELEASE
+#<init>()V
+#generateId()Ljava/util/UUID;
@4.0.0.RELEASE
-###org/springframework/integration/MessageHeaders$JdkIdGenerator

+###org/springframework/integration/MessageHeaders$SimpleIncrementingIdGenerator
@3.0.0.RELEASE
+#<init>()V
+#generateId()Ljava/util/UUID;
@4.0.0.RELEASE
-###org/springframework/integration/MessageHeaders$SimpleIncrementingIdGenerator

+###org/springframework/integration/MessageHeaders$AlternativeJdkIdGenerator
@3.0.0.RELEASE
+#<init>()V
+#generateId()Ljava/util/UUID;
@4.0.0.RELEASE
-###org/springframework/integration/MessageHeaders$AlternativeJdkIdGenerator

+###org/springframework/integration/expression/IntegrationEvaluationContextAware
@3.0.0.RELEASE
+#setIntegrationEvaluationContext(Lorg/springframework/expression/EvaluationContext;)V
@5.0.0.RELEASE
-###org/springframework/integration/expression/IntegrationEvaluationContextAware

+###org/springframework/integration/expression/IntegrationEvaluationContextAwareBeanPostProcessor
@3.0.0.RELEASE
+#<init>()V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
@4.2.0.RELEASE
+#afterSingletonsInstantiated()V
+#getOrder()I
@5.0.0.RELEASE
-###org/springframework/integration/expression/IntegrationEvaluationContextAwareBeanPostProcessor

+###org/springframework/integration/util/MessagingMethodInvokerHelper$ParametersWrapper
@3.0.0.RELEASE
+#<init>(Lorg/springframework/integration/util/MessagingMethodInvokerHelper;Lorg/springframework/integration/Message;)V
+#<init>(Lorg/springframework/integration/util/MessagingMethodInvokerHelper;Ljava/util/Collection;Ljava/util/Map;)V
+#getPayload()Ljava/lang/Object;
+#getMessages()Ljava/util/Collection;
+#getHeaders()Ljava/util/Map;
+#getMessage()Lorg/springframework/integration/Message;
+#getFirstParameterType()Ljava/lang/Class;
@4.0.0.RELEASE
+#<init>(Lorg/springframework/integration/util/MessagingMethodInvokerHelper;Lorg/springframework/messaging/Message;)V
+#getMessage()Lorg/springframework/messaging/Message;
-#<init>(Lorg/springframework/integration/util/MessagingMethodInvokerHelper;Lorg/springframework/integration/Message;)V
-#getMessage()Lorg/springframework/integration/Message;
@4.3.8.RELEASE
+#<init>(Lorg/springframework/messaging/Message;)V
+#<init>(Ljava/util/Collection;Ljava/util/Map;)V
+#getHeader(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object;
-#<init>(Lorg/springframework/integration/util/MessagingMethodInvokerHelper;Lorg/springframework/messaging/Message;)V
-#<init>(Lorg/springframework/integration/util/MessagingMethodInvokerHelper;Ljava/util/Collection;Ljava/util/Map;)V
@5.0.0.RELEASE
+#toString()Ljava/lang/String;
-#<init>(Lorg/springframework/messaging/Message;)V
-#<init>(Ljava/util/Collection;Ljava/util/Map;)V
@5.1.0.RELEASE
-###org/springframework/integration/util/MessagingMethodInvokerHelper$ParametersWrapper

+###org/springframework/integration/util/PassThruLockRegistry
@2.2.0.RELEASE
+#<init>()V
+#obtain(Ljava/lang/Object;)Ljava/util/concurrent/locks/Lock;
@4.0.0.RELEASE
-###org/springframework/integration/util/PassThruLockRegistry

+###org/springframework/integration/event/IntegrationEvent
@3.0.0.RELEASE
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Throwable;)V
+#getCause()Ljava/lang/Throwable;
+#toString()Ljava/lang/String;
@5.1.0.RELEASE
-###org/springframework/integration/event/IntegrationEvent

+###org/springframework/integration/support/json/JacksonJsonObjectMapper
@3.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/codehaus/jackson/map/ObjectMapper;)V
+#toJson(Ljava/lang/Object;)Ljava/lang/String;
+#toJson(Ljava/lang/Object;Ljava/io/Writer;)V
+#fromJson(Lorg/codehaus/jackson/JsonParser;Ljava/lang/reflect/Type;)Ljava/lang/Object;
+#populateJavaTypes(Ljava/util/Map;Ljava/lang/Class;)V
+#fromJson(Ljava/lang/Object;Ljava/lang/reflect/Type;)Ljava/lang/Object;
@4.0.0.RELEASE
+#toJsonNode(Ljava/lang/Object;)Lorg/codehaus/jackson/JsonNode;
+#toJsonNode(Ljava/lang/Object;)Ljava/lang/Object;
@4.1.0.RELEASE
-###org/springframework/integration/support/json/JacksonJsonObjectMapper

+###org/springframework/integration/support/json/JacksonJsonObjectMapperProvider
@3.0.0.RELEASE
+#<init>()V
+#newInstance()Lorg/springframework/integration/support/json/JsonObjectMapper;
@4.1.0.RELEASE
-###org/springframework/integration/support/json/JacksonJsonObjectMapperProvider

+###org/springframework/integration/support/json/JacksonJsonMessageParser
@3.0.0.RELEASE
+#<init>()V
+#doInParser(Lorg/springframework/integration/support/json/JsonInboundMessageMapper;Ljava/lang/String;)Lorg/springframework/integration/Message;
@4.0.0.RELEASE
+#doInParser(Lorg/springframework/integration/support/json/JsonInboundMessageMapper;Ljava/lang/String;)Lorg/springframework/messaging/Message;
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
-#doInParser(Lorg/springframework/integration/support/json/JsonInboundMessageMapper;Ljava/lang/String;)Lorg/springframework/integration/Message;
@4.1.0.RELEASE
-###org/springframework/integration/support/json/JacksonJsonMessageParser

+###org/springframework/integration/codec/kryo/pool/KryoPool
@4.1.8.RELEASE
+#borrow()Lcom/esotericsoftware/kryo/Kryo;
+#release(Lcom/esotericsoftware/kryo/Kryo;)V
+#run(Lorg/springframework/integration/codec/kryo/pool/KryoCallback;)Ljava/lang/Object;
@4.2.0.RELEASE
-###org/springframework/integration/codec/kryo/pool/KryoPool

+###org/springframework/integration/codec/kryo/pool/KryoPool$Builder
@4.1.8.RELEASE
+#<init>(Lorg/springframework/integration/codec/kryo/pool/KryoFactory;)V
+#queue(Ljava/util/Queue;)Lorg/springframework/integration/codec/kryo/pool/KryoPool$Builder;
+#softReferences()Lorg/springframework/integration/codec/kryo/pool/KryoPool$Builder;
+#build()Lorg/springframework/integration/codec/kryo/pool/KryoPool;
+#toString()Ljava/lang/String;
@4.2.0.RELEASE
-###org/springframework/integration/codec/kryo/pool/KryoPool$Builder

+###org/springframework/integration/codec/kryo/pool/KryoFactory
@4.1.8.RELEASE
+#create()Lcom/esotericsoftware/kryo/Kryo;
@4.2.0.RELEASE
-###org/springframework/integration/codec/kryo/pool/KryoFactory

+###org/springframework/integration/codec/kryo/pool/KryoCallback
@4.1.8.RELEASE
+#execute(Lcom/esotericsoftware/kryo/Kryo;)Ljava/lang/Object;
@4.2.0.RELEASE
-###org/springframework/integration/codec/kryo/pool/KryoCallback

+###org/springframework/integration/handler/ScatterGatherHandler
@4.1.0.RELEASE
+#<init>(Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/MessageHandler;)V
+#<init>(Lorg/springframework/messaging/MessageHandler;Lorg/springframework/messaging/MessageHandler;)V
+#setGatherChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setGatherTimeout(J)V
+#start()V
+#stop()V
+#isRunning()Z
@4.2.0.RELEASE
-###org/springframework/integration/handler/ScatterGatherHandler

+###org/springframework/integration/core/LifecycleMessageSource
@4.0.6.RELEASE
@4.1.0.RELEASE
-###org/springframework/integration/core/LifecycleMessageSource

+###org/springframework/integration/util/Function
@4.0.4.RELEASE
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@4.1.0.RELEASE
-###org/springframework/integration/util/Function

+###org/springframework/integration/gateway/GatewayCompletableFutureProxyFactoryBean
@4.2.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/Class;)V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
@5.0.0.RELEASE
-###org/springframework/integration/gateway/GatewayCompletableFutureProxyFactoryBean

+###org/springframework/integration/support/management/IntegrationManagementConfigurer
@4.2.0.RELEASE
+#<init>()V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#setBeanName(Ljava/lang/String;)V
+#setMetricsFactory(Lorg/springframework/integration/support/management/MetricsFactory;)V
+#setMetricsFactoryBeanName(Ljava/lang/String;)V
+#setEnabledCountsPatterns([Ljava/lang/String;)V
+#setEnabledStatsPatterns([Ljava/lang/String;)V
+#setDefaultCountsEnabled(Ljava/lang/Boolean;)V
+#getDefaultCountsEnabled()Ljava/lang/Boolean;
+#setDefaultStatsEnabled(Ljava/lang/Boolean;)V
+#getDefaultStatsEnabled()Ljava/lang/Boolean;
+#setDefaultLoggingEnabled(Z)V
+#afterSingletonsInstantiated()V
+#getChannelMetrics(Ljava/lang/String;)Lorg/springframework/integration/support/management/MessageChannelMetrics;
+#getHandlerMetrics(Ljava/lang/String;)Lorg/springframework/integration/support/management/MessageHandlerMetrics;
+#getSourceMetrics(Ljava/lang/String;)Lorg/springframework/integration/support/management/MessageSourceMetrics;
@4.3.6.RELEASE
+#getChannelNames()[Ljava/lang/String;
+#getHandlerNames()[Ljava/lang/String;
+#getSourceNames()[Ljava/lang/String;
@5.0.2.RELEASE
+#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
@5.0.7.RELEASE
+#requiresDestruction(Ljava/lang/Object;)Z
+#postProcessBeforeDestruction(Ljava/lang/Object;Ljava/lang/String;)V
@5.1.0.RELEASE
-###org/springframework/integration/support/management/IntegrationManagementConfigurer

+###org/springframework/integration/support/ErrorMessagePublisher
@4.3.10.RELEASE
+#<init>()V
+#setErrorMessageStrategy(Lorg/springframework/integration/support/ErrorMessageStrategy;)V
+#setChannel(Lorg/springframework/messaging/MessageChannel;)V
+#setChannelName(Ljava/lang/String;)V
+#getErrorMessageStrategy()Lorg/springframework/integration/support/ErrorMessageStrategy;
+#getChannel()Lorg/springframework/messaging/MessageChannel;
+#setSendTimeout(J)V
+#setChannelResolver(Lorg/springframework/messaging/core/DestinationResolver;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#publish(Lorg/springframework/messaging/MessagingException;)V
+#publish(Lorg/springframework/messaging/Message;Ljava/lang/Throwable;)V
+#publish(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessagingException;)V
+#publish(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/Message;Ljava/lang/Throwable;)V
+#publish(Ljava/lang/Throwable;Lorg/springframework/core/AttributeAccessor;)V
@5.1.0.RELEASE
-###org/springframework/integration/support/ErrorMessagePublisher

+###org/springframework/integration/support/management/graph/ErrorCapableCompositeMessageHandlerNode
@4.3.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/integration/handler/CompositeMessageHandler;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
+#getErrors()Ljava/lang/String;
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/ErrorCapableCompositeMessageHandlerNode

+###org/springframework/integration/support/management/graph/ErrorCapableNode
@4.3.0.RELEASE
+#getErrors()Ljava/lang/String;
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/ErrorCapableNode

+###org/springframework/integration/support/management/graph/RoutingMessageHandlerNode
@4.3.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/messaging/MessageHandler;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V
+#getRoutes()Ljava/util/Collection;
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/RoutingMessageHandlerNode

+###org/springframework/integration/support/management/graph/ErrorCapableMessageHandlerNode
@4.3.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/messaging/MessageHandler;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getErrors()Ljava/lang/String;
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/ErrorCapableMessageHandlerNode

+###org/springframework/integration/support/management/graph/IntegrationNode$Stats
@4.3.0.RELEASE
+#<init>()V
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/IntegrationNode$Stats

+###org/springframework/integration/support/management/graph/MessageChannelNode
@4.3.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/messaging/MessageChannel;)V
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/MessageChannelNode

+###org/springframework/integration/support/management/graph/MessageProducerNode
@4.3.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/integration/endpoint/MessageProducerSupport;Ljava/lang/String;Ljava/lang/String;)V
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/MessageProducerNode

+###org/springframework/integration/support/management/graph/IntegrationNode
@4.3.0.RELEASE
+#getNodeId()I
+#getName()Ljava/lang/String;
+#getComponentType()Ljava/lang/String;
+#getStats()Lorg/springframework/integration/support/management/graph/IntegrationNode$Stats;
+#getProperties()Ljava/util/Map;
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/IntegrationNode

+###org/springframework/integration/support/management/graph/MessageHandlerNode$Stats
@4.3.0.RELEASE
+#isLoggingEnabled()Z
+#getHandleCount()J
+#getErrorCount()J
+#getMeanDuration()D
+#getMinDuration()D
+#getMaxDuration()D
+#getStandardDeviationDuration()D
+#getActiveCount()J
+#getDuration()Lorg/springframework/integration/support/management/Statistics;
+#isStatsEnabled()Z
+#isCountsEnabled()Z
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/MessageHandlerNode$Stats

+###org/springframework/integration/support/management/graph/LinkNode
@4.3.0.RELEASE
+#<init>(IILorg/springframework/integration/support/management/graph/LinkNode$Type;)V
+#getFrom()I
+#getTo()I
+#getType()Lorg/springframework/integration/support/management/graph/LinkNode$Type;
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/LinkNode

+###org/springframework/integration/support/management/graph/MessageHandlerNode
@4.3.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/messaging/MessageHandler;Ljava/lang/String;Ljava/lang/String;)V
+#getInput()Ljava/lang/String;
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/MessageHandlerNode

+###org/springframework/integration/support/management/graph/LinkNode$Type
@4.3.0.RELEASE
+#values()[Lorg/springframework/integration/support/management/graph/LinkNode$Type;
+#valueOf(Ljava/lang/String;)Lorg/springframework/integration/support/management/graph/LinkNode$Type;
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/LinkNode$Type

+###org/springframework/integration/support/management/graph/MessageSourceNode$Stats
@4.3.0.RELEASE
+#getMessageCount()J
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/MessageSourceNode$Stats

+###org/springframework/integration/support/management/graph/CompositeMessageHandlerNode$InnerHandler
@4.3.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getType()Ljava/lang/String;
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/CompositeMessageHandlerNode$InnerHandler

+###org/springframework/integration/support/management/graph/ErrorCapableRoutingNode
@4.3.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/messaging/MessageHandler;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V
+#getErrors()Ljava/lang/String;
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/ErrorCapableRoutingNode

+###org/springframework/integration/support/management/graph/Graph
@4.3.0.RELEASE
+#<init>(Ljava/util/Map;Ljava/util/Collection;Ljava/util/Collection;)V
+#getContentDescriptor()Ljava/util/Map;
+#getNodes()Ljava/util/Collection;
+#getLinks()Ljava/util/Collection;
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/Graph

+###org/springframework/integration/support/management/graph/IntegrationGraphServer
@4.3.0.RELEASE
+#<init>()V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#setApplicationName(Ljava/lang/String;)V
+#getGraph()Lorg/springframework/integration/support/management/graph/Graph;
+#onApplicationEvent(Lorg/springframework/context/event/ContextRefreshedEvent;)V
+#rebuild()Lorg/springframework/integration/support/management/graph/Graph;
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/IntegrationGraphServer

+###org/springframework/integration/support/management/graph/ErrorCapableEndpointNode
@4.3.0.RELEASE
+#getErrors()Ljava/lang/String;
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/ErrorCapableEndpointNode

+###org/springframework/integration/support/management/graph/DiscardingMessageHandlerNode
@4.3.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/messaging/MessageHandler;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getDiscards()Ljava/lang/String;
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/DiscardingMessageHandlerNode

+###org/springframework/integration/support/management/graph/MessageSourceNode
@4.3.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/integration/core/MessageSource;Ljava/lang/String;Ljava/lang/String;)V
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/MessageSourceNode

+###org/springframework/integration/support/management/graph/EndpointNode
@4.3.0.RELEASE
+#getOutput()Ljava/lang/String;
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/EndpointNode

+###org/springframework/integration/support/management/graph/ErrorCapableDiscardingMessageHandlerNode
@4.3.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/messaging/MessageHandler;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getErrors()Ljava/lang/String;
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/ErrorCapableDiscardingMessageHandlerNode

+###org/springframework/integration/support/management/graph/CompositeMessageHandlerNode
@4.3.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/messaging/MessageHandler;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
+#getHandlers()Ljava/util/List;
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/CompositeMessageHandlerNode

+###org/springframework/integration/support/management/graph/MessageChannelNode$Stats
@4.3.0.RELEASE
+#isCountsEnabled()Z
+#isLoggingEnabled()Z
+#getSendCount()J
+#getSendErrorCount()J
+#getTimeSinceLastSend()D
+#getMeanSendRate()D
+#getMeanErrorRate()D
+#getMeanErrorRatio()D
+#getMeanSendDuration()D
+#getMinSendDuration()D
+#getMaxSendDuration()D
+#getStandardDeviationSendDuration()D
+#getSendDuration()Lorg/springframework/integration/support/management/Statistics;
+#getSendRate()Lorg/springframework/integration/support/management/Statistics;
+#getErrorRate()Lorg/springframework/integration/support/management/Statistics;
+#isStatsEnabled()Z
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/MessageChannelNode$Stats

+###org/springframework/integration/support/management/graph/MessageGatewayNode$Stats
@4.3.0.RELEASE
+#getSendCount()J
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/MessageGatewayNode$Stats

+###org/springframework/integration/support/management/graph/MessageGatewayNode
@4.3.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/integration/gateway/MessagingGatewaySupport;Ljava/lang/String;Ljava/lang/String;)V
@5.1.0.RELEASE
-###org/springframework/integration/support/management/graph/MessageGatewayNode

+###org/springframework/integration/message/EnhancedErrorMessage
@4.3.10.RELEASE
+#<init>(Ljava/lang/Throwable;Lorg/springframework/messaging/Message;)V
+#<init>(Ljava/lang/Throwable;Lorg/springframework/messaging/MessageHeaders;Lorg/springframework/messaging/Message;)V
+#<init>(Ljava/lang/Throwable;Ljava/util/Map;Lorg/springframework/messaging/Message;)V
+#getOriginalMessage()Lorg/springframework/messaging/Message;
+#toString()Ljava/lang/String;
@5.0.0.RELEASE
-###org/springframework/integration/message/EnhancedErrorMessage

+###org/springframework/integration/aggregator/CorrelatingMessageHandler
@2.0.0.RELEASE
+#<init>(Lorg/springframework/integration/aggregator/MessageGroupProcessor;Lorg/springframework/integration/store/MessageGroupStore;Lorg/springframework/integration/aggregator/CorrelationStrategy;Lorg/springframework/integration/aggregator/ReleaseStrategy;)V
+#<init>(Lorg/springframework/integration/aggregator/MessageGroupProcessor;Lorg/springframework/integration/store/MessageGroupStore;)V
+#<init>(Lorg/springframework/integration/aggregator/MessageGroupProcessor;)V
+#setMessageStore(Lorg/springframework/integration/store/MessageGroupStore;)V
+#setCorrelationStrategy(Lorg/springframework/integration/aggregator/CorrelationStrategy;)V
+#setReleaseStrategy(Lorg/springframework/integration/aggregator/ReleaseStrategy;)V
+#setOutputChannel(Lorg/springframework/integration/MessageChannel;)V
+#setDiscardChannel(Lorg/springframework/integration/MessageChannel;)V
+#setSendTimeout(J)V
+#setSendPartialResultOnExpiry(Z)V
+#setReleasePartialSequences(Z)V
+#getComponentType()Ljava/lang/String;
@2.0.6.RELEASE
+#setLockRegistry(Lorg/springframework/integration/util/LockRegistry;)V
@2.1.0.RELEASE
-###org/springframework/integration/aggregator/CorrelatingMessageHandler

+###org/springframework/integration/config/xml/MethodInvokingInboundChannelAdapterParser
@1.0.1.RELEASE
+#<init>()V
@2.1.0.RELEASE
-###org/springframework/integration/config/xml/MethodInvokingInboundChannelAdapterParser

+###org/springframework/integration/config/xml/MethodInvokingOutboundChannelAdapterParser
@1.0.1.RELEASE
+#<init>()V
@2.1.0.RELEASE
-###org/springframework/integration/config/xml/MethodInvokingOutboundChannelAdapterParser

+###org/springframework/integration/gateway/AbstractRemotingOutboundGateway
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#setReplyChannel(Lorg/springframework/integration/MessageChannel;)V
+#handleRequestMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;
@2.1.0.RELEASE
-###org/springframework/integration/gateway/AbstractRemotingOutboundGateway

+###org/springframework/integration/gateway/RemotingInboundGatewaySupport
@2.0.0.RELEASE
+#<init>()V
+#setExpectReply(Z)V
+#exchange(Lorg/springframework/integration/Message;)Lorg/springframework/integration/Message;
@2.1.0.RELEASE
-###org/springframework/integration/gateway/RemotingInboundGatewaySupport

+###org/springframework/integration/scripting/AbstractScriptExecutingMessageProcessor
@2.0.3.RELEASE
+#processMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;
@2.1.0.RELEASE
-###org/springframework/integration/scripting/AbstractScriptExecutingMessageProcessor

+###org/springframework/integration/scripting/DefaultScriptVariableGenerator
@2.0.3.RELEASE
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#generateScriptVariables(Lorg/springframework/integration/Message;)Ljava/util/Map;
@2.1.0.RELEASE
-###org/springframework/integration/scripting/DefaultScriptVariableGenerator

+###org/springframework/integration/scripting/ScriptVariableGenerator
@2.0.3.RELEASE
+#generateScriptVariables(Lorg/springframework/integration/Message;)Ljava/util/Map;
@2.1.0.RELEASE
-###org/springframework/integration/scripting/ScriptVariableGenerator

+###org/springframework/integration/config/dsl/IntegrationFlowBeanPostProcessor
@5.0.0.RELEASE
+#<init>()V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#afterSingletonsInstantiated()V
@5.0.4.RELEASE
-#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
@5.0.7.RELEASE
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
-#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@5.1.0.RELEASE
-###org/springframework/integration/config/dsl/IntegrationFlowBeanPostProcessor

+###org/springframework/integration/config/dsl/DslIntegrationConfigurationInitializer
@5.0.0.RELEASE
+#<init>()V
+#initialize(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@5.1.0.RELEASE
-###org/springframework/integration/config/dsl/DslIntegrationConfigurationInitializer

+###org/springframework/integration/config/HandlerMethodArgumentResolversHolder
@5.0.0.RELEASE
+#<init>(Ljava/util/List;)V
+#getResolvers()Ljava/util/List;
+#addResolver(Lorg/springframework/messaging/handler/invocation/HandlerMethodArgumentResolver;)V
+#removeResolver(Lorg/springframework/messaging/handler/invocation/HandlerMethodArgumentResolver;)Z
@5.1.0.RELEASE
-###org/springframework/integration/config/HandlerMethodArgumentResolversHolder

+###org/springframework/integration/dsl/context/IntegrationFlowRegistration
@5.0.0.RELEASE
+#getId()Ljava/lang/String;
+#getIntegrationFlow()Lorg/springframework/integration/dsl/IntegrationFlow;
+#getInputChannel()Lorg/springframework/messaging/MessageChannel;
+#getMessagingTemplate()Lorg/springframework/integration/core/MessagingTemplate;
+#start()V
+#stop()V
+#destroy()V
@5.0.3.RELEASE
+#toString()Ljava/lang/String;
@5.1.0.RELEASE
-###org/springframework/integration/dsl/context/IntegrationFlowRegistration

+###org/springframework/integration/dsl/channel/FluxMessageChannelSpec
@5.0.0.RELEASE
@5.1.0.RELEASE
-###org/springframework/integration/dsl/channel/FluxMessageChannelSpec

+###org/springframework/integration/dsl/channel/MessageChannelSpec
@5.0.0.RELEASE
+#datatype([Ljava/lang/Class;)Lorg/springframework/integration/dsl/channel/MessageChannelSpec;
+#interceptor([Lorg/springframework/messaging/support/ChannelInterceptor;)Lorg/springframework/integration/dsl/channel/MessageChannelSpec;
+#wireTap(Ljava/lang/String;)Lorg/springframework/integration/dsl/channel/MessageChannelSpec;
+#wireTap(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/dsl/channel/MessageChannelSpec;
+#wireTap(Lorg/springframework/integration/dsl/channel/WireTapSpec;)Lorg/springframework/integration/dsl/channel/MessageChannelSpec;
+#messageConverter(Lorg/springframework/messaging/converter/MessageConverter;)Lorg/springframework/integration/dsl/channel/MessageChannelSpec;
+#getComponentsToRegister()Ljava/util/Map;
@5.1.0.RELEASE
-###org/springframework/integration/dsl/channel/MessageChannelSpec

+###org/springframework/integration/dsl/channel/LoadBalancingChannelSpec
@5.0.0.RELEASE
+#loadBalancer(Lorg/springframework/integration/dispatcher/LoadBalancingStrategy;)Lorg/springframework/integration/dsl/channel/MessageChannelSpec;
+#failover(Ljava/lang/Boolean;)Lorg/springframework/integration/dsl/channel/MessageChannelSpec;
+#maxSubscribers(Ljava/lang/Integer;)Lorg/springframework/integration/dsl/channel/MessageChannelSpec;
@5.1.0.RELEASE
-###org/springframework/integration/dsl/channel/LoadBalancingChannelSpec

+###org/springframework/integration/dsl/channel/WireTapSpec
@5.0.0.RELEASE
+#<init>(Lorg/springframework/messaging/MessageChannel;)V
+#<init>(Ljava/lang/String;)V
+#selector(Ljava/lang/String;)Lorg/springframework/integration/dsl/channel/WireTapSpec;
+#selector(Lorg/springframework/expression/Expression;)Lorg/springframework/integration/dsl/channel/WireTapSpec;
+#selector(Lorg/springframework/integration/core/MessageSelector;)Lorg/springframework/integration/dsl/channel/WireTapSpec;
+#timeout(J)Lorg/springframework/integration/dsl/channel/WireTapSpec;
+#getComponentsToRegister()Ljava/util/Map;
@5.1.0.RELEASE
-###org/springframework/integration/dsl/channel/WireTapSpec

+###org/springframework/integration/dsl/channel/QueueChannelSpec
@5.0.0.RELEASE
@5.1.0.RELEASE
-###org/springframework/integration/dsl/channel/QueueChannelSpec

+###org/springframework/integration/dsl/channel/DirectChannelSpec
@5.0.0.RELEASE
@5.1.0.RELEASE
-###org/springframework/integration/dsl/channel/DirectChannelSpec

+###org/springframework/integration/dsl/channel/ExecutorChannelSpec
@5.0.0.RELEASE
@5.1.0.RELEASE
-###org/springframework/integration/dsl/channel/ExecutorChannelSpec

+###org/springframework/integration/dsl/channel/PriorityChannelSpec
@5.0.0.RELEASE
+#capacity(I)Lorg/springframework/integration/dsl/channel/PriorityChannelSpec;
+#comparator(Ljava/util/Comparator;)Lorg/springframework/integration/dsl/channel/PriorityChannelSpec;
+#messageStore(Lorg/springframework/integration/store/PriorityCapableChannelMessageStore;Ljava/lang/Object;)Lorg/springframework/integration/dsl/channel/PriorityChannelSpec;
@5.1.0.RELEASE
-###org/springframework/integration/dsl/channel/PriorityChannelSpec

+###org/springframework/integration/dsl/channel/PublishSubscribeChannelSpec
@5.0.0.RELEASE
+#errorHandler(Lorg/springframework/util/ErrorHandler;)Lorg/springframework/integration/dsl/channel/PublishSubscribeChannelSpec;
+#ignoreFailures(Z)Lorg/springframework/integration/dsl/channel/PublishSubscribeChannelSpec;
+#applySequence(Z)Lorg/springframework/integration/dsl/channel/PublishSubscribeChannelSpec;
+#maxSubscribers(Ljava/lang/Integer;)Lorg/springframework/integration/dsl/channel/PublishSubscribeChannelSpec;
+#minSubscribers(I)Lorg/springframework/integration/dsl/channel/PublishSubscribeChannelSpec;
@5.1.0.RELEASE
-###org/springframework/integration/dsl/channel/PublishSubscribeChannelSpec

+###org/springframework/integration/dsl/channel/RendezvousChannelSpec
@5.0.0.RELEASE
@5.1.0.RELEASE
-###org/springframework/integration/dsl/channel/RendezvousChannelSpec

+###org/springframework/integration/dsl/channel/QueueChannelSpec$MessageStoreSpec
@5.0.0.RELEASE
+#capacity(Ljava/lang/Integer;)Lorg/springframework/integration/dsl/channel/QueueChannelSpec$MessageStoreSpec;
+#storeLock(Ljava/util/concurrent/locks/Lock;)Lorg/springframework/integration/dsl/channel/QueueChannelSpec$MessageStoreSpec;
@5.1.0.RELEASE
-###org/springframework/integration/dsl/channel/QueueChannelSpec$MessageStoreSpec

+###org/springframework/integration/dsl/channel/MessageChannels
@5.0.0.RELEASE
+#direct()Lorg/springframework/integration/dsl/channel/DirectChannelSpec;
+#direct(Ljava/lang/String;)Lorg/springframework/integration/dsl/channel/DirectChannelSpec;
+#queue()Lorg/springframework/integration/dsl/channel/QueueChannelSpec;
+#queue(Ljava/lang/String;)Lorg/springframework/integration/dsl/channel/QueueChannelSpec;
+#queue(Ljava/util/Queue;)Lorg/springframework/integration/dsl/channel/QueueChannelSpec;
+#queue(Ljava/lang/String;Ljava/util/Queue;)Lorg/springframework/integration/dsl/channel/QueueChannelSpec;
+#queue(Ljava/lang/Integer;)Lorg/springframework/integration/dsl/channel/QueueChannelSpec;
+#queue(Ljava/lang/String;Ljava/lang/Integer;)Lorg/springframework/integration/dsl/channel/QueueChannelSpec;
+#queue(Lorg/springframework/integration/store/ChannelMessageStore;Ljava/lang/Object;)Lorg/springframework/integration/dsl/channel/QueueChannelSpec$MessageStoreSpec;
+#queue(Ljava/lang/String;Lorg/springframework/integration/store/ChannelMessageStore;Ljava/lang/Object;)Lorg/springframework/integration/dsl/channel/QueueChannelSpec$MessageStoreSpec;
+#executor(Ljava/util/concurrent/Executor;)Lorg/springframework/integration/dsl/channel/ExecutorChannelSpec;
+#executor(Ljava/lang/String;Ljava/util/concurrent/Executor;)Lorg/springframework/integration/dsl/channel/ExecutorChannelSpec;
+#rendezvous()Lorg/springframework/integration/dsl/channel/RendezvousChannelSpec;
+#rendezvous(Ljava/lang/String;)Lorg/springframework/integration/dsl/channel/RendezvousChannelSpec;
+#priority()Lorg/springframework/integration/dsl/channel/PriorityChannelSpec;
+#priority(Ljava/lang/String;)Lorg/springframework/integration/dsl/channel/PriorityChannelSpec;
+#priority(Lorg/springframework/integration/store/PriorityCapableChannelMessageStore;Ljava/lang/Object;)Lorg/springframework/integration/dsl/channel/PriorityChannelSpec;
+#priority(Ljava/lang/String;Lorg/springframework/integration/store/PriorityCapableChannelMessageStore;Ljava/lang/Object;)Lorg/springframework/integration/dsl/channel/PriorityChannelSpec;
+#publishSubscribe()Lorg/springframework/integration/dsl/channel/PublishSubscribeChannelSpec;
+#publishSubscribe(Ljava/lang/String;)Lorg/springframework/integration/dsl/channel/PublishSubscribeChannelSpec;
+#publishSubscribe(Ljava/util/concurrent/Executor;)Lorg/springframework/integration/dsl/channel/PublishSubscribeChannelSpec;
+#publishSubscribe(Ljava/lang/String;Ljava/util/concurrent/Executor;)Lorg/springframework/integration/dsl/channel/PublishSubscribeChannelSpec;
+#flux()Lorg/springframework/integration/dsl/channel/FluxMessageChannelSpec;
+#flux(Ljava/lang/String;)Lorg/springframework/integration/dsl/channel/FluxMessageChannelSpec;
@5.1.0.RELEASE
-###org/springframework/integration/dsl/channel/MessageChannels

+###org/springframework/integration/endpoint/MessageSourceManagement
@5.0.0.RELEASE
+#setMaxFetchSize(I)V
+#getMaxFetchSize()I
@5.1.0.RELEASE
-###org/springframework/integration/endpoint/MessageSourceManagement

+###org/springframework/integration/util/PatternMatchUtils
@5.0.0.RELEASE
+#smartMatch(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Boolean;
@5.0.5.RELEASE
+#smartMatchIgnoreCase(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Boolean;
@5.1.0.RELEASE
-###org/springframework/integration/util/PatternMatchUtils

+###org/springframework/integration/config/DefaultConfiguringBeanFactoryPostProcessor
@5.5.0
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
+#afterSingletonsInstantiated()V
@5.5.6
+#postProcessBeanDefinitionRegistry(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
-#setBeanClassLoader(Ljava/lang/ClassLoader;)V

+###org/springframework/integration/config/ChannelInitializer$AutoCreateCandidatesCollector
@5.5.0
+#getChannelNames()Ljava/util/Collection;

+###org/springframework/integration/config/ChannelInitializer
@5.5.0
+#setAutoCreate(Z)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#afterPropertiesSet()V

+###org/springframework/integration/dsl/ReactiveMessageHandlerSpec
@5.4.0
+#getComponentsToRegister()Ljava/util/Map;

+###org/springframework/integration/support/locks/RenewableLockRegistry
@5.4.0
+#renewLock(Ljava/lang/Object;)V

+###org/springframework/integration/support/json/MimeTypeSerializer
@5.4.0
+#<init>()V
+#serializeWithType(Lorg/springframework/util/MimeType;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V
+#serialize(Lorg/springframework/util/MimeType;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
+#serialize(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
+#serializeWithType(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V

+###org/springframework/integration/support/management/micrometer/MicrometerMetricsCaptorImportSelector
@5.5.5
+#<init>()V
+#selectImports(Lorg/springframework/core/type/AnnotationMetadata;)[Ljava/lang/String;

+###org/springframework/integration/support/management/micrometer/MicrometerMetricsCaptorConfiguration
@5.5.5
+#<init>()V
+#micrometerMetricsCaptor(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/integration/support/management/micrometer/MicrometerMetricsCaptor;

+###org/springframework/integration/support/management/IntegrationInboundManagement
@5.4.0

+###org/springframework/integration/support/management/ManageableSmartLifecycle
@5.4.0

+###org/springframework/integration/support/management/ManageableLifecycle
@5.4.0
+#start()V
+#stop()V
+#isRunning()Z

+###org/springframework/integration/support/converter/AllowListDeserializingConverter
@5.4.0
+#<init>()V
+#<init>(Ljava/lang/ClassLoader;)V
+#<init>(Lorg/springframework/core/serializer/Deserializer;)V
+#setAllowedPatterns([Ljava/lang/String;)V
+#addAllowedPatterns([Ljava/lang/String;)V
+#convert([B)Ljava/lang/Object;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/integration/annotation/Reactive
@5.5.0
+#value()Ljava/lang/String;

+###org/springframework/integration/JavaUtils
@5.5.6
+#acceptIfCondition(ZLjava/lang/Object;Ljava/util/function/Consumer;)Lorg/springframework/integration/JavaUtils;
+#acceptIfNotNull(Ljava/lang/Object;Ljava/util/function/Consumer;)Lorg/springframework/integration/JavaUtils;
+#acceptIfHasText(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/integration/JavaUtils;
+#acceptIfNotEmpty(Ljava/util/List;Ljava/util/function/Consumer;)Lorg/springframework/integration/JavaUtils;
+#acceptIfNotEmpty([Ljava/lang/Object;Ljava/util/function/Consumer;)Lorg/springframework/integration/JavaUtils;
+#acceptIfCondition(ZLjava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiConsumer;)Lorg/springframework/integration/JavaUtils;
+#acceptIfNotNull(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiConsumer;)Lorg/springframework/integration/JavaUtils;
+#acceptIfHasText(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/BiConsumer;)Lorg/springframework/integration/JavaUtils;

+###org/springframework/integration/json/JsonNodeWrapperToJsonNodeConverter
@5.5.0
+#<init>()V
+#getConvertibleTypes()Ljava/util/Set;
+#convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;

+###org/springframework/integration/mapping/ConvertingBytesMessageMapper
@5.4.0
+#<init>(Lorg/springframework/messaging/converter/MessageConverter;)V
+#toMessage([BLjava/util/Map;)Lorg/springframework/messaging/Message;
+#fromMessage(Lorg/springframework/messaging/Message;)[B
+#toMessage(Ljava/lang/Object;Ljava/util/Map;)Lorg/springframework/messaging/Message;
+#fromMessage(Lorg/springframework/messaging/Message;)Ljava/lang/Object;

+###org/springframework/integration/aggregator/GroupConditionProvider
@5.5.0
+#getGroupConditionSupplier()Ljava/util/function/BiFunction;

+###org/springframework/integration/dsl/IntegrationDsl
@5.5.8

+###org/springframework/integration/support/AcknowledgmentCallback
@5.0.1.RELEASE
+#acknowledge(Lorg/springframework/integration/support/AcknowledgmentCallback$Status;)V
+#isAcknowledged()Z
+#noAutoAck()V
+#isAutoAck()Z
@5.1.0.RELEASE
-###org/springframework/integration/support/AcknowledgmentCallback

+###org/springframework/integration/support/AcknowledgmentCallback$Status
@5.0.1.RELEASE
+#values()[Lorg/springframework/integration/support/AcknowledgmentCallback$Status;
+#valueOf(Ljava/lang/String;)Lorg/springframework/integration/support/AcknowledgmentCallback$Status;
@5.1.0.RELEASE
-###org/springframework/integration/support/AcknowledgmentCallback$Status

+###org/springframework/integration/support/AcknowledgmentCallbackFactory
@5.0.1.RELEASE
+#createCallback(Ljava/lang/Object;)Lorg/springframework/integration/support/AcknowledgmentCallback;
@5.1.0.RELEASE
-###org/springframework/integration/support/AcknowledgmentCallbackFactory

+###org/springframework/integration/support/StaticMessageHeaderAccessor
@5.0.1.RELEASE
+#getId(Lorg/springframework/messaging/Message;)Ljava/util/UUID;
+#getTimestamp(Lorg/springframework/messaging/Message;)Ljava/lang/Long;
+#getContentType(Lorg/springframework/messaging/Message;)Lorg/springframework/util/MimeType;
+#getExpirationDate(Lorg/springframework/messaging/Message;)Ljava/lang/Long;
+#getSequenceNumber(Lorg/springframework/messaging/Message;)I
+#getSequenceSize(Lorg/springframework/messaging/Message;)I
+#getPriority(Lorg/springframework/messaging/Message;)Ljava/lang/Integer;
+#getCloseableResource(Lorg/springframework/messaging/Message;)Ljava/io/Closeable;
+#getDeliveryAttempt(Lorg/springframework/messaging/Message;)Ljava/util/concurrent/atomic/AtomicInteger;
+#getAcknowledgmentCallback(Lorg/springframework/messaging/Message;)Lorg/springframework/integration/support/AcknowledgmentCallback;
@5.1.0.RELEASE
-###org/springframework/integration/support/StaticMessageHeaderAccessor

+###org/springframework/integration/support/management/MetricsCaptor$TimerBuilder
@5.0.4.RELEASE
+#tag(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/support/management/MetricsCaptor$TimerBuilder;
+#description(Ljava/lang/String;)Lorg/springframework/integration/support/management/MetricsCaptor$TimerBuilder;
+#build()Lorg/springframework/integration/support/management/TimerFacade;
@5.1.0.RELEASE
-###org/springframework/integration/support/management/MetricsCaptor$TimerBuilder

+###org/springframework/integration/support/management/SampleFacade
@5.0.4.RELEASE
+#stop(Lorg/springframework/integration/support/management/TimerFacade;)V
@5.1.0.RELEASE
-###org/springframework/integration/support/management/SampleFacade

+###org/springframework/integration/support/management/CounterFacade
@5.0.4.RELEASE
+#increment()V
@5.1.0.RELEASE
-###org/springframework/integration/support/management/CounterFacade

+###org/springframework/integration/support/management/MetricsCaptor$GaugeBuilder
@5.0.4.RELEASE
+#tag(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/support/management/MetricsCaptor$GaugeBuilder;
+#description(Ljava/lang/String;)Lorg/springframework/integration/support/management/MetricsCaptor$GaugeBuilder;
+#build()Lorg/springframework/integration/support/management/GaugeFacade;
@5.1.0.RELEASE
-###org/springframework/integration/support/management/MetricsCaptor$GaugeBuilder

+###org/springframework/integration/support/management/micrometer/MicrometerMetricsFactory
@5.0.2.RELEASE
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;)V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#afterSingletonsInstantiated()V
+#setTimerNameProvider(Ljava/util/function/Function;)V
+#setCounterNameProvider(Ljava/util/function/Function;)V
+#setErrorCounterNameProvider(Ljava/util/function/Function;)V
+#setReceiveCounterNameProvider(Ljava/util/function/Function;)V
+#setReceiveErrorCounterNameProvider(Ljava/util/function/Function;)V
+#setTimerTagProvider(Ljava/util/function/Function;)V
+#setCounterTagProvider(Ljava/util/function/Function;)V
+#setErrorCounterTagProvider(Ljava/util/function/Function;)V
+#setReceiveCounterTagProvider(Ljava/util/function/Function;)V
+#setReceiveErrorCounterTagProvider(Ljava/util/function/Function;)V
+#setComponentCountTagProvider(Ljava/util/function/Function;)V
+#createChannelMetrics(Ljava/lang/String;)Lorg/springframework/integration/support/management/AbstractMessageChannelMetrics;
+#createPollableChannelMetrics(Ljava/lang/String;)Lorg/springframework/integration/support/management/AbstractMessageChannelMetrics;
+#createHandlerMetrics(Ljava/lang/String;)Lorg/springframework/integration/support/management/AbstractMessageHandlerMetrics;
+#configure(Lorg/springframework/integration/support/management/MessageSourceMetrics;Ljava/lang/String;)V
@5.0.4.RELEASE
+#<init>(Lorg/springframework/integration/support/management/MetricsCaptor;)V
-#<init>(Lio/micrometer/core/instrument/MeterRegistry;)V
@5.1.0.RELEASE
-###org/springframework/integration/support/management/micrometer/MicrometerMetricsFactory

+###org/springframework/integration/support/management/TimerFacade
@5.0.4.RELEASE
+#record(JLjava/util/concurrent/TimeUnit;)V
@5.1.0.RELEASE
-###org/springframework/integration/support/management/TimerFacade

+###org/springframework/integration/support/management/MetricsCaptor
@5.0.4.RELEASE
+#timerBuilder(Ljava/lang/String;)Lorg/springframework/integration/support/management/MetricsCaptor$TimerBuilder;
+#counterBuilder(Ljava/lang/String;)Lorg/springframework/integration/support/management/MetricsCaptor$CounterBuilder;
+#gaugeBuilder(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lorg/springframework/integration/support/management/MetricsCaptor$GaugeBuilder;
+#start()Lorg/springframework/integration/support/management/SampleFacade;
@5.1.0.RELEASE
-###org/springframework/integration/support/management/MetricsCaptor

+###org/springframework/integration/support/management/MetricsCaptor$CounterBuilder
@5.0.4.RELEASE
+#tag(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/support/management/MetricsCaptor$CounterBuilder;
+#description(Ljava/lang/String;)Lorg/springframework/integration/support/management/MetricsCaptor$CounterBuilder;
+#build()Lorg/springframework/integration/support/management/CounterFacade;
@5.1.0.RELEASE
-###org/springframework/integration/support/management/MetricsCaptor$CounterBuilder

+###org/springframework/integration/support/management/GaugeFacade
@5.0.4.RELEASE
@5.1.0.RELEASE
-###org/springframework/integration/support/management/GaugeFacade

+###org/springframework/integration/support/AckUtils
@5.0.1.RELEASE
+#getAckCallback(Lorg/springframework/messaging/Message;)Lorg/springframework/integration/support/AcknowledgmentCallback;
+#autoAck(Lorg/springframework/integration/support/AcknowledgmentCallback;)V
+#autoNack(Lorg/springframework/integration/support/AcknowledgmentCallback;)V
+#accept(Lorg/springframework/integration/support/AcknowledgmentCallback;)V
+#reject(Lorg/springframework/integration/support/AcknowledgmentCallback;)V
+#requeue(Lorg/springframework/integration/support/AcknowledgmentCallback;)V
@5.1.0.RELEASE
-###org/springframework/integration/support/AckUtils

+###org/springframework/integration/aggregator/AbstractMessageAggregator
@1.0.1.RELEASE
+#<init>()V
+#setCompletionStrategy(Lorg/springframework/integration/aggregator/CompletionStrategy;)V
@2.0.0.RELEASE
-###org/springframework/integration/aggregator/AbstractMessageAggregator

+###org/springframework/integration/aggregator/AbstractMessageBarrierHandler
@1.0.1.RELEASE
+#<init>()V
+#setOutputChannel(Lorg/springframework/integration/core/MessageChannel;)V
+#setDiscardChannel(Lorg/springframework/integration/core/MessageChannel;)V
+#setSendPartialResultOnTimeout(Z)V
+#setReaperInterval(J)V
+#setTrackedCorrelationIdCapacity(I)V
+#setTimeout(J)V
+#setSendTimeout(J)V
+#setTaskScheduler(Lorg/springframework/integration/scheduling/TaskScheduler;)V
+#setAutoStartup(Z)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#afterPropertiesSet()V
+#isRunning()Z
+#start()V
+#stop()V
@1.0.2.RELEASE
+#setCorrelationStrategy(Lorg/springframework/integration/aggregator/CorrelationStrategy;)V
@2.0.0.RELEASE
-###org/springframework/integration/aggregator/AbstractMessageBarrierHandler

+###org/springframework/integration/aggregator/CompletionStrategy
@1.0.1.RELEASE
+#isComplete(Ljava/util/List;)Z
@2.0.0.RELEASE
-###org/springframework/integration/aggregator/CompletionStrategy

+###org/springframework/integration/aggregator/CompletionStrategyAdapter
@1.0.1.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#isComplete(Ljava/util/List;)Z
@2.0.0.RELEASE
-###org/springframework/integration/aggregator/CompletionStrategyAdapter

+###org/springframework/integration/aggregator/MessageBarrier
@1.0.1.RELEASE
+#<init>(Ljava/util/Map;)V
+#getCorrelationId()Ljava/lang/Object;
+#getTimestamp()J
+#setComplete()V
+#isComplete()Z
+#getMessages()Ljava/util/Map;
@1.0.2.RELEASE
+#<init>(Ljava/util/Collection;Ljava/lang/Object;)V
+#getCorrelationKey()Ljava/lang/Object;
+#getMessages()Ljava/util/Collection;
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
-#<init>(Ljava/util/Map;)V
-#getCorrelationId()Ljava/lang/Object;
-#getMessages()Ljava/util/Map;
@2.0.0.RELEASE
-###org/springframework/integration/aggregator/MessageBarrier

+###org/springframework/integration/aggregator/MessageListMethodAdapter
@1.0.1.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
@2.0.0.RELEASE
-###org/springframework/integration/aggregator/MessageListMethodAdapter

+###org/springframework/integration/aggregator/MethodInvokingAggregator
@1.0.1.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#<init>(Ljava/lang/Object;)V
+#aggregateMessages(Ljava/util/List;)Lorg/springframework/integration/core/Message;
@2.0.0.RELEASE
-###org/springframework/integration/aggregator/MethodInvokingAggregator

+###org/springframework/integration/aggregator/Resequencer
@1.0.1.RELEASE
+#<init>()V
+#setReleasePartialSequences(Z)V
@2.0.0.RELEASE
-###org/springframework/integration/aggregator/Resequencer

+###org/springframework/integration/aggregator/SequenceSizeCompletionStrategy
@1.0.1.RELEASE
+#<init>()V
+#isComplete(Ljava/util/List;)Z
@2.0.0.RELEASE
-###org/springframework/integration/aggregator/SequenceSizeCompletionStrategy

+###org/springframework/integration/annotation/CompletionStrategy
@1.0.1.RELEASE
@2.0.0.RELEASE
-###org/springframework/integration/annotation/CompletionStrategy

+###org/springframework/integration/channel/BeanFactoryChannelResolver
@1.0.1.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/beans/factory/BeanFactory;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#resolveChannelName(Ljava/lang/String;)Lorg/springframework/integration/core/MessageChannel;
@2.0.0.RELEASE
-###org/springframework/integration/channel/BeanFactoryChannelResolver

+###org/springframework/integration/channel/ChannelResolutionException
@1.0.1.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@2.0.0.RELEASE
-###org/springframework/integration/channel/ChannelResolutionException

+###org/springframework/integration/channel/ChannelResolver
@1.0.1.RELEASE
+#resolveChannelName(Ljava/lang/String;)Lorg/springframework/integration/core/MessageChannel;
@2.0.0.RELEASE
-###org/springframework/integration/channel/ChannelResolver

+###org/springframework/integration/channel/MapBasedChannelResolver
@1.0.1.RELEASE
+#<init>()V
+#setChannelMap(Ljava/util/Map;)V
+#resolveChannelName(Ljava/lang/String;)Lorg/springframework/integration/core/MessageChannel;
@1.0.3.RELEASE
+#<init>(Ljava/util/Map;)V
@2.0.0.RELEASE
-###org/springframework/integration/channel/MapBasedChannelResolver

+###org/springframework/integration/channel/MessageChannelTemplate
@1.0.1.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/integration/core/MessageChannel;)V
+#setDefaultChannel(Lorg/springframework/integration/core/MessageChannel;)V
+#setSendTimeout(J)V
+#setReceiveTimeout(J)V
+#setTransactionManager(Lorg/springframework/transaction/PlatformTransactionManager;)V
+#setPropagationBehaviorName(Ljava/lang/String;)V
+#setIsolationLevelName(Ljava/lang/String;)V
+#setTransactionTimeout(I)V
+#setTransactionReadOnly(Z)V
+#afterPropertiesSet()V
+#send(Lorg/springframework/integration/core/Message;)Z
+#send(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;)Z
+#receive()Lorg/springframework/integration/core/Message;
+#receive(Lorg/springframework/integration/channel/PollableChannel;)Lorg/springframework/integration/core/Message;
+#sendAndReceive(Lorg/springframework/integration/core/Message;)Lorg/springframework/integration/core/Message;
+#sendAndReceive(Lorg/springframework/integration/core/Message;Lorg/springframework/integration/core/MessageChannel;)Lorg/springframework/integration/core/Message;
@2.0.0.RELEASE
-###org/springframework/integration/channel/MessageChannelTemplate

+###org/springframework/integration/channel/PollableChannel
@1.0.1.RELEASE
+#receive()Lorg/springframework/integration/core/Message;
+#receive(J)Lorg/springframework/integration/core/Message;
+#clear()Ljava/util/List;
+#purge(Lorg/springframework/integration/selector/MessageSelector;)Ljava/util/List;
@2.0.0.RELEASE
-###org/springframework/integration/channel/PollableChannel

+###org/springframework/integration/channel/SubscribableChannel
@1.0.1.RELEASE
+#subscribe(Lorg/springframework/integration/message/MessageHandler;)Z
+#unsubscribe(Lorg/springframework/integration/message/MessageHandler;)Z
@2.0.0.RELEASE
-###org/springframework/integration/channel/SubscribableChannel

+###org/springframework/integration/channel/ThreadLocalChannel
@1.0.1.RELEASE
+#<init>()V
+#clear()Ljava/util/List;
+#purge(Lorg/springframework/integration/selector/MessageSelector;)Ljava/util/List;
@2.0.0.RELEASE
-###org/springframework/integration/channel/ThreadLocalChannel

+###org/springframework/integration/config/AbstractMessageHandlerFactoryBean
@1.0.1.RELEASE
+#<init>()V
+#setTargetObject(Ljava/lang/Object;)V
+#setTargetMethodName(Ljava/lang/String;)V
+#setOutputChannel(Lorg/springframework/integration/core/MessageChannel;)V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@1.0.3.RELEASE
+#setOrder(Ljava/lang/Integer;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@2.0.0.RELEASE
-###org/springframework/integration/config/AbstractMessageHandlerFactoryBean

+###org/springframework/integration/config/xml/RouterParser
@1.0.1.RELEASE
+#<init>()V
@1.0.3.RELEASE
-###org/springframework/integration/config/xml/RouterParser

+###org/springframework/integration/config/xml/SimpleHeaderEnricherParser
@1.0.1.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;[Ljava/lang/String;)V
@2.0.0.RELEASE
-###org/springframework/integration/config/xml/SimpleHeaderEnricherParser

+###org/springframework/integration/config/xml/ThreadLocalChannelParser
@1.0.1.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/integration/config/xml/ThreadLocalChannelParser

+###org/springframework/integration/config/xml/ThreadPoolTaskExecutorParser
@1.0.1.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/integration/config/xml/ThreadPoolTaskExecutorParser

+###org/springframework/integration/core/Message
@1.0.1.RELEASE
+#getHeaders()Lorg/springframework/integration/core/MessageHeaders;
+#getPayload()Ljava/lang/Object;
@2.0.0.RELEASE
-###org/springframework/integration/core/Message

+###org/springframework/integration/core/MessageChannel
@1.0.1.RELEASE
+#getName()Ljava/lang/String;
+#send(Lorg/springframework/integration/core/Message;)Z
+#send(Lorg/springframework/integration/core/Message;J)Z
@2.0.0.RELEASE
-###org/springframework/integration/core/MessageChannel

+###org/springframework/integration/core/MessageHeaders
@1.0.1.RELEASE
+#<init>(Ljava/util/Map;)V
+#getId()Ljava/lang/Object;
+#getTimestamp()Ljava/lang/Long;
+#getExpirationDate()Ljava/lang/Long;
+#getCorrelationId()Ljava/lang/Object;
+#getReplyChannel()Ljava/lang/Object;
+#getErrorChannel()Ljava/lang/Object;
+#getSequenceNumber()Ljava/lang/Integer;
+#getSequenceSize()Ljava/lang/Integer;
+#getPriority()Lorg/springframework/integration/core/MessagePriority;
+#get(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#entrySet()Ljava/util/Set;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#isEmpty()Z
+#keySet()Ljava/util/Set;
+#size()I
+#values()Ljava/util/Collection;
+#put(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@2.0.0.RELEASE
-###org/springframework/integration/core/MessageHeaders

+###org/springframework/integration/core/MessagePriority
@1.0.1.RELEASE
+#values()[Lorg/springframework/integration/core/MessagePriority;
+#valueOf(Ljava/lang/String;)Lorg/springframework/integration/core/MessagePriority;
@2.0.0.RELEASE
-###org/springframework/integration/core/MessagePriority

+###org/springframework/integration/core/MessagingException
@1.0.1.RELEASE
+#<init>(Lorg/springframework/integration/core/Message;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/integration/core/Message;Ljava/lang/String;)V
+#<init>(Lorg/springframework/integration/core/Message;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/integration/core/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getFailedMessage()Lorg/springframework/integration/core/Message;
@2.0.0.RELEASE
-###org/springframework/integration/core/MessagingException

+###org/springframework/integration/dispatcher/SimpleDispatcher
@1.0.1.RELEASE
+#<init>()V
+#dispatch(Lorg/springframework/integration/core/Message;)Z
@1.0.2.RELEASE
-###org/springframework/integration/dispatcher/SimpleDispatcher

+###org/springframework/integration/gateway/AbstractMessagingGateway
@1.0.1.RELEASE
+#<init>()V
+#setRequestChannel(Lorg/springframework/integration/core/MessageChannel;)V
+#setReplyChannel(Lorg/springframework/integration/core/MessageChannel;)V
+#setRequestTimeout(J)V
+#setReplyTimeout(J)V
+#setShouldThrowErrors(Z)V
+#send(Ljava/lang/Object;)V
+#receive()Ljava/lang/Object;
+#sendAndReceive(Ljava/lang/Object;)Ljava/lang/Object;
+#sendAndReceiveMessage(Ljava/lang/Object;)Lorg/springframework/integration/core/Message;
@2.0.0.RELEASE
-###org/springframework/integration/gateway/AbstractMessagingGateway

+###org/springframework/integration/gateway/MessagingGateway
@1.0.1.RELEASE
+#send(Ljava/lang/Object;)V
+#receive()Ljava/lang/Object;
+#sendAndReceive(Ljava/lang/Object;)Ljava/lang/Object;
+#sendAndReceiveMessage(Ljava/lang/Object;)Lorg/springframework/integration/core/Message;
@2.0.0.RELEASE
-###org/springframework/integration/gateway/MessagingGateway

+###org/springframework/integration/gateway/SimpleMessageMapper
@1.0.1.RELEASE
+#<init>()V
+#fromMessage(Lorg/springframework/integration/core/Message;)Ljava/lang/Object;
+#toMessage(Ljava/lang/Object;)Lorg/springframework/integration/core/Message;
@2.0.0.RELEASE
-###org/springframework/integration/gateway/SimpleMessageMapper

+###org/springframework/integration/gateway/SimpleMessagingGateway
@1.0.1.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/integration/message/InboundMessageMapper;Lorg/springframework/integration/message/OutboundMessageMapper;)V
@2.0.0.RELEASE
-###org/springframework/integration/gateway/SimpleMessagingGateway

+###org/springframework/integration/handler/HandlerMethodResolver
@1.0.1.RELEASE
+#resolveHandlerMethod(Lorg/springframework/integration/core/Message;)Ljava/lang/reflect/Method;
@2.0.0.RELEASE
-###org/springframework/integration/handler/HandlerMethodResolver

+###org/springframework/integration/handler/MessageMappingMethodInvoker
@1.0.1.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Class;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#invokeMethod(Lorg/springframework/integration/core/Message;)Ljava/lang/Object;
@1.0.2.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/String;Z)V
@2.0.0.RELEASE
-###org/springframework/integration/handler/MessageMappingMethodInvoker

+###org/springframework/integration/handler/PayloadTypeMatchingHandlerMethodResolver
@1.0.1.RELEASE
+#<init>([Ljava/lang/reflect/Method;)V
+#resolveHandlerMethod(Lorg/springframework/integration/core/Message;)Ljava/lang/reflect/Method;
@2.0.0.RELEASE
-###org/springframework/integration/handler/PayloadTypeMatchingHandlerMethodResolver

+###org/springframework/integration/handler/ReplyMessageHolder
@1.0.1.RELEASE
+#<init>()V
+#set(Ljava/lang/Object;)Lorg/springframework/integration/message/MessageBuilder;
+#add(Ljava/lang/Object;)Lorg/springframework/integration/message/MessageBuilder;
+#isEmpty()Z
+#builders()Ljava/util/List;
@2.0.0.RELEASE
-###org/springframework/integration/handler/ReplyMessageHolder

+###org/springframework/integration/handler/StaticHandlerMethodResolver
@1.0.1.RELEASE
+#<init>(Ljava/lang/reflect/Method;)V
+#resolveHandlerMethod(Lorg/springframework/integration/core/Message;)Ljava/lang/reflect/Method;
@2.0.0.RELEASE
-###org/springframework/integration/handler/StaticHandlerMethodResolver

+###org/springframework/integration/message/InboundMessageMapper
@1.0.1.RELEASE
+#toMessage(Ljava/lang/Object;)Lorg/springframework/integration/core/Message;
@2.0.0.RELEASE
-###org/springframework/integration/message/InboundMessageMapper

+###org/springframework/integration/message/MessageBuilder
@1.0.1.RELEASE
+#fromMessage(Lorg/springframework/integration/core/Message;)Lorg/springframework/integration/message/MessageBuilder;
+#withPayload(Ljava/lang/Object;)Lorg/springframework/integration/message/MessageBuilder;
+#setHeader(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/message/MessageBuilder;
+#setHeaderIfAbsent(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/message/MessageBuilder;
+#removeHeader(Ljava/lang/String;)Lorg/springframework/integration/message/MessageBuilder;
+#copyHeaders(Ljava/util/Map;)Lorg/springframework/integration/message/MessageBuilder;
+#copyHeadersIfAbsent(Ljava/util/Map;)Lorg/springframework/integration/message/MessageBuilder;
+#setExpirationDate(Ljava/lang/Long;)Lorg/springframework/integration/message/MessageBuilder;
+#setExpirationDate(Ljava/util/Date;)Lorg/springframework/integration/message/MessageBuilder;
+#setCorrelationId(Ljava/lang/Object;)Lorg/springframework/integration/message/MessageBuilder;
+#setReplyChannel(Lorg/springframework/integration/core/MessageChannel;)Lorg/springframework/integration/message/MessageBuilder;
+#setReplyChannelName(Ljava/lang/String;)Lorg/springframework/integration/message/MessageBuilder;
+#setErrorChannel(Lorg/springframework/integration/core/MessageChannel;)Lorg/springframework/integration/message/MessageBuilder;
+#setErrorChannelName(Ljava/lang/String;)Lorg/springframework/integration/message/MessageBuilder;
+#setSequenceNumber(Ljava/lang/Integer;)Lorg/springframework/integration/message/MessageBuilder;
+#setSequenceSize(Ljava/lang/Integer;)Lorg/springframework/integration/message/MessageBuilder;
+#setPriority(Lorg/springframework/integration/core/MessagePriority;)Lorg/springframework/integration/message/MessageBuilder;
+#build()Lorg/springframework/integration/core/Message;
@2.0.0.RELEASE
-###org/springframework/integration/message/MessageBuilder

+###org/springframework/integration/message/MessageDeliveryException
@1.0.1.RELEASE
+#<init>(Lorg/springframework/integration/core/Message;)V
+#<init>(Lorg/springframework/integration/core/Message;Ljava/lang/String;)V
+#<init>(Lorg/springframework/integration/core/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
@2.0.0.RELEASE
-###org/springframework/integration/message/MessageDeliveryException

+###org/springframework/integration/message/MessageHandler
@1.0.1.RELEASE
+#handleMessage(Lorg/springframework/integration/core/Message;)V
@2.0.0.RELEASE
-###org/springframework/integration/message/MessageHandler

+###org/springframework/integration/message/MessageHandlingException
@1.0.1.RELEASE
+#<init>(Lorg/springframework/integration/core/Message;)V
+#<init>(Lorg/springframework/integration/core/Message;Ljava/lang/String;)V
+#<init>(Lorg/springframework/integration/core/Message;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/integration/core/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
@2.0.0.RELEASE
-###org/springframework/integration/message/MessageHandlingException

+###org/springframework/integration/message/MessageRejectedException
@1.0.1.RELEASE
+#<init>(Lorg/springframework/integration/core/Message;)V
+#<init>(Lorg/springframework/integration/core/Message;Ljava/lang/String;)V
+#<init>(Lorg/springframework/integration/core/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
@2.0.0.RELEASE
-###org/springframework/integration/message/MessageRejectedException

+###org/springframework/integration/message/MessageSource
@1.0.1.RELEASE
+#receive()Lorg/springframework/integration/core/Message;
@2.0.0.RELEASE
-###org/springframework/integration/message/MessageSource

+###org/springframework/integration/message/MessageTimeoutException
@1.0.1.RELEASE
+#<init>(Lorg/springframework/integration/core/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/integration/core/Message;Ljava/lang/String;)V
+#<init>(Lorg/springframework/integration/core/Message;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/integration/core/Message;)V
@2.0.0.RELEASE
-###org/springframework/integration/message/MessageTimeoutException

+###org/springframework/integration/message/MethodInvokingMessageSource
@1.0.1.RELEASE
+#<init>()V
+#setObject(Ljava/lang/Object;)V
+#setMethod(Ljava/lang/reflect/Method;)V
+#setMethodName(Ljava/lang/String;)V
+#afterPropertiesSet()V
+#receive()Lorg/springframework/integration/core/Message;
@2.0.0.RELEASE
-###org/springframework/integration/message/MethodInvokingMessageSource

+###org/springframework/integration/message/MethodParameterMessageMapper
@1.0.1.RELEASE
+#<init>(Ljava/lang/reflect/Method;)V
+#toMessage([Ljava/lang/Object;)Lorg/springframework/integration/core/Message;
+#fromMessage(Lorg/springframework/integration/core/Message;)[Ljava/lang/Object;
+#fromMessage(Lorg/springframework/integration/core/Message;)Ljava/lang/Object;
+#toMessage(Ljava/lang/Object;)Lorg/springframework/integration/core/Message;
@2.0.0.RELEASE
-###org/springframework/integration/message/MethodParameterMessageMapper

+###org/springframework/integration/message/OutboundMessageMapper
@1.0.1.RELEASE
+#fromMessage(Lorg/springframework/integration/core/Message;)Ljava/lang/Object;
@2.0.0.RELEASE
-###org/springframework/integration/message/OutboundMessageMapper

+###org/springframework/integration/message/StringMessage
@1.0.1.RELEASE
+#<init>(Ljava/lang/String;)V
@2.0.0.RELEASE
-###org/springframework/integration/message/StringMessage

+###org/springframework/integration/router/AbstractChannelNameResolvingMessageRouter
@1.0.1.RELEASE
+#<init>()V
+#setChannelResolver(Lorg/springframework/integration/channel/ChannelResolver;)V
+#setPrefix(Ljava/lang/String;)V
+#setSuffix(Ljava/lang/String;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#afterPropertiesSet()V
@1.0.2.RELEASE
+#setIgnoreChannelNameResolutionFailures(Z)V
@2.0.0.RELEASE
-###org/springframework/integration/router/AbstractChannelNameResolvingMessageRouter

+###org/springframework/integration/router/AbstractSingleChannelNameRouter
@1.0.1.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/integration/router/AbstractSingleChannelNameRouter

+###org/springframework/integration/router/AbstractSingleChannelRouter
@1.0.1.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/integration/router/AbstractSingleChannelRouter

+###org/springframework/integration/scheduling/CronTrigger
@1.0.1.RELEASE
+#<init>(Ljava/lang/String;)V
+#getNextRunTime(Ljava/util/Date;Ljava/util/Date;)Ljava/util/Date;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.0.0.RELEASE
-###org/springframework/integration/scheduling/CronTrigger

+###org/springframework/integration/scheduling/IntervalTrigger
@1.0.1.RELEASE
+#<init>(J)V
+#<init>(JLjava/util/concurrent/TimeUnit;)V
+#setInitialDelay(J)V
+#setFixedRate(Z)V
+#getNextRunTime(Ljava/util/Date;Ljava/util/Date;)Ljava/util/Date;
@2.0.0.RELEASE
-###org/springframework/integration/scheduling/IntervalTrigger

+###org/springframework/integration/scheduling/SimpleTaskScheduler
@1.0.1.RELEASE
+#<init>(Lorg/springframework/core/task/TaskExecutor;)V
+#setAutoStartup(Z)V
+#setErrorHandler(Lorg/springframework/integration/util/ErrorHandler;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#schedule(Ljava/lang/Runnable;Lorg/springframework/integration/scheduling/Trigger;)Ljava/util/concurrent/ScheduledFuture;
+#isRunning()Z
+#start()V
+#stop()V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
+#destroy()V
+#prefersShortLivedTasks()Z
+#execute(Ljava/lang/Runnable;)V
@2.0.0.RELEASE
-###org/springframework/integration/scheduling/SimpleTaskScheduler

+###org/springframework/integration/scheduling/TaskScheduler
@1.0.1.RELEASE
+#schedule(Ljava/lang/Runnable;Lorg/springframework/integration/scheduling/Trigger;)Ljava/util/concurrent/ScheduledFuture;
@2.0.0.RELEASE
-###org/springframework/integration/scheduling/TaskScheduler

+###org/springframework/integration/scheduling/Trigger
@1.0.1.RELEASE
+#getNextRunTime(Ljava/util/Date;Ljava/util/Date;)Ljava/util/Date;
@2.0.0.RELEASE
-###org/springframework/integration/scheduling/Trigger

+###org/springframework/integration/selector/MessageSelector
@1.0.1.RELEASE
+#accept(Lorg/springframework/integration/core/Message;)Z
@2.0.0.RELEASE
-###org/springframework/integration/selector/MessageSelector

+###org/springframework/integration/transformer/AbstractHeaderTransformer
@1.0.1.RELEASE
+#<init>()V
+#transform(Lorg/springframework/integration/core/Message;)Lorg/springframework/integration/core/Message;
@2.0.0.RELEASE
-###org/springframework/integration/transformer/AbstractHeaderTransformer

+###org/springframework/integration/util/DefaultMethodInvoker
@1.0.1.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#setTypeConverter(Lorg/springframework/beans/TypeConverter;)V
+#invokeMethod([Ljava/lang/Object;)Ljava/lang/Object;
@2.0.0.RELEASE
-###org/springframework/integration/util/DefaultMethodInvoker

+###org/springframework/integration/util/ErrorHandler
@1.0.1.RELEASE
+#handle(Ljava/lang/Throwable;)V
@2.0.0.RELEASE
-###org/springframework/integration/util/ErrorHandler

+###org/springframework/integration/util/MethodInvoker
@1.0.1.RELEASE
+#invokeMethod([Ljava/lang/Object;)Ljava/lang/Object;
@2.0.0.RELEASE
-###org/springframework/integration/util/MethodInvoker

+###org/springframework/integration/util/MethodValidator
@1.0.1.RELEASE
+#validate(Ljava/lang/reflect/Method;)V
@2.0.0.RELEASE
-###org/springframework/integration/util/MethodValidator

+###org/springframework/integration/util/NameResolvingMethodInvoker
@1.0.1.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#setMethodValidator(Lorg/springframework/integration/util/MethodValidator;)V
+#invokeMethod([Ljava/lang/Object;)Ljava/lang/Object;
@2.0.0.RELEASE
-###org/springframework/integration/util/NameResolvingMethodInvoker

+###org/springframework/integration/support/MutableMessageBuilderFacfory
@4.0.0.RELEASE
+#<init>()V
+#fromMessage(Lorg/springframework/messaging/Message;)Lorg/springframework/integration/support/MutableMessageBuilder;
+#withPayload(Ljava/lang/Object;)Lorg/springframework/integration/support/MutableMessageBuilder;
+#withPayload(Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
+#fromMessage(Lorg/springframework/messaging/Message;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
@4.1.0.RELEASE
-###org/springframework/integration/support/MutableMessageBuilderFacfory

+###org/springframework/integration/config/annotation/MessagingAnnotationUtils
@4.0.0.RELEASE
+#resolveAttribute(Ljava/util/List;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#hasValue(Ljava/lang/Object;)Z
+#findAnnotatedMethod(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/reflect/Method;
@4.1.0.RELEASE
-###org/springframework/integration/config/annotation/MessagingAnnotationUtils

+###org/springframework/integration/handler/AbstractScriptExecutingMessageProcessor
@2.0.0.RELEASE
+#<init>()V
+#processMessage(Lorg/springframework/integration/Message;)Ljava/lang/Object;
@2.0.3.RELEASE
-###org/springframework/integration/handler/AbstractScriptExecutingMessageProcessor

+###org/springframework/integration/aggregator/CorrelationStrategyAdapter
@1.0.2.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#getCorrelationKey(Lorg/springframework/integration/core/Message;)Ljava/lang/Object;
@2.0.0.RELEASE
-###org/springframework/integration/aggregator/CorrelationStrategyAdapter

+###org/springframework/integration/dispatcher/AbstractUnicastDispatcher
@1.0.2.RELEASE
+#<init>()V
+#dispatch(Lorg/springframework/integration/core/Message;)Z
@1.0.3.RELEASE
-###org/springframework/integration/dispatcher/AbstractUnicastDispatcher

+###org/springframework/integration/dispatcher/FailOverDispatcher
@1.0.2.RELEASE
+#<init>()V
@1.0.3.RELEASE
-###org/springframework/integration/dispatcher/FailOverDispatcher

+###org/springframework/integration/dispatcher/RoundRobinDispatcher
@1.0.2.RELEASE
+#<init>()V
@1.0.3.RELEASE
-###org/springframework/integration/dispatcher/RoundRobinDispatcher

+###org/springframework/integration/aggregator/DefaultMessageAggregator
@1.0.3.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/integration/aggregator/DefaultMessageAggregator

+###org/springframework/integration/config/AbstractMethodAnnotationPostProcessor
@6.0.0
+#<init>()V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#processBeanDefinition(Ljava/lang/String;Lorg/springframework/beans/factory/annotation/AnnotatedBeanDefinition;Ljava/util/List;)V
+#postProcess(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/reflect/Method;Ljava/util/List;)Ljava/lang/Object;

+###org/springframework/integration/config/SplitterAnnotationPostProcessor
@6.0.0
+#<init>()V

+###org/springframework/integration/config/TransformerAnnotationPostProcessor
@6.0.0
+#<init>()V

+###org/springframework/integration/config/MessagingAnnotationPostProcessor
@6.0.0
+#<init>()V
+#postProcessBeanDefinitionRegistry(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
+#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
+#addMessagingAnnotationPostProcessor(Ljava/lang/Class;Lorg/springframework/integration/config/annotation/MethodAnnotationPostProcessor;)V
+#afterSingletonsInstantiated()V
+#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/integration/config/AggregatorAnnotationPostProcessor
@6.0.0
+#<init>()V
+#beanAnnotationAware()Z

+###org/springframework/integration/config/AbstractMethodAnnotationPostProcessor$BeanDefinitionPropertiesMapper
@6.0.0
+#setPropertyValue(Ljava/lang/String;)Lorg/springframework/integration/config/AbstractMethodAnnotationPostProcessor$BeanDefinitionPropertiesMapper;
+#setPropertyValue(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/config/AbstractMethodAnnotationPostProcessor$BeanDefinitionPropertiesMapper;
+#setPropertyReference(Ljava/lang/String;)Lorg/springframework/integration/config/AbstractMethodAnnotationPostProcessor$BeanDefinitionPropertiesMapper;
+#setPropertyReference(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/config/AbstractMethodAnnotationPostProcessor$BeanDefinitionPropertiesMapper;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#beanDefinition()Lorg/springframework/beans/factory/config/BeanDefinition;
+#annotations()Ljava/util/List;

+###org/springframework/integration/config/FilterAnnotationPostProcessor
@6.0.0
+#<init>()V

+###org/springframework/integration/config/InboundChannelAdapterAnnotationPostProcessor
@6.0.0
+#<init>()V
+#getInputChannelAttribute()Ljava/lang/String;
+#postProcess(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/reflect/Method;Ljava/util/List;)Ljava/lang/Object;

+###org/springframework/integration/config/RouterAnnotationPostProcessor
@6.0.0
+#<init>()V

+###org/springframework/integration/config/ServiceActivatorAnnotationPostProcessor
@6.0.0
+#<init>()V

+###org/springframework/integration/config/MessagingAnnotationPostProcessor$MessagingMetaAnnotation
@6.0.0
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#annotation()Ljava/lang/annotation/Annotation;
+#annotationType()Ljava/lang/Class;

+###org/springframework/integration/config/BridgeFromAnnotationPostProcessor
@6.0.0
+#<init>()V
+#getInputChannelAttribute()Ljava/lang/String;
+#supportsPojoMethod()Z
+#shouldCreateEndpoint(Lorg/springframework/core/annotation/MergedAnnotations;Ljava/util/List;)Z

+###org/springframework/integration/config/BridgeToAnnotationPostProcessor
@6.0.0
+#<init>()V
+#supportsPojoMethod()Z
+#shouldCreateEndpoint(Lorg/springframework/core/annotation/MergedAnnotations;Ljava/util/List;)Z

+###org/springframework/integration/support/management/observation/MessageReceiverObservationConvention
@6.0.0
+#getName()Ljava/lang/String;
+#supportsContext(Lio/micrometer/observation/Observation$Context;)Z
+#getContextualName(Lorg/springframework/integration/support/management/observation/MessageReceiverContext;)Ljava/lang/String;
+#getContextualName(Lio/micrometer/observation/Observation$Context;)Ljava/lang/String;

+###org/springframework/integration/support/management/observation/IntegrationObservation$HandlerTags
@6.0.0
+#values()[Lorg/springframework/integration/support/management/observation/IntegrationObservation$HandlerTags;
+#valueOf(Ljava/lang/String;)Lorg/springframework/integration/support/management/observation/IntegrationObservation$HandlerTags;

+###org/springframework/integration/support/management/observation/DefaultMessageRequestReplyReceiverObservationConvention
@6.0.0
+#<init>()V
+#getLowCardinalityKeyValues(Lorg/springframework/integration/support/management/observation/MessageRequestReplyReceiverContext;)Lio/micrometer/common/KeyValues;
+#getLowCardinalityKeyValues(Lio/micrometer/observation/Observation$Context;)Lio/micrometer/common/KeyValues;

+###org/springframework/integration/support/management/observation/DefaultMessageSenderObservationConvention
@6.0.0
+#<init>()V
+#getLowCardinalityKeyValues(Lorg/springframework/integration/support/management/observation/MessageSenderContext;)Lio/micrometer/common/KeyValues;
+#getLowCardinalityKeyValues(Lio/micrometer/observation/Observation$Context;)Lio/micrometer/common/KeyValues;

+###org/springframework/integration/support/management/observation/MessageReceiverContext
@6.0.0
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;)V
+#getCarrier()Lorg/springframework/messaging/Message;
+#getHandlerName()Ljava/lang/String;
+#getCarrier()Ljava/lang/Object;

+###org/springframework/integration/support/management/observation/IntegrationObservation$GatewayTags
@6.0.0
+#values()[Lorg/springframework/integration/support/management/observation/IntegrationObservation$GatewayTags;
+#valueOf(Ljava/lang/String;)Lorg/springframework/integration/support/management/observation/IntegrationObservation$GatewayTags;

+###org/springframework/integration/support/management/observation/IntegrationObservation
@6.0.0
+#values()[Lorg/springframework/integration/support/management/observation/IntegrationObservation;
+#valueOf(Ljava/lang/String;)Lorg/springframework/integration/support/management/observation/IntegrationObservation;

+###org/springframework/integration/support/management/observation/MessageSenderContext
@6.0.0
+#<init>(Lorg/springframework/integration/support/MutableMessage;Ljava/lang/String;)V
+#getCarrier()Lorg/springframework/integration/support/MutableMessage;
+#getProducerName()Ljava/lang/String;
+#getCarrier()Ljava/lang/Object;

+###org/springframework/integration/support/management/observation/MessageRequestReplyReceiverContext
@6.0.0
+#<init>(Lorg/springframework/messaging/Message;Ljava/lang/String;)V
+#getCarrier()Lorg/springframework/messaging/Message;
+#getGatewayName()Ljava/lang/String;
+#getCarrier()Ljava/lang/Object;

+###org/springframework/integration/support/management/observation/MessageSenderObservationConvention
@6.0.0
+#getName()Ljava/lang/String;
+#supportsContext(Lio/micrometer/observation/Observation$Context;)Z
+#getContextualName(Lorg/springframework/integration/support/management/observation/MessageSenderContext;)Ljava/lang/String;
+#getContextualName(Lio/micrometer/observation/Observation$Context;)Ljava/lang/String;

+###org/springframework/integration/support/management/observation/MessageRequestReplyReceiverObservationConvention
@6.0.0
+#getName()Ljava/lang/String;
+#supportsContext(Lio/micrometer/observation/Observation$Context;)Z
+#getContextualName(Lorg/springframework/integration/support/management/observation/MessageRequestReplyReceiverContext;)Ljava/lang/String;
+#getContextualName(Lio/micrometer/observation/Observation$Context;)Ljava/lang/String;

+###org/springframework/integration/support/management/observation/IntegrationObservation$ProducerTags
@6.0.0
+#values()[Lorg/springframework/integration/support/management/observation/IntegrationObservation$ProducerTags;
+#valueOf(Ljava/lang/String;)Lorg/springframework/integration/support/management/observation/IntegrationObservation$ProducerTags;

+###org/springframework/integration/support/management/observation/DefaultMessageReceiverObservationConvention
@6.0.0
+#<init>()V
+#getLowCardinalityKeyValues(Lorg/springframework/integration/support/management/observation/MessageReceiverContext;)Lio/micrometer/common/KeyValues;
+#getLowCardinalityKeyValues(Lio/micrometer/observation/Observation$Context;)Lio/micrometer/common/KeyValues;

+###org/springframework/integration/core/GenericHandler
@6.0.0
+#handle(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Ljava/lang/Object;

+###org/springframework/integration/core/GenericTransformer
@6.0.0
+#transform(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/integration/annotation/Splitters
@6.0.0
+#value()[Lorg/springframework/integration/annotation/Splitter;

+###org/springframework/integration/annotation/Filters
@6.0.0
+#value()[Lorg/springframework/integration/annotation/Filter;

+###org/springframework/integration/annotation/ServiceActivators
@6.0.0
+#value()[Lorg/springframework/integration/annotation/ServiceActivator;

+###org/springframework/integration/annotation/Transformers
@6.0.0
+#value()[Lorg/springframework/integration/annotation/Transformer;

+###org/springframework/integration/annotation/InboundChannelAdapters
@6.0.0
+#value()[Lorg/springframework/integration/annotation/InboundChannelAdapter;

+###org/springframework/integration/annotation/BridgeFromRepeatable
@6.0.0
+#value()[Lorg/springframework/integration/annotation/BridgeFrom;

+###org/springframework/integration/annotation/Routers
@6.0.0
+#value()[Lorg/springframework/integration/annotation/Router;

+###org/springframework/integration/annotation/Aggregators
@6.0.0
+#value()[Lorg/springframework/integration/annotation/Aggregator;

+###org/springframework/integration/annotation/BridgeToRepeatable
@6.0.0
+#value()[Lorg/springframework/integration/annotation/BridgeTo;

+###org/springframework/integration/gateway/MessagingGatewaySupport$ConvertingMessagingTemplate
@6.0.0
+#doConvert(Ljava/lang/Object;Ljava/util/Map;Lorg/springframework/messaging/core/MessagePostProcessor;)Lorg/springframework/messaging/Message;

+###org/springframework/integration/channel/DefaultHeaderChannelRegistry$MessageChannelWrapper
@6.0.0
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#channel()Lorg/springframework/messaging/MessageChannel;
+#expireAt()J

+###org/springframework/integration/channel/interceptor/ObservationPropagationChannelInterceptor
@6.0.0
+#<init>(Lio/micrometer/observation/ObservationRegistry;)V
+#afterMessageHandled(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/MessageHandler;Ljava/lang/Exception;)V

+###org/springframework/integration/handler/support/ContinuationHandlerMethodArgumentResolver
@6.0.0
+#<init>()V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/messaging/Message;)Ljava/lang/Object;

+###org/springframework/integration/handler/support/IntegrationInvocableHandlerMethod
@6.0.0
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V

+###org/springframework/integration/handler/support/IntegrationMessageHandlerMethodFactory
@6.0.0
+#<init>()V
+#<init>(Z)V
+#setMessageConverter(Lorg/springframework/messaging/converter/MessageConverter;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#afterPropertiesSet()V
+#createInvocableHandlerMethod(Ljava/lang/Object;Ljava/lang/reflect/Method;)Lorg/springframework/messaging/handler/invocation/InvocableHandlerMethod;

+###org/springframework/integration/util/CoroutinesUtils
@6.0.0
+#isContinuation(Ljava/lang/Object;)Z
+#isContinuationType(Ljava/lang/Class;)Z
+#monoAwaitSingleOrNull(Lreactor/core/publisher/Mono;Ljava/lang/Object;)Ljava/lang/Object;
