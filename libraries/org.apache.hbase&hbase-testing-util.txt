
+###org/apache/hadoop/hbase/testing/TestingHBaseCluster
@2.5.0
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#startMaster()V
+#startMaster(Ljava/lang/String;I)V
+#stopMaster(Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/concurrent/CompletableFuture;
+#startRegionServer()V
+#startRegionServer(Ljava/lang/String;I)V
+#stopRegionServer(Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/concurrent/CompletableFuture;
+#stopHBaseCluster()V
+#startHBaseCluster()V
+#isHBaseClusterRunning()Z
+#start()V
+#getActiveMasterAddress()Ljava/util/Optional;
+#getBackupMasterAddresses()Ljava/util/List;
+#getRegionServerAddresses()Ljava/util/List;
+#getRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)Ljava/util/Optional;
+#getOnlineRegionsInterface(Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/Optional;
+#isClusterRunning()Z
+#stop()V
+#create(Lorg/apache/hadoop/hbase/testing/TestingHBaseClusterOption;)Lorg/apache/hadoop/hbase/testing/TestingHBaseCluster;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/testing/TestingHBaseCluster

+###org/apache/hadoop/hbase/testing/TestingHBaseClusterOption$Builder
@2.5.0
+#build()Lorg/apache/hadoop/hbase/testing/TestingHBaseClusterOption;
+#conf(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/testing/TestingHBaseClusterOption$Builder;
+#numMasters(I)Lorg/apache/hadoop/hbase/testing/TestingHBaseClusterOption$Builder;
+#numAlwaysStandByMasters(I)Lorg/apache/hadoop/hbase/testing/TestingHBaseClusterOption$Builder;
+#numRegionServers(I)Lorg/apache/hadoop/hbase/testing/TestingHBaseClusterOption$Builder;
+#rsPorts(Ljava/util/List;)Lorg/apache/hadoop/hbase/testing/TestingHBaseClusterOption$Builder;
+#numDataNodes(I)Lorg/apache/hadoop/hbase/testing/TestingHBaseClusterOption$Builder;
+#dataNodeHosts([Ljava/lang/String;)Lorg/apache/hadoop/hbase/testing/TestingHBaseClusterOption$Builder;
+#numZkServers(I)Lorg/apache/hadoop/hbase/testing/TestingHBaseClusterOption$Builder;
+#createRootDir(Z)Lorg/apache/hadoop/hbase/testing/TestingHBaseClusterOption$Builder;
+#createWALDir(Z)Lorg/apache/hadoop/hbase/testing/TestingHBaseClusterOption$Builder;
+#useExternalDfs(Ljava/lang/String;)Lorg/apache/hadoop/hbase/testing/TestingHBaseClusterOption$Builder;
+#useExternalZooKeeper(Ljava/lang/String;)Lorg/apache/hadoop/hbase/testing/TestingHBaseClusterOption$Builder;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/testing/TestingHBaseClusterOption$Builder

+###org/apache/hadoop/hbase/testing/TestingHBaseClusterOption
@2.5.0
+#conf()Lorg/apache/hadoop/conf/Configuration;
+#getNumMasters()I
+#getNumAlwaysStandByMasters()I
+#getNumRegionServers()I
+#getRsPorts()Ljava/util/List;
+#getNumDataNodes()I
+#getDataNodeHosts()[Ljava/lang/String;
+#getNumZkServers()I
+#isCreateRootDir()Z
+#isCreateWALDir()Z
+#getExternalDfsUri()Ljava/lang/String;
+#getExternalZkConnectString()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#builder()Lorg/apache/hadoop/hbase/testing/TestingHBaseClusterOption$Builder;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/testing/TestingHBaseClusterOption

+###org/apache/hadoop/hbase/HBaseCluster
@3.0.0-alpha-2
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#getClusterMetrics()Lorg/apache/hadoop/hbase/ClusterMetrics;
+#getInitialClusterMetrics()Lorg/apache/hadoop/hbase/ClusterMetrics;
+#startRegionServer(Ljava/lang/String;I)V
+#killRegionServer(Lorg/apache/hadoop/hbase/ServerName;)V
+#isKilledRS(Lorg/apache/hadoop/hbase/ServerName;)Z
+#stopRegionServer(Lorg/apache/hadoop/hbase/ServerName;)V
+#waitForRegionServerToStart(Ljava/lang/String;IJ)V
+#waitForRegionServerToStop(Lorg/apache/hadoop/hbase/ServerName;J)V
+#suspendRegionServer(Lorg/apache/hadoop/hbase/ServerName;)V
+#resumeRegionServer(Lorg/apache/hadoop/hbase/ServerName;)V
+#startZkNode(Ljava/lang/String;I)V
+#killZkNode(Lorg/apache/hadoop/hbase/ServerName;)V
+#stopZkNode(Lorg/apache/hadoop/hbase/ServerName;)V
+#waitForZkNodeToStart(Lorg/apache/hadoop/hbase/ServerName;J)V
+#waitForZkNodeToStop(Lorg/apache/hadoop/hbase/ServerName;J)V
+#startDataNode(Lorg/apache/hadoop/hbase/ServerName;)V
+#killDataNode(Lorg/apache/hadoop/hbase/ServerName;)V
+#stopDataNode(Lorg/apache/hadoop/hbase/ServerName;)V
+#waitForDataNodeToStart(Lorg/apache/hadoop/hbase/ServerName;J)V
+#waitForDataNodeToStop(Lorg/apache/hadoop/hbase/ServerName;J)V
+#startNameNode(Lorg/apache/hadoop/hbase/ServerName;)V
+#killNameNode(Lorg/apache/hadoop/hbase/ServerName;)V
+#stopNameNode(Lorg/apache/hadoop/hbase/ServerName;)V
+#waitForNameNodeToStart(Lorg/apache/hadoop/hbase/ServerName;J)V
+#waitForNameNodeToStop(Lorg/apache/hadoop/hbase/ServerName;J)V
+#startMaster(Ljava/lang/String;I)V
+#killMaster(Lorg/apache/hadoop/hbase/ServerName;)V
+#stopMaster(Lorg/apache/hadoop/hbase/ServerName;)V
+#waitForMasterToStop(Lorg/apache/hadoop/hbase/ServerName;J)V
+#waitForActiveAndReadyMaster()Z
+#waitForActiveAndReadyMaster(J)Z
+#waitUntilShutDown()V
+#shutdown()V
+#restoreInitialStatus()Z
+#restoreClusterMetrics(Lorg/apache/hadoop/hbase/ClusterMetrics;)Z
+#getServerHoldingMeta()Lorg/apache/hadoop/hbase/ServerName;
+#getServerHoldingRegion(Lorg/apache/hadoop/hbase/TableName;[B)Lorg/apache/hadoop/hbase/ServerName;
+#isDistributedCluster()Z
+#close()V
+#waitForNamenodeAvailable()V
+#waitForDatanodesRegistered(I)V

+###org/apache/hadoop/hbase/HBaseCommonTestingUtility
@3.0.0-alpha-2
+#<init>()V
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#getDataTestDir()Lorg/apache/hadoop/fs/Path;
+#getDataTestDir(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getRandomDir()Lorg/apache/hadoop/fs/Path;
+#getRandomUUID()Ljava/util/UUID;
+#cleanupTestDir()Z
+#cleanupTestDir(Ljava/lang/String;)Z
+#waitFor(JLorg/apache/hadoop/hbase/Waiter$Predicate;)J
+#waitFor(JJLorg/apache/hadoop/hbase/Waiter$Predicate;)J
+#waitFor(JJZLorg/apache/hadoop/hbase/Waiter$Predicate;)J
+#randomFreePort()I

+###org/apache/hadoop/hbase/HBaseTestingUtility$SeenRowTracker
@3.0.0-alpha-2
+#<init>([B[B)V
+#addRow([B)V
+#validate()V

+###org/apache/hadoop/hbase/HBaseTestingUtility
@3.0.0-alpha-2
+#available(I)Z
+#memStoreTSTagsAndOffheapCombination()Ljava/util/List;
+#<init>()V
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#closeRegionAndWAL(Lorg/apache/hadoop/hbase/regionserver/Region;)V
+#closeRegionAndWAL(Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#setHBaseCluster(Lorg/apache/hadoop/hbase/HBaseCluster;)V
+#getDataTestDirOnTestFS()Lorg/apache/hadoop/fs/Path;
+#getDataTestDirOnTestFS(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#cleanupDataTestDirOnTestFS()Z
+#cleanupDataTestDirOnTestFS(Ljava/lang/String;)Z
+#startMiniDFSCluster(I)Lorg/apache/hadoop/hdfs/MiniDFSCluster;
+#startMiniDFSCluster([Ljava/lang/String;)Lorg/apache/hadoop/hdfs/MiniDFSCluster;
+#startMiniDFSCluster(I[Ljava/lang/String;)Lorg/apache/hadoop/hdfs/MiniDFSCluster;
+#startMiniDFSCluster(I[Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/hadoop/hdfs/MiniDFSCluster;
+#startMiniDFSClusterForTestWAL(I)Lorg/apache/hadoop/hdfs/MiniDFSCluster;
+#isNewVersionBehaviorEnabled()Z
+#isReadShortCircuitOn()Z
+#shutdownMiniDFSCluster()V
+#startMiniCluster(Z)Lorg/apache/hadoop/hbase/MiniHBaseCluster;[deprecated]
+#startMiniCluster(IZ)Lorg/apache/hadoop/hbase/MiniHBaseCluster;[deprecated]
+#startMiniCluster(IZZ)Lorg/apache/hadoop/hbase/MiniHBaseCluster;[deprecated]
+#startMiniCluster(IIZ)Lorg/apache/hadoop/hbase/MiniHBaseCluster;[deprecated]
+#startMiniCluster(II)Lorg/apache/hadoop/hbase/MiniHBaseCluster;[deprecated]
+#startMiniCluster(II[Ljava/lang/String;Z)Lorg/apache/hadoop/hbase/MiniHBaseCluster;[deprecated]
+#startMiniCluster(II[Ljava/lang/String;)Lorg/apache/hadoop/hbase/MiniHBaseCluster;[deprecated]
+#startMiniCluster(III)Lorg/apache/hadoop/hbase/MiniHBaseCluster;[deprecated]
+#startMiniCluster(II[Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Lorg/apache/hadoop/hbase/MiniHBaseCluster;[deprecated]
+#startMiniCluster(III[Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Lorg/apache/hadoop/hbase/MiniHBaseCluster;[deprecated]
+#startMiniCluster(III[Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;ZZ)Lorg/apache/hadoop/hbase/MiniHBaseCluster;[deprecated]
+#startMiniCluster(I)Lorg/apache/hadoop/hbase/MiniHBaseCluster;
+#startMiniCluster()Lorg/apache/hadoop/hbase/MiniHBaseCluster;
+#startMiniCluster(Lorg/apache/hadoop/hbase/StartMiniClusterOption;)Lorg/apache/hadoop/hbase/MiniHBaseCluster;
+#startMiniHBaseCluster(Lorg/apache/hadoop/hbase/StartMiniClusterOption;)Lorg/apache/hadoop/hbase/MiniHBaseCluster;
+#startMiniHBaseCluster()Lorg/apache/hadoop/hbase/MiniHBaseCluster;
+#startMiniHBaseCluster(II)Lorg/apache/hadoop/hbase/MiniHBaseCluster;[deprecated]
+#startMiniHBaseCluster(IILjava/util/List;)Lorg/apache/hadoop/hbase/MiniHBaseCluster;[deprecated]
+#startMiniHBaseCluster(IILjava/util/List;Ljava/lang/Class;Ljava/lang/Class;ZZ)Lorg/apache/hadoop/hbase/MiniHBaseCluster;[deprecated]
+#restartHBaseCluster(I)V
+#restartHBaseCluster(ILjava/util/List;)V
+#restartHBaseCluster(Lorg/apache/hadoop/hbase/StartMiniClusterOption;)V
+#getMiniHBaseCluster()Lorg/apache/hadoop/hbase/MiniHBaseCluster;
+#shutdownMiniCluster()V
+#shutdownMiniHBaseCluster()V
+#killMiniHBaseCluster()V
+#getDefaultRootDirPath(Z)Lorg/apache/hadoop/fs/Path;
+#getDefaultRootDirPath()Lorg/apache/hadoop/fs/Path;
+#createRootDir(Z)Lorg/apache/hadoop/fs/Path;
+#createRootDir()Lorg/apache/hadoop/fs/Path;
+#createWALRootDir()Lorg/apache/hadoop/fs/Path;
+#flush()V
+#flush(Lorg/apache/hadoop/hbase/TableName;)V
+#compact(Z)V
+#compact(Lorg/apache/hadoop/hbase/TableName;Z)V
+#createTable(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/Table;
+#createTable(Lorg/apache/hadoop/hbase/TableName;[Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/Table;
+#createTable(Lorg/apache/hadoop/hbase/TableName;[B)Lorg/apache/hadoop/hbase/client/Table;
+#createMultiRegionTable(Lorg/apache/hadoop/hbase/TableName;[BI)Lorg/apache/hadoop/hbase/client/Table;
+#createTable(Lorg/apache/hadoop/hbase/TableName;[[B)Lorg/apache/hadoop/hbase/client/Table;
+#createMultiRegionTable(Lorg/apache/hadoop/hbase/TableName;[[B)Lorg/apache/hadoop/hbase/client/Table;
+#createMultiRegionTable(Lorg/apache/hadoop/hbase/TableName;I[[B)Lorg/apache/hadoop/hbase/client/Table;
+#createTable(Lorg/apache/hadoop/hbase/TableName;[[B[[B)Lorg/apache/hadoop/hbase/client/Table;
+#createTable(Lorg/apache/hadoop/hbase/TableName;[[B[[BI)Lorg/apache/hadoop/hbase/client/Table;
+#createTable(Lorg/apache/hadoop/hbase/TableName;[[BI[B[BI)Lorg/apache/hadoop/hbase/client/Table;
+#createTable(Lorg/apache/hadoop/hbase/client/TableDescriptor;[[BLorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/Table;
+#createTable(Lorg/apache/hadoop/hbase/client/TableDescriptor;[[B[[BLorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/Table;
+#createTable(Lorg/apache/hadoop/hbase/client/TableDescriptor;[[B[[BLorg/apache/hadoop/hbase/regionserver/BloomType;ILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/Table;
+#createTable(Lorg/apache/hadoop/hbase/client/TableDescriptor;[[B)Lorg/apache/hadoop/hbase/client/Table;
+#createTable(Lorg/apache/hadoop/hbase/TableName;[[B[[BILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/Table;
+#createTable(Lorg/apache/hadoop/hbase/TableName;[BI)Lorg/apache/hadoop/hbase/client/Table;
+#createTable(Lorg/apache/hadoop/hbase/TableName;[[BI)Lorg/apache/hadoop/hbase/client/Table;
+#createTable(Lorg/apache/hadoop/hbase/TableName;[[BI[[B)Lorg/apache/hadoop/hbase/client/Table;
+#createMultiRegionTable(Lorg/apache/hadoop/hbase/TableName;[[BI)Lorg/apache/hadoop/hbase/client/Table;
+#createTable(Lorg/apache/hadoop/hbase/TableName;[[BII)Lorg/apache/hadoop/hbase/client/Table;
+#createTable(Lorg/apache/hadoop/hbase/TableName;[[BIILjava/lang/String;)Lorg/apache/hadoop/hbase/client/Table;
+#createTable(Lorg/apache/hadoop/hbase/TableName;[[B[I)Lorg/apache/hadoop/hbase/client/Table;
+#createTable(Lorg/apache/hadoop/hbase/TableName;[B[[B)Lorg/apache/hadoop/hbase/client/Table;
+#createMultiRegionTable(Lorg/apache/hadoop/hbase/TableName;[B)Lorg/apache/hadoop/hbase/client/Table;
+#modifyTableSync(Lorg/apache/hadoop/hbase/client/Admin;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V[deprecated]
+#setReplicas(Lorg/apache/hadoop/hbase/client/Admin;Lorg/apache/hadoop/hbase/TableName;I)V
+#deleteTable(Lorg/apache/hadoop/hbase/TableName;)V
+#deleteTableIfAny(Lorg/apache/hadoop/hbase/TableName;)V
+#createModifyableTableDescriptor(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
+#createTableDescriptor(Lorg/apache/hadoop/hbase/TableName;IIILorg/apache/hadoop/hbase/KeepDeletedCells;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
+#createModifyableTableDescriptor(Lorg/apache/hadoop/hbase/TableName;IIILorg/apache/hadoop/hbase/KeepDeletedCells;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
+#createTableDescriptor(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
+#createTableDescriptor(Lorg/apache/hadoop/hbase/TableName;[B)Lorg/apache/hadoop/hbase/client/TableDescriptor;
+#createTableDescriptor(Lorg/apache/hadoop/hbase/TableName;[[BI)Lorg/apache/hadoop/hbase/client/TableDescriptor;
+#createLocalHRegion(Lorg/apache/hadoop/hbase/client/TableDescriptor;[B[B)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#createLocalHRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#createLocalHRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#createLocalHRegion(Lorg/apache/hadoop/hbase/TableName;[B[BLorg/apache/hadoop/conf/Configuration;ZLorg/apache/hadoop/hbase/client/Durability;Lorg/apache/hadoop/hbase/wal/WAL;[[B)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#createLocalHRegionWithInMemoryFlags(Lorg/apache/hadoop/hbase/TableName;[B[BLorg/apache/hadoop/conf/Configuration;ZLorg/apache/hadoop/hbase/client/Durability;Lorg/apache/hadoop/hbase/wal/WAL;[Z[[B)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#deleteTableData(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/Table;
+#truncateTable(Lorg/apache/hadoop/hbase/TableName;Z)Lorg/apache/hadoop/hbase/client/Table;
+#truncateTable(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/Table;
+#loadTable(Lorg/apache/hadoop/hbase/client/Table;[B)I
+#loadTable(Lorg/apache/hadoop/hbase/client/Table;[BZ)I
+#loadTable(Lorg/apache/hadoop/hbase/client/Table;[[B)I
+#loadTable(Lorg/apache/hadoop/hbase/client/Table;[[B[B)I
+#loadTable(Lorg/apache/hadoop/hbase/client/Table;[[B[BZ)I
+#loadRegion(Lorg/apache/hadoop/hbase/regionserver/HRegion;[B)I
+#loadRegion(Lorg/apache/hadoop/hbase/regionserver/Region;[B)I
+#loadRegion(Lorg/apache/hadoop/hbase/regionserver/HRegion;[BZ)I
+#loadNumericRows(Lorg/apache/hadoop/hbase/client/Table;[BII)V
+#loadRandomRows(Lorg/apache/hadoop/hbase/client/Table;[BII)V
+#verifyNumericRows(Lorg/apache/hadoop/hbase/client/Table;[BIII)V
+#verifyNumericRows(Lorg/apache/hadoop/hbase/regionserver/Region;[BII)V
+#verifyNumericRows(Lorg/apache/hadoop/hbase/regionserver/HRegion;[BII)V
+#verifyNumericRows(Lorg/apache/hadoop/hbase/regionserver/Region;[BIIZ)V
+#verifyNumericRows(Lorg/apache/hadoop/hbase/regionserver/HRegion;[BIIZ)V
+#deleteNumericRows(Lorg/apache/hadoop/hbase/client/Table;[BII)V
+#countRows(Lorg/apache/hadoop/hbase/client/Table;)I
+#countRows(Lorg/apache/hadoop/hbase/client/Table;Lorg/apache/hadoop/hbase/client/Scan;)I
+#countRows(Lorg/apache/hadoop/hbase/client/Table;[[B)I
+#countRows(Lorg/apache/hadoop/hbase/TableName;)I
+#countRows(Lorg/apache/hadoop/hbase/regionserver/Region;)I
+#countRows(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/client/Scan;)I
+#countRows(Lorg/apache/hadoop/hbase/regionserver/InternalScanner;)I
+#checksumRows(Lorg/apache/hadoop/hbase/client/Table;)Ljava/lang/String;
+#createMultiRegionsInMeta(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;[[B)Ljava/util/List;
+#createWal(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/wal/WAL;
+#createRegionAndWAL(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#createRegionAndWAL(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#createRegionAndWAL(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/mob/MobFileCache;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#createRegionAndWAL(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Z)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#getMetaTableRows()Ljava/util/List;
+#getMetaTableRows(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
+#getOtherRegionServer(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)Lorg/apache/hadoop/hbase/regionserver/HRegionServer;
+#getRSForFirstRegionInTable(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/regionserver/HRegionServer;
+#startMiniMapReduceCluster()Lorg/apache/hadoop/mapred/MiniMRCluster;
+#shutdownMiniMapReduceCluster()V
+#createMockRegionServerService()Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;
+#createMockRegionServerService(Lorg/apache/hadoop/hbase/ipc/RpcServerInterface;)Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;
+#createMockRegionServerService(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;
+#enableDebug(Ljava/lang/Class;)V[deprecated]
+#expireMasterSession()V
+#expireRegionServerSession(I)V
+#expireSession(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;)V
+#expireSession(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Z)V
+#getHBaseCluster()Lorg/apache/hadoop/hbase/MiniHBaseCluster;
+#getHBaseClusterInterface()Lorg/apache/hadoop/hbase/HBaseCluster;
+#invalidateConnection()V
+#getConnection()Lorg/apache/hadoop/hbase/client/Connection;
+#getConnection(Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/client/Connection;
+#getAsyncConnection()Lorg/apache/hadoop/hbase/client/AsyncClusterConnection;
+#getAsyncConnection(Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/client/AsyncClusterConnection;
+#closeConnection()V
+#getAdmin()Lorg/apache/hadoop/hbase/client/Admin;
+#getHbck()Lorg/apache/hadoop/hbase/client/Hbck;
+#unassignRegion(Ljava/lang/String;)V
+#unassignRegion([B)V
+#unassignRegionByRow(Ljava/lang/String;Lorg/apache/hadoop/hbase/client/RegionLocator;)V
+#unassignRegionByRow([BLorg/apache/hadoop/hbase/client/RegionLocator;)V
+#getSplittableRegion(Lorg/apache/hadoop/hbase/TableName;I)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#getDFSCluster()Lorg/apache/hadoop/hdfs/MiniDFSCluster;
+#setDFSCluster(Lorg/apache/hadoop/hdfs/MiniDFSCluster;)V
+#setDFSCluster(Lorg/apache/hadoop/hdfs/MiniDFSCluster;Z)V
+#getTestFileSystem()Lorg/apache/hadoop/fs/FileSystem;
+#waitTableAvailable(Lorg/apache/hadoop/hbase/TableName;)V
+#waitTableAvailable(Lorg/apache/hadoop/hbase/TableName;J)V
+#waitTableAvailable([BJ)V
+#explainTableAvailability(Lorg/apache/hadoop/hbase/TableName;)Ljava/lang/String;
+#explainTableState(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableState$State;)Ljava/lang/String;
+#findLastTableState(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/TableState;
+#waitTableEnabled(Lorg/apache/hadoop/hbase/TableName;)V
+#waitTableEnabled([BJ)V
+#waitTableEnabled(Lorg/apache/hadoop/hbase/TableName;J)V
+#waitTableDisabled([B)V
+#waitTableDisabled(Lorg/apache/hadoop/hbase/TableName;J)V
+#waitTableDisabled([BJ)V
+#ensureSomeRegionServersAvailable(I)Z
+#ensureSomeNonStoppedRegionServersAvailable(I)Z
+#getDifferentUser(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/hbase/security/User;
+#getAllOnlineRegions(Lorg/apache/hadoop/hbase/MiniHBaseCluster;)Ljava/util/NavigableSet;
+#setMaxRecoveryErrorCount(Ljava/io/OutputStream;I)V
+#assignRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
+#moveRegionAndWait(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#waitUntilAllRegionsAssigned(Lorg/apache/hadoop/hbase/TableName;)V
+#waitUntilAllSystemRegionsAssigned()V
+#waitUntilAllRegionsAssigned(Lorg/apache/hadoop/hbase/TableName;J)V
+#getFromStoreFile(Lorg/apache/hadoop/hbase/regionserver/HStore;Lorg/apache/hadoop/hbase/client/Get;)Ljava/util/List;
+#getRegionSplitStartKeys([B[BI)[[B
+#getFromStoreFile(Lorg/apache/hadoop/hbase/regionserver/HStore;[BLjava/util/NavigableSet;)Ljava/util/List;
+#assertKVListsEqual(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V
+#safeGetAsStr(Ljava/util/List;I)Ljava/lang/String;
+#getClusterKey()Ljava/lang/String;
+#createRandomTable(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Collection;IIIII)Lorg/apache/hadoop/hbase/client/Table;
+#randomFreePort()I
+#randomMultiCastAddress()Ljava/lang/String;
+#waitForHostPort(Ljava/lang/String;I)V
+#createPreSplitLoadTestTable(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;[BLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)I
+#createPreSplitLoadTestTable(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;[BLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;IILorg/apache/hadoop/hbase/client/Durability;)I
+#createPreSplitLoadTestTable(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;[[BLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;IILorg/apache/hadoop/hbase/client/Durability;)I
+#createPreSplitLoadTestTable(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)I
+#createPreSplitLoadTestTable(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;I)I
+#createPreSplitLoadTestTable(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;I)I
+#createPreSplitLoadTestTable(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/hbase/util/RegionSplitter$SplitAlgorithm;I)I
+#getMetaRSPort(Lorg/apache/hadoop/hbase/client/Connection;)I
+#assertRegionOnServer(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;J)V
+#assertRegionOnlyOnServer(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;J)V
+#createTestRegion(Ljava/lang/String;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#createTestRegion(Ljava/lang/String;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#setFileSystemURI(Ljava/lang/String;)V
+#predicateNoRegionsInTransition()Lorg/apache/hadoop/hbase/Waiter$ExplainingPredicate;
+#predicateTableEnabled(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/Waiter$Predicate;
+#predicateTableDisabled(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/Waiter$Predicate;
+#predicateTableAvailable(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/Waiter$Predicate;
+#waitUntilNoRegionsInTransition(J)V
+#waitUntilNoRegionsInTransition()V
+#waitLabelAvailable(J[Ljava/lang/String;)V
+#generateColumnDescriptors()Ljava/util/List;
+#generateColumnDescriptors(Ljava/lang/String;)Ljava/util/List;
+#getSupportedCompressionAlgorithms()[Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;
+#getClosestRowBefore(Lorg/apache/hadoop/hbase/regionserver/Region;[B[B)Lorg/apache/hadoop/hbase/client/Result;
+#setupMiniKdc(Ljava/io/File;)Lorg/apache/hadoop/minikdc/MiniKdc;
+#getNumHFiles(Lorg/apache/hadoop/hbase/TableName;[B)I
+#getNumHFilesForRS(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;Lorg/apache/hadoop/hbase/TableName;[B)I
+#verifyTableDescriptorIgnoreTableName(Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#await(JLjava/util/function/BooleanSupplier;)V

+###org/apache/hadoop/hbase/HBaseZKTestingUtility
@3.0.0-alpha-2
+#<init>()V
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#startMiniZKCluster()Lorg/apache/hadoop/hbase/zookeeper/MiniZooKeeperCluster;
+#startMiniZKCluster(I[I)Lorg/apache/hadoop/hbase/zookeeper/MiniZooKeeperCluster;
+#getZkCluster()Lorg/apache/hadoop/hbase/zookeeper/MiniZooKeeperCluster;
+#setZkCluster(Lorg/apache/hadoop/hbase/zookeeper/MiniZooKeeperCluster;)V
+#shutdownMiniZKCluster()V
+#getZooKeeperWatcher()Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;
+#getZooKeeperWatcher(Lorg/apache/hadoop/hbase/HBaseZKTestingUtility;)Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;
+#cleanupTestDir()Z

+###org/apache/hadoop/hbase/MiniHBaseCluster$MiniHBaseClusterRegionServer
@3.0.0-alpha-2
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#run()V
+#abort(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/hadoop/hbase/MiniHBaseCluster
@3.0.0-alpha-2
+#<init>(Lorg/apache/hadoop/conf/Configuration;I)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;II)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;IILjava/lang/Class;Ljava/lang/Class;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;IIILjava/util/List;Ljava/lang/Class;Ljava/lang/Class;)V
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#startRegionServer(Ljava/lang/String;I)V
+#killRegionServer(Lorg/apache/hadoop/hbase/ServerName;)V
+#isKilledRS(Lorg/apache/hadoop/hbase/ServerName;)Z
+#stopRegionServer(Lorg/apache/hadoop/hbase/ServerName;)V
+#suspendRegionServer(Lorg/apache/hadoop/hbase/ServerName;)V
+#resumeRegionServer(Lorg/apache/hadoop/hbase/ServerName;)V
+#waitForRegionServerToStop(Lorg/apache/hadoop/hbase/ServerName;J)V
+#startZkNode(Ljava/lang/String;I)V
+#killZkNode(Lorg/apache/hadoop/hbase/ServerName;)V
+#stopZkNode(Lorg/apache/hadoop/hbase/ServerName;)V
+#waitForZkNodeToStart(Lorg/apache/hadoop/hbase/ServerName;J)V
+#waitForZkNodeToStop(Lorg/apache/hadoop/hbase/ServerName;J)V
+#startDataNode(Lorg/apache/hadoop/hbase/ServerName;)V
+#killDataNode(Lorg/apache/hadoop/hbase/ServerName;)V
+#stopDataNode(Lorg/apache/hadoop/hbase/ServerName;)V
+#waitForDataNodeToStart(Lorg/apache/hadoop/hbase/ServerName;J)V
+#waitForDataNodeToStop(Lorg/apache/hadoop/hbase/ServerName;J)V
+#startNameNode(Lorg/apache/hadoop/hbase/ServerName;)V
+#killNameNode(Lorg/apache/hadoop/hbase/ServerName;)V
+#stopNameNode(Lorg/apache/hadoop/hbase/ServerName;)V
+#waitForNameNodeToStart(Lorg/apache/hadoop/hbase/ServerName;J)V
+#waitForNameNodeToStop(Lorg/apache/hadoop/hbase/ServerName;J)V
+#startMaster(Ljava/lang/String;I)V
+#killMaster(Lorg/apache/hadoop/hbase/ServerName;)V
+#stopMaster(Lorg/apache/hadoop/hbase/ServerName;)V
+#waitForMasterToStop(Lorg/apache/hadoop/hbase/ServerName;J)V
+#startRegionServer()Lorg/apache/hadoop/hbase/util/JVMClusterUtil$RegionServerThread;
+#startRegionServerAndWait(J)Lorg/apache/hadoop/hbase/util/JVMClusterUtil$RegionServerThread;
+#abortRegionServer(I)Ljava/lang/String;
+#stopRegionServer(I)Lorg/apache/hadoop/hbase/util/JVMClusterUtil$RegionServerThread;
+#stopRegionServer(IZ)Lorg/apache/hadoop/hbase/util/JVMClusterUtil$RegionServerThread;
+#suspendRegionServer(I)Lorg/apache/hadoop/hbase/util/JVMClusterUtil$RegionServerThread;
+#resumeRegionServer(I)Lorg/apache/hadoop/hbase/util/JVMClusterUtil$RegionServerThread;
+#waitOnRegionServer(I)Ljava/lang/String;
+#startMaster()Lorg/apache/hadoop/hbase/util/JVMClusterUtil$MasterThread;
+#getMaster()Lorg/apache/hadoop/hbase/master/HMaster;
+#getMasterThread()Lorg/apache/hadoop/hbase/util/JVMClusterUtil$MasterThread;
+#getMaster(I)Lorg/apache/hadoop/hbase/master/HMaster;
+#abortMaster(I)Ljava/lang/String;
+#stopMaster(I)Lorg/apache/hadoop/hbase/util/JVMClusterUtil$MasterThread;
+#stopMaster(IZ)Lorg/apache/hadoop/hbase/util/JVMClusterUtil$MasterThread;
+#waitOnMaster(I)Ljava/lang/String;
+#waitForActiveAndReadyMaster(J)Z
+#getMasterThreads()Ljava/util/List;
+#getLiveMasterThreads()Ljava/util/List;
+#join()V
+#shutdown()V
+#close()V
+#getClusterMetrics()Lorg/apache/hadoop/hbase/ClusterMetrics;
+#flushcache()V
+#flushcache(Lorg/apache/hadoop/hbase/TableName;)V
+#compact(Z)V
+#compact(Lorg/apache/hadoop/hbase/TableName;Z)V
+#getNumLiveRegionServers()I
+#getRegionServerThreads()Ljava/util/List;
+#getLiveRegionServerThreads()Ljava/util/List;
+#getRegionServer(I)Lorg/apache/hadoop/hbase/regionserver/HRegionServer;
+#getRegionServer(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/regionserver/HRegionServer;
+#getRegions([B)Ljava/util/List;
+#getRegions(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
+#getServerWithMeta()I
+#getServerWith([B)I
+#getServerHoldingRegion(Lorg/apache/hadoop/hbase/TableName;[B)Lorg/apache/hadoop/hbase/ServerName;
+#countServedRegions()J
+#killAll()V
+#waitUntilShutDown()V
+#findRegionsForTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;

+###org/apache/hadoop/hbase/StartMiniClusterOption$Builder
@3.0.0-alpha-2
+#build()Lorg/apache/hadoop/hbase/StartMiniClusterOption;
+#numMasters(I)Lorg/apache/hadoop/hbase/StartMiniClusterOption$Builder;
+#numAlwaysStandByMasters(I)Lorg/apache/hadoop/hbase/StartMiniClusterOption$Builder;
+#masterClass(Ljava/lang/Class;)Lorg/apache/hadoop/hbase/StartMiniClusterOption$Builder;
+#numRegionServers(I)Lorg/apache/hadoop/hbase/StartMiniClusterOption$Builder;
+#rsPorts(Ljava/util/List;)Lorg/apache/hadoop/hbase/StartMiniClusterOption$Builder;
+#rsClass(Ljava/lang/Class;)Lorg/apache/hadoop/hbase/StartMiniClusterOption$Builder;
+#numDataNodes(I)Lorg/apache/hadoop/hbase/StartMiniClusterOption$Builder;
+#dataNodeHosts([Ljava/lang/String;)Lorg/apache/hadoop/hbase/StartMiniClusterOption$Builder;
+#numZkServers(I)Lorg/apache/hadoop/hbase/StartMiniClusterOption$Builder;
+#createRootDir(Z)Lorg/apache/hadoop/hbase/StartMiniClusterOption$Builder;
+#createWALDir(Z)Lorg/apache/hadoop/hbase/StartMiniClusterOption$Builder;

+###org/apache/hadoop/hbase/StartMiniClusterOption
@3.0.0-alpha-2
+#getNumMasters()I
+#getNumAlwaysStandByMasters()I
+#getMasterClass()Ljava/lang/Class;
+#getNumRegionServers()I
+#getRsPorts()Ljava/util/List;
+#getRsClass()Ljava/lang/Class;
+#getNumDataNodes()I
+#getDataNodeHosts()[Ljava/lang/String;
+#getNumZkServers()I
+#isCreateRootDir()Z
+#isCreateWALDir()Z
+#toString()Ljava/lang/String;
+#builder()Lorg/apache/hadoop/hbase/StartMiniClusterOption$Builder;
