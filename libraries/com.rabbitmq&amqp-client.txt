
+###com/rabbitmq/client/AMQP$Access$Request
@1.3.0
+#getRealm()Ljava/lang/String;
+#getExclusive()Z
+#getPassive()Z
+#getActive()Z
+#getWrite()Z
+#getRead()Z

+###com/rabbitmq/client/AMQP$Access$RequestOk
@1.3.0
+#getTicket()I

+###com/rabbitmq/client/AMQP$Access
@1.3.0
+#<init>()V

+###com/rabbitmq/client/AMQP$Basic$Ack
@1.3.0
+#getDeliveryTag()J
+#getMultiple()Z

+###com/rabbitmq/client/AMQP$Basic$Cancel
@1.3.0
+#getConsumerTag()Ljava/lang/String;
+#getNowait()Z

+###com/rabbitmq/client/AMQP$Basic$CancelOk
@1.3.0
+#getConsumerTag()Ljava/lang/String;

+###com/rabbitmq/client/AMQP$Basic$Consume
@1.3.0
+#getTicket()I
+#getQueue()Ljava/lang/String;
+#getConsumerTag()Ljava/lang/String;
+#getNoLocal()Z
+#getNoAck()Z
+#getExclusive()Z
+#getNowait()Z
@2.0.0
+#getFilter()Ljava/util/Map;
@2.1.0
+#getArguments()Ljava/util/Map;
-#getFilter()Ljava/util/Map;

+###com/rabbitmq/client/AMQP$Basic$ConsumeOk
@1.3.0
+#getConsumerTag()Ljava/lang/String;

+###com/rabbitmq/client/AMQP$Basic$Deliver
@1.3.0
+#getConsumerTag()Ljava/lang/String;
+#getDeliveryTag()J
+#getRedelivered()Z
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;

+###com/rabbitmq/client/AMQP$Basic$Get
@1.3.0
+#getTicket()I
+#getQueue()Ljava/lang/String;
+#getNoAck()Z

+###com/rabbitmq/client/AMQP$Basic$GetEmpty
@1.3.0
+#getClusterId()Ljava/lang/String;

+###com/rabbitmq/client/AMQP$Basic$GetOk
@1.3.0
+#getDeliveryTag()J
+#getRedelivered()Z
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#getMessageCount()I

+###com/rabbitmq/client/AMQP$Basic$Publish
@1.3.0
+#getTicket()I
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#getMandatory()Z
+#getImmediate()Z

+###com/rabbitmq/client/AMQP$Basic$Qos
@1.3.0
+#getPrefetchSize()I
+#getPrefetchCount()I
+#getGlobal()Z

+###com/rabbitmq/client/AMQP$Basic$QosOk
@1.3.0

+###com/rabbitmq/client/AMQP$Basic$Recover
@1.3.0
+#getRequeue()Z

+###com/rabbitmq/client/AMQP$Basic$Reject
@1.3.0
+#getDeliveryTag()J
+#getRequeue()Z

+###com/rabbitmq/client/AMQP$Basic$Return
@1.3.0
+#getReplyCode()I
+#getReplyText()Ljava/lang/String;
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;

+###com/rabbitmq/client/AMQP$Basic
@1.3.0
+#<init>()V

+###com/rabbitmq/client/AMQP$BasicProperties
@1.3.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>()V
+#getClassId()I
+#getClassName()Ljava/lang/String;
+#readPropertiesFrom(Lcom/rabbitmq/client/impl/ContentHeaderPropertyReader;)V
+#writePropertiesTo(Lcom/rabbitmq/client/impl/ContentHeaderPropertyWriter;)V
+#appendPropertyDebugStringTo(Ljava/lang/StringBuffer;)V
@1.7.2
+#getContentType()Ljava/lang/String;
+#setContentType(Ljava/lang/String;)V
+#getContentEncoding()Ljava/lang/String;
+#setContentEncoding(Ljava/lang/String;)V
+#getHeaders()Ljava/util/Map;
+#setHeaders(Ljava/util/Map;)V
+#getDeliveryMode()Ljava/lang/Integer;
+#setDeliveryMode(Ljava/lang/Integer;)V
+#getPriority()Ljava/lang/Integer;
+#setPriority(Ljava/lang/Integer;)V
+#getCorrelationId()Ljava/lang/String;
+#setCorrelationId(Ljava/lang/String;)V
+#getReplyTo()Ljava/lang/String;
+#setReplyTo(Ljava/lang/String;)V
+#getExpiration()Ljava/lang/String;
+#setExpiration(Ljava/lang/String;)V
+#getMessageId()Ljava/lang/String;
+#setMessageId(Ljava/lang/String;)V
+#getTimestamp()Ljava/util/Date;
+#setTimestamp(Ljava/util/Date;)V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)V
+#getUserId()Ljava/lang/String;
+#setUserId(Ljava/lang/String;)V
+#getAppId()Ljava/lang/String;
+#setAppId(Ljava/lang/String;)V
+#getClusterId()Ljava/lang/String;
+#setClusterId(Ljava/lang/String;)V
@2.5.0
+#<init>(Ljava/io/DataInputStream;)V
+#builder()Lcom/rabbitmq/client/AMQP$BasicProperties$Builder;
*#setContentType(Ljava/lang/String;)V[deprecated]
*#setContentEncoding(Ljava/lang/String;)V[deprecated]
*#setHeaders(Ljava/util/Map;)V[deprecated]
*#setDeliveryMode(Ljava/lang/Integer;)V[deprecated]
*#setPriority(Ljava/lang/Integer;)V[deprecated]
*#setCorrelationId(Ljava/lang/String;)V[deprecated]
*#setReplyTo(Ljava/lang/String;)V[deprecated]
*#setExpiration(Ljava/lang/String;)V[deprecated]
*#setMessageId(Ljava/lang/String;)V[deprecated]
*#setTimestamp(Ljava/util/Date;)V[deprecated]
*#setType(Ljava/lang/String;)V[deprecated]
*#setUserId(Ljava/lang/String;)V[deprecated]
*#setAppId(Ljava/lang/String;)V[deprecated]
*#setClusterId(Ljava/lang/String;)V[deprecated]
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#readPropertiesFrom(Lcom/rabbitmq/client/impl/ContentHeaderPropertyReader;)V
-#appendPropertyDebugStringTo(Ljava/lang/StringBuffer;)V
@2.6.0
+#<init>()V
@2.8.0
+#appendPropertyDebugStringTo(Ljava/lang/StringBuilder;)V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
@3.5.0
-#setContentType(Ljava/lang/String;)V[deprecated]
-#setContentEncoding(Ljava/lang/String;)V[deprecated]
-#setHeaders(Ljava/util/Map;)V[deprecated]
-#setDeliveryMode(Ljava/lang/Integer;)V[deprecated]
-#setPriority(Ljava/lang/Integer;)V[deprecated]
-#setCorrelationId(Ljava/lang/String;)V[deprecated]
-#setReplyTo(Ljava/lang/String;)V[deprecated]
-#setExpiration(Ljava/lang/String;)V[deprecated]
-#setMessageId(Ljava/lang/String;)V[deprecated]
-#setTimestamp(Ljava/util/Date;)V[deprecated]
-#setType(Ljava/lang/String;)V[deprecated]
-#setUserId(Ljava/lang/String;)V[deprecated]
-#setAppId(Ljava/lang/String;)V[deprecated]
-#setClusterId(Ljava/lang/String;)V[deprecated]
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/AMQP$Channel$Alert
@1.3.0
+#getReplyCode()I
+#getReplyText()Ljava/lang/String;
+#getDetails()Ljava/util/Map;
@2.0.0
-###com/rabbitmq/client/AMQP$Channel$Alert

+###com/rabbitmq/client/AMQP$Channel$Close
@1.3.0
+#getReplyCode()I
+#getReplyText()Ljava/lang/String;
+#getClassId()I
+#getMethodId()I

+###com/rabbitmq/client/AMQP$Channel$CloseOk
@1.3.0

+###com/rabbitmq/client/AMQP$Channel$Flow
@1.3.0
+#getActive()Z

+###com/rabbitmq/client/AMQP$Channel$FlowOk
@1.3.0
+#getActive()Z

+###com/rabbitmq/client/AMQP$Channel$Open
@1.3.0
+#getOutOfBand()Ljava/lang/String;

+###com/rabbitmq/client/AMQP$Channel$OpenOk
@1.3.0
@2.0.0
+#getChannelId()Lcom/rabbitmq/client/impl/LongString;
@2.6.0
+#getChannelId()Lcom/rabbitmq/client/LongString;
-#getChannelId()Lcom/rabbitmq/client/impl/LongString;

+###com/rabbitmq/client/AMQP$Channel
@1.3.0
+#<init>()V

+###com/rabbitmq/client/AMQP$Connection$Close
@1.3.0
+#getReplyCode()I
+#getReplyText()Ljava/lang/String;
+#getClassId()I
+#getMethodId()I

+###com/rabbitmq/client/AMQP$Connection$CloseOk
@1.3.0

+###com/rabbitmq/client/AMQP$Connection$Open
@1.3.0
+#getVirtualHost()Ljava/lang/String;
+#getCapabilities()Ljava/lang/String;
+#getInsist()Z

+###com/rabbitmq/client/AMQP$Connection$OpenOk
@1.3.0
+#getKnownHosts()Ljava/lang/String;

+###com/rabbitmq/client/AMQP$Connection$Redirect
@1.3.0
+#getHost()Ljava/lang/String;
+#getKnownHosts()Ljava/lang/String;
@2.0.0
-###com/rabbitmq/client/AMQP$Connection$Redirect

+###com/rabbitmq/client/AMQP$Connection$Secure
@1.3.0
+#getChallenge()Lcom/rabbitmq/client/impl/LongString;
@2.6.0
+#getChallenge()Lcom/rabbitmq/client/LongString;
-#getChallenge()Lcom/rabbitmq/client/impl/LongString;

+###com/rabbitmq/client/AMQP$Connection$SecureOk
@1.3.0
+#getResponse()Lcom/rabbitmq/client/impl/LongString;
@2.6.0
+#getResponse()Lcom/rabbitmq/client/LongString;
-#getResponse()Lcom/rabbitmq/client/impl/LongString;

+###com/rabbitmq/client/AMQP$Connection$Start
@1.3.0
+#getVersionMajor()I
+#getVersionMinor()I
+#getServerProperties()Ljava/util/Map;
+#getMechanisms()Lcom/rabbitmq/client/impl/LongString;
+#getLocales()Lcom/rabbitmq/client/impl/LongString;
@2.6.0
+#getMechanisms()Lcom/rabbitmq/client/LongString;
+#getLocales()Lcom/rabbitmq/client/LongString;
-#getMechanisms()Lcom/rabbitmq/client/impl/LongString;
-#getLocales()Lcom/rabbitmq/client/impl/LongString;

+###com/rabbitmq/client/AMQP$Connection$StartOk
@1.3.0
+#getClientProperties()Ljava/util/Map;
+#getMechanism()Ljava/lang/String;
+#getResponse()Lcom/rabbitmq/client/impl/LongString;
+#getLocale()Ljava/lang/String;
@2.6.0
+#getResponse()Lcom/rabbitmq/client/LongString;
-#getResponse()Lcom/rabbitmq/client/impl/LongString;

+###com/rabbitmq/client/AMQP$Connection$Tune
@1.3.0
+#getChannelMax()I
+#getFrameMax()I
+#getHeartbeat()I

+###com/rabbitmq/client/AMQP$Connection$TuneOk
@1.3.0
+#getChannelMax()I
+#getFrameMax()I
+#getHeartbeat()I

+###com/rabbitmq/client/AMQP$Connection
@1.3.0
+#<init>()V

+###com/rabbitmq/client/AMQP$Dtx$Select
@1.3.0
@2.0.0
-###com/rabbitmq/client/AMQP$Dtx$Select

+###com/rabbitmq/client/AMQP$Dtx$SelectOk
@1.3.0
@2.0.0
-###com/rabbitmq/client/AMQP$Dtx$SelectOk

+###com/rabbitmq/client/AMQP$Dtx$Start
@1.3.0
+#getDtxIdentifier()Ljava/lang/String;
@2.0.0
-###com/rabbitmq/client/AMQP$Dtx$Start

+###com/rabbitmq/client/AMQP$Dtx$StartOk
@1.3.0
@2.0.0
-###com/rabbitmq/client/AMQP$Dtx$StartOk

+###com/rabbitmq/client/AMQP$Dtx
@1.3.0
+#<init>()V
@2.0.0
-###com/rabbitmq/client/AMQP$Dtx

+###com/rabbitmq/client/AMQP$Exchange$Declare
@1.3.0
+#getTicket()I
+#getExchange()Ljava/lang/String;
+#getType()Ljava/lang/String;
+#getPassive()Z
+#getDurable()Z
+#getAutoDelete()Z
+#getInternal()Z
+#getNowait()Z
+#getArguments()Ljava/util/Map;

+###com/rabbitmq/client/AMQP$Exchange$DeclareOk
@1.3.0

+###com/rabbitmq/client/AMQP$Exchange$Delete
@1.3.0
+#getTicket()I
+#getExchange()Ljava/lang/String;
+#getIfUnused()Z
+#getNowait()Z

+###com/rabbitmq/client/AMQP$Exchange$DeleteOk
@1.3.0

+###com/rabbitmq/client/AMQP$Exchange
@1.3.0
+#<init>()V

+###com/rabbitmq/client/AMQP$File$Ack
@1.3.0
+#getDeliveryTag()J
+#getMultiple()Z
@2.0.0
-###com/rabbitmq/client/AMQP$File$Ack

+###com/rabbitmq/client/AMQP$File$Cancel
@1.3.0
+#getConsumerTag()Ljava/lang/String;
+#getNowait()Z
@2.0.0
-###com/rabbitmq/client/AMQP$File$Cancel

+###com/rabbitmq/client/AMQP$File$CancelOk
@1.3.0
+#getConsumerTag()Ljava/lang/String;
@2.0.0
-###com/rabbitmq/client/AMQP$File$CancelOk

+###com/rabbitmq/client/AMQP$File$Consume
@1.3.0
+#getTicket()I
+#getQueue()Ljava/lang/String;
+#getConsumerTag()Ljava/lang/String;
+#getNoLocal()Z
+#getNoAck()Z
+#getExclusive()Z
+#getNowait()Z
@2.0.0
-###com/rabbitmq/client/AMQP$File$Consume

+###com/rabbitmq/client/AMQP$File$ConsumeOk
@1.3.0
+#getConsumerTag()Ljava/lang/String;
@2.0.0
-###com/rabbitmq/client/AMQP$File$ConsumeOk

+###com/rabbitmq/client/AMQP$File$Deliver
@1.3.0
+#getConsumerTag()Ljava/lang/String;
+#getDeliveryTag()J
+#getRedelivered()Z
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#getIdentifier()Ljava/lang/String;
@2.0.0
-###com/rabbitmq/client/AMQP$File$Deliver

+###com/rabbitmq/client/AMQP$File$Open
@1.3.0
+#getIdentifier()Ljava/lang/String;
+#getContentSize()J
@2.0.0
-###com/rabbitmq/client/AMQP$File$Open

+###com/rabbitmq/client/AMQP$File$OpenOk
@1.3.0
+#getStagedSize()J
@2.0.0
-###com/rabbitmq/client/AMQP$File$OpenOk

+###com/rabbitmq/client/AMQP$File$Publish
@1.3.0
+#getTicket()I
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#getMandatory()Z
+#getImmediate()Z
+#getIdentifier()Ljava/lang/String;
@2.0.0
-###com/rabbitmq/client/AMQP$File$Publish

+###com/rabbitmq/client/AMQP$File$Qos
@1.3.0
+#getPrefetchSize()I
+#getPrefetchCount()I
+#getGlobal()Z
@2.0.0
-###com/rabbitmq/client/AMQP$File$Qos

+###com/rabbitmq/client/AMQP$File$QosOk
@1.3.0
@2.0.0
-###com/rabbitmq/client/AMQP$File$QosOk

+###com/rabbitmq/client/AMQP$File$Reject
@1.3.0
+#getDeliveryTag()J
+#getRequeue()Z
@2.0.0
-###com/rabbitmq/client/AMQP$File$Reject

+###com/rabbitmq/client/AMQP$File$Return
@1.3.0
+#getReplyCode()I
+#getReplyText()Ljava/lang/String;
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
@2.0.0
-###com/rabbitmq/client/AMQP$File$Return

+###com/rabbitmq/client/AMQP$File$Stage
@1.3.0
@2.0.0
-###com/rabbitmq/client/AMQP$File$Stage

+###com/rabbitmq/client/AMQP$File
@1.3.0
+#<init>()V
@2.0.0
-###com/rabbitmq/client/AMQP$File

+###com/rabbitmq/client/AMQP$FileProperties
@1.3.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V
+#<init>()V
+#getClassId()I
+#getClassName()Ljava/lang/String;
+#readPropertiesFrom(Lcom/rabbitmq/client/impl/ContentHeaderPropertyReader;)V
+#writePropertiesTo(Lcom/rabbitmq/client/impl/ContentHeaderPropertyWriter;)V
+#appendPropertyDebugStringTo(Ljava/lang/StringBuffer;)V
@1.7.2
+#getContentType()Ljava/lang/String;
+#setContentType(Ljava/lang/String;)V
+#getContentEncoding()Ljava/lang/String;
+#setContentEncoding(Ljava/lang/String;)V
+#getHeaders()Ljava/util/Map;
+#setHeaders(Ljava/util/Map;)V
+#getPriority()Ljava/lang/Integer;
+#setPriority(Ljava/lang/Integer;)V
+#getReplyTo()Ljava/lang/String;
+#setReplyTo(Ljava/lang/String;)V
+#getMessageId()Ljava/lang/String;
+#setMessageId(Ljava/lang/String;)V
+#getFilename()Ljava/lang/String;
+#setFilename(Ljava/lang/String;)V
+#getTimestamp()Ljava/util/Date;
+#setTimestamp(Ljava/util/Date;)V
+#getClusterId()Ljava/lang/String;
+#setClusterId(Ljava/lang/String;)V
@2.0.0
-###com/rabbitmq/client/AMQP$FileProperties

+###com/rabbitmq/client/AMQP$PROTOCOL
@1.3.0
+#<init>()V

+###com/rabbitmq/client/AMQP$Queue$Bind
@1.3.0
+#getTicket()I
+#getQueue()Ljava/lang/String;
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#getNowait()Z
+#getArguments()Ljava/util/Map;

+###com/rabbitmq/client/AMQP$Queue$BindOk
@1.3.0

+###com/rabbitmq/client/AMQP$Queue$Declare
@1.3.0
+#getTicket()I
+#getQueue()Ljava/lang/String;
+#getPassive()Z
+#getDurable()Z
+#getExclusive()Z
+#getAutoDelete()Z
+#getNowait()Z
+#getArguments()Ljava/util/Map;

+###com/rabbitmq/client/AMQP$Queue$DeclareOk
@1.3.0
+#getQueue()Ljava/lang/String;
+#getMessageCount()I
+#getConsumerCount()I

+###com/rabbitmq/client/AMQP$Queue$Delete
@1.3.0
+#getTicket()I
+#getQueue()Ljava/lang/String;
+#getIfUnused()Z
+#getIfEmpty()Z
+#getNowait()Z

+###com/rabbitmq/client/AMQP$Queue$DeleteOk
@1.3.0
+#getMessageCount()I

+###com/rabbitmq/client/AMQP$Queue$Purge
@1.3.0
+#getTicket()I
+#getQueue()Ljava/lang/String;
+#getNowait()Z

+###com/rabbitmq/client/AMQP$Queue$PurgeOk
@1.3.0
+#getMessageCount()I

+###com/rabbitmq/client/AMQP$Queue$Unbind
@1.5.4
+#getTicket()I
+#getQueue()Ljava/lang/String;
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#getArguments()Ljava/util/Map;

+###com/rabbitmq/client/AMQP$Queue$UnbindOk
@1.5.4

+###com/rabbitmq/client/AMQP$Queue
@1.3.0
+#<init>()V

+###com/rabbitmq/client/AMQP$Stream$Cancel
@1.3.0
+#getConsumerTag()Ljava/lang/String;
+#getNowait()Z
@2.0.0
-###com/rabbitmq/client/AMQP$Stream$Cancel

+###com/rabbitmq/client/AMQP$Stream$CancelOk
@1.3.0
+#getConsumerTag()Ljava/lang/String;
@2.0.0
-###com/rabbitmq/client/AMQP$Stream$CancelOk

+###com/rabbitmq/client/AMQP$Stream$Consume
@1.3.0
+#getTicket()I
+#getQueue()Ljava/lang/String;
+#getConsumerTag()Ljava/lang/String;
+#getNoLocal()Z
+#getExclusive()Z
+#getNowait()Z
@2.0.0
-###com/rabbitmq/client/AMQP$Stream$Consume

+###com/rabbitmq/client/AMQP$Stream$ConsumeOk
@1.3.0
+#getConsumerTag()Ljava/lang/String;
@2.0.0
-###com/rabbitmq/client/AMQP$Stream$ConsumeOk

+###com/rabbitmq/client/AMQP$Stream$Deliver
@1.3.0
+#getConsumerTag()Ljava/lang/String;
+#getDeliveryTag()J
+#getExchange()Ljava/lang/String;
+#getQueue()Ljava/lang/String;
@2.0.0
-###com/rabbitmq/client/AMQP$Stream$Deliver

+###com/rabbitmq/client/AMQP$Stream$Publish
@1.3.0
+#getTicket()I
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#getMandatory()Z
+#getImmediate()Z
@2.0.0
-###com/rabbitmq/client/AMQP$Stream$Publish

+###com/rabbitmq/client/AMQP$Stream$Qos
@1.3.0
+#getPrefetchSize()I
+#getPrefetchCount()I
+#getConsumeRate()I
+#getGlobal()Z
@2.0.0
-###com/rabbitmq/client/AMQP$Stream$Qos

+###com/rabbitmq/client/AMQP$Stream$QosOk
@1.3.0
@2.0.0
-###com/rabbitmq/client/AMQP$Stream$QosOk

+###com/rabbitmq/client/AMQP$Stream$Return
@1.3.0
+#getReplyCode()I
+#getReplyText()Ljava/lang/String;
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
@2.0.0
-###com/rabbitmq/client/AMQP$Stream$Return

+###com/rabbitmq/client/AMQP$Stream
@1.3.0
+#<init>()V
@2.0.0
-###com/rabbitmq/client/AMQP$Stream

+###com/rabbitmq/client/AMQP$StreamProperties
@1.3.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/lang/Integer;Ljava/util/Date;)V
+#<init>()V
+#getClassId()I
+#getClassName()Ljava/lang/String;
+#readPropertiesFrom(Lcom/rabbitmq/client/impl/ContentHeaderPropertyReader;)V
+#writePropertiesTo(Lcom/rabbitmq/client/impl/ContentHeaderPropertyWriter;)V
+#appendPropertyDebugStringTo(Ljava/lang/StringBuffer;)V
@1.7.2
+#getContentType()Ljava/lang/String;
+#setContentType(Ljava/lang/String;)V
+#getContentEncoding()Ljava/lang/String;
+#setContentEncoding(Ljava/lang/String;)V
+#getHeaders()Ljava/util/Map;
+#setHeaders(Ljava/util/Map;)V
+#getPriority()Ljava/lang/Integer;
+#setPriority(Ljava/lang/Integer;)V
+#getTimestamp()Ljava/util/Date;
+#setTimestamp(Ljava/util/Date;)V
@2.0.0
-###com/rabbitmq/client/AMQP$StreamProperties

+###com/rabbitmq/client/AMQP$Test$Content
@1.3.0
@2.0.0
-###com/rabbitmq/client/AMQP$Test$Content

+###com/rabbitmq/client/AMQP$Test$ContentOk
@1.3.0
+#getContentChecksum()I
@2.0.0
-###com/rabbitmq/client/AMQP$Test$ContentOk

+###com/rabbitmq/client/AMQP$Test$Integer
@1.3.0
+#getInteger1()I
+#getInteger2()I
+#getInteger3()I
+#getInteger4()J
+#getOperation()I
@2.0.0
-###com/rabbitmq/client/AMQP$Test$Integer

+###com/rabbitmq/client/AMQP$Test$IntegerOk
@1.3.0
+#getResult()J
@2.0.0
-###com/rabbitmq/client/AMQP$Test$IntegerOk

+###com/rabbitmq/client/AMQP$Test$String
@1.3.0
+#getString1()Ljava/lang/String;
+#getString2()Lcom/rabbitmq/client/impl/LongString;
+#getOperation()I
@2.0.0
-###com/rabbitmq/client/AMQP$Test$String

+###com/rabbitmq/client/AMQP$Test$StringOk
@1.3.0
+#getResult()Lcom/rabbitmq/client/impl/LongString;
@2.0.0
-###com/rabbitmq/client/AMQP$Test$StringOk

+###com/rabbitmq/client/AMQP$Test$Table
@1.3.0
+#getTable()Ljava/util/Map;
+#getIntegerOp()I
+#getStringOp()I
@2.0.0
-###com/rabbitmq/client/AMQP$Test$Table

+###com/rabbitmq/client/AMQP$Test$TableOk
@1.3.0
+#getIntegerResult()J
+#getStringResult()Lcom/rabbitmq/client/impl/LongString;
@2.0.0
-###com/rabbitmq/client/AMQP$Test$TableOk

+###com/rabbitmq/client/AMQP$Test
@1.3.0
+#<init>()V
@2.0.0
-###com/rabbitmq/client/AMQP$Test

+###com/rabbitmq/client/AMQP$TestProperties
@1.3.0
+#<init>()V
+#getClassId()I
+#getClassName()Ljava/lang/String;
+#readPropertiesFrom(Lcom/rabbitmq/client/impl/ContentHeaderPropertyReader;)V
+#writePropertiesTo(Lcom/rabbitmq/client/impl/ContentHeaderPropertyWriter;)V
+#appendPropertyDebugStringTo(Ljava/lang/StringBuffer;)V
@2.0.0
-###com/rabbitmq/client/AMQP$TestProperties

+###com/rabbitmq/client/AMQP$Tunnel$Request
@1.3.0
+#getMetaData()Ljava/util/Map;
@2.0.0
-###com/rabbitmq/client/AMQP$Tunnel$Request

+###com/rabbitmq/client/AMQP$Tunnel
@1.3.0
+#<init>()V
@2.0.0
-###com/rabbitmq/client/AMQP$Tunnel

+###com/rabbitmq/client/AMQP$TunnelProperties
@1.3.0
+#<init>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;)V
+#<init>()V
+#getClassId()I
+#getClassName()Ljava/lang/String;
+#readPropertiesFrom(Lcom/rabbitmq/client/impl/ContentHeaderPropertyReader;)V
+#writePropertiesTo(Lcom/rabbitmq/client/impl/ContentHeaderPropertyWriter;)V
+#appendPropertyDebugStringTo(Ljava/lang/StringBuffer;)V
@1.7.2
+#getHeaders()Ljava/util/Map;
+#setHeaders(Ljava/util/Map;)V
+#getProxyName()Ljava/lang/String;
+#setProxyName(Ljava/lang/String;)V
+#getDataName()Ljava/lang/String;
+#setDataName(Ljava/lang/String;)V
+#getDurable()Ljava/lang/Integer;
+#setDurable(Ljava/lang/Integer;)V
+#getBroadcast()Ljava/lang/Integer;
+#setBroadcast(Ljava/lang/Integer;)V
@2.0.0
-###com/rabbitmq/client/AMQP$TunnelProperties

+###com/rabbitmq/client/AMQP$Tx$Commit
@1.3.0

+###com/rabbitmq/client/AMQP$Tx$CommitOk
@1.3.0

+###com/rabbitmq/client/AMQP$Tx$Rollback
@1.3.0

+###com/rabbitmq/client/AMQP$Tx$RollbackOk
@1.3.0

+###com/rabbitmq/client/AMQP$Tx$Select
@1.3.0

+###com/rabbitmq/client/AMQP$Tx$SelectOk
@1.3.0

+###com/rabbitmq/client/AMQP$Tx
@1.3.0
+#<init>()V

+###com/rabbitmq/client/AMQP
@1.3.0

+###com/rabbitmq/client/Address
@1.3.0
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;)V
+#getHost()Ljava/lang/String;
+#getPort()I
+#parseAddress(Ljava/lang/String;)Lcom/rabbitmq/client/Address;
+#parseAddresses(Ljava/lang/String;)[Lcom/rabbitmq/client/Address;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@4.8.0
+#parseHost(Ljava/lang/String;)Ljava/lang/String;
+#parsePort(Ljava/lang/String;)I
+#isHostWithPort(Ljava/lang/String;)Z
@5.0.0
-#parseHost(Ljava/lang/String;)Ljava/lang/String;
-#parsePort(Ljava/lang/String;)I
-#isHostWithPort(Ljava/lang/String;)Z
@5.4.0
+#parseHost(Ljava/lang/String;)Ljava/lang/String;
+#parsePort(Ljava/lang/String;)I
+#isHostWithPort(Ljava/lang/String;)Z
@5.16.0
+#toInetSocketAddress(I)Ljava/net/InetSocketAddress;

+###com/rabbitmq/client/AlreadyClosedException
@1.5.4
+#<init>(Ljava/lang/String;Ljava/lang/Object;)V
@3.3.0
+#<init>(Lcom/rabbitmq/client/ShutdownSignalException;)V
-#<init>(Ljava/lang/String;Ljava/lang/Object;)V
@3.3.1
+#<init>(Lcom/rabbitmq/client/ShutdownSignalException;Ljava/lang/Throwable;)V

+###com/rabbitmq/client/Channel
@1.3.0
+#getChannelNumber()I
+#getConnection()Lcom/rabbitmq/client/Connection;
+#close(ILjava/lang/String;)V
+#getReturnListener()Lcom/rabbitmq/client/ReturnListener;
+#setReturnListener(Lcom/rabbitmq/client/ReturnListener;)V
+#accessRequest(Ljava/lang/String;)I
+#accessRequest(Ljava/lang/String;ZZZZZ)I
+#basicPublish(ILjava/lang/String;Ljava/lang/String;Lcom/rabbitmq/client/AMQP$BasicProperties;[B)V
+#basicPublish(ILjava/lang/String;Ljava/lang/String;ZZLcom/rabbitmq/client/AMQP$BasicProperties;[B)V
+#exchangeDelete(ILjava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$DeleteOk;
+#exchangeDeclare(ILjava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDelete(ILjava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Exchange$DeleteOk;
+#exchangeDeclare(ILjava/lang/String;Ljava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#queueDeclare(ILjava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
+#exchangeDeclare(ILjava/lang/String;Ljava/lang/String;ZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#queueDeclare(I)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
+#queueDeclare(ILjava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
+#queueDeclare(ILjava/lang/String;ZZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
+#queueDelete(ILjava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$DeleteOk;
+#queueDelete(ILjava/lang/String;ZZ)Lcom/rabbitmq/client/AMQP$Queue$DeleteOk;
+#queueBind(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$BindOk;
+#queueBind(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$BindOk;
+#basicGet(ILjava/lang/String;Z)Lcom/rabbitmq/client/GetResponse;
+#basicAck(JZ)V
+#basicConsume(ILjava/lang/String;Lcom/rabbitmq/client/Consumer;)Ljava/lang/String;
+#basicConsume(ILjava/lang/String;ZLcom/rabbitmq/client/Consumer;)Ljava/lang/String;
+#basicConsume(ILjava/lang/String;ZLjava/lang/String;Lcom/rabbitmq/client/Consumer;)Ljava/lang/String;
+#basicConsume(ILjava/lang/String;ZLjava/lang/String;ZZLcom/rabbitmq/client/Consumer;)Ljava/lang/String;
+#basicCancel(Ljava/lang/String;)V
+#txSelect()Lcom/rabbitmq/client/AMQP$Tx$SelectOk;
+#txCommit()Lcom/rabbitmq/client/AMQP$Tx$CommitOk;
+#txRollback()Lcom/rabbitmq/client/AMQP$Tx$RollbackOk;
@1.5.4
+#close()V
+#abort()V
+#abort(ILjava/lang/String;)V
+#basicPublish(Ljava/lang/String;Ljava/lang/String;Lcom/rabbitmq/client/AMQP$BasicProperties;[B)V
+#basicPublish(Ljava/lang/String;Ljava/lang/String;ZZLcom/rabbitmq/client/AMQP$BasicProperties;[B)V
+#exchangeDelete(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$DeleteOk;
+#exchangeDeclare(Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDelete(Ljava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Exchange$DeleteOk;
+#exchangeDeclare(Ljava/lang/String;Ljava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDeclare(Ljava/lang/String;Ljava/lang/String;ZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#queueDeclare()Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
+#queueDeclare(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
+#queueDeclare(Ljava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
+#queueDeclare(Ljava/lang/String;ZZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
+#queueDelete(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$DeleteOk;
+#queueDelete(Ljava/lang/String;ZZ)Lcom/rabbitmq/client/AMQP$Queue$DeleteOk;
+#queueBind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$BindOk;
+#queueBind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$BindOk;
+#queueUnbind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$UnbindOk;
+#queueUnbind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$UnbindOk;
+#basicGet(Ljava/lang/String;Z)Lcom/rabbitmq/client/GetResponse;
+#basicConsume(Ljava/lang/String;Lcom/rabbitmq/client/Consumer;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLcom/rabbitmq/client/Consumer;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;Lcom/rabbitmq/client/Consumer;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;ZZLcom/rabbitmq/client/Consumer;)Ljava/lang/String;
-#accessRequest(Ljava/lang/String;)I
-#accessRequest(Ljava/lang/String;ZZZZZ)I
-#basicPublish(ILjava/lang/String;Ljava/lang/String;Lcom/rabbitmq/client/AMQP$BasicProperties;[B)V
-#basicPublish(ILjava/lang/String;Ljava/lang/String;ZZLcom/rabbitmq/client/AMQP$BasicProperties;[B)V
-#exchangeDelete(ILjava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$DeleteOk;
-#exchangeDeclare(ILjava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
-#exchangeDelete(ILjava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Exchange$DeleteOk;
-#exchangeDeclare(ILjava/lang/String;Ljava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
-#queueDeclare(ILjava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
-#exchangeDeclare(ILjava/lang/String;Ljava/lang/String;ZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
-#queueDeclare(I)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
-#queueDeclare(ILjava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
-#queueDeclare(ILjava/lang/String;ZZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
-#queueDelete(ILjava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$DeleteOk;
-#queueDelete(ILjava/lang/String;ZZ)Lcom/rabbitmq/client/AMQP$Queue$DeleteOk;
-#queueBind(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$BindOk;
-#queueBind(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$BindOk;
-#basicGet(ILjava/lang/String;Z)Lcom/rabbitmq/client/GetResponse;
-#basicConsume(ILjava/lang/String;Lcom/rabbitmq/client/Consumer;)Ljava/lang/String;
-#basicConsume(ILjava/lang/String;ZLcom/rabbitmq/client/Consumer;)Ljava/lang/String;
-#basicConsume(ILjava/lang/String;ZLjava/lang/String;Lcom/rabbitmq/client/Consumer;)Ljava/lang/String;
-#basicConsume(ILjava/lang/String;ZLjava/lang/String;ZZLcom/rabbitmq/client/Consumer;)Ljava/lang/String;
@1.6.0
+#basicQos(IIZ)V
+#basicQos(I)V
@1.7.2
+#queuePurge(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$PurgeOk;
+#queuePurge(Ljava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Queue$PurgeOk;
+#basicRecoverAsync(Z)V
@1.8.0
+#flow(Z)Lcom/rabbitmq/client/AMQP$Channel$FlowOk;
+#exchangeDeclare(Ljava/lang/String;Ljava/lang/String;ZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDeclarePassive(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#queueDeclare(Ljava/lang/String;ZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
+#queueDeclarePassive(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
-#exchangeDeclare(Ljava/lang/String;Ljava/lang/String;ZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
-#queueDeclare(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
-#queueDeclare(Ljava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
-#queueDeclare(Ljava/lang/String;ZZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
@1.8.1
+#getFlow()Lcom/rabbitmq/client/AMQP$Channel$FlowOk;
+#getFlowListener()Lcom/rabbitmq/client/FlowListener;
+#setFlowListener(Lcom/rabbitmq/client/FlowListener;)V
+#getDefaultConsumer()Lcom/rabbitmq/client/Consumer;
+#setDefaultConsumer(Lcom/rabbitmq/client/Consumer;)V
+#basicRecover(Z)Lcom/rabbitmq/client/AMQP$Basic$RecoverOk;
*#basicRecoverAsync(Z)V[deprecated]
@2.0.0
+#basicReject(JZ)V
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;ZZLjava/util/Map;Lcom/rabbitmq/client/Consumer;)Ljava/lang/String;
-#basicConsume(Ljava/lang/String;ZLjava/lang/String;ZZLcom/rabbitmq/client/Consumer;)Ljava/lang/String;
@2.1.0
-#queuePurge(Ljava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Queue$PurgeOk;
@2.1.1
+#exchangeBind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$BindOk;
+#exchangeBind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$BindOk;
+#exchangeUnbind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$UnbindOk;
+#exchangeUnbind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$UnbindOk;
@2.2.0
+#basicRecover()Lcom/rabbitmq/client/AMQP$Basic$RecoverOk;
@2.3.0
+#getConfirmListener()Lcom/rabbitmq/client/ConfirmListener;
+#setConfirmListener(Lcom/rabbitmq/client/ConfirmListener;)V
+#exchangeDeclare(Ljava/lang/String;Ljava/lang/String;ZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#basicNack(JZZ)V
+#confirmSelect()Lcom/rabbitmq/client/AMQP$Confirm$SelectOk;
+#getNextPublishSeqNo()J
@2.5.0
+#asyncRpc(Lcom/rabbitmq/client/Method;)V
+#rpc(Lcom/rabbitmq/client/Method;)Lcom/rabbitmq/client/Method;
@2.6.0
+#addReturnListener(Lcom/rabbitmq/client/ReturnListener;)V
+#removeReturnListener(Lcom/rabbitmq/client/ReturnListener;)Z
+#clearReturnListeners()V
+#addFlowListener(Lcom/rabbitmq/client/FlowListener;)V
+#removeFlowListener(Lcom/rabbitmq/client/FlowListener;)Z
+#clearFlowListeners()V
+#addConfirmListener(Lcom/rabbitmq/client/ConfirmListener;)V
+#removeConfirmListener(Lcom/rabbitmq/client/ConfirmListener;)Z
+#clearConfirmListeners()V
+#waitForConfirms()Z
+#waitForConfirmsOrDie()V
+#rpc(Lcom/rabbitmq/client/Method;)Lcom/rabbitmq/client/Command;
-#getReturnListener()Lcom/rabbitmq/client/ReturnListener;
-#setReturnListener(Lcom/rabbitmq/client/ReturnListener;)V
-#getFlowListener()Lcom/rabbitmq/client/FlowListener;
-#setFlowListener(Lcom/rabbitmq/client/FlowListener;)V
-#getConfirmListener()Lcom/rabbitmq/client/ConfirmListener;
-#setConfirmListener(Lcom/rabbitmq/client/ConfirmListener;)V
-#rpc(Lcom/rabbitmq/client/Method;)Lcom/rabbitmq/client/Method;
@2.8.0
+#waitForConfirms(J)Z
+#waitForConfirmsOrDie(J)V
@3.0.0
+#basicPublish(Ljava/lang/String;Ljava/lang/String;ZLcom/rabbitmq/client/AMQP$BasicProperties;[B)V
@3.3.0
+#flowBlocked()Z
+#basicQos(IZ)V
+#basicConsume(Ljava/lang/String;ZLjava/util/Map;Lcom/rabbitmq/client/Consumer;)Ljava/lang/String;
-#flow(Z)Lcom/rabbitmq/client/AMQP$Channel$FlowOk;
-#getFlow()Lcom/rabbitmq/client/AMQP$Channel$FlowOk;
@3.4.0
+#exchangeDeclareNoWait(Ljava/lang/String;Ljava/lang/String;ZZZLjava/util/Map;)V
+#exchangeDeleteNoWait(Ljava/lang/String;Z)V
+#exchangeBindNoWait(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#exchangeUnbindNoWait(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#queueDeclareNoWait(Ljava/lang/String;ZZZLjava/util/Map;)V
+#queueDeleteNoWait(Ljava/lang/String;ZZ)V
+#queueBindNoWait(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
@3.5.0
-#basicRecoverAsync(Z)V[deprecated]
@3.6.0
+#messageCount(Ljava/lang/String;)J
+#consumerCount(Ljava/lang/String;)J
@3.6.6
+#exchangeDeclare(Ljava/lang/String;Lcom/rabbitmq/client/BuiltinExchangeType;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDeclare(Ljava/lang/String;Lcom/rabbitmq/client/BuiltinExchangeType;Z)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDeclare(Ljava/lang/String;Lcom/rabbitmq/client/BuiltinExchangeType;ZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDeclare(Ljava/lang/String;Lcom/rabbitmq/client/BuiltinExchangeType;ZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDeclareNoWait(Ljava/lang/String;Lcom/rabbitmq/client/BuiltinExchangeType;ZZZLjava/util/Map;)V
@5.0.0
+#addReturnListener(Lcom/rabbitmq/client/ReturnCallback;)Lcom/rabbitmq/client/ReturnListener;
+#addConfirmListener(Lcom/rabbitmq/client/ConfirmCallback;Lcom/rabbitmq/client/ConfirmCallback;)Lcom/rabbitmq/client/ConfirmListener;
+#basicConsume(Ljava/lang/String;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/util/Map;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/util/Map;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/util/Map;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;ZZLjava/util/Map;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;ZZLjava/util/Map;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;ZZLjava/util/Map;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#asyncCompletableRpc(Lcom/rabbitmq/client/Method;)Ljava/util/concurrent/CompletableFuture;
-#flowBlocked()Z
-#addFlowListener(Lcom/rabbitmq/client/FlowListener;)V
-#removeFlowListener(Lcom/rabbitmq/client/FlowListener;)Z
-#clearFlowListeners()V

+###com/rabbitmq/client/Command
@1.3.0
+#getMethod()Lcom/rabbitmq/client/impl/Method;
+#getContentHeader()Lcom/rabbitmq/client/ContentHeader;
+#getContentBody()[B
@2.6.0
+#getMethod()Lcom/rabbitmq/client/Method;
-#getMethod()Lcom/rabbitmq/client/impl/Method;

+###com/rabbitmq/client/Connection
@1.3.0
+#getHost()Ljava/lang/String;
+#getPort()I
+#getParameters()Lcom/rabbitmq/client/ConnectionParameters;
+#getChannelMax()I
+#getFrameMax()I
+#getHeartbeat()I
+#getKnownHosts()[Lcom/rabbitmq/client/Address;
+#createChannel()Lcom/rabbitmq/client/Channel;
+#createChannel(I)Lcom/rabbitmq/client/Channel;
+#close(ILjava/lang/String;)V
@1.5.4
+#close()V
+#close(I)V
+#close(ILjava/lang/String;I)V
+#abort()V
+#abort(ILjava/lang/String;)V
+#abort(I)V
+#abort(ILjava/lang/String;I)V
@1.8.0
+#getClientProperties()Ljava/util/Map;
+#getServerProperties()Ljava/util/Map;
-#getParameters()Lcom/rabbitmq/client/ConnectionParameters;
@2.0.0
-#getKnownHosts()[Lcom/rabbitmq/client/Address;
@2.4.1
+#getAddress()Ljava/net/InetAddress;
-#getHost()Ljava/lang/String;
@3.2.0
+#addBlockedListener(Lcom/rabbitmq/client/BlockedListener;)V
+#removeBlockedListener(Lcom/rabbitmq/client/BlockedListener;)Z
+#clearBlockedListeners()V
@3.3.0
+#getExceptionHandler()Lcom/rabbitmq/client/ExceptionHandler;
@3.6.2
+#getClientProvidedName()Ljava/lang/String;
@4.0.0
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
@5.0.0
+#addBlockedListener(Lcom/rabbitmq/client/BlockedCallback;Lcom/rabbitmq/client/UnblockedCallback;)Lcom/rabbitmq/client/BlockedListener;
@5.6.0
+#openChannel()Ljava/util/Optional;
+#openChannel(I)Ljava/util/Optional;

+###com/rabbitmq/client/ConnectionFactory
@1.3.0
+#<init>()V
+#<init>(Lcom/rabbitmq/client/ConnectionParameters;)V
+#getParameters()Lcom/rabbitmq/client/ConnectionParameters;
+#getSocketFactory()Ljavax/net/SocketFactory;
+#setSocketFactory(Ljavax/net/SocketFactory;)V
+#useSslProtocol()V
+#useSslProtocol(Ljava/lang/String;)V
+#useSslProtocol(Ljava/lang/String;Ljavax/net/ssl/TrustManager;)V
+#newConnection([Lcom/rabbitmq/client/Address;I)Lcom/rabbitmq/client/Connection;
+#newConnection([Lcom/rabbitmq/client/Address;)Lcom/rabbitmq/client/Connection;
+#newConnection(Ljava/lang/String;I)Lcom/rabbitmq/client/Connection;
+#newConnection(Ljava/lang/String;)Lcom/rabbitmq/client/Connection;
@1.7.2
+#useSslProtocol(Ljavax/net/ssl/SSLContext;)V
@1.8.0
+#getHost()Ljava/lang/String;
+#setHost(Ljava/lang/String;)V
+#getPort()I
+#setPort(I)V
+#getUsername()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getVirtualHost()Ljava/lang/String;
+#setVirtualHost(Ljava/lang/String;)V
+#getRequestedChannelMax()I
+#setRequestedChannelMax(I)V
+#getRequestedFrameMax()I
+#setRequestedFrameMax(I)V
+#getRequestedHeartbeat()I
+#setRequestedHeartbeat(I)V
+#getClientProperties()Ljava/util/Map;
+#setClientProperties(Ljava/util/Map;)V
+#isSSL()Z
+#newConnection()Lcom/rabbitmq/client/Connection;
+#clone()Lcom/rabbitmq/client/ConnectionFactory;
+#clone()Ljava/lang/Object;
-#<init>(Lcom/rabbitmq/client/ConnectionParameters;)V
-#getParameters()Lcom/rabbitmq/client/ConnectionParameters;
-#newConnection([Lcom/rabbitmq/client/Address;I)Lcom/rabbitmq/client/Connection;
-#newConnection([Lcom/rabbitmq/client/Address;)Lcom/rabbitmq/client/Connection;
-#newConnection(Ljava/lang/String;I)Lcom/rabbitmq/client/Connection;
-#newConnection(Ljava/lang/String;)Lcom/rabbitmq/client/Connection;
@2.0.0
+#newConnection([Lcom/rabbitmq/client/Address;)Lcom/rabbitmq/client/Connection;
@2.3.0
+#getSaslConfig()Lcom/rabbitmq/client/SaslConfig;
+#setSaslConfig(Lcom/rabbitmq/client/SaslConfig;)V
@2.4.1
+#setConnectionTimeout(I)V
+#getConnectionTimeout()I
@2.7.0
+#getNumConsumerThreads()I
+#setNumConsumerThreads(I)V
+#setUri(Ljava/net/URI;)V
+#setUri(Ljava/lang/String;)V
+#newConnection(Ljava/util/concurrent/ExecutorService;)Lcom/rabbitmq/client/Connection;
-#newConnection([Lcom/rabbitmq/client/Address;)Lcom/rabbitmq/client/Connection;
@2.7.1
*#getNumConsumerThreads()I[deprecated]
*#setNumConsumerThreads(I)V[deprecated]
+#newConnection([Lcom/rabbitmq/client/Address;)Lcom/rabbitmq/client/Connection;
+#newConnection(Ljava/util/concurrent/ExecutorService;[Lcom/rabbitmq/client/Address;)Lcom/rabbitmq/client/Connection;
@3.3.0
+#portOrDefault(IZ)I
+#getSocketConfigurator()Lcom/rabbitmq/client/SocketConfigurator;
+#setSocketConfigurator(Lcom/rabbitmq/client/SocketConfigurator;)V
+#setSharedExecutor(Ljava/util/concurrent/ExecutorService;)V
+#getThreadFactory()Ljava/util/concurrent/ThreadFactory;
+#setThreadFactory(Ljava/util/concurrent/ThreadFactory;)V
+#getExceptionHandler()Lcom/rabbitmq/client/ExceptionHandler;
+#setExceptionHandler(Lcom/rabbitmq/client/ExceptionHandler;)V
+#isAutomaticRecoveryEnabled()Z
+#setAutomaticRecoveryEnabled(Z)V
+#isTopologyRecoveryEnabled()Z
+#setTopologyRecoveryEnabled(Z)V
+#params(Ljava/util/concurrent/ExecutorService;)Lcom/rabbitmq/client/impl/ConnectionParams;
+#getNetworkRecoveryInterval()I
+#setNetworkRecoveryInterval(I)V
@3.4.0
+#setShutdownTimeout(I)V
+#getShutdownTimeout()I
+#getNetworkRecoveryInterval()J
+#setNetworkRecoveryInterval(J)V
-#getNetworkRecoveryInterval()I
@3.5.0
-#getNumConsumerThreads()I[deprecated]
-#setNumConsumerThreads(I)V[deprecated]
@3.5.5
+#getHandshakeTimeout()I
+#setHandshakeTimeout(I)V
@3.6.0
+#setShutdownExecutor(Ljava/util/concurrent/ExecutorService;)V
+#setHeartbeatExecutor(Ljava/util/concurrent/ScheduledExecutorService;)V
@3.6.1
+#newConnection(Ljava/util/List;)Lcom/rabbitmq/client/Connection;
+#newConnection(Ljava/util/concurrent/ExecutorService;Ljava/util/List;)Lcom/rabbitmq/client/Connection;
@3.6.2
+#newConnection([Lcom/rabbitmq/client/Address;Ljava/lang/String;)Lcom/rabbitmq/client/Connection;
+#newConnection(Ljava/util/List;Ljava/lang/String;)Lcom/rabbitmq/client/Connection;
+#newConnection(Ljava/util/concurrent/ExecutorService;[Lcom/rabbitmq/client/Address;Ljava/lang/String;)Lcom/rabbitmq/client/Connection;
+#newConnection(Ljava/util/concurrent/ExecutorService;Ljava/util/List;Ljava/lang/String;)Lcom/rabbitmq/client/Connection;
+#newConnection(Ljava/lang/String;)Lcom/rabbitmq/client/Connection;
+#newConnection(Ljava/util/concurrent/ExecutorService;Ljava/lang/String;)Lcom/rabbitmq/client/Connection;
@3.6.4
+#computeDefaultTlsProcotol([Ljava/lang/String;)Ljava/lang/String;
@3.6.6
+#newConnection(Lcom/rabbitmq/client/AddressResolver;)Lcom/rabbitmq/client/Connection;
+#newConnection(Ljava/util/concurrent/ExecutorService;Lcom/rabbitmq/client/AddressResolver;)Lcom/rabbitmq/client/Connection;
+#newConnection(Ljava/util/concurrent/ExecutorService;Lcom/rabbitmq/client/AddressResolver;Ljava/lang/String;)Lcom/rabbitmq/client/Connection;
@4.0.0
+#setMetricsCollector(Lcom/rabbitmq/client/MetricsCollector;)V
+#getMetricsCollector()Lcom/rabbitmq/client/MetricsCollector;
+#setNioParams(Lcom/rabbitmq/client/impl/nio/NioParams;)V
+#useNio()V
+#useBlockingIo()V
@4.1.0
+#setChannelRpcTimeout(I)V
+#getChannelRpcTimeout()I
@4.2.0
+#setChannelShouldCheckRpcResponseType(Z)V
+#isChannelShouldCheckRpcResponseType()Z
@4.3.0
+#getRecoveryDelayHandler()Lcom/rabbitmq/client/RecoveryDelayHandler;
+#setRecoveryDelayHandler(Lcom/rabbitmq/client/RecoveryDelayHandler;)V
@4.4.0
+#load(Ljava/lang/String;)Lcom/rabbitmq/client/ConnectionFactory;
+#load(Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/ConnectionFactory;
+#load(Ljava/util/Properties;)Lcom/rabbitmq/client/ConnectionFactory;
+#load(Ljava/util/Properties;Ljava/lang/String;)Lcom/rabbitmq/client/ConnectionFactory;
+#load(Ljava/util/Map;)Lcom/rabbitmq/client/ConnectionFactory;
+#load(Ljava/util/Map;Ljava/lang/String;)Lcom/rabbitmq/client/ConnectionFactory;
+#getNioParams()Lcom/rabbitmq/client/impl/nio/NioParams;
@4.5.0
+#setCredentialsProvider(Lcom/rabbitmq/client/impl/CredentialsProvider;)V
+#setWorkPoolTimeout(I)V
+#getWorkPoolTimeout()I
+#setErrorOnWriteListener(Lcom/rabbitmq/client/impl/ErrorOnWriteListener;)V
@4.7.0
+#getTopologyRecoveryExecutor()Ljava/util/concurrent/ExecutorService;
+#setTopologyRecoveryExecutor(Ljava/util/concurrent/ExecutorService;)V
@4.8.0
+#enableHostnameVerification()V
+#enableHostnameVerification(Ljavax/net/ssl/HostnameVerifier;)V
+#setTopologyRecoveryFilter(Lcom/rabbitmq/client/impl/recovery/TopologyRecoveryFilter;)V
+#setTopologyRecoveryRetryHandler(Lcom/rabbitmq/client/impl/recovery/RetryHandler;)V
+#setConnectionPostProcessor(Lcom/rabbitmq/client/ConnectionPostProcessor;)V
@4.9.0
+#setTrafficListener(Lcom/rabbitmq/client/TrafficListener;)V
@4.11.0
+#computeDefaultTlsProtocol([Ljava/lang/String;)Ljava/lang/String;
-#computeDefaultTlsProcotol([Ljava/lang/String;)Ljava/lang/String;
@4.12.0
+#ensureUnsignedShort(I)I
@5.0.0
+#computeDefaultTlsProcotol([Ljava/lang/String;)Ljava/lang/String;
+#setSslContextFactory(Lcom/rabbitmq/client/SslContextFactory;)V
-#setCredentialsProvider(Lcom/rabbitmq/client/impl/CredentialsProvider;)V
-#enableHostnameVerification()V
-#enableHostnameVerification(Ljavax/net/ssl/HostnameVerifier;)V
-#computeDefaultTlsProtocol([Ljava/lang/String;)Ljava/lang/String;
-#getTopologyRecoveryExecutor()Ljava/util/concurrent/ExecutorService;
-#setTopologyRecoveryExecutor(Ljava/util/concurrent/ExecutorService;)V
-#load(Ljava/lang/String;)Lcom/rabbitmq/client/ConnectionFactory;
-#load(Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/ConnectionFactory;
-#load(Ljava/util/Properties;)Lcom/rabbitmq/client/ConnectionFactory;
-#load(Ljava/util/Properties;Ljava/lang/String;)Lcom/rabbitmq/client/ConnectionFactory;
-#load(Ljava/util/Map;)Lcom/rabbitmq/client/ConnectionFactory;
-#load(Ljava/util/Map;Ljava/lang/String;)Lcom/rabbitmq/client/ConnectionFactory;
-#getRecoveryDelayHandler()Lcom/rabbitmq/client/RecoveryDelayHandler;
-#setRecoveryDelayHandler(Lcom/rabbitmq/client/RecoveryDelayHandler;)V
-#getNioParams()Lcom/rabbitmq/client/impl/nio/NioParams;
-#setWorkPoolTimeout(I)V
-#getWorkPoolTimeout()I
-#setErrorOnWriteListener(Lcom/rabbitmq/client/impl/ErrorOnWriteListener;)V
-#setTopologyRecoveryFilter(Lcom/rabbitmq/client/impl/recovery/TopologyRecoveryFilter;)V
-#setTopologyRecoveryRetryHandler(Lcom/rabbitmq/client/impl/recovery/RetryHandler;)V
-#setConnectionPostProcessor(Lcom/rabbitmq/client/ConnectionPostProcessor;)V
-#setTrafficListener(Lcom/rabbitmq/client/TrafficListener;)V
-#ensureUnsignedShort(I)I
@5.1.0
+#load(Ljava/lang/String;)Lcom/rabbitmq/client/ConnectionFactory;
+#load(Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/ConnectionFactory;
+#load(Ljava/util/Properties;)Lcom/rabbitmq/client/ConnectionFactory;
+#load(Ljava/util/Properties;Ljava/lang/String;)Lcom/rabbitmq/client/ConnectionFactory;
+#load(Ljava/util/Map;)Lcom/rabbitmq/client/ConnectionFactory;
+#load(Ljava/util/Map;Ljava/lang/String;)Lcom/rabbitmq/client/ConnectionFactory;
+#getRecoveryDelayHandler()Lcom/rabbitmq/client/RecoveryDelayHandler;
+#setRecoveryDelayHandler(Lcom/rabbitmq/client/RecoveryDelayHandler;)V
+#getNioParams()Lcom/rabbitmq/client/impl/nio/NioParams;
@5.2.0
+#setCredentialsProvider(Lcom/rabbitmq/client/impl/CredentialsProvider;)V
+#setWorkPoolTimeout(I)V
+#getWorkPoolTimeout()I
+#setErrorOnWriteListener(Lcom/rabbitmq/client/impl/ErrorOnWriteListener;)V
@5.3.0
+#getTopologyRecoveryExecutor()Ljava/util/concurrent/ExecutorService;
+#setTopologyRecoveryExecutor(Ljava/util/concurrent/ExecutorService;)V
@5.4.0
+#enableHostnameVerification()V
+#setTopologyRecoveryFilter(Lcom/rabbitmq/client/impl/recovery/TopologyRecoveryFilter;)V
+#setConnectionRecoveryTriggeringCondition(Ljava/util/function/Predicate;)V
+#setTopologyRecoveryRetryHandler(Lcom/rabbitmq/client/impl/recovery/RetryHandler;)V
@5.5.0
+#setTrafficListener(Lcom/rabbitmq/client/TrafficListener;)V
@5.7.0
+#computeDefaultTlsProtocol([Ljava/lang/String;)Ljava/lang/String;
-#computeDefaultTlsProcotol([Ljava/lang/String;)Ljava/lang/String;
@5.8.0
+#setCredentialsRefreshService(Lcom/rabbitmq/client/impl/CredentialsRefreshService;)V
@5.9.0
+#ensureUnsignedShort(I)I
@5.13.0
+#setRecoveredQueueNameSupplier(Lcom/rabbitmq/client/impl/recovery/RecoveredQueueNameSupplier;)V

+###com/rabbitmq/client/ConnectionParameters
@1.3.0
+#<init>()V
+#getUserName()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getVirtualHost()Ljava/lang/String;
+#setVirtualHost(Ljava/lang/String;)V
+#getRequestedChannelMax()I
+#setRequestedFrameMax(I)V
+#getRequestedFrameMax()I
+#getRequestedHeartbeat()I
+#setRequestedHeartbeat(I)V
+#setRequestedChannelMax(I)V
+#getSuppressAccessRequest()Z
+#setSuppressAccessRequest(Z)V
@1.5.4
-#getSuppressAccessRequest()Z
-#setSuppressAccessRequest(Z)V
@1.8.0
-###com/rabbitmq/client/ConnectionParameters

+###com/rabbitmq/client/Consumer
@1.3.0
+#handleConsumeOk(Ljava/lang/String;)V
+#handleCancelOk(Ljava/lang/String;)V
+#handleShutdownSignal(Ljava/lang/String;Lcom/rabbitmq/client/ShutdownSignalException;)V
+#handleDelivery(Ljava/lang/String;Lcom/rabbitmq/client/Envelope;Lcom/rabbitmq/client/AMQP$BasicProperties;[B)V
@1.8.1
+#handleRecoverOk()V
@2.4.1
+#handleCancel(Ljava/lang/String;)V
@2.7.0
+#handleRecoverOk(Ljava/lang/String;)V
-#handleRecoverOk()V

+###com/rabbitmq/client/ContentHeader
@1.3.0
+#getClassId()I
+#getClassName()Ljava/lang/String;
+#appendPropertyDebugStringTo(Ljava/lang/StringBuffer;)V
@2.5.0
+#appendPropertyDebugStringTo(Ljava/lang/StringBuilder;)V
-#appendPropertyDebugStringTo(Ljava/lang/StringBuffer;)V

+###com/rabbitmq/client/DefaultConsumer
@1.3.0
+#<init>(Lcom/rabbitmq/client/Channel;)V
+#handleConsumeOk(Ljava/lang/String;)V
+#handleCancelOk(Ljava/lang/String;)V
+#handleShutdownSignal(Ljava/lang/String;Lcom/rabbitmq/client/ShutdownSignalException;)V
+#handleDelivery(Ljava/lang/String;Lcom/rabbitmq/client/Envelope;Lcom/rabbitmq/client/AMQP$BasicProperties;[B)V
+#getChannel()Lcom/rabbitmq/client/Channel;
+#getConsumerTag()Ljava/lang/String;
@1.8.1
+#handleRecoverOk()V
@2.4.1
+#handleCancel(Ljava/lang/String;)V
@2.7.0
+#handleRecoverOk(Ljava/lang/String;)V
-#handleRecoverOk()V

+###com/rabbitmq/client/Envelope
@1.3.0
+#<init>(JZLjava/lang/String;Ljava/lang/String;)V
+#getDeliveryTag()J
+#isRedeliver()Z
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
@3.3.0
+#toString()Ljava/lang/String;

+###com/rabbitmq/client/GetResponse
@1.3.0
+#<init>(Lcom/rabbitmq/client/Envelope;Lcom/rabbitmq/client/AMQP$BasicProperties;[BI)V
+#getEnvelope()Lcom/rabbitmq/client/Envelope;
+#getProps()Lcom/rabbitmq/client/AMQP$BasicProperties;
+#getBody()[B
+#getMessageCount()I
@3.3.0
+#toString()Ljava/lang/String;

+###com/rabbitmq/client/MalformedFrameException
@1.3.0
+#<init>(Ljava/lang/String;)V

+###com/rabbitmq/client/MapRpcServer
@1.3.0
+#<init>(Lcom/rabbitmq/client/Channel;I)V
+#<init>(Lcom/rabbitmq/client/Channel;ILjava/lang/String;)V
+#handleCall([BLcom/rabbitmq/client/AMQP$BasicProperties;)[B
+#decode([B)Ljava/util/Map;
+#encode(Ljava/util/Map;)[B
+#handleMapCall(Ljava/util/Map;Lcom/rabbitmq/client/AMQP$BasicProperties;)Ljava/util/Map;
+#handleMapCall(Ljava/util/Map;)Ljava/util/Map;
+#handleCast([B)V
+#handleMapCast(Ljava/util/Map;)V
@1.5.4
+#<init>(Lcom/rabbitmq/client/Channel;)V
+#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/String;)V
-#<init>(Lcom/rabbitmq/client/Channel;I)V
-#<init>(Lcom/rabbitmq/client/Channel;ILjava/lang/String;)V

+###com/rabbitmq/client/MessageProperties
@1.3.0
+#<init>()V

+###com/rabbitmq/client/Method
@1.3.0
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;

+###com/rabbitmq/client/MissedHeartbeatException
@1.3.0
+#<init>(Ljava/lang/String;)V

+###com/rabbitmq/client/NullTrustManager
@1.3.0
+#<init>()V
+#checkClientTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V
+#checkServerTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V
+#getAcceptedIssuers()[Ljava/security/cert/X509Certificate;
@5.0.0
-###com/rabbitmq/client/NullTrustManager

+###com/rabbitmq/client/QueueingConsumer$Delivery
@1.3.0
+#<init>(Lcom/rabbitmq/client/Envelope;Lcom/rabbitmq/client/AMQP$BasicProperties;[B)V
+#getEnvelope()Lcom/rabbitmq/client/Envelope;
+#getProperties()Lcom/rabbitmq/client/AMQP$BasicProperties;
+#getBody()[B
@5.0.0
-###com/rabbitmq/client/QueueingConsumer$Delivery

+###com/rabbitmq/client/QueueingConsumer
@1.3.0
+#<init>(Lcom/rabbitmq/client/Channel;)V
+#<init>(Lcom/rabbitmq/client/Channel;Ljava/util/concurrent/BlockingQueue;)V
+#handleShutdownSignal(Ljava/lang/String;Lcom/rabbitmq/client/ShutdownSignalException;)V
+#handleDelivery(Ljava/lang/String;Lcom/rabbitmq/client/Envelope;Lcom/rabbitmq/client/AMQP$BasicProperties;[B)V
+#nextDelivery()Lcom/rabbitmq/client/QueueingConsumer$Delivery;
+#nextDelivery(J)Lcom/rabbitmq/client/QueueingConsumer$Delivery;
+#getQueue()Ljava/util/concurrent/BlockingQueue;
@1.7.2
-#getQueue()Ljava/util/concurrent/BlockingQueue;
@2.4.1
+#handleCancel(Ljava/lang/String;)V
@5.0.0
-###com/rabbitmq/client/QueueingConsumer

+###com/rabbitmq/client/RedirectException
@1.3.0
+#<init>(Lcom/rabbitmq/client/Address;[Lcom/rabbitmq/client/Address;)V
+#getAddress()Lcom/rabbitmq/client/Address;
+#getKnownAddresses()[Lcom/rabbitmq/client/Address;
@2.0.0
-###com/rabbitmq/client/RedirectException

+###com/rabbitmq/client/ReturnListener
@1.3.0
+#handleBasicReturn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/rabbitmq/client/AMQP$BasicProperties;[B)V
@2.4.1
+#handleReturn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/rabbitmq/client/AMQP$BasicProperties;[B)V
-#handleBasicReturn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/rabbitmq/client/AMQP$BasicProperties;[B)V

+###com/rabbitmq/client/RpcClient
@1.3.0
+#<init>(Lcom/rabbitmq/client/Channel;ILjava/lang/String;Ljava/lang/String;)V
+#checkConsumer()V
+#close()V
+#publish(Lcom/rabbitmq/client/AMQP$BasicProperties;[B)V
+#primitiveCall(Lcom/rabbitmq/client/AMQP$BasicProperties;[B)[B
+#primitiveCall([B)[B
+#stringCall(Ljava/lang/String;)Ljava/lang/String;
+#mapCall(Ljava/util/Map;)Ljava/util/Map;
+#mapCall([Ljava/lang/Object;)Ljava/util/Map;
+#getChannel()Lcom/rabbitmq/client/Channel;
+#getTicket()I
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#getContinuationMap()Ljava/util/Map;
+#getCorrelationId()I
+#getReplyQueue()Ljava/lang/String;
+#getConsumer()Lcom/rabbitmq/client/Consumer;
@1.5.4
+#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Ljava/lang/String;)V
-#<init>(Lcom/rabbitmq/client/Channel;ILjava/lang/String;Ljava/lang/String;)V
-#getTicket()I
@2.6.0
+#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Ljava/lang/String;I)V
@3.4.0
-#getReplyQueue()Ljava/lang/String;
@3.6.1
+#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
@4.0.0
+#doCall(Lcom/rabbitmq/client/AMQP$BasicProperties;[B)Lcom/rabbitmq/client/RpcClient$Response;
+#responseCall([B)Lcom/rabbitmq/client/RpcClient$Response;
@4.5.0
+#doCall(Lcom/rabbitmq/client/AMQP$BasicProperties;[BI)Lcom/rabbitmq/client/RpcClient$Response;
+#primitiveCall(Lcom/rabbitmq/client/AMQP$BasicProperties;[BI)[B
+#responseCall([BI)Lcom/rabbitmq/client/RpcClient$Response;
@4.10.0
+#<init>(Lcom/rabbitmq/client/RpcClientParams;)V
*#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V[deprecated]
*#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V[deprecated]
*#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Ljava/lang/String;)V[deprecated]
*#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Ljava/lang/String;I)V[deprecated]
@4.12.0
+#incrementingCorrelationIdSupplier()Lcom/rabbitmq/client/RpcClient$CorrelationIdSupplier;
+#incrementingCorrelationIdSupplier(Ljava/lang/String;)Lcom/rabbitmq/client/RpcClient$CorrelationIdSupplier;
@5.0.0
-#<init>(Lcom/rabbitmq/client/RpcClientParams;)V
-#doCall(Lcom/rabbitmq/client/AMQP$BasicProperties;[BI)Lcom/rabbitmq/client/RpcClient$Response;
-#primitiveCall(Lcom/rabbitmq/client/AMQP$BasicProperties;[BI)[B
-#responseCall([BI)Lcom/rabbitmq/client/RpcClient$Response;
-#incrementingCorrelationIdSupplier()Lcom/rabbitmq/client/RpcClient$CorrelationIdSupplier;
-#incrementingCorrelationIdSupplier(Ljava/lang/String;)Lcom/rabbitmq/client/RpcClient$CorrelationIdSupplier;
@5.2.0
+#doCall(Lcom/rabbitmq/client/AMQP$BasicProperties;[BI)Lcom/rabbitmq/client/RpcClient$Response;
+#primitiveCall(Lcom/rabbitmq/client/AMQP$BasicProperties;[BI)[B
+#responseCall([BI)Lcom/rabbitmq/client/RpcClient$Response;
@5.6.0
+#<init>(Lcom/rabbitmq/client/RpcClientParams;)V
*#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V[deprecated]
*#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V[deprecated]
*#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Ljava/lang/String;)V[deprecated]
*#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Ljava/lang/String;I)V[deprecated]
@5.9.0
+#incrementingCorrelationIdSupplier()Ljava/util/function/Supplier;
+#incrementingCorrelationIdSupplier(Ljava/lang/String;)Ljava/util/function/Supplier;

+###com/rabbitmq/client/RpcServer
@1.3.0
+#<init>(Lcom/rabbitmq/client/Channel;I)V
+#<init>(Lcom/rabbitmq/client/Channel;ILjava/lang/String;)V
+#close()V
+#mainloop()Lcom/rabbitmq/client/ShutdownSignalException;
+#terminateMainloop()V
+#processRequest(Lcom/rabbitmq/client/QueueingConsumer$Delivery;)V
+#handleCall(Lcom/rabbitmq/client/QueueingConsumer$Delivery;Lcom/rabbitmq/client/AMQP$BasicProperties;)[B
+#handleCall(Lcom/rabbitmq/client/AMQP$BasicProperties;[BLcom/rabbitmq/client/AMQP$BasicProperties;)[B
+#handleCall([BLcom/rabbitmq/client/AMQP$BasicProperties;)[B
+#handleCast(Lcom/rabbitmq/client/QueueingConsumer$Delivery;)V
+#handleCast(Lcom/rabbitmq/client/AMQP$BasicProperties;[B)V
+#handleCast([B)V
+#getChannel()Lcom/rabbitmq/client/Channel;
+#getTicket()I
+#getQueueName()Ljava/lang/String;
@1.5.4
+#<init>(Lcom/rabbitmq/client/Channel;)V
+#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/String;)V
-#<init>(Lcom/rabbitmq/client/Channel;I)V
-#<init>(Lcom/rabbitmq/client/Channel;ILjava/lang/String;)V
-#getTicket()I
@5.0.0
+#processRequest(Lcom/rabbitmq/client/Delivery;)V
+#handleCall(Lcom/rabbitmq/client/Delivery;Lcom/rabbitmq/client/AMQP$BasicProperties;)[B
+#handleCast(Lcom/rabbitmq/client/Delivery;)V
-#processRequest(Lcom/rabbitmq/client/QueueingConsumer$Delivery;)V
-#handleCall(Lcom/rabbitmq/client/QueueingConsumer$Delivery;Lcom/rabbitmq/client/AMQP$BasicProperties;)[B
-#handleCast(Lcom/rabbitmq/client/QueueingConsumer$Delivery;)V

+###com/rabbitmq/client/ShutdownListener
@1.5.4
+#shutdownCompleted(Lcom/rabbitmq/client/ShutdownSignalException;)V

+###com/rabbitmq/client/ShutdownNotifier
@1.5.4
+#addShutdownListener(Lcom/rabbitmq/client/ShutdownListener;)V
+#removeShutdownListener(Lcom/rabbitmq/client/ShutdownListener;)V
+#getCloseReason()Lcom/rabbitmq/client/ShutdownSignalException;
+#notifyListeners()V
+#isOpen()Z

+###com/rabbitmq/client/ShutdownSignalException
@1.3.0
+#<init>(ZZLjava/lang/Object;)V
+#isHardError()Z
+#isInitiatedByApplication()Z
+#getReason()Ljava/lang/Object;
+#toString()Ljava/lang/String;
@1.5.4
+#<init>(ZZLjava/lang/Object;Ljava/lang/Object;)V
+#getReference()Ljava/lang/Object;
-#<init>(ZZLjava/lang/Object;)V
@1.5.5
-#toString()Ljava/lang/String;
@1.7.2
+#sensibleClone()Lcom/rabbitmq/client/ShutdownSignalException;
+#sensibleClone()Lcom/rabbitmq/utility/SensibleClone;
@3.3.0
+#<init>(ZZLcom/rabbitmq/client/Method;Ljava/lang/Object;)V
+#<init>(ZZLcom/rabbitmq/client/Method;Ljava/lang/Object;Ljava/lang/String;)V
+#getReason()Lcom/rabbitmq/client/Method;
-#<init>(ZZLjava/lang/Object;Ljava/lang/Object;)V
-#getReason()Ljava/lang/Object;
@3.3.1
+#<init>(ZZLcom/rabbitmq/client/Method;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Throwable;)V
-#<init>(ZZLcom/rabbitmq/client/Method;Ljava/lang/Object;Ljava/lang/String;)V

+###com/rabbitmq/client/StringRpcServer
@1.3.0
+#<init>(Lcom/rabbitmq/client/Channel;I)V
+#<init>(Lcom/rabbitmq/client/Channel;ILjava/lang/String;)V
+#handleCall([BLcom/rabbitmq/client/AMQP$BasicProperties;)[B
+#handleStringCall(Ljava/lang/String;Lcom/rabbitmq/client/AMQP$BasicProperties;)Ljava/lang/String;
+#handleStringCall(Ljava/lang/String;)Ljava/lang/String;
+#handleCast([B)V
+#handleStringCast(Ljava/lang/String;)V
@1.5.4
+#<init>(Lcom/rabbitmq/client/Channel;)V
+#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/String;)V
-#<init>(Lcom/rabbitmq/client/Channel;I)V
-#<init>(Lcom/rabbitmq/client/Channel;ILjava/lang/String;)V

+###com/rabbitmq/client/UnexpectedFrameError
@1.3.0
+#<init>(Lcom/rabbitmq/client/impl/Frame;I)V
+#getSerialVersionUID()J
+#getReceivedFrame()Lcom/rabbitmq/client/impl/Frame;
+#getExpectedFrameType()I

+###com/rabbitmq/client/UnexpectedMethodError
@1.3.0
+#<init>(Lcom/rabbitmq/client/impl/Method;)V
+#toString()Ljava/lang/String;
+#getMethod()Lcom/rabbitmq/client/impl/Method;
@2.6.0
+#<init>(Lcom/rabbitmq/client/Method;)V
+#getMethod()Lcom/rabbitmq/client/Method;
-#<init>(Lcom/rabbitmq/client/impl/Method;)V
-#getMethod()Lcom/rabbitmq/client/impl/Method;

+###com/rabbitmq/client/UnknownClassOrMethodId
@1.3.0
+#<init>(II)V
+#toString()Ljava/lang/String;
@2.5.0
+#<init>(I)V

+###com/rabbitmq/client/impl/AMQChannel$BlockingRpcContinuation
@1.3.0
+#<init>()V
+#handleCommand(Lcom/rabbitmq/client/impl/AMQCommand;)V
+#handleShutdownSignal(Lcom/rabbitmq/client/ShutdownSignalException;)V
+#getReply()Ljava/lang/Object;
+#transformReply(Lcom/rabbitmq/client/impl/AMQCommand;)Ljava/lang/Object;
@1.5.4
+#getReply(I)Ljava/lang/Object;
@4.2.0
+#<init>(Lcom/rabbitmq/client/Method;)V
+#canHandleReply(Lcom/rabbitmq/client/impl/AMQCommand;)Z
@5.0.0
+#isResponseCompatibleWithRequest(Lcom/rabbitmq/client/Method;Lcom/rabbitmq/client/Method;)Z

+###com/rabbitmq/client/impl/AMQChannel$RpcContinuation
@1.3.0
+#handleCommand(Lcom/rabbitmq/client/impl/AMQCommand;)V
+#handleShutdownSignal(Lcom/rabbitmq/client/ShutdownSignalException;)V
@4.2.0
+#canHandleReply(Lcom/rabbitmq/client/impl/AMQCommand;)Z

+###com/rabbitmq/client/impl/AMQChannel$SimpleBlockingRpcContinuation
@1.3.0
+#<init>()V
+#transformReply(Lcom/rabbitmq/client/impl/AMQCommand;)Lcom/rabbitmq/client/impl/AMQCommand;
+#transformReply(Lcom/rabbitmq/client/impl/AMQCommand;)Ljava/lang/Object;
@4.2.0
+#<init>(Lcom/rabbitmq/client/Method;)V

+###com/rabbitmq/client/impl/AMQChannel
@1.3.0
+#<init>(Lcom/rabbitmq/client/impl/AMQConnection;I)V
+#getChannelNumber()I
+#getConnection()Lcom/rabbitmq/client/Connection;
+#handleFrame(Lcom/rabbitmq/client/impl/Frame;)V
+#wrap(Lcom/rabbitmq/client/ShutdownSignalException;)Ljava/io/IOException;
+#exnWrappingRpc(Lcom/rabbitmq/client/impl/Method;)Lcom/rabbitmq/client/impl/AMQCommand;
+#handleCompleteInboundCommand(Lcom/rabbitmq/client/impl/AMQCommand;)V
+#enqueueRpc(Lcom/rabbitmq/client/impl/AMQChannel$RpcContinuation;)V
+#transmitAndEnqueue(Lcom/rabbitmq/client/impl/Method;Lcom/rabbitmq/client/impl/AMQChannel$RpcContinuation;)V
+#nextOutstandingRpc()Lcom/rabbitmq/client/impl/AMQChannel$RpcContinuation;
+#isOpen()Z
+#ensureIsOpen()V
+#rpc(Lcom/rabbitmq/client/impl/Method;)Lcom/rabbitmq/client/impl/AMQCommand;
+#rpc(Lcom/rabbitmq/client/impl/Method;Lcom/rabbitmq/client/impl/AMQChannel$RpcContinuation;)V
+#quiescingRpc(Lcom/rabbitmq/client/impl/Method;ILcom/rabbitmq/client/impl/AMQCommand;)Lcom/rabbitmq/client/impl/AMQCommand;
+#processAsync(Lcom/rabbitmq/client/Command;)Z
+#toString()Ljava/lang/String;
+#processShutdownSignal(Lcom/rabbitmq/client/ShutdownSignalException;)V
+#transmit(Lcom/rabbitmq/client/impl/Method;)V
+#getAMQConnection()Lcom/rabbitmq/client/impl/AMQConnection;
@1.5.4
+#quiescingRpc(Lcom/rabbitmq/client/impl/Method;Lcom/rabbitmq/client/impl/AMQChannel$RpcContinuation;)V
+#processShutdownSignal(Lcom/rabbitmq/client/ShutdownSignalException;ZZ)V
+#notifyOutstandingRpc(Lcom/rabbitmq/client/ShutdownSignalException;)V
+#transmit(Lcom/rabbitmq/client/impl/AMQCommand;)V
+#quiescingTransmit(Lcom/rabbitmq/client/impl/Method;)V
+#quiescingTransmit(Lcom/rabbitmq/client/impl/AMQCommand;)V
-#transmitAndEnqueue(Lcom/rabbitmq/client/impl/Method;Lcom/rabbitmq/client/impl/AMQChannel$RpcContinuation;)V
-#isOpen()Z
-#quiescingRpc(Lcom/rabbitmq/client/impl/Method;ILcom/rabbitmq/client/impl/AMQCommand;)Lcom/rabbitmq/client/impl/AMQCommand;
-#processShutdownSignal(Lcom/rabbitmq/client/ShutdownSignalException;)V
@1.8.0
+#wrap(Lcom/rabbitmq/client/ShutdownSignalException;Ljava/lang/String;)Ljava/io/IOException;
@2.6.0
+#exnWrappingRpc(Lcom/rabbitmq/client/Method;)Lcom/rabbitmq/client/impl/AMQCommand;
+#rpc(Lcom/rabbitmq/client/Method;)Lcom/rabbitmq/client/impl/AMQCommand;
+#rpc(Lcom/rabbitmq/client/Method;Lcom/rabbitmq/client/impl/AMQChannel$RpcContinuation;)V
+#quiescingRpc(Lcom/rabbitmq/client/Method;Lcom/rabbitmq/client/impl/AMQChannel$RpcContinuation;)V
+#transmit(Lcom/rabbitmq/client/Method;)V
+#quiescingTransmit(Lcom/rabbitmq/client/Method;)V
-#exnWrappingRpc(Lcom/rabbitmq/client/impl/Method;)Lcom/rabbitmq/client/impl/AMQCommand;
-#rpc(Lcom/rabbitmq/client/impl/Method;)Lcom/rabbitmq/client/impl/AMQCommand;
-#rpc(Lcom/rabbitmq/client/impl/Method;Lcom/rabbitmq/client/impl/AMQChannel$RpcContinuation;)V
-#quiescingRpc(Lcom/rabbitmq/client/impl/Method;Lcom/rabbitmq/client/impl/AMQChannel$RpcContinuation;)V
-#transmit(Lcom/rabbitmq/client/impl/Method;)V
-#quiescingTransmit(Lcom/rabbitmq/client/impl/Method;)V
@2.7.0
+#isOutstandingRpc()Z
+#getConnection()Lcom/rabbitmq/client/impl/AMQConnection;
-#getConnection()Lcom/rabbitmq/client/Connection;
-#getAMQConnection()Lcom/rabbitmq/client/impl/AMQConnection;
@3.5.3
+#rpc(Lcom/rabbitmq/client/Method;I)Lcom/rabbitmq/client/impl/AMQCommand;
@5.0.0
+#exnWrappingAsyncRpc(Lcom/rabbitmq/client/Method;)Ljava/util/concurrent/CompletableFuture;
+#enqueueAsyncRpc(Lcom/rabbitmq/client/Method;Ljava/util/concurrent/CompletableFuture;)V
+#nextOutstandingRpc()Lcom/rabbitmq/client/impl/RpcWrapper;
+#asyncRpc(Lcom/rabbitmq/client/Method;Ljava/util/concurrent/CompletableFuture;)V
+#quiescingAsyncRpc(Lcom/rabbitmq/client/Method;Ljava/util/concurrent/CompletableFuture;)V
-#nextOutstandingRpc()Lcom/rabbitmq/client/impl/AMQChannel$RpcContinuation;

+###com/rabbitmq/client/impl/AMQCommand$Assembler
@1.3.0
+#<init>(Lcom/rabbitmq/client/impl/AMQCommand;)V
+#completedCommand()Lcom/rabbitmq/client/impl/AMQCommand;
+#updateContentBodyState()V
+#handleFrame(Lcom/rabbitmq/client/impl/Frame;)Lcom/rabbitmq/client/impl/AMQCommand;
@2.7.0
-###com/rabbitmq/client/impl/AMQCommand$Assembler

+###com/rabbitmq/client/impl/AMQCommand
@1.3.0
+#newAssembler()Lcom/rabbitmq/client/impl/AMQCommand$Assembler;
+#<init>()V
+#<init>(Lcom/rabbitmq/client/impl/Method;)V
+#<init>(Lcom/rabbitmq/client/impl/Method;Lcom/rabbitmq/client/impl/AMQContentHeader;[B)V
+#getMethod()Lcom/rabbitmq/client/impl/Method;
+#getContentHeader()Lcom/rabbitmq/client/ContentHeader;
+#getContentBody()[B
+#setContentBody([B)V
+#appendBodyFragment([B)V
+#coalesceContentBody()V
+#getFreshAssembler()Lcom/rabbitmq/client/impl/AMQCommand$Assembler;
+#transmit(Lcom/rabbitmq/client/impl/AMQChannel;)V
+#toString()Ljava/lang/String;
+#checkEmptyContentBodyFrameSize()V
@1.7.2
+#toString(Z)Ljava/lang/String;
@2.6.0
+#<init>(Lcom/rabbitmq/client/Method;)V
+#<init>(Lcom/rabbitmq/client/Method;Lcom/rabbitmq/client/impl/AMQContentHeader;[B)V
+#getMethod()Lcom/rabbitmq/client/Method;
-#<init>(Lcom/rabbitmq/client/impl/Method;)V
-#<init>(Lcom/rabbitmq/client/impl/Method;Lcom/rabbitmq/client/impl/AMQContentHeader;[B)V
@2.7.0
+#getContentHeader()Lcom/rabbitmq/client/impl/AMQContentHeader;
+#handleFrame(Lcom/rabbitmq/client/impl/Frame;)Z
+#checkPreconditions()V
-#newAssembler()Lcom/rabbitmq/client/impl/AMQCommand$Assembler;
-#setContentBody([B)V
-#appendBodyFragment([B)V
-#coalesceContentBody()V
-#getFreshAssembler()Lcom/rabbitmq/client/impl/AMQCommand$Assembler;
-#checkEmptyContentBodyFrameSize()V

+###com/rabbitmq/client/impl/AMQConnection
@1.3.0
+#disconnectChannel(I)V
+#isOpen()Z
+#ensureIsOpen()V
+#getHost()Ljava/lang/String;
+#getPort()I
+#getParameters()Lcom/rabbitmq/client/ConnectionParameters;
+#getKnownHosts()[Lcom/rabbitmq/client/Address;
+#<init>(Lcom/rabbitmq/client/ConnectionParameters;ZLcom/rabbitmq/client/impl/FrameHandler;)V
+#<init>(Lcom/rabbitmq/client/ConnectionParameters;ZLcom/rabbitmq/client/impl/FrameHandler;Lcom/rabbitmq/client/impl/ExceptionHandler;)V
+#checkPreconditions()V
+#getChannelMax()I
+#setChannelMax(I)V
+#getFrameMax()I
+#setFrameMax(I)V
+#getHeartbeat()I
+#setHeartbeat(I)V
+#getExceptionHandler()Lcom/rabbitmq/client/impl/ExceptionHandler;
+#createChannel(I)Lcom/rabbitmq/client/Channel;
+#createChannel()Lcom/rabbitmq/client/Channel;
+#readFrame()Lcom/rabbitmq/client/impl/Frame;
+#writeFrame(Lcom/rabbitmq/client/impl/Frame;)V
+#buildClientPropertiesTable()Ljava/util/Map;
+#open(Lcom/rabbitmq/client/ConnectionParameters;Z)[Lcom/rabbitmq/client/Address;
+#maybeSendHeartbeat()V
+#handleSocketTimeout()V
+#processControlCommand(Lcom/rabbitmq/client/Command;)Z
+#handleConnectionClose(Lcom/rabbitmq/client/Command;)V
+#shutdown(Ljava/lang/Object;ZLjava/lang/Throwable;)V
+#close(ILjava/lang/String;)V
+#close(ILjava/lang/String;ZLjava/lang/Throwable;)V
+#toString()Ljava/lang/String;
@1.5.4
+#shutdown(Ljava/lang/Object;ZLjava/lang/Throwable;Z)Lcom/rabbitmq/client/ShutdownSignalException;
+#close()V
+#close(I)V
+#close(ILjava/lang/String;I)V
+#abort()V
+#abort(ILjava/lang/String;)V
+#abort(I)V
+#abort(ILjava/lang/String;I)V
+#close(ILjava/lang/String;ZLjava/lang/Throwable;IZ)V
-#isOpen()Z
-#shutdown(Ljava/lang/Object;ZLjava/lang/Throwable;)V
@1.7.2
+#<init>(Lcom/rabbitmq/client/ConnectionParameters;Lcom/rabbitmq/client/impl/FrameHandler;)V
+#<init>(Lcom/rabbitmq/client/ConnectionParameters;Lcom/rabbitmq/client/impl/FrameHandler;Lcom/rabbitmq/client/impl/ExceptionHandler;)V
+#start(Z)V
-#<init>(Lcom/rabbitmq/client/ConnectionParameters;ZLcom/rabbitmq/client/impl/FrameHandler;)V
-#<init>(Lcom/rabbitmq/client/ConnectionParameters;ZLcom/rabbitmq/client/impl/FrameHandler;Lcom/rabbitmq/client/impl/ExceptionHandler;)V
-#setChannelMax(I)V
-#open(Lcom/rabbitmq/client/ConnectionParameters;Z)[Lcom/rabbitmq/client/Address;
@1.8.0
+#defaultClientProperties()Ljava/util/Map;
+#disconnectChannel(Lcom/rabbitmq/client/impl/ChannelN;)V
+#getFrameHandler()Lcom/rabbitmq/client/impl/FrameHandler;
+#getServerProperties()Ljava/util/Map;
+#<init>(Lcom/rabbitmq/client/ConnectionFactory;Lcom/rabbitmq/client/impl/FrameHandler;)V
+#<init>(Lcom/rabbitmq/client/ConnectionFactory;Lcom/rabbitmq/client/impl/FrameHandler;Lcom/rabbitmq/client/impl/ExceptionHandler;)V
+#getClientProperties()Ljava/util/Map;
-#disconnectChannel(I)V
-#getParameters()Lcom/rabbitmq/client/ConnectionParameters;
-#<init>(Lcom/rabbitmq/client/ConnectionParameters;Lcom/rabbitmq/client/impl/FrameHandler;)V
-#<init>(Lcom/rabbitmq/client/ConnectionParameters;Lcom/rabbitmq/client/impl/FrameHandler;Lcom/rabbitmq/client/impl/ExceptionHandler;)V
-#buildClientPropertiesTable()Ljava/util/Map;
@2.0.0
+#start()V
-#getKnownHosts()[Lcom/rabbitmq/client/Address;
-#start(Z)V
@2.1.1
-#maybeSendHeartbeat()V
@2.4.1
+#getAddress()Ljava/net/InetAddress;
-#getHost()Ljava/lang/String;
@2.7.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Lcom/rabbitmq/client/impl/FrameHandler;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/util/Map;IIILcom/rabbitmq/client/SaslConfig;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Lcom/rabbitmq/client/impl/FrameHandler;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/util/Map;IIILcom/rabbitmq/client/SaslConfig;Lcom/rabbitmq/client/impl/ExceptionHandler;)V
-#ensureIsOpen()V
-#<init>(Lcom/rabbitmq/client/ConnectionFactory;Lcom/rabbitmq/client/impl/FrameHandler;)V
-#<init>(Lcom/rabbitmq/client/ConnectionFactory;Lcom/rabbitmq/client/impl/FrameHandler;Lcom/rabbitmq/client/impl/ExceptionHandler;)V
-#checkPreconditions()V
-#setFrameMax(I)V
-#readFrame()Lcom/rabbitmq/client/impl/Frame;
-#handleSocketTimeout()V
@2.8.3
+#flush()V
@3.2.0
+#addBlockedListener(Lcom/rabbitmq/client/BlockedListener;)V
+#removeBlockedListener(Lcom/rabbitmq/client/BlockedListener;)Z
+#clearBlockedListeners()V
@3.3.0
+#getLocalAddress()Ljava/net/InetAddress;
+#getLocalPort()I
+#<init>(Lcom/rabbitmq/client/impl/ConnectionParams;Lcom/rabbitmq/client/impl/FrameHandler;)V
+#setThreadFactory(Ljava/util/concurrent/ThreadFactory;)V
+#getThreadFactory()Ljava/util/concurrent/ThreadFactory;
+#getExceptionHandler()Lcom/rabbitmq/client/ExceptionHandler;
+#willShutDownConsumerExecutor()Z
+#shutdown(Lcom/rabbitmq/client/Method;ZLjava/lang/Throwable;Z)Lcom/rabbitmq/client/ShutdownSignalException;
-#<init>(Ljava/lang/String;Ljava/lang/String;Lcom/rabbitmq/client/impl/FrameHandler;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/util/Map;IIILcom/rabbitmq/client/SaslConfig;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;Lcom/rabbitmq/client/impl/FrameHandler;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/util/Map;IIILcom/rabbitmq/client/SaslConfig;Lcom/rabbitmq/client/impl/ExceptionHandler;)V
-#getExceptionHandler()Lcom/rabbitmq/client/impl/ExceptionHandler;
-#shutdown(Ljava/lang/Object;ZLjava/lang/Throwable;Z)Lcom/rabbitmq/client/ShutdownSignalException;
@3.6.2
+#getClientProvidedName()Ljava/lang/String;
@4.0.0
+#<init>(Lcom/rabbitmq/client/impl/ConnectionParams;Lcom/rabbitmq/client/impl/FrameHandler;Lcom/rabbitmq/client/MetricsCollector;)V
+#startMainLoop()V
+#handleReadFrame(Lcom/rabbitmq/client/impl/Frame;)Z
+#isRunning()Z
+#hasBrokerInitiatedShutdown()Z
+#handleHeartbeatFailure()V
+#handleIoError(Ljava/lang/Throwable;)V
+#doFinalShutdown()V
+#addRecoveryCanBeginListener(Lcom/rabbitmq/client/impl/recovery/RecoveryCanBeginListener;)V
+#removeRecoveryCanBeginListener(Lcom/rabbitmq/client/impl/recovery/RecoveryCanBeginListener;)V
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
@4.1.0
+#getChannelRpcTimeout()I
@4.2.0
+#willCheckRpcResponseType()Z
@4.9.0
+#getTrafficListener()Lcom/rabbitmq/client/TrafficListener;
@5.0.0
+#addBlockedListener(Lcom/rabbitmq/client/BlockedCallback;Lcom/rabbitmq/client/UnblockedCallback;)Lcom/rabbitmq/client/BlockedListener;
-#getTrafficListener()Lcom/rabbitmq/client/TrafficListener;
@5.5.0
+#getTrafficListener()Lcom/rabbitmq/client/TrafficListener;

+###com/rabbitmq/client/impl/AMQContentHeader
@1.3.0
+#<init>()V
+#readFrom(Ljava/io/DataInputStream;)J
+#writeTo(Ljava/io/DataOutputStream;J)V
+#readPropertiesFrom(Lcom/rabbitmq/client/impl/ContentHeaderPropertyReader;)V
+#writePropertiesTo(Lcom/rabbitmq/client/impl/ContentHeaderPropertyWriter;)V
+#appendPropertyDebugStringTo(Ljava/lang/StringBuffer;)V
+#toString()Ljava/lang/String;
+#toFrame(IJ)Lcom/rabbitmq/client/impl/Frame;
@1.7.2
+#clone()Ljava/lang/Object;
@2.5.0
+#getBodySize()J
+#appendPropertyDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#readFrom(Ljava/io/DataInputStream;)J
-#writeTo(Ljava/io/DataOutputStream;J)V
-#readPropertiesFrom(Lcom/rabbitmq/client/impl/ContentHeaderPropertyReader;)V
-#appendPropertyDebugStringTo(Ljava/lang/StringBuffer;)V

+###com/rabbitmq/client/impl/AMQImpl$Access$Request
@1.3.0
+#getRealm()Ljava/lang/String;
+#getExclusive()Z
+#getPassive()Z
+#getActive()Z
+#getWrite()Z
+#getRead()Z
+#<init>(Ljava/lang/String;ZZZZZ)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Access$RequestOk
@1.3.0
+#getTicket()I
+#<init>(I)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Access
@1.3.0
+#<init>()V

+###com/rabbitmq/client/impl/AMQImpl$Basic$Ack
@1.3.0
+#getDeliveryTag()J
+#getMultiple()Z
+#<init>(JZ)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Basic$Cancel
@1.3.0
+#getConsumerTag()Ljava/lang/String;
+#getNowait()Z
+#<init>(Ljava/lang/String;Z)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Basic$CancelOk
@1.3.0
+#getConsumerTag()Ljava/lang/String;
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Basic$Consume
@1.3.0
+#getTicket()I
+#getQueue()Ljava/lang/String;
+#getConsumerTag()Ljava/lang/String;
+#getNoLocal()Z
+#getNoAck()Z
+#getExclusive()Z
+#getNowait()Z
+#<init>(ILjava/lang/String;Ljava/lang/String;ZZZZ)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
+#getFilter()Ljava/util/Map;
+#<init>(ILjava/lang/String;Ljava/lang/String;ZZZZLjava/util/Map;)V
-#<init>(ILjava/lang/String;Ljava/lang/String;ZZZZ)V
@2.1.0
+#getArguments()Ljava/util/Map;
-#getFilter()Ljava/util/Map;
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Basic$ConsumeOk
@1.3.0
+#getConsumerTag()Ljava/lang/String;
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Basic$Deliver
@1.3.0
+#getConsumerTag()Ljava/lang/String;
+#getDeliveryTag()J
+#getRedelivered()Z
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#<init>(Ljava/lang/String;JZLjava/lang/String;Ljava/lang/String;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Basic$Get
@1.3.0
+#getTicket()I
+#getQueue()Ljava/lang/String;
+#getNoAck()Z
+#<init>(ILjava/lang/String;Z)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Basic$GetEmpty
@1.3.0
+#getClusterId()Ljava/lang/String;
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Basic$GetOk
@1.3.0
+#getDeliveryTag()J
+#getRedelivered()Z
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#getMessageCount()I
+#<init>(JZLjava/lang/String;Ljava/lang/String;I)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Basic$Publish
@1.3.0
+#getTicket()I
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#getMandatory()Z
+#getImmediate()Z
+#<init>(ILjava/lang/String;Ljava/lang/String;ZZ)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Basic$Qos
@1.3.0
+#getPrefetchSize()I
+#getPrefetchCount()I
+#getGlobal()Z
+#<init>(IIZ)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Basic$QosOk
@1.3.0
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V

+###com/rabbitmq/client/impl/AMQImpl$Basic$Recover
@1.3.0
+#getRequeue()Z
+#<init>(Z)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Basic$Reject
@1.3.0
+#getDeliveryTag()J
+#getRequeue()Z
+#<init>(JZ)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Basic$Return
@1.3.0
+#getReplyCode()I
+#getReplyText()Ljava/lang/String;
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Basic
@1.3.0
+#<init>()V

+###com/rabbitmq/client/impl/AMQImpl$Channel$Alert
@1.3.0
+#getReplyCode()I
+#getReplyText()Ljava/lang/String;
+#getDetails()Ljava/util/Map;
+#<init>(ILjava/lang/String;Ljava/util/Map;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Channel$Alert

+###com/rabbitmq/client/impl/AMQImpl$Channel$Close
@1.3.0
+#getReplyCode()I
+#getReplyText()Ljava/lang/String;
+#getClassId()I
+#getMethodId()I
+#<init>(ILjava/lang/String;II)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Channel$CloseOk
@1.3.0
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V

+###com/rabbitmq/client/impl/AMQImpl$Channel$Flow
@1.3.0
+#getActive()Z
+#<init>(Z)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Channel$FlowOk
@1.3.0
+#getActive()Z
+#<init>(Z)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Channel$Open
@1.3.0
+#getOutOfBand()Ljava/lang/String;
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Channel$OpenOk
@1.3.0
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
+#getChannelId()Lcom/rabbitmq/client/impl/LongString;
+#<init>(Lcom/rabbitmq/client/impl/LongString;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@2.6.0
+#getChannelId()Lcom/rabbitmq/client/LongString;
+#<init>(Lcom/rabbitmq/client/LongString;)V
-#getChannelId()Lcom/rabbitmq/client/impl/LongString;
-#<init>(Lcom/rabbitmq/client/impl/LongString;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Channel
@1.3.0
+#<init>()V

+###com/rabbitmq/client/impl/AMQImpl$Connection$Close
@1.3.0
+#getReplyCode()I
+#getReplyText()Ljava/lang/String;
+#getClassId()I
+#getMethodId()I
+#<init>(ILjava/lang/String;II)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Connection$CloseOk
@1.3.0
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V

+###com/rabbitmq/client/impl/AMQImpl$Connection$Open
@1.3.0
+#getVirtualHost()Ljava/lang/String;
+#getCapabilities()Ljava/lang/String;
+#getInsist()Z
+#<init>(Ljava/lang/String;Ljava/lang/String;Z)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Connection$OpenOk
@1.3.0
+#getKnownHosts()Ljava/lang/String;
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Connection$Redirect
@1.3.0
+#getHost()Ljava/lang/String;
+#getKnownHosts()Ljava/lang/String;
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Connection$Redirect

+###com/rabbitmq/client/impl/AMQImpl$Connection$Secure
@1.3.0
+#getChallenge()Lcom/rabbitmq/client/impl/LongString;
+#<init>(Lcom/rabbitmq/client/impl/LongString;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@2.6.0
+#getChallenge()Lcom/rabbitmq/client/LongString;
+#<init>(Lcom/rabbitmq/client/LongString;)V
-#getChallenge()Lcom/rabbitmq/client/impl/LongString;
-#<init>(Lcom/rabbitmq/client/impl/LongString;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Connection$SecureOk
@1.3.0
+#getResponse()Lcom/rabbitmq/client/impl/LongString;
+#<init>(Lcom/rabbitmq/client/impl/LongString;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@2.6.0
+#getResponse()Lcom/rabbitmq/client/LongString;
+#<init>(Lcom/rabbitmq/client/LongString;)V
-#getResponse()Lcom/rabbitmq/client/impl/LongString;
-#<init>(Lcom/rabbitmq/client/impl/LongString;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Connection$Start
@1.3.0
+#getVersionMajor()I
+#getVersionMinor()I
+#getServerProperties()Ljava/util/Map;
+#getMechanisms()Lcom/rabbitmq/client/impl/LongString;
+#getLocales()Lcom/rabbitmq/client/impl/LongString;
+#<init>(IILjava/util/Map;Lcom/rabbitmq/client/impl/LongString;Lcom/rabbitmq/client/impl/LongString;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@2.6.0
+#getMechanisms()Lcom/rabbitmq/client/LongString;
+#getLocales()Lcom/rabbitmq/client/LongString;
+#<init>(IILjava/util/Map;Lcom/rabbitmq/client/LongString;Lcom/rabbitmq/client/LongString;)V
-#getMechanisms()Lcom/rabbitmq/client/impl/LongString;
-#getLocales()Lcom/rabbitmq/client/impl/LongString;
-#<init>(IILjava/util/Map;Lcom/rabbitmq/client/impl/LongString;Lcom/rabbitmq/client/impl/LongString;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Connection$StartOk
@1.3.0
+#getClientProperties()Ljava/util/Map;
+#getMechanism()Ljava/lang/String;
+#getResponse()Lcom/rabbitmq/client/impl/LongString;
+#getLocale()Ljava/lang/String;
+#<init>(Ljava/util/Map;Ljava/lang/String;Lcom/rabbitmq/client/impl/LongString;Ljava/lang/String;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@2.6.0
+#getResponse()Lcom/rabbitmq/client/LongString;
+#<init>(Ljava/util/Map;Ljava/lang/String;Lcom/rabbitmq/client/LongString;Ljava/lang/String;)V
-#getResponse()Lcom/rabbitmq/client/impl/LongString;
-#<init>(Ljava/util/Map;Ljava/lang/String;Lcom/rabbitmq/client/impl/LongString;Ljava/lang/String;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Connection$Tune
@1.3.0
+#getChannelMax()I
+#getFrameMax()I
+#getHeartbeat()I
+#<init>(III)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Connection$TuneOk
@1.3.0
+#getChannelMax()I
+#getFrameMax()I
+#getHeartbeat()I
+#<init>(III)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Connection
@1.3.0
+#<init>()V

+###com/rabbitmq/client/impl/AMQImpl$DefaultMethodVisitor
@1.3.0
+#<init>()V
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$Start;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$StartOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$Secure;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$SecureOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$Tune;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$TuneOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$Open;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$OpenOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$Redirect;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$Close;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$CloseOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Channel$Open;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Channel$OpenOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Channel$Flow;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Channel$FlowOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Channel$Alert;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Channel$Close;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Channel$CloseOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Access$Request;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Access$RequestOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Exchange$Declare;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeclareOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Exchange$Delete;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeleteOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Queue$Declare;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Queue$DeclareOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Queue$Bind;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Queue$BindOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Queue$Purge;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Queue$PurgeOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Queue$Delete;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Queue$DeleteOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$Qos;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$QosOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$Consume;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$ConsumeOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$Cancel;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$CancelOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$Publish;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$Return;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$Deliver;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$Get;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$GetOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$GetEmpty;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$Ack;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$Reject;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$Recover;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Qos;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$QosOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Consume;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$ConsumeOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Cancel;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$CancelOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Open;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$OpenOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Stage;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Publish;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Return;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Deliver;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Ack;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Reject;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$Qos;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$QosOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$Consume;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$ConsumeOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$Cancel;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$CancelOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$Publish;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$Return;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$Deliver;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Tx$Select;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Tx$SelectOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Tx$Commit;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Tx$CommitOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Tx$Rollback;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Tx$RollbackOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Dtx$Select;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Dtx$SelectOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Dtx$Start;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Dtx$StartOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Tunnel$Request;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$Integer;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$IntegerOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$String;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$StringOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$Table;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$TableOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$Content;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$ContentOk;)Ljava/lang/Object;
@1.5.4
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Queue$Unbind;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Queue$UnbindOk;)Ljava/lang/Object;
@1.8.1
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$RecoverAsync;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$RecoverOk;)Ljava/lang/Object;
@2.0.0
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$Redirect;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Channel$Alert;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Qos;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$QosOk;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Consume;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$ConsumeOk;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Cancel;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$CancelOk;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Open;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$OpenOk;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Stage;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Publish;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Return;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Deliver;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Ack;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Reject;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$Qos;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$QosOk;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$Consume;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$ConsumeOk;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$Cancel;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$CancelOk;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$Publish;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$Return;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$Deliver;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Dtx$Select;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Dtx$SelectOk;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Dtx$Start;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Dtx$StartOk;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Tunnel$Request;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$Integer;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$IntegerOk;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$String;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$StringOk;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$Table;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$TableOk;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$Content;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$ContentOk;)Ljava/lang/Object;
@2.1.1
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Exchange$Bind;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Exchange$BindOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Exchange$Unbind;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Exchange$UnbindOk;)Ljava/lang/Object;
@2.3.0
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$Nack;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Confirm$Select;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Confirm$SelectOk;)Ljava/lang/Object;
@3.2.0
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$Blocked;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$Unblocked;)Ljava/lang/Object;
@4.11.3
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$UpdateSecret;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$UpdateSecretOk;)Ljava/lang/Object;
@5.0.0
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$UpdateSecret;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$UpdateSecretOk;)Ljava/lang/Object;
@5.7.3
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$UpdateSecret;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$UpdateSecretOk;)Ljava/lang/Object;

+###com/rabbitmq/client/impl/AMQImpl$Dtx$Select
@1.3.0
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Dtx$Select

+###com/rabbitmq/client/impl/AMQImpl$Dtx$SelectOk
@1.3.0
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Dtx$SelectOk

+###com/rabbitmq/client/impl/AMQImpl$Dtx$Start
@1.3.0
+#getDtxIdentifier()Ljava/lang/String;
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Dtx$Start

+###com/rabbitmq/client/impl/AMQImpl$Dtx$StartOk
@1.3.0
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Dtx$StartOk

+###com/rabbitmq/client/impl/AMQImpl$Dtx
@1.3.0
+#<init>()V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Dtx

+###com/rabbitmq/client/impl/AMQImpl$Exchange$Declare
@1.3.0
+#getTicket()I
+#getExchange()Ljava/lang/String;
+#getType()Ljava/lang/String;
+#getPassive()Z
+#getDurable()Z
+#getAutoDelete()Z
+#getInternal()Z
+#getNowait()Z
+#getArguments()Ljava/util/Map;
+#<init>(ILjava/lang/String;Ljava/lang/String;ZZZZZLjava/util/Map;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Exchange$DeclareOk
@1.3.0
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V

+###com/rabbitmq/client/impl/AMQImpl$Exchange$Delete
@1.3.0
+#getTicket()I
+#getExchange()Ljava/lang/String;
+#getIfUnused()Z
+#getNowait()Z
+#<init>(ILjava/lang/String;ZZ)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Exchange$DeleteOk
@1.3.0
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V

+###com/rabbitmq/client/impl/AMQImpl$Exchange
@1.3.0
+#<init>()V

+###com/rabbitmq/client/impl/AMQImpl$File$Ack
@1.3.0
+#getDeliveryTag()J
+#getMultiple()Z
+#<init>(JZ)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$File$Ack

+###com/rabbitmq/client/impl/AMQImpl$File$Cancel
@1.3.0
+#getConsumerTag()Ljava/lang/String;
+#getNowait()Z
+#<init>(Ljava/lang/String;Z)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$File$Cancel

+###com/rabbitmq/client/impl/AMQImpl$File$CancelOk
@1.3.0
+#getConsumerTag()Ljava/lang/String;
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$File$CancelOk

+###com/rabbitmq/client/impl/AMQImpl$File$Consume
@1.3.0
+#getTicket()I
+#getQueue()Ljava/lang/String;
+#getConsumerTag()Ljava/lang/String;
+#getNoLocal()Z
+#getNoAck()Z
+#getExclusive()Z
+#getNowait()Z
+#<init>(ILjava/lang/String;Ljava/lang/String;ZZZZ)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$File$Consume

+###com/rabbitmq/client/impl/AMQImpl$File$ConsumeOk
@1.3.0
+#getConsumerTag()Ljava/lang/String;
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$File$ConsumeOk

+###com/rabbitmq/client/impl/AMQImpl$File$Deliver
@1.3.0
+#getConsumerTag()Ljava/lang/String;
+#getDeliveryTag()J
+#getRedelivered()Z
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#getIdentifier()Ljava/lang/String;
+#<init>(Ljava/lang/String;JZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$File$Deliver

+###com/rabbitmq/client/impl/AMQImpl$File$Open
@1.3.0
+#getIdentifier()Ljava/lang/String;
+#getContentSize()J
+#<init>(Ljava/lang/String;J)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$File$Open

+###com/rabbitmq/client/impl/AMQImpl$File$OpenOk
@1.3.0
+#getStagedSize()J
+#<init>(J)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$File$OpenOk

+###com/rabbitmq/client/impl/AMQImpl$File$Publish
@1.3.0
+#getTicket()I
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#getMandatory()Z
+#getImmediate()Z
+#getIdentifier()Ljava/lang/String;
+#<init>(ILjava/lang/String;Ljava/lang/String;ZZLjava/lang/String;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$File$Publish

+###com/rabbitmq/client/impl/AMQImpl$File$Qos
@1.3.0
+#getPrefetchSize()I
+#getPrefetchCount()I
+#getGlobal()Z
+#<init>(IIZ)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$File$Qos

+###com/rabbitmq/client/impl/AMQImpl$File$QosOk
@1.3.0
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$File$QosOk

+###com/rabbitmq/client/impl/AMQImpl$File$Reject
@1.3.0
+#getDeliveryTag()J
+#getRequeue()Z
+#<init>(JZ)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$File$Reject

+###com/rabbitmq/client/impl/AMQImpl$File$Return
@1.3.0
+#getReplyCode()I
+#getReplyText()Ljava/lang/String;
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$File$Return

+###com/rabbitmq/client/impl/AMQImpl$File$Stage
@1.3.0
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$File$Stage

+###com/rabbitmq/client/impl/AMQImpl$File
@1.3.0
+#<init>()V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$File

+###com/rabbitmq/client/impl/AMQImpl$MethodVisitor
@1.3.0
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$Start;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$StartOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$Secure;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$SecureOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$Tune;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$TuneOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$Open;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$OpenOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$Redirect;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$Close;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$CloseOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Channel$Open;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Channel$OpenOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Channel$Flow;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Channel$FlowOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Channel$Alert;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Channel$Close;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Channel$CloseOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Access$Request;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Access$RequestOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Exchange$Declare;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeclareOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Exchange$Delete;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeleteOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Queue$Declare;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Queue$DeclareOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Queue$Bind;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Queue$BindOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Queue$Purge;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Queue$PurgeOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Queue$Delete;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Queue$DeleteOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$Qos;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$QosOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$Consume;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$ConsumeOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$Cancel;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$CancelOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$Publish;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$Return;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$Deliver;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$Get;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$GetOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$GetEmpty;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$Ack;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$Reject;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$Recover;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Qos;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$QosOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Consume;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$ConsumeOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Cancel;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$CancelOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Open;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$OpenOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Stage;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Publish;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Return;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Deliver;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Ack;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Reject;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$Qos;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$QosOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$Consume;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$ConsumeOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$Cancel;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$CancelOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$Publish;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$Return;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$Deliver;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Tx$Select;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Tx$SelectOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Tx$Commit;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Tx$CommitOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Tx$Rollback;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Tx$RollbackOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Dtx$Select;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Dtx$SelectOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Dtx$Start;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Dtx$StartOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Tunnel$Request;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$Integer;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$IntegerOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$String;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$StringOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$Table;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$TableOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$Content;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$ContentOk;)Ljava/lang/Object;
@1.5.4
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Queue$Unbind;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Queue$UnbindOk;)Ljava/lang/Object;
@1.8.1
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$RecoverAsync;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$RecoverOk;)Ljava/lang/Object;
@2.0.0
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$Redirect;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Channel$Alert;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Qos;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$QosOk;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Consume;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$ConsumeOk;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Cancel;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$CancelOk;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Open;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$OpenOk;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Stage;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Publish;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Return;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Deliver;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Ack;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$File$Reject;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$Qos;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$QosOk;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$Consume;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$ConsumeOk;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$Cancel;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$CancelOk;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$Publish;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$Return;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Stream$Deliver;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Dtx$Select;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Dtx$SelectOk;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Dtx$Start;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Dtx$StartOk;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Tunnel$Request;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$Integer;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$IntegerOk;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$String;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$StringOk;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$Table;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$TableOk;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$Content;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Test$ContentOk;)Ljava/lang/Object;
@2.1.1
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Exchange$Bind;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Exchange$BindOk;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Exchange$Unbind;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Exchange$UnbindOk;)Ljava/lang/Object;
@2.3.0
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Basic$Nack;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Confirm$Select;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Confirm$SelectOk;)Ljava/lang/Object;
@3.2.0
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$Blocked;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$Unblocked;)Ljava/lang/Object;
@4.11.3
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$UpdateSecret;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$UpdateSecretOk;)Ljava/lang/Object;
@5.0.0
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$UpdateSecret;)Ljava/lang/Object;
-#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$UpdateSecretOk;)Ljava/lang/Object;
@5.7.3
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$UpdateSecret;)Ljava/lang/Object;
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$Connection$UpdateSecretOk;)Ljava/lang/Object;

+###com/rabbitmq/client/impl/AMQImpl$Queue$Bind
@1.3.0
+#getTicket()I
+#getQueue()Ljava/lang/String;
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#getNowait()Z
+#getArguments()Ljava/util/Map;
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/Map;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Queue$BindOk
@1.3.0
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V

+###com/rabbitmq/client/impl/AMQImpl$Queue$Declare
@1.3.0
+#getTicket()I
+#getQueue()Ljava/lang/String;
+#getPassive()Z
+#getDurable()Z
+#getExclusive()Z
+#getAutoDelete()Z
+#getNowait()Z
+#getArguments()Ljava/util/Map;
+#<init>(ILjava/lang/String;ZZZZZLjava/util/Map;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Queue$DeclareOk
@1.3.0
+#getQueue()Ljava/lang/String;
+#getMessageCount()I
+#getConsumerCount()I
+#<init>(Ljava/lang/String;II)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Queue$Delete
@1.3.0
+#getTicket()I
+#getQueue()Ljava/lang/String;
+#getIfUnused()Z
+#getIfEmpty()Z
+#getNowait()Z
+#<init>(ILjava/lang/String;ZZZ)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Queue$DeleteOk
@1.3.0
+#getMessageCount()I
+#<init>(I)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Queue$Purge
@1.3.0
+#getTicket()I
+#getQueue()Ljava/lang/String;
+#getNowait()Z
+#<init>(ILjava/lang/String;Z)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Queue$PurgeOk
@1.3.0
+#getMessageCount()I
+#<init>(I)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Queue$Unbind
@1.5.4
+#getTicket()I
+#getQueue()Ljava/lang/String;
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#getArguments()Ljava/util/Map;
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Queue$UnbindOk
@1.5.4
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V

+###com/rabbitmq/client/impl/AMQImpl$Queue
@1.3.0
+#<init>()V

+###com/rabbitmq/client/impl/AMQImpl$Stream$Cancel
@1.3.0
+#getConsumerTag()Ljava/lang/String;
+#getNowait()Z
+#<init>(Ljava/lang/String;Z)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Stream$Cancel

+###com/rabbitmq/client/impl/AMQImpl$Stream$CancelOk
@1.3.0
+#getConsumerTag()Ljava/lang/String;
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Stream$CancelOk

+###com/rabbitmq/client/impl/AMQImpl$Stream$Consume
@1.3.0
+#getTicket()I
+#getQueue()Ljava/lang/String;
+#getConsumerTag()Ljava/lang/String;
+#getNoLocal()Z
+#getExclusive()Z
+#getNowait()Z
+#<init>(ILjava/lang/String;Ljava/lang/String;ZZZ)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Stream$Consume

+###com/rabbitmq/client/impl/AMQImpl$Stream$ConsumeOk
@1.3.0
+#getConsumerTag()Ljava/lang/String;
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Stream$ConsumeOk

+###com/rabbitmq/client/impl/AMQImpl$Stream$Deliver
@1.3.0
+#getConsumerTag()Ljava/lang/String;
+#getDeliveryTag()J
+#getExchange()Ljava/lang/String;
+#getQueue()Ljava/lang/String;
+#<init>(Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Stream$Deliver

+###com/rabbitmq/client/impl/AMQImpl$Stream$Publish
@1.3.0
+#getTicket()I
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#getMandatory()Z
+#getImmediate()Z
+#<init>(ILjava/lang/String;Ljava/lang/String;ZZ)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Stream$Publish

+###com/rabbitmq/client/impl/AMQImpl$Stream$Qos
@1.3.0
+#getPrefetchSize()I
+#getPrefetchCount()I
+#getConsumeRate()I
+#getGlobal()Z
+#<init>(IIIZ)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Stream$Qos

+###com/rabbitmq/client/impl/AMQImpl$Stream$QosOk
@1.3.0
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Stream$QosOk

+###com/rabbitmq/client/impl/AMQImpl$Stream$Return
@1.3.0
+#getReplyCode()I
+#getReplyText()Ljava/lang/String;
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Stream$Return

+###com/rabbitmq/client/impl/AMQImpl$Stream
@1.3.0
+#<init>()V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Stream

+###com/rabbitmq/client/impl/AMQImpl$Test$Content
@1.3.0
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Test$Content

+###com/rabbitmq/client/impl/AMQImpl$Test$ContentOk
@1.3.0
+#getContentChecksum()I
+#<init>(I)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Test$ContentOk

+###com/rabbitmq/client/impl/AMQImpl$Test$Integer
@1.3.0
+#getInteger1()I
+#getInteger2()I
+#getInteger3()I
+#getInteger4()J
+#getOperation()I
+#<init>(IIIJI)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Test$Integer

+###com/rabbitmq/client/impl/AMQImpl$Test$IntegerOk
@1.3.0
+#getResult()J
+#<init>(J)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Test$IntegerOk

+###com/rabbitmq/client/impl/AMQImpl$Test$String
@1.3.0
+#getString1()Ljava/lang/String;
+#getString2()Lcom/rabbitmq/client/impl/LongString;
+#getOperation()I
+#<init>(Ljava/lang/String;Lcom/rabbitmq/client/impl/LongString;I)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Test$String

+###com/rabbitmq/client/impl/AMQImpl$Test$StringOk
@1.3.0
+#getResult()Lcom/rabbitmq/client/impl/LongString;
+#<init>(Lcom/rabbitmq/client/impl/LongString;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Test$StringOk

+###com/rabbitmq/client/impl/AMQImpl$Test$Table
@1.3.0
+#getTable()Ljava/util/Map;
+#getIntegerOp()I
+#getStringOp()I
+#<init>(Ljava/util/Map;II)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Test$Table

+###com/rabbitmq/client/impl/AMQImpl$Test$TableOk
@1.3.0
+#getIntegerResult()J
+#getStringResult()Lcom/rabbitmq/client/impl/LongString;
+#<init>(JLcom/rabbitmq/client/impl/LongString;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Test$TableOk

+###com/rabbitmq/client/impl/AMQImpl$Test
@1.3.0
+#<init>()V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Test

+###com/rabbitmq/client/impl/AMQImpl$Tunnel$Request
@1.3.0
+#getMetaData()Ljava/util/Map;
+#<init>(Ljava/util/Map;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Tunnel$Request

+###com/rabbitmq/client/impl/AMQImpl$Tunnel
@1.3.0
+#<init>()V
@2.0.0
-###com/rabbitmq/client/impl/AMQImpl$Tunnel

+###com/rabbitmq/client/impl/AMQImpl$Tx$Commit
@1.3.0
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V

+###com/rabbitmq/client/impl/AMQImpl$Tx$CommitOk
@1.3.0
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V

+###com/rabbitmq/client/impl/AMQImpl$Tx$Rollback
@1.3.0
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V

+###com/rabbitmq/client/impl/AMQImpl$Tx$RollbackOk
@1.3.0
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V

+###com/rabbitmq/client/impl/AMQImpl$Tx$Select
@1.3.0
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V

+###com/rabbitmq/client/impl/AMQImpl$Tx$SelectOk
@1.3.0
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V

+###com/rabbitmq/client/impl/AMQImpl$Tx
@1.3.0
+#<init>()V

+###com/rabbitmq/client/impl/AMQImpl
@1.3.0
+#<init>()V
+#readMethodFrom(Ljava/io/DataInputStream;)Lcom/rabbitmq/client/impl/Method;
+#readContentHeaderFrom(Ljava/io/DataInputStream;)Lcom/rabbitmq/client/impl/AMQContentHeader;

+###com/rabbitmq/client/impl/ChannelManager
@1.3.0
+#<init>()V
+#getChannelMax()I
+#setChannelMax(I)V
+#getChannel(I)Lcom/rabbitmq/client/impl/ChannelN;
+#handleSignal(Lcom/rabbitmq/client/ShutdownSignalException;)V
+#createChannel(Lcom/rabbitmq/client/impl/AMQConnection;)Lcom/rabbitmq/client/impl/ChannelN;
+#createChannel(Lcom/rabbitmq/client/impl/AMQConnection;I)Lcom/rabbitmq/client/impl/ChannelN;
+#allocateChannelNumber(I)I
+#disconnectChannel(I)V
@1.7.2
+#<init>(I)V
-#<init>()V
-#setChannelMax(I)V
-#allocateChannelNumber(I)I
@1.8.0
+#disconnectChannel(Lcom/rabbitmq/client/impl/ChannelN;)V
-#disconnectChannel(I)V
@2.7.0
+#<init>(Lcom/rabbitmq/client/impl/ConsumerWorkService;I)V
+#releaseChannelNumber(Lcom/rabbitmq/client/impl/ChannelN;)V
-#<init>(I)V
-#disconnectChannel(Lcom/rabbitmq/client/impl/ChannelN;)V
@3.3.0
+#<init>(Lcom/rabbitmq/client/impl/ConsumerWorkService;ILjava/util/concurrent/ThreadFactory;)V
@3.6.0
+#getShutdownExecutor()Ljava/util/concurrent/ExecutorService;
+#setShutdownExecutor(Ljava/util/concurrent/ExecutorService;)V
@4.0.0
+#<init>(Lcom/rabbitmq/client/impl/ConsumerWorkService;ILjava/util/concurrent/ThreadFactory;Lcom/rabbitmq/client/MetricsCollector;)V
+#setChannelShutdownTimeout(I)V

+###com/rabbitmq/client/impl/ChannelN
@1.3.0
+#<init>(Lcom/rabbitmq/client/impl/AMQConnection;I)V
+#open()V
+#getReturnListener()Lcom/rabbitmq/client/ReturnListener;
+#setReturnListener(Lcom/rabbitmq/client/ReturnListener;)V
+#broadcastShutdownSignal(Lcom/rabbitmq/client/ShutdownSignalException;)V
+#processShutdownSignal(Lcom/rabbitmq/client/ShutdownSignalException;)V
+#releaseChannelNumber()V
+#processAsync(Lcom/rabbitmq/client/Command;)Z
+#close(ILjava/lang/String;)V
+#close(ILjava/lang/String;ZLjava/lang/Throwable;)V
+#accessRequest(Ljava/lang/String;)I
+#accessRequest(Ljava/lang/String;ZZZZZ)I
+#basicPublish(ILjava/lang/String;Ljava/lang/String;Lcom/rabbitmq/client/AMQP$BasicProperties;[B)V
+#basicPublish(ILjava/lang/String;Ljava/lang/String;ZZLcom/rabbitmq/client/AMQP$BasicProperties;[B)V
+#exchangeDeclare(ILjava/lang/String;Ljava/lang/String;ZZZLjava/util/Map;)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeclareOk;
+#exchangeDeclare(ILjava/lang/String;Ljava/lang/String;Z)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeclareOk;
+#exchangeDeclare(ILjava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeclareOk;
+#exchangeDelete(ILjava/lang/String;Z)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeleteOk;
+#exchangeDelete(ILjava/lang/String;)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeleteOk;
+#queueDeclare(ILjava/lang/String;ZZZZLjava/util/Map;)Lcom/rabbitmq/client/impl/AMQImpl$Queue$DeclareOk;
+#queueDeclare(ILjava/lang/String;Z)Lcom/rabbitmq/client/impl/AMQImpl$Queue$DeclareOk;
+#queueDeclare(ILjava/lang/String;)Lcom/rabbitmq/client/impl/AMQImpl$Queue$DeclareOk;
+#queueDeclare(I)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
+#queueDelete(ILjava/lang/String;ZZ)Lcom/rabbitmq/client/impl/AMQImpl$Queue$DeleteOk;
+#queueDelete(ILjava/lang/String;)Lcom/rabbitmq/client/impl/AMQImpl$Queue$DeleteOk;
+#queueBind(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lcom/rabbitmq/client/impl/AMQImpl$Queue$BindOk;
+#queueBind(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/impl/AMQImpl$Queue$BindOk;
+#basicGet(ILjava/lang/String;Z)Lcom/rabbitmq/client/GetResponse;
+#basicAck(JZ)V
+#basicConsume(ILjava/lang/String;Lcom/rabbitmq/client/Consumer;)Ljava/lang/String;
+#basicConsume(ILjava/lang/String;ZLcom/rabbitmq/client/Consumer;)Ljava/lang/String;
+#basicConsume(ILjava/lang/String;ZLjava/lang/String;Lcom/rabbitmq/client/Consumer;)Ljava/lang/String;
+#basicConsume(ILjava/lang/String;ZLjava/lang/String;ZZLcom/rabbitmq/client/Consumer;)Ljava/lang/String;
+#basicCancel(Ljava/lang/String;)V
+#txSelect()Lcom/rabbitmq/client/impl/AMQImpl$Tx$SelectOk;
+#txCommit()Lcom/rabbitmq/client/impl/AMQImpl$Tx$CommitOk;
+#txRollback()Lcom/rabbitmq/client/impl/AMQImpl$Tx$RollbackOk;
+#txRollback()Lcom/rabbitmq/client/AMQP$Tx$RollbackOk;
+#txCommit()Lcom/rabbitmq/client/AMQP$Tx$CommitOk;
+#txSelect()Lcom/rabbitmq/client/AMQP$Tx$SelectOk;
+#queueBind(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$BindOk;
+#queueBind(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$BindOk;
+#queueDelete(ILjava/lang/String;ZZ)Lcom/rabbitmq/client/AMQP$Queue$DeleteOk;
+#queueDelete(ILjava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$DeleteOk;
+#queueDeclare(ILjava/lang/String;ZZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
+#queueDeclare(ILjava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
+#exchangeDeclare(ILjava/lang/String;Ljava/lang/String;ZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#queueDeclare(ILjava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
+#exchangeDeclare(ILjava/lang/String;Ljava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDelete(ILjava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Exchange$DeleteOk;
+#exchangeDeclare(ILjava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDelete(ILjava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$DeleteOk;
@1.5.4
+#processShutdownSignal(Lcom/rabbitmq/client/ShutdownSignalException;ZZ)V
+#close()V
+#abort()V
+#abort(ILjava/lang/String;)V
+#close(ILjava/lang/String;ZLjava/lang/Throwable;Z)V
+#basicPublish(Ljava/lang/String;Ljava/lang/String;Lcom/rabbitmq/client/AMQP$BasicProperties;[B)V
+#basicPublish(Ljava/lang/String;Ljava/lang/String;ZZLcom/rabbitmq/client/AMQP$BasicProperties;[B)V
+#exchangeDeclare(Ljava/lang/String;Ljava/lang/String;ZZZLjava/util/Map;)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeclareOk;
+#exchangeDeclare(Ljava/lang/String;Ljava/lang/String;Z)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeclareOk;
+#exchangeDeclare(Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeclareOk;
+#exchangeDelete(Ljava/lang/String;Z)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeleteOk;
+#exchangeDelete(Ljava/lang/String;)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeleteOk;
+#queueDeclare(Ljava/lang/String;ZZZZLjava/util/Map;)Lcom/rabbitmq/client/impl/AMQImpl$Queue$DeclareOk;
+#queueDeclare(Ljava/lang/String;Z)Lcom/rabbitmq/client/impl/AMQImpl$Queue$DeclareOk;
+#queueDeclare(Ljava/lang/String;)Lcom/rabbitmq/client/impl/AMQImpl$Queue$DeclareOk;
+#queueDeclare()Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
+#queueDelete(Ljava/lang/String;ZZ)Lcom/rabbitmq/client/impl/AMQImpl$Queue$DeleteOk;
+#queueDelete(Ljava/lang/String;)Lcom/rabbitmq/client/impl/AMQImpl$Queue$DeleteOk;
+#queueBind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lcom/rabbitmq/client/impl/AMQImpl$Queue$BindOk;
+#queueBind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/impl/AMQImpl$Queue$BindOk;
+#queueUnbind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lcom/rabbitmq/client/impl/AMQImpl$Queue$UnbindOk;
+#queueUnbind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/impl/AMQImpl$Queue$UnbindOk;
+#basicGet(Ljava/lang/String;Z)Lcom/rabbitmq/client/GetResponse;
+#basicConsume(Ljava/lang/String;Lcom/rabbitmq/client/Consumer;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLcom/rabbitmq/client/Consumer;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;Lcom/rabbitmq/client/Consumer;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;ZZLcom/rabbitmq/client/Consumer;)Ljava/lang/String;
+#queueUnbind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$UnbindOk;
+#queueUnbind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$UnbindOk;
+#queueBind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$BindOk;
+#queueBind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$BindOk;
+#queueDelete(Ljava/lang/String;ZZ)Lcom/rabbitmq/client/AMQP$Queue$DeleteOk;
+#queueDelete(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$DeleteOk;
+#queueDeclare(Ljava/lang/String;ZZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
+#queueDeclare(Ljava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
+#queueDeclare(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
+#exchangeDeclare(Ljava/lang/String;Ljava/lang/String;ZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDeclare(Ljava/lang/String;Ljava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDelete(Ljava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Exchange$DeleteOk;
+#exchangeDeclare(Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDelete(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$DeleteOk;
-#processShutdownSignal(Lcom/rabbitmq/client/ShutdownSignalException;)V
-#close(ILjava/lang/String;ZLjava/lang/Throwable;)V
-#accessRequest(Ljava/lang/String;)I
-#accessRequest(Ljava/lang/String;ZZZZZ)I
-#basicPublish(ILjava/lang/String;Ljava/lang/String;Lcom/rabbitmq/client/AMQP$BasicProperties;[B)V
-#basicPublish(ILjava/lang/String;Ljava/lang/String;ZZLcom/rabbitmq/client/AMQP$BasicProperties;[B)V
-#exchangeDeclare(ILjava/lang/String;Ljava/lang/String;ZZZLjava/util/Map;)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeclareOk;
-#exchangeDeclare(ILjava/lang/String;Ljava/lang/String;Z)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeclareOk;
-#exchangeDeclare(ILjava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeclareOk;
-#exchangeDelete(ILjava/lang/String;Z)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeleteOk;
-#exchangeDelete(ILjava/lang/String;)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeleteOk;
-#queueDeclare(ILjava/lang/String;ZZZZLjava/util/Map;)Lcom/rabbitmq/client/impl/AMQImpl$Queue$DeclareOk;
-#queueDeclare(ILjava/lang/String;Z)Lcom/rabbitmq/client/impl/AMQImpl$Queue$DeclareOk;
-#queueDeclare(ILjava/lang/String;)Lcom/rabbitmq/client/impl/AMQImpl$Queue$DeclareOk;
-#queueDeclare(I)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
-#queueDelete(ILjava/lang/String;ZZ)Lcom/rabbitmq/client/impl/AMQImpl$Queue$DeleteOk;
-#queueDelete(ILjava/lang/String;)Lcom/rabbitmq/client/impl/AMQImpl$Queue$DeleteOk;
-#queueBind(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lcom/rabbitmq/client/impl/AMQImpl$Queue$BindOk;
-#queueBind(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/impl/AMQImpl$Queue$BindOk;
-#basicGet(ILjava/lang/String;Z)Lcom/rabbitmq/client/GetResponse;
-#basicConsume(ILjava/lang/String;Lcom/rabbitmq/client/Consumer;)Ljava/lang/String;
-#basicConsume(ILjava/lang/String;ZLcom/rabbitmq/client/Consumer;)Ljava/lang/String;
-#basicConsume(ILjava/lang/String;ZLjava/lang/String;Lcom/rabbitmq/client/Consumer;)Ljava/lang/String;
-#basicConsume(ILjava/lang/String;ZLjava/lang/String;ZZLcom/rabbitmq/client/Consumer;)Ljava/lang/String;
-#queueBind(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$BindOk;
-#queueBind(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$BindOk;
-#queueDelete(ILjava/lang/String;ZZ)Lcom/rabbitmq/client/AMQP$Queue$DeleteOk;
-#queueDelete(ILjava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$DeleteOk;
-#queueDeclare(ILjava/lang/String;ZZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
-#queueDeclare(ILjava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
-#exchangeDeclare(ILjava/lang/String;Ljava/lang/String;ZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
-#queueDeclare(ILjava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
-#exchangeDeclare(ILjava/lang/String;Ljava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
-#exchangeDelete(ILjava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Exchange$DeleteOk;
-#exchangeDeclare(ILjava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
-#exchangeDelete(ILjava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$DeleteOk;
@1.6.0
+#basicQos(IIZ)V
+#basicQos(I)V
@1.7.2
+#queuePurge(Ljava/lang/String;)Lcom/rabbitmq/client/impl/AMQImpl$Queue$PurgeOk;
+#queuePurge(Ljava/lang/String;Z)Lcom/rabbitmq/client/impl/AMQImpl$Queue$PurgeOk;
+#basicRecoverAsync(Z)V
+#queuePurge(Ljava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Queue$PurgeOk;
+#queuePurge(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$PurgeOk;
@1.8.0
+#exchangeDeclare(Ljava/lang/String;Ljava/lang/String;ZZLjava/util/Map;)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeclareOk;
+#exchangeDeclarePassive(Ljava/lang/String;)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeclareOk;
+#queueDeclare(Ljava/lang/String;ZZZLjava/util/Map;)Lcom/rabbitmq/client/impl/AMQImpl$Queue$DeclareOk;
+#queueDeclarePassive(Ljava/lang/String;)Lcom/rabbitmq/client/impl/AMQImpl$Queue$DeclareOk;
+#flow(Z)Lcom/rabbitmq/client/impl/AMQImpl$Channel$FlowOk;
+#queueDeclarePassive(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
+#queueDeclare(Ljava/lang/String;ZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
+#exchangeDeclarePassive(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDeclare(Ljava/lang/String;Ljava/lang/String;ZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#flow(Z)Lcom/rabbitmq/client/AMQP$Channel$FlowOk;
-#exchangeDeclare(Ljava/lang/String;Ljava/lang/String;ZZZLjava/util/Map;)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeclareOk;
-#queueDeclare(Ljava/lang/String;ZZZZLjava/util/Map;)Lcom/rabbitmq/client/impl/AMQImpl$Queue$DeclareOk;
-#queueDeclare(Ljava/lang/String;Z)Lcom/rabbitmq/client/impl/AMQImpl$Queue$DeclareOk;
-#queueDeclare(Ljava/lang/String;)Lcom/rabbitmq/client/impl/AMQImpl$Queue$DeclareOk;
-#queueDeclare(Ljava/lang/String;ZZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
-#queueDeclare(Ljava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
-#queueDeclare(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
-#exchangeDeclare(Ljava/lang/String;Ljava/lang/String;ZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
@1.8.1
+#getFlowListener()Lcom/rabbitmq/client/FlowListener;
+#setFlowListener(Lcom/rabbitmq/client/FlowListener;)V
+#getDefaultConsumer()Lcom/rabbitmq/client/Consumer;
+#setDefaultConsumer(Lcom/rabbitmq/client/Consumer;)V
+#basicRecover(Z)Lcom/rabbitmq/client/impl/AMQImpl$Basic$RecoverOk;
+#getFlow()Lcom/rabbitmq/client/impl/AMQImpl$Channel$FlowOk;
+#basicRecover(Z)Lcom/rabbitmq/client/AMQP$Basic$RecoverOk;
+#getFlow()Lcom/rabbitmq/client/AMQP$Channel$FlowOk;
@2.0.0
+#basicReject(JZ)V
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;ZZLjava/util/Map;Lcom/rabbitmq/client/Consumer;)Ljava/lang/String;
-#basicConsume(Ljava/lang/String;ZLjava/lang/String;ZZLcom/rabbitmq/client/Consumer;)Ljava/lang/String;
@2.1.0
-#queuePurge(Ljava/lang/String;Z)Lcom/rabbitmq/client/impl/AMQImpl$Queue$PurgeOk;
-#queuePurge(Ljava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Queue$PurgeOk;
@2.1.1
+#exchangeBind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$BindOk;
+#exchangeBind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$BindOk;
+#exchangeUnbind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$UnbindOk;
+#exchangeUnbind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$UnbindOk;
+#exchangeUnbind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$UnbindOk;
+#exchangeUnbind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$UnbindOk;
+#exchangeBind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$BindOk;
+#exchangeBind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$BindOk;
@2.2.0
+#basicRecover()Lcom/rabbitmq/client/impl/AMQImpl$Basic$RecoverOk;
+#basicRecover()Lcom/rabbitmq/client/AMQP$Basic$RecoverOk;
@2.3.0
+#getConfirmListener()Lcom/rabbitmq/client/ConfirmListener;
+#setConfirmListener(Lcom/rabbitmq/client/ConfirmListener;)V
+#exchangeDeclare(Ljava/lang/String;Ljava/lang/String;ZZZLjava/util/Map;)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeclareOk;
+#basicNack(JZZ)V
+#confirmSelect()Lcom/rabbitmq/client/impl/AMQImpl$Confirm$SelectOk;
+#getNextPublishSeqNo()J
+#confirmSelect()Lcom/rabbitmq/client/AMQP$Confirm$SelectOk;
+#exchangeDeclare(Ljava/lang/String;Ljava/lang/String;ZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
@2.5.0
+#asyncRpc(Lcom/rabbitmq/client/Method;)V
+#rpc(Lcom/rabbitmq/client/Method;)Lcom/rabbitmq/client/Method;
@2.6.0
+#addReturnListener(Lcom/rabbitmq/client/ReturnListener;)V
+#removeReturnListener(Lcom/rabbitmq/client/ReturnListener;)Z
+#clearReturnListeners()V
+#addFlowListener(Lcom/rabbitmq/client/FlowListener;)V
+#removeFlowListener(Lcom/rabbitmq/client/FlowListener;)Z
+#clearFlowListeners()V
+#addConfirmListener(Lcom/rabbitmq/client/ConfirmListener;)V
+#removeConfirmListener(Lcom/rabbitmq/client/ConfirmListener;)Z
+#clearConfirmListeners()V
+#waitForConfirms()Z
+#waitForConfirmsOrDie()V
+#rpc(Lcom/rabbitmq/client/Method;)Lcom/rabbitmq/client/impl/AMQCommand;
+#rpc(Lcom/rabbitmq/client/Method;)Lcom/rabbitmq/client/Command;
-#getReturnListener()Lcom/rabbitmq/client/ReturnListener;
-#setReturnListener(Lcom/rabbitmq/client/ReturnListener;)V
-#getFlowListener()Lcom/rabbitmq/client/FlowListener;
-#setFlowListener(Lcom/rabbitmq/client/FlowListener;)V
-#getConfirmListener()Lcom/rabbitmq/client/ConfirmListener;
-#setConfirmListener(Lcom/rabbitmq/client/ConfirmListener;)V
-#rpc(Lcom/rabbitmq/client/Method;)Lcom/rabbitmq/client/Method;
@2.7.0
+#<init>(Lcom/rabbitmq/client/impl/AMQConnection;ILcom/rabbitmq/client/impl/ConsumerWorkService;)V
+#getShutdownLatch()Ljava/util/concurrent/CountDownLatch;
+#getConnection()Lcom/rabbitmq/client/Connection;
-#<init>(Lcom/rabbitmq/client/impl/AMQConnection;I)V
-#broadcastShutdownSignal(Lcom/rabbitmq/client/ShutdownSignalException;)V
-#releaseChannelNumber()V
@2.8.0
+#waitForConfirms(J)Z
+#waitForConfirmsOrDie(J)V
-#getShutdownLatch()Ljava/util/concurrent/CountDownLatch;
@3.0.0
+#basicPublish(Ljava/lang/String;Ljava/lang/String;ZLcom/rabbitmq/client/AMQP$BasicProperties;[B)V
@3.3.0
+#basicQos(IZ)V
+#basicConsume(Ljava/lang/String;ZLjava/util/Map;Lcom/rabbitmq/client/Consumer;)Ljava/lang/String;
+#flowBlocked()Z
-#flow(Z)Lcom/rabbitmq/client/impl/AMQImpl$Channel$FlowOk;
-#getFlow()Lcom/rabbitmq/client/impl/AMQImpl$Channel$FlowOk;
-#getFlow()Lcom/rabbitmq/client/AMQP$Channel$FlowOk;
-#flow(Z)Lcom/rabbitmq/client/AMQP$Channel$FlowOk;
@3.4.0
+#exchangeDeclareNoWait(Ljava/lang/String;Ljava/lang/String;ZZZLjava/util/Map;)V
+#exchangeDeleteNoWait(Ljava/lang/String;Z)V
+#exchangeBindNoWait(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#exchangeUnbindNoWait(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#queueDeclareNoWait(Ljava/lang/String;ZZZLjava/util/Map;)V
+#queueDeleteNoWait(Ljava/lang/String;ZZ)V
+#queueBindNoWait(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#enqueueRpc(Lcom/rabbitmq/client/impl/AMQChannel$RpcContinuation;)V
+#nextOutstandingRpc()Lcom/rabbitmq/client/impl/AMQChannel$RpcContinuation;
@3.4.4
-#nextOutstandingRpc()Lcom/rabbitmq/client/impl/AMQChannel$RpcContinuation;
@3.5.0
-#close(ILjava/lang/String;ZLjava/lang/Throwable;Z)V
-#basicRecoverAsync(Z)V
@3.5.3
*#addFlowListener(Lcom/rabbitmq/client/FlowListener;)V[deprecated]
*#removeFlowListener(Lcom/rabbitmq/client/FlowListener;)Z[deprecated]
*#clearFlowListeners()V[deprecated]
*#flowBlocked()Z[deprecated]
@3.6.0
+#messageCount(Ljava/lang/String;)J
+#consumerCount(Ljava/lang/String;)J
@3.6.6
+#exchangeDeclare(Ljava/lang/String;Lcom/rabbitmq/client/BuiltinExchangeType;ZZLjava/util/Map;)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeclareOk;
+#exchangeDeclareNoWait(Ljava/lang/String;Lcom/rabbitmq/client/BuiltinExchangeType;ZZZLjava/util/Map;)V
+#exchangeDeclare(Ljava/lang/String;Lcom/rabbitmq/client/BuiltinExchangeType;ZZZLjava/util/Map;)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeclareOk;
+#exchangeDeclare(Ljava/lang/String;Lcom/rabbitmq/client/BuiltinExchangeType;Z)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeclareOk;
+#exchangeDeclare(Ljava/lang/String;Lcom/rabbitmq/client/BuiltinExchangeType;)Lcom/rabbitmq/client/impl/AMQImpl$Exchange$DeclareOk;
+#exchangeDeclare(Ljava/lang/String;Lcom/rabbitmq/client/BuiltinExchangeType;ZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDeclare(Ljava/lang/String;Lcom/rabbitmq/client/BuiltinExchangeType;ZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDeclare(Ljava/lang/String;Lcom/rabbitmq/client/BuiltinExchangeType;Z)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDeclare(Ljava/lang/String;Lcom/rabbitmq/client/BuiltinExchangeType;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
@4.0.0
+#<init>(Lcom/rabbitmq/client/impl/AMQConnection;ILcom/rabbitmq/client/impl/ConsumerWorkService;Lcom/rabbitmq/client/MetricsCollector;)V
@5.0.0
+#addReturnListener(Lcom/rabbitmq/client/ReturnCallback;)Lcom/rabbitmq/client/ReturnListener;
+#addConfirmListener(Lcom/rabbitmq/client/ConfirmCallback;Lcom/rabbitmq/client/ConfirmCallback;)Lcom/rabbitmq/client/ConfirmListener;
+#basicConsume(Ljava/lang/String;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/util/Map;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/util/Map;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/util/Map;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;ZZLjava/util/Map;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;ZZLjava/util/Map;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;ZZLjava/util/Map;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#asyncCompletableRpc(Lcom/rabbitmq/client/Method;)Ljava/util/concurrent/CompletableFuture;
-#addFlowListener(Lcom/rabbitmq/client/FlowListener;)V[deprecated]
-#removeFlowListener(Lcom/rabbitmq/client/FlowListener;)Z[deprecated]
-#clearFlowListeners()V[deprecated]
-#flowBlocked()Z[deprecated]

+###com/rabbitmq/client/impl/ClientVersion
@1.3.0
+#<init>()V

+###com/rabbitmq/client/impl/ContentHeaderPropertyReader
@1.3.0
+#<init>(Ljava/io/DataInputStream;)V
+#isContinuationBitSet()Z
+#readFlagWord()V
+#readPresence()Z
+#finishPresence()V
+#readShortstr()Ljava/lang/String;
+#readLongstr()Lcom/rabbitmq/client/impl/LongString;
+#readShort()Ljava/lang/Integer;
+#readLong()Ljava/lang/Integer;
+#readLonglong()Ljava/lang/Long;
+#readTable()Ljava/util/Map;
+#readOctet()Ljava/lang/Integer;
+#readTimestamp()Ljava/util/Date;
@2.5.0
+#readOctet()I
-#isContinuationBitSet()Z
-#readOctet()Ljava/lang/Integer;
@2.6.0
+#readLongstr()Lcom/rabbitmq/client/LongString;
-#readLongstr()Lcom/rabbitmq/client/impl/LongString;

+###com/rabbitmq/client/impl/ContentHeaderPropertyWriter
@1.3.0
+#<init>(Ljava/io/DataOutputStream;)V
+#emitFlagWord(Z)V
+#writePresence(Z)V
+#finishPresence()V
+#writeShortstr(Ljava/lang/String;)V
+#writeLongstr(Ljava/lang/String;)V
+#writeLongstr(Lcom/rabbitmq/client/impl/LongString;)V
+#writeShort(Ljava/lang/Integer;)V
+#writeLong(Ljava/lang/Integer;)V
+#writeLonglong(Ljava/lang/Long;)V
+#writeTable(Ljava/util/Map;)V
+#writeOctet(Ljava/lang/Integer;)V
+#writeTimestamp(Ljava/util/Date;)V
@2.5.0
+#writeOctet(I)V
-#emitFlagWord(Z)V
@2.6.0
+#writeLongstr(Lcom/rabbitmq/client/LongString;)V
-#writeLongstr(Lcom/rabbitmq/client/impl/LongString;)V

+###com/rabbitmq/client/impl/DefaultExceptionHandler
@1.3.0
+#<init>()V
+#handleUnexpectedConnectionDriverException(Lcom/rabbitmq/client/Connection;Ljava/lang/Throwable;)V
+#handleReturnListenerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
+#handleConsumerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;Lcom/rabbitmq/client/Consumer;Ljava/lang/String;Ljava/lang/String;)V
@1.8.1
+#handleFlowListenerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
@2.3.0
+#handleConfirmListenerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
@3.2.0
+#handleBlockedListenerException(Lcom/rabbitmq/client/Connection;Ljava/lang/Throwable;)V
@3.3.0
+#handleConnectionRecoveryException(Lcom/rabbitmq/client/Connection;Ljava/lang/Throwable;)V
+#handleChannelRecoveryException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
+#handleTopologyRecoveryException(Lcom/rabbitmq/client/Connection;Lcom/rabbitmq/client/Channel;Lcom/rabbitmq/client/TopologyRecoveryException;)V
@3.5.4
-#handleUnexpectedConnectionDriverException(Lcom/rabbitmq/client/Connection;Ljava/lang/Throwable;)V
-#handleReturnListenerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
-#handleFlowListenerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
-#handleConfirmListenerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
-#handleBlockedListenerException(Lcom/rabbitmq/client/Connection;Ljava/lang/Throwable;)V
-#handleConsumerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;Lcom/rabbitmq/client/Consumer;Ljava/lang/String;Ljava/lang/String;)V
-#handleConnectionRecoveryException(Lcom/rabbitmq/client/Connection;Ljava/lang/Throwable;)V
-#handleChannelRecoveryException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
-#handleTopologyRecoveryException(Lcom/rabbitmq/client/Connection;Lcom/rabbitmq/client/Channel;Lcom/rabbitmq/client/TopologyRecoveryException;)V

+###com/rabbitmq/client/impl/ExceptionHandler
@1.3.0
+#handleUnexpectedConnectionDriverException(Lcom/rabbitmq/client/Connection;Ljava/lang/Throwable;)V
+#handleReturnListenerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
+#handleConsumerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;Lcom/rabbitmq/client/Consumer;Ljava/lang/String;Ljava/lang/String;)V
@1.8.1
+#handleFlowListenerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
@2.3.0
+#handleConfirmListenerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
@3.2.0
+#handleBlockedListenerException(Lcom/rabbitmq/client/Connection;Ljava/lang/Throwable;)V
@3.3.0
-###com/rabbitmq/client/impl/ExceptionHandler

+###com/rabbitmq/client/impl/Frame
@1.3.0
+#<init>()V
+#<init>(II)V
+#<init>(II[B)V
+#fromBodyFragment(I[BII)Lcom/rabbitmq/client/impl/Frame;
+#readFrom(Ljava/io/DataInputStream;)Lcom/rabbitmq/client/impl/Frame;
+#protocolVersionMismatch(Ljava/io/DataInputStream;)V
+#writeTo(Ljava/io/DataOutputStream;)V
+#getPayload()[B
+#getInputStream()Ljava/io/DataInputStream;
+#getOutputStream()Ljava/io/DataOutputStream;
+#toString()Ljava/lang/String;
+#buildTable([Ljava/lang/Object;)Ljava/util/Map;
+#tableSize(Ljava/util/Map;)J
+#longStrSize(Ljava/lang/String;)I
+#shortStrSize(Ljava/lang/String;)I
@1.7.2
+#fieldValueSize(Ljava/lang/Object;)J
+#arraySize(Ljava/util/List;)J
@2.5.0
-#fieldValueSize(Ljava/lang/Object;)J
-#longStrSize(Ljava/lang/String;)I
-#shortStrSize(Ljava/lang/String;)I
@2.6.0
-#<init>()V
@2.7.0
-#buildTable([Ljava/lang/Object;)Ljava/util/Map;
@2.8.0
+#arraySize([Ljava/lang/Object;)J
@4.0.0
+#size()I

+###com/rabbitmq/client/impl/FrameHandler
@1.3.0
+#getHost()Ljava/lang/String;
+#getPort()I
+#setTimeout(I)V
+#getTimeout()I
+#sendHeader()V
+#readFrame()Lcom/rabbitmq/client/impl/Frame;
+#writeFrame(Lcom/rabbitmq/client/impl/Frame;)V
+#close()V
@2.4.1
+#getAddress()Ljava/net/InetAddress;
-#getHost()Ljava/lang/String;
@2.8.3
+#flush()V
@3.3.0
-#getAddress()Ljava/net/InetAddress;
-#getPort()I
@4.0.0
+#initialize(Lcom/rabbitmq/client/impl/AMQConnection;)V

+###com/rabbitmq/client/impl/LongString
@1.3.0
+#length()J
+#getStream()Ljava/io/DataInputStream;
+#getBytes()[B
@2.6.0
-###com/rabbitmq/client/impl/LongString

+###com/rabbitmq/client/impl/LongStringHelper$ByteArrayLongString
@1.3.0
+#<init>([B)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getBytes()[B
+#getStream()Ljava/io/DataInputStream;
+#length()J
+#toString()Ljava/lang/String;
@2.5.0
-###com/rabbitmq/client/impl/LongStringHelper$ByteArrayLongString

+###com/rabbitmq/client/impl/LongStringHelper
@1.3.0
+#<init>()V
+#asLongString(Ljava/lang/String;)Lcom/rabbitmq/client/impl/LongString;
+#asLongString([B)Lcom/rabbitmq/client/impl/LongString;
@2.6.0
+#asLongString(Ljava/lang/String;)Lcom/rabbitmq/client/LongString;
+#asLongString([B)Lcom/rabbitmq/client/LongString;
-#asLongString(Ljava/lang/String;)Lcom/rabbitmq/client/impl/LongString;
-#asLongString([B)Lcom/rabbitmq/client/impl/LongString;

+###com/rabbitmq/client/impl/Method
@1.3.0
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#toString()Ljava/lang/String;
+#toFrame(I)Lcom/rabbitmq/client/impl/Frame;
@2.5.0
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V

+###com/rabbitmq/client/impl/MethodArgumentReader
@1.3.0
+#<init>(Ljava/io/DataInputStream;)V
+#readShortstr(Ljava/io/DataInputStream;)Ljava/lang/String;
+#readShortstr()Ljava/lang/String;
+#readLongstr(Ljava/io/DataInputStream;)Lcom/rabbitmq/client/impl/LongString;
+#readLongstr()Lcom/rabbitmq/client/impl/LongString;
+#readShort()I
+#readLong()I
+#readLonglong()J
+#readBit()Z
+#readTable()Ljava/util/Map;
+#readTable(Ljava/io/DataInputStream;)Ljava/util/Map;
+#readOctet()I
+#readTimestamp(Ljava/io/DataInputStream;)Ljava/util/Date;
+#readTimestamp()Ljava/util/Date;
@1.6.0
-#readShortstr(Ljava/io/DataInputStream;)Ljava/lang/String;
-#readLongstr(Ljava/io/DataInputStream;)Lcom/rabbitmq/client/impl/LongString;
-#readTable(Ljava/io/DataInputStream;)Ljava/util/Map;
-#readTimestamp(Ljava/io/DataInputStream;)Ljava/util/Date;
@2.6.0
+#readLongstr()Lcom/rabbitmq/client/LongString;
-#readLongstr()Lcom/rabbitmq/client/impl/LongString;
@2.7.0
+#<init>(Lcom/rabbitmq/client/impl/ValueReader;)V
-#<init>(Ljava/io/DataInputStream;)V

+###com/rabbitmq/client/impl/MethodArgumentWriter
@1.3.0
+#<init>(Ljava/io/DataOutputStream;)V
+#writeShortstr(Ljava/lang/String;)V
+#writeLongstr(Lcom/rabbitmq/client/impl/LongString;)V
+#writeLongstr(Ljava/lang/String;)V
+#writeShort(I)V
+#writeLong(I)V
+#writeLonglong(J)V
+#writeBit(Z)V
+#writeTable(Ljava/util/Map;)V
+#writeOctet(I)V
+#writeOctet(B)V
+#writeTimestamp(Ljava/util/Date;)V
+#flush()V
@2.6.0
+#writeLongstr(Lcom/rabbitmq/client/LongString;)V
-#writeLongstr(Lcom/rabbitmq/client/impl/LongString;)V
@2.7.0
+#<init>(Lcom/rabbitmq/client/impl/ValueWriter;)V
-#<init>(Ljava/io/DataOutputStream;)V

+###com/rabbitmq/client/impl/ShutdownNotifierComponent
@1.5.4
+#<init>()V
+#addShutdownListener(Lcom/rabbitmq/client/ShutdownListener;)V
+#getCloseReason()Lcom/rabbitmq/client/ShutdownSignalException;
+#notifyListeners()V
+#removeShutdownListener(Lcom/rabbitmq/client/ShutdownListener;)V
+#isOpen()Z
@2.3.1
+#setShutdownCauseIfOpen(Lcom/rabbitmq/client/ShutdownSignalException;)Z

+###com/rabbitmq/client/impl/SocketFrameHandler
@1.3.0
+#<init>(Ljavax/net/SocketFactory;Ljava/lang/String;I)V
+#getHost()Ljava/lang/String;
+#getPort()I
+#setTimeout(I)V
+#getTimeout()I
+#sendHeader(II)V
+#sendHeader()V
+#readFrame()Lcom/rabbitmq/client/impl/Frame;
+#writeFrame(Lcom/rabbitmq/client/impl/Frame;)V
+#close()V
@1.7.2
+#<init>(Ljava/net/Socket;)V
-#<init>(Ljavax/net/SocketFactory;Ljava/lang/String;I)V
@2.0.0
+#sendHeader(III)V
@2.4.1
+#getAddress()Ljava/net/InetAddress;
-#getHost()Ljava/lang/String;
@2.7.0
+#getInputStream()Ljava/io/DataInputStream;
@2.8.3
+#flush()V
@3.3.0
+#getLocalAddress()Ljava/net/InetAddress;
+#getLocalPort()I
@4.0.0
+#<init>(Ljava/net/Socket;Ljava/util/concurrent/ExecutorService;)V
+#initialize(Lcom/rabbitmq/client/impl/AMQConnection;)V

+###com/rabbitmq/client/impl/TruncatedInputStream
@1.3.0
+#<init>(Ljava/io/InputStream;J)V
+#available()I
+#mark(I)V
+#read()I
+#read([B)I
+#read([BII)I
+#reset()V
+#skip(J)J
@2.8.0
-#read([B)I

+###com/rabbitmq/client/impl/Version
@1.3.0
+#<init>(II)V
+#getMajor()I
+#getMinor()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#adjust()Lcom/rabbitmq/client/impl/Version;
+#checkVersion(Lcom/rabbitmq/client/impl/Version;Lcom/rabbitmq/client/impl/Version;)Z

+###com/rabbitmq/tools/Tracer$DirectionHandler
@1.3.0
+#<init>(Lcom/rabbitmq/tools/Tracer;Lcom/rabbitmq/utility/BlockingCell;ZLjava/io/DataInputStream;Ljava/io/DataOutputStream;)V
+#readFrame()Lcom/rabbitmq/client/impl/Frame;
+#report(ILjava/lang/Object;)V
+#reportFrame(Lcom/rabbitmq/client/impl/Frame;)V
+#doFrame()V
+#run()V
@2.6.0
-###com/rabbitmq/tools/Tracer$DirectionHandler

+###com/rabbitmq/tools/Tracer
@1.3.0
+#main([Ljava/lang/String;)V
+#<init>(Ljava/net/Socket;ILjava/lang/String;I)V
+#run()V
@1.7.2
+#<init>(Ljava/net/Socket;ILjava/lang/String;ILcom/rabbitmq/tools/Tracer$AsyncLogger;)V
+#log(Ljava/lang/String;)V
+#logException(Ljava/lang/Exception;)V
-#<init>(Ljava/net/Socket;ILjava/lang/String;I)V
@2.6.0
+#<init>(ILjava/lang/String;Ljava/lang/String;ILcom/rabbitmq/tools/Tracer$Logger;Ljava/util/Properties;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/util/Properties;)V
+#start()V
-#<init>(Ljava/net/Socket;ILjava/lang/String;ILcom/rabbitmq/tools/Tracer$AsyncLogger;)V
@4.0.0
-###com/rabbitmq/tools/Tracer

+###com/rabbitmq/tools/json/JSONReader
@1.3.0
+#<init>()V
+#read(Ljava/lang/String;)Ljava/lang/Object;

+###com/rabbitmq/tools/json/JSONSerializable
@1.3.0
+#jsonSerialize(Lcom/rabbitmq/tools/json/JSONWriter;)V

+###com/rabbitmq/tools/json/JSONUtil
@1.3.0
+#<init>()V
+#fill(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Object;
+#fill(Ljava/lang/Object;Ljava/util/Map;Z)Ljava/lang/Object;
+#tryFill(Ljava/lang/Object;Ljava/util/Map;)V

+###com/rabbitmq/tools/json/JSONWriter
@1.3.0
+#<init>()V
+#<init>(Z)V
+#getIndentMode()Z
+#setIndentMode(Z)V
+#write(Ljava/lang/Object;)Ljava/lang/String;
+#write(J)Ljava/lang/String;
+#write(D)Ljava/lang/Object;
+#write(C)Ljava/lang/String;
+#write(Z)Ljava/lang/String;
+#writeLimited(Ljava/lang/Class;Ljava/lang/Object;[Ljava/lang/String;)V

+###com/rabbitmq/tools/jsonrpc/JsonRpcClient
@1.3.0
+#<init>(Lcom/rabbitmq/client/Channel;ILjava/lang/String;Ljava/lang/String;)V
+#checkReply(Ljava/util/Map;)Ljava/lang/Object;
+#call(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
+#createProxy(Ljava/lang/Class;)Ljava/lang/Object;
+#coerce(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
+#call([Ljava/lang/String;)Ljava/lang/Object;
+#getServiceDescription()Lcom/rabbitmq/tools/jsonrpc/ServiceDescription;
+#retrieveServiceDescription()V
@1.5.4
+#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Ljava/lang/String;)V
-#<init>(Lcom/rabbitmq/client/Channel;ILjava/lang/String;Ljava/lang/String;)V
@2.6.0
+#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Ljava/lang/String;I)V
-#retrieveServiceDescription()V
@4.8.0
+#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Ljava/lang/String;ILcom/rabbitmq/tools/jsonrpc/JsonRpcMapper;)V
*#coerce(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;[deprecated]
*#call([Ljava/lang/String;)Ljava/lang/Object;[deprecated]
-#checkReply(Ljava/util/Map;)Ljava/lang/Object;
@5.0.0
+#checkReply(Ljava/util/Map;)Ljava/lang/Object;
-#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Ljava/lang/String;ILcom/rabbitmq/tools/jsonrpc/JsonRpcMapper;)V
@5.4.0
+#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Ljava/lang/String;ILcom/rabbitmq/tools/jsonrpc/JsonRpcMapper;)V
*#coerce(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;[deprecated]
*#call([Ljava/lang/String;)Ljava/lang/Object;[deprecated]
-#checkReply(Ljava/util/Map;)Ljava/lang/Object;
@5.6.0
+#<init>(Lcom/rabbitmq/client/RpcClientParams;Lcom/rabbitmq/tools/jsonrpc/JsonRpcMapper;)V

+###com/rabbitmq/tools/jsonrpc/JsonRpcException
@1.3.0
+#<init>()V
+#<init>(Ljava/util/Map;)V
@4.8.0
+#<init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/Object;)V
-#<init>(Ljava/util/Map;)V
@4.10.0
+#getName()Ljava/lang/String;
+#getCode()I
+#getMessage()Ljava/lang/String;
+#getError()Ljava/lang/Object;
@5.0.0
+#<init>(Ljava/util/Map;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/Object;)V
-#getName()Ljava/lang/String;
-#getCode()I
-#getMessage()Ljava/lang/String;
-#getError()Ljava/lang/Object;
@5.4.0
+#<init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/Object;)V
-#<init>(Ljava/util/Map;)V
@5.6.0
+#getName()Ljava/lang/String;
+#getCode()I
+#getMessage()Ljava/lang/String;
+#getError()Ljava/lang/Object;

+###com/rabbitmq/tools/jsonrpc/JsonRpcServer
@1.3.0
+#<init>(Lcom/rabbitmq/client/Channel;ILjava/lang/Class;Ljava/lang/Object;)V
+#<init>(Lcom/rabbitmq/client/Channel;ILjava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)V
+#handleStringCall(Ljava/lang/String;Lcom/rabbitmq/client/AMQP$BasicProperties;)Ljava/lang/String;
+#doCall(Ljava/lang/String;)Ljava/lang/String;
+#matchingMethod(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/reflect/Method;
+#errorResponse(Ljava/lang/Object;ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
+#resultResponse(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
+#response(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
+#getServiceDescription()Lcom/rabbitmq/tools/jsonrpc/ServiceDescription;
@1.5.4
+#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/Class;Ljava/lang/Object;)V
+#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)V
-#<init>(Lcom/rabbitmq/client/Channel;ILjava/lang/Class;Ljava/lang/Object;)V
-#<init>(Lcom/rabbitmq/client/Channel;ILjava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)V
@4.8.0
+#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/Class;Ljava/lang/Object;Lcom/rabbitmq/tools/jsonrpc/JsonRpcMapper;)V
+#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;Lcom/rabbitmq/tools/jsonrpc/JsonRpcMapper;)V
-#errorResponse(Ljava/lang/Object;ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
-#resultResponse(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
-#response(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
@5.0.0
+#errorResponse(Ljava/lang/Object;ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
+#resultResponse(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
+#response(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
-#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/Class;Ljava/lang/Object;Lcom/rabbitmq/tools/jsonrpc/JsonRpcMapper;)V
-#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;Lcom/rabbitmq/tools/jsonrpc/JsonRpcMapper;)V
@5.4.0
+#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/Class;Ljava/lang/Object;Lcom/rabbitmq/tools/jsonrpc/JsonRpcMapper;)V
+#<init>(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;Lcom/rabbitmq/tools/jsonrpc/JsonRpcMapper;)V
-#errorResponse(Ljava/lang/Object;ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
-#resultResponse(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
-#response(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;

+###com/rabbitmq/tools/jsonrpc/ParameterDescription
@1.3.0
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#<init>(ILjava/lang/Class;)V
+#lookup(Ljava/lang/Class;)Ljava/lang/String;
@4.10.0
+#getName()Ljava/lang/String;
+#getType()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#setType(Ljava/lang/String;)V
@5.0.0
-#getName()Ljava/lang/String;
-#getType()Ljava/lang/String;
-#setName(Ljava/lang/String;)V
-#setType(Ljava/lang/String;)V
@5.6.0
+#getName()Ljava/lang/String;
+#getType()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#setType(Ljava/lang/String;)V

+###com/rabbitmq/tools/jsonrpc/ProcedureDescription
@1.3.0
+#<init>(Ljava/util/Map;)V
+#<init>(Ljava/lang/reflect/Method;)V
+#<init>()V
+#getReturn()Ljava/lang/String;
+#setReturn(Ljava/lang/String;)V
+#internal_getMethod()Ljava/lang/reflect/Method;
+#internal_getParams()[Lcom/rabbitmq/tools/jsonrpc/ParameterDescription;
+#arity()I
+#getParams()[Lcom/rabbitmq/tools/jsonrpc/ParameterDescription;
@4.8.0
+#getJavaReturnType()Ljava/lang/String;
+#setJavaReturnType(Ljava/lang/String;)V
+#getReturnType()Ljava/lang/Class;
@4.10.0
+#getName()Ljava/lang/String;
+#getSummary()Ljava/lang/String;
+#getHelp()Ljava/lang/String;
+#isIdempotent()Z
+#setName(Ljava/lang/String;)V
+#setSummary(Ljava/lang/String;)V
+#setHelp(Ljava/lang/String;)V
+#setIdempotent(Z)V
@5.0.0
-#getJavaReturnType()Ljava/lang/String;
-#setJavaReturnType(Ljava/lang/String;)V
-#getReturnType()Ljava/lang/Class;
-#getName()Ljava/lang/String;
-#getSummary()Ljava/lang/String;
-#getHelp()Ljava/lang/String;
-#isIdempotent()Z
-#setName(Ljava/lang/String;)V
-#setSummary(Ljava/lang/String;)V
-#setHelp(Ljava/lang/String;)V
-#setIdempotent(Z)V
@5.4.0
+#getJavaReturnType()Ljava/lang/String;
+#setJavaReturnType(Ljava/lang/String;)V
+#getReturnType()Ljava/lang/Class;
@5.6.0
+#getName()Ljava/lang/String;
+#getSummary()Ljava/lang/String;
+#getHelp()Ljava/lang/String;
+#isIdempotent()Z
+#setName(Ljava/lang/String;)V
+#setSummary(Ljava/lang/String;)V
+#setHelp(Ljava/lang/String;)V
+#setIdempotent(Z)V

+###com/rabbitmq/tools/jsonrpc/ServiceDescription
@1.3.0
+#<init>(Ljava/util/Map;)V
+#<init>(Ljava/lang/Class;)V
+#<init>()V
+#getProcs()Ljava/util/Collection;
+#setProcs(Ljava/util/Collection;)V
+#getProcedure(Ljava/lang/String;I)Lcom/rabbitmq/tools/jsonrpc/ProcedureDescription;
@4.10.0
+#getName()Ljava/lang/String;
+#getId()Ljava/lang/String;
+#getVersion()Ljava/lang/String;
+#getSummary()Ljava/lang/String;
+#getHelp()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#setId(Ljava/lang/String;)V
+#setVersion(Ljava/lang/String;)V
+#setSummary(Ljava/lang/String;)V
+#setHelp(Ljava/lang/String;)V
@5.0.0
-#getName()Ljava/lang/String;
-#getId()Ljava/lang/String;
-#getVersion()Ljava/lang/String;
-#getSummary()Ljava/lang/String;
-#getHelp()Ljava/lang/String;
-#setName(Ljava/lang/String;)V
-#setId(Ljava/lang/String;)V
-#setVersion(Ljava/lang/String;)V
-#setSummary(Ljava/lang/String;)V
-#setHelp(Ljava/lang/String;)V
@5.6.0
+#getName()Ljava/lang/String;
+#getId()Ljava/lang/String;
+#getVersion()Ljava/lang/String;
+#getSummary()Ljava/lang/String;
+#getHelp()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#setId(Ljava/lang/String;)V
+#setVersion(Ljava/lang/String;)V
+#setSummary(Ljava/lang/String;)V
+#setHelp(Ljava/lang/String;)V

+###com/rabbitmq/utility/BlockingCell
@1.3.0
+#<init>()V
+#get()Ljava/lang/Object;
+#uninterruptibleGet()Ljava/lang/Object;
+#set(Ljava/lang/Object;)V
+#setIfUnset(Ljava/lang/Object;)Z
@1.5.4
+#get(J)Ljava/lang/Object;
+#uninterruptibleGet(I)Ljava/lang/Object;

+###com/rabbitmq/utility/BlockingValueOrException
@1.3.0
+#<init>()V
+#setValue(Ljava/lang/Object;)V
+#setException(Ljava/lang/Throwable;)V
+#uninterruptibleGetValue()Ljava/lang/Object;
@1.5.4
+#uninterruptibleGetValue(I)Ljava/lang/Object;

+###com/rabbitmq/utility/SingleShotLinearTimer
@1.3.0
+#<init>()V
+#schedule(Ljava/lang/Runnable;I)V
+#cancel()V
@5.0.0
-###com/rabbitmq/utility/SingleShotLinearTimer

+###com/rabbitmq/utility/Utility
@1.3.0
+#<init>()V
+#makeStackTrace(Ljava/lang/Throwable;)Ljava/lang/String;
+#use(Ljava/lang/Object;)V
+#emptyStatement()V
@1.7.2
+#fixStackTrace(Ljava/lang/Throwable;)Ljava/lang/Throwable;
@2.8.0
-#use(Ljava/lang/Object;)V
-#emptyStatement()V
@3.6.6
+#copy(Ljava/util/List;)Ljava/util/List;
+#copy(Ljava/util/Map;)Ljava/util/Map;
@5.11.0
+#copy(Ljava/util/Set;)Ljava/util/Set;

+###com/rabbitmq/utility/ValueOrException
@1.3.0
+#makeValue(Ljava/lang/Object;)Lcom/rabbitmq/utility/ValueOrException;
+#makeException(Ljava/lang/Throwable;)Lcom/rabbitmq/utility/ValueOrException;
+#getValue()Ljava/lang/Object;

+###com/rabbitmq/client/impl/AMQImpl$Basic$RecoverAsync
@1.8.1
+#getRequeue()Z
+#<init>(Z)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/recovery/RecoveryAwareChannelManager
@3.3.0
+#<init>(Lcom/rabbitmq/client/impl/ConsumerWorkService;I)V
@3.5.1
+#<init>(Lcom/rabbitmq/client/impl/ConsumerWorkService;ILjava/util/concurrent/ThreadFactory;)V
@4.0.0
+#<init>(Lcom/rabbitmq/client/impl/ConsumerWorkService;ILjava/util/concurrent/ThreadFactory;Lcom/rabbitmq/client/MetricsCollector;)V

+###com/rabbitmq/client/impl/nio/FrameWriteRequest
@4.0.0
+#<init>(Lcom/rabbitmq/client/impl/Frame;)V
+#handle(Ljava/io/DataOutputStream;)V

+###com/rabbitmq/client/impl/CRDemoMechanism$CRDemoSaslConfig
@2.4.1
+#<init>()V
+#getSaslMechanism([Ljava/lang/String;)Lcom/rabbitmq/client/SaslMechanism;

+###com/rabbitmq/client/AMQP$Connection$Unblocked
@3.2.0

+###com/rabbitmq/client/AMQP$Exchange$Bind
@2.1.1
+#getTicket()I
+#getDestination()Ljava/lang/String;
+#getSource()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#getNowait()Z
+#getArguments()Ljava/util/Map;

+###com/rabbitmq/client/AMQP$Exchange$Unbind$Builder
@2.5.0
+#<init>()V
+#ticket(I)Lcom/rabbitmq/client/AMQP$Exchange$Unbind$Builder;
+#destination(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$Unbind$Builder;
+#source(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$Unbind$Builder;
+#routingKey(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$Unbind$Builder;
+#nowait(Z)Lcom/rabbitmq/client/AMQP$Exchange$Unbind$Builder;
+#nowait()Lcom/rabbitmq/client/AMQP$Exchange$Unbind$Builder;
+#arguments(Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$Unbind$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Exchange$Unbind;

+###com/rabbitmq/client/AMQP$Exchange$Unbind
@2.1.1
+#getTicket()I
+#getDestination()Ljava/lang/String;
+#getSource()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#getNowait()Z
+#getArguments()Ljava/util/Map;

+###com/rabbitmq/client/AMQP$Exchange$UnbindOk$Builder
@2.5.0
+#<init>()V
+#build()Lcom/rabbitmq/client/AMQP$Exchange$UnbindOk;

+###com/rabbitmq/client/AMQP$Exchange$UnbindOk
@2.1.1

+###com/rabbitmq/client/AMQP$Queue$Declare$Builder
@2.5.0
+#<init>()V
+#ticket(I)Lcom/rabbitmq/client/AMQP$Queue$Declare$Builder;
+#queue(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$Declare$Builder;
+#passive(Z)Lcom/rabbitmq/client/AMQP$Queue$Declare$Builder;
+#passive()Lcom/rabbitmq/client/AMQP$Queue$Declare$Builder;
+#durable(Z)Lcom/rabbitmq/client/AMQP$Queue$Declare$Builder;
+#durable()Lcom/rabbitmq/client/AMQP$Queue$Declare$Builder;
+#exclusive(Z)Lcom/rabbitmq/client/AMQP$Queue$Declare$Builder;
+#exclusive()Lcom/rabbitmq/client/AMQP$Queue$Declare$Builder;
+#autoDelete(Z)Lcom/rabbitmq/client/AMQP$Queue$Declare$Builder;
+#autoDelete()Lcom/rabbitmq/client/AMQP$Queue$Declare$Builder;
+#nowait(Z)Lcom/rabbitmq/client/AMQP$Queue$Declare$Builder;
+#nowait()Lcom/rabbitmq/client/AMQP$Queue$Declare$Builder;
+#arguments(Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$Declare$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Queue$Declare;

+###com/rabbitmq/client/AMQP$Queue$DeclareOk$Builder
@2.5.0
+#<init>()V
+#queue(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk$Builder;
+#messageCount(I)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk$Builder;
+#consumerCount(I)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;

+###com/rabbitmq/client/AMQP$Queue$Bind$Builder
@2.5.0
+#<init>()V
+#ticket(I)Lcom/rabbitmq/client/AMQP$Queue$Bind$Builder;
+#queue(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$Bind$Builder;
+#exchange(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$Bind$Builder;
+#routingKey(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$Bind$Builder;
+#nowait(Z)Lcom/rabbitmq/client/AMQP$Queue$Bind$Builder;
+#nowait()Lcom/rabbitmq/client/AMQP$Queue$Bind$Builder;
+#arguments(Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$Bind$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Queue$Bind;

+###com/rabbitmq/client/AMQP$Queue$BindOk$Builder
@2.5.0
+#<init>()V
+#build()Lcom/rabbitmq/client/AMQP$Queue$BindOk;

+###com/rabbitmq/client/AMQP$Queue$Purge$Builder
@2.5.0
+#<init>()V
+#ticket(I)Lcom/rabbitmq/client/AMQP$Queue$Purge$Builder;
+#queue(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$Purge$Builder;
+#nowait(Z)Lcom/rabbitmq/client/AMQP$Queue$Purge$Builder;
+#nowait()Lcom/rabbitmq/client/AMQP$Queue$Purge$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Queue$Purge;

+###com/rabbitmq/client/AMQP$Queue$PurgeOk$Builder
@2.5.0
+#<init>()V
+#messageCount(I)Lcom/rabbitmq/client/AMQP$Queue$PurgeOk$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Queue$PurgeOk;

+###com/rabbitmq/client/AMQP$Queue$Delete$Builder
@2.5.0
+#<init>()V
+#ticket(I)Lcom/rabbitmq/client/AMQP$Queue$Delete$Builder;
+#queue(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$Delete$Builder;
+#ifUnused(Z)Lcom/rabbitmq/client/AMQP$Queue$Delete$Builder;
+#ifUnused()Lcom/rabbitmq/client/AMQP$Queue$Delete$Builder;
+#ifEmpty(Z)Lcom/rabbitmq/client/AMQP$Queue$Delete$Builder;
+#ifEmpty()Lcom/rabbitmq/client/AMQP$Queue$Delete$Builder;
+#nowait(Z)Lcom/rabbitmq/client/AMQP$Queue$Delete$Builder;
+#nowait()Lcom/rabbitmq/client/AMQP$Queue$Delete$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Queue$Delete;

+###com/rabbitmq/client/AMQP$Queue$DeleteOk$Builder
@2.5.0
+#<init>()V
+#messageCount(I)Lcom/rabbitmq/client/AMQP$Queue$DeleteOk$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Queue$DeleteOk;

+###com/rabbitmq/client/AMQP$Queue$UnbindOk$Builder
@2.5.0
+#<init>()V
+#build()Lcom/rabbitmq/client/AMQP$Queue$UnbindOk;

+###com/rabbitmq/client/AMQP$Basic$Qos$Builder
@2.5.0
+#<init>()V
+#prefetchSize(I)Lcom/rabbitmq/client/AMQP$Basic$Qos$Builder;
+#prefetchCount(I)Lcom/rabbitmq/client/AMQP$Basic$Qos$Builder;
+#global(Z)Lcom/rabbitmq/client/AMQP$Basic$Qos$Builder;
+#global()Lcom/rabbitmq/client/AMQP$Basic$Qos$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Basic$Qos;

+###com/rabbitmq/client/AMQP$Basic$QosOk$Builder
@2.5.0
+#<init>()V
+#build()Lcom/rabbitmq/client/AMQP$Basic$QosOk;

+###com/rabbitmq/client/AMQP$Basic$Consume$Builder
@2.5.0
+#<init>()V
+#ticket(I)Lcom/rabbitmq/client/AMQP$Basic$Consume$Builder;
+#queue(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Basic$Consume$Builder;
+#consumerTag(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Basic$Consume$Builder;
+#noLocal(Z)Lcom/rabbitmq/client/AMQP$Basic$Consume$Builder;
+#noLocal()Lcom/rabbitmq/client/AMQP$Basic$Consume$Builder;
+#noAck(Z)Lcom/rabbitmq/client/AMQP$Basic$Consume$Builder;
+#noAck()Lcom/rabbitmq/client/AMQP$Basic$Consume$Builder;
+#exclusive(Z)Lcom/rabbitmq/client/AMQP$Basic$Consume$Builder;
+#exclusive()Lcom/rabbitmq/client/AMQP$Basic$Consume$Builder;
+#nowait(Z)Lcom/rabbitmq/client/AMQP$Basic$Consume$Builder;
+#nowait()Lcom/rabbitmq/client/AMQP$Basic$Consume$Builder;
+#arguments(Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Basic$Consume$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Basic$Consume;

+###com/rabbitmq/client/AMQP$Basic$ConsumeOk$Builder
@2.5.0
+#<init>()V
+#consumerTag(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Basic$ConsumeOk$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Basic$ConsumeOk;

+###com/rabbitmq/client/AMQP$Basic$Cancel$Builder
@2.5.0
+#<init>()V
+#consumerTag(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Basic$Cancel$Builder;
+#nowait(Z)Lcom/rabbitmq/client/AMQP$Basic$Cancel$Builder;
+#nowait()Lcom/rabbitmq/client/AMQP$Basic$Cancel$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Basic$Cancel;

+###com/rabbitmq/client/AMQP$Basic$CancelOk$Builder
@2.5.0
+#<init>()V
+#consumerTag(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Basic$CancelOk$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Basic$CancelOk;

+###com/rabbitmq/client/AMQP$Basic$Publish$Builder
@2.5.0
+#<init>()V
+#ticket(I)Lcom/rabbitmq/client/AMQP$Basic$Publish$Builder;
+#exchange(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Basic$Publish$Builder;
+#routingKey(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Basic$Publish$Builder;
+#mandatory(Z)Lcom/rabbitmq/client/AMQP$Basic$Publish$Builder;
+#mandatory()Lcom/rabbitmq/client/AMQP$Basic$Publish$Builder;
+#immediate(Z)Lcom/rabbitmq/client/AMQP$Basic$Publish$Builder;
+#immediate()Lcom/rabbitmq/client/AMQP$Basic$Publish$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Basic$Publish;

+###com/rabbitmq/client/AMQP$Basic$Return$Builder
@2.5.0
+#<init>()V
+#replyCode(I)Lcom/rabbitmq/client/AMQP$Basic$Return$Builder;
+#replyText(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Basic$Return$Builder;
+#exchange(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Basic$Return$Builder;
+#routingKey(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Basic$Return$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Basic$Return;

+###com/rabbitmq/client/AMQP$Basic$Deliver$Builder
@2.5.0
+#<init>()V
+#consumerTag(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Basic$Deliver$Builder;
+#deliveryTag(J)Lcom/rabbitmq/client/AMQP$Basic$Deliver$Builder;
+#redelivered(Z)Lcom/rabbitmq/client/AMQP$Basic$Deliver$Builder;
+#redelivered()Lcom/rabbitmq/client/AMQP$Basic$Deliver$Builder;
+#exchange(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Basic$Deliver$Builder;
+#routingKey(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Basic$Deliver$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Basic$Deliver;

+###com/rabbitmq/client/AMQP$Basic$Get$Builder
@2.5.0
+#<init>()V
+#ticket(I)Lcom/rabbitmq/client/AMQP$Basic$Get$Builder;
+#queue(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Basic$Get$Builder;
+#noAck(Z)Lcom/rabbitmq/client/AMQP$Basic$Get$Builder;
+#noAck()Lcom/rabbitmq/client/AMQP$Basic$Get$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Basic$Get;

+###com/rabbitmq/client/AMQP$Basic$GetOk$Builder
@2.5.0
+#<init>()V
+#deliveryTag(J)Lcom/rabbitmq/client/AMQP$Basic$GetOk$Builder;
+#redelivered(Z)Lcom/rabbitmq/client/AMQP$Basic$GetOk$Builder;
+#redelivered()Lcom/rabbitmq/client/AMQP$Basic$GetOk$Builder;
+#exchange(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Basic$GetOk$Builder;
+#routingKey(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Basic$GetOk$Builder;
+#messageCount(I)Lcom/rabbitmq/client/AMQP$Basic$GetOk$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Basic$GetOk;

+###com/rabbitmq/client/AMQP$Basic$GetEmpty$Builder
@2.5.0
+#<init>()V
+#clusterId(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Basic$GetEmpty$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Basic$GetEmpty;

+###com/rabbitmq/client/AMQP$Basic$Ack$Builder
@2.5.0
+#<init>()V
+#deliveryTag(J)Lcom/rabbitmq/client/AMQP$Basic$Ack$Builder;
+#multiple(Z)Lcom/rabbitmq/client/AMQP$Basic$Ack$Builder;
+#multiple()Lcom/rabbitmq/client/AMQP$Basic$Ack$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Basic$Ack;

+###com/rabbitmq/client/AMQP$Basic$Reject$Builder
@2.5.0
+#<init>()V
+#deliveryTag(J)Lcom/rabbitmq/client/AMQP$Basic$Reject$Builder;
+#requeue(Z)Lcom/rabbitmq/client/AMQP$Basic$Reject$Builder;
+#requeue()Lcom/rabbitmq/client/AMQP$Basic$Reject$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Basic$Reject;

+###com/rabbitmq/client/AMQP$Basic$RecoverAsync$Builder
@2.5.0
+#<init>()V
+#requeue(Z)Lcom/rabbitmq/client/AMQP$Basic$RecoverAsync$Builder;
+#requeue()Lcom/rabbitmq/client/AMQP$Basic$RecoverAsync$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Basic$RecoverAsync;

+###com/rabbitmq/client/AMQP$Basic$RecoverAsync
@1.8.1
+#getRequeue()Z

+###com/rabbitmq/client/AMQP$Basic$Recover$Builder
@2.5.0
+#<init>()V
+#requeue(Z)Lcom/rabbitmq/client/AMQP$Basic$Recover$Builder;
+#requeue()Lcom/rabbitmq/client/AMQP$Basic$Recover$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Basic$Recover;

+###com/rabbitmq/client/AMQP$Basic$RecoverOk$Builder
@2.5.0
+#<init>()V
+#build()Lcom/rabbitmq/client/AMQP$Basic$RecoverOk;

+###com/rabbitmq/client/AMQP$Basic$RecoverOk
@1.8.1

+###com/rabbitmq/client/AMQP$Basic$Nack$Builder
@2.5.0
+#<init>()V
+#deliveryTag(J)Lcom/rabbitmq/client/AMQP$Basic$Nack$Builder;
+#multiple(Z)Lcom/rabbitmq/client/AMQP$Basic$Nack$Builder;
+#multiple()Lcom/rabbitmq/client/AMQP$Basic$Nack$Builder;
+#requeue(Z)Lcom/rabbitmq/client/AMQP$Basic$Nack$Builder;
+#requeue()Lcom/rabbitmq/client/AMQP$Basic$Nack$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Basic$Nack;

+###com/rabbitmq/client/AMQP$Basic$Nack
@2.3.0
+#getDeliveryTag()J
+#getMultiple()Z
+#getRequeue()Z

+###com/rabbitmq/client/AMQP$Tx$Select$Builder
@2.5.0
+#<init>()V
+#build()Lcom/rabbitmq/client/AMQP$Tx$Select;

+###com/rabbitmq/client/AMQP$Tx$SelectOk$Builder
@2.5.0
+#<init>()V
+#build()Lcom/rabbitmq/client/AMQP$Tx$SelectOk;

+###com/rabbitmq/client/AMQP$Tx$RollbackOk$Builder
@2.5.0
+#<init>()V
+#build()Lcom/rabbitmq/client/AMQP$Tx$RollbackOk;

+###com/rabbitmq/client/AMQP$Confirm$Select$Builder
@2.5.0
+#<init>()V
+#nowait(Z)Lcom/rabbitmq/client/AMQP$Confirm$Select$Builder;
+#nowait()Lcom/rabbitmq/client/AMQP$Confirm$Select$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Confirm$Select;

+###com/rabbitmq/client/DeliverCallback
@5.0.0
+#handle(Ljava/lang/String;Lcom/rabbitmq/client/Delivery;)V

+###com/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryOperation
@4.8.0
+#<init>()V
+#call(Lcom/rabbitmq/client/impl/recovery/RetryContext;)Ljava/lang/Object;
+#andThen(Lcom/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryOperation;)Lcom/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryOperation;
@5.0.0
-###com/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryOperation

+###com/rabbitmq/client/impl/ConnectionParams
@3.3.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/util/Map;IIILcom/rabbitmq/client/SaslConfig;IZLcom/rabbitmq/client/ExceptionHandler;Ljava/util/concurrent/ThreadFactory;)V
+#getUsername()Ljava/lang/String;
+#getPassword()Ljava/lang/String;
+#getExecutor()Ljava/util/concurrent/ExecutorService;
+#getVirtualHost()Ljava/lang/String;
+#getClientProperties()Ljava/util/Map;
+#getRequestedFrameMax()I
+#getRequestedChannelMax()I
+#getRequestedHeartbeat()I
+#getSaslConfig()Lcom/rabbitmq/client/SaslConfig;
+#getExceptionHandler()Lcom/rabbitmq/client/ExceptionHandler;
+#getNetworkRecoveryInterval()I
+#isTopologyRecoveryEnabled()Z
+#getThreadFactory()Ljava/util/concurrent/ThreadFactory;
@3.4.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/util/Map;IIIILcom/rabbitmq/client/SaslConfig;JZLcom/rabbitmq/client/ExceptionHandler;Ljava/util/concurrent/ThreadFactory;)V
+#getShutdownTimeout()I
+#getNetworkRecoveryInterval()J
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/util/Map;IIILcom/rabbitmq/client/SaslConfig;IZLcom/rabbitmq/client/ExceptionHandler;Ljava/util/concurrent/ThreadFactory;)V
-#getNetworkRecoveryInterval()I
@3.5.5
+#getHandshakeTimeout()I
+#setHandshakeTimeout(I)V
@3.6.0
+#<init>()V
+#getConsumerWorkServiceExecutor()Ljava/util/concurrent/ExecutorService;
+#setUsername(Ljava/lang/String;)V
+#setPassword(Ljava/lang/String;)V
+#setConsumerWorkServiceExecutor(Ljava/util/concurrent/ExecutorService;)V
+#setVirtualHost(Ljava/lang/String;)V
+#setClientProperties(Ljava/util/Map;)V
+#setRequestedFrameMax(I)V
+#setRequestedChannelMax(I)V
+#setRequestedHeartbeat(I)V
+#setShutdownTimeout(I)V
+#setSaslConfig(Lcom/rabbitmq/client/SaslConfig;)V
+#setNetworkRecoveryInterval(J)V
+#setTopologyRecovery(Z)V
+#setExceptionHandler(Lcom/rabbitmq/client/ExceptionHandler;)V
+#setThreadFactory(Ljava/util/concurrent/ThreadFactory;)V
+#getShutdownExecutor()Ljava/util/concurrent/ExecutorService;
+#setShutdownExecutor(Ljava/util/concurrent/ExecutorService;)V
+#getHeartbeatExecutor()Ljava/util/concurrent/ScheduledExecutorService;
+#setHeartbeatExecutor(Ljava/util/concurrent/ScheduledExecutorService;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/util/Map;IIIILcom/rabbitmq/client/SaslConfig;JZLcom/rabbitmq/client/ExceptionHandler;Ljava/util/concurrent/ThreadFactory;)V
-#getExecutor()Ljava/util/concurrent/ExecutorService;
@4.1.0
+#getChannelRpcTimeout()I
+#setChannelRpcTimeout(I)V
@4.2.0
+#channelShouldCheckRpcResponseType()Z
+#setChannelShouldCheckRpcResponseType(Z)V
@4.3.0
+#getRecoveryDelayHandler()Lcom/rabbitmq/client/RecoveryDelayHandler;
+#setRecoveryDelayHandler(Lcom/rabbitmq/client/RecoveryDelayHandler;)V
@4.5.0
+#getCredentialsProvider()Lcom/rabbitmq/client/impl/CredentialsProvider;
+#setCredentialsProvider(Lcom/rabbitmq/client/impl/CredentialsProvider;)V
+#setErrorOnWriteListener(Lcom/rabbitmq/client/impl/ErrorOnWriteListener;)V
+#getErrorOnWriteListener()Lcom/rabbitmq/client/impl/ErrorOnWriteListener;
+#setWorkPoolTimeout(I)V
+#getWorkPoolTimeout()I
-#getUsername()Ljava/lang/String;
-#getPassword()Ljava/lang/String;
-#setUsername(Ljava/lang/String;)V
-#setPassword(Ljava/lang/String;)V
@4.7.0
+#getTopologyRecoveryExecutor()Ljava/util/concurrent/ExecutorService;
+#setTopologyRecoveryExecutor(Ljava/util/concurrent/ExecutorService;)V
@4.8.0
+#setTopologyRecoveryFilter(Lcom/rabbitmq/client/impl/recovery/TopologyRecoveryFilter;)V
+#getTopologyRecoveryFilter()Lcom/rabbitmq/client/impl/recovery/TopologyRecoveryFilter;
+#setTopologyRecoveryRetryHandler(Lcom/rabbitmq/client/impl/recovery/RetryHandler;)V
+#getTopologyRecoveryRetryHandler()Lcom/rabbitmq/client/impl/recovery/RetryHandler;
@4.9.0
+#setTrafficListener(Lcom/rabbitmq/client/TrafficListener;)V
+#getTrafficListener()Lcom/rabbitmq/client/TrafficListener;
@5.0.0
+#getUsername()Ljava/lang/String;
+#getPassword()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#setPassword(Ljava/lang/String;)V
-#getCredentialsProvider()Lcom/rabbitmq/client/impl/CredentialsProvider;
-#getRecoveryDelayHandler()Lcom/rabbitmq/client/RecoveryDelayHandler;
-#getTopologyRecoveryExecutor()Ljava/util/concurrent/ExecutorService;
-#setCredentialsProvider(Lcom/rabbitmq/client/impl/CredentialsProvider;)V
-#setRecoveryDelayHandler(Lcom/rabbitmq/client/RecoveryDelayHandler;)V
-#setTopologyRecoveryExecutor(Ljava/util/concurrent/ExecutorService;)V
-#setErrorOnWriteListener(Lcom/rabbitmq/client/impl/ErrorOnWriteListener;)V
-#getErrorOnWriteListener()Lcom/rabbitmq/client/impl/ErrorOnWriteListener;
-#setWorkPoolTimeout(I)V
-#getWorkPoolTimeout()I
-#setTopologyRecoveryFilter(Lcom/rabbitmq/client/impl/recovery/TopologyRecoveryFilter;)V
-#getTopologyRecoveryFilter()Lcom/rabbitmq/client/impl/recovery/TopologyRecoveryFilter;
-#setTopologyRecoveryRetryHandler(Lcom/rabbitmq/client/impl/recovery/RetryHandler;)V
-#getTopologyRecoveryRetryHandler()Lcom/rabbitmq/client/impl/recovery/RetryHandler;
-#setTrafficListener(Lcom/rabbitmq/client/TrafficListener;)V
-#getTrafficListener()Lcom/rabbitmq/client/TrafficListener;
@5.1.0
+#getRecoveryDelayHandler()Lcom/rabbitmq/client/RecoveryDelayHandler;
+#setRecoveryDelayHandler(Lcom/rabbitmq/client/RecoveryDelayHandler;)V
@5.2.0
+#getCredentialsProvider()Lcom/rabbitmq/client/impl/CredentialsProvider;
+#setCredentialsProvider(Lcom/rabbitmq/client/impl/CredentialsProvider;)V
+#setErrorOnWriteListener(Lcom/rabbitmq/client/impl/ErrorOnWriteListener;)V
+#getErrorOnWriteListener()Lcom/rabbitmq/client/impl/ErrorOnWriteListener;
+#setWorkPoolTimeout(I)V
+#getWorkPoolTimeout()I
-#getUsername()Ljava/lang/String;
-#getPassword()Ljava/lang/String;
-#setUsername(Ljava/lang/String;)V
-#setPassword(Ljava/lang/String;)V
@5.3.0
+#getTopologyRecoveryExecutor()Ljava/util/concurrent/ExecutorService;
+#setTopologyRecoveryExecutor(Ljava/util/concurrent/ExecutorService;)V
@5.4.0
+#setTopologyRecoveryFilter(Lcom/rabbitmq/client/impl/recovery/TopologyRecoveryFilter;)V
+#getTopologyRecoveryFilter()Lcom/rabbitmq/client/impl/recovery/TopologyRecoveryFilter;
+#setConnectionRecoveryTriggeringCondition(Ljava/util/function/Predicate;)V
+#getConnectionRecoveryTriggeringCondition()Ljava/util/function/Predicate;
+#setTopologyRecoveryRetryHandler(Lcom/rabbitmq/client/impl/recovery/RetryHandler;)V
+#getTopologyRecoveryRetryHandler()Lcom/rabbitmq/client/impl/recovery/RetryHandler;
@5.5.0
+#setTrafficListener(Lcom/rabbitmq/client/TrafficListener;)V
+#getTrafficListener()Lcom/rabbitmq/client/TrafficListener;
@5.8.0
+#setCredentialsRefreshService(Lcom/rabbitmq/client/impl/CredentialsRefreshService;)V
+#getCredentialsRefreshService()Lcom/rabbitmq/client/impl/CredentialsRefreshService;
@5.13.0
+#setRecoveredQueueNameSupplier(Lcom/rabbitmq/client/impl/recovery/RecoveredQueueNameSupplier;)V
+#getRecoveredQueueNameSupplier()Lcom/rabbitmq/client/impl/recovery/RecoveredQueueNameSupplier;

+###com/rabbitmq/client/impl/nio/SslEngineByteBufferOutputStream
@4.0.0
+#<init>(Ljavax/net/ssl/SSLEngine;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/channels/WritableByteChannel;)V
+#write(I)V
+#flush()V

+###com/rabbitmq/client/impl/CRDemoMechanism
@2.4.1
+#<init>()V
+#getName()Ljava/lang/String;
+#handleChallenge(Lcom/rabbitmq/client/impl/LongString;Lcom/rabbitmq/client/ConnectionFactory;)Lcom/rabbitmq/client/impl/LongString;
@2.6.0
+#handleChallenge(Lcom/rabbitmq/client/LongString;Lcom/rabbitmq/client/ConnectionFactory;)Lcom/rabbitmq/client/LongString;
-#handleChallenge(Lcom/rabbitmq/client/impl/LongString;Lcom/rabbitmq/client/ConnectionFactory;)Lcom/rabbitmq/client/impl/LongString;
@2.7.0
+#handleChallenge(Lcom/rabbitmq/client/LongString;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/LongString;
-#handleChallenge(Lcom/rabbitmq/client/LongString;Lcom/rabbitmq/client/ConnectionFactory;)Lcom/rabbitmq/client/LongString;

+###com/rabbitmq/client/AMQP$Exchange$DeclareOk$Builder
@2.5.0
+#<init>()V
+#build()Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;

+###com/rabbitmq/client/AMQP$Queue$Unbind$Builder
@2.5.0
+#<init>()V
+#ticket(I)Lcom/rabbitmq/client/AMQP$Queue$Unbind$Builder;
+#queue(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$Unbind$Builder;
+#exchange(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$Unbind$Builder;
+#routingKey(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$Unbind$Builder;
+#arguments(Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$Unbind$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Queue$Unbind;

+###com/rabbitmq/client/ChannelContinuationTimeoutException
@4.1.0
+#<init>(Ljava/util/concurrent/TimeoutException;Ljava/lang/Object;ILcom/rabbitmq/client/Method;)V
+#getMethod()Lcom/rabbitmq/client/Method;
+#getChannel()Ljava/lang/Object;
+#getChannelNumber()I

+###com/rabbitmq/client/ExceptionHandler
@3.3.0
+#handleUnexpectedConnectionDriverException(Lcom/rabbitmq/client/Connection;Ljava/lang/Throwable;)V
+#handleReturnListenerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
+#handleFlowListenerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
+#handleConfirmListenerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
+#handleBlockedListenerException(Lcom/rabbitmq/client/Connection;Ljava/lang/Throwable;)V
+#handleConsumerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;Lcom/rabbitmq/client/Consumer;Ljava/lang/String;Ljava/lang/String;)V
+#handleConnectionRecoveryException(Lcom/rabbitmq/client/Connection;Ljava/lang/Throwable;)V
+#handleChannelRecoveryException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
+#handleTopologyRecoveryException(Lcom/rabbitmq/client/Connection;Lcom/rabbitmq/client/Channel;Lcom/rabbitmq/client/TopologyRecoveryException;)V
@5.0.0
-#handleFlowListenerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V

+###com/rabbitmq/client/SaslConfig
@2.3.0
+#getSaslClient([Ljava/lang/String;)Ljavax/security/sasl/SaslClient;
@2.4.1
+#getSaslMechanism([Ljava/lang/String;)Lcom/rabbitmq/client/SaslMechanism;
-#getSaslClient([Ljava/lang/String;)Ljavax/security/sasl/SaslClient;

+###com/rabbitmq/client/ConfirmCallback
@5.0.0
+#handle(JZ)V

+###com/rabbitmq/client/AddressResolver
@3.6.6
+#getAddresses()Ljava/util/List;
@5.13.0
+#maybeShuffle(Ljava/util/List;)Ljava/util/List;

+###com/rabbitmq/client/SocketConfigurator
@3.3.0
+#configure(Ljava/net/Socket;)V
@5.4.0
+#andThen(Lcom/rabbitmq/client/SocketConfigurator;)Lcom/rabbitmq/client/SocketConfigurator;

+###com/rabbitmq/client/NoOpMetricsCollector
@4.0.0
+#<init>()V
+#newConnection(Lcom/rabbitmq/client/Connection;)V
+#closeConnection(Lcom/rabbitmq/client/Connection;)V
+#newChannel(Lcom/rabbitmq/client/Channel;)V
+#closeChannel(Lcom/rabbitmq/client/Channel;)V
+#basicAck(Lcom/rabbitmq/client/Channel;JZ)V
+#basicNack(Lcom/rabbitmq/client/Channel;J)V
+#basicReject(Lcom/rabbitmq/client/Channel;J)V
+#basicConsume(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Z)V
+#basicCancel(Lcom/rabbitmq/client/Channel;Ljava/lang/String;)V
+#basicPublish(Lcom/rabbitmq/client/Channel;)V
+#consumedMessage(Lcom/rabbitmq/client/Channel;JZ)V
+#consumedMessage(Lcom/rabbitmq/client/Channel;JLjava/lang/String;)V
@5.4.0
+#basicPublishFailure(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
+#basicPublishAck(Lcom/rabbitmq/client/Channel;JZ)V
+#basicPublishNack(Lcom/rabbitmq/client/Channel;JZ)V
+#basicPublishUnrouted(Lcom/rabbitmq/client/Channel;)V

+###com/rabbitmq/client/PossibleAuthenticationFailureException
@2.2.0
+#<init>(Ljava/lang/Throwable;)V
@3.2.0
+#<init>(Ljava/lang/String;)V

+###com/rabbitmq/client/JDKSaslConfig
@2.4.1
+#<init>(Lcom/rabbitmq/client/ConnectionFactory;)V
+#<init>(Lcom/rabbitmq/client/ConnectionFactory;[Ljava/lang/String;)V
+#getSaslMechanism([Ljava/lang/String;)Lcom/rabbitmq/client/SaslMechanism;

+###com/rabbitmq/tools/jsonrpc/JsonRpcMapper$JsonRpcRequest
@4.8.0
+#<init>(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V
+#getId()Ljava/lang/Object;
+#getVersion()Ljava/lang/String;
+#getMethod()Ljava/lang/String;
+#getParameters()[Ljava/lang/Object;
+#isSystem()Z
+#isSystemDescribe()Z
@5.0.0
-###com/rabbitmq/tools/jsonrpc/JsonRpcMapper$JsonRpcRequest

+###com/rabbitmq/client/impl/RpcContinuationRpcWrapper
@5.0.0
+#<init>(Lcom/rabbitmq/client/impl/AMQChannel$RpcContinuation;)V
+#canHandleReply(Lcom/rabbitmq/client/impl/AMQCommand;)Z
+#complete(Lcom/rabbitmq/client/impl/AMQCommand;)V
+#shutdown(Lcom/rabbitmq/client/ShutdownSignalException;)V

+###com/rabbitmq/client/impl/AMQImpl$Connection$Blocked
@3.2.0
+#getReason()Ljava/lang/String;
+#<init>(Ljava/lang/String;)V
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/recovery/ConsumerRecoveryListener
@3.4.0
+#consumerRecovered(Ljava/lang/String;Ljava/lang/String;)V

+###com/rabbitmq/client/AMQP$Connection$Blocked$Builder
@3.2.0
+#<init>()V
+#reason(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Connection$Blocked$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Connection$Blocked;

+###com/rabbitmq/client/AMQP$Tx$Rollback$Builder
@2.5.0
+#<init>()V
+#build()Lcom/rabbitmq/client/AMQP$Tx$Rollback;

+###com/rabbitmq/client/AMQP$Confirm$SelectOk
@2.3.0

+###com/rabbitmq/client/ConfirmListener
@2.3.0
+#handleAck(JZ)V
+#handleNack(JZ)V

+###com/rabbitmq/client/SslEngineConfigurators$Builder
@4.8.0
+#<init>()V
+#defaultConfigurator()Lcom/rabbitmq/client/SslEngineConfigurators$Builder;
+#enableHostnameVerification()Lcom/rabbitmq/client/SslEngineConfigurators$Builder;
+#add(Lcom/rabbitmq/client/SslEngineConfigurator;)Lcom/rabbitmq/client/SslEngineConfigurators$Builder;
+#build()Lcom/rabbitmq/client/SslEngineConfigurator;
@5.0.0
-###com/rabbitmq/client/SslEngineConfigurators$Builder

+###com/rabbitmq/tools/jsonrpc/JsonRpcMapper$JsonRpcResponse
@4.8.0
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Lcom/rabbitmq/tools/jsonrpc/JsonRpcException;)V
+#getError()Ljava/lang/Object;
+#getResult()Ljava/lang/Object;
+#getException()Lcom/rabbitmq/tools/jsonrpc/JsonRpcException;
@5.0.0
-###com/rabbitmq/tools/jsonrpc/JsonRpcMapper$JsonRpcResponse

+###com/rabbitmq/tools/jsonrpc/JacksonJsonRpcMapper
@4.8.0
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;)V
+#<init>()V
+#parse(Ljava/lang/String;Lcom/rabbitmq/tools/jsonrpc/ServiceDescription;)Lcom/rabbitmq/tools/jsonrpc/JsonRpcMapper$JsonRpcRequest;
+#parse(Ljava/lang/String;Ljava/lang/Class;)Lcom/rabbitmq/tools/jsonrpc/JsonRpcMapper$JsonRpcResponse;
+#write(Ljava/lang/Object;)Ljava/lang/String;
@5.0.0
-###com/rabbitmq/tools/jsonrpc/JacksonJsonRpcMapper

+###com/rabbitmq/client/impl/RpcWrapper
@5.0.0
+#canHandleReply(Lcom/rabbitmq/client/impl/AMQCommand;)Z
+#complete(Lcom/rabbitmq/client/impl/AMQCommand;)V
+#shutdown(Lcom/rabbitmq/client/ShutdownSignalException;)V

+###com/rabbitmq/client/impl/AMQImpl$Connection$Unblocked
@3.2.0
+#<init>()V
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V

+###com/rabbitmq/client/impl/AMQImpl$Exchange$Bind
@2.1.1
+#getTicket()I
+#getDestination()Ljava/lang/String;
+#getSource()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#getNowait()Z
+#getArguments()Ljava/util/Map;
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/Map;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/AMQImpl$Basic$Nack
@2.3.0
+#getDeliveryTag()J
+#getMultiple()Z
+#getRequeue()Z
+#<init>(JZZ)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/recovery/TopologyRecoveryRetryHandlerBuilder
@4.8.0
+#<init>()V
+#builder()Lcom/rabbitmq/client/impl/recovery/TopologyRecoveryRetryHandlerBuilder;
+#queueRecoveryRetryCondition(Lcom/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryCondition;)Lcom/rabbitmq/client/impl/recovery/TopologyRecoveryRetryHandlerBuilder;
+#exchangeRecoveryRetryCondition(Lcom/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryCondition;)Lcom/rabbitmq/client/impl/recovery/TopologyRecoveryRetryHandlerBuilder;
+#bindingRecoveryRetryCondition(Lcom/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryCondition;)Lcom/rabbitmq/client/impl/recovery/TopologyRecoveryRetryHandlerBuilder;
+#consumerRecoveryRetryCondition(Lcom/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryCondition;)Lcom/rabbitmq/client/impl/recovery/TopologyRecoveryRetryHandlerBuilder;
+#queueRecoveryRetryOperation(Lcom/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryOperation;)Lcom/rabbitmq/client/impl/recovery/TopologyRecoveryRetryHandlerBuilder;
+#exchangeRecoveryRetryOperation(Lcom/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryOperation;)Lcom/rabbitmq/client/impl/recovery/TopologyRecoveryRetryHandlerBuilder;
+#bindingRecoveryRetryOperation(Lcom/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryOperation;)Lcom/rabbitmq/client/impl/recovery/TopologyRecoveryRetryHandlerBuilder;
+#consumerRecoveryRetryOperation(Lcom/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryOperation;)Lcom/rabbitmq/client/impl/recovery/TopologyRecoveryRetryHandlerBuilder;
+#backoffPolicy(Lcom/rabbitmq/client/impl/recovery/BackoffPolicy;)Lcom/rabbitmq/client/impl/recovery/TopologyRecoveryRetryHandlerBuilder;
+#retryAttempts(I)Lcom/rabbitmq/client/impl/recovery/TopologyRecoveryRetryHandlerBuilder;
+#build()Lcom/rabbitmq/client/impl/recovery/RetryHandler;
@5.0.0
-###com/rabbitmq/client/impl/recovery/TopologyRecoveryRetryHandlerBuilder

+###com/rabbitmq/client/impl/WorkPool
@2.7.0
+#<init>()V
+#registerKey(Ljava/lang/Object;)V
+#unregisterKey(Ljava/lang/Object;)V
+#unregisterAllKeys()V
+#nextWorkBlock(Ljava/util/Collection;I)Ljava/lang/Object;
+#addWorkItem(Ljava/lang/Object;Ljava/lang/Object;)Z
+#finishWorkBlock(Ljava/lang/Object;)Z
@3.4.0
+#unlimit(Ljava/lang/Object;Z)V
@3.4.4
+#limit(Ljava/lang/Object;)V
+#unlimit(Ljava/lang/Object;)V
-#unlimit(Ljava/lang/Object;Z)V
@4.5.0
+#<init>(I)V
-#<init>()V
@5.0.0
+#<init>()V
-#<init>(I)V
@5.2.0
+#<init>(I)V
-#<init>()V

+###com/rabbitmq/client/AMQP$Channel$FlowOk$Builder
@2.5.0
+#<init>()V
+#active(Z)Lcom/rabbitmq/client/AMQP$Channel$FlowOk$Builder;
+#active()Lcom/rabbitmq/client/AMQP$Channel$FlowOk$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Channel$FlowOk;

+###com/rabbitmq/client/AMQP$Channel$Close$Builder
@2.5.0
+#<init>()V
+#replyCode(I)Lcom/rabbitmq/client/AMQP$Channel$Close$Builder;
+#replyText(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Channel$Close$Builder;
+#classId(I)Lcom/rabbitmq/client/AMQP$Channel$Close$Builder;
+#methodId(I)Lcom/rabbitmq/client/AMQP$Channel$Close$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Channel$Close;

+###com/rabbitmq/client/AMQP$Channel$CloseOk$Builder
@2.5.0
+#<init>()V
+#build()Lcom/rabbitmq/client/AMQP$Channel$CloseOk;

+###com/rabbitmq/client/RecoveryDelayHandler$DefaultRecoveryDelayHandler
@4.3.0
+#<init>(J)V
+#getDelay(I)J
@5.0.0
-###com/rabbitmq/client/RecoveryDelayHandler$DefaultRecoveryDelayHandler

+###com/rabbitmq/client/CancelCallback
@5.0.0
+#handle(Ljava/lang/String;)V

+###com/rabbitmq/client/SocketChannelConfigurator
@4.0.0
+#configure(Ljava/nio/channels/SocketChannel;)V
@5.4.0
+#andThen(Lcom/rabbitmq/client/SocketChannelConfigurator;)Lcom/rabbitmq/client/SocketChannelConfigurator;

+###com/rabbitmq/client/RpcClient$Response
@4.0.0
+#<init>()V
+#<init>(Ljava/lang/String;Lcom/rabbitmq/client/Envelope;Lcom/rabbitmq/client/AMQP$BasicProperties;[B)V
+#getConsumerTag()Ljava/lang/String;
+#getEnvelope()Lcom/rabbitmq/client/Envelope;
+#getProperties()Lcom/rabbitmq/client/AMQP$BasicProperties;
+#getBody()[B

+###com/rabbitmq/client/DefaultSocketChannelConfigurator
@4.0.0
+#<init>()V
+#configure(Ljava/nio/channels/SocketChannel;)V

+###com/rabbitmq/client/ProtocolVersionMismatchException
@2.2.0
+#<init>(Lcom/rabbitmq/client/impl/Version;Lcom/rabbitmq/client/impl/Version;)V
+#getClientVersion()Lcom/rabbitmq/client/impl/Version;
+#getServerVersion()Lcom/rabbitmq/client/impl/Version;
+#getClientMajor()I
+#getClientMinor()I
+#getServerMajor()I
+#getServerMinor()I

+###com/rabbitmq/client/impl/AMQImpl$Exchange$Unbind
@2.1.1
+#getTicket()I
+#getDestination()Ljava/lang/String;
+#getSource()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#getNowait()Z
+#getArguments()Ljava/util/Map;
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/Map;)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/recovery/RetryHandler
@4.8.0
+#retryQueueRecovery(Lcom/rabbitmq/client/impl/recovery/RetryContext;)Lcom/rabbitmq/client/impl/recovery/RetryResult;
+#retryExchangeRecovery(Lcom/rabbitmq/client/impl/recovery/RetryContext;)Lcom/rabbitmq/client/impl/recovery/RetryResult;
+#retryBindingRecovery(Lcom/rabbitmq/client/impl/recovery/RetryContext;)Lcom/rabbitmq/client/impl/recovery/RetryResult;
+#retryConsumerRecovery(Lcom/rabbitmq/client/impl/recovery/RetryContext;)Lcom/rabbitmq/client/impl/recovery/RetryResult;
@5.0.0
-###com/rabbitmq/client/impl/recovery/RetryHandler

+###com/rabbitmq/client/impl/recovery/RecordedQueue
@3.3.0
+#<init>(Lcom/rabbitmq/client/impl/recovery/AutorecoveringChannel;Ljava/lang/String;)V
+#exclusive(Z)Lcom/rabbitmq/client/impl/recovery/RecordedQueue;
+#serverNamed(Z)Lcom/rabbitmq/client/impl/recovery/RecordedQueue;
+#isServerNamed()Z
+#recover()V
+#getNameToUseForRecovery()Ljava/lang/String;
+#durable(Z)Lcom/rabbitmq/client/impl/recovery/RecordedQueue;
+#autoDelete(Z)Lcom/rabbitmq/client/impl/recovery/RecordedQueue;
+#arguments(Ljava/util/Map;)Lcom/rabbitmq/client/impl/recovery/RecordedQueue;
@3.4.0
+#isAutoDelete()Z
@4.7.0
+#toString()Ljava/lang/String;
@5.0.0
-#toString()Ljava/lang/String;
@5.3.0
+#toString()Ljava/lang/String;
@5.13.0
+#isExclusive()Z
+#isDurable()Z
+#getArguments()Ljava/util/Map;
+#recoveredQueueNameSupplier(Lcom/rabbitmq/client/impl/recovery/RecoveredQueueNameSupplier;)Lcom/rabbitmq/client/impl/recovery/RecordedQueue;

+###com/rabbitmq/client/impl/recovery/RetryContext
@4.8.0
+#<init>(Lcom/rabbitmq/client/impl/recovery/RecordedEntity;Ljava/lang/Exception;Lcom/rabbitmq/client/impl/recovery/AutorecoveringConnection;)V
+#connection()Lcom/rabbitmq/client/impl/recovery/AutorecoveringConnection;
+#exception()Ljava/lang/Exception;
+#entity()Lcom/rabbitmq/client/impl/recovery/RecordedEntity;
+#queue()Lcom/rabbitmq/client/impl/recovery/RecordedQueue;
+#exchange()Lcom/rabbitmq/client/impl/recovery/RecordedExchange;
+#binding()Lcom/rabbitmq/client/impl/recovery/RecordedBinding;
+#consumer()Lcom/rabbitmq/client/impl/recovery/RecordedConsumer;
@5.0.0
-###com/rabbitmq/client/impl/recovery/RetryContext

+###com/rabbitmq/client/impl/recovery/RecoveryAwareChannelN
@3.3.0
+#<init>(Lcom/rabbitmq/client/impl/AMQConnection;ILcom/rabbitmq/client/impl/ConsumerWorkService;)V
+#basicAck(JZ)V
+#basicNack(JZZ)V
+#basicReject(JZ)V
+#getMaxSeenDeliveryTag()J
+#getActiveDeliveryTagOffset()J
@4.0.0
+#<init>(Lcom/rabbitmq/client/impl/AMQConnection;ILcom/rabbitmq/client/impl/ConsumerWorkService;Lcom/rabbitmq/client/MetricsCollector;)V

+###com/rabbitmq/client/impl/AMQBasicProperties
@1.7.2
+#<init>()V
+#clone()Ljava/lang/Object;
@2.5.0
-#<init>()V

+###com/rabbitmq/client/impl/ValueWriter
@1.6.0
+#<init>(Ljava/io/DataOutputStream;)V
+#writeShortstr(Ljava/lang/String;)V
+#writeLongstr(Lcom/rabbitmq/client/impl/LongString;)V
+#writeLongstr(Ljava/lang/String;)V
+#writeShort(I)V
+#writeLong(I)V
+#writeLonglong(J)V
+#writeTable(Ljava/util/Map;)V
+#writeOctet(I)V
+#writeOctet(B)V
+#writeTimestamp(Ljava/util/Date;)V
+#flush()V
@1.7.2
+#writeFieldValue(Ljava/lang/Object;)V
+#writeArray(Ljava/util/List;)V
@2.6.0
+#writeLongstr(Lcom/rabbitmq/client/LongString;)V
-#writeLongstr(Lcom/rabbitmq/client/impl/LongString;)V
@2.8.0
+#writeArray([Ljava/lang/Object;)V

+###com/rabbitmq/client/impl/SetQueue
@2.7.0
+#<init>()V
+#addIfNotPresent(Ljava/lang/Object;)Z
+#poll()Ljava/lang/Object;
+#contains(Ljava/lang/Object;)Z
+#isEmpty()Z
+#remove(Ljava/lang/Object;)Z
+#clear()V

+###com/rabbitmq/client/impl/VariableLinkedBlockingQueue
@3.4.4
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Collection;)V
+#size()I
+#setCapacity(I)V
+#remainingCapacity()I
+#put(Ljava/lang/Object;)V
+#offer(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
+#offer(Ljava/lang/Object;)Z
+#take()Ljava/lang/Object;
+#poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#poll()Ljava/lang/Object;
+#peek()Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Z
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#clear()V
+#drainTo(Ljava/util/Collection;)I
+#drainTo(Ljava/util/Collection;I)I
+#iterator()Ljava/util/Iterator;

+###com/rabbitmq/client/impl/nio/FrameBuilder
@4.4.0
+#<init>(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V
+#readFrame()Lcom/rabbitmq/client/impl/Frame;
@5.0.0
-###com/rabbitmq/client/impl/nio/FrameBuilder

+###com/rabbitmq/client/impl/nio/WriteRequest
@4.0.0
+#handle(Ljava/io/DataOutputStream;)V

+###com/rabbitmq/client/impl/nio/SelectorHolder
@4.0.0
+#registerFrameHandlerState(Lcom/rabbitmq/client/impl/nio/SocketChannelFrameHandlerState;I)V

+###com/rabbitmq/client/impl/nio/SocketChannelFrameHandlerFactory
@4.0.0
+#<init>(ILcom/rabbitmq/client/impl/nio/NioParams;ZLjavax/net/ssl/SSLContext;)V
+#create(Lcom/rabbitmq/client/Address;)Lcom/rabbitmq/client/impl/FrameHandler;
@4.8.0
+#<init>(ILcom/rabbitmq/client/impl/nio/NioParams;ZLjavax/net/ssl/SSLContext;Lcom/rabbitmq/client/ConnectionPostProcessor;)V
@5.0.0
+#<init>(ILcom/rabbitmq/client/impl/nio/NioParams;ZLcom/rabbitmq/client/SslContextFactory;)V
+#create(Lcom/rabbitmq/client/Address;Ljava/lang/String;)Lcom/rabbitmq/client/impl/FrameHandler;
-#<init>(ILcom/rabbitmq/client/impl/nio/NioParams;ZLjavax/net/ssl/SSLContext;Lcom/rabbitmq/client/ConnectionPostProcessor;)V
-#<init>(ILcom/rabbitmq/client/impl/nio/NioParams;ZLjavax/net/ssl/SSLContext;)V
-#create(Lcom/rabbitmq/client/Address;)Lcom/rabbitmq/client/impl/FrameHandler;

+###com/rabbitmq/client/impl/nio/NioHelper
@4.0.0
+#<init>()V

+###com/rabbitmq/client/impl/nio/SocketChannelFrameHandler
@4.0.0
+#<init>(Lcom/rabbitmq/client/impl/nio/SocketChannelFrameHandlerState;)V
+#getLocalAddress()Ljava/net/InetAddress;
+#getLocalPort()I
+#getAddress()Ljava/net/InetAddress;
+#getPort()I
+#setTimeout(I)V
+#getTimeout()I
+#sendHeader()V
+#initialize(Lcom/rabbitmq/client/impl/AMQConnection;)V
+#readFrame()Lcom/rabbitmq/client/impl/Frame;
+#writeFrame(Lcom/rabbitmq/client/impl/Frame;)V
+#flush()V
+#close()V
+#getState()Lcom/rabbitmq/client/impl/nio/SocketChannelFrameHandlerState;

+###com/rabbitmq/client/AMQP$Access$Request$Builder
@2.5.0
+#<init>()V
+#realm(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Access$Request$Builder;
+#exclusive(Z)Lcom/rabbitmq/client/AMQP$Access$Request$Builder;
+#exclusive()Lcom/rabbitmq/client/AMQP$Access$Request$Builder;
+#passive(Z)Lcom/rabbitmq/client/AMQP$Access$Request$Builder;
+#passive()Lcom/rabbitmq/client/AMQP$Access$Request$Builder;
+#active(Z)Lcom/rabbitmq/client/AMQP$Access$Request$Builder;
+#active()Lcom/rabbitmq/client/AMQP$Access$Request$Builder;
+#write(Z)Lcom/rabbitmq/client/AMQP$Access$Request$Builder;
+#write()Lcom/rabbitmq/client/AMQP$Access$Request$Builder;
+#read(Z)Lcom/rabbitmq/client/AMQP$Access$Request$Builder;
+#read()Lcom/rabbitmq/client/AMQP$Access$Request$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Access$Request;

+###com/rabbitmq/client/ReturnCallback
@5.0.0
+#handle(Lcom/rabbitmq/client/Return;)V

+###com/rabbitmq/client/DnsSrvRecordAddressResolver
@3.6.6
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getAddresses()Ljava/util/List;

+###com/rabbitmq/client/AMQP$Connection$Secure$Builder
@2.5.0
+#<init>()V
+#challenge(Lcom/rabbitmq/client/impl/LongString;)Lcom/rabbitmq/client/AMQP$Connection$Secure$Builder;
+#challenge(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Connection$Secure$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Connection$Secure;
@2.6.0
+#challenge(Lcom/rabbitmq/client/LongString;)Lcom/rabbitmq/client/AMQP$Connection$Secure$Builder;
-#challenge(Lcom/rabbitmq/client/impl/LongString;)Lcom/rabbitmq/client/AMQP$Connection$Secure$Builder;

+###com/rabbitmq/client/AMQP$Connection$Open$Builder
@2.5.0
+#<init>()V
+#virtualHost(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Connection$Open$Builder;
+#capabilities(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Connection$Open$Builder;
+#insist(Z)Lcom/rabbitmq/client/AMQP$Connection$Open$Builder;
+#insist()Lcom/rabbitmq/client/AMQP$Connection$Open$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Connection$Open;

+###com/rabbitmq/client/RecoveryDelayHandler$ExponentialBackoffDelayHandler
@4.3.0
+#<init>()V
+#<init>(Ljava/util/List;)V
+#getDelay(I)J
@5.0.0
-###com/rabbitmq/client/RecoveryDelayHandler$ExponentialBackoffDelayHandler

+###com/rabbitmq/client/Recoverable
@3.3.0
+#addRecoveryListener(Lcom/rabbitmq/client/RecoveryListener;)V
+#removeRecoveryListener(Lcom/rabbitmq/client/RecoveryListener;)V

+###com/rabbitmq/client/RecoverableConnection
@4.0.0

+###com/rabbitmq/client/DnsSrvRecordAddressResolver$SrvRecord
@3.6.6
+#<init>(IIILjava/lang/String;)V
+#getPriority()I
+#getWeight()I
+#getPort()I
+#getHost()Ljava/lang/String;
+#fromSrvQueryResult(Ljava/lang/String;)Lcom/rabbitmq/client/DnsSrvRecordAddressResolver$SrvRecord;
+#compareTo(Lcom/rabbitmq/client/DnsSrvRecordAddressResolver$SrvRecord;)I
+#compareTo(Ljava/lang/Object;)I

+###com/rabbitmq/client/impl/recovery/RecoveryAwareAMQConnectionFactory
@3.3.0
+#<init>(Lcom/rabbitmq/client/impl/ConnectionParams;Lcom/rabbitmq/client/impl/FrameHandlerFactory;[Lcom/rabbitmq/client/Address;)V
@3.6.1
+#<init>(Lcom/rabbitmq/client/impl/ConnectionParams;Lcom/rabbitmq/client/impl/FrameHandlerFactory;Ljava/util/List;)V
-#<init>(Lcom/rabbitmq/client/impl/ConnectionParams;Lcom/rabbitmq/client/impl/FrameHandlerFactory;[Lcom/rabbitmq/client/Address;)V
@3.6.6
+#<init>(Lcom/rabbitmq/client/impl/ConnectionParams;Lcom/rabbitmq/client/impl/FrameHandlerFactory;Lcom/rabbitmq/client/AddressResolver;)V
@4.0.0
+#<init>(Lcom/rabbitmq/client/impl/ConnectionParams;Lcom/rabbitmq/client/impl/FrameHandlerFactory;Lcom/rabbitmq/client/AddressResolver;Lcom/rabbitmq/client/MetricsCollector;)V
@4.0.3
+#newConnection()Lcom/rabbitmq/client/impl/recovery/RecoveryAwareAMQConnection;
@4.1.0
-#newConnection()Lcom/rabbitmq/client/impl/recovery/RecoveryAwareAMQConnection;
@4.1.1
+#newConnection()Lcom/rabbitmq/client/impl/recovery/RecoveryAwareAMQConnection;

+###com/rabbitmq/client/impl/recovery/RecordedQueueBinding
@3.3.0
+#<init>(Lcom/rabbitmq/client/impl/recovery/AutorecoveringChannel;)V
+#recover()V
@4.7.0
+#toString()Ljava/lang/String;
@5.0.0
-#toString()Ljava/lang/String;
@5.3.0
+#toString()Ljava/lang/String;

+###com/rabbitmq/client/impl/CredentialsProvider
@4.5.0
+#getUsername()Ljava/lang/String;
+#getPassword()Ljava/lang/String;
@5.0.0
-###com/rabbitmq/client/impl/CredentialsProvider

+###com/rabbitmq/client/impl/nio/ByteBufferOutputStream
@4.0.0
+#<init>(Ljava/nio/channels/WritableByteChannel;Ljava/nio/ByteBuffer;)V
+#write(I)V
+#flush()V
+#drain(Ljava/nio/channels/WritableByteChannel;Ljava/nio/ByteBuffer;)V

+###com/rabbitmq/client/impl/AbstractFrameHandlerFactory
@4.0.0

+###com/rabbitmq/client/impl/ForgivingExceptionHandler
@3.5.4
+#<init>()V
+#handleUnexpectedConnectionDriverException(Lcom/rabbitmq/client/Connection;Ljava/lang/Throwable;)V
+#handleReturnListenerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
+#handleFlowListenerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
+#handleConfirmListenerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
+#handleBlockedListenerException(Lcom/rabbitmq/client/Connection;Ljava/lang/Throwable;)V
+#handleConsumerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;Lcom/rabbitmq/client/Consumer;Ljava/lang/String;Ljava/lang/String;)V
+#handleConnectionRecoveryException(Lcom/rabbitmq/client/Connection;Ljava/lang/Throwable;)V
+#handleChannelRecoveryException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
+#handleTopologyRecoveryException(Lcom/rabbitmq/client/Connection;Lcom/rabbitmq/client/Channel;Lcom/rabbitmq/client/TopologyRecoveryException;)V
@5.0.0
-#handleFlowListenerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V

+###com/rabbitmq/client/impl/CompletableFutureRpcWrapper
@5.0.0
+#<init>(Lcom/rabbitmq/client/Method;Ljava/util/concurrent/CompletableFuture;)V
+#canHandleReply(Lcom/rabbitmq/client/impl/AMQCommand;)Z
+#complete(Lcom/rabbitmq/client/impl/AMQCommand;)V
+#shutdown(Lcom/rabbitmq/client/ShutdownSignalException;)V

+###com/rabbitmq/client/impl/ExternalMechanism
@2.4.1
+#<init>()V
+#getName()Ljava/lang/String;
+#handleChallenge(Lcom/rabbitmq/client/impl/LongString;Lcom/rabbitmq/client/ConnectionFactory;)Lcom/rabbitmq/client/impl/LongString;
@2.6.0
+#handleChallenge(Lcom/rabbitmq/client/LongString;Lcom/rabbitmq/client/ConnectionFactory;)Lcom/rabbitmq/client/LongString;
-#handleChallenge(Lcom/rabbitmq/client/impl/LongString;Lcom/rabbitmq/client/ConnectionFactory;)Lcom/rabbitmq/client/impl/LongString;
@2.7.0
+#handleChallenge(Lcom/rabbitmq/client/LongString;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/LongString;
-#handleChallenge(Lcom/rabbitmq/client/LongString;Lcom/rabbitmq/client/ConnectionFactory;)Lcom/rabbitmq/client/LongString;

+###com/rabbitmq/client/impl/Environment
@4.0.0
+#<init>()V
+#isAllowedToModifyThreads()Z
+#newThread(Ljava/util/concurrent/ThreadFactory;Ljava/lang/Runnable;Ljava/lang/String;)Ljava/lang/Thread;
+#newThread(Ljava/util/concurrent/ThreadFactory;Ljava/lang/Runnable;Ljava/lang/String;Z)Ljava/lang/Thread;
@5.14.0
*#isAllowedToModifyThreads()Z[deprecated]

+###com/rabbitmq/client/AMQP$Connection$Start$Builder
@2.5.0
+#<init>()V
+#versionMajor(I)Lcom/rabbitmq/client/AMQP$Connection$Start$Builder;
+#versionMinor(I)Lcom/rabbitmq/client/AMQP$Connection$Start$Builder;
+#serverProperties(Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Connection$Start$Builder;
+#mechanisms(Lcom/rabbitmq/client/impl/LongString;)Lcom/rabbitmq/client/AMQP$Connection$Start$Builder;
+#mechanisms(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Connection$Start$Builder;
+#locales(Lcom/rabbitmq/client/impl/LongString;)Lcom/rabbitmq/client/AMQP$Connection$Start$Builder;
+#locales(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Connection$Start$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Connection$Start;
@2.6.0
+#mechanisms(Lcom/rabbitmq/client/LongString;)Lcom/rabbitmq/client/AMQP$Connection$Start$Builder;
+#locales(Lcom/rabbitmq/client/LongString;)Lcom/rabbitmq/client/AMQP$Connection$Start$Builder;
-#mechanisms(Lcom/rabbitmq/client/impl/LongString;)Lcom/rabbitmq/client/AMQP$Connection$Start$Builder;
-#locales(Lcom/rabbitmq/client/impl/LongString;)Lcom/rabbitmq/client/AMQP$Connection$Start$Builder;

+###com/rabbitmq/client/AMQP$Connection$SecureOk$Builder
@2.5.0
+#<init>()V
+#response(Lcom/rabbitmq/client/impl/LongString;)Lcom/rabbitmq/client/AMQP$Connection$SecureOk$Builder;
+#response(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Connection$SecureOk$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Connection$SecureOk;
@2.6.0
+#response(Lcom/rabbitmq/client/LongString;)Lcom/rabbitmq/client/AMQP$Connection$SecureOk$Builder;
-#response(Lcom/rabbitmq/client/impl/LongString;)Lcom/rabbitmq/client/AMQP$Connection$SecureOk$Builder;

+###com/rabbitmq/client/AMQP$Connection$OpenOk$Builder
@2.5.0
+#<init>()V
+#knownHosts(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Connection$OpenOk$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Connection$OpenOk;

+###com/rabbitmq/client/AMQP$Connection$CloseOk$Builder
@2.5.0
+#<init>()V
+#build()Lcom/rabbitmq/client/AMQP$Connection$CloseOk;

+###com/rabbitmq/client/AMQP$Connection$Unblocked$Builder
@3.2.0
+#<init>()V
+#build()Lcom/rabbitmq/client/AMQP$Connection$Unblocked;

+###com/rabbitmq/client/AMQP$Channel$Open$Builder
@2.5.0
+#<init>()V
+#outOfBand(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Channel$Open$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Channel$Open;

+###com/rabbitmq/client/AMQP$Exchange$DeleteOk$Builder
@2.5.0
+#<init>()V
+#build()Lcom/rabbitmq/client/AMQP$Exchange$DeleteOk;

+###com/rabbitmq/client/AMQP$Exchange$Bind$Builder
@2.5.0
+#<init>()V
+#ticket(I)Lcom/rabbitmq/client/AMQP$Exchange$Bind$Builder;
+#destination(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$Bind$Builder;
+#source(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$Bind$Builder;
+#routingKey(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$Bind$Builder;
+#nowait(Z)Lcom/rabbitmq/client/AMQP$Exchange$Bind$Builder;
+#nowait()Lcom/rabbitmq/client/AMQP$Exchange$Bind$Builder;
+#arguments(Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$Bind$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Exchange$Bind;

+###com/rabbitmq/client/RecoveryDelayHandler
@4.3.0
+#getDelay(I)J
@5.0.0
-###com/rabbitmq/client/RecoveryDelayHandler

+###com/rabbitmq/client/RecoveryListener
@3.3.0
+#handleRecovery(Lcom/rabbitmq/client/Recoverable;)V
@4.0.0
+#handleRecoveryStarted(Lcom/rabbitmq/client/Recoverable;)V
@5.11.0
+#handleTopologyRecoveryStarted(Lcom/rabbitmq/client/Recoverable;)V

+###com/rabbitmq/client/ConnectionFactoryConfigurator
@4.4.0
+#<init>()V
+#load(Lcom/rabbitmq/client/ConnectionFactory;Ljava/lang/String;Ljava/lang/String;)V
+#load(Lcom/rabbitmq/client/ConnectionFactory;Ljava/util/Map;Ljava/lang/String;)V
+#load(Lcom/rabbitmq/client/ConnectionFactory;Ljava/lang/String;)V
+#load(Lcom/rabbitmq/client/ConnectionFactory;Ljava/util/Properties;)V
+#load(Lcom/rabbitmq/client/ConnectionFactory;Ljava/util/Properties;Ljava/lang/String;)V
+#load(Lcom/rabbitmq/client/ConnectionFactory;Ljava/util/Map;)V
@5.0.0
-###com/rabbitmq/client/ConnectionFactoryConfigurator

+###com/rabbitmq/client/TrustEverythingTrustManager
@4.1.0
+#<init>()V
+#checkClientTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V
+#checkServerTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V
+#getAcceptedIssuers()[Ljava/security/cert/X509Certificate;

+###com/rabbitmq/client/impl/AMQImpl$Exchange$UnbindOk
@2.1.1
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V

+###com/rabbitmq/client/impl/recovery/RecordedExchangeBinding
@3.3.0
+#<init>(Lcom/rabbitmq/client/impl/recovery/AutorecoveringChannel;)V
+#recover()V
@4.7.0
+#toString()Ljava/lang/String;
@5.0.0
-#toString()Ljava/lang/String;
@5.3.0
+#toString()Ljava/lang/String;

+###com/rabbitmq/client/impl/StrictExceptionHandler
@3.5.4
+#<init>()V
+#handleReturnListenerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
+#handleFlowListenerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
+#handleConfirmListenerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
+#handleBlockedListenerException(Lcom/rabbitmq/client/Connection;Ljava/lang/Throwable;)V
+#handleConsumerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;Lcom/rabbitmq/client/Consumer;Ljava/lang/String;Ljava/lang/String;)V
@5.0.0
-#handleFlowListenerException(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V

+###com/rabbitmq/client/impl/StandardMetricsCollector
@4.0.0
+#<init>(Lcom/codahale/metrics/MetricRegistry;Ljava/lang/String;)V
+#<init>()V
+#<init>(Lcom/codahale/metrics/MetricRegistry;)V
+#newConnection(Lcom/rabbitmq/client/Connection;)V
+#closeConnection(Lcom/rabbitmq/client/Connection;)V
+#newChannel(Lcom/rabbitmq/client/Channel;)V
+#closeChannel(Lcom/rabbitmq/client/Channel;)V
+#basicPublish(Lcom/rabbitmq/client/Channel;)V
+#basicConsume(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Z)V
+#basicCancel(Lcom/rabbitmq/client/Channel;Ljava/lang/String;)V
+#consumedMessage(Lcom/rabbitmq/client/Channel;JZ)V
+#consumedMessage(Lcom/rabbitmq/client/Channel;JLjava/lang/String;)V
+#basicAck(Lcom/rabbitmq/client/Channel;JZ)V
+#basicNack(Lcom/rabbitmq/client/Channel;J)V
+#basicReject(Lcom/rabbitmq/client/Channel;J)V
+#cleanStaleState()V
+#getMetricRegistry()Lcom/codahale/metrics/MetricRegistry;
+#getConnections()Lcom/codahale/metrics/Counter;
+#getChannels()Lcom/codahale/metrics/Counter;
+#getPublishedMessages()Lcom/codahale/metrics/Meter;
+#getConsumedMessages()Lcom/codahale/metrics/Meter;
+#getAcknowledgedMessages()Lcom/codahale/metrics/Meter;
+#getRejectedMessages()Lcom/codahale/metrics/Meter;
@4.1.0
-#newConnection(Lcom/rabbitmq/client/Connection;)V
-#closeConnection(Lcom/rabbitmq/client/Connection;)V
-#newChannel(Lcom/rabbitmq/client/Channel;)V
-#closeChannel(Lcom/rabbitmq/client/Channel;)V
-#basicPublish(Lcom/rabbitmq/client/Channel;)V
-#basicConsume(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Z)V
-#basicCancel(Lcom/rabbitmq/client/Channel;Ljava/lang/String;)V
-#consumedMessage(Lcom/rabbitmq/client/Channel;JZ)V
-#consumedMessage(Lcom/rabbitmq/client/Channel;JLjava/lang/String;)V
-#basicAck(Lcom/rabbitmq/client/Channel;JZ)V
-#basicNack(Lcom/rabbitmq/client/Channel;J)V
-#basicReject(Lcom/rabbitmq/client/Channel;J)V
-#cleanStaleState()V
@5.4.0
+#getFailedToPublishMessages()Lcom/codahale/metrics/Meter;
+#getPublishAcknowledgedMessages()Lcom/codahale/metrics/Meter;
+#getPublishNotAcknowledgedMessages()Lcom/codahale/metrics/Meter;
+#getPublishUnroutedMessages()Lcom/codahale/metrics/Meter;

+###com/rabbitmq/client/impl/SocketFrameHandlerFactory
@4.0.0
+#<init>(ILjavax/net/SocketFactory;Lcom/rabbitmq/client/SocketConfigurator;Z)V
+#<init>(ILjavax/net/SocketFactory;Lcom/rabbitmq/client/SocketConfigurator;ZLjava/util/concurrent/ExecutorService;)V
+#create(Lcom/rabbitmq/client/Address;)Lcom/rabbitmq/client/impl/FrameHandler;
+#create(Ljava/net/Socket;)Lcom/rabbitmq/client/impl/FrameHandler;
@4.8.0
+#<init>(ILjavax/net/SocketFactory;Lcom/rabbitmq/client/SocketConfigurator;ZLjava/util/concurrent/ExecutorService;Lcom/rabbitmq/client/ConnectionPostProcessor;)V
@5.0.0
+#<init>(ILjavax/net/SocketFactory;Lcom/rabbitmq/client/SocketConfigurator;ZLjava/util/concurrent/ExecutorService;Lcom/rabbitmq/client/SslContextFactory;)V
+#create(Lcom/rabbitmq/client/Address;Ljava/lang/String;)Lcom/rabbitmq/client/impl/FrameHandler;
-#<init>(ILjavax/net/SocketFactory;Lcom/rabbitmq/client/SocketConfigurator;ZLjava/util/concurrent/ExecutorService;Lcom/rabbitmq/client/ConnectionPostProcessor;)V
-#create(Lcom/rabbitmq/client/Address;)Lcom/rabbitmq/client/impl/FrameHandler;

+###com/rabbitmq/client/SaslMechanism
@2.4.1
+#getName()Ljava/lang/String;
+#handleChallenge(Lcom/rabbitmq/client/impl/LongString;Lcom/rabbitmq/client/ConnectionFactory;)Lcom/rabbitmq/client/impl/LongString;
@2.6.0
+#handleChallenge(Lcom/rabbitmq/client/LongString;Lcom/rabbitmq/client/ConnectionFactory;)Lcom/rabbitmq/client/LongString;
-#handleChallenge(Lcom/rabbitmq/client/impl/LongString;Lcom/rabbitmq/client/ConnectionFactory;)Lcom/rabbitmq/client/impl/LongString;
@2.7.0
+#handleChallenge(Lcom/rabbitmq/client/LongString;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/LongString;
-#handleChallenge(Lcom/rabbitmq/client/LongString;Lcom/rabbitmq/client/ConnectionFactory;)Lcom/rabbitmq/client/LongString;

+###com/rabbitmq/client/Delivery
@5.0.0
+#<init>(Lcom/rabbitmq/client/Envelope;Lcom/rabbitmq/client/AMQP$BasicProperties;[B)V
+#getEnvelope()Lcom/rabbitmq/client/Envelope;
+#getProperties()Lcom/rabbitmq/client/AMQP$BasicProperties;
+#getBody()[B

+###com/rabbitmq/client/AuthenticationFailureException
@3.2.0
+#<init>(Ljava/lang/String;)V

+###com/rabbitmq/client/DefaultSocketConfigurator
@3.3.0
+#<init>()V
+#configure(Ljava/net/Socket;)V

+###com/rabbitmq/tools/jsonrpc/JsonRpcMapper
@4.8.0
+#parse(Ljava/lang/String;Lcom/rabbitmq/tools/jsonrpc/ServiceDescription;)Lcom/rabbitmq/tools/jsonrpc/JsonRpcMapper$JsonRpcRequest;
+#parse(Ljava/lang/String;Ljava/lang/Class;)Lcom/rabbitmq/tools/jsonrpc/JsonRpcMapper$JsonRpcResponse;
+#write(Ljava/lang/Object;)Ljava/lang/String;
@5.0.0
-###com/rabbitmq/tools/jsonrpc/JsonRpcMapper

+###com/rabbitmq/client/impl/recovery/RecordedExchange
@3.3.0
+#<init>(Lcom/rabbitmq/client/impl/recovery/AutorecoveringChannel;Ljava/lang/String;)V
+#recover()V
+#durable(Z)Lcom/rabbitmq/client/impl/recovery/RecordedExchange;
+#autoDelete(Z)Lcom/rabbitmq/client/impl/recovery/RecordedExchange;
+#type(Ljava/lang/String;)Lcom/rabbitmq/client/impl/recovery/RecordedExchange;
+#arguments(Ljava/util/Map;)Lcom/rabbitmq/client/impl/recovery/RecordedExchange;
@3.4.0
+#isAutoDelete()Z
@4.7.0
+#toString()Ljava/lang/String;
@5.0.0
-#toString()Ljava/lang/String;
@5.3.0
+#toString()Ljava/lang/String;

+###com/rabbitmq/client/impl/MicrometerMetricsCollector$Metrics
@4.3.0
+#values()[Lcom/rabbitmq/client/impl/MicrometerMetricsCollector$Metrics;
+#valueOf(Ljava/lang/String;)Lcom/rabbitmq/client/impl/MicrometerMetricsCollector$Metrics;
@5.0.0
-###com/rabbitmq/client/impl/MicrometerMetricsCollector$Metrics

+###com/rabbitmq/client/AMQP$Connection$Tune$Builder
@2.5.0
+#<init>()V
+#channelMax(I)Lcom/rabbitmq/client/AMQP$Connection$Tune$Builder;
+#frameMax(I)Lcom/rabbitmq/client/AMQP$Connection$Tune$Builder;
+#heartbeat(I)Lcom/rabbitmq/client/AMQP$Connection$Tune$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Connection$Tune;

+###com/rabbitmq/client/AMQP$Confirm$SelectOk$Builder
@2.5.0
+#<init>()V
+#build()Lcom/rabbitmq/client/AMQP$Confirm$SelectOk;

+###com/rabbitmq/client/BlockedCallback
@5.0.0
+#handle(Ljava/lang/String;)V

+###com/rabbitmq/client/SslEngineConfigurator
@4.2.0
+#configure(Ljavax/net/ssl/SSLEngine;)V
@5.4.0
+#andThen(Lcom/rabbitmq/client/SslEngineConfigurator;)Lcom/rabbitmq/client/SslEngineConfigurator;

+###com/rabbitmq/utility/SensibleClone
@1.7.2
+#sensibleClone()Lcom/rabbitmq/utility/SensibleClone;

+###com/rabbitmq/client/impl/recovery/DefaultRetryHandler
@4.8.0
+#<init>(Lcom/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryCondition;Lcom/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryCondition;Lcom/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryCondition;Lcom/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryCondition;Lcom/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryOperation;Lcom/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryOperation;Lcom/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryOperation;Lcom/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryOperation;ILcom/rabbitmq/client/impl/recovery/BackoffPolicy;)V
+#retryQueueRecovery(Lcom/rabbitmq/client/impl/recovery/RetryContext;)Lcom/rabbitmq/client/impl/recovery/RetryResult;
+#retryExchangeRecovery(Lcom/rabbitmq/client/impl/recovery/RetryContext;)Lcom/rabbitmq/client/impl/recovery/RetryResult;
+#retryBindingRecovery(Lcom/rabbitmq/client/impl/recovery/RetryContext;)Lcom/rabbitmq/client/impl/recovery/RetryResult;
+#retryConsumerRecovery(Lcom/rabbitmq/client/impl/recovery/RetryContext;)Lcom/rabbitmq/client/impl/recovery/RetryResult;
@5.0.0
-###com/rabbitmq/client/impl/recovery/DefaultRetryHandler

+###com/rabbitmq/client/BlockedListener
@3.2.0
+#handleBlocked(Ljava/lang/String;)V
+#handleUnblocked()V

+###com/rabbitmq/client/Return
@5.0.0
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/rabbitmq/client/AMQP$BasicProperties;[B)V
+#getReplyCode()I
+#getReplyText()Ljava/lang/String;
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#getProperties()Lcom/rabbitmq/client/AMQP$BasicProperties;
+#getBody()[B

+###com/rabbitmq/client/ListAddressResolver
@3.6.6
+#<init>(Ljava/util/List;)V
+#getAddresses()Ljava/util/List;

+###com/rabbitmq/client/impl/AMQImpl$Basic$RecoverOk
@1.8.1
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V

+###com/rabbitmq/client/impl/recovery/TopologyRecoveryRetryLogic
@4.8.0
+#<init>()V
@5.0.0
-###com/rabbitmq/client/impl/recovery/TopologyRecoveryRetryLogic

+###com/rabbitmq/client/AMQP$Connection$StartOk$Builder
@2.5.0
+#<init>()V
+#clientProperties(Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Connection$StartOk$Builder;
+#mechanism(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Connection$StartOk$Builder;
+#response(Lcom/rabbitmq/client/impl/LongString;)Lcom/rabbitmq/client/AMQP$Connection$StartOk$Builder;
+#response(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Connection$StartOk$Builder;
+#locale(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Connection$StartOk$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Connection$StartOk;
@2.6.0
+#response(Lcom/rabbitmq/client/LongString;)Lcom/rabbitmq/client/AMQP$Connection$StartOk$Builder;
-#response(Lcom/rabbitmq/client/impl/LongString;)Lcom/rabbitmq/client/AMQP$Connection$StartOk$Builder;

+###com/rabbitmq/client/AMQP$Connection$TuneOk$Builder
@2.5.0
+#<init>()V
+#channelMax(I)Lcom/rabbitmq/client/AMQP$Connection$TuneOk$Builder;
+#frameMax(I)Lcom/rabbitmq/client/AMQP$Connection$TuneOk$Builder;
+#heartbeat(I)Lcom/rabbitmq/client/AMQP$Connection$TuneOk$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Connection$TuneOk;

+###com/rabbitmq/client/AMQP$Connection$Close$Builder
@2.5.0
+#<init>()V
+#replyCode(I)Lcom/rabbitmq/client/AMQP$Connection$Close$Builder;
+#replyText(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Connection$Close$Builder;
+#classId(I)Lcom/rabbitmq/client/AMQP$Connection$Close$Builder;
+#methodId(I)Lcom/rabbitmq/client/AMQP$Connection$Close$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Connection$Close;

+###com/rabbitmq/client/AMQP$Channel$Flow$Builder
@2.5.0
+#<init>()V
+#active(Z)Lcom/rabbitmq/client/AMQP$Channel$Flow$Builder;
+#active()Lcom/rabbitmq/client/AMQP$Channel$Flow$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Channel$Flow;

+###com/rabbitmq/client/AMQP$Tx$CommitOk$Builder
@2.5.0
+#<init>()V
+#build()Lcom/rabbitmq/client/AMQP$Tx$CommitOk;

+###com/rabbitmq/client/TopologyRecoveryException
@3.3.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@5.12.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;Lcom/rabbitmq/client/impl/recovery/RecordedEntity;)V
+#getRecordedEntity()Lcom/rabbitmq/client/impl/recovery/RecordedEntity;

+###com/rabbitmq/client/impl/nio/NioLoop
@4.0.0
+#<init>(Lcom/rabbitmq/client/impl/nio/NioParams;Lcom/rabbitmq/client/impl/nio/NioLoopContext;)V
+#run()V

+###com/rabbitmq/client/AMQP$Channel$OpenOk$Builder
@2.5.0
+#<init>()V
+#channelId(Lcom/rabbitmq/client/impl/LongString;)Lcom/rabbitmq/client/AMQP$Channel$OpenOk$Builder;
+#channelId(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Channel$OpenOk$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Channel$OpenOk;
@2.6.0
+#channelId(Lcom/rabbitmq/client/LongString;)Lcom/rabbitmq/client/AMQP$Channel$OpenOk$Builder;
-#channelId(Lcom/rabbitmq/client/impl/LongString;)Lcom/rabbitmq/client/AMQP$Channel$OpenOk$Builder;

+###com/rabbitmq/client/AMQP$Tx$Commit$Builder
@2.5.0
+#<init>()V
+#build()Lcom/rabbitmq/client/AMQP$Tx$Commit;

+###com/rabbitmq/client/UnblockedCallback
@5.0.0
+#handle()V

+###com/rabbitmq/client/ConsumerShutdownSignalCallback
@5.0.0
+#handleShutdownSignal(Ljava/lang/String;Lcom/rabbitmq/client/ShutdownSignalException;)V

+###com/rabbitmq/client/LongString
@2.6.0
+#length()J
+#getStream()Ljava/io/DataInputStream;
+#getBytes()[B
@3.6.0
+#toString()Ljava/lang/String;

+###com/rabbitmq/client/SocketConfigurators$Builder
@4.8.0
+#<init>()V
+#defaultConfigurator()Lcom/rabbitmq/client/SocketConfigurators$Builder;
+#disableNagleAlgorithm()Lcom/rabbitmq/client/SocketConfigurators$Builder;
+#enableHostnameVerification()Lcom/rabbitmq/client/SocketConfigurators$Builder;
+#add(Lcom/rabbitmq/client/SocketConfigurator;)Lcom/rabbitmq/client/SocketConfigurators$Builder;
+#build()Lcom/rabbitmq/client/SocketConfigurator;
@5.0.0
-###com/rabbitmq/client/SocketConfigurators$Builder

+###com/rabbitmq/client/impl/AMQImpl$Confirm$SelectOk
@2.3.0
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V

+###com/rabbitmq/client/impl/AMQImpl$Confirm
@2.3.0
+#<init>()V

+###com/rabbitmq/client/impl/recovery/TopologyRecoveryFilter
@4.8.0
+#filterExchange(Lcom/rabbitmq/client/impl/recovery/RecordedExchange;)Z
+#filterQueue(Lcom/rabbitmq/client/impl/recovery/RecordedQueue;)Z
+#filterBinding(Lcom/rabbitmq/client/impl/recovery/RecordedBinding;)Z
+#filterConsumer(Lcom/rabbitmq/client/impl/recovery/RecordedConsumer;)Z
@5.0.0
-###com/rabbitmq/client/impl/recovery/TopologyRecoveryFilter

+###com/rabbitmq/client/impl/recovery/RecordedNamedEntity
@3.3.0
+#<init>(Lcom/rabbitmq/client/impl/recovery/AutorecoveringChannel;Ljava/lang/String;)V
+#getName()Ljava/lang/String;
@5.14.0
+#recover()V

+###com/rabbitmq/client/impl/recovery/RecordedBinding
@3.3.0
+#<init>(Lcom/rabbitmq/client/impl/recovery/AutorecoveringChannel;)V
+#source(Ljava/lang/String;)Lcom/rabbitmq/client/impl/recovery/RecordedBinding;
+#destination(Ljava/lang/String;)Lcom/rabbitmq/client/impl/recovery/RecordedBinding;
+#routingKey(Ljava/lang/String;)Lcom/rabbitmq/client/impl/recovery/RecordedBinding;
+#arguments(Ljava/util/Map;)Lcom/rabbitmq/client/impl/recovery/RecordedBinding;
+#getSource()Ljava/lang/String;
+#getDestination()Ljava/lang/String;
+#getArguments()Ljava/util/Map;
+#setDestination(Ljava/lang/String;)V
+#recover()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@4.8.0
+#getRoutingKey()Ljava/lang/String;
@5.0.0
-#getRoutingKey()Ljava/lang/String;
@5.4.0
+#getRoutingKey()Ljava/lang/String;

+###com/rabbitmq/client/impl/recovery/RetryResult
@4.8.0
+#<init>(Lcom/rabbitmq/client/impl/recovery/RecordedEntity;Ljava/lang/Object;)V
+#getRecordedEntity()Lcom/rabbitmq/client/impl/recovery/RecordedEntity;
+#getResult()Ljava/lang/Object;
@5.0.0
-###com/rabbitmq/client/impl/recovery/RetryResult

+###com/rabbitmq/client/impl/recovery/RecoveryAwareAMQConnection
@3.3.0
+#<init>(Lcom/rabbitmq/client/impl/ConnectionParams;Lcom/rabbitmq/client/impl/FrameHandler;)V
@4.0.0
+#<init>(Lcom/rabbitmq/client/impl/ConnectionParams;Lcom/rabbitmq/client/impl/FrameHandler;Lcom/rabbitmq/client/MetricsCollector;)V

+###com/rabbitmq/client/impl/recovery/QueueRecoveryListener
@3.4.0
+#queueRecovered(Ljava/lang/String;Ljava/lang/String;)V

+###com/rabbitmq/client/impl/recovery/BackoffPolicy
@4.8.0
+#backoff(I)V
@5.0.0
-###com/rabbitmq/client/impl/recovery/BackoffPolicy

+###com/rabbitmq/client/impl/ErrorOnWriteListener
@4.5.0
+#handle(Lcom/rabbitmq/client/Connection;Ljava/io/IOException;)V
@5.0.0
-###com/rabbitmq/client/impl/ErrorOnWriteListener

+###com/rabbitmq/client/impl/ConsumerWorkService
@3.3.0
+#<init>(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ThreadFactory;)V
+#shutdown()V
+#stopWork(Lcom/rabbitmq/client/Channel;)V
+#registerKey(Lcom/rabbitmq/client/Channel;)V
+#addWork(Lcom/rabbitmq/client/Channel;Ljava/lang/Runnable;)V
+#usesPrivateExecutor()Z
@3.4.0
+#<init>(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ThreadFactory;I)V
+#getShutdownTimeout()I
+#unlimit(Lcom/rabbitmq/client/Channel;Z)V
-#<init>(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ThreadFactory;)V
@3.4.4
+#setUnlimited(Lcom/rabbitmq/client/Channel;Z)V
-#unlimit(Lcom/rabbitmq/client/Channel;Z)V
@4.5.0
+#<init>(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ThreadFactory;II)V
@5.0.0
-#<init>(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ThreadFactory;II)V
@5.2.0
+#<init>(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ThreadFactory;II)V

+###com/rabbitmq/client/impl/DefaultCredentialsProvider
@4.5.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getUsername()Ljava/lang/String;
+#getPassword()Ljava/lang/String;
@5.0.0
-###com/rabbitmq/client/impl/DefaultCredentialsProvider

+###com/rabbitmq/client/impl/AbstractMetricsCollector
@4.1.0
+#<init>()V
+#newConnection(Lcom/rabbitmq/client/Connection;)V
+#closeConnection(Lcom/rabbitmq/client/Connection;)V
+#newChannel(Lcom/rabbitmq/client/Channel;)V
+#closeChannel(Lcom/rabbitmq/client/Channel;)V
+#basicPublish(Lcom/rabbitmq/client/Channel;)V
+#basicConsume(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Z)V
+#basicCancel(Lcom/rabbitmq/client/Channel;Ljava/lang/String;)V
+#consumedMessage(Lcom/rabbitmq/client/Channel;JZ)V
+#consumedMessage(Lcom/rabbitmq/client/Channel;JLjava/lang/String;)V
+#basicAck(Lcom/rabbitmq/client/Channel;JZ)V
+#basicNack(Lcom/rabbitmq/client/Channel;J)V
+#basicReject(Lcom/rabbitmq/client/Channel;J)V
+#cleanStaleState()V
@5.4.0
+#basicPublishFailure(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
+#basicPublishAck(Lcom/rabbitmq/client/Channel;JZ)V
+#basicPublishNack(Lcom/rabbitmq/client/Channel;JZ)V
+#basicPublishUnrouted(Lcom/rabbitmq/client/Channel;)V

+###com/rabbitmq/client/impl/WorkPoolFullException
@4.5.0
+#<init>(Ljava/lang/String;)V
@5.0.0
-###com/rabbitmq/client/impl/WorkPoolFullException

+###com/rabbitmq/client/impl/MicrometerMetricsCollector
@4.3.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;)V
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/String;)V
+#<init>(Lcom/rabbitmq/client/impl/MicrometerMetricsCollector$MetricsCreator;)V
+#getConnections()Ljava/util/concurrent/atomic/AtomicLong;
+#getChannels()Ljava/util/concurrent/atomic/AtomicLong;
+#getPublishedMessages()Lio/micrometer/core/instrument/Counter;
+#getConsumedMessages()Lio/micrometer/core/instrument/Counter;
+#getAcknowledgedMessages()Lio/micrometer/core/instrument/Counter;
+#getRejectedMessages()Lio/micrometer/core/instrument/Counter;
@4.4.2
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/String;[Ljava/lang/String;)V
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/String;Ljava/lang/Iterable;)V
@5.0.0
-###com/rabbitmq/client/impl/MicrometerMetricsCollector

+###com/rabbitmq/client/AMQP$Connection$Blocked
@3.2.0
+#getReason()Ljava/lang/String;

+###com/rabbitmq/client/AMQP$Confirm$Select
@2.3.0
+#getNowait()Z

+###com/rabbitmq/client/AMQP$Confirm
@2.3.0
+#<init>()V

+###com/rabbitmq/client/AMQP$BasicProperties$Builder
@2.5.0
+#<init>()V
+#contentType(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$BasicProperties$Builder;
+#contentEncoding(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$BasicProperties$Builder;
+#headers(Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$BasicProperties$Builder;
+#deliveryMode(Ljava/lang/Integer;)Lcom/rabbitmq/client/AMQP$BasicProperties$Builder;
+#priority(Ljava/lang/Integer;)Lcom/rabbitmq/client/AMQP$BasicProperties$Builder;
+#correlationId(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$BasicProperties$Builder;
+#replyTo(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$BasicProperties$Builder;
+#expiration(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$BasicProperties$Builder;
+#messageId(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$BasicProperties$Builder;
+#timestamp(Ljava/util/Date;)Lcom/rabbitmq/client/AMQP$BasicProperties$Builder;
+#type(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$BasicProperties$Builder;
+#userId(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$BasicProperties$Builder;
+#appId(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$BasicProperties$Builder;
+#clusterId(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$BasicProperties$Builder;
+#build()Lcom/rabbitmq/client/AMQP$BasicProperties;

+###com/rabbitmq/client/BuiltinExchangeType
@3.6.6
+#values()[Lcom/rabbitmq/client/BuiltinExchangeType;
+#valueOf(Ljava/lang/String;)Lcom/rabbitmq/client/BuiltinExchangeType;
+#getType()Ljava/lang/String;

+###com/rabbitmq/client/SslEngineConfigurators
@4.8.0
+#<init>()V
+#defaultConfigurator()Lcom/rabbitmq/client/SslEngineConfigurators$AbstractSslEngineConfigurator;
+#enableHostnameVerification()Lcom/rabbitmq/client/SslEngineConfigurators$AbstractSslEngineConfigurator;
+#builder()Lcom/rabbitmq/client/SslEngineConfigurators$Builder;
@5.0.0
-###com/rabbitmq/client/SslEngineConfigurators

+###com/rabbitmq/client/RpcServer$RpcConsumer
@5.0.0
+#nextDelivery()Lcom/rabbitmq/client/Delivery;
+#getConsumerTag()Ljava/lang/String;

+###com/rabbitmq/utility/IntAllocator
@1.7.2
+#merge(Lcom/rabbitmq/utility/IntAllocator$IntervalList;Lcom/rabbitmq/utility/IntAllocator$IntervalList;)Lcom/rabbitmq/utility/IntAllocator$IntervalList;
+#fromArray([II)Lcom/rabbitmq/utility/IntAllocator$IntervalList;
+#<init>(II)V
+#allocate()I
+#free(I)V
+#reserve(I)Z
+#flush()V
+#toString()Ljava/lang/String;
@2.4.1
-#merge(Lcom/rabbitmq/utility/IntAllocator$IntervalList;Lcom/rabbitmq/utility/IntAllocator$IntervalList;)Lcom/rabbitmq/utility/IntAllocator$IntervalList;
-#fromArray([II)Lcom/rabbitmq/utility/IntAllocator$IntervalList;
-#flush()V

+###com/rabbitmq/tools/jsonrpc/JsonRpcMappingException
@4.8.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@5.0.0
-###com/rabbitmq/tools/jsonrpc/JsonRpcMappingException

+###com/rabbitmq/client/impl/NetworkConnection
@3.3.0
+#getLocalAddress()Ljava/net/InetAddress;
+#getLocalPort()I
+#getAddress()Ljava/net/InetAddress;
+#getPort()I

+###com/rabbitmq/client/impl/recovery/RecoveryCanBeginListener
@4.0.0
+#recoveryCanBegin(Lcom/rabbitmq/client/ShutdownSignalException;)V

+###com/rabbitmq/client/impl/recovery/RecordedEntity
@3.3.0
+#<init>(Lcom/rabbitmq/client/impl/recovery/AutorecoveringChannel;)V
+#getChannel()Lcom/rabbitmq/client/impl/recovery/AutorecoveringChannel;
+#getDelegateChannel()Lcom/rabbitmq/client/Channel;

+###com/rabbitmq/client/impl/recovery/AutorecoveringConnection
@3.3.0
+#<init>(Lcom/rabbitmq/client/impl/ConnectionParams;Lcom/rabbitmq/client/impl/FrameHandlerFactory;[Lcom/rabbitmq/client/Address;)V
+#init()V
+#start()V
+#createChannel()Lcom/rabbitmq/client/Channel;
+#createChannel(I)Lcom/rabbitmq/client/Channel;
+#getServerProperties()Ljava/util/Map;
+#getClientProperties()Ljava/util/Map;
+#getFrameMax()I
+#getHeartbeat()I
+#getChannelMax()I
+#isOpen()Z
+#close()V
+#close(I)V
+#close(ILjava/lang/String;I)V
+#abort()V
+#abort(ILjava/lang/String;I)V
+#abort(ILjava/lang/String;)V
+#abort(I)V
+#getCloseReason()Lcom/rabbitmq/client/ShutdownSignalException;
+#addBlockedListener(Lcom/rabbitmq/client/BlockedListener;)V
+#removeBlockedListener(Lcom/rabbitmq/client/BlockedListener;)Z
+#clearBlockedListeners()V
+#close(ILjava/lang/String;)V
+#addShutdownListener(Lcom/rabbitmq/client/ShutdownListener;)V
+#removeShutdownListener(Lcom/rabbitmq/client/ShutdownListener;)V
+#notifyListeners()V
+#addRecoveryListener(Lcom/rabbitmq/client/RecoveryListener;)V
+#removeRecoveryListener(Lcom/rabbitmq/client/RecoveryListener;)V
+#getExceptionHandler()Lcom/rabbitmq/client/ExceptionHandler;
+#getPort()I
+#getAddress()Ljava/net/InetAddress;
+#getLocalAddress()Ljava/net/InetAddress;
+#getLocalPort()I
@3.4.0
+#addQueueRecoveryListener(Lcom/rabbitmq/client/impl/recovery/QueueRecoveryListener;)V
+#removeQueueRecoveryListener(Lcom/rabbitmq/client/impl/recovery/QueueRecoveryListener;)V
+#addConsumerRecoveryListener(Lcom/rabbitmq/client/impl/recovery/ConsumerRecoveryListener;)V
+#removeConsumerRecoveryListener(Lcom/rabbitmq/client/impl/recovery/ConsumerRecoveryListener;)V
+#getRecordedQueues()Ljava/util/Map;
+#getRecordedExchanges()Ljava/util/Map;
@3.4.2
+#toString()Ljava/lang/String;
@3.6.1
+#<init>(Lcom/rabbitmq/client/impl/ConnectionParams;Lcom/rabbitmq/client/impl/FrameHandlerFactory;Ljava/util/List;)V
-#<init>(Lcom/rabbitmq/client/impl/ConnectionParams;Lcom/rabbitmq/client/impl/FrameHandlerFactory;[Lcom/rabbitmq/client/Address;)V
@3.6.2
+#getClientProvidedName()Ljava/lang/String;
@3.6.6
+#<init>(Lcom/rabbitmq/client/impl/ConnectionParams;Lcom/rabbitmq/client/impl/FrameHandlerFactory;Lcom/rabbitmq/client/AddressResolver;)V
-#start()V
@4.0.0
+#<init>(Lcom/rabbitmq/client/impl/ConnectionParams;Lcom/rabbitmq/client/impl/FrameHandlerFactory;Lcom/rabbitmq/client/AddressResolver;Lcom/rabbitmq/client/MetricsCollector;)V
+#getDelegate()Lcom/rabbitmq/client/impl/AMQConnection;
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
@4.5.0
+#excludeQueueFromRecovery(Ljava/lang/String;Z)V
@4.8.0
+#recoverQueue(Ljava/lang/String;Lcom/rabbitmq/client/impl/recovery/RecordedQueue;Z)V
+#recoverConsumer(Ljava/lang/String;Lcom/rabbitmq/client/impl/recovery/RecordedConsumer;Z)V
+#getRecordedBindings()Ljava/util/List;
@5.0.0
+#addBlockedListener(Lcom/rabbitmq/client/BlockedCallback;Lcom/rabbitmq/client/UnblockedCallback;)Lcom/rabbitmq/client/BlockedListener;
-#recoverQueue(Ljava/lang/String;Lcom/rabbitmq/client/impl/recovery/RecordedQueue;Z)V
-#recoverConsumer(Ljava/lang/String;Lcom/rabbitmq/client/impl/recovery/RecordedConsumer;Z)V
-#excludeQueueFromRecovery(Ljava/lang/String;Z)V
-#getRecordedBindings()Ljava/util/List;
@5.2.0
+#excludeQueueFromRecovery(Ljava/lang/String;Z)V
@5.4.0
+#recoverQueue(Ljava/lang/String;Lcom/rabbitmq/client/impl/recovery/RecordedQueue;Z)V
+#recoverConsumer(Ljava/lang/String;Lcom/rabbitmq/client/impl/recovery/RecordedConsumer;Z)V
+#getRecordedBindings()Ljava/util/List;
@5.11.0
+#getRecordedConsumers()Ljava/util/Map;
@5.12.0
+#recoverChannel(Lcom/rabbitmq/client/impl/recovery/AutorecoveringChannel;)V
+#recoverChannelAndTopology(Lcom/rabbitmq/client/impl/recovery/AutorecoveringChannel;)V
+#recoverExchange(Lcom/rabbitmq/client/impl/recovery/RecordedExchange;Z)V
+#recoverBinding(Lcom/rabbitmq/client/impl/recovery/RecordedBinding;Z)V

+###com/rabbitmq/client/RecoverableChannel
@4.0.0

+###com/rabbitmq/tools/jsonrpc/DefaultJsonRpcMapper
@4.8.0
+#<init>()V
+#parse(Ljava/lang/String;Lcom/rabbitmq/tools/jsonrpc/ServiceDescription;)Lcom/rabbitmq/tools/jsonrpc/JsonRpcMapper$JsonRpcRequest;
+#parse(Ljava/lang/String;Ljava/lang/Class;)Lcom/rabbitmq/tools/jsonrpc/JsonRpcMapper$JsonRpcResponse;
+#write(Ljava/lang/Object;)Ljava/lang/String;
@5.0.0
-###com/rabbitmq/tools/jsonrpc/DefaultJsonRpcMapper

+###com/rabbitmq/client/impl/ValueReader
@1.6.0
+#<init>(Ljava/io/DataInputStream;)V
+#readShortstr(Ljava/io/DataInputStream;)Ljava/lang/String;
+#readShortstr()Ljava/lang/String;
+#readBytes(Ljava/io/DataInputStream;)[B
+#readBytes()[B
+#readLongstr(Ljava/io/DataInputStream;)Lcom/rabbitmq/client/impl/LongString;
+#readLongstr()Lcom/rabbitmq/client/impl/LongString;
+#readShort()I
+#readLong()I
+#readLonglong()J
+#readTable(Ljava/io/DataInputStream;)Ljava/util/Map;
+#readTable()Ljava/util/Map;
+#readOctet()I
+#readTimestamp(Ljava/io/DataInputStream;)Ljava/util/Date;
+#readTimestamp()Ljava/util/Date;
@1.7.2
+#readFieldValue(Ljava/io/DataInputStream;)Ljava/lang/Object;
+#readArray(Ljava/io/DataInputStream;)Ljava/util/List;
@2.6.0
+#readLongstr(Ljava/io/DataInputStream;)Lcom/rabbitmq/client/LongString;
+#readLongstr()Lcom/rabbitmq/client/LongString;
-#readLongstr(Ljava/io/DataInputStream;)Lcom/rabbitmq/client/impl/LongString;
-#readLongstr()Lcom/rabbitmq/client/impl/LongString;
@2.7.0
-#readShortstr(Ljava/io/DataInputStream;)Ljava/lang/String;
-#readBytes(Ljava/io/DataInputStream;)[B
-#readBytes()[B
-#readLongstr(Ljava/io/DataInputStream;)Lcom/rabbitmq/client/LongString;
-#readTable(Ljava/io/DataInputStream;)Ljava/util/Map;
-#readFieldValue(Ljava/io/DataInputStream;)Ljava/lang/Object;
-#readArray(Ljava/io/DataInputStream;)Ljava/util/List;
-#readTimestamp(Ljava/io/DataInputStream;)Ljava/util/Date;

+###com/rabbitmq/client/impl/FrameHandlerFactory
@3.3.0
+#<init>(ILjavax/net/SocketFactory;Lcom/rabbitmq/client/SocketConfigurator;Z)V
+#create(Lcom/rabbitmq/client/Address;)Lcom/rabbitmq/client/impl/FrameHandler;
+#create(Ljava/net/Socket;)Lcom/rabbitmq/client/impl/FrameHandler;
@4.0.0
-#<init>(ILjavax/net/SocketFactory;Lcom/rabbitmq/client/SocketConfigurator;Z)V
-#create(Ljava/net/Socket;)Lcom/rabbitmq/client/impl/FrameHandler;
@5.0.0
+#create(Lcom/rabbitmq/client/Address;Ljava/lang/String;)Lcom/rabbitmq/client/impl/FrameHandler;
-#create(Lcom/rabbitmq/client/Address;)Lcom/rabbitmq/client/impl/FrameHandler;

+###com/rabbitmq/client/impl/PlainMechanism
@2.4.1
+#<init>()V
+#getName()Ljava/lang/String;
+#handleChallenge(Lcom/rabbitmq/client/impl/LongString;Lcom/rabbitmq/client/ConnectionFactory;)Lcom/rabbitmq/client/impl/LongString;
@2.6.0
+#handleChallenge(Lcom/rabbitmq/client/LongString;Lcom/rabbitmq/client/ConnectionFactory;)Lcom/rabbitmq/client/LongString;
-#handleChallenge(Lcom/rabbitmq/client/impl/LongString;Lcom/rabbitmq/client/ConnectionFactory;)Lcom/rabbitmq/client/impl/LongString;
@2.7.0
+#handleChallenge(Lcom/rabbitmq/client/LongString;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/LongString;
-#handleChallenge(Lcom/rabbitmq/client/LongString;Lcom/rabbitmq/client/ConnectionFactory;)Lcom/rabbitmq/client/LongString;

+###com/rabbitmq/client/impl/nio/NioParams
@4.0.0
+#<init>()V
+#<init>(Lcom/rabbitmq/client/impl/nio/NioParams;)V
+#getReadByteBufferSize()I
+#setReadByteBufferSize(I)Lcom/rabbitmq/client/impl/nio/NioParams;
+#getWriteByteBufferSize()I
+#setWriteByteBufferSize(I)Lcom/rabbitmq/client/impl/nio/NioParams;
+#getNbIoThreads()I
+#setNbIoThreads(I)Lcom/rabbitmq/client/impl/nio/NioParams;
+#getWriteEnqueuingTimeoutInMs()I
+#setWriteEnqueuingTimeoutInMs(I)Lcom/rabbitmq/client/impl/nio/NioParams;
+#getNioExecutor()Ljava/util/concurrent/ExecutorService;
+#setNioExecutor(Ljava/util/concurrent/ExecutorService;)Lcom/rabbitmq/client/impl/nio/NioParams;
+#getThreadFactory()Ljava/util/concurrent/ThreadFactory;
+#setThreadFactory(Ljava/util/concurrent/ThreadFactory;)Lcom/rabbitmq/client/impl/nio/NioParams;
+#getWriteQueueCapacity()I
+#setWriteQueueCapacity(I)Lcom/rabbitmq/client/impl/nio/NioParams;
+#setSocketChannelConfigurator(Lcom/rabbitmq/client/SocketChannelConfigurator;)V
+#getSocketChannelConfigurator()Lcom/rabbitmq/client/SocketChannelConfigurator;
@4.2.0
+#setSslEngineConfigurator(Lcom/rabbitmq/client/SslEngineConfigurator;)V
+#getSslEngineConfigurator()Lcom/rabbitmq/client/SslEngineConfigurator;
@4.8.0
+#enableHostnameVerification()Lcom/rabbitmq/client/impl/nio/NioParams;
+#getConnectionShutdownExecutor()Ljava/util/concurrent/ExecutorService;
+#setConnectionShutdownExecutor(Ljava/util/concurrent/ExecutorService;)Lcom/rabbitmq/client/impl/nio/NioParams;
@4.9.0
+#setByteBufferFactory(Lcom/rabbitmq/client/impl/nio/ByteBufferFactory;)Lcom/rabbitmq/client/impl/nio/NioParams;
+#getByteBufferFactory()Lcom/rabbitmq/client/impl/nio/ByteBufferFactory;
+#setWriteQueueFactory(Lcom/rabbitmq/client/impl/nio/NioQueueFactory;)Lcom/rabbitmq/client/impl/nio/NioParams;
+#getWriteQueueFactory()Lcom/rabbitmq/client/impl/nio/NioQueueFactory;
@5.0.0
-#enableHostnameVerification()Lcom/rabbitmq/client/impl/nio/NioParams;
-#getConnectionShutdownExecutor()Ljava/util/concurrent/ExecutorService;
-#setConnectionShutdownExecutor(Ljava/util/concurrent/ExecutorService;)Lcom/rabbitmq/client/impl/nio/NioParams;
-#setByteBufferFactory(Lcom/rabbitmq/client/impl/nio/ByteBufferFactory;)Lcom/rabbitmq/client/impl/nio/NioParams;
-#getByteBufferFactory()Lcom/rabbitmq/client/impl/nio/ByteBufferFactory;
-#setWriteQueueFactory(Lcom/rabbitmq/client/impl/nio/NioQueueFactory;)Lcom/rabbitmq/client/impl/nio/NioParams;
-#getWriteQueueFactory()Lcom/rabbitmq/client/impl/nio/NioQueueFactory;
@5.4.0
+#enableHostnameVerification()Lcom/rabbitmq/client/impl/nio/NioParams;
+#getConnectionShutdownExecutor()Ljava/util/concurrent/ExecutorService;
+#setConnectionShutdownExecutor(Ljava/util/concurrent/ExecutorService;)Lcom/rabbitmq/client/impl/nio/NioParams;
@5.5.0
+#setByteBufferFactory(Lcom/rabbitmq/client/impl/nio/ByteBufferFactory;)Lcom/rabbitmq/client/impl/nio/NioParams;
+#getByteBufferFactory()Lcom/rabbitmq/client/impl/nio/ByteBufferFactory;
+#setWriteQueueFactory(Ljava/util/function/Function;)Lcom/rabbitmq/client/impl/nio/NioParams;
+#getWriteQueueFactory()Ljava/util/function/Function;

+###com/rabbitmq/client/impl/nio/SslEngineFrameBuilder
@4.4.0
+#<init>(Ljavax/net/ssl/SSLEngine;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/channels/ReadableByteChannel;)V
@5.0.0
-###com/rabbitmq/client/impl/nio/SslEngineFrameBuilder

+###com/rabbitmq/client/impl/nio/SocketChannelRegistration
@4.0.0
+#<init>(Lcom/rabbitmq/client/impl/nio/SocketChannelFrameHandlerState;I)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/nio/SocketChannelFrameHandlerState
@4.0.0
+#<init>(Ljava/nio/channels/SocketChannel;Lcom/rabbitmq/client/impl/nio/NioLoopContext;Lcom/rabbitmq/client/impl/nio/NioParams;Ljavax/net/ssl/SSLEngine;)V
+#getChannel()Ljava/nio/channels/SocketChannel;
+#getWriteQueue()Ljava/util/Queue;
+#sendHeader()V
+#write(Lcom/rabbitmq/client/impl/Frame;)V
+#startReading()V
+#getConnection()Lcom/rabbitmq/client/impl/AMQConnection;
+#setConnection(Lcom/rabbitmq/client/impl/AMQConnection;)V
+#setLastActivity(J)V
+#getLastActivity()J
@4.9.0
+#getWriteQueue()Lcom/rabbitmq/client/impl/nio/NioQueue;
-#getWriteQueue()Ljava/util/Queue;
@5.0.0
+#getWriteQueue()Ljava/util/Queue;
-#getWriteQueue()Lcom/rabbitmq/client/impl/nio/NioQueue;
@5.5.0
+#getWriteQueue()Lcom/rabbitmq/client/impl/nio/NioQueue;
-#getWriteQueue()Ljava/util/Queue;

+###com/rabbitmq/client/impl/nio/NioLoopContext
@4.0.0
+#<init>(Lcom/rabbitmq/client/impl/nio/SocketChannelFrameHandlerFactory;Lcom/rabbitmq/client/impl/nio/NioParams;)V

+###com/rabbitmq/client/impl/nio/HeaderWriteRequest
@4.0.0
+#<init>()V
+#handle(Ljava/io/DataOutputStream;)V
@4.4.0
-#<init>()V
@5.0.0
+#<init>()V
@5.1.0
-#<init>()V

+###com/rabbitmq/client/impl/nio/SslEngineHelper
@4.0.0
+#<init>()V
+#doHandshake(Ljava/nio/channels/SocketChannel;Ljavax/net/ssl/SSLEngine;)Z
+#write(Ljava/nio/channels/WritableByteChannel;Ljavax/net/ssl/SSLEngine;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#close(Ljava/nio/channels/WritableByteChannel;Ljavax/net/ssl/SSLEngine;)V
@5.14.1
+#doHandshake(Ljava/nio/channels/WritableByteChannel;Ljava/nio/channels/ReadableByteChannel;Ljavax/net/ssl/SSLEngine;)Z
-#doHandshake(Ljava/nio/channels/SocketChannel;Ljavax/net/ssl/SSLEngine;)Z

+###com/rabbitmq/client/AMQP$Access$RequestOk$Builder
@2.5.0
+#<init>()V
+#ticket(I)Lcom/rabbitmq/client/AMQP$Access$RequestOk$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Access$RequestOk;

+###com/rabbitmq/client/AMQP$Exchange$Declare$Builder
@2.5.0
+#<init>()V
+#ticket(I)Lcom/rabbitmq/client/AMQP$Exchange$Declare$Builder;
+#exchange(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$Declare$Builder;
+#type(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$Declare$Builder;
+#passive(Z)Lcom/rabbitmq/client/AMQP$Exchange$Declare$Builder;
+#passive()Lcom/rabbitmq/client/AMQP$Exchange$Declare$Builder;
+#durable(Z)Lcom/rabbitmq/client/AMQP$Exchange$Declare$Builder;
+#durable()Lcom/rabbitmq/client/AMQP$Exchange$Declare$Builder;
+#autoDelete(Z)Lcom/rabbitmq/client/AMQP$Exchange$Declare$Builder;
+#autoDelete()Lcom/rabbitmq/client/AMQP$Exchange$Declare$Builder;
+#internal(Z)Lcom/rabbitmq/client/AMQP$Exchange$Declare$Builder;
+#internal()Lcom/rabbitmq/client/AMQP$Exchange$Declare$Builder;
+#nowait(Z)Lcom/rabbitmq/client/AMQP$Exchange$Declare$Builder;
+#nowait()Lcom/rabbitmq/client/AMQP$Exchange$Declare$Builder;
+#arguments(Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$Declare$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Exchange$Declare;

+###com/rabbitmq/client/AMQP$Exchange$Delete$Builder
@2.5.0
+#<init>()V
+#ticket(I)Lcom/rabbitmq/client/AMQP$Exchange$Delete$Builder;
+#exchange(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$Delete$Builder;
+#ifUnused(Z)Lcom/rabbitmq/client/AMQP$Exchange$Delete$Builder;
+#ifUnused()Lcom/rabbitmq/client/AMQP$Exchange$Delete$Builder;
+#nowait(Z)Lcom/rabbitmq/client/AMQP$Exchange$Delete$Builder;
+#nowait()Lcom/rabbitmq/client/AMQP$Exchange$Delete$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Exchange$Delete;

+###com/rabbitmq/client/AMQP$Exchange$BindOk$Builder
@2.5.0
+#<init>()V
+#build()Lcom/rabbitmq/client/AMQP$Exchange$BindOk;

+###com/rabbitmq/client/AMQP$Exchange$BindOk
@2.1.1

+###com/rabbitmq/client/BasicProperties
@1.7.2
+#getContentType()Ljava/lang/String;
+#getContentEncoding()Ljava/lang/String;
+#getHeaders()Ljava/util/Map;
+#getDeliveryMode()Ljava/lang/Integer;
+#getPriority()Ljava/lang/Integer;
+#getCorrelationId()Ljava/lang/String;
+#getReplyTo()Ljava/lang/String;
+#getExpiration()Ljava/lang/String;
+#getMessageId()Ljava/lang/String;
+#getTimestamp()Ljava/util/Date;
+#getType()Ljava/lang/String;
+#getUserId()Ljava/lang/String;
+#getAppId()Ljava/lang/String;
+#getClusterId()Ljava/lang/String;
+#setContentType(Ljava/lang/String;)V
+#setContentEncoding(Ljava/lang/String;)V
+#setHeaders(Ljava/util/Map;)V
+#setDeliveryMode(Ljava/lang/Integer;)V
+#setPriority(Ljava/lang/Integer;)V
+#setCorrelationId(Ljava/lang/String;)V
+#setReplyTo(Ljava/lang/String;)V
+#setExpiration(Ljava/lang/String;)V
+#setMessageId(Ljava/lang/String;)V
+#setTimestamp(Ljava/util/Date;)V
+#setType(Ljava/lang/String;)V
+#setUserId(Ljava/lang/String;)V
+#setAppId(Ljava/lang/String;)V
+#setClusterId(Ljava/lang/String;)V
@2.0.0
-#getClusterId()Ljava/lang/String;
-#setClusterId(Ljava/lang/String;)V
@2.5.0
*#setContentType(Ljava/lang/String;)V[deprecated]
*#setContentEncoding(Ljava/lang/String;)V[deprecated]
*#setHeaders(Ljava/util/Map;)V[deprecated]
*#setDeliveryMode(Ljava/lang/Integer;)V[deprecated]
*#setPriority(Ljava/lang/Integer;)V[deprecated]
*#setCorrelationId(Ljava/lang/String;)V[deprecated]
*#setReplyTo(Ljava/lang/String;)V[deprecated]
*#setExpiration(Ljava/lang/String;)V[deprecated]
*#setMessageId(Ljava/lang/String;)V[deprecated]
*#setTimestamp(Ljava/util/Date;)V[deprecated]
*#setType(Ljava/lang/String;)V[deprecated]
*#setUserId(Ljava/lang/String;)V[deprecated]
*#setAppId(Ljava/lang/String;)V[deprecated]
@3.5.0
-#setContentType(Ljava/lang/String;)V[deprecated]
-#setContentEncoding(Ljava/lang/String;)V[deprecated]
-#setHeaders(Ljava/util/Map;)V[deprecated]
-#setDeliveryMode(Ljava/lang/Integer;)V[deprecated]
-#setPriority(Ljava/lang/Integer;)V[deprecated]
-#setCorrelationId(Ljava/lang/String;)V[deprecated]
-#setReplyTo(Ljava/lang/String;)V[deprecated]
-#setExpiration(Ljava/lang/String;)V[deprecated]
-#setMessageId(Ljava/lang/String;)V[deprecated]
-#setTimestamp(Ljava/util/Date;)V[deprecated]
-#setType(Ljava/lang/String;)V[deprecated]
-#setUserId(Ljava/lang/String;)V[deprecated]
-#setAppId(Ljava/lang/String;)V[deprecated]

+###com/rabbitmq/client/ConsumerCancelledException
@2.4.1
+#<init>()V
+#sensibleClone()Lcom/rabbitmq/client/ConsumerCancelledException;
+#sensibleClone()Lcom/rabbitmq/utility/SensibleClone;

+###com/rabbitmq/client/DnsRecordIpAddressResolver
@3.6.6
+#<init>(Ljava/lang/String;IZ)V
+#<init>(Ljava/lang/String;I)V
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lcom/rabbitmq/client/Address;)V
+#<init>(Lcom/rabbitmq/client/Address;Z)V
+#getAddresses()Ljava/util/List;

+###com/rabbitmq/client/SocketChannelConfigurators$Builder
@4.8.0
+#<init>()V
+#defaultConfigurator()Lcom/rabbitmq/client/SocketChannelConfigurators$Builder;
+#disableNagleAlgorithm()Lcom/rabbitmq/client/SocketChannelConfigurators$Builder;
+#add(Lcom/rabbitmq/client/SocketChannelConfigurator;)Lcom/rabbitmq/client/SocketChannelConfigurators$Builder;
+#build()Lcom/rabbitmq/client/SocketChannelConfigurator;
@5.0.0
-###com/rabbitmq/client/SocketChannelConfigurators$Builder

+###com/rabbitmq/client/SocketChannelConfigurators
@4.8.0
+#<init>()V
+#defaultConfigurator()Lcom/rabbitmq/client/SocketChannelConfigurators$AbstractSocketChannelConfigurator;
+#disableNagleAlgorithm()Lcom/rabbitmq/client/SocketChannelConfigurators$AbstractSocketChannelConfigurator;
+#builder()Lcom/rabbitmq/client/SocketChannelConfigurators$Builder;
@5.0.0
-###com/rabbitmq/client/SocketChannelConfigurators

+###com/rabbitmq/client/impl/AMQImpl$Exchange$BindOk
@2.1.1
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V

+###com/rabbitmq/client/impl/AMQImpl$Confirm$Select
@2.3.0
+#getNowait()Z
+#<init>(Z)V
+#<init>()V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
+#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@2.5.0
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
-#<init>()V
-#appendArgumentDebugStringTo(Ljava/lang/StringBuffer;)V
-#readArgumentsFrom(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
@4.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@5.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/impl/recovery/RecordedConsumer
@3.3.0
+#<init>(Lcom/rabbitmq/client/impl/recovery/AutorecoveringChannel;Ljava/lang/String;)V
+#consumerTag(Ljava/lang/String;)Lcom/rabbitmq/client/impl/recovery/RecordedConsumer;
+#consumer(Lcom/rabbitmq/client/Consumer;)Lcom/rabbitmq/client/impl/recovery/RecordedConsumer;
+#exclusive(Z)Lcom/rabbitmq/client/impl/recovery/RecordedConsumer;
+#autoAck(Z)Lcom/rabbitmq/client/impl/recovery/RecordedConsumer;
+#recover()Ljava/lang/String;
+#arguments(Ljava/util/Map;)Lcom/rabbitmq/client/impl/recovery/RecordedConsumer;
+#getQueue()Ljava/lang/String;
+#setQueue(Ljava/lang/String;)V
+#getConsumerTag()Ljava/lang/String;
@4.7.0
+#toString()Ljava/lang/String;
@5.0.0
-#toString()Ljava/lang/String;
@5.3.0
+#toString()Ljava/lang/String;

+###com/rabbitmq/client/impl/recovery/AutorecoveringChannel
@3.3.0
+#<init>(Lcom/rabbitmq/client/impl/recovery/AutorecoveringConnection;Lcom/rabbitmq/client/impl/recovery/RecoveryAwareChannelN;)V
+#getChannelNumber()I
+#getConnection()Lcom/rabbitmq/client/Connection;
+#getDelegate()Lcom/rabbitmq/client/Channel;
+#close()V
+#close(ILjava/lang/String;)V
+#flowBlocked()Z
+#abort()V
+#abort(ILjava/lang/String;)V
+#addReturnListener(Lcom/rabbitmq/client/ReturnListener;)V
+#removeReturnListener(Lcom/rabbitmq/client/ReturnListener;)Z
+#clearReturnListeners()V
+#addFlowListener(Lcom/rabbitmq/client/FlowListener;)V
+#removeFlowListener(Lcom/rabbitmq/client/FlowListener;)Z
+#clearFlowListeners()V
+#addConfirmListener(Lcom/rabbitmq/client/ConfirmListener;)V
+#removeConfirmListener(Lcom/rabbitmq/client/ConfirmListener;)Z
+#clearConfirmListeners()V
+#getDefaultConsumer()Lcom/rabbitmq/client/Consumer;
+#setDefaultConsumer(Lcom/rabbitmq/client/Consumer;)V
+#basicQos(IIZ)V
+#basicQos(I)V
+#basicQos(IZ)V
+#basicPublish(Ljava/lang/String;Ljava/lang/String;Lcom/rabbitmq/client/AMQP$BasicProperties;[B)V
+#basicPublish(Ljava/lang/String;Ljava/lang/String;ZLcom/rabbitmq/client/AMQP$BasicProperties;[B)V
+#basicPublish(Ljava/lang/String;Ljava/lang/String;ZZLcom/rabbitmq/client/AMQP$BasicProperties;[B)V
+#exchangeDeclare(Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDeclare(Ljava/lang/String;Ljava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDeclare(Ljava/lang/String;Ljava/lang/String;ZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDeclare(Ljava/lang/String;Ljava/lang/String;ZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDeclarePassive(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDelete(Ljava/lang/String;Z)Lcom/rabbitmq/client/AMQP$Exchange$DeleteOk;
+#exchangeDelete(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$DeleteOk;
+#exchangeBind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$BindOk;
+#exchangeBind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$BindOk;
+#exchangeUnbind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Exchange$UnbindOk;
+#exchangeUnbind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$UnbindOk;
+#queueDeclare()Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
+#queueDeclare(Ljava/lang/String;ZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
+#queueDeclarePassive(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
+#queueDelete(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$DeleteOk;
+#queueDelete(Ljava/lang/String;ZZ)Lcom/rabbitmq/client/AMQP$Queue$DeleteOk;
+#queueBind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$BindOk;
+#queueBind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$BindOk;
+#queueUnbind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$UnbindOk;
+#queueUnbind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$UnbindOk;
+#queuePurge(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$PurgeOk;
+#basicGet(Ljava/lang/String;Z)Lcom/rabbitmq/client/GetResponse;
+#basicAck(JZ)V
+#basicNack(JZZ)V
+#basicReject(JZ)V
+#basicConsume(Ljava/lang/String;Lcom/rabbitmq/client/Consumer;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLcom/rabbitmq/client/Consumer;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;Lcom/rabbitmq/client/Consumer;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/util/Map;Lcom/rabbitmq/client/Consumer;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;ZZLjava/util/Map;Lcom/rabbitmq/client/Consumer;)Ljava/lang/String;
+#basicCancel(Ljava/lang/String;)V
+#basicRecover()Lcom/rabbitmq/client/AMQP$Basic$RecoverOk;
+#basicRecover(Z)Lcom/rabbitmq/client/AMQP$Basic$RecoverOk;
+#basicRecoverAsync(Z)V[deprecated]
+#txSelect()Lcom/rabbitmq/client/AMQP$Tx$SelectOk;
+#txCommit()Lcom/rabbitmq/client/AMQP$Tx$CommitOk;
+#txRollback()Lcom/rabbitmq/client/AMQP$Tx$RollbackOk;
+#confirmSelect()Lcom/rabbitmq/client/AMQP$Confirm$SelectOk;
+#getNextPublishSeqNo()J
+#waitForConfirms()Z
+#waitForConfirms(J)Z
+#waitForConfirmsOrDie()V
+#waitForConfirmsOrDie(J)V
+#asyncRpc(Lcom/rabbitmq/client/Method;)V
+#rpc(Lcom/rabbitmq/client/Method;)Lcom/rabbitmq/client/Command;
+#addShutdownListener(Lcom/rabbitmq/client/ShutdownListener;)V
+#removeShutdownListener(Lcom/rabbitmq/client/ShutdownListener;)V
+#getCloseReason()Lcom/rabbitmq/client/ShutdownSignalException;
+#notifyListeners()V
+#isOpen()Z
+#addRecoveryListener(Lcom/rabbitmq/client/RecoveryListener;)V
+#removeRecoveryListener(Lcom/rabbitmq/client/RecoveryListener;)V
+#automaticallyRecover(Lcom/rabbitmq/client/impl/recovery/AutorecoveringConnection;Lcom/rabbitmq/client/Connection;)V
@3.4.0
+#exchangeDeclareNoWait(Ljava/lang/String;Ljava/lang/String;ZZZLjava/util/Map;)V
+#exchangeDeleteNoWait(Ljava/lang/String;Z)V
+#exchangeBindNoWait(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#exchangeUnbindNoWait(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#queueDeclareNoWait(Ljava/lang/String;ZZZLjava/util/Map;)V
+#queueDeleteNoWait(Ljava/lang/String;ZZ)V
+#queueBindNoWait(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
@3.5.0
-#basicRecoverAsync(Z)V[deprecated]
@3.5.3
*#flowBlocked()Z[deprecated]
*#addFlowListener(Lcom/rabbitmq/client/FlowListener;)V[deprecated]
*#removeFlowListener(Lcom/rabbitmq/client/FlowListener;)Z[deprecated]
*#clearFlowListeners()V[deprecated]
@3.6.0
+#messageCount(Ljava/lang/String;)J
+#consumerCount(Ljava/lang/String;)J
@3.6.6
+#exchangeDeclare(Ljava/lang/String;Lcom/rabbitmq/client/BuiltinExchangeType;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDeclare(Ljava/lang/String;Lcom/rabbitmq/client/BuiltinExchangeType;Z)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDeclare(Ljava/lang/String;Lcom/rabbitmq/client/BuiltinExchangeType;ZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDeclare(Ljava/lang/String;Lcom/rabbitmq/client/BuiltinExchangeType;ZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Exchange$DeclareOk;
+#exchangeDeclareNoWait(Ljava/lang/String;Lcom/rabbitmq/client/BuiltinExchangeType;ZZZLjava/util/Map;)V
@4.0.1
+#toString()Ljava/lang/String;
@5.0.0
+#addReturnListener(Lcom/rabbitmq/client/ReturnCallback;)Lcom/rabbitmq/client/ReturnListener;
+#addConfirmListener(Lcom/rabbitmq/client/ConfirmCallback;Lcom/rabbitmq/client/ConfirmCallback;)Lcom/rabbitmq/client/ConfirmListener;
+#basicConsume(Ljava/lang/String;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/util/Map;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/util/Map;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/util/Map;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;ZZLjava/util/Map;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;ZZLjava/util/Map;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#basicConsume(Ljava/lang/String;ZLjava/lang/String;ZZLjava/util/Map;Lcom/rabbitmq/client/DeliverCallback;Lcom/rabbitmq/client/CancelCallback;Lcom/rabbitmq/client/ConsumerShutdownSignalCallback;)Ljava/lang/String;
+#asyncCompletableRpc(Lcom/rabbitmq/client/Method;)Ljava/util/concurrent/CompletableFuture;
-#flowBlocked()Z[deprecated]
-#addFlowListener(Lcom/rabbitmq/client/FlowListener;)V[deprecated]
-#removeFlowListener(Lcom/rabbitmq/client/FlowListener;)Z[deprecated]
-#clearFlowListeners()V[deprecated]
@5.12.0
+#deleteRecordedConsumer(Ljava/lang/String;)V

+###com/rabbitmq/client/MetricsCollector
@4.0.0
+#newConnection(Lcom/rabbitmq/client/Connection;)V
+#closeConnection(Lcom/rabbitmq/client/Connection;)V
+#newChannel(Lcom/rabbitmq/client/Channel;)V
+#closeChannel(Lcom/rabbitmq/client/Channel;)V
+#basicPublish(Lcom/rabbitmq/client/Channel;)V
+#consumedMessage(Lcom/rabbitmq/client/Channel;JZ)V
+#consumedMessage(Lcom/rabbitmq/client/Channel;JLjava/lang/String;)V
+#basicAck(Lcom/rabbitmq/client/Channel;JZ)V
+#basicNack(Lcom/rabbitmq/client/Channel;J)V
+#basicReject(Lcom/rabbitmq/client/Channel;J)V
+#basicConsume(Lcom/rabbitmq/client/Channel;Ljava/lang/String;Z)V
+#basicCancel(Lcom/rabbitmq/client/Channel;Ljava/lang/String;)V
@5.4.0
+#basicPublishFailure(Lcom/rabbitmq/client/Channel;Ljava/lang/Throwable;)V
+#basicPublishAck(Lcom/rabbitmq/client/Channel;JZ)V
+#basicPublishNack(Lcom/rabbitmq/client/Channel;JZ)V
+#basicPublishUnrouted(Lcom/rabbitmq/client/Channel;)V

+###com/rabbitmq/client/SslContextFactory
@5.0.0
+#create(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;

+###com/rabbitmq/client/SocketConfigurators
@4.8.0
+#<init>()V
+#defaultConfigurator()Lcom/rabbitmq/client/SocketConfigurators$AbstractSocketConfigurator;
+#disableNagleAlgorithm()Lcom/rabbitmq/client/SocketConfigurators$AbstractSocketConfigurator;
+#enableHostnameVerification()Lcom/rabbitmq/client/SocketConfigurators$AbstractSocketConfigurator;
+#builder()Lcom/rabbitmq/client/SocketConfigurators$Builder;
@5.0.0
-###com/rabbitmq/client/SocketConfigurators

+###com/rabbitmq/client/DefaultSaslConfig
@2.3.0
+#<init>(Lcom/rabbitmq/client/ConnectionFactory;)V
+#setAuthorizationId(Ljava/lang/String;)V
+#setMechanismProperties(Ljava/util/Map;)V
+#setCallbackHandler(Ljavax/security/auth/callback/CallbackHandler;)V
+#getSaslClient([Ljava/lang/String;)Ljavax/security/sasl/SaslClient;
@2.4.1
+#getSaslMechanism([Ljava/lang/String;)Lcom/rabbitmq/client/SaslMechanism;
-#<init>(Lcom/rabbitmq/client/ConnectionFactory;)V
-#setAuthorizationId(Ljava/lang/String;)V
-#setMechanismProperties(Ljava/util/Map;)V
-#setCallbackHandler(Ljavax/security/auth/callback/CallbackHandler;)V
-#getSaslClient([Ljava/lang/String;)Ljavax/security/sasl/SaslClient;

+###com/rabbitmq/client/FlowListener
@1.8.1
+#handleFlow(Z)V
@5.0.0
-###com/rabbitmq/client/FlowListener

+###com/rabbitmq/tools/Tracer$AsyncLogger
@2.6.0
+#<init>(Ljava/io/OutputStream;)V
+#<init>(Ljava/io/OutputStream;I)V
+#log(Ljava/lang/String;)V
+#start()Z
+#stop()Z
@4.0.0
-###com/rabbitmq/tools/Tracer$AsyncLogger

+###com/rabbitmq/tools/Tracer$Logger
@2.6.0
+#start()Z
+#stop()Z
+#log(Ljava/lang/String;)V
@4.0.0
-###com/rabbitmq/tools/Tracer$Logger

+###com/rabbitmq/client/ConnectionPostProcessors$Builder
@4.8.0
+#<init>()V
+#enableHostnameVerification(Ljavax/net/ssl/HostnameVerifier;)Lcom/rabbitmq/client/ConnectionPostProcessors$Builder;
+#add(Lcom/rabbitmq/client/ConnectionPostProcessor;)Lcom/rabbitmq/client/ConnectionPostProcessors$Builder;
+#build()Lcom/rabbitmq/client/ConnectionPostProcessor;
@5.0.0
-###com/rabbitmq/client/ConnectionPostProcessors$Builder

+###com/rabbitmq/client/impl/nio/DefaultByteBufferFactory
@4.9.0
+#<init>(Lcom/rabbitmq/client/impl/nio/DefaultByteBufferFactory$ByteBufferAllocator;)V
+#<init>()V
+#createReadBuffer(Lcom/rabbitmq/client/impl/nio/NioContext;)Ljava/nio/ByteBuffer;
+#createWriteBuffer(Lcom/rabbitmq/client/impl/nio/NioContext;)Ljava/nio/ByteBuffer;
+#createEncryptedReadBuffer(Lcom/rabbitmq/client/impl/nio/NioContext;)Ljava/nio/ByteBuffer;
+#createEncryptedWriteBuffer(Lcom/rabbitmq/client/impl/nio/NioContext;)Ljava/nio/ByteBuffer;
@5.0.0
-###com/rabbitmq/client/impl/nio/DefaultByteBufferFactory

+###com/rabbitmq/client/SocketConfigurators$AbstractSocketConfigurator
@4.8.0
+#<init>()V
+#andThen(Lcom/rabbitmq/client/SocketConfigurator;)Lcom/rabbitmq/client/SocketConfigurators$AbstractSocketConfigurator;
@5.0.0
-###com/rabbitmq/client/SocketConfigurators$AbstractSocketConfigurator

+###com/rabbitmq/client/RpcClient$RpcClientReplyHandler
@4.10.0
+#handle(Ljava/lang/Object;)Lcom/rabbitmq/client/RpcClient$Response;
@5.0.0
-###com/rabbitmq/client/RpcClient$RpcClientReplyHandler

+###com/rabbitmq/client/RpcClientParams
@4.10.0
+#<init>()V
+#getChannel()Lcom/rabbitmq/client/Channel;
+#channel(Lcom/rabbitmq/client/Channel;)Lcom/rabbitmq/client/RpcClientParams;
+#getExchange()Ljava/lang/String;
+#exchange(Ljava/lang/String;)Lcom/rabbitmq/client/RpcClientParams;
+#getRoutingKey()Ljava/lang/String;
+#routingKey(Ljava/lang/String;)Lcom/rabbitmq/client/RpcClientParams;
+#getReplyTo()Ljava/lang/String;
+#replyTo(Ljava/lang/String;)Lcom/rabbitmq/client/RpcClientParams;
+#getTimeout()I
+#timeout(I)Lcom/rabbitmq/client/RpcClientParams;
+#useMandatory(Z)Lcom/rabbitmq/client/RpcClientParams;
+#useMandatory()Lcom/rabbitmq/client/RpcClientParams;
+#shouldUseMandatory()Z
+#getReplyHandler()Lcom/rabbitmq/client/RpcClient$RpcClientReplyHandler;
+#replyHandler(Lcom/rabbitmq/client/RpcClient$RpcClientReplyHandler;)Lcom/rabbitmq/client/RpcClientParams;
@4.12.0
+#correlationIdSupplier(Lcom/rabbitmq/client/RpcClient$CorrelationIdSupplier;)Lcom/rabbitmq/client/RpcClientParams;
+#getCorrelationIdSupplier()Lcom/rabbitmq/client/RpcClient$CorrelationIdSupplier;
@5.0.0
-###com/rabbitmq/client/RpcClientParams

+###com/rabbitmq/client/UnroutableRpcRequestException
@4.10.0
+#<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/rabbitmq/client/AMQP$BasicProperties;[B)V
+#getReplyCode()I
+#getReplyText()Ljava/lang/String;
+#getExchange()Ljava/lang/String;
+#getRoutingKey()Ljava/lang/String;
+#getProperties()Lcom/rabbitmq/client/AMQP$BasicProperties;
+#getBody()[B
@5.0.0
-###com/rabbitmq/client/UnroutableRpcRequestException

+###com/rabbitmq/client/SocketChannelConfigurators$AbstractSocketChannelConfigurator
@4.8.0
+#<init>()V
+#andThen(Lcom/rabbitmq/client/SocketChannelConfigurator;)Lcom/rabbitmq/client/SocketChannelConfigurators$AbstractSocketChannelConfigurator;
@5.0.0
-###com/rabbitmq/client/SocketChannelConfigurators$AbstractSocketChannelConfigurator

+###com/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryCondition
@4.8.0
+#<init>()V
+#test(Lcom/rabbitmq/client/impl/recovery/RecordedEntity;Ljava/lang/Exception;)Z
+#and(Lcom/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryCondition;)Lcom/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryCondition;
+#negate(Lcom/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryCondition;)Lcom/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryCondition;
@5.0.0
-###com/rabbitmq/client/impl/recovery/DefaultRetryHandler$RetryCondition

+###com/rabbitmq/client/TrafficListener
@4.9.0
+#write(Lcom/rabbitmq/client/Command;)V
+#read(Lcom/rabbitmq/client/Command;)V
@5.0.0
-###com/rabbitmq/client/TrafficListener

+###com/rabbitmq/client/impl/nio/NioQueue
@4.9.0
+#offer(Lcom/rabbitmq/client/impl/nio/WriteRequest;)Z
+#size()I
+#poll()Lcom/rabbitmq/client/impl/nio/WriteRequest;
+#isEmpty()Z
@5.0.0
-###com/rabbitmq/client/impl/nio/NioQueue

+###com/rabbitmq/client/impl/TlsUtils
@4.11.0
+#<init>()V
+#logPeerCertificateInfo(Ljavax/net/ssl/SSLSession;)V
+#peerCertificateInfo(Ljava/security/cert/Certificate;Ljava/lang/String;)Ljava/lang/String;
+#extensionPrettyPrint(Ljava/lang/String;[BLjava/security/cert/X509Certificate;)Ljava/lang/String;
@4.12.0
+#stripCRLF(Ljava/lang/String;)Ljava/lang/String;
@5.0.0
-###com/rabbitmq/client/impl/TlsUtils

+###com/rabbitmq/client/ConnectionPostProcessors$AbstractConnectionPostProcessor
@4.8.0
+#<init>()V
+#andThen(Lcom/rabbitmq/client/ConnectionPostProcessor;)Lcom/rabbitmq/client/ConnectionPostProcessors$AbstractConnectionPostProcessor;
@5.0.0
-###com/rabbitmq/client/ConnectionPostProcessors$AbstractConnectionPostProcessor

+###com/rabbitmq/client/ConnectionPostProcessor
@4.8.0
+#postProcess(Lcom/rabbitmq/client/ConnectionContext;)V
@5.0.0
-###com/rabbitmq/client/ConnectionPostProcessor

+###com/rabbitmq/client/impl/nio/BlockingQueueNioQueue
@4.9.0
+#<init>(Ljava/util/concurrent/BlockingQueue;I)V
+#offer(Lcom/rabbitmq/client/impl/nio/WriteRequest;)Z
+#size()I
+#poll()Lcom/rabbitmq/client/impl/nio/WriteRequest;
+#isEmpty()Z
@5.0.0
-###com/rabbitmq/client/impl/nio/BlockingQueueNioQueue

+###com/rabbitmq/client/impl/nio/DefaultByteBufferFactory$ByteBufferAllocator
@4.9.0
+#allocate(I)Ljava/nio/ByteBuffer;
@5.0.0
-###com/rabbitmq/client/impl/nio/DefaultByteBufferFactory$ByteBufferAllocator

+###com/rabbitmq/client/impl/LogTrafficListener
@4.9.0
+#<init>()V
+#write(Lcom/rabbitmq/client/Command;)V
+#read(Lcom/rabbitmq/client/Command;)V
@5.0.0
-###com/rabbitmq/client/impl/LogTrafficListener

+###com/rabbitmq/client/impl/MicrometerMetricsCollector$MetricsCreator
@4.3.0
+#create(Lcom/rabbitmq/client/impl/MicrometerMetricsCollector$Metrics;)Ljava/lang/Object;
@5.0.0
-###com/rabbitmq/client/impl/MicrometerMetricsCollector$MetricsCreator

+###com/rabbitmq/client/ConnectionContext
@4.8.0
+#<init>(Ljava/net/Socket;Lcom/rabbitmq/client/Address;ZLjavax/net/ssl/SSLSession;)V
+#getSocket()Ljava/net/Socket;
+#getAddress()Lcom/rabbitmq/client/Address;
+#isSsl()Z
+#getSslSession()Ljavax/net/ssl/SSLSession;
@5.0.0
-###com/rabbitmq/client/ConnectionContext

+###com/rabbitmq/client/impl/nio/ByteBufferFactory
@4.9.0
+#createReadBuffer(Lcom/rabbitmq/client/impl/nio/NioContext;)Ljava/nio/ByteBuffer;
+#createWriteBuffer(Lcom/rabbitmq/client/impl/nio/NioContext;)Ljava/nio/ByteBuffer;
+#createEncryptedReadBuffer(Lcom/rabbitmq/client/impl/nio/NioContext;)Ljava/nio/ByteBuffer;
+#createEncryptedWriteBuffer(Lcom/rabbitmq/client/impl/nio/NioContext;)Ljava/nio/ByteBuffer;
@5.0.0
-###com/rabbitmq/client/impl/nio/ByteBufferFactory

+###com/rabbitmq/client/impl/nio/NioContext
@4.9.0
+#getNioParams()Lcom/rabbitmq/client/impl/nio/NioParams;
+#getSslEngine()Ljavax/net/ssl/SSLEngine;
@5.0.0
-###com/rabbitmq/client/impl/nio/NioContext

+###com/rabbitmq/client/ConnectionPostProcessors
@4.8.0
+#<init>()V
+#hostnameVerificationConnectionPostProcessor(Ljavax/net/ssl/HostnameVerifier;)Lcom/rabbitmq/client/ConnectionPostProcessors$AbstractConnectionPostProcessor;
+#builder()Lcom/rabbitmq/client/ConnectionPostProcessors$Builder;
@5.0.0
-###com/rabbitmq/client/ConnectionPostProcessors

+###com/rabbitmq/client/impl/nio/NioQueueFactory
@4.9.0
+#create(Lcom/rabbitmq/client/impl/nio/NioContext;)Lcom/rabbitmq/client/impl/nio/NioQueue;
@5.0.0
-###com/rabbitmq/client/impl/nio/NioQueueFactory

+###com/rabbitmq/client/SslEngineConfigurators$AbstractSslEngineConfigurator
@4.8.0
+#<init>()V
+#andThen(Lcom/rabbitmq/client/SslEngineConfigurator;)Lcom/rabbitmq/client/SslEngineConfigurators$AbstractSslEngineConfigurator;
@5.0.0
-###com/rabbitmq/client/SslEngineConfigurators$AbstractSslEngineConfigurator

+###com/rabbitmq/client/FileProperties
@1.7.2
+#getContentType()Ljava/lang/String;
+#getContentEncoding()Ljava/lang/String;
+#getHeaders()Ljava/util/Map;
+#getPriority()Ljava/lang/Integer;
+#getReplyTo()Ljava/lang/String;
+#getMessageId()Ljava/lang/String;
+#getFilename()Ljava/lang/String;
+#getTimestamp()Ljava/util/Date;
+#getClusterId()Ljava/lang/String;
+#setContentType(Ljava/lang/String;)V
+#setContentEncoding(Ljava/lang/String;)V
+#setHeaders(Ljava/util/Map;)V
+#setPriority(Ljava/lang/Integer;)V
+#setReplyTo(Ljava/lang/String;)V
+#setMessageId(Ljava/lang/String;)V
+#setFilename(Ljava/lang/String;)V
+#setTimestamp(Ljava/util/Date;)V
+#setClusterId(Ljava/lang/String;)V
@2.5.0
-###com/rabbitmq/client/FileProperties

+###com/rabbitmq/client/StreamProperties
@1.7.2
+#getContentType()Ljava/lang/String;
+#getContentEncoding()Ljava/lang/String;
+#getHeaders()Ljava/util/Map;
+#getPriority()Ljava/lang/Integer;
+#getTimestamp()Ljava/util/Date;
+#setContentType(Ljava/lang/String;)V
+#setContentEncoding(Ljava/lang/String;)V
+#setHeaders(Ljava/util/Map;)V
+#setPriority(Ljava/lang/Integer;)V
+#setTimestamp(Ljava/util/Date;)V
@2.5.0
-###com/rabbitmq/client/StreamProperties

+###com/rabbitmq/client/TestProperties
@1.7.2
@2.5.0
-###com/rabbitmq/client/TestProperties

+###com/rabbitmq/client/TunnelProperties
@1.7.2
+#getHeaders()Ljava/util/Map;
+#getProxyName()Ljava/lang/String;
+#getDataName()Ljava/lang/String;
+#getDurable()Ljava/lang/Integer;
+#getBroadcast()Ljava/lang/Integer;
+#setHeaders(Ljava/util/Map;)V
+#setProxyName(Ljava/lang/String;)V
+#setDataName(Ljava/lang/String;)V
+#setDurable(Ljava/lang/Integer;)V
+#setBroadcast(Ljava/lang/Integer;)V
@2.5.0
-###com/rabbitmq/client/TunnelProperties

+###com/rabbitmq/client/impl/AMQFileProperties
@1.7.2
+#<init>()V
+#clone()Ljava/lang/Object;
@2.5.0
-###com/rabbitmq/client/impl/AMQFileProperties

+###com/rabbitmq/client/impl/AMQStreamProperties
@1.7.2
+#<init>()V
+#clone()Ljava/lang/Object;
@2.5.0
-###com/rabbitmq/client/impl/AMQStreamProperties

+###com/rabbitmq/client/impl/AMQTestProperties
@1.7.2
+#<init>()V
@2.5.0
-###com/rabbitmq/client/impl/AMQTestProperties

+###com/rabbitmq/client/impl/AMQTunnelProperties
@1.7.2
+#<init>()V
+#clone()Ljava/lang/Object;
@2.5.0
-###com/rabbitmq/client/impl/AMQTunnelProperties

+###com/rabbitmq/client/impl/nio/ByteBufferInputStream
@4.0.0
+#<init>(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V
+#read()I
@4.4.0
-###com/rabbitmq/client/impl/nio/ByteBufferInputStream

+###com/rabbitmq/client/impl/nio/SslEngineByteBufferInputStream
@4.0.0
+#<init>(Ljavax/net/ssl/SSLEngine;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/channels/ReadableByteChannel;)V
+#read()I
@4.4.0
-###com/rabbitmq/client/impl/nio/SslEngineByteBufferInputStream

+###com/rabbitmq/client/impl/AMQImpl$Connection$UpdateSecretOk
@4.11.3
+#<init>()V
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@5.0.0
-###com/rabbitmq/client/impl/AMQImpl$Connection$UpdateSecretOk

+###com/rabbitmq/client/impl/DefaultCredentialsRefreshService
@5.8.0
+#<init>(Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/function/Function;Ljava/util/function/Function;)V
+#ratioRefreshDelayStrategy(D)Ljava/util/function/Function;
+#fixedDelayBeforeExpirationRefreshDelayStrategy(Ljava/time/Duration;)Ljava/util/function/Function;
+#fixedTimeApproachingExpirationStrategy(Ljava/time/Duration;)Ljava/util/function/Function;
+#register(Lcom/rabbitmq/client/impl/CredentialsProvider;Ljava/util/concurrent/Callable;)Ljava/lang/String;
+#unregister(Lcom/rabbitmq/client/impl/CredentialsProvider;Ljava/lang/String;)V
+#isApproachingExpiration(Ljava/time/Duration;)Z
+#close()V

+###com/rabbitmq/client/impl/RefreshProtectedCredentialsProvider
@5.8.0
+#<init>()V
+#getUsername()Ljava/lang/String;
+#getPassword()Ljava/lang/String;
+#getTimeBeforeExpiration()Ljava/time/Duration;
+#refresh()V

+###com/rabbitmq/client/AMQP$Connection$UpdateSecret
@4.11.3
+#getNewSecret()Lcom/rabbitmq/client/LongString;
+#getReason()Ljava/lang/String;
@5.0.0
-###com/rabbitmq/client/AMQP$Connection$UpdateSecret

+###com/rabbitmq/client/impl/OAuth2ClientCredentialsGrantCredentialsProvider$Token
@5.8.0
+#<init>(Ljava/lang/String;ILjava/time/Instant;)V
+#getAccess()Ljava/lang/String;
+#getExpiresIn()I
+#getReceivedAt()Ljava/time/Instant;
+#getTimeBeforeExpiration()Ljava/time/Duration;

+###com/rabbitmq/client/impl/OAuth2ClientCredentialsGrantCredentialsProvider$TlsConfiguration
@5.8.0
+#<init>(Lcom/rabbitmq/client/impl/OAuth2ClientCredentialsGrantCredentialsProvider$OAuth2ClientCredentialsGrantCredentialsProviderBuilder;)V
+#hostnameVerifier(Ljavax/net/ssl/HostnameVerifier;)Lcom/rabbitmq/client/impl/OAuth2ClientCredentialsGrantCredentialsProvider$TlsConfiguration;
+#sslSocketFactory(Ljavax/net/ssl/SSLSocketFactory;)Lcom/rabbitmq/client/impl/OAuth2ClientCredentialsGrantCredentialsProvider$TlsConfiguration;
+#sslContext(Ljavax/net/ssl/SSLContext;)Lcom/rabbitmq/client/impl/OAuth2ClientCredentialsGrantCredentialsProvider$TlsConfiguration;
+#dev()Lcom/rabbitmq/client/impl/OAuth2ClientCredentialsGrantCredentialsProvider$TlsConfiguration;
+#builder()Lcom/rabbitmq/client/impl/OAuth2ClientCredentialsGrantCredentialsProvider$OAuth2ClientCredentialsGrantCredentialsProviderBuilder;

+###com/rabbitmq/client/impl/AMQImpl$Connection$UpdateSecret
@4.11.3
+#getNewSecret()Lcom/rabbitmq/client/LongString;
+#getReason()Ljava/lang/String;
+#<init>(Lcom/rabbitmq/client/LongString;Ljava/lang/String;)V
+#<init>(Lcom/rabbitmq/client/impl/MethodArgumentReader;)V
+#protocolClassId()I
+#protocolMethodId()I
+#protocolMethodName()Ljava/lang/String;
+#hasContent()Z
+#visit(Lcom/rabbitmq/client/impl/AMQImpl$MethodVisitor;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#appendArgumentDebugStringTo(Ljava/lang/StringBuilder;)V
+#writeArgumentsTo(Lcom/rabbitmq/client/impl/MethodArgumentWriter;)V
@5.0.0
-###com/rabbitmq/client/impl/AMQImpl$Connection$UpdateSecret

+###com/rabbitmq/client/impl/CredentialsRefreshService
@5.8.0
+#register(Lcom/rabbitmq/client/impl/CredentialsProvider;Ljava/util/concurrent/Callable;)Ljava/lang/String;
+#unregister(Lcom/rabbitmq/client/impl/CredentialsProvider;Ljava/lang/String;)V
+#isApproachingExpiration(Ljava/time/Duration;)Z

+###com/rabbitmq/client/impl/OAuth2ClientCredentialsGrantCredentialsProvider$OAuth2ClientCredentialsGrantCredentialsProviderBuilder
@5.8.0
+#<init>()V
+#tokenEndpointUri(Ljava/lang/String;)Lcom/rabbitmq/client/impl/OAuth2ClientCredentialsGrantCredentialsProvider$OAuth2ClientCredentialsGrantCredentialsProviderBuilder;
+#clientId(Ljava/lang/String;)Lcom/rabbitmq/client/impl/OAuth2ClientCredentialsGrantCredentialsProvider$OAuth2ClientCredentialsGrantCredentialsProviderBuilder;
+#clientSecret(Ljava/lang/String;)Lcom/rabbitmq/client/impl/OAuth2ClientCredentialsGrantCredentialsProvider$OAuth2ClientCredentialsGrantCredentialsProviderBuilder;
+#grantType(Ljava/lang/String;)Lcom/rabbitmq/client/impl/OAuth2ClientCredentialsGrantCredentialsProvider$OAuth2ClientCredentialsGrantCredentialsProviderBuilder;
+#parameter(Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/impl/OAuth2ClientCredentialsGrantCredentialsProvider$OAuth2ClientCredentialsGrantCredentialsProviderBuilder;
+#connectionConfigurator(Ljava/util/function/Consumer;)Lcom/rabbitmq/client/impl/OAuth2ClientCredentialsGrantCredentialsProvider$OAuth2ClientCredentialsGrantCredentialsProviderBuilder;
+#tls()Lcom/rabbitmq/client/impl/OAuth2ClientCredentialsGrantCredentialsProvider$TlsConfiguration;
+#build()Lcom/rabbitmq/client/impl/OAuth2ClientCredentialsGrantCredentialsProvider;

+###com/rabbitmq/client/impl/OAuth2ClientCredentialsGrantCredentialsProvider
@5.8.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/util/function/Consumer;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/net/ssl/HostnameVerifier;Ljavax/net/ssl/SSLSocketFactory;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljavax/net/ssl/HostnameVerifier;Ljavax/net/ssl/SSLSocketFactory;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljavax/net/ssl/HostnameVerifier;Ljavax/net/ssl/SSLSocketFactory;Ljava/util/function/Consumer;)V
+#getUsername()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###com/rabbitmq/client/AMQP$Connection$UpdateSecret$Builder
@4.11.3
+#<init>()V
+#newSecret(Lcom/rabbitmq/client/LongString;)Lcom/rabbitmq/client/AMQP$Connection$UpdateSecret$Builder;
+#newSecret(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Connection$UpdateSecret$Builder;
+#reason(Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Connection$UpdateSecret$Builder;
+#build()Lcom/rabbitmq/client/AMQP$Connection$UpdateSecret;
@5.0.0
-###com/rabbitmq/client/AMQP$Connection$UpdateSecret$Builder

+###com/rabbitmq/client/impl/DefaultCredentialsRefreshService$DefaultCredentialsRefreshServiceBuilder
@5.8.0
+#<init>()V
+#scheduler(Ljava/util/concurrent/ScheduledThreadPoolExecutor;)Lcom/rabbitmq/client/impl/DefaultCredentialsRefreshService$DefaultCredentialsRefreshServiceBuilder;
+#refreshDelayStrategy(Ljava/util/function/Function;)Lcom/rabbitmq/client/impl/DefaultCredentialsRefreshService$DefaultCredentialsRefreshServiceBuilder;
+#approachingExpirationStrategy(Ljava/util/function/Function;)Lcom/rabbitmq/client/impl/DefaultCredentialsRefreshService$DefaultCredentialsRefreshServiceBuilder;
+#build()Lcom/rabbitmq/client/impl/DefaultCredentialsRefreshService;

+###com/rabbitmq/client/impl/OAuthTokenManagementException
@5.8.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V

+###com/rabbitmq/client/AMQP$Connection$UpdateSecretOk$Builder
@4.11.3
+#<init>()V
+#build()Lcom/rabbitmq/client/AMQP$Connection$UpdateSecretOk;
@5.0.0
-###com/rabbitmq/client/AMQP$Connection$UpdateSecretOk$Builder

+###com/rabbitmq/client/AMQP$Connection$UpdateSecretOk
@4.11.3
@5.0.0
-###com/rabbitmq/client/AMQP$Connection$UpdateSecretOk

+###com/rabbitmq/client/ResolvedInetAddress
@5.16.0
+#<init>(Ljava/lang/String;Ljava/net/InetAddress;I)V
+#toInetSocketAddress(I)Ljava/net/InetSocketAddress;

+###com/rabbitmq/client/impl/OpenTelemetryMetricsCollector
@5.16.0
+#<init>(Lio/opentelemetry/api/OpenTelemetry;)V
+#<init>(Lio/opentelemetry/api/OpenTelemetry;Ljava/lang/String;)V
+#<init>(Lio/opentelemetry/api/OpenTelemetry;Ljava/lang/String;Lio/opentelemetry/api/common/Attributes;)V
+#getConnections()Ljava/util/concurrent/atomic/AtomicLong;
+#getChannels()Ljava/util/concurrent/atomic/AtomicLong;

+###com/rabbitmq/client/impl/recovery/RecoveredQueueNameSupplier
@5.13.0
+#getNameToUseForRecovery(Lcom/rabbitmq/client/impl/recovery/RecordedQueue;)Ljava/lang/String;

+###com/rabbitmq/client/UsernamePasswordCallbackHandler
@2.3.0
+#<init>(Lcom/rabbitmq/client/ConnectionFactory;)V
+#handle([Ljavax/security/auth/callback/Callback;)V
@2.4.1
-###com/rabbitmq/client/UsernamePasswordCallbackHandler

+###com/rabbitmq/client/impl/CRDemoSaslClient$CRDemoSaslConfig
@2.3.0
+#<init>(Lcom/rabbitmq/client/ConnectionFactory;)V
+#getSaslClient([Ljava/lang/String;)Ljavax/security/sasl/SaslClient;
@2.4.1
-###com/rabbitmq/client/impl/CRDemoSaslClient$CRDemoSaslConfig

+###com/rabbitmq/client/impl/CRDemoSaslClient
@2.3.0
+#<init>(Ljavax/security/auth/callback/CallbackHandler;)V
+#getMechanismName()Ljava/lang/String;
+#hasInitialResponse()Z
+#evaluateChallenge([B)[B
+#isComplete()Z
+#unwrap([BII)[B
+#wrap([BII)[B
+#getNegotiatedProperty(Ljava/lang/String;)Ljava/lang/Object;
+#dispose()V
@2.4.1
-###com/rabbitmq/client/impl/CRDemoSaslClient

+###com/rabbitmq/client/RpcClient$CorrelationIdSupplier
@4.12.0
+#get()Ljava/lang/String;
@5.0.0
-###com/rabbitmq/client/RpcClient$CorrelationIdSupplier

+###com/rabbitmq/client/test/ssl/ConnectionFactoryDefaultTlsVersion
@3.6.4
+#<init>()V
+#testDefaultTlsVersionJdk16ShouldTakeFallback()V
+#testDefaultTlsVersionJdk17ShouldTakePrefered()V
+#testDefaultTlsVersionJdk18ShouldTakePrefered()V
@3.6.6
-###com/rabbitmq/client/test/ssl/ConnectionFactoryDefaultTlsVersion
