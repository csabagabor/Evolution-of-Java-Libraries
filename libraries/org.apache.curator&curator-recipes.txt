
+###org/apache/curator/framework/recipes/AfterConnectionEstablished
@2.6.0
+#execute(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/Runnable;)Ljava/util/concurrent/Future;

+###org/apache/curator/framework/recipes/atomic/AtomicStats
@2.0.0-incubating
+#<init>()V
+#getOptimisticTries()I
+#getPromotedLockTries()I
+#getOptimisticTimeMs()J
+#getPromotedTimeMs()J

+###org/apache/curator/framework/recipes/atomic/AtomicValue
@2.0.0-incubating
+#succeeded()Z
+#preValue()Ljava/lang/Object;
+#postValue()Ljava/lang/Object;
+#getStats()Lorg/apache/curator/framework/recipes/atomic/AtomicStats;

+###org/apache/curator/framework/recipes/atomic/CachedAtomicInteger
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/recipes/atomic/DistributedAtomicInteger;I)V
+#next()Lorg/apache/curator/framework/recipes/atomic/AtomicValue;

+###org/apache/curator/framework/recipes/atomic/CachedAtomicLong
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/recipes/atomic/DistributedAtomicLong;I)V
+#next()Lorg/apache/curator/framework/recipes/atomic/AtomicValue;

+###org/apache/curator/framework/recipes/atomic/DistributedAtomicInteger
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/curator/RetryPolicy;)V
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/curator/RetryPolicy;Lorg/apache/curator/framework/recipes/atomic/PromotedToLock;)V
+#get()Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#forceSet(Ljava/lang/Integer;)V
+#compareAndSet(Ljava/lang/Integer;Ljava/lang/Integer;)Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#trySet(Ljava/lang/Integer;)Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#increment()Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#decrement()Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#add(Ljava/lang/Integer;)Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#subtract(Ljava/lang/Integer;)Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#subtract(Ljava/lang/Object;)Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#add(Ljava/lang/Object;)Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#forceSet(Ljava/lang/Object;)V
+#trySet(Ljava/lang/Object;)Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#compareAndSet(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
@2.5.0
+#initialize(Ljava/lang/Integer;)Z
+#initialize(Ljava/lang/Object;)Z

+###org/apache/curator/framework/recipes/atomic/DistributedAtomicLong
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/curator/RetryPolicy;)V
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/curator/RetryPolicy;Lorg/apache/curator/framework/recipes/atomic/PromotedToLock;)V
+#get()Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#forceSet(Ljava/lang/Long;)V
+#compareAndSet(Ljava/lang/Long;Ljava/lang/Long;)Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#trySet(Ljava/lang/Long;)Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#increment()Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#decrement()Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#add(Ljava/lang/Long;)Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#subtract(Ljava/lang/Long;)Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#subtract(Ljava/lang/Object;)Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#add(Ljava/lang/Object;)Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#forceSet(Ljava/lang/Object;)V
+#trySet(Ljava/lang/Object;)Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#compareAndSet(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
@2.5.0
+#initialize(Ljava/lang/Long;)Z
+#initialize(Ljava/lang/Object;)Z

+###org/apache/curator/framework/recipes/atomic/DistributedAtomicNumber
@2.0.0-incubating
+#get()Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#compareAndSet(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#trySet(Ljava/lang/Object;)Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#forceSet(Ljava/lang/Object;)V
+#increment()Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#decrement()Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#add(Ljava/lang/Object;)Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#subtract(Ljava/lang/Object;)Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
@2.5.0
+#initialize(Ljava/lang/Object;)Z

+###org/apache/curator/framework/recipes/atomic/DistributedAtomicValue
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/curator/RetryPolicy;)V
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/curator/RetryPolicy;Lorg/apache/curator/framework/recipes/atomic/PromotedToLock;)V
+#get()Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#forceSet([B)V
+#compareAndSet([B[B)Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
+#trySet([B)Lorg/apache/curator/framework/recipes/atomic/AtomicValue;
@2.5.0
+#initialize([B)Z

+###org/apache/curator/framework/recipes/atomic/PromotedToLock$Builder
@2.0.0-incubating
+#build()Lorg/apache/curator/framework/recipes/atomic/PromotedToLock;
+#lockPath(Ljava/lang/String;)Lorg/apache/curator/framework/recipes/atomic/PromotedToLock$Builder;
+#retryPolicy(Lorg/apache/curator/RetryPolicy;)Lorg/apache/curator/framework/recipes/atomic/PromotedToLock$Builder;
+#timeout(JLjava/util/concurrent/TimeUnit;)Lorg/apache/curator/framework/recipes/atomic/PromotedToLock$Builder;

+###org/apache/curator/framework/recipes/atomic/PromotedToLock
@2.0.0-incubating
+#builder()Lorg/apache/curator/framework/recipes/atomic/PromotedToLock$Builder;

+###org/apache/curator/framework/recipes/barriers/DistributedBarrier
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V
+#setBarrier()V
+#removeBarrier()V
+#waitOnBarrier()V
+#waitOnBarrier(JLjava/util/concurrent/TimeUnit;)Z

+###org/apache/curator/framework/recipes/barriers/DistributedDoubleBarrier
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;I)V
+#enter()V
+#enter(JLjava/util/concurrent/TimeUnit;)Z
+#leave()V
+#leave(JLjava/util/concurrent/TimeUnit;)Z

+###org/apache/curator/framework/recipes/cache/ChildData
@2.0.0-incubating
+#compareTo(Lorg/apache/curator/framework/recipes/cache/ChildData;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getPath()Ljava/lang/String;
+#getStat()Lorg/apache/zookeeper/data/Stat;
+#getData()[B
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@2.4.2
+#<init>(Ljava/lang/String;Lorg/apache/zookeeper/data/Stat;[B)V

+###org/apache/curator/framework/recipes/cache/NodeCache
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Z)V
+#start()V
+#start(Z)V
+#close()V
+#getListenable()Lorg/apache/curator/framework/listen/ListenerContainer;
+#rebuild()V
+#getCurrentData()Lorg/apache/curator/framework/recipes/cache/ChildData;
@4.0.0
+#getClient()Lorg/apache/curator/framework/CuratorFramework;
+#getPath()Ljava/lang/String;
@5.0.0
+#getListenable()Lorg/apache/curator/framework/listen/Listenable;
-#getListenable()Lorg/apache/curator/framework/listen/ListenerContainer;

+###org/apache/curator/framework/recipes/cache/NodeCacheListener
@2.0.0-incubating
+#nodeChanged()V

+###org/apache/curator/framework/recipes/cache/PathChildrenCache$StartMode
@2.0.0-incubating
+#values()[Lorg/apache/curator/framework/recipes/cache/PathChildrenCache$StartMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/curator/framework/recipes/cache/PathChildrenCache$StartMode;

+###org/apache/curator/framework/recipes/cache/PathChildrenCache
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/curator/framework/recipes/cache/PathChildrenCacheMode;)V
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/curator/framework/recipes/cache/PathChildrenCacheMode;Ljava/util/concurrent/ThreadFactory;)V
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Z)V
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;ZLjava/util/concurrent/ThreadFactory;)V
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;ZZLjava/util/concurrent/ThreadFactory;)V
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;ZZLjava/util/concurrent/ExecutorService;)V
+#start()V
+#start(Z)V
+#start(Lorg/apache/curator/framework/recipes/cache/PathChildrenCache$StartMode;)V
+#rebuild()V
+#rebuildNode(Ljava/lang/String;)V
+#close()V
+#getListenable()Lorg/apache/curator/framework/listen/ListenerContainer;
+#getCurrentData()Ljava/util/List;
+#getCurrentData(Ljava/lang/String;)Lorg/apache/curator/framework/recipes/cache/ChildData;
+#clearDataBytes(Ljava/lang/String;)V
+#clearDataBytes(Ljava/lang/String;I)Z
+#clearAndRefresh()V
+#clear()V
@2.3.0
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;ZZLorg/apache/curator/utils/CloseableExecutorService;)V
@2.9.0
*#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/curator/framework/recipes/cache/PathChildrenCacheMode;)V[deprecated]
*#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/curator/framework/recipes/cache/PathChildrenCacheMode;Ljava/util/concurrent/ThreadFactory;)V[deprecated]
*#start(Z)V[deprecated]
@5.0.0
+#getListenable()Lorg/apache/curator/framework/listen/Listenable;
-#getListenable()Lorg/apache/curator/framework/listen/ListenerContainer;

+###org/apache/curator/framework/recipes/cache/PathChildrenCacheEvent$Type
@2.0.0-incubating
+#values()[Lorg/apache/curator/framework/recipes/cache/PathChildrenCacheEvent$Type;
+#valueOf(Ljava/lang/String;)Lorg/apache/curator/framework/recipes/cache/PathChildrenCacheEvent$Type;

+###org/apache/curator/framework/recipes/cache/PathChildrenCacheEvent
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/recipes/cache/PathChildrenCacheEvent$Type;Lorg/apache/curator/framework/recipes/cache/ChildData;)V
+#getType()Lorg/apache/curator/framework/recipes/cache/PathChildrenCacheEvent$Type;
+#getData()Lorg/apache/curator/framework/recipes/cache/ChildData;
+#getInitialData()Ljava/util/List;
+#toString()Ljava/lang/String;

+###org/apache/curator/framework/recipes/cache/PathChildrenCacheListener
@2.0.0-incubating
+#childEvent(Lorg/apache/curator/framework/CuratorFramework;Lorg/apache/curator/framework/recipes/cache/PathChildrenCacheEvent;)V

+###org/apache/curator/framework/recipes/cache/PathChildrenCacheMode
@2.0.0-incubating
+#values()[Lorg/apache/curator/framework/recipes/cache/PathChildrenCacheMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/curator/framework/recipes/cache/PathChildrenCacheMode;

+###org/apache/curator/framework/recipes/leader/CancelLeadershipException
@2.3.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/curator/framework/recipes/leader/LeaderLatch$CloseMode
@2.4.1
+#values()[Lorg/apache/curator/framework/recipes/leader/LeaderLatch$CloseMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/curator/framework/recipes/leader/LeaderLatch$CloseMode;

+###org/apache/curator/framework/recipes/leader/LeaderLatch$State
@2.0.1-incubating
+#values()[Lorg/apache/curator/framework/recipes/leader/LeaderLatch$State;
+#valueOf(Ljava/lang/String;)Lorg/apache/curator/framework/recipes/leader/LeaderLatch$State;

+###org/apache/curator/framework/recipes/leader/LeaderLatch
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Ljava/lang/String;)V
+#start()V
+#close()V
+#await()V
+#await(JLjava/util/concurrent/TimeUnit;)Z
+#getId()Ljava/lang/String;
+#getParticipants()Ljava/util/Collection;
+#getLeader()Lorg/apache/curator/framework/recipes/leader/Participant;
+#hasLeadership()Z
@2.0.1-incubating
+#addListener(Lorg/apache/curator/framework/recipes/leader/LeaderLatchListener;)V
+#addListener(Lorg/apache/curator/framework/recipes/leader/LeaderLatchListener;Ljava/util/concurrent/Executor;)V
+#removeListener(Lorg/apache/curator/framework/recipes/leader/LeaderLatchListener;)V
+#getState()Lorg/apache/curator/framework/recipes/leader/LeaderLatch$State;
@2.4.1
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Ljava/lang/String;Lorg/apache/curator/framework/recipes/leader/LeaderLatch$CloseMode;)V
+#close(Lorg/apache/curator/framework/recipes/leader/LeaderLatch$CloseMode;)V
@4.3.0
+#getOurPath()Ljava/lang/String;
@5.3.0
+#getLastPathIsLeader()Ljava/lang/String;

+###org/apache/curator/framework/recipes/leader/LeaderLatchListener
@2.0.1-incubating
+#isLeader()V
+#notLeader()V

+###org/apache/curator/framework/recipes/leader/LeaderSelector
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/curator/framework/recipes/leader/LeaderSelectorListener;)V
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/Executor;Lorg/apache/curator/framework/recipes/leader/LeaderSelectorListener;)V
+#autoRequeue()V
+#setId(Ljava/lang/String;)V
+#getId()Ljava/lang/String;
+#start()V
+#requeue()Z
+#close()V
+#getParticipants()Ljava/util/Collection;
+#getLeader()Lorg/apache/curator/framework/recipes/leader/Participant;
+#hasLeadership()Z
@2.3.0
*#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/Executor;Lorg/apache/curator/framework/recipes/leader/LeaderSelectorListener;)V[deprecated]
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Ljava/util/concurrent/ExecutorService;Lorg/apache/curator/framework/recipes/leader/LeaderSelectorListener;)V
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/curator/utils/CloseableExecutorService;Lorg/apache/curator/framework/recipes/leader/LeaderSelectorListener;)V
+#interruptLeadership()V
@2.4.2
+#internalRequeue()Z
@2.9.0
-#internalRequeue()Z

+###org/apache/curator/framework/recipes/leader/LeaderSelectorListener
@2.0.0-incubating
+#takeLeadership(Lorg/apache/curator/framework/CuratorFramework;)V

+###org/apache/curator/framework/recipes/leader/LeaderSelectorListenerAdapter
@2.3.0
+#<init>()V
+#stateChanged(Lorg/apache/curator/framework/CuratorFramework;Lorg/apache/curator/framework/state/ConnectionState;)V

+###org/apache/curator/framework/recipes/leader/Participant
@2.0.0-incubating
+#<init>(Ljava/lang/String;Z)V
+#getId()Ljava/lang/String;
+#isLeader()Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/curator/framework/recipes/locks/ChildReaper
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/curator/framework/recipes/locks/Reaper$Mode;)V
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/curator/framework/recipes/locks/Reaper$Mode;I)V
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/curator/framework/recipes/locks/Reaper$Mode;Ljava/util/concurrent/ScheduledExecutorService;I)V
+#start()V
+#close()V
@2.4.2
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/curator/framework/recipes/locks/Reaper$Mode;Ljava/util/concurrent/ScheduledExecutorService;ILjava/lang/String;)V
@2.7.1
+#addPath(Ljava/lang/String;)Lorg/apache/curator/framework/recipes/locks/ChildReaper;
+#removePath(Ljava/lang/String;)Z
@2.8.0
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/curator/framework/recipes/locks/Reaper$Mode;Ljava/util/concurrent/ScheduledExecutorService;ILjava/lang/String;Ljava/util/Set;)V
+#setMaxChildren(I)V
+#newExecutorService()Ljava/util/concurrent/ScheduledExecutorService;
@5.0.0
-###org/apache/curator/framework/recipes/locks/ChildReaper

+###org/apache/curator/framework/recipes/locks/InterProcessLock
@2.0.0-incubating
+#acquire()V
+#acquire(JLjava/util/concurrent/TimeUnit;)Z
+#release()V
+#isAcquiredInThisProcess()Z

+###org/apache/curator/framework/recipes/locks/InterProcessMultiLock
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/util/List;)V
+#<init>(Ljava/util/List;)V
+#acquire()V
+#acquire(JLjava/util/concurrent/TimeUnit;)Z
+#release()V
+#isAcquiredInThisProcess()Z

+###org/apache/curator/framework/recipes/locks/InterProcessMutex
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V
+#acquire()V
+#acquire(JLjava/util/concurrent/TimeUnit;)Z
+#isAcquiredInThisProcess()Z
+#release()V
+#getParticipantNodes()Ljava/util/Collection;
+#makeRevocable(Lorg/apache/curator/framework/recipes/locks/RevocationListener;)V
+#makeRevocable(Lorg/apache/curator/framework/recipes/locks/RevocationListener;Ljava/util/concurrent/Executor;)V
@2.7.0
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/curator/framework/recipes/locks/LockInternalsDriver;)V
@4.0.0
+#isOwnedByCurrentThread()Z

+###org/apache/curator/framework/recipes/locks/InterProcessReadWriteLock
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V
+#readLock()Lorg/apache/curator/framework/recipes/locks/InterProcessMutex;
+#writeLock()Lorg/apache/curator/framework/recipes/locks/InterProcessMutex;
@2.7.1
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;[B)V
@5.2.1
+#readLock()Lorg/apache/curator/framework/recipes/locks/InterProcessReadWriteLock$ReadLock;
+#writeLock()Lorg/apache/curator/framework/recipes/locks/InterProcessReadWriteLock$WriteLock;
-#readLock()Lorg/apache/curator/framework/recipes/locks/InterProcessMutex;
-#writeLock()Lorg/apache/curator/framework/recipes/locks/InterProcessMutex;

+###org/apache/curator/framework/recipes/locks/InterProcessSemaphore
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;I)V
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/curator/framework/recipes/shared/SharedCountReader;)V
+#returnAll(Ljava/util/Collection;)V
+#returnLease(Lorg/apache/curator/framework/recipes/locks/Lease;)V
+#acquire()Lorg/apache/curator/framework/recipes/locks/Lease;
+#acquire(I)Ljava/util/Collection;
+#acquire(JLjava/util/concurrent/TimeUnit;)Lorg/apache/curator/framework/recipes/locks/Lease;
+#acquire(IJLjava/util/concurrent/TimeUnit;)Ljava/util/Collection;

+###org/apache/curator/framework/recipes/locks/InterProcessSemaphoreMutex
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V
+#acquire()V
+#acquire(JLjava/util/concurrent/TimeUnit;)Z
+#release()V
+#isAcquiredInThisProcess()Z

+###org/apache/curator/framework/recipes/locks/InterProcessSemaphoreV2
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;I)V
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Lorg/apache/curator/framework/recipes/shared/SharedCountReader;)V
+#setNodeData([B)V
+#getParticipantNodes()Ljava/util/Collection;
+#returnAll(Ljava/util/Collection;)V
+#returnLease(Lorg/apache/curator/framework/recipes/locks/Lease;)V
+#acquire()Lorg/apache/curator/framework/recipes/locks/Lease;
+#acquire(I)Ljava/util/Collection;
+#acquire(JLjava/util/concurrent/TimeUnit;)Lorg/apache/curator/framework/recipes/locks/Lease;
+#acquire(IJLjava/util/concurrent/TimeUnit;)Ljava/util/Collection;

+###org/apache/curator/framework/recipes/locks/Lease
@2.0.0-incubating
+#close()V
+#getData()[B
@2.12.0
+#getNodeName()Ljava/lang/String;
@3.0.0
-#getNodeName()Ljava/lang/String;
@3.3.0
+#getNodeName()Ljava/lang/String;

+###org/apache/curator/framework/recipes/locks/LockInternals
@2.0.0-incubating
+#clean()V
+#getParticipantNodes(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Ljava/lang/String;Lorg/apache/curator/framework/recipes/locks/LockInternalsSorter;)Ljava/util/Collection;
+#getSortedChildren(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Ljava/lang/String;Lorg/apache/curator/framework/recipes/locks/LockInternalsSorter;)Ljava/util/List;
+#getSortedChildren(Ljava/lang/String;Lorg/apache/curator/framework/recipes/locks/LockInternalsSorter;Ljava/util/List;)Ljava/util/List;

+###org/apache/curator/framework/recipes/locks/LockInternalsSorter
@2.0.0-incubating
+#fixForSorting(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

+###org/apache/curator/framework/recipes/locks/Reaper$Mode
@2.0.0-incubating
+#values()[Lorg/apache/curator/framework/recipes/locks/Reaper$Mode;
+#valueOf(Ljava/lang/String;)Lorg/apache/curator/framework/recipes/locks/Reaper$Mode;
@5.0.0
-###org/apache/curator/framework/recipes/locks/Reaper$Mode

+###org/apache/curator/framework/recipes/locks/Reaper
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFramework;)V
+#<init>(Lorg/apache/curator/framework/CuratorFramework;I)V
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/util/concurrent/ScheduledExecutorService;I)V
+#addPath(Ljava/lang/String;)V
+#addPath(Ljava/lang/String;Lorg/apache/curator/framework/recipes/locks/Reaper$Mode;)V
+#removePath(Ljava/lang/String;)Z
+#start()V
+#close()V
@2.4.2
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/util/concurrent/ScheduledExecutorService;ILjava/lang/String;)V
+#newExecutorService()Ljava/util/concurrent/ScheduledExecutorService;
@2.8.0
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/util/concurrent/ScheduledExecutorService;ILorg/apache/curator/framework/recipes/leader/LeaderLatch;)V
@5.0.0
-###org/apache/curator/framework/recipes/locks/Reaper

+###org/apache/curator/framework/recipes/locks/Revocable
@2.0.0-incubating
+#makeRevocable(Lorg/apache/curator/framework/recipes/locks/RevocationListener;)V
+#makeRevocable(Lorg/apache/curator/framework/recipes/locks/RevocationListener;Ljava/util/concurrent/Executor;)V

+###org/apache/curator/framework/recipes/locks/RevocationListener
@2.0.0-incubating
+#revocationRequested(Ljava/lang/Object;)V

+###org/apache/curator/framework/recipes/locks/Revoker
@2.0.0-incubating
+#attemptRevoke(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V

+###org/apache/curator/framework/recipes/locks/StandardLockInternalsDriver
@2.0.0-incubating
+#<init>()V
+#getsTheLock(Lorg/apache/curator/framework/CuratorFramework;Ljava/util/List;Ljava/lang/String;I)Lorg/apache/curator/framework/recipes/locks/PredicateResults;
+#fixForSorting(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#standardFixForSorting(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@2.7.0
+#createsTheLock(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;[B)Ljava/lang/String;

+###org/apache/curator/framework/recipes/nodes/PersistentEphemeralNode$Mode
@2.1.0-incubating
+#values()[Lorg/apache/curator/framework/recipes/nodes/PersistentEphemeralNode$Mode;
+#valueOf(Ljava/lang/String;)Lorg/apache/curator/framework/recipes/nodes/PersistentEphemeralNode$Mode;

+###org/apache/curator/framework/recipes/nodes/PersistentEphemeralNode
@2.1.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Lorg/apache/curator/framework/recipes/nodes/PersistentEphemeralNode$Mode;Ljava/lang/String;[B)V
+#start()V
+#waitForInitialCreate(JLjava/util/concurrent/TimeUnit;)Z
+#close()V
+#getActualPath()Ljava/lang/String;
+#setData([B)V
@2.9.1
+#getData()[B
@2.10.0
-#start()V
-#waitForInitialCreate(JLjava/util/concurrent/TimeUnit;)Z
-#close()V
-#getActualPath()Ljava/lang/String;
-#setData([B)V
-#getData()[B
@3.0.0
+#start()V
+#waitForInitialCreate(JLjava/util/concurrent/TimeUnit;)Z
+#close()V
+#getActualPath()Ljava/lang/String;
+#setData([B)V
@3.1.0
-#start()V
-#waitForInitialCreate(JLjava/util/concurrent/TimeUnit;)Z
-#close()V
-#getActualPath()Ljava/lang/String;
-#setData([B)V

+###org/apache/curator/framework/recipes/queue/BlockingQueueConsumer
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/state/ConnectionStateListener;)V
+#<init>(Lorg/apache/curator/framework/state/ConnectionStateListener;I)V
+#<init>(Lorg/apache/curator/framework/state/ConnectionStateListener;Ljava/util/concurrent/BlockingQueue;)V
+#consumeMessage(Ljava/lang/Object;)V
+#getItems()Ljava/util/List;
+#size()I
+#take()Ljava/lang/Object;
+#take(ILjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#drainTo(Ljava/util/Collection;)I
+#stateChanged(Lorg/apache/curator/framework/CuratorFramework;Lorg/apache/curator/framework/state/ConnectionState;)V

+###org/apache/curator/framework/recipes/queue/DistributedDelayQueue
@2.0.0-incubating
+#start()V
+#close()V
+#put(Ljava/lang/Object;J)V
+#put(Ljava/lang/Object;JILjava/util/concurrent/TimeUnit;)Z
+#putMulti(Lorg/apache/curator/framework/recipes/queue/MultiItem;J)V
+#putMulti(Lorg/apache/curator/framework/recipes/queue/MultiItem;JILjava/util/concurrent/TimeUnit;)Z
+#setErrorMode(Lorg/apache/curator/framework/recipes/queue/ErrorMode;)V
+#flushPuts(JLjava/util/concurrent/TimeUnit;)Z
+#getPutListenerContainer()Lorg/apache/curator/framework/listen/ListenerContainer;
+#getLastMessageCount()I
@5.0.0
+#getPutListenerContainer()Lorg/apache/curator/framework/listen/Listenable;
-#getPutListenerContainer()Lorg/apache/curator/framework/listen/ListenerContainer;

+###org/apache/curator/framework/recipes/queue/DistributedIdQueue
@2.0.0-incubating
+#start()V
+#close()V
+#getPutListenerContainer()Lorg/apache/curator/framework/listen/ListenerContainer;
+#setErrorMode(Lorg/apache/curator/framework/recipes/queue/ErrorMode;)V
+#flushPuts(JLjava/util/concurrent/TimeUnit;)Z
+#getLastMessageCount()I
+#put(Ljava/lang/Object;Ljava/lang/String;)V
+#put(Ljava/lang/Object;Ljava/lang/String;ILjava/util/concurrent/TimeUnit;)Z
+#remove(Ljava/lang/String;)I
@5.0.0
+#getPutListenerContainer()Lorg/apache/curator/framework/listen/Listenable;
-#getPutListenerContainer()Lorg/apache/curator/framework/listen/ListenerContainer;

+###org/apache/curator/framework/recipes/queue/DistributedPriorityQueue
@2.0.0-incubating
+#start()V
+#close()V
+#put(Ljava/lang/Object;I)V
+#put(Ljava/lang/Object;IILjava/util/concurrent/TimeUnit;)Z
+#putMulti(Lorg/apache/curator/framework/recipes/queue/MultiItem;I)V
+#putMulti(Lorg/apache/curator/framework/recipes/queue/MultiItem;IILjava/util/concurrent/TimeUnit;)Z
+#setErrorMode(Lorg/apache/curator/framework/recipes/queue/ErrorMode;)V
+#flushPuts(JLjava/util/concurrent/TimeUnit;)Z
+#getPutListenerContainer()Lorg/apache/curator/framework/listen/ListenerContainer;
+#getLastMessageCount()I
@5.0.0
+#getPutListenerContainer()Lorg/apache/curator/framework/listen/Listenable;
-#getPutListenerContainer()Lorg/apache/curator/framework/listen/ListenerContainer;

+###org/apache/curator/framework/recipes/queue/DistributedQueue$ProcessType
@2.0.0-incubating
+#values()[Lorg/apache/curator/framework/recipes/queue/DistributedQueue$ProcessType;
+#valueOf(Ljava/lang/String;)Lorg/apache/curator/framework/recipes/queue/DistributedQueue$ProcessType;

+###org/apache/curator/framework/recipes/queue/DistributedQueue
@2.0.0-incubating
+#start()V
+#close()V
+#getPutListenerContainer()Lorg/apache/curator/framework/listen/ListenerContainer;
+#setErrorMode(Lorg/apache/curator/framework/recipes/queue/ErrorMode;)V
+#flushPuts(JLjava/util/concurrent/TimeUnit;)Z
+#put(Ljava/lang/Object;)V
+#put(Ljava/lang/Object;ILjava/util/concurrent/TimeUnit;)Z
+#putMulti(Lorg/apache/curator/framework/recipes/queue/MultiItem;)V
+#putMulti(Lorg/apache/curator/framework/recipes/queue/MultiItem;ILjava/util/concurrent/TimeUnit;)Z
+#getLastMessageCount()I
@5.0.0
+#getPutListenerContainer()Lorg/apache/curator/framework/listen/Listenable;
-#getPutListenerContainer()Lorg/apache/curator/framework/listen/ListenerContainer;

+###org/apache/curator/framework/recipes/queue/ErrorMode
@2.0.0-incubating
+#values()[Lorg/apache/curator/framework/recipes/queue/ErrorMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/curator/framework/recipes/queue/ErrorMode;

+###org/apache/curator/framework/recipes/queue/MultiItem
@2.0.0-incubating
+#nextItem()Ljava/lang/Object;

+###org/apache/curator/framework/recipes/queue/QueueAllocator
@2.0.0-incubating
+#allocateQueue(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;)Lorg/apache/curator/framework/recipes/queue/QueueBase;

+###org/apache/curator/framework/recipes/queue/QueueBase
@2.0.0-incubating
+#start()V
+#getPutListenerContainer()Lorg/apache/curator/framework/listen/ListenerContainer;
+#setErrorMode(Lorg/apache/curator/framework/recipes/queue/ErrorMode;)V
+#flushPuts(JLjava/util/concurrent/TimeUnit;)Z
+#getLastMessageCount()I
@5.0.0
+#getPutListenerContainer()Lorg/apache/curator/framework/listen/Listenable;
-#getPutListenerContainer()Lorg/apache/curator/framework/listen/ListenerContainer;

+###org/apache/curator/framework/recipes/queue/QueueBuilder
@2.0.0-incubating
+#builder(Lorg/apache/curator/framework/CuratorFramework;Lorg/apache/curator/framework/recipes/queue/QueueConsumer;Lorg/apache/curator/framework/recipes/queue/QueueSerializer;Ljava/lang/String;)Lorg/apache/curator/framework/recipes/queue/QueueBuilder;
+#buildQueue()Lorg/apache/curator/framework/recipes/queue/DistributedQueue;
+#buildIdQueue()Lorg/apache/curator/framework/recipes/queue/DistributedIdQueue;
+#buildPriorityQueue(I)Lorg/apache/curator/framework/recipes/queue/DistributedPriorityQueue;
+#buildDelayQueue()Lorg/apache/curator/framework/recipes/queue/DistributedDelayQueue;
+#threadFactory(Ljava/util/concurrent/ThreadFactory;)Lorg/apache/curator/framework/recipes/queue/QueueBuilder;
+#executor(Ljava/util/concurrent/Executor;)Lorg/apache/curator/framework/recipes/queue/QueueBuilder;
+#lockPath(Ljava/lang/String;)Lorg/apache/curator/framework/recipes/queue/QueueBuilder;
+#maxItems(I)Lorg/apache/curator/framework/recipes/queue/QueueBuilder;
+#putInBackground(Z)Lorg/apache/curator/framework/recipes/queue/QueueBuilder;
+#finalFlushTime(ILjava/util/concurrent/TimeUnit;)Lorg/apache/curator/framework/recipes/queue/QueueBuilder;

+###org/apache/curator/framework/recipes/queue/QueueConsumer
@2.0.0-incubating
+#consumeMessage(Ljava/lang/Object;)V

+###org/apache/curator/framework/recipes/queue/QueuePutListener
@2.0.0-incubating
+#putCompleted(Ljava/lang/Object;)V
+#putMultiCompleted(Lorg/apache/curator/framework/recipes/queue/MultiItem;)V

+###org/apache/curator/framework/recipes/queue/QueueSafety
@2.0.0-incubating
+#<init>(Ljava/lang/String;Lorg/apache/curator/framework/recipes/queue/QueueConsumer;)V

+###org/apache/curator/framework/recipes/queue/QueueSerializer
@2.0.0-incubating
+#serialize(Ljava/lang/Object;)[B
+#deserialize([B)Ljava/lang/Object;

+###org/apache/curator/framework/recipes/queue/QueueSharder
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Lorg/apache/curator/framework/recipes/queue/QueueAllocator;Ljava/lang/String;Ljava/lang/String;Lorg/apache/curator/framework/recipes/queue/QueueSharderPolicies;)V
+#start()V
+#close()V
+#getQueue()Lorg/apache/curator/framework/recipes/queue/QueueBase;
+#getShardQty()I
+#getQueuePaths()Ljava/util/Collection;

+###org/apache/curator/framework/recipes/queue/QueueSharderPolicies$Builder
@2.0.0-incubating
+#newQueueThreshold(I)Lorg/apache/curator/framework/recipes/queue/QueueSharderPolicies$Builder;
+#thresholdCheckMs(I)Lorg/apache/curator/framework/recipes/queue/QueueSharderPolicies$Builder;
+#maxQueues(I)Lorg/apache/curator/framework/recipes/queue/QueueSharderPolicies$Builder;
+#threadFactory(Ljava/util/concurrent/ThreadFactory;)Lorg/apache/curator/framework/recipes/queue/QueueSharderPolicies$Builder;
+#build()Lorg/apache/curator/framework/recipes/queue/QueueSharderPolicies;

+###org/apache/curator/framework/recipes/queue/QueueSharderPolicies
@2.0.0-incubating
+#builder()Lorg/apache/curator/framework/recipes/queue/QueueSharderPolicies$Builder;

+###org/apache/curator/framework/recipes/queue/SimpleDistributedQueue
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V
+#element()[B
+#remove()[B
+#take()[B
+#offer([B)Z
+#peek()[B
+#poll(JLjava/util/concurrent/TimeUnit;)[B
+#poll()[B

+###org/apache/curator/framework/recipes/shared/SharedCount
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;I)V
+#getCount()I
+#setCount(I)V
+#trySetCount(I)Z
+#addListener(Lorg/apache/curator/framework/recipes/shared/SharedCountListener;)V
+#addListener(Lorg/apache/curator/framework/recipes/shared/SharedCountListener;Ljava/util/concurrent/Executor;)V
+#removeListener(Lorg/apache/curator/framework/recipes/shared/SharedCountListener;)V
+#start()V
+#close()V
+#removeListener(Ljava/lang/Object;)V
+#addListener(Ljava/lang/Object;Ljava/util/concurrent/Executor;)V
+#addListener(Ljava/lang/Object;)V
@2.7.0
+#getVersionedValue()Lorg/apache/curator/framework/recipes/shared/VersionedValue;
*#trySetCount(I)Z[deprecated]
+#trySetCount(Lorg/apache/curator/framework/recipes/shared/VersionedValue;I)Z

+###org/apache/curator/framework/recipes/shared/SharedCountListener
@2.0.0-incubating
+#countHasChanged(Lorg/apache/curator/framework/recipes/shared/SharedCountReader;I)V

+###org/apache/curator/framework/recipes/shared/SharedCountReader
@2.0.0-incubating
+#getCount()I
@2.7.0
+#getVersionedValue()Lorg/apache/curator/framework/recipes/shared/VersionedValue;

+###org/apache/curator/framework/recipes/shared/SharedValue
@2.0.0-incubating
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;[B)V
+#getValue()[B
+#setValue([B)V
+#trySetValue([B)Z
+#getListenable()Lorg/apache/curator/framework/listen/ListenerContainer;
+#start()V
+#close()V
@2.7.0
+#getVersionedValue()Lorg/apache/curator/framework/recipes/shared/VersionedValue;
*#trySetValue([B)Z[deprecated]
+#trySetValue(Lorg/apache/curator/framework/recipes/shared/VersionedValue;[B)Z
@5.0.0
+#getListenable()Lorg/apache/curator/framework/listen/Listenable;
-#getListenable()Lorg/apache/curator/framework/listen/ListenerContainer;

+###org/apache/curator/framework/recipes/shared/SharedValueListener
@2.0.0-incubating
+#valueHasChanged(Lorg/apache/curator/framework/recipes/shared/SharedValueReader;[B)V

+###org/apache/curator/framework/recipes/shared/SharedValueReader
@2.0.0-incubating
+#getValue()[B
+#getListenable()Lorg/apache/curator/framework/listen/ListenerContainer;
@2.7.0
+#getVersionedValue()Lorg/apache/curator/framework/recipes/shared/VersionedValue;
@5.0.0
+#getListenable()Lorg/apache/curator/framework/listen/Listenable;
-#getListenable()Lorg/apache/curator/framework/listen/ListenerContainer;

+###org/apache/curator/framework/recipes/cache/DefaultTreeCacheSelector
@2.10.0
+#<init>()V
+#traverseChildren(Ljava/lang/String;)Z
+#acceptChild(Ljava/lang/String;)Z
@3.0.0
-###org/apache/curator/framework/recipes/cache/DefaultTreeCacheSelector

+###org/apache/curator/framework/recipes/cache/TreeCache$Builder
@2.7.0
+#build()Lorg/apache/curator/framework/recipes/cache/TreeCache;
+#setCacheData(Z)Lorg/apache/curator/framework/recipes/cache/TreeCache$Builder;
+#setDataIsCompressed(Z)Lorg/apache/curator/framework/recipes/cache/TreeCache$Builder;
+#setExecutor(Ljava/util/concurrent/ThreadFactory;)Lorg/apache/curator/framework/recipes/cache/TreeCache$Builder;
+#setExecutor(Ljava/util/concurrent/ExecutorService;)Lorg/apache/curator/framework/recipes/cache/TreeCache$Builder;
+#setExecutor(Lorg/apache/curator/utils/CloseableExecutorService;)Lorg/apache/curator/framework/recipes/cache/TreeCache$Builder;
+#setMaxDepth(I)Lorg/apache/curator/framework/recipes/cache/TreeCache$Builder;
@2.9.0
+#setCreateParentNodes(Z)Lorg/apache/curator/framework/recipes/cache/TreeCache$Builder;
@2.10.0
+#setSelector(Lorg/apache/curator/framework/recipes/cache/TreeCacheSelector;)Lorg/apache/curator/framework/recipes/cache/TreeCache$Builder;
@2.11.1
-#setExecutor(Lorg/apache/curator/utils/CloseableExecutorService;)Lorg/apache/curator/framework/recipes/cache/TreeCache$Builder;
@3.0.0
+#setExecutor(Lorg/apache/curator/utils/CloseableExecutorService;)Lorg/apache/curator/framework/recipes/cache/TreeCache$Builder;
-#setSelector(Lorg/apache/curator/framework/recipes/cache/TreeCacheSelector;)Lorg/apache/curator/framework/recipes/cache/TreeCache$Builder;
@3.1.0
+#setSelector(Lorg/apache/curator/framework/recipes/cache/TreeCacheSelector;)Lorg/apache/curator/framework/recipes/cache/TreeCache$Builder;
@3.2.1
-#setExecutor(Lorg/apache/curator/utils/CloseableExecutorService;)Lorg/apache/curator/framework/recipes/cache/TreeCache$Builder;
@4.1.0
+#disableZkWatches(Z)Lorg/apache/curator/framework/recipes/cache/TreeCache$Builder;

+###org/apache/curator/framework/recipes/cache/TreeCache
@2.7.0
+#newBuilder(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;)Lorg/apache/curator/framework/recipes/cache/TreeCache$Builder;
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;)V
+#start()Lorg/apache/curator/framework/recipes/cache/TreeCache;
+#close()V
+#getListenable()Lorg/apache/curator/framework/listen/Listenable;
+#getCurrentChildren(Ljava/lang/String;)Ljava/util/Map;
+#getCurrentData(Ljava/lang/String;)Lorg/apache/curator/framework/recipes/cache/ChildData;
@2.11.0
+#getUnhandledErrorListenable()Lorg/apache/curator/framework/listen/Listenable;
@3.0.0
-#getUnhandledErrorListenable()Lorg/apache/curator/framework/listen/Listenable;
@3.2.0
+#getUnhandledErrorListenable()Lorg/apache/curator/framework/listen/Listenable;
@5.0.0
+#iterator()Ljava/util/Iterator;
+#size()I

+###org/apache/curator/framework/recipes/cache/TreeCacheEvent$Type
@2.7.0
+#values()[Lorg/apache/curator/framework/recipes/cache/TreeCacheEvent$Type;
+#valueOf(Ljava/lang/String;)Lorg/apache/curator/framework/recipes/cache/TreeCacheEvent$Type;

+###org/apache/curator/framework/recipes/cache/TreeCacheEvent
@2.7.0
+#<init>(Lorg/apache/curator/framework/recipes/cache/TreeCacheEvent$Type;Lorg/apache/curator/framework/recipes/cache/ChildData;)V
+#getType()Lorg/apache/curator/framework/recipes/cache/TreeCacheEvent$Type;
+#getData()Lorg/apache/curator/framework/recipes/cache/ChildData;
+#toString()Ljava/lang/String;
@5.0.0
+#<init>(Lorg/apache/curator/framework/recipes/cache/TreeCacheEvent$Type;Lorg/apache/curator/framework/recipes/cache/ChildData;Lorg/apache/curator/framework/recipes/cache/ChildData;)V
+#getOldData()Lorg/apache/curator/framework/recipes/cache/ChildData;

+###org/apache/curator/framework/recipes/cache/TreeCacheListener
@2.7.0
+#childEvent(Lorg/apache/curator/framework/CuratorFramework;Lorg/apache/curator/framework/recipes/cache/TreeCacheEvent;)V

+###org/apache/curator/framework/recipes/cache/TreeCacheSelector
@2.10.0
+#traverseChildren(Ljava/lang/String;)Z
+#acceptChild(Ljava/lang/String;)Z
@3.0.0
-###org/apache/curator/framework/recipes/cache/TreeCacheSelector

+###org/apache/curator/framework/recipes/locks/LockInternalsDriver
@2.7.0
+#getsTheLock(Lorg/apache/curator/framework/CuratorFramework;Ljava/util/List;Ljava/lang/String;I)Lorg/apache/curator/framework/recipes/locks/PredicateResults;
+#createsTheLock(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;[B)Ljava/lang/String;

+###org/apache/curator/framework/recipes/locks/Locker
@3.0.0
+#<init>(Lorg/apache/curator/framework/recipes/locks/InterProcessLock;JLjava/util/concurrent/TimeUnit;)V
+#<init>(Lorg/apache/curator/framework/recipes/locks/InterProcessLock;)V
+#close()V

+###org/apache/curator/framework/recipes/locks/PredicateResults
@2.7.0
+#<init>(Ljava/lang/String;Z)V
+#getPathToWatch()Ljava/lang/String;
+#getsTheLock()Z

+###org/apache/curator/framework/recipes/nodes/GroupMember
@2.9.1
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Ljava/lang/String;[B)V
+#start()V
+#setThisData([B)V
+#close()V
+#getCurrentMembers()Ljava/util/Map;
+#idFromPath(Ljava/lang/String;)Ljava/lang/String;
@3.0.0
-###org/apache/curator/framework/recipes/nodes/GroupMember

+###org/apache/curator/framework/recipes/nodes/PersistentNode
@2.10.0
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Lorg/apache/zookeeper/CreateMode;ZLjava/lang/String;[B)V
+#start()V
+#waitForInitialCreate(JLjava/util/concurrent/TimeUnit;)Z
+#close()V
+#getActualPath()Ljava/lang/String;
+#setData([B)V
+#getData()[B
@3.0.0
-###org/apache/curator/framework/recipes/nodes/PersistentNode

+###org/apache/curator/framework/recipes/nodes/PersistentNodeListener
@4.0.0
+#nodeCreated(Ljava/lang/String;)V

+###org/apache/curator/framework/recipes/nodes/PersistentTtlNode
@4.0.0
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;J[B)V
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/String;J[BLjava/lang/String;I)V
+#start()V
+#waitForInitialCreate(JLjava/util/concurrent/TimeUnit;)Z
+#setData([B)V
+#getData()[B
+#close()V
@5.3.0
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;J[BZ)V
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/String;J[BLjava/lang/String;IZ)V

+###org/apache/curator/framework/recipes/shared/VersionedValue
@2.7.0
+#getVersion()I
+#getValue()Ljava/lang/Object;

+###org/apache/curator/framework/recipes/cache/CuratorCache$Options
@5.0.0
+#values()[Lorg/apache/curator/framework/recipes/cache/CuratorCache$Options;
+#valueOf(Ljava/lang/String;)Lorg/apache/curator/framework/recipes/cache/CuratorCache$Options;

+###org/apache/curator/framework/recipes/cache/CuratorCache
@5.0.0
+#build(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;[Lorg/apache/curator/framework/recipes/cache/CuratorCache$Options;)Lorg/apache/curator/framework/recipes/cache/CuratorCache;
+#builder(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;)Lorg/apache/curator/framework/recipes/cache/CuratorCacheBuilder;
+#bridgeBuilder(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;)Lorg/apache/curator/framework/recipes/cache/CuratorCacheBridgeBuilder;
+#start()V
+#close()V
+#listenable()Lorg/apache/curator/framework/listen/Listenable;
+#get(Ljava/lang/String;)Ljava/util/Optional;
+#size()I
+#stream()Ljava/util/stream/Stream;

+###org/apache/curator/framework/recipes/cache/CuratorCacheAccessor
@5.0.0
+#get(Ljava/lang/String;)Ljava/util/Optional;
+#size()I
+#stream()Ljava/util/stream/Stream;
+#parentPathFilter(Ljava/lang/String;)Ljava/util/function/Predicate;

+###org/apache/curator/framework/recipes/cache/CuratorCacheBridge
@5.0.0
+#isCuratorCache()Z

+###org/apache/curator/framework/recipes/cache/CuratorCacheBridgeBuilder
@5.0.0
+#withOptions([Lorg/apache/curator/framework/recipes/cache/CuratorCache$Options;)Lorg/apache/curator/framework/recipes/cache/CuratorCacheBridgeBuilder;
+#withDataNotCached()Lorg/apache/curator/framework/recipes/cache/CuratorCacheBridgeBuilder;
+#withExecutorService(Ljava/util/concurrent/ExecutorService;)Lorg/apache/curator/framework/recipes/cache/CuratorCacheBridgeBuilder;
+#build()Lorg/apache/curator/framework/recipes/cache/CuratorCacheBridge;

+###org/apache/curator/framework/recipes/cache/CuratorCacheBuilder
@5.0.0
+#withOptions([Lorg/apache/curator/framework/recipes/cache/CuratorCache$Options;)Lorg/apache/curator/framework/recipes/cache/CuratorCacheBuilder;
+#withStorage(Lorg/apache/curator/framework/recipes/cache/CuratorCacheStorage;)Lorg/apache/curator/framework/recipes/cache/CuratorCacheBuilder;
+#withExceptionHandler(Ljava/util/function/Consumer;)Lorg/apache/curator/framework/recipes/cache/CuratorCacheBuilder;
+#build()Lorg/apache/curator/framework/recipes/cache/CuratorCache;

+###org/apache/curator/framework/recipes/cache/CuratorCacheListener$Type
@5.0.0
+#values()[Lorg/apache/curator/framework/recipes/cache/CuratorCacheListener$Type;
+#valueOf(Ljava/lang/String;)Lorg/apache/curator/framework/recipes/cache/CuratorCacheListener$Type;

+###org/apache/curator/framework/recipes/cache/CuratorCacheListener
@5.0.0
+#event(Lorg/apache/curator/framework/recipes/cache/CuratorCacheListener$Type;Lorg/apache/curator/framework/recipes/cache/ChildData;Lorg/apache/curator/framework/recipes/cache/ChildData;)V
+#initialized()V
+#builder()Lorg/apache/curator/framework/recipes/cache/CuratorCacheListenerBuilder;

+###org/apache/curator/framework/recipes/cache/CuratorCacheListenerBuilder$ChangeListener
@5.0.0
+#event(Lorg/apache/curator/framework/recipes/cache/ChildData;Lorg/apache/curator/framework/recipes/cache/ChildData;)V

+###org/apache/curator/framework/recipes/cache/CuratorCacheListenerBuilder
@5.0.0
+#forAll(Lorg/apache/curator/framework/recipes/cache/CuratorCacheListener;)Lorg/apache/curator/framework/recipes/cache/CuratorCacheListenerBuilder;
+#forCreates(Ljava/util/function/Consumer;)Lorg/apache/curator/framework/recipes/cache/CuratorCacheListenerBuilder;
+#forChanges(Lorg/apache/curator/framework/recipes/cache/CuratorCacheListenerBuilder$ChangeListener;)Lorg/apache/curator/framework/recipes/cache/CuratorCacheListenerBuilder;
+#forCreatesAndChanges(Lorg/apache/curator/framework/recipes/cache/CuratorCacheListenerBuilder$ChangeListener;)Lorg/apache/curator/framework/recipes/cache/CuratorCacheListenerBuilder;
+#forDeletes(Ljava/util/function/Consumer;)Lorg/apache/curator/framework/recipes/cache/CuratorCacheListenerBuilder;
+#forInitialized(Ljava/lang/Runnable;)Lorg/apache/curator/framework/recipes/cache/CuratorCacheListenerBuilder;
+#forPathChildrenCache(Lorg/apache/curator/framework/CuratorFramework;Lorg/apache/curator/framework/recipes/cache/PathChildrenCacheListener;)Lorg/apache/curator/framework/recipes/cache/CuratorCacheListenerBuilder;
+#forTreeCache(Lorg/apache/curator/framework/CuratorFramework;Lorg/apache/curator/framework/recipes/cache/TreeCacheListener;)Lorg/apache/curator/framework/recipes/cache/CuratorCacheListenerBuilder;
+#forNodeCache(Lorg/apache/curator/framework/recipes/cache/NodeCacheListener;)Lorg/apache/curator/framework/recipes/cache/CuratorCacheListenerBuilder;
+#afterInitialized()Lorg/apache/curator/framework/recipes/cache/CuratorCacheListenerBuilder;
+#build()Lorg/apache/curator/framework/recipes/cache/CuratorCacheListener;
@5.1.0
+#forPathChildrenCache(Ljava/lang/String;Lorg/apache/curator/framework/CuratorFramework;Lorg/apache/curator/framework/recipes/cache/PathChildrenCacheListener;)Lorg/apache/curator/framework/recipes/cache/CuratorCacheListenerBuilder;
-#forPathChildrenCache(Lorg/apache/curator/framework/CuratorFramework;Lorg/apache/curator/framework/recipes/cache/PathChildrenCacheListener;)Lorg/apache/curator/framework/recipes/cache/CuratorCacheListenerBuilder;

+###org/apache/curator/framework/recipes/cache/CuratorCacheStorage
@5.0.0
+#standard()Lorg/apache/curator/framework/recipes/cache/CuratorCacheStorage;
+#dataNotCached()Lorg/apache/curator/framework/recipes/cache/CuratorCacheStorage;
+#put(Lorg/apache/curator/framework/recipes/cache/ChildData;)Ljava/util/Optional;
+#remove(Ljava/lang/String;)Ljava/util/Optional;
+#clear()V
+#get(Ljava/lang/String;)Ljava/util/Optional;
+#size()I
+#stream()Ljava/util/stream/Stream;

+###org/apache/curator/framework/recipes/watch/PersistentWatcher
@5.0.0
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;Z)V
+#start()V
+#close()V
+#getListenable()Lorg/apache/curator/framework/listen/Listenable;
+#getResetListenable()Lorg/apache/curator/framework/listen/Listenable;

+###org/apache/curator/framework/recipes/locks/InterProcessReadWriteLock$ReadLock
@5.2.1
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;[BLorg/apache/curator/framework/recipes/locks/InterProcessReadWriteLock$WriteLock;)V

+###org/apache/curator/framework/recipes/locks/InterProcessReadWriteLock$WriteLock
@5.2.1
+#<init>(Lorg/apache/curator/framework/CuratorFramework;Ljava/lang/String;[B)V
