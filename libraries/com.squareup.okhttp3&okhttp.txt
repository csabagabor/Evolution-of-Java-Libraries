
+###okhttp3/Call$Factory
@3.0.0-RC1
+#newCall(Lokhttp3/Request;)Lokhttp3/Call;
@5.0.0-alpha.4
-###okhttp3/Call$Factory

+###okhttp3/Dns
@3.0.0-RC1
+#lookup(Ljava/lang/String;)Ljava/util/List;
@5.0.0-alpha.4
-###okhttp3/Dns

+###okhttp3/Challenge
@3.0.0-RC1
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#scheme()Ljava/lang/String;
+#realm()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.9.0
+#withCharset(Ljava/nio/charset/Charset;)Lokhttp3/Challenge;
+#charset()Ljava/nio/charset/Charset;
@3.12.0
+#<init>(Ljava/lang/String;Ljava/util/Map;)V
+#authParams()Ljava/util/Map;
@4.0.0-alpha02
+#-deprecated_scheme()Ljava/lang/String;
+#-deprecated_authParams()Ljava/util/Map;
+#-deprecated_realm()Ljava/lang/String;
+#-deprecated_charset()Ljava/nio/charset/Charset;
@5.0.0-alpha.4
-###okhttp3/Challenge

+###okhttp3/internal/cache/CacheInterceptor
@3.4.0-RC1
+#<init>(Lokhttp3/internal/cache/InternalCache;)V
+#intercept(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;
@4.0.0-alpha01
+#getCache$okhttp()Lokhttp3/internal/cache/InternalCache;
@4.0.0-alpha02
+#getCache$okhttp()Lokhttp3/Cache;
+#<init>(Lokhttp3/Cache;)V
-#getCache$okhttp()Lokhttp3/internal/cache/InternalCache;
-#<init>(Lokhttp3/internal/cache/InternalCache;)V
@5.0.0-alpha.4
-###okhttp3/internal/cache/CacheInterceptor

+###okhttp3/internal/cache/DiskLruCache$Snapshot
@3.4.0-RC1
+#key()Ljava/lang/String;
+#edit()Lokhttp3/internal/cache/DiskLruCache$Editor;
+#getSource(I)Lokio/Source;
+#getLength(I)J
+#close()V
@4.0.0-alpha01
+#<init>(Lokhttp3/internal/cache/DiskLruCache;Ljava/lang/String;JLjava/util/List;[J)V
@5.0.0-alpha.4
-###okhttp3/internal/cache/DiskLruCache$Snapshot

+###okhttp3/internal/http2/Http2
@3.5.0
@4.0.0-alpha01
+#frameLog(ZIIII)Ljava/lang/String;
+#formatFlags(II)Ljava/lang/String;
@4.8.0
+#formattedType$okhttp(I)Ljava/lang/String;
@5.0.0-alpha.4
-###okhttp3/internal/http2/Http2

+###okhttp3/internal/http2/StreamResetException
@3.5.0
+#<init>(Lokhttp3/internal/http2/ErrorCode;)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/StreamResetException

+###okhttp3/internal/http2/Header
@3.5.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Lokio/ByteString;Ljava/lang/String;)V
+#<init>(Lokio/ByteString;Lokio/ByteString;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@4.0.0-alpha01
+#component1()Lokio/ByteString;
+#component2()Lokio/ByteString;
+#copy(Lokio/ByteString;Lokio/ByteString;)Lokhttp3/internal/http2/Header;
+#copy$default(Lokhttp3/internal/http2/Header;Lokio/ByteString;Lokio/ByteString;ILjava/lang/Object;)Lokhttp3/internal/http2/Header;
@5.0.0-alpha.4
-###okhttp3/internal/http2/Header

+###okhttp3/internal/http2/Http2Connection
@3.5.0
+#getProtocol()Lokhttp3/Protocol;
+#openStreamCount()I
+#maxConcurrentStreams()I
+#pushStream(ILjava/util/List;Z)Lokhttp3/internal/http2/Http2Stream;
+#newStream(Ljava/util/List;Z)Lokhttp3/internal/http2/Http2Stream;
+#writeData(IZLokio/Buffer;J)V
+#ping()Lokhttp3/internal/http2/Ping;
+#flush()V
+#shutdown(Lokhttp3/internal/http2/ErrorCode;)V
+#close()V
+#start()V
+#setSettings(Lokhttp3/internal/http2/Settings;)V
+#isShutdown()Z
@3.10.0
-#ping()Lokhttp3/internal/http2/Ping;
@3.12.7
+#isHealthy(J)Z
-#isShutdown()Z
@3.13.0
+#isShutdown()Z
-#getProtocol()Lokhttp3/Protocol;
-#isHealthy(J)Z
@3.14.5
+#isHealthy(J)Z
-#isShutdown()Z
@4.0.0-alpha01
+#getClient$okhttp()Z
+#getListener$okhttp()Lokhttp3/internal/http2/Http2Connection$Listener;
+#getStreams$okhttp()Ljava/util/Map;
+#getConnectionName$okhttp()Ljava/lang/String;
+#getLastGoodStreamId$okhttp()I
+#setLastGoodStreamId$okhttp(I)V
+#getNextStreamId$okhttp()I
+#setNextStreamId$okhttp(I)V
+#isShutdown()Z
+#setShutdown$okhttp(Z)V
+#getPushObserver$okhttp()Lokhttp3/internal/http2/PushObserver;
+#getOkHttpSettings()Lokhttp3/internal/http2/Settings;
+#getPeerSettings()Lokhttp3/internal/http2/Settings;
+#getUnacknowledgedBytesRead()J
+#getBytesLeftInWriteWindow()J
+#setBytesLeftInWriteWindow$okhttp(J)V
+#getReceivedInitialPeerSettings$okhttp()Z
+#setReceivedInitialPeerSettings$okhttp(Z)V
+#getSocket$okhttp()Ljava/net/Socket;
+#getWriter()Lokhttp3/internal/http2/Http2Writer;
+#getReaderRunnable()Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;
+#getCurrentPushRequests$okhttp()Ljava/util/Set;
+#getStream(I)Lokhttp3/internal/http2/Http2Stream;
+#removeStream$okhttp(I)Lokhttp3/internal/http2/Http2Stream;
+#updateConnectionFlowControl$okhttp(J)V
+#writeHeaders$okhttp(IZLjava/util/List;)V
+#writeSynResetLater$okhttp(ILokhttp3/internal/http2/ErrorCode;)V
+#writeSynReset$okhttp(ILokhttp3/internal/http2/ErrorCode;)V
+#writeWindowUpdateLater$okhttp(IJ)V
+#writePing(ZII)V
+#writePingAndAwaitPong()V
+#awaitPong()V
+#close$okhttp(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V
+#start(Z)V
+#start$default(Lokhttp3/internal/http2/Http2Connection;ZILjava/lang/Object;)V
+#pushedStream$okhttp(I)Z
+#pushRequestLater$okhttp(ILjava/util/List;)V
+#pushHeadersLater$okhttp(ILjava/util/List;Z)V
+#pushDataLater$okhttp(ILokio/BufferedSource;IZ)V
+#pushResetLater$okhttp(ILokhttp3/internal/http2/ErrorCode;)V
+#<init>(Lokhttp3/internal/http2/Http2Connection$Builder;)V
+#access$getListenerExecutor$cp()Ljava/util/concurrent/ThreadPoolExecutor;
+#access$getWriterExecutor$p(Lokhttp3/internal/http2/Http2Connection;)Ljava/util/concurrent/ScheduledThreadPoolExecutor;
+#access$failConnection(Lokhttp3/internal/http2/Http2Connection;Ljava/io/IOException;)V
+#access$getAwaitingPong$p(Lokhttp3/internal/http2/Http2Connection;)Z
+#access$setAwaitingPong$p(Lokhttp3/internal/http2/Http2Connection;Z)V
-#isHealthy(J)Z
@4.0.0-alpha02
+#access$getPushObserver$p(Lokhttp3/internal/http2/Http2Connection;)Lokhttp3/internal/http2/PushObserver;
+#access$getCurrentPushRequests$p(Lokhttp3/internal/http2/Http2Connection;)Ljava/util/Set;
-#getPushObserver$okhttp()Lokhttp3/internal/http2/PushObserver;
-#getCurrentPushRequests$okhttp()Ljava/util/Set;
@4.2.0
+#getReadBytesTotal()J
+#getReadBytesAcknowledged()J
+#getWriteBytesTotal()J
+#getWriteBytesMaximum()J
+#access$getWriteBytesMaximum$p(Lokhttp3/internal/http2/Http2Connection;)J
+#access$setWriteBytesMaximum$p(Lokhttp3/internal/http2/Http2Connection;J)V
-#getUnacknowledgedBytesRead()J
-#getBytesLeftInWriteWindow()J
-#setBytesLeftInWriteWindow$okhttp(J)V
-#getReceivedInitialPeerSettings$okhttp()Z
-#setReceivedInitialPeerSettings$okhttp(Z)V
@4.3.0
+#setPeerSettings(Lokhttp3/internal/http2/Settings;)V
+#writePing()V
+#isHealthy(J)Z
+#sendDegradedPingLater$okhttp()V
+#access$isShutdown$p(Lokhttp3/internal/http2/Http2Connection;)Z
+#access$setShutdown$p(Lokhttp3/internal/http2/Http2Connection;Z)V
+#access$getTaskRunner$p(Lokhttp3/internal/http2/Http2Connection;)Lokhttp3/internal/concurrent/TaskRunner;
+#access$getWriterQueue$p(Lokhttp3/internal/http2/Http2Connection;)Lokhttp3/internal/concurrent/TaskQueue;
+#access$getSettingsListenerQueue$p(Lokhttp3/internal/http2/Http2Connection;)Lokhttp3/internal/concurrent/TaskQueue;
+#access$getIntervalPongsReceived$p(Lokhttp3/internal/http2/Http2Connection;)J
+#access$setIntervalPongsReceived$p(Lokhttp3/internal/http2/Http2Connection;J)V
+#access$getDegradedPongsReceived$p(Lokhttp3/internal/http2/Http2Connection;)J
+#access$setDegradedPongsReceived$p(Lokhttp3/internal/http2/Http2Connection;J)V
+#access$getAwaitPongsReceived$p(Lokhttp3/internal/http2/Http2Connection;)J
+#access$setAwaitPongsReceived$p(Lokhttp3/internal/http2/Http2Connection;J)V
+#access$getIntervalPingsSent$p(Lokhttp3/internal/http2/Http2Connection;)J
+#access$setIntervalPingsSent$p(Lokhttp3/internal/http2/Http2Connection;J)V
+#access$getDEFAULT_SETTINGS$cp()Lokhttp3/internal/http2/Settings;
-#isShutdown()Z
-#setShutdown$okhttp(Z)V
-#maxConcurrentStreams()I
-#access$getListenerExecutor$cp()Ljava/util/concurrent/ThreadPoolExecutor;
-#access$getWriterExecutor$p(Lokhttp3/internal/http2/Http2Connection;)Ljava/util/concurrent/ScheduledThreadPoolExecutor;
-#access$getAwaitingPong$p(Lokhttp3/internal/http2/Http2Connection;)Z
-#access$setAwaitingPong$p(Lokhttp3/internal/http2/Http2Connection;Z)V
@4.5.0-RC1
+#start(ZLokhttp3/internal/concurrent/TaskRunner;)V
+#start$default(Lokhttp3/internal/http2/Http2Connection;ZLokhttp3/internal/concurrent/TaskRunner;ILjava/lang/Object;)V
-#start$default(Lokhttp3/internal/http2/Http2Connection;ZILjava/lang/Object;)V
@4.10.0
-#access$getWriteBytesMaximum$p(Lokhttp3/internal/http2/Http2Connection;)J
@5.0.0-alpha.1
+#access$getWriteBytesMaximum$p(Lokhttp3/internal/http2/Http2Connection;)J
@5.0.0-alpha.3
-#access$getWriteBytesMaximum$p(Lokhttp3/internal/http2/Http2Connection;)J
@5.0.0-alpha.4
-###okhttp3/internal/http2/Http2Connection

+###okhttp3/internal/http/RealInterceptorChain
@3.4.0-RC1
+#<init>(Ljava/util/List;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http/HttpStream;Lokhttp3/Connection;ILokhttp3/Request;)V
+#connection()Lokhttp3/Connection;
+#streamAllocation()Lokhttp3/internal/connection/StreamAllocation;
+#httpStream()Lokhttp3/internal/http/HttpStream;
+#request()Lokhttp3/Request;
+#proceed(Lokhttp3/Request;)Lokhttp3/Response;
+#proceed(Lokhttp3/Request;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http/HttpStream;Lokhttp3/Connection;)Lokhttp3/Response;
@3.5.0
+#<init>(Ljava/util/List;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http/HttpCodec;Lokhttp3/Connection;ILokhttp3/Request;)V
+#httpStream()Lokhttp3/internal/http/HttpCodec;
+#proceed(Lokhttp3/Request;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http/HttpCodec;Lokhttp3/Connection;)Lokhttp3/Response;
-#<init>(Ljava/util/List;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http/HttpStream;Lokhttp3/Connection;ILokhttp3/Request;)V
-#httpStream()Lokhttp3/internal/http/HttpStream;
-#proceed(Lokhttp3/Request;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http/HttpStream;Lokhttp3/Connection;)Lokhttp3/Response;
@3.7.0
+#<init>(Ljava/util/List;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http/HttpCodec;Lokhttp3/internal/connection/RealConnection;ILokhttp3/Request;)V
+#proceed(Lokhttp3/Request;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http/HttpCodec;Lokhttp3/internal/connection/RealConnection;)Lokhttp3/Response;
-#<init>(Ljava/util/List;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http/HttpCodec;Lokhttp3/Connection;ILokhttp3/Request;)V
-#proceed(Lokhttp3/Request;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http/HttpCodec;Lokhttp3/Connection;)Lokhttp3/Response;
@3.9.0
+#<init>(Ljava/util/List;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http/HttpCodec;Lokhttp3/internal/connection/RealConnection;ILokhttp3/Request;Lokhttp3/Call;Lokhttp3/EventListener;III)V
+#connectTimeoutMillis()I
+#withConnectTimeout(ILjava/util/concurrent/TimeUnit;)Lokhttp3/Interceptor$Chain;
+#readTimeoutMillis()I
+#withReadTimeout(ILjava/util/concurrent/TimeUnit;)Lokhttp3/Interceptor$Chain;
+#writeTimeoutMillis()I
+#withWriteTimeout(ILjava/util/concurrent/TimeUnit;)Lokhttp3/Interceptor$Chain;
+#call()Lokhttp3/Call;
+#eventListener()Lokhttp3/EventListener;
-#<init>(Ljava/util/List;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http/HttpCodec;Lokhttp3/internal/connection/RealConnection;ILokhttp3/Request;)V
@3.14.0
+#<init>(Ljava/util/List;Lokhttp3/internal/connection/Transmitter;Lokhttp3/internal/connection/Exchange;ILokhttp3/Request;Lokhttp3/Call;III)V
+#transmitter()Lokhttp3/internal/connection/Transmitter;
+#exchange()Lokhttp3/internal/connection/Exchange;
+#proceed(Lokhttp3/Request;Lokhttp3/internal/connection/Transmitter;Lokhttp3/internal/connection/Exchange;)Lokhttp3/Response;
-#<init>(Ljava/util/List;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http/HttpCodec;Lokhttp3/internal/connection/RealConnection;ILokhttp3/Request;Lokhttp3/Call;Lokhttp3/EventListener;III)V
-#streamAllocation()Lokhttp3/internal/connection/StreamAllocation;
-#httpStream()Lokhttp3/internal/http/HttpCodec;
-#eventListener()Lokhttp3/EventListener;
-#proceed(Lokhttp3/Request;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http/HttpCodec;Lokhttp3/internal/connection/RealConnection;)Lokhttp3/Response;
@4.4.0
+#copy$okhttp(ILokhttp3/internal/connection/Exchange;Lokhttp3/Request;III)Lokhttp3/internal/http/RealInterceptorChain;
+#copy$okhttp$default(Lokhttp3/internal/http/RealInterceptorChain;ILokhttp3/internal/connection/Exchange;Lokhttp3/Request;IIIILjava/lang/Object;)Lokhttp3/internal/http/RealInterceptorChain;
+#getCall$okhttp()Lokhttp3/internal/connection/RealCall;
+#getExchange$okhttp()Lokhttp3/internal/connection/Exchange;
+#getRequest$okhttp()Lokhttp3/Request;
+#getConnectTimeoutMillis$okhttp()I
+#getReadTimeoutMillis$okhttp()I
+#getWriteTimeoutMillis$okhttp()I
+#<init>(Lokhttp3/internal/connection/RealCall;Ljava/util/List;ILokhttp3/internal/connection/Exchange;Lokhttp3/Request;III)V
-#transmitter()Lokhttp3/internal/connection/Transmitter;
-#exchange()Lokhttp3/internal/connection/Exchange;
-#proceed(Lokhttp3/Request;Lokhttp3/internal/connection/Transmitter;Lokhttp3/internal/connection/Exchange;)Lokhttp3/Response;
-#<init>(Ljava/util/List;Lokhttp3/internal/connection/Transmitter;Lokhttp3/internal/connection/Exchange;ILokhttp3/Request;Lokhttp3/Call;III)V
@5.0.0-alpha.4
-###okhttp3/internal/http/RealInterceptorChain

+###okhttp3/internal/http/CallServerInterceptor
@3.4.0-RC1
+#<init>(Z)V
+#intercept(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;
@5.0.0-alpha.4
-###okhttp3/internal/http/CallServerInterceptor

+###okhttp3/internal/http/HttpCodec
@3.5.0
+#createRequestBody(Lokhttp3/Request;J)Lokio/Sink;
+#writeRequestHeaders(Lokhttp3/Request;)V
+#finishRequest()V
+#readResponseHeaders()Lokhttp3/Response$Builder;
+#openResponseBody(Lokhttp3/Response;)Lokhttp3/ResponseBody;
+#cancel()V
@3.6.0
+#flushRequest()V
+#readResponseHeaders(Z)Lokhttp3/Response$Builder;
-#readResponseHeaders()Lokhttp3/Response$Builder;
@3.13.0
+#trailers()Lokhttp3/Headers;
@3.14.0
-###okhttp3/internal/http/HttpCodec

+###okhttp3/MultipartBody
@3.0.0-RC1
+#type()Lokhttp3/MediaType;
+#boundary()Ljava/lang/String;
+#size()I
+#parts()Ljava/util/List;
+#part(I)Lokhttp3/MultipartBody$Part;
+#contentType()Lokhttp3/MediaType;
+#contentLength()J
+#writeTo(Lokio/BufferedSink;)V
@4.0.0-alpha01
+#<init>(Lokio/ByteString;Lokhttp3/MediaType;Ljava/util/List;)V
@4.0.0-alpha02
+#-deprecated_type()Lokhttp3/MediaType;
+#-deprecated_boundary()Ljava/lang/String;
+#-deprecated_size()I
+#-deprecated_parts()Ljava/util/List;
@5.0.0-alpha.4
-###okhttp3/MultipartBody

+###okhttp3/Cookie
@3.0.0-RC1
+#name()Ljava/lang/String;
+#value()Ljava/lang/String;
+#persistent()Z
+#expiresAt()J
+#hostOnly()Z
+#domain()Ljava/lang/String;
+#path()Ljava/lang/String;
+#httpOnly()Z
+#secure()Z
+#matches(Lokhttp3/HttpUrl;)Z
+#parse(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/Cookie;
+#parseAll(Lokhttp3/HttpUrl;Lokhttp3/Headers;)Ljava/util/List;
+#toString()Ljava/lang/String;
@3.1.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@4.0.0-alpha01
+#toString$okhttp(Z)Ljava/lang/String;
+#<init>(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;ZZZZLkotlin/jvm/internal/DefaultConstructorMarker;)V
+#access$getTIME_PATTERN$cp()Ljava/util/regex/Pattern;
+#access$getDAY_OF_MONTH_PATTERN$cp()Ljava/util/regex/Pattern;
+#access$getMONTH_PATTERN$cp()Ljava/util/regex/Pattern;
+#access$getYEAR_PATTERN$cp()Ljava/util/regex/Pattern;
+#copy(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;ZZZZ)Lokhttp3/Cookie;
+#copy$default(Lokhttp3/Cookie;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;ZZZZILjava/lang/Object;)Lokhttp3/Cookie;
@4.0.0-alpha02
+#-deprecated_name()Ljava/lang/String;
+#-deprecated_value()Ljava/lang/String;
+#-deprecated_persistent()Z
+#-deprecated_expiresAt()J
+#-deprecated_hostOnly()Z
+#-deprecated_domain()Ljava/lang/String;
+#-deprecated_path()Ljava/lang/String;
+#-deprecated_httpOnly()Z
+#-deprecated_secure()Z
+#component1()Ljava/lang/String;
+#component2()Ljava/lang/String;
+#component3()J
+#component4()Ljava/lang/String;
+#component5()Ljava/lang/String;
+#component6()Z
+#component7()Z
+#component8()Z
+#component9()Z
@4.0.0-RC1
-#component1()Ljava/lang/String;
-#component2()Ljava/lang/String;
-#component3()J
-#component4()Ljava/lang/String;
-#component5()Ljava/lang/String;
-#component6()Z
-#component7()Z
-#component8()Z
-#component9()Z
-#copy(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;ZZZZ)Lokhttp3/Cookie;
-#copy$default(Lokhttp3/Cookie;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;ZZZZILjava/lang/Object;)Lokhttp3/Cookie;
@5.0.0-alpha.3
+#newBuilder()Lokhttp3/Cookie$Builder;
@5.0.0-alpha.4
-###okhttp3/Cookie

+###okhttp3/Call
@3.0.0-RC1
+#request()Lokhttp3/Request;
+#execute()Lokhttp3/Response;
+#enqueue(Lokhttp3/Callback;)V
+#cancel()V
+#isExecuted()Z
+#isCanceled()Z
@3.5.0
+#clone()Lokhttp3/Call;
@3.12.0
+#timeout()Lokio/Timeout;
@5.0.0-alpha.4
-###okhttp3/Call

+###okhttp3/Request$Builder
@3.0.0-RC1
+#<init>()V
+#url(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;
+#url(Ljava/lang/String;)Lokhttp3/Request$Builder;
+#url(Ljava/net/URL;)Lokhttp3/Request$Builder;
+#header(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
+#addHeader(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
+#removeHeader(Ljava/lang/String;)Lokhttp3/Request$Builder;
+#headers(Lokhttp3/Headers;)Lokhttp3/Request$Builder;
+#cacheControl(Lokhttp3/CacheControl;)Lokhttp3/Request$Builder;
+#get()Lokhttp3/Request$Builder;
+#head()Lokhttp3/Request$Builder;
+#post(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
+#delete(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
+#delete()Lokhttp3/Request$Builder;
+#put(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
+#patch(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
+#method(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
+#tag(Ljava/lang/Object;)Lokhttp3/Request$Builder;
+#build()Lokhttp3/Request;
@3.11.0
+#tag(Ljava/lang/Class;Ljava/lang/Object;)Lokhttp3/Request$Builder;
@4.0.0-alpha01
+#getUrl$okhttp()Lokhttp3/HttpUrl;
+#setUrl$okhttp(Lokhttp3/HttpUrl;)V
+#getMethod$okhttp()Ljava/lang/String;
+#setMethod$okhttp(Ljava/lang/String;)V
+#getHeaders$okhttp()Lokhttp3/Headers$Builder;
+#setHeaders$okhttp(Lokhttp3/Headers$Builder;)V
+#getBody$okhttp()Lokhttp3/RequestBody;
+#setBody$okhttp(Lokhttp3/RequestBody;)V
+#getTags$okhttp()Ljava/util/Map;
+#setTags$okhttp(Ljava/util/Map;)V
+#delete$default(Lokhttp3/Request$Builder;Lokhttp3/RequestBody;ILjava/lang/Object;)Lokhttp3/Request$Builder;
+#<init>(Lokhttp3/Request;)V
@5.0.0-alpha.4
-###okhttp3/Request$Builder

+###okhttp3/TlsVersion
@3.0.0-RC1
+#values()[Lokhttp3/TlsVersion;
+#valueOf(Ljava/lang/String;)Lokhttp3/TlsVersion;
+#forJavaName(Ljava/lang/String;)Lokhttp3/TlsVersion;
+#javaName()Ljava/lang/String;
@4.0.0-alpha02
+#-deprecated_javaName()Ljava/lang/String;
@5.0.0-alpha.4
-###okhttp3/TlsVersion

+###okhttp3/internal/cache/CacheStrategy$Factory
@3.4.0-RC1
+#<init>(JLokhttp3/Request;Lokhttp3/Response;)V
+#get()Lokhttp3/internal/cache/CacheStrategy;
@4.0.0-alpha01
+#compute()Lokhttp3/internal/cache/CacheStrategy;
+#getRequest$okhttp()Lokhttp3/Request;
-#get()Lokhttp3/internal/cache/CacheStrategy;
@5.0.0-alpha.4
-###okhttp3/internal/cache/CacheStrategy$Factory

+###okhttp3/internal/connection/RouteSelector
@3.4.0-RC1
+#<init>(Lokhttp3/Address;Lokhttp3/internal/connection/RouteDatabase;)V
+#hasNext()Z
+#next()Lokhttp3/Route;
+#connectFailed(Lokhttp3/Route;Ljava/io/IOException;)V
@3.9.0
+#<init>(Lokhttp3/Address;Lokhttp3/internal/connection/RouteDatabase;Lokhttp3/Call;Lokhttp3/EventListener;)V
+#next()Lokhttp3/internal/connection/RouteSelector$Selection;
-#<init>(Lokhttp3/Address;Lokhttp3/internal/connection/RouteDatabase;)V
-#next()Lokhttp3/Route;
@3.14.0
-###okhttp3/internal/connection/RouteSelector

+###okhttp3/internal/connection/RouteDatabase
@3.4.0-RC1
+#<init>()V
+#failed(Lokhttp3/Route;)V
+#connected(Lokhttp3/Route;)V
+#shouldPostpone(Lokhttp3/Route;)Z
@3.14.0
-###okhttp3/internal/connection/RouteDatabase

+###okhttp3/internal/Util
@3.0.0-RC1
+#checkOffsetAndCount(JJJ)V
+#equal(Ljava/lang/Object;Ljava/lang/Object;)Z
+#closeQuietly(Ljava/io/Closeable;)V
+#closeQuietly(Ljava/net/Socket;)V
+#closeQuietly(Ljava/net/ServerSocket;)V
+#closeAll(Ljava/io/Closeable;Ljava/io/Closeable;)V
+#discard(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z
+#skipAll(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z
+#md5Hex(Ljava/lang/String;)Ljava/lang/String;
+#shaBase64(Ljava/lang/String;)Ljava/lang/String;
+#sha1(Lokio/ByteString;)Lokio/ByteString;
+#immutableList(Ljava/util/List;)Ljava/util/List;
+#immutableList([Ljava/lang/Object;)Ljava/util/List;
+#immutableMap(Ljava/util/Map;)Ljava/util/Map;
+#threadFactory(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;
+#intersect(Ljava/lang/Class;[Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;
+#hostHeader(Lokhttp3/HttpUrl;)Ljava/lang/String;
+#toHumanReadableAscii(Ljava/lang/String;)Ljava/lang/String;
+#isAndroidGetsocknameError(Ljava/lang/AssertionError;)Z
+#contains([Ljava/lang/String;Ljava/lang/String;)Z
+#concat([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#skipLeadingAsciiWhitespace(Ljava/lang/String;II)I
+#skipTrailingAsciiWhitespace(Ljava/lang/String;II)I
+#trimSubstring(Ljava/lang/String;II)Ljava/lang/String;
+#delimiterOffset(Ljava/lang/String;IILjava/lang/String;)I
+#delimiterOffset(Ljava/lang/String;IIC)I
+#domainToAscii(Ljava/lang/String;)Ljava/lang/String;
+#verifyAsIpAddress(Ljava/lang/String;)Z
@3.2.0
+#sha256(Lokio/ByteString;)Lokio/ByteString;
+#hostHeader(Lokhttp3/HttpUrl;Z)Ljava/lang/String;
-#hostHeader(Lokhttp3/HttpUrl;)Ljava/lang/String;
@3.3.0
+#format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
@3.4.0-RC1
-#immutableMap(Ljava/util/Map;)Ljava/util/Map;
@3.4.1
+#indexOf([Ljava/lang/Object;Ljava/lang/Object;)I
-#contains([Ljava/lang/String;Ljava/lang/String;)Z
@3.5.0
+#bomAwareCharset(Lokio/BufferedSource;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;
+#throwIfFatal(Ljava/lang/Throwable;)V
-#closeAll(Ljava/io/Closeable;Ljava/io/Closeable;)V
-#md5Hex(Ljava/lang/String;)Ljava/lang/String;
-#shaBase64(Ljava/lang/String;)Ljava/lang/String;
-#sha1(Lokio/ByteString;)Lokio/ByteString;
-#sha256(Lokio/ByteString;)Lokio/ByteString;
@3.6.0
+#indexOfControlOrNonAscii(Ljava/lang/String;)I
-#throwIfFatal(Ljava/lang/Throwable;)V
@3.7.0
+#intersect(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;
+#nonEmptyIntersection(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)Z
+#indexOf(Ljava/util/Comparator;[Ljava/lang/String;Ljava/lang/String;)I
-#intersect(Ljava/lang/Class;[Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;
-#indexOf([Ljava/lang/Object;Ljava/lang/Object;)I
@3.9.0
+#canonicalizeHost(Ljava/lang/String;)Ljava/lang/String;
+#checkDuration(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I
+#assertionError(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;
+#decodeHexDigit(C)I
-#domainToAscii(Ljava/lang/String;)Ljava/lang/String;
@3.10.0
-#toHumanReadableAscii(Ljava/lang/String;)Ljava/lang/String;
@3.11.0
+#addSuppressedIfPossible(Ljava/lang/Throwable;Ljava/lang/Throwable;)V
+#immutableMap(Ljava/util/Map;)Ljava/util/Map;
+#platformTrustManager()Ljavax/net/ssl/X509TrustManager;
@3.12.0
+#toHeaders(Ljava/util/List;)Lokhttp3/Headers;
@3.13.0
+#toHeaderBlock(Lokhttp3/Headers;)Ljava/util/List;
+#getSystemProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
-#equal(Ljava/lang/Object;Ljava/lang/Object;)Z
-#assertionError(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;
@3.14.0
+#sameConnection(Lokhttp3/HttpUrl;Lokhttp3/HttpUrl;)Z
@4.0.0-alpha01
+#eventListenerFactory(Lokhttp3/EventListener;)Lokhttp3/EventListener$Factory;
-#addSuppressedIfPossible(Ljava/lang/Throwable;Ljava/lang/Throwable;)V
@4.0.0-alpha02
+#intersect([Ljava/lang/String;[Ljava/lang/String;Ljava/util/Comparator;)[Ljava/lang/String;
+#hasIntersection([Ljava/lang/String;[Ljava/lang/String;Ljava/util/Comparator;)Z
+#toHostHeader(Lokhttp3/HttpUrl;Z)Ljava/lang/String;
+#toHostHeader$default(Lokhttp3/HttpUrl;ZILjava/lang/Object;)Ljava/lang/String;
+#indexOf([Ljava/lang/String;Ljava/lang/String;Ljava/util/Comparator;)I
+#indexOfFirstNonAsciiWhitespace(Ljava/lang/String;II)I
+#indexOfFirstNonAsciiWhitespace$default(Ljava/lang/String;IIILjava/lang/Object;)I
+#indexOfLastNonAsciiWhitespace(Ljava/lang/String;II)I
+#indexOfLastNonAsciiWhitespace$default(Ljava/lang/String;IIILjava/lang/Object;)I
+#trimSubstring$default(Ljava/lang/String;IIILjava/lang/Object;)Ljava/lang/String;
+#delimiterOffset(Ljava/lang/String;Ljava/lang/String;II)I
+#delimiterOffset$default(Ljava/lang/String;Ljava/lang/String;IIILjava/lang/Object;)I
+#delimiterOffset(Ljava/lang/String;CII)I
+#delimiterOffset$default(Ljava/lang/String;CIIILjava/lang/Object;)I
+#canParseAsIpAddress(Ljava/lang/String;)Z
+#readBomAsCharset(Lokio/BufferedSource;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;
+#parseHexDigit(C)I
+#toHeaderList(Lokhttp3/Headers;)Ljava/util/List;
+#canReuseConnectionFor(Lokhttp3/HttpUrl;Lokhttp3/HttpUrl;)Z
+#asFactory(Lokhttp3/EventListener;)Lokhttp3/EventListener$Factory;
+#and(BI)I
+#and(SI)I
+#and(IJ)J
+#writeMedium(Lokio/BufferedSink;I)V
+#readMedium(Lokio/BufferedSource;)I
+#connectionName(Ljava/net/Socket;)Ljava/lang/String;
+#ignoreIoExceptions(Lkotlin/jvm/functions/Function0;)V
+#threadName(Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
+#execute(Ljava/util/concurrent/Executor;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
+#tryExecute(Ljava/util/concurrent/Executor;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
+#skipAll(Lokio/Buffer;B)I
+#indexOfNonWhitespace(Ljava/lang/String;I)I
+#indexOfNonWhitespace$default(Ljava/lang/String;IILjava/lang/Object;)I
+#headersContentLength(Lokhttp3/Response;)J
+#toLongOrDefault(Ljava/lang/String;J)J
+#toNonNegativeInt(Ljava/lang/String;I)I
+#toImmutableList(Ljava/util/List;)Ljava/util/List;
+#immutableListOf([Ljava/lang/Object;)Ljava/util/List;
+#toImmutableMap(Ljava/util/Map;)Ljava/util/Map;
+#toHexString(J)Ljava/lang/String;
+#toHexString(I)Ljava/lang/String;
+#waitNanos(Ljava/lang/Object;J)V
+#wait(Ljava/lang/Object;)V
+#waitMillis(Ljava/lang/Object;JI)V
+#waitMillis$default(Ljava/lang/Object;JIILjava/lang/Object;)V
+#notify(Ljava/lang/Object;)V
+#notifyAll(Ljava/lang/Object;)V
-#immutableList(Ljava/util/List;)Ljava/util/List;
-#immutableMap(Ljava/util/Map;)Ljava/util/Map;
-#immutableList([Ljava/lang/Object;)Ljava/util/List;
-#intersect(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;
-#nonEmptyIntersection(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)Z
-#hostHeader(Lokhttp3/HttpUrl;Z)Ljava/lang/String;
-#isAndroidGetsocknameError(Ljava/lang/AssertionError;)Z
-#indexOf(Ljava/util/Comparator;[Ljava/lang/String;Ljava/lang/String;)I
-#skipLeadingAsciiWhitespace(Ljava/lang/String;II)I
-#skipTrailingAsciiWhitespace(Ljava/lang/String;II)I
-#delimiterOffset(Ljava/lang/String;IILjava/lang/String;)I
-#delimiterOffset(Ljava/lang/String;IIC)I
-#canonicalizeHost(Ljava/lang/String;)Ljava/lang/String;
-#verifyAsIpAddress(Ljava/lang/String;)Z
-#bomAwareCharset(Lokio/BufferedSource;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;
-#decodeHexDigit(C)I
-#platformTrustManager()Ljavax/net/ssl/X509TrustManager;
-#toHeaderBlock(Lokhttp3/Headers;)Ljava/util/List;
-#getSystemProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
-#sameConnection(Lokhttp3/HttpUrl;Lokhttp3/HttpUrl;)Z
-#eventListenerFactory(Lokhttp3/EventListener;)Lokhttp3/EventListener$Factory;
@4.0.0-RC1
+#lockAndWaitNanos(Ljava/lang/Object;J)V
-#waitNanos(Ljava/lang/Object;J)V
@4.2.0
+#readFieldOrNull(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
@4.3.0
+#peerName(Ljava/net/Socket;)Ljava/lang/String;
+#addIfAbsent(Ljava/util/List;Ljava/lang/Object;)V
+#assertThreadHoldsLock(Ljava/lang/Object;)V
+#assertThreadDoesntHoldLock(Ljava/lang/Object;)V
-#connectionName(Ljava/net/Socket;)Ljava/lang/String;
-#execute(Ljava/util/concurrent/Executor;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
-#tryExecute(Ljava/util/concurrent/Executor;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
-#lockAndWaitNanos(Ljava/lang/Object;J)V
-#waitMillis(Ljava/lang/Object;JI)V
-#waitMillis$default(Ljava/lang/Object;JIILjava/lang/Object;)V
@4.4.0
+#isHealthy(Ljava/net/Socket;Lokio/BufferedSource;)Z
@4.5.0-RC1
+#withSuppressed(Ljava/lang/Exception;Ljava/util/List;)Ljava/lang/Throwable;
@4.6.0
+#isCivilized(Lokhttp3/internal/io/FileSystem;Ljava/io/File;)Z
+#filterList(Ljava/lang/Iterable;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
@4.9.2
+#isSensitiveHeader(Ljava/lang/String;)Z
@4.10.0-RC1
-#isSensitiveHeader(Ljava/lang/String;)Z
@4.10.0
+#isSensitiveHeader(Ljava/lang/String;)Z
@5.0.0-alpha.1
-#isSensitiveHeader(Ljava/lang/String;)Z
@5.0.0-alpha.3
+#isSensitiveHeader(Ljava/lang/String;)Z
+#isCivilized(Lokio/FileSystem;Lokio/Path;)Z
+#deleteIfExists(Lokio/FileSystem;Lokio/Path;)V
+#deleteContents(Lokio/FileSystem;Lokio/Path;)V
-#isCivilized(Lokhttp3/internal/io/FileSystem;Ljava/io/File;)Z
@5.0.0-alpha.4
-###okhttp3/internal/Util

+###okhttp3/internal/http/HttpMethod
@3.0.0-RC1
+#invalidatesCache(Ljava/lang/String;)Z
+#requiresRequestBody(Ljava/lang/String;)Z
+#permitsRequestBody(Ljava/lang/String;)Z
+#redirectsToGet(Ljava/lang/String;)Z
@3.5.0
+#redirectsWithBody(Ljava/lang/String;)Z
@5.0.0-alpha.4
-###okhttp3/internal/http/HttpMethod

+###okhttp3/internal/Internal
@3.0.0-RC1
+#<init>()V
+#initializeInstanceForTests()V
+#addLenient(Lokhttp3/Headers$Builder;Ljava/lang/String;)V
+#addLenient(Lokhttp3/Headers$Builder;Ljava/lang/String;Ljava/lang/String;)V
+#setCache(Lokhttp3/OkHttpClient$Builder;Lokhttp3/internal/InternalCache;)V
+#internalCache(Lokhttp3/OkHttpClient;)Lokhttp3/internal/InternalCache;
+#get(Lokhttp3/ConnectionPool;Lokhttp3/Address;Lokhttp3/internal/http/StreamAllocation;)Lokhttp3/internal/io/RealConnection;
+#put(Lokhttp3/ConnectionPool;Lokhttp3/internal/io/RealConnection;)V
+#connectionBecameIdle(Lokhttp3/ConnectionPool;Lokhttp3/internal/io/RealConnection;)Z
+#routeDatabase(Lokhttp3/ConnectionPool;)Lokhttp3/internal/RouteDatabase;
+#apply(Lokhttp3/ConnectionSpec;Ljavax/net/ssl/SSLSocket;Z)V
+#getHttpUrlChecked(Ljava/lang/String;)Lokhttp3/HttpUrl;
+#callEnqueue(Lokhttp3/Call;Lokhttp3/Callback;Z)V
+#callEngineGetStreamAllocation(Lokhttp3/Call;)Lokhttp3/internal/http/StreamAllocation;
@3.4.0-RC1
+#setCache(Lokhttp3/OkHttpClient$Builder;Lokhttp3/internal/cache/InternalCache;)V
+#get(Lokhttp3/ConnectionPool;Lokhttp3/Address;Lokhttp3/internal/connection/StreamAllocation;)Lokhttp3/internal/connection/RealConnection;
+#put(Lokhttp3/ConnectionPool;Lokhttp3/internal/connection/RealConnection;)V
+#connectionBecameIdle(Lokhttp3/ConnectionPool;Lokhttp3/internal/connection/RealConnection;)Z
+#routeDatabase(Lokhttp3/ConnectionPool;)Lokhttp3/internal/connection/RouteDatabase;
+#callEngineGetStreamAllocation(Lokhttp3/Call;)Lokhttp3/internal/connection/StreamAllocation;
+#setCallWebSocket(Lokhttp3/Call;)V
-#setCache(Lokhttp3/OkHttpClient$Builder;Lokhttp3/internal/InternalCache;)V
-#internalCache(Lokhttp3/OkHttpClient;)Lokhttp3/internal/InternalCache;
-#get(Lokhttp3/ConnectionPool;Lokhttp3/Address;Lokhttp3/internal/http/StreamAllocation;)Lokhttp3/internal/io/RealConnection;
-#put(Lokhttp3/ConnectionPool;Lokhttp3/internal/io/RealConnection;)V
-#connectionBecameIdle(Lokhttp3/ConnectionPool;Lokhttp3/internal/io/RealConnection;)Z
-#routeDatabase(Lokhttp3/ConnectionPool;)Lokhttp3/internal/RouteDatabase;
-#callEnqueue(Lokhttp3/Call;Lokhttp3/Callback;Z)V
-#callEngineGetStreamAllocation(Lokhttp3/Call;)Lokhttp3/internal/http/StreamAllocation;
@3.5.0
+#streamAllocation(Lokhttp3/Call;)Lokhttp3/internal/connection/StreamAllocation;
+#newWebSocketCall(Lokhttp3/OkHttpClient;Lokhttp3/Request;)Lokhttp3/Call;
-#callEngineGetStreamAllocation(Lokhttp3/Call;)Lokhttp3/internal/connection/StreamAllocation;
-#setCallWebSocket(Lokhttp3/Call;)V
@3.6.0
+#deduplicate(Lokhttp3/ConnectionPool;Lokhttp3/Address;Lokhttp3/internal/connection/StreamAllocation;)Ljava/net/Socket;
+#code(Lokhttp3/Response$Builder;)I
@3.7.0
+#get(Lokhttp3/ConnectionPool;Lokhttp3/Address;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/Route;)Lokhttp3/internal/connection/RealConnection;
+#equalsNonHost(Lokhttp3/Address;Lokhttp3/Address;)Z
-#get(Lokhttp3/ConnectionPool;Lokhttp3/Address;Lokhttp3/internal/connection/StreamAllocation;)Lokhttp3/internal/connection/RealConnection;
@3.11.0
+#isInvalidHttpUrlHost(Ljava/lang/IllegalArgumentException;)Z
-#getHttpUrlChecked(Ljava/lang/String;)Lokhttp3/HttpUrl;
@3.12.0
+#timeoutExit(Lokhttp3/Call;Ljava/io/IOException;)Ljava/io/IOException;
@3.13.0
+#acquire(Lokhttp3/ConnectionPool;Lokhttp3/Address;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/Route;)V
+#initCodec(Lokhttp3/Response$Builder;Lokhttp3/internal/http/HttpCodec;)V
-#get(Lokhttp3/ConnectionPool;Lokhttp3/Address;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/Route;)Lokhttp3/internal/connection/RealConnection;
@3.14.0
+#realConnectionPool(Lokhttp3/ConnectionPool;)Lokhttp3/internal/connection/RealConnectionPool;
+#initExchange(Lokhttp3/Response$Builder;Lokhttp3/internal/connection/Exchange;)V
+#exchange(Lokhttp3/Response;)Lokhttp3/internal/connection/Exchange;
-#setCache(Lokhttp3/OkHttpClient$Builder;Lokhttp3/internal/cache/InternalCache;)V
-#acquire(Lokhttp3/ConnectionPool;Lokhttp3/Address;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/Route;)V
-#deduplicate(Lokhttp3/ConnectionPool;Lokhttp3/Address;Lokhttp3/internal/connection/StreamAllocation;)Ljava/net/Socket;
-#put(Lokhttp3/ConnectionPool;Lokhttp3/internal/connection/RealConnection;)V
-#connectionBecameIdle(Lokhttp3/ConnectionPool;Lokhttp3/internal/connection/RealConnection;)Z
-#routeDatabase(Lokhttp3/ConnectionPool;)Lokhttp3/internal/connection/RouteDatabase;
-#isInvalidHttpUrlHost(Ljava/lang/IllegalArgumentException;)Z
-#streamAllocation(Lokhttp3/Call;)Lokhttp3/internal/connection/StreamAllocation;
-#timeoutExit(Lokhttp3/Call;Ljava/io/IOException;)Ljava/io/IOException;
-#initCodec(Lokhttp3/Response$Builder;Lokhttp3/internal/http/HttpCodec;)V
@4.0.0-alpha01
-#addLenient(Lokhttp3/Headers$Builder;Ljava/lang/String;)V
-#addLenient(Lokhttp3/Headers$Builder;Ljava/lang/String;Ljava/lang/String;)V
-#code(Lokhttp3/Response$Builder;)I
-#apply(Lokhttp3/ConnectionSpec;Ljavax/net/ssl/SSLSocket;Z)V
-#initExchange(Lokhttp3/Response$Builder;Lokhttp3/internal/connection/Exchange;)V
@4.0.0-alpha02
+#parseCookie(JLokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/Cookie;
+#cookieToString(Lokhttp3/Cookie;Z)Ljava/lang/String;
+#addHeaderLenient(Lokhttp3/Headers$Builder;Ljava/lang/String;)Lokhttp3/Headers$Builder;
+#addHeaderLenient(Lokhttp3/Headers$Builder;Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;
+#cacheGet(Lokhttp3/Cache;Lokhttp3/Request;)Lokhttp3/Response;
+#applyConnectionSpec(Lokhttp3/ConnectionSpec;Ljavax/net/ssl/SSLSocket;Z)V
-#<init>()V
-#initializeInstanceForTests()V
-#realConnectionPool(Lokhttp3/ConnectionPool;)Lokhttp3/internal/connection/RealConnectionPool;
-#equalsNonHost(Lokhttp3/Address;Lokhttp3/Address;)Z
-#newWebSocketCall(Lokhttp3/OkHttpClient;Lokhttp3/Request;)Lokhttp3/Call;
-#exchange(Lokhttp3/Response;)Lokhttp3/internal/connection/Exchange;
@5.0.0-alpha.2
+#effectiveCipherSuites(Lokhttp3/ConnectionSpec;[Ljava/lang/String;)[Ljava/lang/String;
@5.0.0-alpha.3
+#getConnection(Lokhttp3/Response;)Lokhttp3/internal/connection/RealConnection;
@5.0.0-alpha.4
-###okhttp3/internal/Internal

+###okhttp3/MultipartBody$Builder
@3.0.0-RC1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#setType(Lokhttp3/MediaType;)Lokhttp3/MultipartBody$Builder;
+#addPart(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;
+#addPart(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;
+#addFormDataPart(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Builder;
+#addFormDataPart(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;
+#addPart(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;
+#build()Lokhttp3/MultipartBody;
@4.0.0-alpha01
+#<init>(Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/MultipartBody$Builder

+###okhttp3/OkHttpClient$Builder
@3.0.0-RC1
+#<init>()V
+#connectTimeout(JLjava/util/concurrent/TimeUnit;)Lokhttp3/OkHttpClient$Builder;
+#readTimeout(JLjava/util/concurrent/TimeUnit;)Lokhttp3/OkHttpClient$Builder;
+#writeTimeout(JLjava/util/concurrent/TimeUnit;)Lokhttp3/OkHttpClient$Builder;
+#proxy(Ljava/net/Proxy;)Lokhttp3/OkHttpClient$Builder;
+#proxySelector(Ljava/net/ProxySelector;)Lokhttp3/OkHttpClient$Builder;
+#cookieJar(Lokhttp3/CookieJar;)Lokhttp3/OkHttpClient$Builder;
+#cache(Lokhttp3/Cache;)Lokhttp3/OkHttpClient$Builder;
+#dns(Lokhttp3/Dns;)Lokhttp3/OkHttpClient$Builder;
+#socketFactory(Ljavax/net/SocketFactory;)Lokhttp3/OkHttpClient$Builder;
+#sslSocketFactory(Ljavax/net/ssl/SSLSocketFactory;)Lokhttp3/OkHttpClient$Builder;
+#hostnameVerifier(Ljavax/net/ssl/HostnameVerifier;)Lokhttp3/OkHttpClient$Builder;
+#certificatePinner(Lokhttp3/CertificatePinner;)Lokhttp3/OkHttpClient$Builder;
+#authenticator(Lokhttp3/Authenticator;)Lokhttp3/OkHttpClient$Builder;
+#proxyAuthenticator(Lokhttp3/Authenticator;)Lokhttp3/OkHttpClient$Builder;
+#connectionPool(Lokhttp3/ConnectionPool;)Lokhttp3/OkHttpClient$Builder;
+#followSslRedirects(Z)Lokhttp3/OkHttpClient$Builder;
+#followRedirects(Z)Lokhttp3/OkHttpClient$Builder;
+#retryOnConnectionFailure(Z)Lokhttp3/OkHttpClient$Builder;
+#dispatcher(Lokhttp3/Dispatcher;)Lokhttp3/OkHttpClient$Builder;
+#protocols(Ljava/util/List;)Lokhttp3/OkHttpClient$Builder;
+#connectionSpecs(Ljava/util/List;)Lokhttp3/OkHttpClient$Builder;
+#interceptors()Ljava/util/List;
+#addInterceptor(Lokhttp3/Interceptor;)Lokhttp3/OkHttpClient$Builder;
+#networkInterceptors()Ljava/util/List;
+#addNetworkInterceptor(Lokhttp3/Interceptor;)Lokhttp3/OkHttpClient$Builder;
+#build()Lokhttp3/OkHttpClient;
@3.3.0
+#sslSocketFactory(Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/X509TrustManager;)Lokhttp3/OkHttpClient$Builder;
@3.5.0
+#pingInterval(JLjava/util/concurrent/TimeUnit;)Lokhttp3/OkHttpClient$Builder;
@3.9.0
+#eventListener(Lokhttp3/EventListener;)Lokhttp3/OkHttpClient$Builder;
+#eventListenerFactory(Lokhttp3/EventListener$Factory;)Lokhttp3/OkHttpClient$Builder;
@3.12.0
+#callTimeout(JLjava/util/concurrent/TimeUnit;)Lokhttp3/OkHttpClient$Builder;
+#callTimeout(Ljava/time/Duration;)Lokhttp3/OkHttpClient$Builder;
+#connectTimeout(Ljava/time/Duration;)Lokhttp3/OkHttpClient$Builder;
+#readTimeout(Ljava/time/Duration;)Lokhttp3/OkHttpClient$Builder;
+#writeTimeout(Ljava/time/Duration;)Lokhttp3/OkHttpClient$Builder;
+#pingInterval(Ljava/time/Duration;)Lokhttp3/OkHttpClient$Builder;
@4.0.0-alpha01
+#getDispatcher$okhttp()Lokhttp3/Dispatcher;
+#setDispatcher$okhttp(Lokhttp3/Dispatcher;)V
+#getProxy$okhttp()Ljava/net/Proxy;
+#setProxy$okhttp(Ljava/net/Proxy;)V
+#getProtocols$okhttp()Ljava/util/List;
+#setProtocols$okhttp(Ljava/util/List;)V
+#getConnectionSpecs$okhttp()Ljava/util/List;
+#setConnectionSpecs$okhttp(Ljava/util/List;)V
+#getInterceptors$okhttp()Ljava/util/List;
+#getNetworkInterceptors$okhttp()Ljava/util/List;
+#getEventListenerFactory$okhttp()Lokhttp3/EventListener$Factory;
+#setEventListenerFactory$okhttp(Lokhttp3/EventListener$Factory;)V
+#getProxySelector$okhttp()Ljava/net/ProxySelector;
+#setProxySelector$okhttp(Ljava/net/ProxySelector;)V
+#getCookieJar$okhttp()Lokhttp3/CookieJar;
+#setCookieJar$okhttp(Lokhttp3/CookieJar;)V
+#getCache$okhttp()Lokhttp3/Cache;
+#setCache$okhttp(Lokhttp3/Cache;)V
+#getInternalCache$okhttp()Lokhttp3/internal/cache/InternalCache;
+#setInternalCache$okhttp(Lokhttp3/internal/cache/InternalCache;)V
+#getSocketFactory$okhttp()Ljavax/net/SocketFactory;
+#setSocketFactory$okhttp(Ljavax/net/SocketFactory;)V
+#getSslSocketFactory$okhttp()Ljavax/net/ssl/SSLSocketFactory;
+#setSslSocketFactory$okhttp(Ljavax/net/ssl/SSLSocketFactory;)V
+#getCertificateChainCleaner$okhttp()Lokhttp3/internal/tls/CertificateChainCleaner;
+#setCertificateChainCleaner$okhttp(Lokhttp3/internal/tls/CertificateChainCleaner;)V
+#getHostnameVerifier$okhttp()Ljavax/net/ssl/HostnameVerifier;
+#setHostnameVerifier$okhttp(Ljavax/net/ssl/HostnameVerifier;)V
+#getCertificatePinner$okhttp()Lokhttp3/CertificatePinner;
+#setCertificatePinner$okhttp(Lokhttp3/CertificatePinner;)V
+#getProxyAuthenticator$okhttp()Lokhttp3/Authenticator;
+#setProxyAuthenticator$okhttp(Lokhttp3/Authenticator;)V
+#getAuthenticator$okhttp()Lokhttp3/Authenticator;
+#setAuthenticator$okhttp(Lokhttp3/Authenticator;)V
+#getConnectionPool$okhttp()Lokhttp3/ConnectionPool;
+#setConnectionPool$okhttp(Lokhttp3/ConnectionPool;)V
+#getDns$okhttp()Lokhttp3/Dns;
+#setDns$okhttp(Lokhttp3/Dns;)V
+#getFollowSslRedirects$okhttp()Z
+#setFollowSslRedirects$okhttp(Z)V
+#getFollowRedirects$okhttp()Z
+#setFollowRedirects$okhttp(Z)V
+#getRetryOnConnectionFailure$okhttp()Z
+#setRetryOnConnectionFailure$okhttp(Z)V
+#getCallTimeout$okhttp()I
+#setCallTimeout$okhttp(I)V
+#getConnectTimeout$okhttp()I
+#setConnectTimeout$okhttp(I)V
+#getReadTimeout$okhttp()I
+#setReadTimeout$okhttp(I)V
+#getWriteTimeout$okhttp()I
+#setWriteTimeout$okhttp(I)V
+#getPingInterval$okhttp()I
+#setPingInterval$okhttp(I)V
+#-deprecated_addInterceptor(Lkotlin/jvm/functions/Function1;)Lokhttp3/OkHttpClient$Builder;
+#-deprecated_addNetworkInterceptor(Lkotlin/jvm/functions/Function1;)Lokhttp3/OkHttpClient$Builder;
+#-deprecated_eventListenerFactory(Lkotlin/jvm/functions/Function1;)Lokhttp3/OkHttpClient$Builder;
+#<init>(Lokhttp3/OkHttpClient;)V
@4.0.0-alpha02
+#getSslSocketFactoryOrNull$okhttp()Ljavax/net/ssl/SSLSocketFactory;
+#setSslSocketFactoryOrNull$okhttp(Ljavax/net/ssl/SSLSocketFactory;)V
-#getInternalCache$okhttp()Lokhttp3/internal/cache/InternalCache;
-#setInternalCache$okhttp(Lokhttp3/internal/cache/InternalCache;)V
-#getSslSocketFactory$okhttp()Ljavax/net/ssl/SSLSocketFactory;
-#setSslSocketFactory$okhttp(Ljavax/net/ssl/SSLSocketFactory;)V
@4.0.0-RC1
+#-addInterceptor(Lkotlin/jvm/functions/Function1;)Lokhttp3/OkHttpClient$Builder;
+#-addNetworkInterceptor(Lkotlin/jvm/functions/Function1;)Lokhttp3/OkHttpClient$Builder;
-#-deprecated_addInterceptor(Lkotlin/jvm/functions/Function1;)Lokhttp3/OkHttpClient$Builder;
-#-deprecated_addNetworkInterceptor(Lkotlin/jvm/functions/Function1;)Lokhttp3/OkHttpClient$Builder;
-#-deprecated_eventListenerFactory(Lkotlin/jvm/functions/Function1;)Lokhttp3/OkHttpClient$Builder;
@4.1.0
+#getX509TrustManagerOrNull$okhttp()Ljavax/net/ssl/X509TrustManager;
+#setX509TrustManagerOrNull$okhttp(Ljavax/net/ssl/X509TrustManager;)V
@4.4.0
+#getRouteDatabase$okhttp()Lokhttp3/internal/connection/RouteDatabase;
+#setRouteDatabase$okhttp(Lokhttp3/internal/connection/RouteDatabase;)V
@4.5.0
+#getMinWebSocketMessageToCompress$okhttp()J
+#setMinWebSocketMessageToCompress$okhttp(J)V
+#minWebSocketMessageToCompress(J)Lokhttp3/OkHttpClient$Builder;
@5.0.0-alpha.4
-###okhttp3/OkHttpClient$Builder

+###okhttp3/WebSocketListener
@3.5.0
+#<init>()V
+#onOpen(Lokhttp3/WebSocket;Lokhttp3/Response;)V
+#onMessage(Lokhttp3/WebSocket;Ljava/lang/String;)V
+#onMessage(Lokhttp3/WebSocket;Lokio/ByteString;)V
+#onClosing(Lokhttp3/WebSocket;ILjava/lang/String;)V
+#onClosed(Lokhttp3/WebSocket;ILjava/lang/String;)V
+#onFailure(Lokhttp3/WebSocket;Ljava/lang/Throwable;Lokhttp3/Response;)V
@5.0.0-alpha.4
-###okhttp3/WebSocketListener

+###okhttp3/Dispatcher
@3.0.0-RC1
+#<init>(Ljava/util/concurrent/ExecutorService;)V
+#<init>()V
+#executorService()Ljava/util/concurrent/ExecutorService;
+#setMaxRequests(I)V
+#getMaxRequests()I
+#setMaxRequestsPerHost(I)V
+#getMaxRequestsPerHost()I
+#cancelAll()V
+#queuedCalls()Ljava/util/List;
+#runningCalls()Ljava/util/List;
+#queuedCallsCount()I
+#runningCallsCount()I
@3.4.0-RC1
+#setIdleCallback(Ljava/lang/Runnable;)V
@4.0.0-alpha01
+#-deprecated_setIdleCallback(Lkotlin/jvm/functions/Function0;)V
+#enqueue$okhttp(Lokhttp3/RealCall$AsyncCall;)V
+#executed$okhttp(Lokhttp3/RealCall;)V
+#finished$okhttp(Lokhttp3/RealCall$AsyncCall;)V
+#finished$okhttp(Lokhttp3/RealCall;)V
@4.0.0-alpha02
+#getIdleCallback()Ljava/lang/Runnable;
+#-deprecated_executorService()Ljava/util/concurrent/ExecutorService;
@4.0.0-RC1
-#-deprecated_setIdleCallback(Lkotlin/jvm/functions/Function0;)V
@4.4.0
+#enqueue$okhttp(Lokhttp3/internal/connection/RealCall$AsyncCall;)V
+#executed$okhttp(Lokhttp3/internal/connection/RealCall;)V
+#finished$okhttp(Lokhttp3/internal/connection/RealCall$AsyncCall;)V
+#finished$okhttp(Lokhttp3/internal/connection/RealCall;)V
-#enqueue$okhttp(Lokhttp3/RealCall$AsyncCall;)V
-#executed$okhttp(Lokhttp3/RealCall;)V
-#finished$okhttp(Lokhttp3/RealCall$AsyncCall;)V
-#finished$okhttp(Lokhttp3/RealCall;)V
@5.0.0-alpha.4
-###okhttp3/Dispatcher

+###okhttp3/CacheControl$Builder
@3.0.0-RC1
+#<init>()V
+#noCache()Lokhttp3/CacheControl$Builder;
+#noStore()Lokhttp3/CacheControl$Builder;
+#maxAge(ILjava/util/concurrent/TimeUnit;)Lokhttp3/CacheControl$Builder;
+#maxStale(ILjava/util/concurrent/TimeUnit;)Lokhttp3/CacheControl$Builder;
+#minFresh(ILjava/util/concurrent/TimeUnit;)Lokhttp3/CacheControl$Builder;
+#onlyIfCached()Lokhttp3/CacheControl$Builder;
+#noTransform()Lokhttp3/CacheControl$Builder;
+#build()Lokhttp3/CacheControl;
@3.8.0
+#immutable()Lokhttp3/CacheControl$Builder;
@5.0.0-alpha.4
-###okhttp3/CacheControl$Builder

+###okhttp3/CookieJar
@3.0.0-RC1
+#saveFromResponse(Lokhttp3/HttpUrl;Ljava/util/List;)V
+#loadForRequest(Lokhttp3/HttpUrl;)Ljava/util/List;
@5.0.0-alpha.4
-###okhttp3/CookieJar

+###okhttp3/internal/cache/CacheRequest
@3.4.0-RC1
+#body()Lokio/Sink;
+#abort()V
@5.0.0-alpha.4
-###okhttp3/internal/cache/CacheRequest

+###okhttp3/internal/connection/StreamAllocation
@3.4.0-RC1
+#<init>(Lokhttp3/ConnectionPool;Lokhttp3/Address;)V
+#newStream(Lokhttp3/OkHttpClient;Z)Lokhttp3/internal/http/HttpStream;
+#streamFinished(ZLokhttp3/internal/http/HttpStream;)V
+#stream()Lokhttp3/internal/http/HttpStream;
+#connection()Lokhttp3/internal/connection/RealConnection;
+#release()V
+#noNewStreams()V
+#cancel()V
+#streamFailed(Ljava/io/IOException;)V
+#acquire(Lokhttp3/internal/connection/RealConnection;)V
+#hasMoreRoutes()Z
+#toString()Ljava/lang/String;
@3.5.0
+#<init>(Lokhttp3/ConnectionPool;Lokhttp3/Address;Ljava/lang/Object;)V
+#newStream(Lokhttp3/OkHttpClient;Z)Lokhttp3/internal/http/HttpCodec;
+#streamFinished(ZLokhttp3/internal/http/HttpCodec;)V
+#codec()Lokhttp3/internal/http/HttpCodec;
-#<init>(Lokhttp3/ConnectionPool;Lokhttp3/Address;)V
-#newStream(Lokhttp3/OkHttpClient;Z)Lokhttp3/internal/http/HttpStream;
-#streamFinished(ZLokhttp3/internal/http/HttpStream;)V
-#stream()Lokhttp3/internal/http/HttpStream;
@3.6.0
+#releaseAndAcquire(Lokhttp3/internal/connection/RealConnection;)Ljava/net/Socket;
@3.9.0
+#<init>(Lokhttp3/ConnectionPool;Lokhttp3/Address;Lokhttp3/Call;Lokhttp3/EventListener;Ljava/lang/Object;)V
+#newStream(Lokhttp3/OkHttpClient;Lokhttp3/Interceptor$Chain;Z)Lokhttp3/internal/http/HttpCodec;
+#streamFinished(ZLokhttp3/internal/http/HttpCodec;JLjava/io/IOException;)V
+#acquire(Lokhttp3/internal/connection/RealConnection;Z)V
-#<init>(Lokhttp3/ConnectionPool;Lokhttp3/Address;Ljava/lang/Object;)V
-#newStream(Lokhttp3/OkHttpClient;Z)Lokhttp3/internal/http/HttpCodec;
-#streamFinished(ZLokhttp3/internal/http/HttpCodec;)V
-#acquire(Lokhttp3/internal/connection/RealConnection;)V
@3.10.0
+#route()Lokhttp3/Route;
@3.13.0
+#release(Z)V
-#release()V
@3.14.0
-###okhttp3/internal/connection/StreamAllocation

+###okhttp3/internal/platform/ConscryptPlatform
@3.10.0
+#trustManager(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
+#getSelectedProtocol(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
+#getSSLContext()Ljavax/net/ssl/SSLContext;
+#buildIfSupported()Lokhttp3/internal/platform/Platform;
@3.11.0
+#configureSslSocketFactory(Ljavax/net/ssl/SSLSocketFactory;)V
@3.12.0
+#buildIfSupported()Lokhttp3/internal/platform/ConscryptPlatform;
-#buildIfSupported()Lokhttp3/internal/platform/Platform;
@4.0.0-alpha01
+#newSSLContext()Ljavax/net/ssl/SSLContext;
+#platformTrustManager()Ljavax/net/ssl/X509TrustManager;
+#configureTrustManager(Ljavax/net/ssl/X509TrustManager;)V
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
+#atLeastVersion(III)Z
+#atLeastVersion(II)Z
+#atLeastVersion(I)Z
-#getSSLContext()Ljavax/net/ssl/SSLContext;
@4.0.0-alpha02
-#buildIfSupported()Lokhttp3/internal/platform/ConscryptPlatform;
-#atLeastVersion(III)Z
-#atLeastVersion(II)Z
-#atLeastVersion(I)Z
@4.2.0
+#access$isSupported$cp()Z
@4.3.0
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)V
-#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
@4.3.1
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
-#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)V
@4.6.0
+#newSslSocketFactory(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;
-#configureSslSocketFactory(Ljavax/net/ssl/SSLSocketFactory;)V
-#configureTrustManager(Ljavax/net/ssl/X509TrustManager;)V
@5.0.0-alpha.4
-###okhttp3/internal/platform/ConscryptPlatform

+###okhttp3/internal/io/FileSystem
@3.0.0-RC1
+#source(Ljava/io/File;)Lokio/Source;
+#sink(Ljava/io/File;)Lokio/Sink;
+#appendingSink(Ljava/io/File;)Lokio/Sink;
+#delete(Ljava/io/File;)V
+#exists(Ljava/io/File;)Z
+#size(Ljava/io/File;)J
+#rename(Ljava/io/File;Ljava/io/File;)V
+#deleteContents(Ljava/io/File;)V
@5.0.0-alpha.3
-###okhttp3/internal/io/FileSystem

+###okhttp3/internal/tls/BasicTrustRootIndex
@3.9.0
+#<init>([Ljava/security/cert/X509Certificate;)V
+#findByIssuerAndSignature(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.13.0
-###okhttp3/internal/tls/BasicTrustRootIndex

+###okhttp3/internal/http/BridgeInterceptor
@3.4.0-RC1
+#<init>(Lokhttp3/CookieJar;)V
+#intercept(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;
@5.0.0-alpha.4
-###okhttp3/internal/http/BridgeInterceptor

+###okhttp3/internal/http/RetryAndFollowUpInterceptor
@3.4.0-RC1
+#<init>(Lokhttp3/OkHttpClient;)V
+#cancel()V
+#isCanceled()Z
+#client()Lokhttp3/OkHttpClient;
+#setForWebSocket(Z)V
+#isForWebSocket()Z
+#streamAllocation()Lokhttp3/internal/connection/StreamAllocation;
+#intercept(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;
@3.5.0
+#<init>(Lokhttp3/OkHttpClient;Z)V
+#setCallStackTrace(Ljava/lang/Object;)V
-#<init>(Lokhttp3/OkHttpClient;)V
-#client()Lokhttp3/OkHttpClient;
-#setForWebSocket(Z)V
-#isForWebSocket()Z
@3.13.0
+#<init>(Lokhttp3/OkHttpClient;)V
-#<init>(Lokhttp3/OkHttpClient;Z)V
@3.14.0
-#cancel()V
-#isCanceled()Z
-#setCallStackTrace(Ljava/lang/Object;)V
-#streamAllocation()Lokhttp3/internal/connection/StreamAllocation;
@5.0.0-alpha.4
-###okhttp3/internal/http/RetryAndFollowUpInterceptor

+###okhttp3/Headers
@3.0.0-RC1
+#get(Ljava/lang/String;)Ljava/lang/String;
+#getDate(Ljava/lang/String;)Ljava/util/Date;
+#size()I
+#name(I)Ljava/lang/String;
+#value(I)Ljava/lang/String;
+#names()Ljava/util/Set;
+#values(Ljava/lang/String;)Ljava/util/List;
+#newBuilder()Lokhttp3/Headers$Builder;
+#toString()Ljava/lang/String;
+#toMultimap()Ljava/util/Map;
+#of([Ljava/lang/String;)Lokhttp3/Headers;
+#of(Ljava/util/Map;)Lokhttp3/Headers;
@3.3.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.9.0
+#byteCount()J
@3.13.0
+#getInstant(Ljava/lang/String;)Ljava/time/Instant;
@4.0.0-alpha01
+#<init>([Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.0.0-alpha02
+#-deprecated_size()I
+#iterator()Ljava/util/Iterator;
@5.0.0-alpha.4
-###okhttp3/Headers

+###okhttp3/Headers$Builder
@3.0.0-RC1
+#<init>()V
+#add(Ljava/lang/String;)Lokhttp3/Headers$Builder;
+#add(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;
+#removeAll(Ljava/lang/String;)Lokhttp3/Headers$Builder;
+#set(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;
+#get(Ljava/lang/String;)Ljava/lang/String;
+#build()Lokhttp3/Headers;
@3.11.0
+#addAll(Lokhttp3/Headers;)Lokhttp3/Headers$Builder;
@3.12.0
+#addUnsafeNonAscii(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;
+#add(Ljava/lang/String;Ljava/util/Date;)Lokhttp3/Headers$Builder;
+#set(Ljava/lang/String;Ljava/util/Date;)Lokhttp3/Headers$Builder;
@3.13.0
+#add(Ljava/lang/String;Ljava/time/Instant;)Lokhttp3/Headers$Builder;
+#set(Ljava/lang/String;Ljava/time/Instant;)Lokhttp3/Headers$Builder;
@4.0.0-alpha01
+#getNamesAndValues$okhttp()Ljava/util/List;
+#addLenient$okhttp(Ljava/lang/String;)Lokhttp3/Headers$Builder;
+#addLenient$okhttp(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;
@5.0.0-alpha.4
-###okhttp3/Headers$Builder

+###okhttp3/Request
@3.0.0-RC1
+#url()Lokhttp3/HttpUrl;
+#method()Ljava/lang/String;
+#headers()Lokhttp3/Headers;
+#header(Ljava/lang/String;)Ljava/lang/String;
+#headers(Ljava/lang/String;)Ljava/util/List;
+#body()Lokhttp3/RequestBody;
+#tag()Ljava/lang/Object;
+#newBuilder()Lokhttp3/Request$Builder;
+#cacheControl()Lokhttp3/CacheControl;
+#isHttps()Z
+#toString()Ljava/lang/String;
@3.11.0
+#tag(Ljava/lang/Class;)Ljava/lang/Object;
@4.0.0-alpha01
+#getMethod$okhttp()Ljava/lang/String;
+#getHeaders$okhttp()Lokhttp3/Headers;
+#getBody$okhttp()Lokhttp3/RequestBody;
+#getTags$okhttp()Ljava/util/Map;
+#getUrl$okhttp()Lokhttp3/HttpUrl;
+#<init>(Lokhttp3/HttpUrl;Lokhttp3/Request$Builder;)V
@4.0.0-alpha02
+#-deprecated_url()Lokhttp3/HttpUrl;
+#-deprecated_method()Ljava/lang/String;
+#-deprecated_headers()Lokhttp3/Headers;
+#-deprecated_body()Lokhttp3/RequestBody;
+#-deprecated_cacheControl()Lokhttp3/CacheControl;
+#<init>(Lokhttp3/HttpUrl;Ljava/lang/String;Lokhttp3/Headers;Lokhttp3/RequestBody;Ljava/util/Map;)V
-#getMethod$okhttp()Ljava/lang/String;
-#getHeaders$okhttp()Lokhttp3/Headers;
-#getBody$okhttp()Lokhttp3/RequestBody;
-#getUrl$okhttp()Lokhttp3/HttpUrl;
-#<init>(Lokhttp3/HttpUrl;Lokhttp3/Request$Builder;)V
@5.0.0-alpha.4
-###okhttp3/Request

+###okhttp3/HttpUrl
@3.0.0-RC1
+#url()Ljava/net/URL;
+#uri()Ljava/net/URI;
+#scheme()Ljava/lang/String;
+#isHttps()Z
+#encodedUsername()Ljava/lang/String;
+#username()Ljava/lang/String;
+#encodedPassword()Ljava/lang/String;
+#password()Ljava/lang/String;
+#host()Ljava/lang/String;
+#port()I
+#defaultPort(Ljava/lang/String;)I
+#pathSize()I
+#encodedPath()Ljava/lang/String;
+#encodedPathSegments()Ljava/util/List;
+#pathSegments()Ljava/util/List;
+#encodedQuery()Ljava/lang/String;
+#query()Ljava/lang/String;
+#querySize()I
+#queryParameter(Ljava/lang/String;)Ljava/lang/String;
+#queryParameterNames()Ljava/util/Set;
+#queryParameterValues(Ljava/lang/String;)Ljava/util/List;
+#queryParameterName(I)Ljava/lang/String;
+#queryParameterValue(I)Ljava/lang/String;
+#encodedFragment()Ljava/lang/String;
+#fragment()Ljava/lang/String;
+#resolve(Ljava/lang/String;)Lokhttp3/HttpUrl;
+#newBuilder()Lokhttp3/HttpUrl$Builder;
+#newBuilder(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
+#parse(Ljava/lang/String;)Lokhttp3/HttpUrl;
+#get(Ljava/net/URL;)Lokhttp3/HttpUrl;
+#get(Ljava/net/URI;)Lokhttp3/HttpUrl;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.5.0
+#redact()Ljava/lang/String;
@3.7.0
+#topPrivateDomain()Ljava/lang/String;
@3.11.0
+#get(Ljava/lang/String;)Lokhttp3/HttpUrl;
@4.0.0-alpha01
+#getScheme$okhttp()Ljava/lang/String;
+#getHost$okhttp()Ljava/lang/String;
+#getPort$okhttp()I
+#<init>(Lokhttp3/HttpUrl$Builder;)V
+#access$getHEX_DIGITS$cp()[C
+#pathSegmentsToString$okhttp(Ljava/lang/StringBuilder;Ljava/util/List;)V
+#namesAndValuesToQueryString$okhttp(Ljava/lang/StringBuilder;Ljava/util/List;)V
+#queryStringToNamesAndValues$okhttp(Ljava/lang/String;)Ljava/util/List;
+#percentDecode$okhttp(Ljava/lang/String;Z)Ljava/lang/String;
+#percentDecode$okhttp(Ljava/lang/String;IIZ)Ljava/lang/String;
+#percentDecode$okhttp(Lokio/Buffer;Ljava/lang/String;IIZ)V
+#percentEncoded$okhttp(Ljava/lang/String;II)Z
+#canonicalize$okhttp(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;
+#canonicalize$okhttp(Lokio/Buffer;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V
+#canonicalize$okhttp(Ljava/lang/String;Ljava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;
+#canonicalize$okhttp(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;
@4.0.0-alpha02
+#-deprecated_url()Ljava/net/URL;
+#-deprecated_uri()Ljava/net/URI;
+#-deprecated_scheme()Ljava/lang/String;
+#-deprecated_encodedUsername()Ljava/lang/String;
+#-deprecated_username()Ljava/lang/String;
+#-deprecated_encodedPassword()Ljava/lang/String;
+#-deprecated_password()Ljava/lang/String;
+#-deprecated_host()Ljava/lang/String;
+#-deprecated_port()I
+#-deprecated_pathSize()I
+#-deprecated_encodedPath()Ljava/lang/String;
+#-deprecated_encodedPathSegments()Ljava/util/List;
+#-deprecated_pathSegments()Ljava/util/List;
+#-deprecated_encodedQuery()Ljava/lang/String;
+#-deprecated_query()Ljava/lang/String;
+#-deprecated_querySize()I
+#-deprecated_queryParameterNames()Ljava/util/Set;
+#-deprecated_encodedFragment()Ljava/lang/String;
+#-deprecated_fragment()Ljava/lang/String;
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V
-#getScheme$okhttp()Ljava/lang/String;
-#getHost$okhttp()Ljava/lang/String;
-#getPort$okhttp()I
-#<init>(Lokhttp3/HttpUrl$Builder;)V
-#pathSegmentsToString$okhttp(Ljava/lang/StringBuilder;Ljava/util/List;)V
-#namesAndValuesToQueryString$okhttp(Ljava/lang/StringBuilder;Ljava/util/List;)V
-#queryStringToNamesAndValues$okhttp(Ljava/lang/String;)Ljava/util/List;
-#percentDecode$okhttp(Ljava/lang/String;Z)Ljava/lang/String;
-#percentDecode$okhttp(Ljava/lang/String;IIZ)Ljava/lang/String;
-#percentDecode$okhttp(Lokio/Buffer;Ljava/lang/String;IIZ)V
-#percentEncoded$okhttp(Ljava/lang/String;II)Z
-#canonicalize$okhttp(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;
-#canonicalize$okhttp(Lokio/Buffer;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V
-#canonicalize$okhttp(Ljava/lang/String;Ljava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;
-#canonicalize$okhttp(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;
@5.0.0-alpha.4
-###okhttp3/HttpUrl

+###okhttp3/ConnectionSpec
@3.0.0-RC1
+#isTls()Z
+#cipherSuites()Ljava/util/List;
+#tlsVersions()Ljava/util/List;
+#supportsTlsExtensions()Z
+#isCompatible(Ljavax/net/ssl/SSLSocket;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@4.0.0-alpha01
+#getSupportsTlsExtensions$okhttp()Z
+#getCipherSuites$okhttp()[Ljava/lang/String;
+#getTlsVersions$okhttp()[Ljava/lang/String;
+#apply$okhttp(Ljavax/net/ssl/SSLSocket;Z)V
+#<init>(Lokhttp3/ConnectionSpec$Builder;)V
@4.0.0-alpha02
+#-deprecated_cipherSuites()Ljava/util/List;
+#-deprecated_tlsVersions()Ljava/util/List;
+#-deprecated_supportsTlsExtensions()Z
+#<init>(ZZ[Ljava/lang/String;[Ljava/lang/String;)V
+#access$getCipherSuitesAsString$p(Lokhttp3/ConnectionSpec;)[Ljava/lang/String;
+#access$getTlsVersionsAsString$p(Lokhttp3/ConnectionSpec;)[Ljava/lang/String;
-#getSupportsTlsExtensions$okhttp()Z
-#getCipherSuites$okhttp()[Ljava/lang/String;
-#getTlsVersions$okhttp()[Ljava/lang/String;
-#<init>(Lokhttp3/ConnectionSpec$Builder;)V
@5.0.0-alpha.2
+#getCipherSuitesAsString$okhttp()[Ljava/lang/String;
-#access$getCipherSuitesAsString$p(Lokhttp3/ConnectionSpec;)[Ljava/lang/String;
@5.0.0-alpha.4
-###okhttp3/ConnectionSpec

+###okhttp3/MultipartBody$Part
@3.0.0-RC1
+#create(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;
+#create(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;
+#createFormData(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Part;
+#createFormData(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;
@3.5.0
+#headers()Lokhttp3/Headers;
+#body()Lokhttp3/RequestBody;
@4.0.0-alpha01
+#getHeaders$okhttp()Lokhttp3/Headers;
+#getBody$okhttp()Lokhttp3/RequestBody;
+#<init>(Lokhttp3/Headers;Lokhttp3/RequestBody;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.0.0-alpha02
+#-deprecated_headers()Lokhttp3/Headers;
+#-deprecated_body()Lokhttp3/RequestBody;
-#getHeaders$okhttp()Lokhttp3/Headers;
-#getBody$okhttp()Lokhttp3/RequestBody;
@5.0.0-alpha.4
-###okhttp3/MultipartBody$Part

+###okhttp3/Connection
@3.0.0-RC1
+#route()Lokhttp3/Route;
+#socket()Ljava/net/Socket;
+#handshake()Lokhttp3/Handshake;
+#protocol()Lokhttp3/Protocol;
@5.0.0-alpha.4
-###okhttp3/Connection

+###okhttp3/CacheControl
@3.0.0-RC1
+#noCache()Z
+#noStore()Z
+#maxAgeSeconds()I
+#sMaxAgeSeconds()I
+#isPrivate()Z
+#isPublic()Z
+#mustRevalidate()Z
+#maxStaleSeconds()I
+#minFreshSeconds()I
+#onlyIfCached()Z
+#noTransform()Z
+#parse(Lokhttp3/Headers;)Lokhttp3/CacheControl;
+#toString()Ljava/lang/String;
@3.8.0
+#immutable()Z
@4.0.0-alpha01
+#<init>(ZZIIZZZIIZZZLjava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.0.0-alpha02
+#-deprecated_noCache()Z
+#-deprecated_noStore()Z
+#-deprecated_maxAgeSeconds()I
+#-deprecated_sMaxAgeSeconds()I
+#-deprecated_mustRevalidate()Z
+#-deprecated_maxStaleSeconds()I
+#-deprecated_minFreshSeconds()I
+#-deprecated_onlyIfCached()Z
+#-deprecated_noTransform()Z
+#-deprecated_immutable()Z
@5.0.0-alpha.4
-###okhttp3/CacheControl

+###okhttp3/internal/http1/Http1Codec
@3.5.0
+#<init>(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/StreamAllocation;Lokio/BufferedSource;Lokio/BufferedSink;)V
+#createRequestBody(Lokhttp3/Request;J)Lokio/Sink;
+#cancel()V
+#writeRequestHeaders(Lokhttp3/Request;)V
+#readResponseHeaders()Lokhttp3/Response$Builder;
+#openResponseBody(Lokhttp3/Response;)Lokhttp3/ResponseBody;
+#isClosed()Z
+#finishRequest()V
+#writeRequest(Lokhttp3/Headers;Ljava/lang/String;)V
+#readResponse()Lokhttp3/Response$Builder;
+#readHeaders()Lokhttp3/Headers;
+#newChunkedSink()Lokio/Sink;
+#newFixedLengthSink(J)Lokio/Sink;
+#newFixedLengthSource(J)Lokio/Source;
+#newChunkedSource(Lokhttp3/HttpUrl;)Lokio/Source;
+#newUnknownLengthSource()Lokio/Source;
@3.6.0
+#flushRequest()V
+#readResponseHeaders(Z)Lokhttp3/Response$Builder;
-#readResponseHeaders()Lokhttp3/Response$Builder;
-#readResponse()Lokhttp3/Response$Builder;
@3.13.0
+#trailers()Lokhttp3/Headers;
@3.14.0
-###okhttp3/internal/http1/Http1Codec

+###okhttp3/internal/cache/DiskLruCache$Editor
@3.4.0-RC1
+#newSource(I)Lokio/Source;
+#newSink(I)Lokio/Sink;
+#commit()V
+#abort()V
+#abortUnlessCommitted()V
@4.0.0-alpha01
+#getWritten$okhttp()[Z
+#detach$okhttp()V
+#getEntry$okhttp()Lokhttp3/internal/cache/DiskLruCache$Entry;
+#<init>(Lokhttp3/internal/cache/DiskLruCache;Lokhttp3/internal/cache/DiskLruCache$Entry;)V
-#abortUnlessCommitted()V
@5.0.0-alpha.4
-###okhttp3/internal/cache/DiskLruCache$Editor

+###okhttp3/internal/connection/RealConnection
@3.4.0-RC1
+#<init>(Lokhttp3/Route;)V
+#connect(IIILjava/util/List;Z)V
+#route()Lokhttp3/Route;
+#cancel()V
+#socket()Ljava/net/Socket;
+#isHealthy(Z)Z
+#onStream(Lokhttp3/internal/framed/FramedStream;)V
+#onSettings(Lokhttp3/internal/framed/FramedConnection;)V
+#handshake()Lokhttp3/Handshake;
+#isMultiplexed()Z
+#protocol()Lokhttp3/Protocol;
+#toString()Ljava/lang/String;
@3.5.0
+#onStream(Lokhttp3/internal/http2/Http2Stream;)V
+#onSettings(Lokhttp3/internal/http2/Http2Connection;)V
-#onStream(Lokhttp3/internal/framed/FramedStream;)V
-#onSettings(Lokhttp3/internal/framed/FramedConnection;)V
@3.6.0
+#<init>(Lokhttp3/ConnectionPool;Lokhttp3/Route;)V
+#testConnection(Lokhttp3/ConnectionPool;Lokhttp3/Route;Ljava/net/Socket;J)Lokhttp3/internal/connection/RealConnection;
+#connect(IIIZ)V
+#isEligible(Lokhttp3/Address;)Z
+#newCodec(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/StreamAllocation;)Lokhttp3/internal/http/HttpCodec;
+#newWebSocketStreams(Lokhttp3/internal/connection/StreamAllocation;)Lokhttp3/internal/ws/RealWebSocket$Streams;
-#<init>(Lokhttp3/Route;)V
-#connect(IIILjava/util/List;Z)V
@3.7.0
+#isEligible(Lokhttp3/Address;Lokhttp3/Route;)Z
+#supportsUrl(Lokhttp3/HttpUrl;)Z
-#isEligible(Lokhttp3/Address;)Z
@3.9.0
+#connect(IIIZLokhttp3/Call;Lokhttp3/EventListener;)V
+#newCodec(Lokhttp3/OkHttpClient;Lokhttp3/Interceptor$Chain;Lokhttp3/internal/connection/StreamAllocation;)Lokhttp3/internal/http/HttpCodec;
-#connect(IIIZ)V
-#newCodec(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/StreamAllocation;)Lokhttp3/internal/http/HttpCodec;
@3.10.0
+#connect(IIIIZLokhttp3/Call;Lokhttp3/EventListener;)V
-#connect(IIIZLokhttp3/Call;Lokhttp3/EventListener;)V
@3.14.0
+#<init>(Lokhttp3/internal/connection/RealConnectionPool;Lokhttp3/Route;)V
+#noNewExchanges()V
-#<init>(Lokhttp3/ConnectionPool;Lokhttp3/Route;)V
-#testConnection(Lokhttp3/ConnectionPool;Lokhttp3/Route;Ljava/net/Socket;J)Lokhttp3/internal/connection/RealConnection;
-#isEligible(Lokhttp3/Address;Lokhttp3/Route;)Z
-#newCodec(Lokhttp3/OkHttpClient;Lokhttp3/Interceptor$Chain;Lokhttp3/internal/connection/StreamAllocation;)Lokhttp3/internal/http/HttpCodec;
-#newWebSocketStreams(Lokhttp3/internal/connection/StreamAllocation;)Lokhttp3/internal/ws/RealWebSocket$Streams;
@4.0.0-alpha02
+#getNoNewExchanges()Z
+#setNoNewExchanges(Z)V
+#getRouteFailureCount$okhttp()I
+#setRouteFailureCount$okhttp(I)V
+#getSuccessCount$okhttp()I
+#setSuccessCount$okhttp(I)V
+#getTransmitters()Ljava/util/List;
+#getIdleAtNanos$okhttp()J
+#setIdleAtNanos$okhttp(J)V
+#isEligible$okhttp(Lokhttp3/Address;Ljava/util/List;)Z
+#newCodec$okhttp(Lokhttp3/OkHttpClient;Lokhttp3/Interceptor$Chain;)Lokhttp3/internal/http/ExchangeCodec;
+#newWebSocketStreams$okhttp(Lokhttp3/internal/connection/Exchange;)Lokhttp3/internal/ws/RealWebSocket$Streams;
+#trackFailure$okhttp(Ljava/io/IOException;)V
+#getConnectionPool()Lokhttp3/internal/connection/RealConnectionPool;
+#access$getSocket$p(Lokhttp3/internal/connection/RealConnection;)Ljava/net/Socket;
+#access$setSocket$p(Lokhttp3/internal/connection/RealConnection;Ljava/net/Socket;)V
@4.2.0
+#access$getHandshake$p(Lokhttp3/internal/connection/RealConnection;)Lokhttp3/Handshake;
+#access$setHandshake$p(Lokhttp3/internal/connection/RealConnection;Lokhttp3/Handshake;)V
@4.3.0
+#onSettings(Lokhttp3/internal/http2/Http2Connection;Lokhttp3/internal/http2/Settings;)V
-#onSettings(Lokhttp3/internal/http2/Http2Connection;)V
@4.4.0
+#getCalls()Ljava/util/List;
+#getIdleAtNs$okhttp()J
+#setIdleAtNs$okhttp(J)V
+#noCoalescedConnections()V
+#newCodec$okhttp(Lokhttp3/OkHttpClient;Lokhttp3/internal/http/RealInterceptorChain;)Lokhttp3/internal/http/ExchangeCodec;
+#connectFailed$okhttp(Lokhttp3/OkHttpClient;Lokhttp3/Route;Ljava/io/IOException;)V
+#trackFailure$okhttp(Lokhttp3/internal/connection/RealCall;Ljava/io/IOException;)V
-#getTransmitters()Ljava/util/List;
-#getIdleAtNanos$okhttp()J
-#setIdleAtNanos$okhttp(J)V
-#newCodec$okhttp(Lokhttp3/OkHttpClient;Lokhttp3/Interceptor$Chain;)Lokhttp3/internal/http/ExchangeCodec;
-#trackFailure$okhttp(Ljava/io/IOException;)V
@4.8.0
+#isMultiplexed$okhttp()Z
+#noNewExchanges$okhttp()V
+#noCoalescedConnections$okhttp()V
+#incrementSuccessCount$okhttp()V
-#getSuccessCount$okhttp()I
-#setSuccessCount$okhttp(I)V
-#isMultiplexed()Z
-#noNewExchanges()V
-#noCoalescedConnections()V
-#supportsUrl(Lokhttp3/HttpUrl;)Z
@4.10.0
-#access$setHandshake$p(Lokhttp3/internal/connection/RealConnection;Lokhttp3/Handshake;)V
-#access$getSocket$p(Lokhttp3/internal/connection/RealConnection;)Ljava/net/Socket;
@5.0.0-alpha.1
+#access$setHandshake$p(Lokhttp3/internal/connection/RealConnection;Lokhttp3/Handshake;)V
+#access$getSocket$p(Lokhttp3/internal/connection/RealConnection;)Ljava/net/Socket;
@5.0.0-alpha.2
+#getIdleAtNs()J
+#setIdleAtNs(J)V
-#getIdleAtNs$okhttp()J
-#setIdleAtNs$okhttp(J)V
@5.0.0-alpha.3
-#access$setHandshake$p(Lokhttp3/internal/connection/RealConnection;Lokhttp3/Handshake;)V
-#access$getSocket$p(Lokhttp3/internal/connection/RealConnection;)Ljava/net/Socket;
@5.0.0-alpha.4
-###okhttp3/internal/connection/RealConnection

+###okhttp3/internal/http2/ConnectionShutdownException
@3.5.0
+#<init>()V
@5.0.0-alpha.4
-###okhttp3/internal/http2/ConnectionShutdownException

+###okhttp3/internal/http2/Http2Connection$Listener
@3.5.0
+#<init>()V
+#onStream(Lokhttp3/internal/http2/Http2Stream;)V
+#onSettings(Lokhttp3/internal/http2/Http2Connection;)V
@4.3.0
+#onSettings(Lokhttp3/internal/http2/Http2Connection;Lokhttp3/internal/http2/Settings;)V
-#onSettings(Lokhttp3/internal/http2/Http2Connection;)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/Http2Connection$Listener

+###okhttp3/internal/http/RealResponseBody
@3.0.0-RC1
+#<init>(Lokhttp3/Headers;Lokio/BufferedSource;)V
+#contentType()Lokhttp3/MediaType;
+#contentLength()J
+#source()Lokio/BufferedSource;
@3.9.0
+#<init>(Ljava/lang/String;JLokio/BufferedSource;)V
-#<init>(Lokhttp3/Headers;Lokio/BufferedSource;)V
@5.0.0-alpha.4
-###okhttp3/internal/http/RealResponseBody

+###okhttp3/internal/http/HttpHeaders
@3.4.0-RC1
+#contentLength(Lokhttp3/Response;)J
+#contentLength(Lokhttp3/Headers;)J
+#varyMatches(Lokhttp3/Response;Lokhttp3/Headers;Lokhttp3/Request;)Z
+#hasVaryAll(Lokhttp3/Response;)Z
+#hasVaryAll(Lokhttp3/Headers;)Z
+#varyFields(Lokhttp3/Headers;)Ljava/util/Set;
+#varyHeaders(Lokhttp3/Response;)Lokhttp3/Headers;
+#varyHeaders(Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;
+#parseChallenges(Lokhttp3/Headers;Ljava/lang/String;)Ljava/util/List;
+#receiveHeaders(Lokhttp3/CookieJar;Lokhttp3/HttpUrl;Lokhttp3/Headers;)V
+#hasBody(Lokhttp3/Response;)Z
+#skipUntil(Ljava/lang/String;ILjava/lang/String;)I
+#skipWhitespace(Ljava/lang/String;I)I
+#parseSeconds(Ljava/lang/String;I)I
@4.0.0-alpha01
+#promisesBody(Lokhttp3/Response;)Z
-#contentLength(Lokhttp3/Response;)J
-#contentLength(Lokhttp3/Headers;)J
-#varyMatches(Lokhttp3/Response;Lokhttp3/Headers;Lokhttp3/Request;)Z
-#hasVaryAll(Lokhttp3/Response;)Z
-#hasVaryAll(Lokhttp3/Headers;)Z
-#varyFields(Lokhttp3/Headers;)Ljava/util/Set;
-#varyHeaders(Lokhttp3/Response;)Lokhttp3/Headers;
-#varyHeaders(Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;
-#hasBody(Lokhttp3/Response;)Z
-#skipUntil(Ljava/lang/String;ILjava/lang/String;)I
-#skipWhitespace(Ljava/lang/String;I)I
-#parseSeconds(Ljava/lang/String;I)I
@4.0.1
+#hasBody(Lokhttp3/Response;)Z
@5.0.0-alpha.4
-###okhttp3/internal/http/HttpHeaders

+###okhttp3/internal/ws/WebSocketReader$FrameCallback
@3.5.0
+#onReadMessage(Ljava/lang/String;)V
+#onReadMessage(Lokio/ByteString;)V
+#onReadPing(Lokio/ByteString;)V
+#onReadPong(Lokio/ByteString;)V
+#onReadClose(ILjava/lang/String;)V
@5.0.0-alpha.4
-###okhttp3/internal/ws/WebSocketReader$FrameCallback

+###okhttp3/WebSocket
@3.5.0
+#request()Lokhttp3/Request;
+#queueSize()J
+#send(Ljava/lang/String;)Z
+#send(Lokio/ByteString;)Z
+#close(ILjava/lang/String;)Z
+#cancel()V
@5.0.0-alpha.4
-###okhttp3/WebSocket

+###okhttp3/Callback
@3.0.0-RC1
+#onFailure(Lokhttp3/Request;Ljava/io/IOException;)V
+#onResponse(Lokhttp3/Response;)V
@3.0.0
+#onFailure(Lokhttp3/Call;Ljava/io/IOException;)V
+#onResponse(Lokhttp3/Call;Lokhttp3/Response;)V
-#onFailure(Lokhttp3/Request;Ljava/io/IOException;)V
-#onResponse(Lokhttp3/Response;)V
@5.0.0-alpha.4
-###okhttp3/Callback

+###okhttp3/Protocol
@3.0.0-RC1
+#values()[Lokhttp3/Protocol;
+#valueOf(Ljava/lang/String;)Lokhttp3/Protocol;
+#get(Ljava/lang/String;)Lokhttp3/Protocol;
+#toString()Ljava/lang/String;
@4.0.0-alpha01
+#access$getProtocol$p(Lokhttp3/Protocol;)Ljava/lang/String;
@5.0.0-alpha.4
-###okhttp3/Protocol

+###okhttp3/Address
@3.0.0-RC1
+#<init>(Ljava/lang/String;ILokhttp3/Dns;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;Lokhttp3/CertificatePinner;Lokhttp3/Authenticator;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V
+#url()Lokhttp3/HttpUrl;
+#dns()Lokhttp3/Dns;
+#socketFactory()Ljavax/net/SocketFactory;
+#proxyAuthenticator()Lokhttp3/Authenticator;
+#protocols()Ljava/util/List;
+#connectionSpecs()Ljava/util/List;
+#proxySelector()Ljava/net/ProxySelector;
+#proxy()Ljava/net/Proxy;
+#sslSocketFactory()Ljavax/net/ssl/SSLSocketFactory;
+#hostnameVerifier()Ljavax/net/ssl/HostnameVerifier;
+#certificatePinner()Lokhttp3/CertificatePinner;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.6.0
+#toString()Ljava/lang/String;
@4.0.0-alpha01
+#equalsNonHost$okhttp(Lokhttp3/Address;)Z
@4.0.0-alpha02
+#-deprecated_url()Lokhttp3/HttpUrl;
+#-deprecated_dns()Lokhttp3/Dns;
+#-deprecated_socketFactory()Ljavax/net/SocketFactory;
+#-deprecated_proxyAuthenticator()Lokhttp3/Authenticator;
+#-deprecated_protocols()Ljava/util/List;
+#-deprecated_connectionSpecs()Ljava/util/List;
+#-deprecated_proxySelector()Ljava/net/ProxySelector;
+#-deprecated_proxy()Ljava/net/Proxy;
+#-deprecated_sslSocketFactory()Ljavax/net/ssl/SSLSocketFactory;
+#-deprecated_hostnameVerifier()Ljavax/net/ssl/HostnameVerifier;
+#-deprecated_certificatePinner()Lokhttp3/CertificatePinner;
@5.0.0-alpha.4
-###okhttp3/Address

+###okhttp3/RequestBody
@3.0.0-RC1
+#<init>()V
+#contentType()Lokhttp3/MediaType;
+#contentLength()J
+#writeTo(Lokio/BufferedSink;)V
+#create(Lokhttp3/MediaType;Ljava/lang/String;)Lokhttp3/RequestBody;
+#create(Lokhttp3/MediaType;Lokio/ByteString;)Lokhttp3/RequestBody;
+#create(Lokhttp3/MediaType;[B)Lokhttp3/RequestBody;
+#create(Lokhttp3/MediaType;[BII)Lokhttp3/RequestBody;
+#create(Lokhttp3/MediaType;Ljava/io/File;)Lokhttp3/RequestBody;
@3.14.0
+#isDuplex()Z
+#isOneShot()Z
@4.0.0-alpha01
+#create(Lokhttp3/MediaType;[BI)Lokhttp3/RequestBody;
@4.0.0-alpha02
+#create(Ljava/lang/String;Lokhttp3/MediaType;)Lokhttp3/RequestBody;
+#create(Lokio/ByteString;Lokhttp3/MediaType;)Lokhttp3/RequestBody;
+#create([BLokhttp3/MediaType;II)Lokhttp3/RequestBody;
+#create([BLokhttp3/MediaType;I)Lokhttp3/RequestBody;
+#create([BLokhttp3/MediaType;)Lokhttp3/RequestBody;
+#create([B)Lokhttp3/RequestBody;
+#create(Ljava/io/File;Lokhttp3/MediaType;)Lokhttp3/RequestBody;
@5.0.0-alpha.3
+#create(Ljava/io/FileDescriptor;Lokhttp3/MediaType;)Lokhttp3/RequestBody;
@5.0.0-alpha.4
-###okhttp3/RequestBody

+###okhttp3/FormBody$Builder
@3.0.0-RC1
+#<init>()V
+#add(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/FormBody$Builder;
+#addEncoded(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/FormBody$Builder;
+#build()Lokhttp3/FormBody;
@3.9.0
+#<init>(Ljava/nio/charset/Charset;)V
@4.0.0-alpha01
+#<init>(Ljava/nio/charset/Charset;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/FormBody$Builder

+###okhttp3/internal/proxy/NullProxySelector
@3.12.0
+#<init>()V
+#select(Ljava/net/URI;)Ljava/util/List;
+#connectFailed(Ljava/net/URI;Ljava/net/SocketAddress;Ljava/io/IOException;)V
@4.2.1
-#<init>()V
@5.0.0-alpha.4
-###okhttp3/internal/proxy/NullProxySelector

+###okhttp3/internal/connection/RouteSelector$Selection
@3.9.0
+#hasNext()Z
+#next()Lokhttp3/Route;
+#getAll()Ljava/util/List;
@4.0.0-alpha01
+#getRoutes()Ljava/util/List;
+#<init>(Ljava/util/List;)V
-#getAll()Ljava/util/List;
@5.0.0-alpha.4
-###okhttp3/internal/connection/RouteSelector$Selection

+###okhttp3/internal/connection/ConnectInterceptor
@3.4.0-RC1
+#<init>(Lokhttp3/OkHttpClient;)V
+#intercept(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;
@4.0.0-alpha01
+#getClient()Lokhttp3/OkHttpClient;
@4.0.0-alpha02
-#getClient()Lokhttp3/OkHttpClient;
-#<init>(Lokhttp3/OkHttpClient;)V
@5.0.0-alpha.4
-###okhttp3/internal/connection/ConnectInterceptor

+###okhttp3/internal/platform/Platform
@3.4.0-RC1
+#<init>()V
+#get()Lokhttp3/internal/platform/Platform;
+#getPrefix()Ljava/lang/String;
+#trustManager(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
+#afterHandshake(Ljavax/net/ssl/SSLSocket;)V
+#getSelectedProtocol(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
+#connectSocket(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V
+#log(ILjava/lang/String;Ljava/lang/Throwable;)V
+#isCleartextTrafficPermitted(Ljava/lang/String;)Z
+#alpnProtocolNames(Ljava/util/List;)Ljava/util/List;
+#buildCertificateChainCleaner(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;
@3.5.0
+#getStackTraceForCloseable(Ljava/lang/String;)Ljava/lang/Object;
+#logCloseableLeak(Ljava/lang/String;Ljava/lang/Object;)V
@3.9.0
+#buildTrustRootIndex(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;
@3.9.1
+#buildCertificateChainCleaner(Ljavax/net/ssl/SSLSocketFactory;)Lokhttp3/internal/tls/CertificateChainCleaner;
-#trustManager(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
@3.10.0
+#isConscryptPreferred()Z
+#getSSLContext()Ljavax/net/ssl/SSLContext;
@3.11.0
+#configureSslSocketFactory(Ljavax/net/ssl/SSLSocketFactory;)V
@3.12.0
+#toString()Ljava/lang/String;
@3.12.12
+#isAndroid()Z
@3.13.0
-#isAndroid()Z
-#buildTrustRootIndex(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;
@3.13.1
+#buildTrustRootIndex(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;
@3.14.9
+#isAndroid()Z
@4.0.0-alpha01
+#newSSLContext()Ljavax/net/ssl/SSLContext;
+#platformTrustManager()Ljavax/net/ssl/X509TrustManager;
+#configureTrustManager(Ljavax/net/ssl/X509TrustManager;)V
+#access$getPlatform$cp()Lokhttp3/internal/platform/Platform;
+#access$setPlatform$cp(Lokhttp3/internal/platform/Platform;)V
+#concatLengthPrefixed(Ljava/util/List;)[B
+#readFieldOrNull(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
-#alpnProtocolNames(Ljava/util/List;)Ljava/util/List;
-#isAndroid()Z
-#getSSLContext()Ljavax/net/ssl/SSLContext;
@4.0.0-alpha02
-#isConscryptPreferred()Z
-#concatLengthPrefixed(Ljava/util/List;)[B
-#readFieldOrNull(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
@4.3.0
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)V
+#log(Ljava/lang/String;ILjava/lang/Throwable;)V
+#log$default(Lokhttp3/internal/platform/Platform;Ljava/lang/String;ILjava/lang/Throwable;ILjava/lang/Object;)V
-#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
-#log(ILjava/lang/String;Ljava/lang/Throwable;)V
@4.3.1
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
-#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)V
@4.6.0
+#trustManager(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
+#newSslSocketFactory(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;
-#buildCertificateChainCleaner(Ljavax/net/ssl/SSLSocketFactory;)Lokhttp3/internal/tls/CertificateChainCleaner;
-#configureSslSocketFactory(Ljavax/net/ssl/SSLSocketFactory;)V
-#configureTrustManager(Ljavax/net/ssl/X509TrustManager;)V
@4.7.0
+#access$isAndroid$cp()Z
@4.7.2
-#access$isAndroid$cp()Z
@5.0.0-alpha.4
-###okhttp3/internal/platform/Platform

+###okhttp3/internal/http2/PushObserver
@3.5.0
+#onRequest(ILjava/util/List;)Z
+#onHeaders(ILjava/util/List;Z)Z
+#onData(ILokio/BufferedSource;IZ)Z
+#onReset(ILokhttp3/internal/http2/ErrorCode;)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/PushObserver

+###okhttp3/internal/tls/TrustRootIndex
@3.1.1
+#findByIssuerAndSignature(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;
@3.3.0
+#<init>()V
+#get(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;
+#get([Ljava/security/cert/X509Certificate;)Lokhttp3/internal/tls/TrustRootIndex;
-#findByIssuerAndSignature(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;
@3.4.0-RC1
+#findByIssuerAndSignature(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;
@3.9.0
-#<init>()V
-#get(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;
-#get([Ljava/security/cert/X509Certificate;)Lokhttp3/internal/tls/TrustRootIndex;
@3.13.0
-###okhttp3/internal/tls/TrustRootIndex

+###okhttp3/internal/http/RequestLine
@3.0.0-RC1
+#requestPath(Lokhttp3/HttpUrl;)Ljava/lang/String;
@3.5.0
+#get(Lokhttp3/Request;Ljava/net/Proxy$Type;)Ljava/lang/String;
@5.0.0-alpha.4
-###okhttp3/internal/http/RequestLine

+###okhttp3/FormBody
@3.0.0-RC1
+#size()I
+#encodedName(I)Ljava/lang/String;
+#name(I)Ljava/lang/String;
+#encodedValue(I)Ljava/lang/String;
+#value(I)Ljava/lang/String;
+#contentType()Lokhttp3/MediaType;
+#contentLength()J
+#writeTo(Lokio/BufferedSink;)V
@4.0.0-alpha01
+#<init>(Ljava/util/List;Ljava/util/List;)V
@4.0.0-alpha02
+#-deprecated_size()I
@5.0.0-alpha.4
-###okhttp3/FormBody

+###okhttp3/Response
@3.0.0-RC1
+#request()Lokhttp3/Request;
+#protocol()Lokhttp3/Protocol;
+#code()I
+#isSuccessful()Z
+#message()Ljava/lang/String;
+#handshake()Lokhttp3/Handshake;
+#headers(Ljava/lang/String;)Ljava/util/List;
+#header(Ljava/lang/String;)Ljava/lang/String;
+#header(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#headers()Lokhttp3/Headers;
+#peekBody(J)Lokhttp3/ResponseBody;
+#body()Lokhttp3/ResponseBody;
+#newBuilder()Lokhttp3/Response$Builder;
+#isRedirect()Z
+#networkResponse()Lokhttp3/Response;
+#cacheResponse()Lokhttp3/Response;
+#priorResponse()Lokhttp3/Response;
+#challenges()Ljava/util/List;
+#cacheControl()Lokhttp3/CacheControl;
+#toString()Ljava/lang/String;
@3.3.0
+#sentRequestAtMillis()J
+#receivedResponseAtMillis()J
+#close()V
@3.13.0
+#trailers()Lokhttp3/Headers;
@4.0.0-alpha01
+#getCode$okhttp()I
+#getHandshake$okhttp()Lokhttp3/Handshake;
+#getHeaders$okhttp()Lokhttp3/Headers;
+#getBody$okhttp()Lokhttp3/ResponseBody;
+#getNetworkResponse$okhttp()Lokhttp3/Response;
+#getCacheResponse$okhttp()Lokhttp3/Response;
+#getPriorResponse$okhttp()Lokhttp3/Response;
+#getSentRequestAtMillis$okhttp()J
+#getReceivedResponseAtMillis$okhttp()J
+#getExchange$okhttp()Lokhttp3/internal/connection/Exchange;
+#header$default(Lokhttp3/Response;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;
+#getRequest$okhttp()Lokhttp3/Request;
+#getProtocol$okhttp()Lokhttp3/Protocol;
+#getMessage$okhttp()Ljava/lang/String;
+#<init>(Lokhttp3/Request;Lokhttp3/Protocol;Ljava/lang/String;Lokhttp3/Response$Builder;)V
@4.0.0-alpha02
+#-deprecated_request()Lokhttp3/Request;
+#-deprecated_protocol()Lokhttp3/Protocol;
+#-deprecated_code()I
+#-deprecated_message()Ljava/lang/String;
+#-deprecated_handshake()Lokhttp3/Handshake;
+#-deprecated_headers()Lokhttp3/Headers;
+#-deprecated_body()Lokhttp3/ResponseBody;
+#-deprecated_networkResponse()Lokhttp3/Response;
+#-deprecated_cacheResponse()Lokhttp3/Response;
+#-deprecated_priorResponse()Lokhttp3/Response;
+#-deprecated_cacheControl()Lokhttp3/CacheControl;
+#-deprecated_sentRequestAtMillis()J
+#-deprecated_receivedResponseAtMillis()J
+#exchange()Lokhttp3/internal/connection/Exchange;
+#<init>(Lokhttp3/Request;Lokhttp3/Protocol;Ljava/lang/String;ILokhttp3/Handshake;Lokhttp3/Headers;Lokhttp3/ResponseBody;Lokhttp3/Response;Lokhttp3/Response;Lokhttp3/Response;JJLokhttp3/internal/connection/Exchange;)V
-#getCode$okhttp()I
-#getHandshake$okhttp()Lokhttp3/Handshake;
-#getHeaders$okhttp()Lokhttp3/Headers;
-#getBody$okhttp()Lokhttp3/ResponseBody;
-#getNetworkResponse$okhttp()Lokhttp3/Response;
-#getCacheResponse$okhttp()Lokhttp3/Response;
-#getPriorResponse$okhttp()Lokhttp3/Response;
-#getSentRequestAtMillis$okhttp()J
-#getReceivedResponseAtMillis$okhttp()J
-#getExchange$okhttp()Lokhttp3/internal/connection/Exchange;
-#getRequest$okhttp()Lokhttp3/Request;
-#getProtocol$okhttp()Lokhttp3/Protocol;
-#getMessage$okhttp()Ljava/lang/String;
-#<init>(Lokhttp3/Request;Lokhttp3/Protocol;Ljava/lang/String;Lokhttp3/Response$Builder;)V
@5.0.0-alpha.4
-###okhttp3/Response

+###okhttp3/HttpUrl$Builder
@3.0.0-RC1
+#<init>()V
+#scheme(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
+#username(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
+#encodedUsername(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
+#password(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
+#encodedPassword(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
+#host(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
+#port(I)Lokhttp3/HttpUrl$Builder;
+#addPathSegment(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
+#addEncodedPathSegment(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
+#setPathSegment(ILjava/lang/String;)Lokhttp3/HttpUrl$Builder;
+#setEncodedPathSegment(ILjava/lang/String;)Lokhttp3/HttpUrl$Builder;
+#removePathSegment(I)Lokhttp3/HttpUrl$Builder;
+#encodedPath(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
+#query(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
+#encodedQuery(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
+#addQueryParameter(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
+#addEncodedQueryParameter(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
+#setQueryParameter(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
+#setEncodedQueryParameter(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
+#removeAllQueryParameters(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
+#removeAllEncodedQueryParameters(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
+#fragment(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
+#encodedFragment(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
+#build()Lokhttp3/HttpUrl;
+#toString()Ljava/lang/String;
@3.2.0
+#addPathSegments(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
+#addEncodedPathSegments(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
@4.0.0-alpha01
+#getScheme$okhttp()Ljava/lang/String;
+#setScheme$okhttp(Ljava/lang/String;)V
+#getEncodedUsername$okhttp()Ljava/lang/String;
+#setEncodedUsername$okhttp(Ljava/lang/String;)V
+#getEncodedPassword$okhttp()Ljava/lang/String;
+#setEncodedPassword$okhttp(Ljava/lang/String;)V
+#getHost$okhttp()Ljava/lang/String;
+#setHost$okhttp(Ljava/lang/String;)V
+#getPort$okhttp()I
+#setPort$okhttp(I)V
+#getEncodedPathSegments$okhttp()Ljava/util/List;
+#getEncodedQueryNamesAndValues$okhttp()Ljava/util/List;
+#setEncodedQueryNamesAndValues$okhttp(Ljava/util/List;)V
+#getEncodedFragment$okhttp()Ljava/lang/String;
+#setEncodedFragment$okhttp(Ljava/lang/String;)V
+#effectivePort$okhttp()I
+#reencodeForUri$okhttp()Lokhttp3/HttpUrl$Builder;
+#parse$okhttp(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
@4.0.0-alpha02
-#effectivePort$okhttp()I
@5.0.0-alpha.4
-###okhttp3/HttpUrl$Builder

+###okhttp3/Credentials
@3.0.0-RC1
+#basic(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@3.6.0
+#basic(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
@4.0.0-alpha01
+#basic$default(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;ILjava/lang/Object;)Ljava/lang/String;
@5.0.0-alpha.4
-###okhttp3/Credentials

+###okhttp3/CertificatePinner
@3.0.0-RC1
+#check(Ljava/lang/String;Ljava/util/List;)V
+#check(Ljava/lang/String;[Ljava/security/cert/Certificate;)V
+#pin(Ljava/security/cert/Certificate;)Ljava/lang/String;
@3.5.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@4.0.0-alpha01
+#findMatchingPins$okhttp(Ljava/lang/String;)Ljava/util/List;
+#withCertificateChainCleaner$okhttp(Lokhttp3/internal/tls/CertificateChainCleaner;)Lokhttp3/CertificatePinner;
+#<init>(Ljava/util/Set;Lokhttp3/internal/tls/CertificateChainCleaner;)V
+#copy(Ljava/util/Set;Lokhttp3/internal/tls/CertificateChainCleaner;)Lokhttp3/CertificatePinner;
+#copy$default(Lokhttp3/CertificatePinner;Ljava/util/Set;Lokhttp3/internal/tls/CertificateChainCleaner;ILjava/lang/Object;)Lokhttp3/CertificatePinner;
+#toString()Ljava/lang/String;
@4.0.0-RC1
-#copy(Ljava/util/Set;Lokhttp3/internal/tls/CertificateChainCleaner;)Lokhttp3/CertificatePinner;
-#copy$default(Lokhttp3/CertificatePinner;Ljava/util/Set;Lokhttp3/internal/tls/CertificateChainCleaner;ILjava/lang/Object;)Lokhttp3/CertificatePinner;
-#toString()Ljava/lang/String;
@4.2.0
+#check$okhttp(Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
+#getCertificateChainCleaner$okhttp()Lokhttp3/internal/tls/CertificateChainCleaner;
@4.6.0
+#findMatchingPins(Ljava/lang/String;)Ljava/util/List;
+#getPins()Ljava/util/Set;
+#<init>(Ljava/util/Set;Lokhttp3/internal/tls/CertificateChainCleaner;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
+#sha1Hash(Ljava/security/cert/X509Certificate;)Lokio/ByteString;
+#sha256Hash(Ljava/security/cert/X509Certificate;)Lokio/ByteString;
-#findMatchingPins$okhttp(Ljava/lang/String;)Ljava/util/List;
@5.0.0-alpha.4
-###okhttp3/CertificatePinner

+###okhttp3/internal/connection/ConnectionSpecSelector
@3.4.0-RC1
+#<init>(Ljava/util/List;)V
+#configureSecureSocket(Ljavax/net/ssl/SSLSocket;)Lokhttp3/ConnectionSpec;
+#connectionFailed(Ljava/io/IOException;)Z
@3.14.0
-###okhttp3/internal/connection/ConnectionSpecSelector

+###okhttp3/internal/Version
@3.0.0-RC1
+#userAgent()Ljava/lang/String;
@4.0.0-alpha01
-#userAgent()Ljava/lang/String;
@4.7.0
-###okhttp3/internal/Version

+###okhttp3/internal/http2/Settings
@3.5.0
+#<init>()V
@4.0.0-alpha01
+#getHeaderTableSize()I
+#getInitialWindowSize()I
+#clear()V
+#set(II)Lokhttp3/internal/http2/Settings;
+#isSet(I)Z
+#get(I)I
+#size()I
+#getEnablePush(Z)Z
+#getMaxConcurrentStreams(I)I
+#getMaxFrameSize(I)I
+#getMaxHeaderListSize(I)I
+#merge(Lokhttp3/internal/http2/Settings;)V
@4.3.0
+#getMaxConcurrentStreams()I
-#getMaxConcurrentStreams(I)I
@5.0.0-alpha.4
-###okhttp3/internal/http2/Settings

+###okhttp3/internal/tls/CertificateChainCleaner
@3.1.1
+#<init>(Lokhttp3/internal/tls/TrustRootIndex;)V
+#clean(Ljava/util/List;)Ljava/util/List;
@3.3.0
+#<init>()V
+#clean(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;
+#get(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;
+#get([Ljava/security/cert/X509Certificate;)Lokhttp3/internal/tls/CertificateChainCleaner;
-#<init>(Lokhttp3/internal/tls/TrustRootIndex;)V
-#clean(Ljava/util/List;)Ljava/util/List;
@4.0.0-alpha02
-#get(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;
-#get([Ljava/security/cert/X509Certificate;)Lokhttp3/internal/tls/CertificateChainCleaner;
@5.0.0-alpha.4
-###okhttp3/internal/tls/CertificateChainCleaner

+###okhttp3/internal/http/HttpDate
@3.0.0-RC1
+#parse(Ljava/lang/String;)Ljava/util/Date;
+#format(Ljava/util/Date;)Ljava/lang/String;
@4.0.0-RC1
-###okhttp3/internal/http/HttpDate

+###okhttp3/internal/ws/RealWebSocket$Streams
@3.5.0
+#<init>(ZLokio/BufferedSource;Lokio/BufferedSink;)V
@4.0.0-alpha02
+#getClient()Z
+#getSource()Lokio/BufferedSource;
+#getSink()Lokio/BufferedSink;
@5.0.0-alpha.4
-###okhttp3/internal/ws/RealWebSocket$Streams

+###okhttp3/EventListener$Factory
@3.7.0
+#create(Lokhttp3/Call;)Lokhttp3/EventListener;
@5.0.0-alpha.4
-###okhttp3/EventListener$Factory

+###okhttp3/CertificatePinner$Builder
@3.0.0-RC1
+#<init>()V
+#add(Ljava/lang/String;[Ljava/lang/String;)Lokhttp3/CertificatePinner$Builder;
+#build()Lokhttp3/CertificatePinner;
@3.1.1
+#trustRootIndex(Lokhttp3/internal/tls/TrustRootIndex;)Lokhttp3/CertificatePinner$Builder;
@3.3.0
-#trustRootIndex(Lokhttp3/internal/tls/TrustRootIndex;)Lokhttp3/CertificatePinner$Builder;
@4.6.0
+#getPins()Ljava/util/List;
@5.0.0-alpha.4
-###okhttp3/CertificatePinner$Builder

+###okhttp3/Response$Builder
@3.0.0-RC1
+#<init>()V
+#request(Lokhttp3/Request;)Lokhttp3/Response$Builder;
+#protocol(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;
+#code(I)Lokhttp3/Response$Builder;
+#message(Ljava/lang/String;)Lokhttp3/Response$Builder;
+#handshake(Lokhttp3/Handshake;)Lokhttp3/Response$Builder;
+#header(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;
+#addHeader(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;
+#removeHeader(Ljava/lang/String;)Lokhttp3/Response$Builder;
+#headers(Lokhttp3/Headers;)Lokhttp3/Response$Builder;
+#body(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;
+#networkResponse(Lokhttp3/Response;)Lokhttp3/Response$Builder;
+#cacheResponse(Lokhttp3/Response;)Lokhttp3/Response$Builder;
+#priorResponse(Lokhttp3/Response;)Lokhttp3/Response$Builder;
+#build()Lokhttp3/Response;
@3.3.0
+#sentRequestAtMillis(J)Lokhttp3/Response$Builder;
+#receivedResponseAtMillis(J)Lokhttp3/Response$Builder;
@4.0.0-alpha01
+#getRequest$okhttp()Lokhttp3/Request;
+#setRequest$okhttp(Lokhttp3/Request;)V
+#getProtocol$okhttp()Lokhttp3/Protocol;
+#setProtocol$okhttp(Lokhttp3/Protocol;)V
+#getCode$okhttp()I
+#setCode$okhttp(I)V
+#getMessage$okhttp()Ljava/lang/String;
+#setMessage$okhttp(Ljava/lang/String;)V
+#getHandshake$okhttp()Lokhttp3/Handshake;
+#setHandshake$okhttp(Lokhttp3/Handshake;)V
+#getHeaders$okhttp()Lokhttp3/Headers$Builder;
+#setHeaders$okhttp(Lokhttp3/Headers$Builder;)V
+#getBody$okhttp()Lokhttp3/ResponseBody;
+#setBody$okhttp(Lokhttp3/ResponseBody;)V
+#getNetworkResponse$okhttp()Lokhttp3/Response;
+#setNetworkResponse$okhttp(Lokhttp3/Response;)V
+#getCacheResponse$okhttp()Lokhttp3/Response;
+#setCacheResponse$okhttp(Lokhttp3/Response;)V
+#getPriorResponse$okhttp()Lokhttp3/Response;
+#setPriorResponse$okhttp(Lokhttp3/Response;)V
+#getSentRequestAtMillis$okhttp()J
+#setSentRequestAtMillis$okhttp(J)V
+#getReceivedResponseAtMillis$okhttp()J
+#setReceivedResponseAtMillis$okhttp(J)V
+#getExchange$okhttp()Lokhttp3/internal/connection/Exchange;
+#setExchange$okhttp(Lokhttp3/internal/connection/Exchange;)V
+#initExchange$okhttp(Lokhttp3/internal/connection/Exchange;)V
+#<init>(Lokhttp3/Response;)V
@5.0.0-alpha.4
-###okhttp3/Response$Builder

+###okhttp3/Interceptor$Chain
@3.0.0-RC1
+#request()Lokhttp3/Request;
+#proceed(Lokhttp3/Request;)Lokhttp3/Response;
+#connection()Lokhttp3/Connection;
@3.9.0
+#call()Lokhttp3/Call;
+#connectTimeoutMillis()I
+#withConnectTimeout(ILjava/util/concurrent/TimeUnit;)Lokhttp3/Interceptor$Chain;
+#readTimeoutMillis()I
+#withReadTimeout(ILjava/util/concurrent/TimeUnit;)Lokhttp3/Interceptor$Chain;
+#writeTimeoutMillis()I
+#withWriteTimeout(ILjava/util/concurrent/TimeUnit;)Lokhttp3/Interceptor$Chain;
@5.0.0-alpha.4
-###okhttp3/Interceptor$Chain

+###okhttp3/Cookie$Builder
@3.0.0-RC1
+#<init>()V
+#name(Ljava/lang/String;)Lokhttp3/Cookie$Builder;
+#value(Ljava/lang/String;)Lokhttp3/Cookie$Builder;
+#expiresAt(J)Lokhttp3/Cookie$Builder;
+#domain(Ljava/lang/String;)Lokhttp3/Cookie$Builder;
+#hostOnlyDomain(Ljava/lang/String;)Lokhttp3/Cookie$Builder;
+#path(Ljava/lang/String;)Lokhttp3/Cookie$Builder;
+#secure()Lokhttp3/Cookie$Builder;
+#httpOnly()Lokhttp3/Cookie$Builder;
+#build()Lokhttp3/Cookie;
@5.0.0-alpha.3
+#<init>(Lokhttp3/Cookie;)V
@5.0.0-alpha.4
-###okhttp3/Cookie$Builder

+###okhttp3/internal/NamedRunnable
@3.0.0-RC1
+#<init>(Ljava/lang/String;[Ljava/lang/Object;)V
+#run()V
@4.0.0-alpha02
-###okhttp3/internal/NamedRunnable

+###okhttp3/internal/cache/CacheStrategy
@3.4.0-RC1
+#isCacheable(Lokhttp3/Response;Lokhttp3/Request;)Z
@4.0.0-alpha01
+#getNetworkRequest()Lokhttp3/Request;
+#getCacheResponse()Lokhttp3/Response;
+#<init>(Lokhttp3/Request;Lokhttp3/Response;)V
-#isCacheable(Lokhttp3/Response;Lokhttp3/Request;)Z
@5.0.0-alpha.4
-###okhttp3/internal/cache/CacheStrategy

+###okhttp3/internal/cache/InternalCache
@3.4.0-RC1
+#get(Lokhttp3/Request;)Lokhttp3/Response;
+#put(Lokhttp3/Response;)Lokhttp3/internal/cache/CacheRequest;
+#remove(Lokhttp3/Request;)V
+#update(Lokhttp3/Response;Lokhttp3/Response;)V
+#trackConditionalCacheHit()V
+#trackResponse(Lokhttp3/internal/cache/CacheStrategy;)V
@4.0.0-alpha02
-###okhttp3/internal/cache/InternalCache

+###okhttp3/internal/connection/RouteException
@3.4.0-RC1
+#<init>(Ljava/io/IOException;)V
+#getLastConnectException()Ljava/io/IOException;
+#addConnectException(Ljava/io/IOException;)V
@3.11.0
+#getFirstConnectException()Ljava/io/IOException;
@3.14.0
-#<init>(Ljava/io/IOException;)V
-#addConnectException(Ljava/io/IOException;)V
@4.0.0-alpha01
+#addConnectException(Ljava/io/IOException;)V
+#<init>(Ljava/io/IOException;)V
@5.0.0-alpha.4
-###okhttp3/internal/connection/RouteException

+###okhttp3/internal/http2/Http2Stream
@3.5.0
+#getId()I
+#isOpen()Z
+#isLocallyInitiated()Z
+#getConnection()Lokhttp3/internal/http2/Http2Connection;
+#getRequestHeaders()Ljava/util/List;
+#getResponseHeaders()Ljava/util/List;
+#getErrorCode()Lokhttp3/internal/http2/ErrorCode;
+#reply(Ljava/util/List;Z)V
+#readTimeout()Lokio/Timeout;
+#writeTimeout()Lokio/Timeout;
+#getSource()Lokio/Source;
+#getSink()Lokio/Sink;
+#close(Lokhttp3/internal/http2/ErrorCode;)V
+#closeLater(Lokhttp3/internal/http2/ErrorCode;)V
@3.6.0
+#takeResponseHeaders()Ljava/util/List;
+#sendResponseHeaders(Ljava/util/List;Z)V
-#getResponseHeaders()Ljava/util/List;
-#reply(Ljava/util/List;Z)V
@3.12.0
+#takeHeaders()Lokhttp3/Headers;
+#writeHeaders(Ljava/util/List;Z)V
+#setHeadersListener(Lokhttp3/internal/http2/Header$Listener;)V
-#getRequestHeaders()Ljava/util/List;
-#takeResponseHeaders()Ljava/util/List;
-#sendResponseHeaders(Ljava/util/List;Z)V
@3.13.0
+#trailers()Lokhttp3/Headers;
+#writeHeaders(Ljava/util/List;ZZ)V
+#enqueueTrailers(Lokhttp3/Headers;)V
-#writeHeaders(Ljava/util/List;Z)V
-#setHeadersListener(Lokhttp3/internal/http2/Header$Listener;)V
@3.14.0
+#close(Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V
-#close(Lokhttp3/internal/http2/ErrorCode;)V
@4.0.0-alpha01
+#getUnacknowledgedBytesRead()J
+#setUnacknowledgedBytesRead$okhttp(J)V
+#getBytesLeftInWriteWindow()J
+#setBytesLeftInWriteWindow$okhttp(J)V
+#getSource$okhttp()Lokhttp3/internal/http2/Http2Stream$FramingSource;
+#getSink$okhttp()Lokhttp3/internal/http2/Http2Stream$FramingSink;
+#getReadTimeout$okhttp()Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
+#getWriteTimeout$okhttp()Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
+#getErrorCode$okhttp()Lokhttp3/internal/http2/ErrorCode;
+#setErrorCode$okhttp(Lokhttp3/internal/http2/ErrorCode;)V
+#getErrorException$okhttp()Ljava/io/IOException;
+#setErrorException$okhttp(Ljava/io/IOException;)V
+#receiveData(Lokio/BufferedSource;I)V
+#receiveHeaders(Lokhttp3/Headers;Z)V
+#receiveRstStream(Lokhttp3/internal/http2/ErrorCode;)V
+#cancelStreamIfNecessary$okhttp()V
+#addBytesToWriteWindow(J)V
+#checkOutNotClosed$okhttp()V
+#waitForIo$okhttp()V
+#<init>(ILokhttp3/internal/http2/Http2Connection;ZZLokhttp3/Headers;)V
-#getErrorCode()Lokhttp3/internal/http2/ErrorCode;
@4.2.0
+#getReadBytesTotal()J
+#setReadBytesTotal$okhttp(J)V
+#getReadBytesAcknowledged()J
+#setReadBytesAcknowledged$okhttp(J)V
+#getWriteBytesTotal()J
+#setWriteBytesTotal$okhttp(J)V
+#getWriteBytesMaximum()J
+#setWriteBytesMaximum$okhttp(J)V
-#getUnacknowledgedBytesRead()J
-#setUnacknowledgedBytesRead$okhttp(J)V
-#getBytesLeftInWriteWindow()J
-#setBytesLeftInWriteWindow$okhttp(J)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/Http2Stream

+###okhttp3/internal/annotations/EverythingIsNonNull
@3.12.0
@4.0.0-alpha02
-###okhttp3/internal/annotations/EverythingIsNonNull

+###okhttp3/internal/tls/BasicCertificateChainCleaner
@3.4.0-RC1
+#<init>(Lokhttp3/internal/tls/TrustRootIndex;)V
+#clean(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;
@3.5.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@3.13.0
+#<init>([Ljava/security/cert/X509Certificate;)V
-#<init>(Lokhttp3/internal/tls/TrustRootIndex;)V
@3.13.1
+#<init>(Lokhttp3/internal/tls/TrustRootIndex;)V
-#<init>([Ljava/security/cert/X509Certificate;)V
@5.0.0-alpha.4
-###okhttp3/internal/tls/BasicCertificateChainCleaner

+###okhttp3/internal/tls/OkHostnameVerifier
@3.0.0-RC1
+#verify(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z
+#verify(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z
+#allSubjectAltNames(Ljava/security/cert/X509Certificate;)Ljava/util/List;
@3.7.0
+#verifyHostname(Ljava/lang/String;Ljava/lang/String;)Z
@4.0.0-alpha02
-#verifyHostname(Ljava/lang/String;Ljava/lang/String;)Z
@5.0.0-alpha.4
-###okhttp3/internal/tls/OkHostnameVerifier

+###okhttp3/internal/http/StatusLine
@3.0.0-RC1
+#<init>(Lokhttp3/Protocol;ILjava/lang/String;)V
+#get(Lokhttp3/Response;)Lokhttp3/internal/http/StatusLine;
+#parse(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;
+#toString()Ljava/lang/String;
@4.0.0-alpha02
-#get(Lokhttp3/Response;)Lokhttp3/internal/http/StatusLine;
-#parse(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;
@5.0.0-alpha.4
-###okhttp3/internal/http/StatusLine

+###okhttp3/internal/http/UnrepeatableRequestBody
@3.4.0-RC1
@3.14.0
-###okhttp3/internal/http/UnrepeatableRequestBody

+###okhttp3/internal/publicsuffix/PublicSuffixDatabase
@3.7.0
+#<init>()V
+#get()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;
+#getEffectiveTldPlusOne(Ljava/lang/String;)Ljava/lang/String;
@4.0.0-alpha02
+#setListBytes([B[B)V
+#access$getPublicSuffixListBytes$p(Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;)[B
+#access$setPublicSuffixListBytes$p(Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;[B)V
+#access$getInstance$cp()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;
-#get()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;
@4.10.0
-#access$getPublicSuffixListBytes$p(Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;)[B
-#access$setPublicSuffixListBytes$p(Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;[B)V
@5.0.0-alpha.1
+#access$getPublicSuffixListBytes$p(Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;)[B
+#access$setPublicSuffixListBytes$p(Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;[B)V
@5.0.0-alpha.3
-#access$getPublicSuffixListBytes$p(Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;)[B
-#access$setPublicSuffixListBytes$p(Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;[B)V
@5.0.0-alpha.4
-###okhttp3/internal/publicsuffix/PublicSuffixDatabase

+###okhttp3/internal/ws/WebSocketProtocol
@3.5.0
+#acceptHeader(Ljava/lang/String;)Ljava/lang/String;
@4.0.0-alpha01
+#toggleMask(Lokio/Buffer$UnsafeCursor;[B)V
+#closeCodeExceptionMessage(I)Ljava/lang/String;
+#validateCloseCode(I)V
@5.0.0-alpha.4
-###okhttp3/internal/ws/WebSocketProtocol

+###okhttp3/Authenticator
@3.0.0-RC1
+#authenticate(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;
@5.0.0-alpha.4
-###okhttp3/Authenticator

+###okhttp3/Handshake
@3.0.0-RC1
+#get(Ljavax/net/ssl/SSLSession;)Lokhttp3/Handshake;
+#get(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Ljava/util/List;)Lokhttp3/Handshake;
+#tlsVersion()Lokhttp3/TlsVersion;
+#cipherSuite()Lokhttp3/CipherSuite;
+#peerCertificates()Ljava/util/List;
+#peerPrincipal()Ljava/security/Principal;
+#localCertificates()Ljava/util/List;
+#localPrincipal()Ljava/security/Principal;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.13.0
+#toString()Ljava/lang/String;
@4.0.0-alpha01
+#<init>(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
+#copy(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Ljava/util/List;)Lokhttp3/Handshake;
+#copy$default(Lokhttp3/Handshake;Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lokhttp3/Handshake;
@4.0.0-alpha02
+#-deprecated_tlsVersion()Lokhttp3/TlsVersion;
+#-deprecated_cipherSuite()Lokhttp3/CipherSuite;
+#-deprecated_peerCertificates()Ljava/util/List;
+#-deprecated_peerPrincipal()Ljava/security/Principal;
+#-deprecated_localCertificates()Ljava/util/List;
+#-deprecated_localPrincipal()Ljava/security/Principal;
-#copy(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Ljava/util/List;)Lokhttp3/Handshake;
-#copy$default(Lokhttp3/Handshake;Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lokhttp3/Handshake;
@4.2.0
+#<init>(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Lkotlin/jvm/functions/Function0;)V
-#<init>(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/Handshake

+###okhttp3/Cache
@3.0.0-RC1
+#<init>(Ljava/io/File;J)V
+#initialize()V
+#delete()V
+#evictAll()V
+#urls()Ljava/util/Iterator;
+#writeAbortCount()I
+#writeSuccessCount()I
+#size()J
+#maxSize()J
+#flush()V
+#close()V
+#directory()Ljava/io/File;
+#isClosed()Z
+#networkCount()I
+#hitCount()I
+#requestCount()I
@3.5.0
+#key(Lokhttp3/HttpUrl;)Ljava/lang/String;
@4.0.0-alpha01
+#getInternalCache$okhttp()Lokhttp3/internal/cache/InternalCache;
+#getCache$okhttp()Lokhttp3/internal/cache/DiskLruCache;
+#getWriteSuccessCount$okhttp()I
+#setWriteSuccessCount$okhttp(I)V
+#getWriteAbortCount$okhttp()I
+#setWriteAbortCount$okhttp(I)V
+#get$okhttp(Lokhttp3/Request;)Lokhttp3/Response;
+#put$okhttp(Lokhttp3/Response;)Lokhttp3/internal/cache/CacheRequest;
+#remove$okhttp(Lokhttp3/Request;)V
+#update$okhttp(Lokhttp3/Response;Lokhttp3/Response;)V
+#trackResponse$okhttp(Lokhttp3/internal/cache/CacheStrategy;)V
+#trackConditionalCacheHit$okhttp()V
+#<init>(Ljava/io/File;JLokhttp3/internal/io/FileSystem;)V
+#readInt$okhttp(Lokio/BufferedSource;)I
@4.0.0-alpha02
+#-deprecated_directory()Ljava/io/File;
-#getInternalCache$okhttp()Lokhttp3/internal/cache/InternalCache;
-#readInt$okhttp(Lokio/BufferedSource;)I
@5.0.0-alpha.3
+#<init>(Lokio/Path;JLokio/FileSystem;)V
+#directoryPath()Lokio/Path;
-#<init>(Ljava/io/File;JLokhttp3/internal/io/FileSystem;)V
@5.0.0-alpha.4
-###okhttp3/Cache

+###okhttp3/ConnectionPool
@3.0.0-RC1
+#<init>()V
+#<init>(IJLjava/util/concurrent/TimeUnit;)V
+#idleConnectionCount()I
+#connectionCount()I
+#evictAll()V
@4.0.0-alpha02
+#getDelegate$okhttp()Lokhttp3/internal/connection/RealConnectionPool;
@4.3.0
+#<init>(Lokhttp3/internal/connection/RealConnectionPool;)V
@5.0.0-alpha.4
-###okhttp3/ConnectionPool

+###okhttp3/ResponseBody
@3.0.0-RC1
+#<init>()V
+#contentType()Lokhttp3/MediaType;
+#contentLength()J
+#byteStream()Ljava/io/InputStream;
+#source()Lokio/BufferedSource;
+#bytes()[B
+#charStream()Ljava/io/Reader;
+#string()Ljava/lang/String;
+#close()V
+#create(Lokhttp3/MediaType;Ljava/lang/String;)Lokhttp3/ResponseBody;
+#create(Lokhttp3/MediaType;[B)Lokhttp3/ResponseBody;
+#create(Lokhttp3/MediaType;JLokio/BufferedSource;)Lokhttp3/ResponseBody;
@3.11.0
+#create(Lokhttp3/MediaType;Lokio/ByteString;)Lokhttp3/ResponseBody;
@4.0.0-alpha02
+#create(Ljava/lang/String;Lokhttp3/MediaType;)Lokhttp3/ResponseBody;
+#create([BLokhttp3/MediaType;)Lokhttp3/ResponseBody;
+#create(Lokio/ByteString;Lokhttp3/MediaType;)Lokhttp3/ResponseBody;
+#create(Lokio/BufferedSource;Lokhttp3/MediaType;J)Lokhttp3/ResponseBody;
@4.1.0
+#byteString()Lokio/ByteString;
@5.0.0-alpha.4
-###okhttp3/ResponseBody

+###okhttp3/WebSocket$Factory
@3.5.0
+#newWebSocket(Lokhttp3/Request;Lokhttp3/WebSocketListener;)Lokhttp3/WebSocket;
@5.0.0-alpha.4
-###okhttp3/WebSocket$Factory

+###okhttp3/internal/cache/DiskLruCache
@3.4.0-RC1
+#initialize()V
+#create(Lokhttp3/internal/io/FileSystem;Ljava/io/File;IIJ)Lokhttp3/internal/cache/DiskLruCache;
+#get(Ljava/lang/String;)Lokhttp3/internal/cache/DiskLruCache$Snapshot;
+#edit(Ljava/lang/String;)Lokhttp3/internal/cache/DiskLruCache$Editor;
+#getDirectory()Ljava/io/File;
+#getMaxSize()J
+#setMaxSize(J)V
+#size()J
+#remove(Ljava/lang/String;)Z
+#isClosed()Z
+#flush()V
+#close()V
+#delete()V
+#evictAll()V
+#snapshots()Ljava/util/Iterator;
@4.0.0-alpha01
+#getLruEntries$okhttp()Ljava/util/LinkedHashMap;
+#getHasJournalErrors$okhttp()Z
+#setHasJournalErrors$okhttp(Z)V
+#getClosed$okhttp()Z
+#setClosed$okhttp(Z)V
+#rebuildJournal$okhttp()V
+#edit(Ljava/lang/String;J)Lokhttp3/internal/cache/DiskLruCache$Editor;
+#edit$default(Lokhttp3/internal/cache/DiskLruCache;Ljava/lang/String;JILjava/lang/Object;)Lokhttp3/internal/cache/DiskLruCache$Editor;
+#completeEdit$okhttp(Lokhttp3/internal/cache/DiskLruCache$Editor;Z)V
+#removeEntry$okhttp(Lokhttp3/internal/cache/DiskLruCache$Entry;)Z
+#trimToSize()V
+#getFileSystem$okhttp()Lokhttp3/internal/io/FileSystem;
+#getValueCount$okhttp()I
+#<init>(Lokhttp3/internal/io/FileSystem;Ljava/io/File;IIJLjava/util/concurrent/Executor;)V
+#access$getInitialized$p(Lokhttp3/internal/cache/DiskLruCache;)Z
+#access$setInitialized$p(Lokhttp3/internal/cache/DiskLruCache;Z)V
+#access$getMostRecentTrimFailed$p(Lokhttp3/internal/cache/DiskLruCache;)Z
+#access$setMostRecentTrimFailed$p(Lokhttp3/internal/cache/DiskLruCache;Z)V
+#access$journalRebuildRequired(Lokhttp3/internal/cache/DiskLruCache;)Z
+#access$getRedundantOpCount$p(Lokhttp3/internal/cache/DiskLruCache;)I
+#access$setRedundantOpCount$p(Lokhttp3/internal/cache/DiskLruCache;I)V
+#access$getMostRecentRebuildFailed$p(Lokhttp3/internal/cache/DiskLruCache;)Z
+#access$setMostRecentRebuildFailed$p(Lokhttp3/internal/cache/DiskLruCache;Z)V
+#access$getJournalWriter$p(Lokhttp3/internal/cache/DiskLruCache;)Lokio/BufferedSink;
+#access$setJournalWriter$p(Lokhttp3/internal/cache/DiskLruCache;Lokio/BufferedSink;)V
@4.0.0-alpha02
+#access$getHasJournalErrors$p(Lokhttp3/internal/cache/DiskLruCache;)Z
+#access$setHasJournalErrors$p(Lokhttp3/internal/cache/DiskLruCache;Z)V
-#getHasJournalErrors$okhttp()Z
-#setHasJournalErrors$okhttp(Z)V
-#create(Lokhttp3/internal/io/FileSystem;Ljava/io/File;IIJ)Lokhttp3/internal/cache/DiskLruCache;
@4.3.0
+#<init>(Lokhttp3/internal/io/FileSystem;Ljava/io/File;IIJLokhttp3/internal/concurrent/TaskRunner;)V
-#<init>(Lokhttp3/internal/io/FileSystem;Ljava/io/File;IIJLjava/util/concurrent/Executor;)V
@4.6.0
+#access$getCivilizedFileSystem$p(Lokhttp3/internal/cache/DiskLruCache;)Z
+#access$setCivilizedFileSystem$p(Lokhttp3/internal/cache/DiskLruCache;Z)V
@4.10.0
-#access$setCivilizedFileSystem$p(Lokhttp3/internal/cache/DiskLruCache;Z)V
-#access$getHasJournalErrors$p(Lokhttp3/internal/cache/DiskLruCache;)Z
-#access$setInitialized$p(Lokhttp3/internal/cache/DiskLruCache;Z)V
-#access$getMostRecentTrimFailed$p(Lokhttp3/internal/cache/DiskLruCache;)Z
-#access$getRedundantOpCount$p(Lokhttp3/internal/cache/DiskLruCache;)I
-#access$getMostRecentRebuildFailed$p(Lokhttp3/internal/cache/DiskLruCache;)Z
-#access$getJournalWriter$p(Lokhttp3/internal/cache/DiskLruCache;)Lokio/BufferedSink;
@5.0.0-alpha.1
+#access$setCivilizedFileSystem$p(Lokhttp3/internal/cache/DiskLruCache;Z)V
+#access$getHasJournalErrors$p(Lokhttp3/internal/cache/DiskLruCache;)Z
+#access$setInitialized$p(Lokhttp3/internal/cache/DiskLruCache;Z)V
+#access$getMostRecentTrimFailed$p(Lokhttp3/internal/cache/DiskLruCache;)Z
+#access$getRedundantOpCount$p(Lokhttp3/internal/cache/DiskLruCache;)I
+#access$getMostRecentRebuildFailed$p(Lokhttp3/internal/cache/DiskLruCache;)Z
+#access$getJournalWriter$p(Lokhttp3/internal/cache/DiskLruCache;)Lokio/BufferedSink;
@5.0.0-alpha.3
+#<init>(Lokio/FileSystem;Lokio/Path;IIJLokhttp3/internal/concurrent/TaskRunner;)V
+#getDirectory()Lokio/Path;
+#getFileSystem$okhttp()Lokio/FileSystem;
-#getFileSystem$okhttp()Lokhttp3/internal/io/FileSystem;
-#getDirectory()Ljava/io/File;
-#<init>(Lokhttp3/internal/io/FileSystem;Ljava/io/File;IIJLokhttp3/internal/concurrent/TaskRunner;)V
-#access$setCivilizedFileSystem$p(Lokhttp3/internal/cache/DiskLruCache;Z)V
-#access$getHasJournalErrors$p(Lokhttp3/internal/cache/DiskLruCache;)Z
-#access$setInitialized$p(Lokhttp3/internal/cache/DiskLruCache;Z)V
-#access$getMostRecentTrimFailed$p(Lokhttp3/internal/cache/DiskLruCache;)Z
-#access$getRedundantOpCount$p(Lokhttp3/internal/cache/DiskLruCache;)I
-#access$getMostRecentRebuildFailed$p(Lokhttp3/internal/cache/DiskLruCache;)Z
-#access$getJournalWriter$p(Lokhttp3/internal/cache/DiskLruCache;)Lokio/BufferedSink;
@5.0.0-alpha.4
-###okhttp3/internal/cache/DiskLruCache

+###okhttp3/internal/connection/StreamAllocation$StreamAllocationReference
@3.5.0
@3.14.0
-###okhttp3/internal/connection/StreamAllocation$StreamAllocationReference

+###okhttp3/internal/http2/Http2Connection$Builder
@3.5.0
+#<init>(Z)V
+#socket(Ljava/net/Socket;)Lokhttp3/internal/http2/Http2Connection$Builder;
+#socket(Ljava/net/Socket;Ljava/lang/String;Lokio/BufferedSource;Lokio/BufferedSink;)Lokhttp3/internal/http2/Http2Connection$Builder;
+#listener(Lokhttp3/internal/http2/Http2Connection$Listener;)Lokhttp3/internal/http2/Http2Connection$Builder;
+#pushObserver(Lokhttp3/internal/http2/PushObserver;)Lokhttp3/internal/http2/Http2Connection$Builder;
+#build()Lokhttp3/internal/http2/Http2Connection;
@3.10.0
+#pingIntervalMillis(I)Lokhttp3/internal/http2/Http2Connection$Builder;
@4.0.0-alpha01
+#getSocket$okhttp()Ljava/net/Socket;
+#setSocket$okhttp(Ljava/net/Socket;)V
+#getConnectionName$okhttp()Ljava/lang/String;
+#setConnectionName$okhttp(Ljava/lang/String;)V
+#getSource$okhttp()Lokio/BufferedSource;
+#setSource$okhttp(Lokio/BufferedSource;)V
+#getSink$okhttp()Lokio/BufferedSink;
+#setSink$okhttp(Lokio/BufferedSink;)V
+#getListener$okhttp()Lokhttp3/internal/http2/Http2Connection$Listener;
+#setListener$okhttp(Lokhttp3/internal/http2/Http2Connection$Listener;)V
+#getPushObserver$okhttp()Lokhttp3/internal/http2/PushObserver;
+#setPushObserver$okhttp(Lokhttp3/internal/http2/PushObserver;)V
+#getPingIntervalMillis$okhttp()I
+#setPingIntervalMillis$okhttp(I)V
+#socket$default(Lokhttp3/internal/http2/Http2Connection$Builder;Ljava/net/Socket;Ljava/lang/String;Lokio/BufferedSource;Lokio/BufferedSink;ILjava/lang/Object;)Lokhttp3/internal/http2/Http2Connection$Builder;
+#socket(Ljava/net/Socket;Ljava/lang/String;Lokio/BufferedSource;)Lokhttp3/internal/http2/Http2Connection$Builder;
+#socket(Ljava/net/Socket;Ljava/lang/String;)Lokhttp3/internal/http2/Http2Connection$Builder;
+#getClient$okhttp()Z
+#setClient$okhttp(Z)V
@4.3.0
+#getTaskRunner$okhttp()Lokhttp3/internal/concurrent/TaskRunner;
+#<init>(ZLokhttp3/internal/concurrent/TaskRunner;)V
-#<init>(Z)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/Http2Connection$Builder

+###okhttp3/internal/http2/Http2Codec
@3.5.0
+#<init>(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http2/Http2Connection;)V
+#createRequestBody(Lokhttp3/Request;J)Lokio/Sink;
+#writeRequestHeaders(Lokhttp3/Request;)V
+#finishRequest()V
+#readResponseHeaders()Lokhttp3/Response$Builder;
+#http2HeadersList(Lokhttp3/Request;)Ljava/util/List;
+#readHttp2HeadersList(Ljava/util/List;)Lokhttp3/Response$Builder;
+#openResponseBody(Lokhttp3/Response;)Lokhttp3/ResponseBody;
+#cancel()V
@3.6.0
+#flushRequest()V
+#readResponseHeaders(Z)Lokhttp3/Response$Builder;
-#readResponseHeaders()Lokhttp3/Response$Builder;
@3.9.0
+#<init>(Lokhttp3/OkHttpClient;Lokhttp3/Interceptor$Chain;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http2/Http2Connection;)V
-#<init>(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http2/Http2Connection;)V
@3.11.0
+#readHttp2HeadersList(Ljava/util/List;Lokhttp3/Protocol;)Lokhttp3/Response$Builder;
-#readHttp2HeadersList(Ljava/util/List;)Lokhttp3/Response$Builder;
@3.12.0
+#readHttp2HeadersList(Lokhttp3/Headers;Lokhttp3/Protocol;)Lokhttp3/Response$Builder;
-#readHttp2HeadersList(Ljava/util/List;Lokhttp3/Protocol;)Lokhttp3/Response$Builder;
@3.13.0
+#trailers()Lokhttp3/Headers;
@3.14.0
-###okhttp3/internal/http2/Http2Codec

+###okhttp3/internal/http2/ErrorCode
@3.5.0
+#values()[Lokhttp3/internal/http2/ErrorCode;
+#valueOf(Ljava/lang/String;)Lokhttp3/internal/http2/ErrorCode;
+#fromHttp2(I)Lokhttp3/internal/http2/ErrorCode;
@4.0.0-alpha01
+#getHttpCode()I
-#fromHttp2(I)Lokhttp3/internal/http2/ErrorCode;
@5.0.0-alpha.4
-###okhttp3/internal/http2/ErrorCode

+###okhttp3/internal/ws/RealWebSocket
@3.5.0
+#<init>(Lokhttp3/Request;Lokhttp3/WebSocketListener;Ljava/util/Random;)V
+#request()Lokhttp3/Request;
+#queueSize()J
+#cancel()V
+#connect(Lokhttp3/OkHttpClient;)V
+#initReaderAndWriter(Ljava/lang/String;JLokhttp3/internal/ws/RealWebSocket$Streams;)V
+#loopReader()V
+#onReadMessage(Ljava/lang/String;)V
+#onReadMessage(Lokio/ByteString;)V
+#onReadPing(Lokio/ByteString;)V
+#onReadPong(Lokio/ByteString;)V
+#onReadClose(ILjava/lang/String;)V
+#send(Ljava/lang/String;)Z
+#send(Lokio/ByteString;)Z
+#close(ILjava/lang/String;)Z
@3.6.0
+#failWebSocket(Ljava/lang/Exception;Lokhttp3/Response;)V
@3.10.0
+#<init>(Lokhttp3/Request;Lokhttp3/WebSocketListener;Ljava/util/Random;J)V
+#initReaderAndWriter(Ljava/lang/String;Lokhttp3/internal/ws/RealWebSocket$Streams;)V
-#<init>(Lokhttp3/Request;Lokhttp3/WebSocketListener;Ljava/util/Random;)V
-#initReaderAndWriter(Ljava/lang/String;JLokhttp3/internal/ws/RealWebSocket$Streams;)V
@4.0.0-alpha02
+#checkUpgradeSuccess$okhttp(Lokhttp3/Response;Lokhttp3/internal/connection/Exchange;)V
+#processNextFrame()Z
+#awaitTermination(ILjava/util/concurrent/TimeUnit;)V
+#tearDown()V
+#sentPingCount()I
+#receivedPingCount()I
+#receivedPongCount()I
+#pong(Lokio/ByteString;)Z
+#close(ILjava/lang/String;J)Z
+#writeOneFrame$okhttp()Z
+#writePingFrame$okhttp()V
+#getListener$okhttp()Lokhttp3/WebSocketListener;
@4.3.0
+#awaitTermination(JLjava/util/concurrent/TimeUnit;)V
+#<init>(Lokhttp3/internal/concurrent/TaskRunner;Lokhttp3/Request;Lokhttp3/WebSocketListener;Ljava/util/Random;J)V
+#access$getName$p(Lokhttp3/internal/ws/RealWebSocket;)Ljava/lang/String;
+#access$setName$p(Lokhttp3/internal/ws/RealWebSocket;Ljava/lang/String;)V
-#awaitTermination(ILjava/util/concurrent/TimeUnit;)V
-#<init>(Lokhttp3/Request;Lokhttp3/WebSocketListener;Ljava/util/Random;J)V
@4.5.0-RC1
+#<init>(Lokhttp3/internal/concurrent/TaskRunner;Lokhttp3/Request;Lokhttp3/WebSocketListener;Ljava/util/Random;JLokhttp3/internal/ws/WebSocketExtensions;J)V
+#access$getExtensions$p(Lokhttp3/internal/ws/RealWebSocket;)Lokhttp3/internal/ws/WebSocketExtensions;
+#access$setExtensions$p(Lokhttp3/internal/ws/RealWebSocket;Lokhttp3/internal/ws/WebSocketExtensions;)V
+#access$isValid(Lokhttp3/internal/ws/RealWebSocket;Lokhttp3/internal/ws/WebSocketExtensions;)Z
+#access$getMessageAndCloseQueue$p(Lokhttp3/internal/ws/RealWebSocket;)Ljava/util/ArrayDeque;
-#<init>(Lokhttp3/internal/concurrent/TaskRunner;Lokhttp3/Request;Lokhttp3/WebSocketListener;Ljava/util/Random;J)V
@4.10.0
-#access$setName$p(Lokhttp3/internal/ws/RealWebSocket;Ljava/lang/String;)V
-#access$getExtensions$p(Lokhttp3/internal/ws/RealWebSocket;)Lokhttp3/internal/ws/WebSocketExtensions;
@5.0.0-alpha.1
+#access$setName$p(Lokhttp3/internal/ws/RealWebSocket;Ljava/lang/String;)V
+#access$getExtensions$p(Lokhttp3/internal/ws/RealWebSocket;)Lokhttp3/internal/ws/WebSocketExtensions;
@5.0.0-alpha.3
-#access$setName$p(Lokhttp3/internal/ws/RealWebSocket;Ljava/lang/String;)V
-#access$getExtensions$p(Lokhttp3/internal/ws/RealWebSocket;)Lokhttp3/internal/ws/WebSocketExtensions;
@5.0.0-alpha.4
-###okhttp3/internal/ws/RealWebSocket

+###okhttp3/Interceptor
@3.0.0-RC1
+#intercept(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;
@5.0.0-alpha.4
-###okhttp3/Interceptor

+###okhttp3/MediaType
@3.0.0-RC1
+#parse(Ljava/lang/String;)Lokhttp3/MediaType;
+#type()Ljava/lang/String;
+#subtype()Ljava/lang/String;
+#charset()Ljava/nio/charset/Charset;
+#charset(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.11.0
+#get(Ljava/lang/String;)Lokhttp3/MediaType;
@4.0.0-alpha01
+#charset$default(Lokhttp3/MediaType;Ljava/nio/charset/Charset;ILjava/lang/Object;)Ljava/nio/charset/Charset;
+#getType()Ljava/lang/String;
+#getSubtype()Ljava/lang/String;
+#access$getTYPE_SUBTYPE$cp()Ljava/util/regex/Pattern;
+#access$getPARAMETER$cp()Ljava/util/regex/Pattern;
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.0.0-alpha02
+#-deprecated_type()Ljava/lang/String;
+#-deprecated_subtype()Ljava/lang/String;
-#getType()Ljava/lang/String;
-#getSubtype()Ljava/lang/String;
@4.6.0
+#parameter(Ljava/lang/String;)Ljava/lang/String;
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/MediaType

+###okhttp3/CipherSuite
@3.0.0-RC1
+#values()[Lokhttp3/CipherSuite;
+#valueOf(Ljava/lang/String;)Lokhttp3/CipherSuite;
+#javaName()Ljava/lang/String;
+#forJavaName(Ljava/lang/String;)Lokhttp3/CipherSuite;
@3.4.0-RC1
+#toString()Ljava/lang/String;
-#values()[Lokhttp3/CipherSuite;
-#valueOf(Ljava/lang/String;)Lokhttp3/CipherSuite;
@4.0.0-alpha01
+#access$getORDER_BY_NAME$cp()Ljava/util/Comparator;
+#access$getINSTANCES$cp()Ljava/util/Map;
+#<init>(Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.0.0-alpha02
+#-deprecated_javaName()Ljava/lang/String;
@5.0.0-alpha.4
-###okhttp3/CipherSuite

+###okhttp3/ConnectionSpec$Builder
@3.0.0-RC1
+#<init>(Lokhttp3/ConnectionSpec;)V
+#allEnabledCipherSuites()Lokhttp3/ConnectionSpec$Builder;
+#cipherSuites([Lokhttp3/CipherSuite;)Lokhttp3/ConnectionSpec$Builder;
+#cipherSuites([Ljava/lang/String;)Lokhttp3/ConnectionSpec$Builder;
+#allEnabledTlsVersions()Lokhttp3/ConnectionSpec$Builder;
+#tlsVersions([Lokhttp3/TlsVersion;)Lokhttp3/ConnectionSpec$Builder;
+#tlsVersions([Ljava/lang/String;)Lokhttp3/ConnectionSpec$Builder;
+#supportsTlsExtensions(Z)Lokhttp3/ConnectionSpec$Builder;
+#build()Lokhttp3/ConnectionSpec;
@4.0.0-alpha01
+#getTls$okhttp()Z
+#setTls$okhttp(Z)V
+#getCipherSuites$okhttp()[Ljava/lang/String;
+#setCipherSuites$okhttp([Ljava/lang/String;)V
+#getTlsVersions$okhttp()[Ljava/lang/String;
+#setTlsVersions$okhttp([Ljava/lang/String;)V
+#getSupportsTlsExtensions$okhttp()Z
+#setSupportsTlsExtensions$okhttp(Z)V
+#<init>(Z)V
@5.0.0-alpha.4
-###okhttp3/ConnectionSpec$Builder

+###okhttp3/OkHttpClient
@3.0.0-RC1
+#<init>()V
+#connectTimeoutMillis()I
+#readTimeoutMillis()I
+#writeTimeoutMillis()I
+#proxy()Ljava/net/Proxy;
+#proxySelector()Ljava/net/ProxySelector;
+#cookieJar()Lokhttp3/CookieJar;
+#cache()Lokhttp3/Cache;
+#dns()Lokhttp3/Dns;
+#socketFactory()Ljavax/net/SocketFactory;
+#sslSocketFactory()Ljavax/net/ssl/SSLSocketFactory;
+#hostnameVerifier()Ljavax/net/ssl/HostnameVerifier;
+#certificatePinner()Lokhttp3/CertificatePinner;
+#authenticator()Lokhttp3/Authenticator;
+#proxyAuthenticator()Lokhttp3/Authenticator;
+#connectionPool()Lokhttp3/ConnectionPool;
+#followSslRedirects()Z
+#followRedirects()Z
+#retryOnConnectionFailure()Z
+#dispatcher()Lokhttp3/Dispatcher;
+#protocols()Ljava/util/List;
+#connectionSpecs()Ljava/util/List;
+#interceptors()Ljava/util/List;
+#networkInterceptors()Ljava/util/List;
+#newCall(Lokhttp3/Request;)Lokhttp3/Call;
+#newBuilder()Lokhttp3/OkHttpClient$Builder;
@3.5.0
+#pingIntervalMillis()I
+#newWebSocket(Lokhttp3/Request;Lokhttp3/WebSocketListener;)Lokhttp3/WebSocket;
@3.9.0
+#eventListenerFactory()Lokhttp3/EventListener$Factory;
@3.12.0
+#callTimeoutMillis()I
@4.0.0-alpha01
+#internalCache$okhttp()Lokhttp3/internal/cache/InternalCache;
+#<init>(Lokhttp3/OkHttpClient$Builder;)V
+#clone()Ljava/lang/Object;
+#access$getDispatcher$p(Lokhttp3/OkHttpClient;)Lokhttp3/Dispatcher;
+#access$getProxy$p(Lokhttp3/OkHttpClient;)Ljava/net/Proxy;
+#access$getProtocols$p(Lokhttp3/OkHttpClient;)Ljava/util/List;
+#access$getConnectionSpecs$p(Lokhttp3/OkHttpClient;)Ljava/util/List;
+#access$getInterceptors$p(Lokhttp3/OkHttpClient;)Ljava/util/List;
+#access$getNetworkInterceptors$p(Lokhttp3/OkHttpClient;)Ljava/util/List;
+#access$getEventListenerFactory$p(Lokhttp3/OkHttpClient;)Lokhttp3/EventListener$Factory;
+#access$getProxySelector$p(Lokhttp3/OkHttpClient;)Ljava/net/ProxySelector;
+#access$getCookieJar$p(Lokhttp3/OkHttpClient;)Lokhttp3/CookieJar;
+#access$getInternalCache$p(Lokhttp3/OkHttpClient;)Lokhttp3/internal/cache/InternalCache;
+#access$getCache$p(Lokhttp3/OkHttpClient;)Lokhttp3/Cache;
+#access$getSocketFactory$p(Lokhttp3/OkHttpClient;)Ljavax/net/SocketFactory;
+#access$getSslSocketFactory$p(Lokhttp3/OkHttpClient;)Ljavax/net/ssl/SSLSocketFactory;
+#access$getCertificateChainCleaner$p(Lokhttp3/OkHttpClient;)Lokhttp3/internal/tls/CertificateChainCleaner;
+#access$getHostnameVerifier$p(Lokhttp3/OkHttpClient;)Ljavax/net/ssl/HostnameVerifier;
+#access$getCertificatePinner$p(Lokhttp3/OkHttpClient;)Lokhttp3/CertificatePinner;
+#access$getProxyAuthenticator$p(Lokhttp3/OkHttpClient;)Lokhttp3/Authenticator;
+#access$getAuthenticator$p(Lokhttp3/OkHttpClient;)Lokhttp3/Authenticator;
+#access$getConnectionPool$p(Lokhttp3/OkHttpClient;)Lokhttp3/ConnectionPool;
+#access$getDns$p(Lokhttp3/OkHttpClient;)Lokhttp3/Dns;
+#access$getFollowSslRedirects$p(Lokhttp3/OkHttpClient;)Z
+#access$getFollowRedirects$p(Lokhttp3/OkHttpClient;)Z
+#access$getRetryOnConnectionFailure$p(Lokhttp3/OkHttpClient;)Z
+#access$getCallTimeout$p(Lokhttp3/OkHttpClient;)I
+#access$getConnectTimeout$p(Lokhttp3/OkHttpClient;)I
+#access$getReadTimeout$p(Lokhttp3/OkHttpClient;)I
+#access$getWriteTimeout$p(Lokhttp3/OkHttpClient;)I
+#access$getPingInterval$p(Lokhttp3/OkHttpClient;)I
+#access$getDEFAULT_PROTOCOLS$cp()Ljava/util/List;
+#access$getDEFAULT_CONNECTION_SPECS$cp()Ljava/util/List;
@4.0.0-alpha02
+#certificateChainCleaner()Lokhttp3/internal/tls/CertificateChainCleaner;
+#-deprecated_dispatcher()Lokhttp3/Dispatcher;
+#-deprecated_connectionPool()Lokhttp3/ConnectionPool;
+#-deprecated_interceptors()Ljava/util/List;
+#-deprecated_networkInterceptors()Ljava/util/List;
+#-deprecated_eventListenerFactory()Lokhttp3/EventListener$Factory;
+#-deprecated_retryOnConnectionFailure()Z
+#-deprecated_authenticator()Lokhttp3/Authenticator;
+#-deprecated_followRedirects()Z
+#-deprecated_followSslRedirects()Z
+#-deprecated_cookieJar()Lokhttp3/CookieJar;
+#-deprecated_cache()Lokhttp3/Cache;
+#-deprecated_dns()Lokhttp3/Dns;
+#-deprecated_proxy()Ljava/net/Proxy;
+#-deprecated_proxySelector()Ljava/net/ProxySelector;
+#-deprecated_proxyAuthenticator()Lokhttp3/Authenticator;
+#-deprecated_socketFactory()Ljavax/net/SocketFactory;
+#-deprecated_sslSocketFactory()Ljavax/net/ssl/SSLSocketFactory;
+#-deprecated_connectionSpecs()Ljava/util/List;
+#-deprecated_protocols()Ljava/util/List;
+#-deprecated_hostnameVerifier()Ljavax/net/ssl/HostnameVerifier;
+#-deprecated_certificatePinner()Lokhttp3/CertificatePinner;
+#-deprecated_callTimeoutMillis()I
+#-deprecated_connectTimeoutMillis()I
+#-deprecated_readTimeoutMillis()I
+#-deprecated_writeTimeoutMillis()I
+#-deprecated_pingIntervalMillis()I
+#access$getSslSocketFactoryOrNull$p(Lokhttp3/OkHttpClient;)Ljavax/net/ssl/SSLSocketFactory;
-#internalCache$okhttp()Lokhttp3/internal/cache/InternalCache;
-#access$getDispatcher$p(Lokhttp3/OkHttpClient;)Lokhttp3/Dispatcher;
-#access$getProxy$p(Lokhttp3/OkHttpClient;)Ljava/net/Proxy;
-#access$getProtocols$p(Lokhttp3/OkHttpClient;)Ljava/util/List;
-#access$getConnectionSpecs$p(Lokhttp3/OkHttpClient;)Ljava/util/List;
-#access$getInterceptors$p(Lokhttp3/OkHttpClient;)Ljava/util/List;
-#access$getNetworkInterceptors$p(Lokhttp3/OkHttpClient;)Ljava/util/List;
-#access$getEventListenerFactory$p(Lokhttp3/OkHttpClient;)Lokhttp3/EventListener$Factory;
-#access$getProxySelector$p(Lokhttp3/OkHttpClient;)Ljava/net/ProxySelector;
-#access$getCookieJar$p(Lokhttp3/OkHttpClient;)Lokhttp3/CookieJar;
-#access$getInternalCache$p(Lokhttp3/OkHttpClient;)Lokhttp3/internal/cache/InternalCache;
-#access$getCache$p(Lokhttp3/OkHttpClient;)Lokhttp3/Cache;
-#access$getSocketFactory$p(Lokhttp3/OkHttpClient;)Ljavax/net/SocketFactory;
-#access$getSslSocketFactory$p(Lokhttp3/OkHttpClient;)Ljavax/net/ssl/SSLSocketFactory;
-#access$getCertificateChainCleaner$p(Lokhttp3/OkHttpClient;)Lokhttp3/internal/tls/CertificateChainCleaner;
-#access$getHostnameVerifier$p(Lokhttp3/OkHttpClient;)Ljavax/net/ssl/HostnameVerifier;
-#access$getCertificatePinner$p(Lokhttp3/OkHttpClient;)Lokhttp3/CertificatePinner;
-#access$getProxyAuthenticator$p(Lokhttp3/OkHttpClient;)Lokhttp3/Authenticator;
-#access$getAuthenticator$p(Lokhttp3/OkHttpClient;)Lokhttp3/Authenticator;
-#access$getConnectionPool$p(Lokhttp3/OkHttpClient;)Lokhttp3/ConnectionPool;
-#access$getDns$p(Lokhttp3/OkHttpClient;)Lokhttp3/Dns;
-#access$getFollowSslRedirects$p(Lokhttp3/OkHttpClient;)Z
-#access$getFollowRedirects$p(Lokhttp3/OkHttpClient;)Z
-#access$getRetryOnConnectionFailure$p(Lokhttp3/OkHttpClient;)Z
-#access$getCallTimeout$p(Lokhttp3/OkHttpClient;)I
-#access$getConnectTimeout$p(Lokhttp3/OkHttpClient;)I
-#access$getReadTimeout$p(Lokhttp3/OkHttpClient;)I
-#access$getWriteTimeout$p(Lokhttp3/OkHttpClient;)I
-#access$getPingInterval$p(Lokhttp3/OkHttpClient;)I
@4.1.0
+#x509TrustManager()Ljavax/net/ssl/X509TrustManager;
@4.4.0
+#getRouteDatabase()Lokhttp3/internal/connection/RouteDatabase;
@4.5.0
+#minWebSocketMessageToCompress()J
@5.0.0-alpha.4
-###okhttp3/OkHttpClient

+###okhttp3/EventListener
@3.9.0
+#<init>()V
+#callStart(Lokhttp3/Call;)V
+#dnsStart(Lokhttp3/Call;Ljava/lang/String;)V
+#dnsEnd(Lokhttp3/Call;Ljava/lang/String;Ljava/util/List;)V
+#connectStart(Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;)V
+#secureConnectStart(Lokhttp3/Call;)V
+#secureConnectEnd(Lokhttp3/Call;Lokhttp3/Handshake;)V
+#connectEnd(Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/Protocol;)V
+#connectFailed(Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/Protocol;Ljava/io/IOException;)V
+#connectionAcquired(Lokhttp3/Call;Lokhttp3/Connection;)V
+#connectionReleased(Lokhttp3/Call;Lokhttp3/Connection;)V
+#requestHeadersStart(Lokhttp3/Call;)V
+#requestHeadersEnd(Lokhttp3/Call;Lokhttp3/Request;)V
+#requestBodyStart(Lokhttp3/Call;)V
+#requestBodyEnd(Lokhttp3/Call;J)V
+#responseHeadersStart(Lokhttp3/Call;)V
+#responseHeadersEnd(Lokhttp3/Call;Lokhttp3/Response;)V
+#responseBodyStart(Lokhttp3/Call;)V
+#responseBodyEnd(Lokhttp3/Call;J)V
+#callEnd(Lokhttp3/Call;)V
+#callFailed(Lokhttp3/Call;Ljava/io/IOException;)V
@3.14.0
+#requestFailed(Lokhttp3/Call;Ljava/io/IOException;)V
+#responseFailed(Lokhttp3/Call;Ljava/io/IOException;)V
@4.1.0
+#proxySelectStart(Lokhttp3/Call;Lokhttp3/HttpUrl;)V
+#proxySelectEnd(Lokhttp3/Call;Lokhttp3/HttpUrl;Ljava/util/List;)V
@4.4.0
+#canceled(Lokhttp3/Call;)V
@4.7.0
+#satisfactionFailure(Lokhttp3/Call;Lokhttp3/Response;)V
+#cacheHit(Lokhttp3/Call;Lokhttp3/Response;)V
+#cacheMiss(Lokhttp3/Call;)V
+#cacheConditionalHit(Lokhttp3/Call;Lokhttp3/Response;)V
@5.0.0-alpha.4
-###okhttp3/EventListener

+###okhttp3/Route
@3.0.0-RC1
+#<init>(Lokhttp3/Address;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V
+#address()Lokhttp3/Address;
+#proxy()Ljava/net/Proxy;
+#socketAddress()Ljava/net/InetSocketAddress;
+#requiresTunnel()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.6.0
+#toString()Ljava/lang/String;
@4.0.0-alpha01
+#getAddress$okhttp()Lokhttp3/Address;
+#getProxy$okhttp()Ljava/net/Proxy;
+#getInetSocketAddress$okhttp()Ljava/net/InetSocketAddress;
+#component1$okhttp()Lokhttp3/Address;
+#component2$okhttp()Ljava/net/Proxy;
+#component3$okhttp()Ljava/net/InetSocketAddress;
+#copy(Lokhttp3/Address;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)Lokhttp3/Route;
+#copy$default(Lokhttp3/Route;Lokhttp3/Address;Ljava/net/Proxy;Ljava/net/InetSocketAddress;ILjava/lang/Object;)Lokhttp3/Route;
@4.0.0-alpha02
+#-deprecated_address()Lokhttp3/Address;
+#-deprecated_proxy()Ljava/net/Proxy;
+#-deprecated_socketAddress()Ljava/net/InetSocketAddress;
+#component1()Lokhttp3/Address;
+#component2()Ljava/net/Proxy;
+#component3()Ljava/net/InetSocketAddress;
-#getAddress$okhttp()Lokhttp3/Address;
-#getProxy$okhttp()Ljava/net/Proxy;
-#getInetSocketAddress$okhttp()Ljava/net/InetSocketAddress;
-#component1$okhttp()Lokhttp3/Address;
-#component2$okhttp()Ljava/net/Proxy;
-#component3$okhttp()Ljava/net/InetSocketAddress;
@4.0.0-RC1
-#component1()Lokhttp3/Address;
-#component2()Ljava/net/Proxy;
-#component3()Ljava/net/InetSocketAddress;
-#copy(Lokhttp3/Address;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)Lokhttp3/Route;
-#copy$default(Lokhttp3/Route;Lokhttp3/Address;Ljava/net/Proxy;Ljava/net/InetSocketAddress;ILjava/lang/Object;)Lokhttp3/Route;
@5.0.0-alpha.4
-###okhttp3/Route

+###okhttp3/Headers$Companion
@4.0.0-alpha01
+#of([Ljava/lang/String;)Lokhttp3/Headers;
+#of(Ljava/util/Map;)Lokhttp3/Headers;
+#checkName$okhttp(Ljava/lang/String;)V
+#checkValue$okhttp(Ljava/lang/String;Ljava/lang/String;)V
+#access$get(Lokhttp3/Headers$Companion;[Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.0.0-RC1
+#-deprecated_of([Ljava/lang/String;)Lokhttp3/Headers;
+#-deprecated_of(Ljava/util/Map;)Lokhttp3/Headers;
+#access$checkName(Lokhttp3/Headers$Companion;Ljava/lang/String;)V
+#access$checkValue(Lokhttp3/Headers$Companion;Ljava/lang/String;Ljava/lang/String;)V
-#checkName$okhttp(Ljava/lang/String;)V
-#checkValue$okhttp(Ljava/lang/String;Ljava/lang/String;)V
@5.0.0-alpha.4
-###okhttp3/Headers$Companion

+###okhttp3/Dns$Companion
@4.0.0-alpha01
+#-deprecated_Dns(Lkotlin/jvm/functions/Function1;)Lokhttp3/Dns;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.0.0-RC1
-#-deprecated_Dns(Lkotlin/jvm/functions/Function1;)Lokhttp3/Dns;
@4.10.0
-#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.1
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.3
-#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/Dns$Companion

+###okhttp3/FormBody$Companion
@4.0.0-alpha01
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/FormBody$Companion

+###okhttp3/ResponseBody$Companion$asResponseBody$1
@4.0.0-RC2
+#contentType()Lokhttp3/MediaType;
+#contentLength()J
+#source()Lokio/BufferedSource;
@5.0.0-alpha.4
-###okhttp3/ResponseBody$Companion$asResponseBody$1

+###okhttp3/Authenticator$Companion
@4.0.0-alpha01
+#-deprecated_Authenticator(Lkotlin/jvm/functions/Function2;)Lokhttp3/Authenticator;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.0.0-RC1
-#-deprecated_Authenticator(Lkotlin/jvm/functions/Function2;)Lokhttp3/Authenticator;
@4.10.0
-#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.1
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.3
-#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/Authenticator$Companion

+###okhttp3/ResponseBody$Companion
@4.0.0-alpha01
+#create(Lokhttp3/MediaType;Ljava/lang/String;)Lokhttp3/ResponseBody;
+#create(Lokhttp3/MediaType;[B)Lokhttp3/ResponseBody;
+#create(Lokhttp3/MediaType;Lokio/ByteString;)Lokhttp3/ResponseBody;
+#create(Lokhttp3/MediaType;JLokio/BufferedSource;)Lokhttp3/ResponseBody;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.0.0-alpha02
+#create(Ljava/lang/String;Lokhttp3/MediaType;)Lokhttp3/ResponseBody;
+#create$default(Lokhttp3/ResponseBody$Companion;Ljava/lang/String;Lokhttp3/MediaType;ILjava/lang/Object;)Lokhttp3/ResponseBody;
+#create([BLokhttp3/MediaType;)Lokhttp3/ResponseBody;
+#create$default(Lokhttp3/ResponseBody$Companion;[BLokhttp3/MediaType;ILjava/lang/Object;)Lokhttp3/ResponseBody;
+#create(Lokio/ByteString;Lokhttp3/MediaType;)Lokhttp3/ResponseBody;
+#create$default(Lokhttp3/ResponseBody$Companion;Lokio/ByteString;Lokhttp3/MediaType;ILjava/lang/Object;)Lokhttp3/ResponseBody;
+#create(Lokio/BufferedSource;Lokhttp3/MediaType;J)Lokhttp3/ResponseBody;
+#create$default(Lokhttp3/ResponseBody$Companion;Lokio/BufferedSource;Lokhttp3/MediaType;JILjava/lang/Object;)Lokhttp3/ResponseBody;
@5.0.0-alpha.4
-###okhttp3/ResponseBody$Companion

+###okhttp3/Interceptor$Companion$invoke$1
@4.0.0-alpha01
+#intercept(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;
+#<init>(Lkotlin/jvm/functions/Function1;)V
@5.0.0-alpha.4
-###okhttp3/Interceptor$Companion$invoke$1

+###okhttp3/ConnectionSpec$Companion
@4.0.0-alpha01
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/ConnectionSpec$Companion

+###okhttp3/HttpUrl$Builder$Companion
@4.0.0-alpha01
+#access$canonicalizeHost(Lokhttp3/HttpUrl$Builder$Companion;Ljava/lang/String;II)Ljava/lang/String;
+#access$schemeDelimiterOffset(Lokhttp3/HttpUrl$Builder$Companion;Ljava/lang/String;II)I
+#access$slashCount(Lokhttp3/HttpUrl$Builder$Companion;Ljava/lang/String;II)I
+#access$portColonOffset(Lokhttp3/HttpUrl$Builder$Companion;Ljava/lang/String;II)I
+#access$parsePort(Lokhttp3/HttpUrl$Builder$Companion;Ljava/lang/String;II)I
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.0.0-alpha02
-#access$canonicalizeHost(Lokhttp3/HttpUrl$Builder$Companion;Ljava/lang/String;II)Ljava/lang/String;
@5.0.0-alpha.4
-###okhttp3/HttpUrl$Builder$Companion

+###okhttp3/OkHttpClient$Companion
@4.0.0-alpha01
+#getDEFAULT_PROTOCOLS$okhttp()Ljava/util/List;
+#getDEFAULT_CONNECTION_SPECS$okhttp()Ljava/util/List;
+#access$newSslSocketFactory(Lokhttp3/OkHttpClient$Companion;Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.6.0
-#access$newSslSocketFactory(Lokhttp3/OkHttpClient$Companion;Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;
@5.0.0-alpha.4
-###okhttp3/OkHttpClient$Companion

+###okhttp3/EventListener$Companion$NONE$1
@4.0.0-alpha01
@5.0.0-alpha.4
-###okhttp3/EventListener$Companion$NONE$1

+###okhttp3/MultipartBody$Companion
@4.0.0-alpha01
+#appendQuotedString$okhttp(Ljava/lang/StringBuilder;Ljava/lang/String;)V
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/MultipartBody$Companion

+###okhttp3/CertificatePinner$Pin
@4.0.0-alpha01
+#matches(Ljava/lang/String;)Z
+#toString()Ljava/lang/String;
+#getPattern()Ljava/lang/String;
+#getHashAlgorithm()Ljava/lang/String;
+#getHash()Lokio/ByteString;
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lokio/ByteString;)V
+#component1()Ljava/lang/String;
+#component3()Ljava/lang/String;
+#component4()Lokio/ByteString;
+#copy(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lokio/ByteString;)Lokhttp3/CertificatePinner$Pin;
+#copy$default(Lokhttp3/CertificatePinner$Pin;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lokio/ByteString;ILjava/lang/Object;)Lokhttp3/CertificatePinner$Pin;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@4.3.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Lokio/ByteString;)V
+#component2()Ljava/lang/String;
+#component3()Lokio/ByteString;
+#copy(Ljava/lang/String;Ljava/lang/String;Lokio/ByteString;)Lokhttp3/CertificatePinner$Pin;
+#copy$default(Lokhttp3/CertificatePinner$Pin;Ljava/lang/String;Ljava/lang/String;Lokio/ByteString;ILjava/lang/Object;)Lokhttp3/CertificatePinner$Pin;
-#getPattern()Ljava/lang/String;
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lokio/ByteString;)V
-#component1()Ljava/lang/String;
-#component3()Ljava/lang/String;
-#component4()Lokio/ByteString;
-#copy(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lokio/ByteString;)Lokhttp3/CertificatePinner$Pin;
-#copy$default(Lokhttp3/CertificatePinner$Pin;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lokio/ByteString;ILjava/lang/Object;)Lokhttp3/CertificatePinner$Pin;
@4.6.0
+#getPattern()Ljava/lang/String;
+#matchesHostname(Ljava/lang/String;)Z
+#matchesCertificate(Ljava/security/cert/X509Certificate;)Z
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
-#matches(Ljava/lang/String;)Z
-#<init>(Ljava/lang/String;Ljava/lang/String;Lokio/ByteString;)V
-#component2()Ljava/lang/String;
-#component3()Lokio/ByteString;
-#copy(Ljava/lang/String;Ljava/lang/String;Lokio/ByteString;)Lokhttp3/CertificatePinner$Pin;
-#copy$default(Lokhttp3/CertificatePinner$Pin;Ljava/lang/String;Ljava/lang/String;Lokio/ByteString;ILjava/lang/Object;)Lokhttp3/CertificatePinner$Pin;
@5.0.0-alpha.4
-###okhttp3/CertificatePinner$Pin

+###okhttp3/internal/http1/Http1ExchangeCodec$Companion
@4.0.0-alpha01
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/http1/Http1ExchangeCodec$Companion

+###okhttp3/internal/http1/Http1ExchangeCodec
@3.14.0
+#<init>(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/RealConnection;Lokio/BufferedSource;Lokio/BufferedSink;)V
+#connection()Lokhttp3/internal/connection/RealConnection;
+#createRequestBody(Lokhttp3/Request;J)Lokio/Sink;
+#cancel()V
+#writeRequestHeaders(Lokhttp3/Request;)V
+#reportedContentLength(Lokhttp3/Response;)J
+#openResponseBodySource(Lokhttp3/Response;)Lokio/Source;
+#trailers()Lokhttp3/Headers;
+#isClosed()Z
+#flushRequest()V
+#finishRequest()V
+#writeRequest(Lokhttp3/Headers;Ljava/lang/String;)V
+#readResponseHeaders(Z)Lokhttp3/Response$Builder;
+#skipConnectBody(Lokhttp3/Response;)V
@4.0.0-alpha01
+#access$getSink$p(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokio/BufferedSink;
+#access$detachTimeout(Lokhttp3/internal/http1/Http1ExchangeCodec;Lokio/ForwardingTimeout;)V
+#access$getState$p(Lokhttp3/internal/http1/Http1ExchangeCodec;)I
+#access$setState$p(Lokhttp3/internal/http1/Http1ExchangeCodec;I)V
+#access$getSource$p(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokio/BufferedSource;
+#access$getRealConnection$p(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokhttp3/internal/connection/RealConnection;
+#access$getTrailers$p(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokhttp3/Headers;
+#access$setTrailers$p(Lokhttp3/internal/http1/Http1ExchangeCodec;Lokhttp3/Headers;)V
+#access$readHeaders(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokhttp3/Headers;
+#access$getClient$p(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokhttp3/OkHttpClient;
@4.4.0
+#getConnection()Lokhttp3/internal/connection/RealConnection;
-#connection()Lokhttp3/internal/connection/RealConnection;
-#access$getRealConnection$p(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokhttp3/internal/connection/RealConnection;
@4.6.0
+#access$getHeadersReader$p(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokhttp3/internal/http1/HeadersReader;
-#access$readHeaders(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokhttp3/Headers;
@5.0.0-alpha.4
-###okhttp3/internal/http1/Http1ExchangeCodec

+###okhttp3/internal/cache/DiskLruCache$Companion
@4.0.0-alpha01
+#create(Lokhttp3/internal/io/FileSystem;Ljava/io/File;IIJ)Lokhttp3/internal/cache/DiskLruCache;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.3.0
-#create(Lokhttp3/internal/io/FileSystem;Ljava/io/File;IIJ)Lokhttp3/internal/cache/DiskLruCache;
@5.0.0-alpha.4
-###okhttp3/internal/cache/DiskLruCache$Companion

+###okhttp3/internal/cache/CacheStrategy$Companion
@4.0.0-alpha01
+#isCacheable(Lokhttp3/Response;Lokhttp3/Request;)Z
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/cache/CacheStrategy$Companion

+###okhttp3/internal/cache/CacheInterceptor$cacheWritingResponse$cacheWritingSource$1
@4.0.0-alpha01
+#getCacheRequestClosed()Z
+#setCacheRequestClosed(Z)V
+#read(Lokio/Buffer;J)J
+#timeout()Lokio/Timeout;
+#close()V
@4.8.0
-#getCacheRequestClosed()Z
-#setCacheRequestClosed(Z)V
@5.0.0-alpha.4
-###okhttp3/internal/cache/CacheInterceptor$cacheWritingResponse$cacheWritingSource$1

+###okhttp3/internal/cache/FaultHidingSink
@4.0.0-alpha01
+#write(Lokio/Buffer;J)V
+#flush()V
+#close()V
+#getOnException()Lkotlin/jvm/functions/Function1;
+#<init>(Lokio/Sink;Lkotlin/jvm/functions/Function1;)V
@5.0.0-alpha.4
-###okhttp3/internal/cache/FaultHidingSink

+###okhttp3/internal/cache/DiskLruCache$Entry
@4.0.0-alpha01
+#getLengths$okhttp()[J
+#getCleanFiles$okhttp()Ljava/util/List;
+#getDirtyFiles$okhttp()Ljava/util/List;
+#getReadable$okhttp()Z
+#setReadable$okhttp(Z)V
+#getCurrentEditor$okhttp()Lokhttp3/internal/cache/DiskLruCache$Editor;
+#setCurrentEditor$okhttp(Lokhttp3/internal/cache/DiskLruCache$Editor;)V
+#getSequenceNumber$okhttp()J
+#setSequenceNumber$okhttp(J)V
+#setLengths$okhttp([Ljava/lang/String;)V
+#writeLengths$okhttp(Lokio/BufferedSink;)V
+#snapshot$okhttp()Lokhttp3/internal/cache/DiskLruCache$Snapshot;
+#getKey$okhttp()Ljava/lang/String;
+#<init>(Lokhttp3/internal/cache/DiskLruCache;Ljava/lang/String;)V
@4.0.0-alpha02
+#setLengths$okhttp(Ljava/util/List;)V
-#setLengths$okhttp([Ljava/lang/String;)V
@4.6.0
+#getZombie$okhttp()Z
+#setZombie$okhttp(Z)V
+#getLockingSourceCount$okhttp()I
+#setLockingSourceCount$okhttp(I)V
@5.0.0-alpha.4
-###okhttp3/internal/cache/DiskLruCache$Entry

+###okhttp3/internal/cache/DiskLruCache$cleanupTask$1
@4.3.0
+#runOnce()J
@5.0.0-alpha.4
-###okhttp3/internal/cache/DiskLruCache$cleanupTask$1

+###okhttp3/internal/cache/DiskLruCache$snapshots$1
@4.0.0-alpha01
+#getDelegate()Ljava/util/Iterator;
+#getNextSnapshot()Lokhttp3/internal/cache/DiskLruCache$Snapshot;
+#setNextSnapshot(Lokhttp3/internal/cache/DiskLruCache$Snapshot;)V
+#getRemoveSnapshot()Lokhttp3/internal/cache/DiskLruCache$Snapshot;
+#setRemoveSnapshot(Lokhttp3/internal/cache/DiskLruCache$Snapshot;)V
+#hasNext()Z
+#next()Lokhttp3/internal/cache/DiskLruCache$Snapshot;
+#next()Ljava/lang/Object;
+#remove()V
@4.8.0
-#getDelegate()Ljava/util/Iterator;
-#getNextSnapshot()Lokhttp3/internal/cache/DiskLruCache$Snapshot;
-#setNextSnapshot(Lokhttp3/internal/cache/DiskLruCache$Snapshot;)V
-#getRemoveSnapshot()Lokhttp3/internal/cache/DiskLruCache$Snapshot;
-#setRemoveSnapshot(Lokhttp3/internal/cache/DiskLruCache$Snapshot;)V
@5.0.0-alpha.4
-###okhttp3/internal/cache/DiskLruCache$snapshots$1

+###okhttp3/internal/cache/CacheInterceptor$Companion
@4.0.0-alpha01
+#isEndToEnd$okhttp(Ljava/lang/String;)Z
+#isContentSpecificHeader$okhttp(Ljava/lang/String;)Z
+#access$stripBody(Lokhttp3/internal/cache/CacheInterceptor$Companion;Lokhttp3/Response;)Lokhttp3/Response;
+#access$combine(Lokhttp3/internal/cache/CacheInterceptor$Companion;Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.0.0-alpha02
-#isEndToEnd$okhttp(Ljava/lang/String;)Z
-#isContentSpecificHeader$okhttp(Ljava/lang/String;)Z
@5.0.0-alpha.4
-###okhttp3/internal/cache/CacheInterceptor$Companion

+###okhttp3/internal/connection/RealCall$CallReference
@4.4.0
+#getCallStackTrace()Ljava/lang/Object;
+#<init>(Lokhttp3/internal/connection/RealCall;Ljava/lang/Object;)V
@5.0.0-alpha.4
-###okhttp3/internal/connection/RealCall$CallReference

+###okhttp3/internal/connection/RealCall
@4.4.0
+#getConnection()Lokhttp3/internal/connection/RealConnection;
+#setConnection(Lokhttp3/internal/connection/RealConnection;)V
+#getInterceptorScopedExchange$okhttp()Lokhttp3/internal/connection/Exchange;
+#timeout()Lokio/AsyncTimeout;
+#timeout()Lokio/Timeout;
+#clone()Lokhttp3/internal/connection/RealCall;
+#clone()Ljava/lang/Object;
+#clone()Lokhttp3/Call;
+#request()Lokhttp3/Request;
+#cancel()V
+#isCanceled()Z
+#execute()Lokhttp3/Response;
+#enqueue(Lokhttp3/Callback;)V
+#isExecuted()Z
+#getResponseWithInterceptorChain$okhttp()Lokhttp3/Response;
+#enterNetworkInterceptorExchange(Lokhttp3/Request;Z)V
+#initExchange$okhttp(Lokhttp3/internal/http/RealInterceptorChain;)Lokhttp3/internal/connection/Exchange;
+#acquireConnectionNoEvents(Lokhttp3/internal/connection/RealConnection;)V
+#messageDone$okhttp(Lokhttp3/internal/connection/Exchange;ZZLjava/io/IOException;)Ljava/io/IOException;
+#noMoreExchanges$okhttp(Ljava/io/IOException;)Ljava/io/IOException;
+#releaseConnectionNoEvents$okhttp()Ljava/net/Socket;
+#timeoutEarlyExit()V
+#exitNetworkInterceptorExchange$okhttp(Z)V
+#retryAfterFailure()Z
+#redactedUrl$okhttp()Ljava/lang/String;
+#getClient()Lokhttp3/OkHttpClient;
+#getOriginalRequest()Lokhttp3/Request;
+#getForWebSocket()Z
+#<init>(Lokhttp3/OkHttpClient;Lokhttp3/Request;Z)V
+#access$getTimeout$p(Lokhttp3/internal/connection/RealCall;)Lokhttp3/internal/connection/RealCall$timeout$1;
+#access$toLoggableString(Lokhttp3/internal/connection/RealCall;)Ljava/lang/String;
@4.7.0
+#getEventListener$okhttp()Lokhttp3/EventListener;
@4.8.0
+#getConnectionToCancel()Lokhttp3/internal/connection/RealConnection;
+#setConnectionToCancel(Lokhttp3/internal/connection/RealConnection;)V
-#setConnection(Lokhttp3/internal/connection/RealConnection;)V
@5.0.0-alpha.3
-#timeout()Lokio/AsyncTimeout;
-#clone()Lokhttp3/internal/connection/RealCall;
@5.0.0-alpha.4
-###okhttp3/internal/connection/RealCall

+###okhttp3/internal/connection/RealCall$timeout$1
@4.4.0
@5.0.0-alpha.4
-###okhttp3/internal/connection/RealCall$timeout$1

+###okhttp3/internal/connection/RealCall$AsyncCall
@4.4.0
+#getCallsPerHost()Ljava/util/concurrent/atomic/AtomicInteger;
+#reuseCallsPerHostFrom(Lokhttp3/internal/connection/RealCall$AsyncCall;)V
+#getHost()Ljava/lang/String;
+#getRequest()Lokhttp3/Request;
+#getCall()Lokhttp3/internal/connection/RealCall;
+#executeOn(Ljava/util/concurrent/ExecutorService;)V
+#run()V
+#<init>(Lokhttp3/internal/connection/RealCall;Lokhttp3/Callback;)V
@5.0.0-alpha.4
-###okhttp3/internal/connection/RealCall$AsyncCall

+###okhttp3/internal/connection/RealConnection$Companion
@4.0.0-alpha02
+#newTestConnection(Lokhttp3/internal/connection/RealConnectionPool;Lokhttp3/Route;Ljava/net/Socket;J)Lokhttp3/internal/connection/RealConnection;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/connection/RealConnection$Companion

+###okhttp3/internal/connection/ExchangeFinder
@4.0.0-alpha01
+#find(Lokhttp3/OkHttpClient;Lokhttp3/Interceptor$Chain;Z)Lokhttp3/internal/http/ExchangeCodec;
+#connectingConnection()Lokhttp3/internal/connection/RealConnection;
+#trackFailure()V
+#hasStreamFailure()Z
+#hasRouteToTry()Z
+#<init>(Lokhttp3/internal/connection/Transmitter;Lokhttp3/internal/connection/RealConnectionPool;Lokhttp3/Address;Lokhttp3/Call;Lokhttp3/EventListener;)V
@4.4.0
+#find(Lokhttp3/OkHttpClient;Lokhttp3/internal/http/RealInterceptorChain;)Lokhttp3/internal/http/ExchangeCodec;
+#trackFailure(Ljava/io/IOException;)V
+#retryAfterFailure()Z
+#getAddress$okhttp()Lokhttp3/Address;
+#<init>(Lokhttp3/internal/connection/RealConnectionPool;Lokhttp3/Address;Lokhttp3/internal/connection/RealCall;Lokhttp3/EventListener;)V
-#find(Lokhttp3/OkHttpClient;Lokhttp3/Interceptor$Chain;Z)Lokhttp3/internal/http/ExchangeCodec;
-#trackFailure()V
-#hasStreamFailure()Z
-#hasRouteToTry()Z
-#<init>(Lokhttp3/internal/connection/Transmitter;Lokhttp3/internal/connection/RealConnectionPool;Lokhttp3/Address;Lokhttp3/Call;Lokhttp3/EventListener;)V
@4.4.1
+#sameHostAndPort(Lokhttp3/HttpUrl;)Z
@4.8.0
-#connectingConnection()Lokhttp3/internal/connection/RealConnection;
@5.0.0-alpha.4
-###okhttp3/internal/connection/ExchangeFinder

+###okhttp3/internal/connection/RealConnection$newWebSocketStreams$1
@4.0.0-alpha02
+#close()V
@5.0.0-alpha.4
-###okhttp3/internal/connection/RealConnection$newWebSocketStreams$1

+###okhttp3/internal/connection/RealConnectionPool
@3.14.0
+#<init>(IJLjava/util/concurrent/TimeUnit;)V
+#idleConnectionCount()I
+#connectionCount()I
+#evictAll()V
+#connectFailed(Lokhttp3/Route;Ljava/io/IOException;)V
@4.0.0-alpha01
+#getRouteDatabase()Lokhttp3/internal/connection/RouteDatabase;
+#getCleanupRunning()Z
+#setCleanupRunning(Z)V
+#transmitterAcquirePooledConnection(Lokhttp3/Address;Lokhttp3/internal/connection/Transmitter;Ljava/util/List;Z)Z
+#put(Lokhttp3/internal/connection/RealConnection;)V
+#connectionBecameIdle(Lokhttp3/internal/connection/RealConnection;)Z
+#cleanup(J)J
@4.3.0
+#<init>(Lokhttp3/internal/concurrent/TaskRunner;IJLjava/util/concurrent/TimeUnit;)V
-#getCleanupRunning()Z
-#setCleanupRunning(Z)V
-#<init>(IJLjava/util/concurrent/TimeUnit;)V
@4.4.0
+#callAcquirePooledConnection(Lokhttp3/Address;Lokhttp3/internal/connection/RealCall;Ljava/util/List;Z)Z
-#getRouteDatabase()Lokhttp3/internal/connection/RouteDatabase;
-#transmitterAcquirePooledConnection(Lokhttp3/Address;Lokhttp3/internal/connection/Transmitter;Ljava/util/List;Z)Z
-#connectFailed(Lokhttp3/Route;Ljava/io/IOException;)V
@5.0.0-alpha.4
-###okhttp3/internal/connection/RealConnectionPool

+###okhttp3/internal/connection/RealConnection$WhenMappings
@4.0.0-alpha02
@5.0.0-alpha.4
-###okhttp3/internal/connection/RealConnection$WhenMappings

+###okhttp3/internal/connection/RouteSelector$Companion
@4.0.0-alpha01
+#socketHost$annotations(Ljava/net/InetSocketAddress;)V
+#getSocketHost(Ljava/net/InetSocketAddress;)Ljava/lang/String;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.0.0-alpha02
-#socketHost$annotations(Ljava/net/InetSocketAddress;)V
@5.0.0-alpha.4
-###okhttp3/internal/connection/RouteSelector$Companion

+###okhttp3/internal/connection/Exchange$ResponseBodySource
@4.0.0-alpha01
+#read(Lokio/Buffer;J)J
+#close()V
+#complete(Ljava/io/IOException;)Ljava/io/IOException;
+#<init>(Lokhttp3/internal/connection/Exchange;Lokio/Source;J)V
@5.0.0-alpha.4
-###okhttp3/internal/connection/Exchange$ResponseBodySource

+###okhttp3/internal/connection/RealConnectionPool$cleanupTask$1
@4.3.0
+#runOnce()J
@5.0.0-alpha.4
-###okhttp3/internal/connection/RealConnectionPool$cleanupTask$1

+###okhttp3/internal/connection/RealConnectionPool$Companion
@4.0.0-alpha01
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.0.0-alpha02
+#get(Lokhttp3/ConnectionPool;)Lokhttp3/internal/connection/RealConnectionPool;
@5.0.0-alpha.4
-###okhttp3/internal/connection/RealConnectionPool$Companion

+###okhttp3/internal/connection/Exchange
@3.14.0
+#<init>(Lokhttp3/internal/connection/Transmitter;Lokhttp3/Call;Lokhttp3/EventListener;Lokhttp3/internal/connection/ExchangeFinder;Lokhttp3/internal/http/ExchangeCodec;)V
+#connection()Lokhttp3/internal/connection/RealConnection;
+#isDuplex()Z
+#writeRequestHeaders(Lokhttp3/Request;)V
+#createRequestBody(Lokhttp3/Request;Z)Lokio/Sink;
+#flushRequest()V
+#finishRequest()V
+#responseHeadersStart()V
+#readResponseHeaders(Z)Lokhttp3/Response$Builder;
+#responseHeadersEnd(Lokhttp3/Response;)V
+#openResponseBody(Lokhttp3/Response;)Lokhttp3/ResponseBody;
+#trailers()Lokhttp3/Headers;
+#timeoutEarlyExit()V
+#newWebSocketStreams()Lokhttp3/internal/ws/RealWebSocket$Streams;
+#webSocketUpgradeFailed()V
+#noNewExchangesOnConnection()V
+#cancel()V
+#detachWithViolence()V
+#noRequestBody()V
@4.0.0-alpha01
+#bodyComplete(JZZLjava/io/IOException;)Ljava/io/IOException;
+#getTransmitter$okhttp()Lokhttp3/internal/connection/Transmitter;
+#getCall$okhttp()Lokhttp3/Call;
+#getEventListener$okhttp()Lokhttp3/EventListener;
@4.4.0
+#isDuplex$okhttp()Z
+#getConnection$okhttp()Lokhttp3/internal/connection/RealConnection;
+#isCoalescedConnection$okhttp()Z
+#getCall$okhttp()Lokhttp3/internal/connection/RealCall;
+#<init>(Lokhttp3/internal/connection/RealCall;Lokhttp3/EventListener;Lokhttp3/internal/connection/ExchangeFinder;Lokhttp3/internal/http/ExchangeCodec;)V
-#isDuplex()Z
-#connection()Lokhttp3/internal/connection/RealConnection;
-#timeoutEarlyExit()V
-#getTransmitter$okhttp()Lokhttp3/internal/connection/Transmitter;
-#getCall$okhttp()Lokhttp3/Call;
-#<init>(Lokhttp3/internal/connection/Transmitter;Lokhttp3/Call;Lokhttp3/EventListener;Lokhttp3/internal/connection/ExchangeFinder;Lokhttp3/internal/http/ExchangeCodec;)V
@4.4.1
+#getFinder$okhttp()Lokhttp3/internal/connection/ExchangeFinder;
@4.10.0-RC1
+#getHasFailure$okhttp()Z
@4.10.0
-#getHasFailure$okhttp()Z
@5.0.0-alpha.1
+#getHasFailure$okhttp()Z
@5.0.0-alpha.4
-###okhttp3/internal/connection/Exchange

+###okhttp3/internal/platform/Jdk9Platform$Companion
@4.0.0-alpha01
+#buildIfSupported()Lokhttp3/internal/platform/Jdk9Platform;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.3.0
+#isAvailable()Z
@5.0.0-alpha.3
+#getMajorVersion()Ljava/lang/Integer;
@5.0.0-alpha.4
-###okhttp3/internal/platform/Jdk9Platform$Companion

+###okhttp3/internal/platform/AndroidPlatform$CustomTrustRootIndex
@4.0.0-alpha01
+#findByIssuerAndSignature(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;
+#<init>(Ljavax/net/ssl/X509TrustManager;Ljava/lang/reflect/Method;)V
+#copy(Ljavax/net/ssl/X509TrustManager;Ljava/lang/reflect/Method;)Lokhttp3/internal/platform/AndroidPlatform$CustomTrustRootIndex;
+#copy$default(Lokhttp3/internal/platform/AndroidPlatform$CustomTrustRootIndex;Ljavax/net/ssl/X509TrustManager;Ljava/lang/reflect/Method;ILjava/lang/Object;)Lokhttp3/internal/platform/AndroidPlatform$CustomTrustRootIndex;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@5.0.0-alpha.4
-###okhttp3/internal/platform/AndroidPlatform$CustomTrustRootIndex

+###okhttp3/internal/platform/BouncyCastlePlatform
@4.4.0
+#newSSLContext()Ljavax/net/ssl/SSLContext;
+#platformTrustManager()Ljavax/net/ssl/X509TrustManager;
+#trustManager(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
+#getSelectedProtocol(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
+#access$isSupported$cp()Z
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/platform/BouncyCastlePlatform

+###okhttp3/internal/platform/Android10Platform$Companion
@4.3.0
+#isSupported()Z
+#buildIfSupported()Lokhttp3/internal/platform/Platform;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/platform/Android10Platform$Companion

+###okhttp3/internal/platform/AndroidPlatform$Companion
@4.0.0-alpha01
+#buildIfSupported()Lokhttp3/internal/platform/Platform;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.2.0
+#isSupported()Z
@4.3.0
+#isAndroid()Z
@4.7.0
-#isAndroid()Z
@5.0.0-alpha.4
-###okhttp3/internal/platform/AndroidPlatform$Companion

+###okhttp3/internal/platform/ConscryptPlatform$Companion
@4.0.0-alpha01
+#buildIfSupported()Lokhttp3/internal/platform/ConscryptPlatform;
+#atLeastVersion(III)Z
+#atLeastVersion$default(Lokhttp3/internal/platform/ConscryptPlatform$Companion;IIIILjava/lang/Object;)Z
+#atLeastVersion(II)Z
+#atLeastVersion(I)Z
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.0.0-alpha02
-#atLeastVersion(II)Z
-#atLeastVersion(I)Z
@4.2.0
+#isSupported()Z
@5.0.0-alpha.4
-###okhttp3/internal/platform/ConscryptPlatform$Companion

+###okhttp3/internal/platform/Android10Platform
@4.3.0
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)V
+#getSelectedProtocol(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
+#log(Ljava/lang/String;ILjava/lang/Throwable;)V
+#isCleartextTrafficPermitted(Ljava/lang/String;)Z
+#buildCertificateChainCleaner(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;
+#<init>()V
+#access$isSupported$cp()Z
@4.3.1
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
-#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)V
@4.6.0
+#trustManager(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
@4.7.0
-#log(Ljava/lang/String;ILjava/lang/Throwable;)V
@5.0.0-alpha.3
+#getStackTraceForCloseable(Ljava/lang/String;)Ljava/lang/Object;
+#logCloseableLeak(Ljava/lang/String;Ljava/lang/Object;)V
@5.0.0-alpha.4
-###okhttp3/internal/platform/Android10Platform

+###okhttp3/internal/platform/Jdk9Platform
@4.0.0-alpha01
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
+#getSelectedProtocol(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
+#trustManager(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
+#<init>(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V
+#buildIfSupported()Lokhttp3/internal/platform/Jdk9Platform;
@4.0.0-alpha02
-#buildIfSupported()Lokhttp3/internal/platform/Jdk9Platform;
@4.3.0
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)V
+#<init>()V
+#access$isAvailable$cp()Z
-#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
-#<init>(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V
@4.3.1
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
-#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)V
@5.0.0-alpha.3
+#newSSLContext()Ljavax/net/ssl/SSLContext;
+#access$getMajorVersion$cp()Ljava/lang/Integer;
@5.0.0-alpha.4
-###okhttp3/internal/platform/Jdk9Platform

+###okhttp3/internal/platform/android/Android10CertificateChainCleaner
@4.3.0
+#getExtensions()Landroid/net/http/X509TrustManagerExtensions;
+#clean(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#<init>(Ljavax/net/ssl/X509TrustManager;)V
@4.3.1
+#<init>(Ljavax/net/ssl/X509TrustManager;Landroid/net/http/X509TrustManagerExtensions;)V
-#getExtensions()Landroid/net/http/X509TrustManagerExtensions;
-#<init>(Ljavax/net/ssl/X509TrustManager;)V
@4.6.0
-###okhttp3/internal/platform/android/Android10CertificateChainCleaner

+###okhttp3/internal/platform/android/SocketAdapter
@4.2.0
+#isSupported()Z
+#trustManager(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
+#matchesSocket(Ljavax/net/ssl/SSLSocket;)Z
+#matchesSocketFactory(Ljavax/net/ssl/SSLSocketFactory;)Z
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
+#getSelectedProtocol(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
@4.3.0
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)V
-#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
@4.3.1
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
-#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)V
@5.0.0-alpha.4
-###okhttp3/internal/platform/android/SocketAdapter

+###okhttp3/internal/platform/android/AndroidCertificateChainCleaner$Companion
@4.3.0
+#build(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/platform/android/AndroidCertificateChainCleaner;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.6.0
+#buildIfSupported(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/platform/android/AndroidCertificateChainCleaner;
-#build(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/platform/android/AndroidCertificateChainCleaner;
@5.0.0-alpha.4
-###okhttp3/internal/platform/android/AndroidCertificateChainCleaner$Companion

+###okhttp3/internal/platform/android/ConscryptSocketAdapter$Companion
@4.3.0
+#buildIfSupported()Lokhttp3/internal/platform/android/SocketAdapter;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.8.0
+#getFactory()Lokhttp3/internal/platform/android/DeferredSocketAdapter$Factory;
-#buildIfSupported()Lokhttp3/internal/platform/android/SocketAdapter;
@5.0.0-alpha.4
-###okhttp3/internal/platform/android/ConscryptSocketAdapter$Companion

+###okhttp3/internal/platform/android/ConscryptSocketAdapter
@4.2.0
+#trustManager(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
+#matchesSocketFactory(Ljavax/net/ssl/SSLSocketFactory;)Z
+#matchesSocket(Ljavax/net/ssl/SSLSocket;)Z
+#isSupported()Z
+#getSelectedProtocol(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
+#buildIfSupported()Lokhttp3/internal/platform/android/SocketAdapter;
@4.3.0
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)V
+#<init>()V
-#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
-#buildIfSupported()Lokhttp3/internal/platform/android/SocketAdapter;
@4.3.1
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
-#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)V
@4.8.0
+#access$getFactory$cp()Lokhttp3/internal/platform/android/DeferredSocketAdapter$Factory;
@5.0.0-alpha.4
-###okhttp3/internal/platform/android/ConscryptSocketAdapter

+###okhttp3/internal/platform/android/UtilKt
@4.2.0
+#androidLog(ILjava/lang/String;Ljava/lang/Throwable;)V
@4.7.0
-###okhttp3/internal/platform/android/UtilKt

+###okhttp3/internal/platform/android/AndroidSocketAdapter$Companion
@4.2.0
+#buildIfSupported(Ljava/lang/String;)Lokhttp3/internal/platform/android/SocketAdapter;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.8.0
+#getPlayProviderFactory()Lokhttp3/internal/platform/android/DeferredSocketAdapter$Factory;
+#factory(Ljava/lang/String;)Lokhttp3/internal/platform/android/DeferredSocketAdapter$Factory;
+#access$build(Lokhttp3/internal/platform/android/AndroidSocketAdapter$Companion;Ljava/lang/Class;)Lokhttp3/internal/platform/android/AndroidSocketAdapter;
-#buildIfSupported(Ljava/lang/String;)Lokhttp3/internal/platform/android/SocketAdapter;
@5.0.0-alpha.4
-###okhttp3/internal/platform/android/AndroidSocketAdapter$Companion

+###okhttp3/internal/platform/android/CloseGuard
@4.2.0
+#createAndOpen(Ljava/lang/String;)Ljava/lang/Object;
+#warnIfOpen(Ljava/lang/Object;)Z
+#<init>(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V
@5.0.0-alpha.3
-###okhttp3/internal/platform/android/CloseGuard

+###okhttp3/internal/platform/android/AndroidSocketAdapter
@4.2.0
+#isSupported()Z
+#trustManager(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
+#matchesSocket(Ljavax/net/ssl/SSLSocket;)Z
+#matchesSocketFactory(Ljavax/net/ssl/SSLSocketFactory;)Z
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
+#getSelectedProtocol(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
+#<init>(Ljava/lang/Class;)V
@4.3.0
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)V
-#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
@4.3.1
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
-#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)V
@4.8.0
+#access$getPlayProviderFactory$cp()Lokhttp3/internal/platform/android/DeferredSocketAdapter$Factory;
@5.0.0-alpha.4
-###okhttp3/internal/platform/android/AndroidSocketAdapter

+###okhttp3/internal/platform/android/AndroidCertificateChainCleaner
@4.3.0
+#clean(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#<init>(Ljavax/net/ssl/X509TrustManager;Ljava/lang/Object;Ljava/lang/reflect/Method;)V
@4.6.0
+#<init>(Ljavax/net/ssl/X509TrustManager;Landroid/net/http/X509TrustManagerExtensions;)V
-#<init>(Ljavax/net/ssl/X509TrustManager;Ljava/lang/Object;Ljava/lang/reflect/Method;)V
@5.0.0-alpha.4
-###okhttp3/internal/platform/android/AndroidCertificateChainCleaner

+###okhttp3/internal/platform/android/StandardAndroidSocketAdapter
@4.2.0
+#matchesSocketFactory(Ljavax/net/ssl/SSLSocketFactory;)Z
+#trustManager(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V
@5.0.0-alpha.4
-###okhttp3/internal/platform/android/StandardAndroidSocketAdapter

+###okhttp3/internal/platform/android/CloseGuard$Companion
@4.2.0
+#get()Lokhttp3/internal/platform/android/CloseGuard;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.3
-###okhttp3/internal/platform/android/CloseGuard$Companion

+###okhttp3/internal/platform/android/Android10CertificateChainCleaner$Companion
@4.3.1
+#buildIfSupported(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/platform/android/Android10CertificateChainCleaner;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.6.0
-###okhttp3/internal/platform/android/Android10CertificateChainCleaner$Companion

+###okhttp3/internal/platform/android/StandardAndroidSocketAdapter$Companion
@4.2.0
+#buildIfSupported(Ljava/lang/String;)Lokhttp3/internal/platform/android/SocketAdapter;
+#buildIfSupported$default(Lokhttp3/internal/platform/android/StandardAndroidSocketAdapter$Companion;Ljava/lang/String;ILjava/lang/Object;)Lokhttp3/internal/platform/android/SocketAdapter;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/platform/android/StandardAndroidSocketAdapter$Companion

+###okhttp3/internal/platform/android/DeferredSocketAdapter
@4.2.0
+#isSupported()Z
+#matchesSocket(Ljavax/net/ssl/SSLSocket;)Z
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
+#getSelectedProtocol(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
+#trustManager(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
+#matchesSocketFactory(Ljavax/net/ssl/SSLSocketFactory;)Z
+#<init>(Ljava/lang/String;)V
@4.3.0
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)V
-#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
@4.3.1
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
-#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)V
@4.8.0
+#<init>(Lokhttp3/internal/platform/android/DeferredSocketAdapter$Factory;)V
-#<init>(Ljava/lang/String;)V
@5.0.0-alpha.4
-###okhttp3/internal/platform/android/DeferredSocketAdapter

+###okhttp3/internal/platform/android/Android10SocketAdapter
@4.3.0
+#trustManager(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
+#matchesSocketFactory(Ljavax/net/ssl/SSLSocketFactory;)Z
+#matchesSocket(Ljavax/net/ssl/SSLSocket;)Z
+#isSupported()Z
+#getSelectedProtocol(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)V
+#<init>()V
@4.3.1
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
-#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)V
@5.0.0-alpha.4
-###okhttp3/internal/platform/android/Android10SocketAdapter

+###okhttp3/internal/platform/android/Android10SocketAdapter$Companion
@4.3.0
+#buildIfSupported()Lokhttp3/internal/platform/android/SocketAdapter;
+#isSupported()Z
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/platform/android/Android10SocketAdapter$Companion

+###okhttp3/internal/platform/AndroidPlatform
@4.0.0-alpha01
+#newSSLContext()Ljavax/net/ssl/SSLContext;
+#connectSocket(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
+#getSelectedProtocol(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
+#log(ILjava/lang/String;Ljava/lang/Throwable;)V
+#getStackTraceForCloseable(Ljava/lang/String;)Ljava/lang/Object;
+#logCloseableLeak(Ljava/lang/String;Ljava/lang/Object;)V
+#isCleartextTrafficPermitted(Ljava/lang/String;)Z
+#buildCertificateChainCleaner(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;
+#buildTrustRootIndex(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V
@4.0.0-alpha02
-#newSSLContext()Ljavax/net/ssl/SSLContext;
@4.2.0
+#<init>()V
+#access$isSupported$cp()Z
-#<init>(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V
@4.3.0
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)V
+#log(Ljava/lang/String;ILjava/lang/Throwable;)V
+#access$isAndroid$cp()Z
-#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
-#log(ILjava/lang/String;Ljava/lang/Throwable;)V
@4.3.1
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
-#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)V
@4.6.0
+#trustManager(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
@4.7.0
-#log(Ljava/lang/String;ILjava/lang/Throwable;)V
-#access$isAndroid$cp()Z
@5.0.0-alpha.3
-#getStackTraceForCloseable(Ljava/lang/String;)Ljava/lang/Object;
-#logCloseableLeak(Ljava/lang/String;Ljava/lang/Object;)V
@5.0.0-alpha.4
-###okhttp3/internal/platform/AndroidPlatform

+###okhttp3/internal/platform/OpenJSSEPlatform
@4.2.0
+#newSSLContext()Ljavax/net/ssl/SSLContext;
+#platformTrustManager()Ljavax/net/ssl/X509TrustManager;
+#trustManager(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
+#getSelectedProtocol(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
+#access$isSupported$cp()Z
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.3.0
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)V
-#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
@4.3.1
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
-#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)V
@5.0.0-alpha.4
-###okhttp3/internal/platform/OpenJSSEPlatform

+###okhttp3/internal/platform/Jdk8WithJettyBootPlatform$Companion
@4.0.0-alpha01
+#buildIfSupported()Lokhttp3/internal/platform/Platform;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/platform/Jdk8WithJettyBootPlatform$Companion

+###okhttp3/internal/platform/BouncyCastlePlatform$Companion
@4.4.0
+#isSupported()Z
+#buildIfSupported()Lokhttp3/internal/platform/BouncyCastlePlatform;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/platform/BouncyCastlePlatform$Companion

+###okhttp3/internal/platform/Platform$Companion
@4.0.0-alpha01
+#get()Lokhttp3/internal/platform/Platform;
+#resetForTests(Lokhttp3/internal/platform/Platform;)V
+#resetForTests$default(Lokhttp3/internal/platform/Platform$Companion;Lokhttp3/internal/platform/Platform;ILjava/lang/Object;)V
+#alpnProtocolNames(Ljava/util/List;)Ljava/util/List;
+#isConscryptPreferred$annotations()V
+#isConscryptPreferred()Z
+#concatLengthPrefixed(Ljava/util/List;)[B
+#readFieldOrNull(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
+#access$findPlatform(Lokhttp3/internal/platform/Platform$Companion;)Lokhttp3/internal/platform/Platform;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.0.0-alpha02
-#isConscryptPreferred$annotations()V
@4.2.0
-#isConscryptPreferred()Z
-#readFieldOrNull(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
@4.7.0
+#isAndroid()Z
@5.0.0-alpha.4
-###okhttp3/internal/platform/Platform$Companion

+###okhttp3/internal/platform/Jdk8WithJettyBootPlatform
@4.0.0-alpha01
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
+#afterHandshake(Ljavax/net/ssl/SSLSocket;)V
+#getSelectedProtocol(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
+#<init>(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)V
+#buildIfSupported()Lokhttp3/internal/platform/Platform;
@4.0.0-alpha02
-#buildIfSupported()Lokhttp3/internal/platform/Platform;
@4.3.0
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)V
-#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
@4.3.1
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
-#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)V
@5.0.0-alpha.4
-###okhttp3/internal/platform/Jdk8WithJettyBootPlatform

+###okhttp3/internal/platform/OpenJSSEPlatform$Companion
@4.2.0
+#isSupported()Z
+#buildIfSupported()Lokhttp3/internal/platform/OpenJSSEPlatform;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/platform/OpenJSSEPlatform$Companion

+###okhttp3/internal/io/FileSystem$Companion
@4.0.0-alpha01
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.10.0
-#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.1
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.3
-###okhttp3/internal/io/FileSystem$Companion

+###okhttp3/internal/io/FileSystem$Companion$SYSTEM$1
@4.0.0-alpha01
+#source(Ljava/io/File;)Lokio/Source;
+#sink(Ljava/io/File;)Lokio/Sink;
+#appendingSink(Ljava/io/File;)Lokio/Sink;
+#delete(Ljava/io/File;)V
+#exists(Ljava/io/File;)Z
+#size(Ljava/io/File;)J
+#rename(Ljava/io/File;Ljava/io/File;)V
+#deleteContents(Ljava/io/File;)V
@4.6.0
+#toString()Ljava/lang/String;
@4.9.0
-###okhttp3/internal/io/FileSystem$Companion$SYSTEM$1

+###okhttp3/internal/Util$asFactory$1
@4.0.0-RC1
+#create(Lokhttp3/Call;)Lokhttp3/EventListener;
@4.9.0
-###okhttp3/internal/Util$asFactory$1

+###okhttp3/internal/cache2/Relay$Companion
@4.0.0-alpha02
+#edit(Ljava/io/File;Lokio/Source;Lokio/ByteString;J)Lokhttp3/internal/cache2/Relay;
+#read(Ljava/io/File;)Lokhttp3/internal/cache2/Relay;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/cache2/Relay$Companion

+###okhttp3/internal/cache2/FileOperator
@4.0.0-alpha02
+#write(JLokio/Buffer;J)V
+#read(JLokio/Buffer;J)V
+#<init>(Ljava/nio/channels/FileChannel;)V
@5.0.0-alpha.4
-###okhttp3/internal/cache2/FileOperator

+###okhttp3/internal/cache2/Relay$RelaySource
@4.0.0-alpha02
+#read(Lokio/Buffer;J)J
+#timeout()Lokio/Timeout;
+#close()V
+#<init>(Lokhttp3/internal/cache2/Relay;)V
@5.0.0-alpha.4
-###okhttp3/internal/cache2/Relay$RelaySource

+###okhttp3/internal/cache2/Relay
@4.0.0-alpha02
+#getUpstreamReader()Ljava/lang/Thread;
+#setUpstreamReader(Ljava/lang/Thread;)V
+#getUpstreamBuffer()Lokio/Buffer;
+#getComplete()Z
+#setComplete(Z)V
+#getBuffer()Lokio/Buffer;
+#getSourceCount()I
+#setSourceCount(I)V
+#isClosed()Z
+#commit(J)V
+#metadata()Lokio/ByteString;
+#newSource()Lokio/Source;
+#getFile()Ljava/io/RandomAccessFile;
+#setFile(Ljava/io/RandomAccessFile;)V
+#getUpstream()Lokio/Source;
+#setUpstream(Lokio/Source;)V
+#getUpstreamPos()J
+#setUpstreamPos(J)V
+#getBufferMaxSize()J
+#<init>(Ljava/io/RandomAccessFile;Lokio/Source;JLokio/ByteString;JLkotlin/jvm/internal/DefaultConstructorMarker;)V
+#access$writeHeader(Lokhttp3/internal/cache2/Relay;Lokio/ByteString;JJ)V
@5.0.0-alpha.4
-###okhttp3/internal/cache2/Relay

+###okhttp3/internal/http2/Header$Companion
@4.0.0-alpha01
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/Header$Companion

+###okhttp3/internal/http2/Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1
@4.0.0-alpha01
+#onStream(Lokhttp3/internal/http2/Http2Stream;)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1

+###okhttp3/internal/http2/Http2ExchangeCodec$Companion
@4.0.0-alpha01
+#http2HeadersList(Lokhttp3/Request;)Ljava/util/List;
+#readHttp2HeadersList(Lokhttp3/Headers;Lokhttp3/Protocol;)Lokhttp3/Response$Builder;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/Http2ExchangeCodec$Companion

+###okhttp3/internal/http2/Settings$Companion
@4.0.0-alpha01
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/Settings$Companion

+###okhttp3/internal/http2/Http2Connection$writeSynResetLater$$inlined$execute$1
@4.3.0
+#<init>(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;ILokhttp3/internal/http2/ErrorCode;)V
+#runOnce()J
@4.10.0
-###okhttp3/internal/http2/Http2Connection$writeSynResetLater$$inlined$execute$1

+###okhttp3/internal/http2/Http2Connection$pushHeadersLater$$inlined$execute$1
@4.3.0
+#<init>(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;ILjava/util/List;Z)V
+#runOnce()J
@4.10.0
-###okhttp3/internal/http2/Http2Connection$pushHeadersLater$$inlined$execute$1

+###okhttp3/internal/http2/Http2Connection$pushResetLater$$inlined$execute$1
@4.0.0-alpha01
+#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Connection;ILokhttp3/internal/http2/ErrorCode;)V
@4.0.0-alpha02
+#<init>(Ljava/lang/String;Lokhttp3/internal/http2/Http2Connection;ILokhttp3/internal/http2/ErrorCode;)V
+#run()V
-#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Connection;ILokhttp3/internal/http2/ErrorCode;)V
@4.3.0
+#<init>(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;ILokhttp3/internal/http2/ErrorCode;)V
+#runOnce()J
-#<init>(Ljava/lang/String;Lokhttp3/internal/http2/Http2Connection;ILokhttp3/internal/http2/ErrorCode;)V
-#run()V
@4.10.0
-###okhttp3/internal/http2/Http2Connection$pushResetLater$$inlined$execute$1

+###okhttp3/internal/http2/Http2Reader$ContinuationSource
@4.0.0-alpha01
+#getLength()I
+#setLength(I)V
+#getFlags()I
+#setFlags(I)V
+#getStreamId()I
+#setStreamId(I)V
+#getLeft()I
+#setLeft(I)V
+#getPadding()I
+#setPadding(I)V
+#read(Lokio/Buffer;J)J
+#timeout()Lokio/Timeout;
+#close()V
+#<init>(Lokio/BufferedSource;)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/Http2Reader$ContinuationSource

+###okhttp3/internal/http2/Http2Connection$ReaderRunnable$settings$$inlined$execute$1
@4.3.0
+#<init>(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection$ReaderRunnable;ZLokhttp3/internal/http2/Settings;)V
+#runOnce()J
@4.10.0
-###okhttp3/internal/http2/Http2Connection$ReaderRunnable$settings$$inlined$execute$1

+###okhttp3/internal/http2/Hpack
@4.0.0-alpha01
+#getSTATIC_HEADER_TABLE()[Lokhttp3/internal/http2/Header;
+#getNAME_TO_FIRST_INDEX()Ljava/util/Map;
+#checkLowercase(Lokio/ByteString;)Lokio/ByteString;
@5.0.0-alpha.4
-###okhttp3/internal/http2/Hpack

+###okhttp3/internal/http2/Http2Connection$sendDegradedPingLater$$inlined$execute$1
@4.3.0
+#<init>(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;)V
+#runOnce()J
@4.10.0
-###okhttp3/internal/http2/Http2Connection$sendDegradedPingLater$$inlined$execute$1

+###okhttp3/internal/http2/Http2Reader
@4.0.0-alpha01
+#readConnectionPreface(Lokhttp3/internal/http2/Http2Reader$Handler;)V
+#nextFrame(ZLokhttp3/internal/http2/Http2Reader$Handler;)Z
+#close()V
+#<init>(Lokio/BufferedSource;Z)V
+#access$getLogger$cp()Ljava/util/logging/Logger;
@5.0.0-alpha.4
-###okhttp3/internal/http2/Http2Reader

+###okhttp3/internal/http2/Http2Stream$FramingSource
@4.0.0-alpha01
+#getReceiveBuffer()Lokio/Buffer;
+#getReadBuffer()Lokio/Buffer;
+#getTrailers()Lokhttp3/Headers;
+#setTrailers(Lokhttp3/Headers;)V
+#getClosed$okhttp()Z
+#setClosed$okhttp(Z)V
+#read(Lokio/Buffer;J)J
+#receive$okhttp(Lokio/BufferedSource;J)V
+#timeout()Lokio/Timeout;
+#close()V
+#getFinished$okhttp()Z
+#setFinished$okhttp(Z)V
+#<init>(Lokhttp3/internal/http2/Http2Stream;JZ)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/Http2Stream$FramingSource

+###okhttp3/internal/http2/Http2Connection$ReaderRunnable
@4.0.0-alpha01
+#run()V
+#data(ZILokio/BufferedSource;I)V
+#headers(ZIILjava/util/List;)V
+#rstStream(ILokhttp3/internal/http2/ErrorCode;)V
+#settings(ZLokhttp3/internal/http2/Settings;)V
+#ackSettings()V
+#ping(ZII)V
+#goAway(ILokhttp3/internal/http2/ErrorCode;Lokio/ByteString;)V
+#windowUpdate(IJ)V
+#priority(IIIZ)V
+#pushPromise(IILjava/util/List;)V
+#alternateService(ILjava/lang/String;Lokio/ByteString;Ljava/lang/String;IJ)V
+#getReader$okhttp()Lokhttp3/internal/http2/Http2Reader;
+#<init>(Lokhttp3/internal/http2/Http2Connection;Lokhttp3/internal/http2/Http2Reader;)V
@4.2.0
+#applyAndAckSettings(ZLokhttp3/internal/http2/Settings;)V
@4.5.0-RC1
+#invoke()V
+#invoke()Ljava/lang/Object;
-#run()V
@5.0.0-alpha.4
-###okhttp3/internal/http2/Http2Connection$ReaderRunnable

+###okhttp3/internal/http2/Http2Writer$Companion
@4.0.0-alpha01
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/Http2Writer$Companion

+###okhttp3/internal/http2/Hpack$Reader
@4.0.0-alpha01
+#getNextHeaderIndex()I
+#setNextHeaderIndex(I)V
+#getAndResetHeaderList()Ljava/util/List;
+#maxDynamicTableByteCount()I
+#readHeaders()V
+#readInt(II)I
+#readByteString()Lokio/ByteString;
+#<init>(Lokio/Source;II)V
+#<init>(Lokio/Source;IIILkotlin/jvm/internal/DefaultConstructorMarker;)V
+#<init>(Lokio/Source;I)V
@4.0.0-alpha02
-#getNextHeaderIndex()I
-#setNextHeaderIndex(I)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/Hpack$Reader

+###okhttp3/internal/http2/Http2Connection$pushRequestLater$$inlined$execute$1
@4.3.0
+#<init>(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;ILjava/util/List;)V
+#runOnce()J
@4.10.0
-###okhttp3/internal/http2/Http2Connection$pushRequestLater$$inlined$execute$1

+###okhttp3/internal/http2/Http2Stream$StreamTimeout
@4.0.0-alpha01
+#exitAndThrowIfTimedOut()V
+#<init>(Lokhttp3/internal/http2/Http2Stream;)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/Http2Stream$StreamTimeout

+###okhttp3/internal/http2/Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1
@4.3.0
+#<init>(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection$ReaderRunnable;ZLkotlin/jvm/internal/Ref$ObjectRef;Lokhttp3/internal/http2/Settings;Lkotlin/jvm/internal/Ref$LongRef;Lkotlin/jvm/internal/Ref$ObjectRef;)V
+#runOnce()J
@4.9.0
+#<init>(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection$ReaderRunnable;Lkotlin/jvm/internal/Ref$ObjectRef;ZLokhttp3/internal/http2/Settings;Lkotlin/jvm/internal/Ref$LongRef;Lkotlin/jvm/internal/Ref$ObjectRef;)V
-#<init>(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection$ReaderRunnable;ZLkotlin/jvm/internal/Ref$ObjectRef;Lokhttp3/internal/http2/Settings;Lkotlin/jvm/internal/Ref$LongRef;Lkotlin/jvm/internal/Ref$ObjectRef;)V
@4.10.0
-###okhttp3/internal/http2/Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1

+###okhttp3/internal/http2/Huffman
@4.0.0-alpha01
+#encode(Lokio/ByteString;Lokio/BufferedSink;)V
+#encodedLength(Lokio/ByteString;)I
+#decode(Lokio/BufferedSource;JLokio/BufferedSink;)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/Huffman

+###okhttp3/internal/http2/Hpack$Writer
@4.0.0-alpha01
+#getNextHeaderIndex()I
+#setNextHeaderIndex(I)V
+#writeHeaders(Ljava/util/List;)V
+#writeInt(III)V
+#writeByteString(Lokio/ByteString;)V
+#resizeHeaderTable(I)V
+#<init>(IZLokio/Buffer;)V
+#<init>(IZLokio/Buffer;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
+#<init>(ILokio/Buffer;)V
+#<init>(Lokio/Buffer;)V
@4.0.0-alpha02
-#getNextHeaderIndex()I
-#setNextHeaderIndex(I)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/Hpack$Writer

+###okhttp3/internal/http2/Http2Connection$ReaderRunnable$ping$$inlined$execute$1
@4.3.0
+#<init>(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection$ReaderRunnable;II)V
+#runOnce()J
@4.10.0
-###okhttp3/internal/http2/Http2Connection$ReaderRunnable$ping$$inlined$execute$1

+###okhttp3/internal/http2/ErrorCode$Companion
@4.0.0-alpha01
+#fromHttp2(I)Lokhttp3/internal/http2/ErrorCode;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/ErrorCode$Companion

+###okhttp3/internal/http2/Http2Reader$Handler
@4.0.0-alpha01
+#data(ZILokio/BufferedSource;I)V
+#headers(ZIILjava/util/List;)V
+#rstStream(ILokhttp3/internal/http2/ErrorCode;)V
+#settings(ZLokhttp3/internal/http2/Settings;)V
+#ackSettings()V
+#ping(ZII)V
+#goAway(ILokhttp3/internal/http2/ErrorCode;Lokio/ByteString;)V
+#windowUpdate(IJ)V
+#priority(IIIZ)V
+#pushPromise(IILjava/util/List;)V
+#alternateService(ILjava/lang/String;Lokio/ByteString;Ljava/lang/String;IJ)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/Http2Reader$Handler

+###okhttp3/internal/http2/Http2Writer
@4.0.0-alpha01
+#getHpackWriter()Lokhttp3/internal/http2/Hpack$Writer;
+#connectionPreface()V
+#applyAndAckSettings(Lokhttp3/internal/http2/Settings;)V
+#pushPromise(IILjava/util/List;)V
+#flush()V
+#rstStream(ILokhttp3/internal/http2/ErrorCode;)V
+#maxDataLength()I
+#data(ZILokio/Buffer;I)V
+#dataFrame(IILokio/Buffer;I)V
+#settings(Lokhttp3/internal/http2/Settings;)V
+#ping(ZII)V
+#goAway(ILokhttp3/internal/http2/ErrorCode;[B)V
+#windowUpdate(IJ)V
+#frameHeader(IIII)V
+#close()V
+#headers(ZILjava/util/List;)V
+#<init>(Lokio/BufferedSink;Z)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/Http2Writer

+###okhttp3/internal/http2/Http2Stream$Companion
@4.0.0-alpha01
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/Http2Stream$Companion

+###okhttp3/internal/http2/Http2Reader$Companion
@4.0.0-alpha01
+#getLogger()Ljava/util/logging/Logger;
+#lengthWithoutPadding(III)I
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/Http2Reader$Companion

+###okhttp3/internal/http2/Http2Connection$Companion
@4.0.0-alpha01
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.3.0
+#getDEFAULT_SETTINGS()Lokhttp3/internal/http2/Settings;
@5.0.0-alpha.4
-###okhttp3/internal/http2/Http2Connection$Companion

+###okhttp3/internal/http2/Http2Connection$pushDataLater$$inlined$execute$1
@4.0.0-alpha01
+#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Connection;ILokio/Buffer;IZ)V
@4.0.0-alpha02
+#<init>(Ljava/lang/String;Lokhttp3/internal/http2/Http2Connection;ILokio/Buffer;IZ)V
+#run()V
-#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Connection;ILokio/Buffer;IZ)V
@4.3.0
+#<init>(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;ILokio/Buffer;IZ)V
+#runOnce()J
-#<init>(Ljava/lang/String;Lokhttp3/internal/http2/Http2Connection;ILokio/Buffer;IZ)V
-#run()V
@4.10.0
-###okhttp3/internal/http2/Http2Connection$pushDataLater$$inlined$execute$1

+###okhttp3/internal/http2/Http2ExchangeCodec
@3.14.0
+#<init>(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/RealConnection;Lokhttp3/Interceptor$Chain;Lokhttp3/internal/http2/Http2Connection;)V
+#connection()Lokhttp3/internal/connection/RealConnection;
+#createRequestBody(Lokhttp3/Request;J)Lokio/Sink;
+#writeRequestHeaders(Lokhttp3/Request;)V
+#flushRequest()V
+#finishRequest()V
+#readResponseHeaders(Z)Lokhttp3/Response$Builder;
+#http2HeadersList(Lokhttp3/Request;)Ljava/util/List;
+#readHttp2HeadersList(Lokhttp3/Headers;Lokhttp3/Protocol;)Lokhttp3/Response$Builder;
+#reportedContentLength(Lokhttp3/Response;)J
+#openResponseBodySource(Lokhttp3/Response;)Lokio/Source;
+#trailers()Lokhttp3/Headers;
+#cancel()V
@4.0.0-alpha01
+#access$getHTTP_2_SKIPPED_REQUEST_HEADERS$cp()Ljava/util/List;
+#access$getHTTP_2_SKIPPED_RESPONSE_HEADERS$cp()Ljava/util/List;
-#http2HeadersList(Lokhttp3/Request;)Ljava/util/List;
-#readHttp2HeadersList(Lokhttp3/Headers;Lokhttp3/Protocol;)Lokhttp3/Response$Builder;
@4.4.0
+#getConnection()Lokhttp3/internal/connection/RealConnection;
+#<init>(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/RealConnection;Lokhttp3/internal/http/RealInterceptorChain;Lokhttp3/internal/http2/Http2Connection;)V
-#connection()Lokhttp3/internal/connection/RealConnection;
-#<init>(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/RealConnection;Lokhttp3/Interceptor$Chain;Lokhttp3/internal/http2/Http2Connection;)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/Http2ExchangeCodec

+###okhttp3/internal/http2/Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1
@4.0.0-alpha01
+#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Stream;Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Lokhttp3/internal/http2/Http2Stream;ILjava/util/List;Z)V
@4.0.0-alpha02
+#<init>(Ljava/lang/String;Lokhttp3/internal/http2/Http2Stream;Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Lokhttp3/internal/http2/Http2Stream;ILjava/util/List;Z)V
+#run()V
-#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Stream;Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Lokhttp3/internal/http2/Http2Stream;ILjava/util/List;Z)V
@4.3.0
+#<init>(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Stream;Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Lokhttp3/internal/http2/Http2Stream;ILjava/util/List;Z)V
+#runOnce()J
-#<init>(Ljava/lang/String;Lokhttp3/internal/http2/Http2Stream;Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Lokhttp3/internal/http2/Http2Stream;ILjava/util/List;Z)V
-#run()V
@4.10.0
-###okhttp3/internal/http2/Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1

+###okhttp3/internal/http2/Http2Stream$FramingSink
@4.0.0-alpha01
+#getTrailers()Lokhttp3/Headers;
+#setTrailers(Lokhttp3/Headers;)V
+#getClosed()Z
+#setClosed(Z)V
+#write(Lokio/Buffer;J)V
+#flush()V
+#timeout()Lokio/Timeout;
+#close()V
+#getFinished()Z
+#setFinished(Z)V
+#<init>(Lokhttp3/internal/http2/Http2Stream;Z)V
+#<init>(Lokhttp3/internal/http2/Http2Stream;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/Http2Stream$FramingSink

+###okhttp3/internal/http2/Http2Connection$writeWindowUpdateLater$$inlined$execute$1
@4.3.0
+#<init>(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;IJ)V
+#runOnce()J
@4.10.0
-###okhttp3/internal/http2/Http2Connection$writeWindowUpdateLater$$inlined$execute$1

+###okhttp3/internal/http2/Http2Connection$Listener$Companion
@4.0.0-alpha01
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/Http2Connection$Listener$Companion

+###okhttp3/internal/http2/PushObserver$Companion
@4.0.0-alpha01
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.10.0
-#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.1
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.3
-#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/http2/PushObserver$Companion

+###okhttp3/internal/http2/Http2Connection$$special$$inlined$schedule$1
@4.3.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Lokhttp3/internal/http2/Http2Connection;J)V
+#runOnce()J
@4.10.0
-###okhttp3/internal/http2/Http2Connection$$special$$inlined$schedule$1

+###okhttp3/internal/HostnamesKt
@4.0.0-alpha02
+#toCanonicalHost(Ljava/lang/String;)Ljava/lang/String;
@5.0.0-alpha.4
-###okhttp3/internal/HostnamesKt

+###okhttp3/internal/tls/BasicCertificateChainCleaner$Companion
@4.0.0-alpha01
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/tls/BasicCertificateChainCleaner$Companion

+###okhttp3/internal/tls/CertificateChainCleaner$Companion
@4.0.0-alpha01
+#get(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;
+#get([Ljava/security/cert/X509Certificate;)Lokhttp3/internal/tls/CertificateChainCleaner;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/tls/CertificateChainCleaner$Companion

+###okhttp3/internal/http/ExchangeCodec$Companion
@4.0.0-alpha01
@5.0.0-alpha.4
-###okhttp3/internal/http/ExchangeCodec$Companion

+###okhttp3/internal/http/DatesKt$STANDARD_DATE_FORMAT$1
@4.0.0-RC1
+#initialValue()Ljava/lang/Object;
@5.0.0-alpha.4
-###okhttp3/internal/http/DatesKt$STANDARD_DATE_FORMAT$1

+###okhttp3/internal/http/RetryAndFollowUpInterceptor$Companion
@4.0.0-alpha01
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/http/RetryAndFollowUpInterceptor$Companion

+###okhttp3/internal/http/DatesKt
@4.0.0-RC1
+#toHttpDateOrNull(Ljava/lang/String;)Ljava/util/Date;
+#toHttpDateString(Ljava/util/Date;)Ljava/lang/String;
@5.0.0-alpha.4
-###okhttp3/internal/http/DatesKt

+###okhttp3/internal/http/StatusLine$Companion
@4.0.0-alpha01
+#get(Lokhttp3/Response;)Lokhttp3/internal/http/StatusLine;
+#parse(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/http/StatusLine$Companion

+###okhttp3/internal/http/ExchangeCodec
@3.14.0
+#connection()Lokhttp3/internal/connection/RealConnection;
+#createRequestBody(Lokhttp3/Request;J)Lokio/Sink;
+#writeRequestHeaders(Lokhttp3/Request;)V
+#flushRequest()V
+#finishRequest()V
+#readResponseHeaders(Z)Lokhttp3/Response$Builder;
+#reportedContentLength(Lokhttp3/Response;)J
+#openResponseBodySource(Lokhttp3/Response;)Lokio/Source;
+#trailers()Lokhttp3/Headers;
+#cancel()V
@4.4.0
+#getConnection()Lokhttp3/internal/connection/RealConnection;
-#connection()Lokhttp3/internal/connection/RealConnection;
@5.0.0-alpha.4
-###okhttp3/internal/http/ExchangeCodec

+###okhttp3/internal/concurrent/TaskRunner
@4.3.0
+#kickCoordinator$okhttp(Lokhttp3/internal/concurrent/TaskQueue;)V
+#awaitTaskToRun()Lokhttp3/internal/concurrent/Task;
+#newQueue()Lokhttp3/internal/concurrent/TaskQueue;
+#activeQueues()Ljava/util/List;
+#getBackend()Lokhttp3/internal/concurrent/TaskRunner$Backend;
+#<init>(Lokhttp3/internal/concurrent/TaskRunner$Backend;)V
+#access$runTask(Lokhttp3/internal/concurrent/TaskRunner;Lokhttp3/internal/concurrent/Task;)V
+#access$getLogger$cp()Ljava/util/logging/Logger;
@4.5.0
+#cancelAll()V
@5.0.0-alpha.3
+#<init>(Lokhttp3/internal/concurrent/TaskRunner$Backend;Ljava/util/logging/Logger;)V
+#<init>(Lokhttp3/internal/concurrent/TaskRunner$Backend;Ljava/util/logging/Logger;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
+#getLogger$okhttp()Ljava/util/logging/Logger;
-#<init>(Lokhttp3/internal/concurrent/TaskRunner$Backend;)V
@5.0.0-alpha.4
-###okhttp3/internal/concurrent/TaskRunner

+###okhttp3/internal/concurrent/TaskRunner$Companion
@4.3.0
+#getLogger()Ljava/util/logging/Logger;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/concurrent/TaskRunner$Companion

+###okhttp3/internal/concurrent/TaskRunner$RealBackend
@4.3.0
+#beforeTask(Lokhttp3/internal/concurrent/TaskRunner;)V
+#nanoTime()J
+#coordinatorNotify(Lokhttp3/internal/concurrent/TaskRunner;)V
+#coordinatorWait(Lokhttp3/internal/concurrent/TaskRunner;J)V
+#execute(Ljava/lang/Runnable;)V
+#shutdown()V
+#<init>(Ljava/util/concurrent/ThreadFactory;)V
@5.0.0-alpha.4
-###okhttp3/internal/concurrent/TaskRunner$RealBackend

+###okhttp3/internal/concurrent/TaskLoggerKt
@4.3.0
+#taskLog(Lokhttp3/internal/concurrent/Task;Lokhttp3/internal/concurrent/TaskQueue;Lkotlin/jvm/functions/Function0;)V
+#logElapsed(Lokhttp3/internal/concurrent/Task;Lokhttp3/internal/concurrent/TaskQueue;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
+#formatDuration(J)Ljava/lang/String;
+#access$log(Lokhttp3/internal/concurrent/Task;Lokhttp3/internal/concurrent/TaskQueue;Ljava/lang/String;)V
@5.0.0-alpha.3
+#taskLog(Ljava/util/logging/Logger;Lokhttp3/internal/concurrent/Task;Lokhttp3/internal/concurrent/TaskQueue;Lkotlin/jvm/functions/Function0;)V
+#logElapsed(Ljava/util/logging/Logger;Lokhttp3/internal/concurrent/Task;Lokhttp3/internal/concurrent/TaskQueue;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
+#access$log(Ljava/util/logging/Logger;Lokhttp3/internal/concurrent/Task;Lokhttp3/internal/concurrent/TaskQueue;Ljava/lang/String;)V
-#taskLog(Lokhttp3/internal/concurrent/Task;Lokhttp3/internal/concurrent/TaskQueue;Lkotlin/jvm/functions/Function0;)V
-#logElapsed(Lokhttp3/internal/concurrent/Task;Lokhttp3/internal/concurrent/TaskQueue;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
-#access$log(Lokhttp3/internal/concurrent/Task;Lokhttp3/internal/concurrent/TaskQueue;Ljava/lang/String;)V
@5.0.0-alpha.4
-###okhttp3/internal/concurrent/TaskLoggerKt

+###okhttp3/internal/concurrent/TaskRunner$Backend
@4.3.0
+#beforeTask(Lokhttp3/internal/concurrent/TaskRunner;)V
+#nanoTime()J
+#coordinatorNotify(Lokhttp3/internal/concurrent/TaskRunner;)V
+#coordinatorWait(Lokhttp3/internal/concurrent/TaskRunner;J)V
+#execute(Ljava/lang/Runnable;)V
@5.0.0-alpha.4
-###okhttp3/internal/concurrent/TaskRunner$Backend

+###okhttp3/internal/concurrent/Task
@4.3.0
+#getQueue$okhttp()Lokhttp3/internal/concurrent/TaskQueue;
+#setQueue$okhttp(Lokhttp3/internal/concurrent/TaskQueue;)V
+#getNextExecuteNanoTime$okhttp()J
+#setNextExecuteNanoTime$okhttp(J)V
+#runOnce()J
+#initQueue$okhttp(Lokhttp3/internal/concurrent/TaskQueue;)V
+#toString()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getCancelable()Z
+#<init>(Ljava/lang/String;Z)V
+#<init>(Ljava/lang/String;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/concurrent/Task

+###okhttp3/internal/concurrent/TaskQueue$execute$1
@4.3.0
+#runOnce()J
+#<init>(Lkotlin/jvm/functions/Function0;Ljava/lang/String;ZLjava/lang/String;Z)V
@4.10.0
+#<init>(Ljava/lang/String;ZLkotlin/jvm/functions/Function0;)V
-#<init>(Lkotlin/jvm/functions/Function0;Ljava/lang/String;ZLjava/lang/String;Z)V
@5.0.0-alpha.1
+#<init>(Lkotlin/jvm/functions/Function0;Ljava/lang/String;ZLjava/lang/String;Z)V
-#<init>(Ljava/lang/String;ZLkotlin/jvm/functions/Function0;)V
@5.0.0-alpha.3
-#<init>(Lkotlin/jvm/functions/Function0;Ljava/lang/String;ZLjava/lang/String;Z)V
@5.0.0-alpha.4
-###okhttp3/internal/concurrent/TaskQueue$execute$1

+###okhttp3/internal/concurrent/TaskRunner$runnable$1
@4.3.0
+#run()V
@5.0.0-alpha.4
-###okhttp3/internal/concurrent/TaskRunner$runnable$1

+###okhttp3/internal/concurrent/TaskQueue$schedule$2
@4.3.0
+#runOnce()J
+#<init>(Lkotlin/jvm/functions/Function0;Ljava/lang/String;Ljava/lang/String;)V
@4.10.0
+#<init>(Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
-#<init>(Lkotlin/jvm/functions/Function0;Ljava/lang/String;Ljava/lang/String;)V
@5.0.0-alpha.1
+#<init>(Lkotlin/jvm/functions/Function0;Ljava/lang/String;Ljava/lang/String;)V
-#<init>(Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
@5.0.0-alpha.3
-#<init>(Lkotlin/jvm/functions/Function0;Ljava/lang/String;Ljava/lang/String;)V
@5.0.0-alpha.4
-###okhttp3/internal/concurrent/TaskQueue$schedule$2

+###okhttp3/internal/concurrent/TaskQueue
@4.3.0
+#getShutdown$okhttp()Z
+#setShutdown$okhttp(Z)V
+#getActiveTask$okhttp()Lokhttp3/internal/concurrent/Task;
+#setActiveTask$okhttp(Lokhttp3/internal/concurrent/Task;)V
+#getFutureTasks$okhttp()Ljava/util/List;
+#getCancelActiveTask$okhttp()Z
+#setCancelActiveTask$okhttp(Z)V
+#getScheduledTasks()Ljava/util/List;
+#schedule(Lokhttp3/internal/concurrent/Task;J)V
+#schedule$default(Lokhttp3/internal/concurrent/TaskQueue;Lokhttp3/internal/concurrent/Task;JILjava/lang/Object;)V
+#schedule(Ljava/lang/String;JLkotlin/jvm/functions/Function0;)V
+#schedule$default(Lokhttp3/internal/concurrent/TaskQueue;Ljava/lang/String;JLkotlin/jvm/functions/Function0;ILjava/lang/Object;)V
+#execute(Ljava/lang/String;JZLkotlin/jvm/functions/Function0;)V
+#execute$default(Lokhttp3/internal/concurrent/TaskQueue;Ljava/lang/String;JZLkotlin/jvm/functions/Function0;ILjava/lang/Object;)V
+#idleLatch()Ljava/util/concurrent/CountDownLatch;
+#scheduleAndDecide$okhttp(Lokhttp3/internal/concurrent/Task;JZ)Z
+#cancelAll()V
+#shutdown()V
+#cancelAllAndDecide$okhttp()Z
+#toString()Ljava/lang/String;
+#getTaskRunner$okhttp()Lokhttp3/internal/concurrent/TaskRunner;
+#getName$okhttp()Ljava/lang/String;
+#<init>(Lokhttp3/internal/concurrent/TaskRunner;Ljava/lang/String;)V
@5.0.0-alpha.4
-###okhttp3/internal/concurrent/TaskQueue

+###okhttp3/internal/publicsuffix/PublicSuffixDatabase$Companion
@4.0.0-alpha02
+#get()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;
+#access$binarySearch(Lokhttp3/internal/publicsuffix/PublicSuffixDatabase$Companion;[B[[BI)Ljava/lang/String;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/publicsuffix/PublicSuffixDatabase$Companion

+###okhttp3/internal/ws/RealWebSocket$Close
@4.0.0-alpha02
+#getCode()I
+#getReason()Lokio/ByteString;
+#getCancelAfterCloseMillis()J
+#<init>(ILokio/ByteString;J)V
@5.0.0-alpha.4
-###okhttp3/internal/ws/RealWebSocket$Close

+###okhttp3/internal/ws/WebSocketWriter
@4.0.0-alpha02
+#getBuffer()Lokio/Buffer;
+#getActiveWriter()Z
+#setActiveWriter(Z)V
+#writePing(Lokio/ByteString;)V
+#writePong(Lokio/ByteString;)V
+#writeClose(ILokio/ByteString;)V
+#newMessageSink(IJ)Lokio/Sink;
+#writeMessageFrame(IJZZ)V
+#getSink()Lokio/BufferedSink;
+#getRandom()Ljava/util/Random;
+#<init>(ZLokio/BufferedSink;Ljava/util/Random;)V
@4.5.0-RC1
+#writeMessageFrame(ILokio/ByteString;)V
+#close()V
+#<init>(ZLokio/BufferedSink;Ljava/util/Random;Lokhttp3/internal/ws/MessageDeflater;J)V
-#getBuffer()Lokio/Buffer;
-#getActiveWriter()Z
-#setActiveWriter(Z)V
-#newMessageSink(IJ)Lokio/Sink;
-#writeMessageFrame(IJZZ)V
-#<init>(ZLokio/BufferedSink;Ljava/util/Random;)V
@4.5.0
+#<init>(ZLokio/BufferedSink;Ljava/util/Random;ZZJ)V
-#<init>(ZLokio/BufferedSink;Ljava/util/Random;Lokhttp3/internal/ws/MessageDeflater;J)V
@5.0.0-alpha.4
-###okhttp3/internal/ws/WebSocketWriter

+###okhttp3/internal/ws/RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1
@4.3.0
+#<init>(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/ws/RealWebSocket;Lokhttp3/internal/ws/WebSocketWriter;Lokio/ByteString;Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlin/jvm/internal/Ref$IntRef;Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlin/jvm/internal/Ref$ObjectRef;)V
+#runOnce()J
@4.5.0-RC1
+#<init>(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/ws/RealWebSocket;Lokhttp3/internal/ws/WebSocketWriter;Lokio/ByteString;Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlin/jvm/internal/Ref$IntRef;Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlin/jvm/internal/Ref$ObjectRef;)V
-#<init>(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/ws/RealWebSocket;Lokhttp3/internal/ws/WebSocketWriter;Lokio/ByteString;Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlin/jvm/internal/Ref$IntRef;Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlin/jvm/internal/Ref$ObjectRef;)V
@4.10.0
-###okhttp3/internal/ws/RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1

+###okhttp3/internal/ws/RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1
@4.3.0
+#<init>(Ljava/lang/String;Ljava/lang/String;JLokhttp3/internal/ws/RealWebSocket;Ljava/lang/String;Lokhttp3/internal/ws/RealWebSocket$Streams;)V
+#runOnce()J
@4.5.0-RC1
+#<init>(Ljava/lang/String;Ljava/lang/String;JLokhttp3/internal/ws/RealWebSocket;Ljava/lang/String;Lokhttp3/internal/ws/RealWebSocket$Streams;Lokhttp3/internal/ws/WebSocketExtensions;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;JLokhttp3/internal/ws/RealWebSocket;Ljava/lang/String;Lokhttp3/internal/ws/RealWebSocket$Streams;)V
@4.10.0
-###okhttp3/internal/ws/RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1

+###okhttp3/internal/ws/RealWebSocket$Companion
@4.0.0-alpha02
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/ws/RealWebSocket$Companion

+###okhttp3/internal/ws/RealWebSocket$connect$1
@4.0.0-alpha02
+#onResponse(Lokhttp3/Call;Lokhttp3/Response;)V
+#onFailure(Lokhttp3/Call;Ljava/io/IOException;)V
@5.0.0-alpha.4
-###okhttp3/internal/ws/RealWebSocket$connect$1

+###okhttp3/internal/ws/RealWebSocket$Message
@4.0.0-alpha02
+#getFormatOpcode()I
+#getData()Lokio/ByteString;
+#<init>(ILokio/ByteString;)V
@5.0.0-alpha.4
-###okhttp3/internal/ws/RealWebSocket$Message

+###okhttp3/internal/ws/WebSocketWriter$FrameSink
@4.0.0-alpha02
+#getFormatOpcode()I
+#setFormatOpcode(I)V
+#getContentLength()J
+#setContentLength(J)V
+#isFirstFrame()Z
+#setFirstFrame(Z)V
+#getClosed()Z
+#setClosed(Z)V
+#write(Lokio/Buffer;J)V
+#flush()V
+#timeout()Lokio/Timeout;
+#close()V
+#<init>(Lokhttp3/internal/ws/WebSocketWriter;)V
@4.5.0-RC1
-###okhttp3/internal/ws/WebSocketWriter$FrameSink

+###okhttp3/internal/ws/WebSocketReader
@4.0.0-alpha02
+#getClosed()Z
+#setClosed(Z)V
+#processNextFrame()V
+#getSource()Lokio/BufferedSource;
+#<init>(ZLokio/BufferedSource;Lokhttp3/internal/ws/WebSocketReader$FrameCallback;)V
@4.5.0-RC1
+#close()V
+#<init>(ZLokio/BufferedSource;Lokhttp3/internal/ws/WebSocketReader$FrameCallback;Lokhttp3/internal/ws/MessageInflater;)V
-#getClosed()Z
-#setClosed(Z)V
-#<init>(ZLokio/BufferedSource;Lokhttp3/internal/ws/WebSocketReader$FrameCallback;)V
@4.5.0
+#<init>(ZLokio/BufferedSource;Lokhttp3/internal/ws/WebSocketReader$FrameCallback;ZZ)V
-#<init>(ZLokio/BufferedSource;Lokhttp3/internal/ws/WebSocketReader$FrameCallback;Lokhttp3/internal/ws/MessageInflater;)V
@5.0.0-alpha.4
-###okhttp3/internal/ws/WebSocketReader

+###okhttp3/ResponseBody$BomAwareReader
@4.0.0-alpha01
+#read([CII)I
+#close()V
+#<init>(Lokio/BufferedSource;Ljava/nio/charset/Charset;)V
@5.0.0-alpha.4
-###okhttp3/ResponseBody$BomAwareReader

+###okhttp3/CookieJar$Companion
@4.0.0-alpha01
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.10.0
-#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.1
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.3
-#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/CookieJar$Companion

+###okhttp3/HttpUrl$Companion
@4.0.0-alpha01
+#defaultPort(Ljava/lang/String;)I
+#pathSegmentsToString$okhttp(Ljava/lang/StringBuilder;Ljava/util/List;)V
+#namesAndValuesToQueryString$okhttp(Ljava/lang/StringBuilder;Ljava/util/List;)V
+#queryStringToNamesAndValues$okhttp(Ljava/lang/String;)Ljava/util/List;
+#parse(Ljava/lang/String;)Lokhttp3/HttpUrl;
+#get(Ljava/lang/String;)Lokhttp3/HttpUrl;
+#get(Ljava/net/URL;)Lokhttp3/HttpUrl;
+#get(Ljava/net/URI;)Lokhttp3/HttpUrl;
+#percentDecode$okhttp(Ljava/lang/String;Z)Ljava/lang/String;
+#percentDecode$okhttp(Ljava/lang/String;IIZ)Ljava/lang/String;
+#percentDecode$okhttp(Lokio/Buffer;Ljava/lang/String;IIZ)V
+#percentEncoded$okhttp(Ljava/lang/String;II)Z
+#canonicalize$okhttp(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;
+#canonicalize$okhttp(Lokio/Buffer;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V
+#canonicalize$okhttp(Ljava/lang/String;Ljava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;
+#canonicalize$okhttp(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.0.0-alpha02
+#toPathString$okhttp(Ljava/util/List;Ljava/lang/StringBuilder;)V
+#toQueryString$okhttp(Ljava/util/List;Ljava/lang/StringBuilder;)V
+#toQueryNamesAndValues$okhttp(Ljava/lang/String;)Ljava/util/List;
+#-deprecated_get(Ljava/lang/String;)Lokhttp3/HttpUrl;
+#-deprecated_parse(Ljava/lang/String;)Lokhttp3/HttpUrl;
+#-deprecated_get(Ljava/net/URL;)Lokhttp3/HttpUrl;
+#-deprecated_get(Ljava/net/URI;)Lokhttp3/HttpUrl;
+#percentDecode$okhttp$default(Lokhttp3/HttpUrl$Companion;Ljava/lang/String;IIZILjava/lang/Object;)Ljava/lang/String;
+#canonicalize$okhttp$default(Lokhttp3/HttpUrl$Companion;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;ILjava/lang/Object;)Ljava/lang/String;
+#access$percentDecode(Lokhttp3/HttpUrl$Companion;Ljava/util/List;Z)Ljava/util/List;
-#pathSegmentsToString$okhttp(Ljava/lang/StringBuilder;Ljava/util/List;)V
-#namesAndValuesToQueryString$okhttp(Ljava/lang/StringBuilder;Ljava/util/List;)V
-#queryStringToNamesAndValues$okhttp(Ljava/lang/String;)Ljava/util/List;
-#percentDecode$okhttp(Ljava/lang/String;Z)Ljava/lang/String;
-#percentDecode$okhttp(Lokio/Buffer;Ljava/lang/String;IIZ)V
-#percentEncoded$okhttp(Ljava/lang/String;II)Z
-#canonicalize$okhttp(Lokio/Buffer;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V
-#canonicalize$okhttp(Ljava/lang/String;Ljava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;
-#canonicalize$okhttp(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;
@4.6.0
-#access$percentDecode(Lokhttp3/HttpUrl$Companion;Ljava/util/List;Z)Ljava/util/List;
@5.0.0-alpha.4
-###okhttp3/HttpUrl$Companion

+###okhttp3/Cookie$Companion
@4.0.0-alpha01
+#parse(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/Cookie;
+#parse$okhttp(JLokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/Cookie;
+#parseAll(Lokhttp3/HttpUrl;Lokhttp3/Headers;)Ljava/util/List;
+#access$domainMatch(Lokhttp3/Cookie$Companion;Ljava/lang/String;Ljava/lang/String;)Z
+#access$pathMatch(Lokhttp3/Cookie$Companion;Lokhttp3/HttpUrl;Ljava/lang/String;)Z
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/Cookie$Companion

+###okhttp3/MultipartBody$Part$Companion
@4.0.0-alpha01
+#create(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;
+#create(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;
+#createFormData(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Part;
+#createFormData(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/MultipartBody$Part$Companion

+###okhttp3/MediaType$Companion
@4.0.0-alpha01
+#get(Ljava/lang/String;)Lokhttp3/MediaType;
+#parse(Ljava/lang/String;)Lokhttp3/MediaType;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.0.0-RC1
+#-deprecated_get(Ljava/lang/String;)Lokhttp3/MediaType;
+#-deprecated_parse(Ljava/lang/String;)Lokhttp3/MediaType;
@5.0.0-alpha.4
-###okhttp3/MediaType$Companion

+###okhttp3/Handshake$Companion
@4.0.0-alpha01
+#get(Ljavax/net/ssl/SSLSession;)Lokhttp3/Handshake;
+#get(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Ljava/util/List;)Lokhttp3/Handshake;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.0.0-alpha02
+#-deprecated_get(Ljavax/net/ssl/SSLSession;)Lokhttp3/Handshake;
@5.0.0-alpha.4
-###okhttp3/Handshake$Companion

+###okhttp3/Cache$RealCacheRequest$1
@4.0.0-alpha01
+#close()V
@5.0.0-alpha.4
-###okhttp3/Cache$RealCacheRequest$1

+###okhttp3/Cache$Entry$Companion
@4.0.0-alpha01
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/Cache$Entry$Companion

+###okhttp3/RequestBody$Companion$toRequestBody$1
@4.0.0-alpha02
+#contentType()Lokhttp3/MediaType;
+#contentLength()J
+#writeTo(Lokio/BufferedSink;)V
@5.0.0-alpha.4
-###okhttp3/RequestBody$Companion$toRequestBody$1

+###okhttp3/CacheControl$Companion
@4.0.0-alpha01
+#parse(Lokhttp3/Headers;)Lokhttp3/CacheControl;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/CacheControl$Companion

+###okhttp3/Interceptor$Companion
@4.0.0-alpha01
+#-deprecated_Interceptor(Lkotlin/jvm/functions/Function1;)Lokhttp3/Interceptor;
@4.0.0-RC1
+#invoke(Lkotlin/jvm/functions/Function1;)Lokhttp3/Interceptor;
-#-deprecated_Interceptor(Lkotlin/jvm/functions/Function1;)Lokhttp3/Interceptor;
@5.0.0-alpha.4
-###okhttp3/Interceptor$Companion

+###okhttp3/RequestBody$Companion
@4.0.0-alpha01
+#create(Lokhttp3/MediaType;Ljava/lang/String;)Lokhttp3/RequestBody;
+#create(Lokhttp3/MediaType;Lokio/ByteString;)Lokhttp3/RequestBody;
+#create(Lokhttp3/MediaType;[BII)Lokhttp3/RequestBody;
+#create$default(Lokhttp3/RequestBody$Companion;Lokhttp3/MediaType;[BIIILjava/lang/Object;)Lokhttp3/RequestBody;
+#create(Lokhttp3/MediaType;[BI)Lokhttp3/RequestBody;
+#create(Lokhttp3/MediaType;[B)Lokhttp3/RequestBody;
+#create(Lokhttp3/MediaType;Ljava/io/File;)Lokhttp3/RequestBody;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.0.0-alpha02
+#create(Ljava/lang/String;Lokhttp3/MediaType;)Lokhttp3/RequestBody;
+#create$default(Lokhttp3/RequestBody$Companion;Ljava/lang/String;Lokhttp3/MediaType;ILjava/lang/Object;)Lokhttp3/RequestBody;
+#create(Lokio/ByteString;Lokhttp3/MediaType;)Lokhttp3/RequestBody;
+#create$default(Lokhttp3/RequestBody$Companion;Lokio/ByteString;Lokhttp3/MediaType;ILjava/lang/Object;)Lokhttp3/RequestBody;
+#create([BLokhttp3/MediaType;II)Lokhttp3/RequestBody;
+#create$default(Lokhttp3/RequestBody$Companion;[BLokhttp3/MediaType;IIILjava/lang/Object;)Lokhttp3/RequestBody;
+#create([BLokhttp3/MediaType;I)Lokhttp3/RequestBody;
+#create([BLokhttp3/MediaType;)Lokhttp3/RequestBody;
+#create([B)Lokhttp3/RequestBody;
+#create(Ljava/io/File;Lokhttp3/MediaType;)Lokhttp3/RequestBody;
+#create$default(Lokhttp3/RequestBody$Companion;Ljava/io/File;Lokhttp3/MediaType;ILjava/lang/Object;)Lokhttp3/RequestBody;
@5.0.0-alpha.3
+#create(Ljava/io/FileDescriptor;Lokhttp3/MediaType;)Lokhttp3/RequestBody;
+#create$default(Lokhttp3/RequestBody$Companion;Ljava/io/FileDescriptor;Lokhttp3/MediaType;ILjava/lang/Object;)Lokhttp3/RequestBody;
@5.0.0-alpha.4
-###okhttp3/RequestBody$Companion

+###okhttp3/Cache$Companion
@4.0.0-alpha01
+#key(Lokhttp3/HttpUrl;)Ljava/lang/String;
+#readInt$okhttp(Lokio/BufferedSource;)I
+#varyMatches(Lokhttp3/Response;Lokhttp3/Headers;Lokhttp3/Request;)Z
+#hasVaryAll(Lokhttp3/Response;)Z
+#varyHeaders(Lokhttp3/Response;)Lokhttp3/Headers;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/Cache$Companion

+###okhttp3/EventListener$Companion
@4.0.0-alpha01
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/EventListener$Companion

+###okhttp3/Cache$CacheResponseBody$1
@4.0.0-alpha01
+#close()V
@5.0.0-alpha.4
-###okhttp3/Cache$CacheResponseBody$1

+###okhttp3/OkHttpClient$Builder$addInterceptor$$inlined$invoke$1
@4.0.0-RC1
+#<init>(Lkotlin/jvm/functions/Function1;)V
+#intercept(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;
@4.9.0
-###okhttp3/OkHttpClient$Builder$addInterceptor$$inlined$invoke$1

+###okhttp3/CipherSuite$Companion
@4.0.0-alpha01
+#getORDER_BY_NAME$okhttp()Ljava/util/Comparator;
+#forJavaName(Ljava/lang/String;)Lokhttp3/CipherSuite;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
+#access$init(Lokhttp3/CipherSuite$Companion;Ljava/lang/String;I)Lokhttp3/CipherSuite;
@5.0.0-alpha.4
-###okhttp3/CipherSuite$Companion

+###okhttp3/OkHttpClient$Builder$addNetworkInterceptor$$inlined$invoke$1
@4.0.0-RC1
+#<init>(Lkotlin/jvm/functions/Function1;)V
+#intercept(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;
@4.9.0
-###okhttp3/OkHttpClient$Builder$addNetworkInterceptor$$inlined$invoke$1

+###okhttp3/Cache$urls$1
@4.0.0-alpha01
+#getDelegate()Ljava/util/Iterator;
+#getNextUrl()Ljava/lang/String;
+#setNextUrl(Ljava/lang/String;)V
+#getCanRemove()Z
+#setCanRemove(Z)V
+#hasNext()Z
+#next()Ljava/lang/String;
+#next()Ljava/lang/Object;
+#remove()V
@4.8.0
-#getDelegate()Ljava/util/Iterator;
-#getNextUrl()Ljava/lang/String;
-#setNextUrl(Ljava/lang/String;)V
-#getCanRemove()Z
-#setCanRemove(Z)V
@5.0.0-alpha.4
-###okhttp3/Cache$urls$1

+###okhttp3/RequestBody$Companion$asRequestBody$1
@4.0.0-RC2
+#contentType()Lokhttp3/MediaType;
+#contentLength()J
+#writeTo(Lokio/BufferedSink;)V
@5.0.0-alpha.4
-###okhttp3/RequestBody$Companion$asRequestBody$1

+###okhttp3/TlsVersion$Companion
@4.0.0-alpha01
+#forJavaName(Ljava/lang/String;)Lokhttp3/TlsVersion;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/TlsVersion$Companion

+###okhttp3/CertificatePinner$Companion
@4.0.0-alpha01
+#pin(Ljava/security/cert/Certificate;)Ljava/lang/String;
+#sha1$okhttp(Ljava/security/cert/X509Certificate;)Lokio/ByteString;
+#sha256$okhttp(Ljava/security/cert/X509Certificate;)Lokio/ByteString;
+#newPin$okhttp(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/CertificatePinner$Pin;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.0.0-alpha02
+#toSha1ByteString$okhttp(Ljava/security/cert/X509Certificate;)Lokio/ByteString;
+#toSha256ByteString$okhttp(Ljava/security/cert/X509Certificate;)Lokio/ByteString;
-#sha1$okhttp(Ljava/security/cert/X509Certificate;)Lokio/ByteString;
-#sha256$okhttp(Ljava/security/cert/X509Certificate;)Lokio/ByteString;
@4.6.0
+#sha1Hash(Ljava/security/cert/X509Certificate;)Lokio/ByteString;
+#sha256Hash(Ljava/security/cert/X509Certificate;)Lokio/ByteString;
-#toSha1ByteString$okhttp(Ljava/security/cert/X509Certificate;)Lokio/ByteString;
-#toSha256ByteString$okhttp(Ljava/security/cert/X509Certificate;)Lokio/ByteString;
-#newPin$okhttp(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/CertificatePinner$Pin;
@5.0.0-alpha.4
-###okhttp3/CertificatePinner$Companion

+###okhttp3/Protocol$Companion
@4.0.0-alpha01
+#get(Ljava/lang/String;)Lokhttp3/Protocol;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/Protocol$Companion

+###okhttp3/CipherSuite$Companion$ORDER_BY_NAME$1
@4.0.0-alpha01
+#compare(Ljava/lang/String;Ljava/lang/String;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@5.0.0-alpha.4
-###okhttp3/CipherSuite$Companion$ORDER_BY_NAME$1

+###okhttp3/RequestBody$Companion$toRequestBody$2
@4.0.0-alpha02
+#contentType()Lokhttp3/MediaType;
+#contentLength()J
+#writeTo(Lokio/BufferedSink;)V
@5.0.0-alpha.3
+#isOneShot()Z
-#contentLength()J
@5.0.0-alpha.4
-###okhttp3/RequestBody$Companion$toRequestBody$2

+###okhttp3/internal/ConnectionSpecSelector
@3.0.0-RC1
+#<init>(Ljava/util/List;)V
+#configureSecureSocket(Ljavax/net/ssl/SSLSocket;)Lokhttp3/ConnectionSpec;
+#connectionFailed(Ljava/io/IOException;)Z
@3.4.0-RC1
-###okhttp3/internal/ConnectionSpecSelector

+###okhttp3/internal/DiskLruCache$Editor
@3.0.0-RC1
+#newSource(I)Lokio/Source;
+#newSink(I)Lokio/Sink;
+#commit()V
+#abort()V
+#abortUnlessCommitted()V
@3.4.0-RC1
-###okhttp3/internal/DiskLruCache$Editor

+###okhttp3/internal/DiskLruCache$Snapshot
@3.0.0-RC1
+#key()Ljava/lang/String;
+#edit()Lokhttp3/internal/DiskLruCache$Editor;
+#getSource(I)Lokio/Source;
+#getLength(I)J
+#close()V
@3.4.0-RC1
-###okhttp3/internal/DiskLruCache$Snapshot

+###okhttp3/internal/DiskLruCache
@3.0.0-RC1
+#initialize()V
+#create(Lokhttp3/internal/io/FileSystem;Ljava/io/File;IIJ)Lokhttp3/internal/DiskLruCache;
+#get(Ljava/lang/String;)Lokhttp3/internal/DiskLruCache$Snapshot;
+#edit(Ljava/lang/String;)Lokhttp3/internal/DiskLruCache$Editor;
+#getDirectory()Ljava/io/File;
+#getMaxSize()J
+#setMaxSize(J)V
+#size()J
+#remove(Ljava/lang/String;)Z
+#isClosed()Z
+#flush()V
+#close()V
+#delete()V
+#evictAll()V
+#snapshots()Ljava/util/Iterator;
@3.4.0-RC1
-###okhttp3/internal/DiskLruCache

+###okhttp3/internal/framed/ErrorCode
@3.0.0-RC1
+#values()[Lokhttp3/internal/framed/ErrorCode;
+#valueOf(Ljava/lang/String;)Lokhttp3/internal/framed/ErrorCode;
+#fromSpdy3Rst(I)Lokhttp3/internal/framed/ErrorCode;
+#fromHttp2(I)Lokhttp3/internal/framed/ErrorCode;
+#fromSpdyGoAway(I)Lokhttp3/internal/framed/ErrorCode;
@3.5.0
-###okhttp3/internal/framed/ErrorCode

+###okhttp3/internal/framed/FramedConnection$Builder
@3.0.0-RC1
+#<init>(Z)V
+#socket(Ljava/net/Socket;)Lokhttp3/internal/framed/FramedConnection$Builder;
+#socket(Ljava/net/Socket;Ljava/lang/String;Lokio/BufferedSource;Lokio/BufferedSink;)Lokhttp3/internal/framed/FramedConnection$Builder;
+#listener(Lokhttp3/internal/framed/FramedConnection$Listener;)Lokhttp3/internal/framed/FramedConnection$Builder;
+#protocol(Lokhttp3/Protocol;)Lokhttp3/internal/framed/FramedConnection$Builder;
+#pushObserver(Lokhttp3/internal/framed/PushObserver;)Lokhttp3/internal/framed/FramedConnection$Builder;
+#build()Lokhttp3/internal/framed/FramedConnection;
@3.5.0
-###okhttp3/internal/framed/FramedConnection$Builder

+###okhttp3/internal/framed/FramedConnection$Listener
@3.0.0-RC1
+#<init>()V
+#onStream(Lokhttp3/internal/framed/FramedStream;)V
+#onSettings(Lokhttp3/internal/framed/FramedConnection;)V
@3.5.0
-###okhttp3/internal/framed/FramedConnection$Listener

+###okhttp3/internal/framed/FramedConnection
@3.0.0-RC1
+#getProtocol()Lokhttp3/Protocol;
+#openStreamCount()I
+#isIdle()Z
+#maxConcurrentStreams()I
+#getIdleStartTimeNs()J
+#pushStream(ILjava/util/List;Z)Lokhttp3/internal/framed/FramedStream;
+#newStream(Ljava/util/List;ZZ)Lokhttp3/internal/framed/FramedStream;
+#writeData(IZLokio/Buffer;J)V
+#ping()Lokhttp3/internal/framed/Ping;
+#flush()V
+#shutdown(Lokhttp3/internal/framed/ErrorCode;)V
+#close()V
+#sendConnectionPreface()V
+#setSettings(Lokhttp3/internal/framed/Settings;)V
@3.3.0
+#start()V
-#sendConnectionPreface()V
@3.4.0-RC1
-#isIdle()Z
-#getIdleStartTimeNs()J
@3.4.2
+#isShutdown()Z
@3.5.0
-###okhttp3/internal/framed/FramedConnection

+###okhttp3/internal/framed/FramedStream
@3.0.0-RC1
+#getId()I
+#isOpen()Z
+#isLocallyInitiated()Z
+#getConnection()Lokhttp3/internal/framed/FramedConnection;
+#getRequestHeaders()Ljava/util/List;
+#getResponseHeaders()Ljava/util/List;
+#getErrorCode()Lokhttp3/internal/framed/ErrorCode;
+#reply(Ljava/util/List;Z)V
+#readTimeout()Lokio/Timeout;
+#writeTimeout()Lokio/Timeout;
+#getSource()Lokio/Source;
+#getSink()Lokio/Sink;
+#close(Lokhttp3/internal/framed/ErrorCode;)V
+#closeLater(Lokhttp3/internal/framed/ErrorCode;)V
@3.5.0
-###okhttp3/internal/framed/FramedStream

+###okhttp3/internal/framed/FrameReader$Handler
@3.0.0-RC1
+#data(ZILokio/BufferedSource;I)V
+#headers(ZZIILjava/util/List;Lokhttp3/internal/framed/HeadersMode;)V
+#rstStream(ILokhttp3/internal/framed/ErrorCode;)V
+#settings(ZLokhttp3/internal/framed/Settings;)V
+#ackSettings()V
+#ping(ZII)V
+#goAway(ILokhttp3/internal/framed/ErrorCode;Lokio/ByteString;)V
+#windowUpdate(IJ)V
+#priority(IIIZ)V
+#pushPromise(IILjava/util/List;)V
+#alternateService(ILjava/lang/String;Lokio/ByteString;Ljava/lang/String;IJ)V
@3.5.0
-###okhttp3/internal/framed/FrameReader$Handler

+###okhttp3/internal/framed/FrameReader
@3.0.0-RC1
+#readConnectionPreface()V
+#nextFrame(Lokhttp3/internal/framed/FrameReader$Handler;)Z
@3.5.0
-###okhttp3/internal/framed/FrameReader

+###okhttp3/internal/framed/FrameWriter
@3.0.0-RC1
+#connectionPreface()V
+#ackSettings(Lokhttp3/internal/framed/Settings;)V
+#pushPromise(IILjava/util/List;)V
+#flush()V
+#synStream(ZZIILjava/util/List;)V
+#synReply(ZILjava/util/List;)V
+#headers(ILjava/util/List;)V
+#rstStream(ILokhttp3/internal/framed/ErrorCode;)V
+#maxDataLength()I
+#data(ZILokio/Buffer;I)V
+#settings(Lokhttp3/internal/framed/Settings;)V
+#ping(ZII)V
+#goAway(ILokhttp3/internal/framed/ErrorCode;[B)V
+#windowUpdate(IJ)V
@3.4.0
+#applyAndAckSettings(Lokhttp3/internal/framed/Settings;)V
-#ackSettings(Lokhttp3/internal/framed/Settings;)V
@3.5.0
-###okhttp3/internal/framed/FrameWriter

+###okhttp3/internal/framed/Header
@3.0.0-RC1
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Lokio/ByteString;Ljava/lang/String;)V
+#<init>(Lokio/ByteString;Lokio/ByteString;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.5.0
-###okhttp3/internal/framed/Header

+###okhttp3/internal/framed/HeadersMode
@3.0.0-RC1
+#values()[Lokhttp3/internal/framed/HeadersMode;
+#valueOf(Ljava/lang/String;)Lokhttp3/internal/framed/HeadersMode;
+#failIfStreamAbsent()Z
+#failIfStreamPresent()Z
+#failIfHeadersAbsent()Z
+#failIfHeadersPresent()Z
@3.5.0
-###okhttp3/internal/framed/HeadersMode

+###okhttp3/internal/framed/Http2
@3.0.0-RC1
+#<init>()V
+#getProtocol()Lokhttp3/Protocol;
+#newReader(Lokio/BufferedSource;Z)Lokhttp3/internal/framed/FrameReader;
+#newWriter(Lokio/BufferedSink;Z)Lokhttp3/internal/framed/FrameWriter;
@3.5.0
-###okhttp3/internal/framed/Http2

+###okhttp3/internal/framed/Ping
@3.0.0-RC1
+#roundTripTime()J
+#roundTripTime(JLjava/util/concurrent/TimeUnit;)J
@3.5.0
-###okhttp3/internal/framed/Ping

+###okhttp3/internal/framed/PushObserver
@3.0.0-RC1
+#onRequest(ILjava/util/List;)Z
+#onHeaders(ILjava/util/List;Z)Z
+#onData(ILokio/BufferedSource;IZ)Z
+#onReset(ILokhttp3/internal/framed/ErrorCode;)V
@3.5.0
-###okhttp3/internal/framed/PushObserver

+###okhttp3/internal/framed/Settings
@3.0.0-RC1
+#<init>()V
@3.5.0
-###okhttp3/internal/framed/Settings

+###okhttp3/internal/framed/Spdy3
@3.0.0-RC1
+#<init>()V
+#getProtocol()Lokhttp3/Protocol;
+#newReader(Lokio/BufferedSource;Z)Lokhttp3/internal/framed/FrameReader;
+#newWriter(Lokio/BufferedSink;Z)Lokhttp3/internal/framed/FrameWriter;
@3.5.0
-###okhttp3/internal/framed/Spdy3

+###okhttp3/internal/framed/Variant
@3.0.0-RC1
+#getProtocol()Lokhttp3/Protocol;
+#newReader(Lokio/BufferedSource;Z)Lokhttp3/internal/framed/FrameReader;
+#newWriter(Lokio/BufferedSink;Z)Lokhttp3/internal/framed/FrameWriter;
@3.5.0
-###okhttp3/internal/framed/Variant

+###okhttp3/internal/http/CacheRequest
@3.0.0-RC1
+#body()Lokio/Sink;
+#abort()V
@3.4.0-RC1
-###okhttp3/internal/http/CacheRequest

+###okhttp3/internal/http/CacheStrategy$Factory
@3.0.0-RC1
+#<init>(JLokhttp3/Request;Lokhttp3/Response;)V
+#get()Lokhttp3/internal/http/CacheStrategy;
@3.4.0-RC1
-###okhttp3/internal/http/CacheStrategy$Factory

+###okhttp3/internal/http/CacheStrategy
@3.0.0-RC1
+#isCacheable(Lokhttp3/Response;Lokhttp3/Request;)Z
@3.4.0-RC1
-###okhttp3/internal/http/CacheStrategy

+###okhttp3/internal/http/HeaderParser
@3.0.0-RC1
+#skipUntil(Ljava/lang/String;ILjava/lang/String;)I
+#skipWhitespace(Ljava/lang/String;I)I
+#parseSeconds(Ljava/lang/String;I)I
@3.4.0-RC1
-###okhttp3/internal/http/HeaderParser

+###okhttp3/internal/http/Http1xStream
@3.0.0-RC1
+#<init>(Lokhttp3/internal/http/StreamAllocation;Lokio/BufferedSource;Lokio/BufferedSink;)V
+#setHttpEngine(Lokhttp3/internal/http/HttpEngine;)V
+#createRequestBody(Lokhttp3/Request;J)Lokio/Sink;
+#cancel()V
+#writeRequestHeaders(Lokhttp3/Request;)V
+#readResponseHeaders()Lokhttp3/Response$Builder;
+#openResponseBody(Lokhttp3/Response;)Lokhttp3/ResponseBody;
+#isClosed()Z
+#finishRequest()V
+#writeRequest(Lokhttp3/Headers;Ljava/lang/String;)V
+#readResponse()Lokhttp3/Response$Builder;
+#readHeaders()Lokhttp3/Headers;
+#newChunkedSink()Lokio/Sink;
+#newFixedLengthSink(J)Lokio/Sink;
+#writeRequestBody(Lokhttp3/internal/http/RetryableSink;)V
+#newFixedLengthSource(J)Lokio/Source;
+#newChunkedSource(Lokhttp3/internal/http/HttpEngine;)Lokio/Source;
+#newUnknownLengthSource()Lokio/Source;
@3.4.0-RC1
+#<init>(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/StreamAllocation;Lokio/BufferedSource;Lokio/BufferedSink;)V
+#newChunkedSource(Lokhttp3/HttpUrl;)Lokio/Source;
-#<init>(Lokhttp3/internal/http/StreamAllocation;Lokio/BufferedSource;Lokio/BufferedSink;)V
-#setHttpEngine(Lokhttp3/internal/http/HttpEngine;)V
-#writeRequestBody(Lokhttp3/internal/http/RetryableSink;)V
-#newChunkedSource(Lokhttp3/internal/http/HttpEngine;)Lokio/Source;
@3.5.0
-###okhttp3/internal/http/Http1xStream

+###okhttp3/internal/http/Http2xStream
@3.0.0-RC1
+#<init>(Lokhttp3/internal/http/StreamAllocation;Lokhttp3/internal/framed/FramedConnection;)V
+#setHttpEngine(Lokhttp3/internal/http/HttpEngine;)V
+#createRequestBody(Lokhttp3/Request;J)Lokio/Sink;
+#writeRequestHeaders(Lokhttp3/Request;)V
+#writeRequestBody(Lokhttp3/internal/http/RetryableSink;)V
+#finishRequest()V
+#readResponseHeaders()Lokhttp3/Response$Builder;
+#spdy3HeadersList(Lokhttp3/Request;)Ljava/util/List;
+#http2HeadersList(Lokhttp3/Request;)Ljava/util/List;
+#readSpdy3HeadersList(Ljava/util/List;)Lokhttp3/Response$Builder;
+#readHttp2HeadersList(Ljava/util/List;)Lokhttp3/Response$Builder;
+#openResponseBody(Lokhttp3/Response;)Lokhttp3/ResponseBody;
+#cancel()V
@3.4.0-RC1
+#<init>(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/framed/FramedConnection;)V
-#<init>(Lokhttp3/internal/http/StreamAllocation;Lokhttp3/internal/framed/FramedConnection;)V
-#setHttpEngine(Lokhttp3/internal/http/HttpEngine;)V
-#writeRequestBody(Lokhttp3/internal/http/RetryableSink;)V
@3.5.0
-###okhttp3/internal/http/Http2xStream

+###okhttp3/internal/http/HttpEngine
@3.0.0-RC1
+#<init>(Lokhttp3/OkHttpClient;Lokhttp3/Request;ZZZLokhttp3/internal/http/StreamAllocation;Lokhttp3/internal/http/RetryableSink;Lokhttp3/Response;)V
+#sendRequest()V
+#writingRequestHeaders()V
+#getRequestBody()Lokio/Sink;
+#getBufferedRequestBody()Lokio/BufferedSink;
+#hasResponse()Z
+#getRequest()Lokhttp3/Request;
+#getResponse()Lokhttp3/Response;
+#getConnection()Lokhttp3/Connection;
+#recover(Ljava/io/IOException;Lokio/Sink;)Lokhttp3/internal/http/HttpEngine;
+#recover(Ljava/io/IOException;)Lokhttp3/internal/http/HttpEngine;
+#releaseStreamAllocation()V
+#cancel()V
+#close()Lokhttp3/internal/http/StreamAllocation;
+#hasBody(Lokhttp3/Response;)Z
+#readResponse()V
+#receiveHeaders(Lokhttp3/Headers;)V
+#followUpRequest()Lokhttp3/Request;
+#sameConnection(Lokhttp3/HttpUrl;)Z
@3.3.0
+#recover(Ljava/io/IOException;ZLokio/Sink;)Lokhttp3/internal/http/HttpEngine;
+#recover(Ljava/io/IOException;Z)Lokhttp3/internal/http/HttpEngine;
-#recover(Ljava/io/IOException;Lokio/Sink;)Lokhttp3/internal/http/HttpEngine;
-#recover(Ljava/io/IOException;)Lokhttp3/internal/http/HttpEngine;
@3.4.0-RC1
-###okhttp3/internal/http/HttpEngine

+###okhttp3/internal/http/HttpStream
@3.0.0-RC1
+#createRequestBody(Lokhttp3/Request;J)Lokio/Sink;
+#writeRequestHeaders(Lokhttp3/Request;)V
+#writeRequestBody(Lokhttp3/internal/http/RetryableSink;)V
+#finishRequest()V
+#readResponseHeaders()Lokhttp3/Response$Builder;
+#openResponseBody(Lokhttp3/Response;)Lokhttp3/ResponseBody;
+#setHttpEngine(Lokhttp3/internal/http/HttpEngine;)V
+#cancel()V
@3.4.0-RC1
-#writeRequestBody(Lokhttp3/internal/http/RetryableSink;)V
-#setHttpEngine(Lokhttp3/internal/http/HttpEngine;)V
@3.5.0
-###okhttp3/internal/http/HttpStream

+###okhttp3/internal/http/OkHeaders
@3.0.0-RC1
+#contentLength(Lokhttp3/Request;)J
+#contentLength(Lokhttp3/Response;)J
+#contentLength(Lokhttp3/Headers;)J
+#varyMatches(Lokhttp3/Response;Lokhttp3/Headers;Lokhttp3/Request;)Z
+#hasVaryAll(Lokhttp3/Response;)Z
+#hasVaryAll(Lokhttp3/Headers;)Z
+#varyFields(Lokhttp3/Headers;)Ljava/util/Set;
+#varyHeaders(Lokhttp3/Response;)Lokhttp3/Headers;
+#varyHeaders(Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;
+#parseChallenges(Lokhttp3/Headers;Ljava/lang/String;)Ljava/util/List;
@3.4.0-RC1
-###okhttp3/internal/http/OkHeaders

+###okhttp3/internal/http/RequestException
@3.0.0-RC1
+#<init>(Ljava/io/IOException;)V
+#getCause()Ljava/io/IOException;
+#getCause()Ljava/lang/Throwable;
@3.4.0-RC1
-###okhttp3/internal/http/RequestException

+###okhttp3/internal/http/RetryableSink
@3.0.0-RC1
+#<init>(I)V
+#<init>()V
+#close()V
+#write(Lokio/Buffer;J)V
+#flush()V
+#timeout()Lokio/Timeout;
+#contentLength()J
+#writeToSocket(Lokio/Sink;)V
@3.4.0-RC1
-###okhttp3/internal/http/RetryableSink

+###okhttp3/internal/http/RouteException
@3.0.0-RC1
+#<init>(Ljava/io/IOException;)V
+#getLastConnectException()Ljava/io/IOException;
+#addConnectException(Ljava/io/IOException;)V
@3.4.0-RC1
-###okhttp3/internal/http/RouteException

+###okhttp3/internal/http/RouteSelector
@3.0.0-RC1
+#<init>(Lokhttp3/Address;Lokhttp3/internal/RouteDatabase;)V
+#hasNext()Z
+#next()Lokhttp3/Route;
+#connectFailed(Lokhttp3/Route;Ljava/io/IOException;)V
@3.4.0-RC1
-###okhttp3/internal/http/RouteSelector

+###okhttp3/internal/http/StreamAllocation
@3.0.0-RC1
+#<init>(Lokhttp3/ConnectionPool;Lokhttp3/Address;)V
+#newStream(IIIZZ)Lokhttp3/internal/http/HttpStream;
+#streamFinished(ZLokhttp3/internal/http/HttpStream;)V
+#stream()Lokhttp3/internal/http/HttpStream;
+#connection()Lokhttp3/internal/io/RealConnection;
+#release()V
+#noNewStreams()V
+#cancel()V
+#connectionFailed(Ljava/io/IOException;)V
+#acquire(Lokhttp3/internal/io/RealConnection;)V
+#recover(Ljava/io/IOException;Lokio/Sink;)Z
+#toString()Ljava/lang/String;
@3.3.0
+#streamFailed(Ljava/io/IOException;)V
+#hasMoreRoutes()Z
-#connectionFailed(Ljava/io/IOException;)V
-#recover(Ljava/io/IOException;Lokio/Sink;)Z
@3.4.0-RC1
-###okhttp3/internal/http/StreamAllocation

+###okhttp3/internal/InternalCache
@3.0.0-RC1
+#get(Lokhttp3/Request;)Lokhttp3/Response;
+#put(Lokhttp3/Response;)Lokhttp3/internal/http/CacheRequest;
+#remove(Lokhttp3/Request;)V
+#update(Lokhttp3/Response;Lokhttp3/Response;)V
+#trackConditionalCacheHit()V
+#trackResponse(Lokhttp3/internal/http/CacheStrategy;)V
@3.4.0-RC1
-###okhttp3/internal/InternalCache

+###okhttp3/internal/io/RealConnection
@3.0.0-RC1
+#<init>(Lokhttp3/Route;)V
+#connect(IIILjava/util/List;Z)V
+#route()Lokhttp3/Route;
+#cancel()V
+#socket()Ljava/net/Socket;
+#allocationLimit()I
+#isHealthy(Z)Z
+#handshake()Lokhttp3/Handshake;
+#isMultiplexed()Z
+#protocol()Lokhttp3/Protocol;
+#toString()Ljava/lang/String;
@3.1.0
+#onStream(Lokhttp3/internal/framed/FramedStream;)V
+#onSettings(Lokhttp3/internal/framed/FramedConnection;)V
-#allocationLimit()I
@3.4.0-RC1
-###okhttp3/internal/io/RealConnection

+###okhttp3/internal/Platform
@3.0.0-RC1
+#<init>()V
+#get()Lokhttp3/internal/Platform;
+#getPrefix()Ljava/lang/String;
+#logW(Ljava/lang/String;)V
+#tagSocket(Ljava/net/Socket;)V
+#untagSocket(Ljava/net/Socket;)V
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
+#afterHandshake(Ljavax/net/ssl/SSLSocket;)V
+#getSelectedProtocol(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
+#connectSocket(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V
+#log(Ljava/lang/String;)V
@3.1.0
+#trustManager(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
@3.1.1
+#trustRootIndex(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;
@3.1.2
-#tagSocket(Ljava/net/Socket;)V
-#untagSocket(Ljava/net/Socket;)V
@3.3.0
+#log(ILjava/lang/String;Ljava/lang/Throwable;)V
+#isCleartextTrafficPermitted()Z
+#alpnProtocolNames(Ljava/util/List;)Ljava/util/List;
-#logW(Ljava/lang/String;)V
-#trustRootIndex(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;
-#log(Ljava/lang/String;)V
@3.4.0-RC1
-###okhttp3/internal/Platform

+###okhttp3/internal/RouteDatabase
@3.0.0-RC1
+#<init>()V
+#failed(Lokhttp3/Route;)V
+#connected(Lokhttp3/Route;)V
+#shouldPostpone(Lokhttp3/Route;)Z
+#failedRoutesCount()I
@3.4.0-RC1
-###okhttp3/internal/RouteDatabase

+###okhttp3/internal/tls/AndroidTrustRootIndex
@3.1.1
+#<init>(Ljavax/net/ssl/X509TrustManager;Ljava/lang/reflect/Method;)V
+#findByIssuerAndSignature(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;
+#get(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;
@3.3.0
-###okhttp3/internal/tls/AndroidTrustRootIndex

+###okhttp3/internal/tls/RealTrustRootIndex
@3.1.1
+#<init>([Ljava/security/cert/X509Certificate;)V
+#findByIssuerAndSignature(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;
@3.3.0
-###okhttp3/internal/tls/RealTrustRootIndex

+###okhttp3/OkHttpClient$Builder$addInterceptor$2
@4.9.0
+#intercept(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;
+#<init>(Lkotlin/jvm/functions/Function1;)V
@5.0.0-alpha.4
-###okhttp3/OkHttpClient$Builder$addInterceptor$2

+###okhttp3/MultipartReader
@4.6.0
+#nextPart()Lokhttp3/MultipartReader$Part;
+#close()V
+#boundary()Ljava/lang/String;
+#<init>(Lokio/BufferedSource;Ljava/lang/String;)V
+#<init>(Lokhttp3/ResponseBody;)V
+#access$getCurrentPart$p(Lokhttp3/MultipartReader;)Lokhttp3/MultipartReader$PartSource;
+#access$setCurrentPart$p(Lokhttp3/MultipartReader;Lokhttp3/MultipartReader$PartSource;)V
+#access$getSource$p(Lokhttp3/MultipartReader;)Lokio/BufferedSource;
+#access$currentPartBytesRemaining(Lokhttp3/MultipartReader;J)J
+#access$getAfterBoundaryOptions$cp()Lokio/Options;
@5.0.0-alpha.4
-###okhttp3/MultipartReader

+###okhttp3/internal/http1/HeadersReader
@4.6.0
+#readLine()Ljava/lang/String;
+#readHeaders()Lokhttp3/Headers;
+#getSource()Lokio/BufferedSource;
+#<init>(Lokio/BufferedSource;)V
@5.0.0-alpha.4
-###okhttp3/internal/http1/HeadersReader

+###okhttp3/internal/http1/HeadersReader$Companion
@4.6.0
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/http1/HeadersReader$Companion

+###okhttp3/internal/cache/DiskLruCache$Entry$newSource$1
@4.6.0
+#getClosed()Z
+#setClosed(Z)V
+#close()V
@4.8.0
-#getClosed()Z
-#setClosed(Z)V
@5.0.0-alpha.4
-###okhttp3/internal/cache/DiskLruCache$Entry$newSource$1

+###okhttp3/internal/platform/ConscryptPlatform$DisabledHostnameVerifier
@4.9.0
+#verify(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z
+#verify([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z
@5.0.0-alpha.4
-###okhttp3/internal/platform/ConscryptPlatform$DisabledHostnameVerifier

+###okhttp3/internal/platform/android/AndroidLog
@4.7.0
+#androidLog$okhttp(Ljava/lang/String;ILjava/lang/String;Ljava/lang/Throwable;)V
+#enable()V
@5.0.0-alpha.4
-###okhttp3/internal/platform/android/AndroidLog

+###okhttp3/internal/platform/android/DeferredSocketAdapter$Factory
@4.8.0
+#matchesSocket(Ljavax/net/ssl/SSLSocket;)Z
+#create(Ljavax/net/ssl/SSLSocket;)Lokhttp3/internal/platform/android/SocketAdapter;
@5.0.0-alpha.4
-###okhttp3/internal/platform/android/DeferredSocketAdapter$Factory

+###okhttp3/internal/platform/android/BouncyCastleSocketAdapter
@4.6.0
+#trustManager(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
+#matchesSocket(Ljavax/net/ssl/SSLSocket;)Z
+#isSupported()Z
+#getSelectedProtocol(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
+#configureTlsExtensions(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
+#<init>()V
+#matchesSocketFactory(Ljavax/net/ssl/SSLSocketFactory;)Z
@4.8.0
+#access$getFactory$cp()Lokhttp3/internal/platform/android/DeferredSocketAdapter$Factory;
@5.0.0-alpha.4
-###okhttp3/internal/platform/android/BouncyCastleSocketAdapter

+###okhttp3/internal/platform/android/ConscryptSocketAdapter$Companion$factory$1
@4.8.0
+#matchesSocket(Ljavax/net/ssl/SSLSocket;)Z
+#create(Ljavax/net/ssl/SSLSocket;)Lokhttp3/internal/platform/android/SocketAdapter;
@5.0.0-alpha.4
-###okhttp3/internal/platform/android/ConscryptSocketAdapter$Companion$factory$1

+###okhttp3/internal/platform/android/AndroidLogHandler
@4.7.0
+#publish(Ljava/util/logging/LogRecord;)V
+#flush()V
+#close()V
@5.0.0-alpha.4
-###okhttp3/internal/platform/android/AndroidLogHandler

+###okhttp3/internal/platform/android/AndroidSocketAdapter$Companion$factory$1
@4.8.0
+#matchesSocket(Ljavax/net/ssl/SSLSocket;)Z
+#create(Ljavax/net/ssl/SSLSocket;)Lokhttp3/internal/platform/android/SocketAdapter;
@5.0.0-alpha.4
-###okhttp3/internal/platform/android/AndroidSocketAdapter$Companion$factory$1

+###okhttp3/internal/platform/android/AndroidLogKt
@4.7.0
+#access$getAndroidLevel$p(Ljava/util/logging/LogRecord;)I
@4.10.0
+#access$getAndroidLevel(Ljava/util/logging/LogRecord;)I
-#access$getAndroidLevel$p(Ljava/util/logging/LogRecord;)I
@5.0.0-alpha.1
+#access$getAndroidLevel$p(Ljava/util/logging/LogRecord;)I
-#access$getAndroidLevel(Ljava/util/logging/LogRecord;)I
@5.0.0-alpha.3
+#access$getAndroidLevel(Ljava/util/logging/LogRecord;)I
-#access$getAndroidLevel$p(Ljava/util/logging/LogRecord;)I
@5.0.0-alpha.4
-###okhttp3/internal/platform/android/AndroidLogKt

+###okhttp3/internal/platform/android/BouncyCastleSocketAdapter$Companion
@4.6.0
+#buildIfSupported()Lokhttp3/internal/platform/android/SocketAdapter;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.8.0
+#getFactory()Lokhttp3/internal/platform/android/DeferredSocketAdapter$Factory;
-#buildIfSupported()Lokhttp3/internal/platform/android/SocketAdapter;
@5.0.0-alpha.4
-###okhttp3/internal/platform/android/BouncyCastleSocketAdapter$Companion

+###okhttp3/internal/platform/android/SocketAdapter$DefaultImpls
@4.6.0
+#matchesSocketFactory(Lokhttp3/internal/platform/android/SocketAdapter;Ljavax/net/ssl/SSLSocketFactory;)Z
@4.8.0
+#trustManager(Lokhttp3/internal/platform/android/SocketAdapter;Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
@5.0.0-alpha.4
-###okhttp3/internal/platform/android/SocketAdapter$DefaultImpls

+###okhttp3/internal/platform/android/BouncyCastleSocketAdapter$Companion$factory$1
@4.8.0
+#matchesSocket(Ljavax/net/ssl/SSLSocket;)Z
+#create(Ljavax/net/ssl/SSLSocket;)Lokhttp3/internal/platform/android/SocketAdapter;
@5.0.0-alpha.4
-###okhttp3/internal/platform/android/BouncyCastleSocketAdapter$Companion$factory$1

+###okhttp3/internal/SuppressSignatureCheck
@4.6.0
@5.0.0-alpha.4
-###okhttp3/internal/SuppressSignatureCheck

+###okhttp3/internal/authenticator/JavaNetAuthenticator
@4.6.0
+#authenticate(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;
+#<init>(Lokhttp3/Dns;)V
+#<init>(Lokhttp3/Dns;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
+#<init>()V
@5.0.0-alpha.4
-###okhttp3/internal/authenticator/JavaNetAuthenticator

+###okhttp3/internal/authenticator/JavaNetAuthenticator$WhenMappings
@4.6.0
@5.0.0-alpha.4
-###okhttp3/internal/authenticator/JavaNetAuthenticator$WhenMappings

+###okhttp3/internal/ws/WebSocketExtensions$Companion
@4.5.0-RC1
+#parse(Lokhttp3/Headers;)Lokhttp3/internal/ws/WebSocketExtensions;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/internal/ws/WebSocketExtensions$Companion

+###okhttp3/internal/ws/MessageInflater
@4.5.0-RC1
+#inflate(Lokio/Buffer;)V
+#close()V
+#<init>(Z)V
@5.0.0-alpha.4
-###okhttp3/internal/ws/MessageInflater

+###okhttp3/internal/ws/MessageDeflaterKt
@4.5.0-RC1
+#access$getEMPTY_DEFLATE_BLOCK$p()Lokio/ByteString;
@5.0.0-alpha.4
-###okhttp3/internal/ws/MessageDeflaterKt

+###okhttp3/internal/ws/MessageDeflater
@4.5.0-RC1
+#deflate(Lokio/Buffer;)V
+#close()V
+#<init>(Z)V
@5.0.0-alpha.4
-###okhttp3/internal/ws/MessageDeflater

+###okhttp3/internal/ws/WebSocketExtensions
@4.5.0-RC1
+#newMessageDeflater(Z)Lokhttp3/internal/ws/MessageDeflater;
+#newMessageInflater(Z)Lokhttp3/internal/ws/MessageInflater;
+#<init>(ZLjava/lang/Integer;ZLjava/lang/Integer;ZZ)V
+#<init>(ZLjava/lang/Integer;ZLjava/lang/Integer;ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
+#<init>()V
+#component1()Z
+#component2()Ljava/lang/Integer;
+#component3()Z
+#component4()Ljava/lang/Integer;
+#component5()Z
+#component6()Z
+#copy(ZLjava/lang/Integer;ZLjava/lang/Integer;ZZ)Lokhttp3/internal/ws/WebSocketExtensions;
+#copy$default(Lokhttp3/internal/ws/WebSocketExtensions;ZLjava/lang/Integer;ZLjava/lang/Integer;ZZILjava/lang/Object;)Lokhttp3/internal/ws/WebSocketExtensions;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@4.5.0
+#noContextTakeover(Z)Z
-#newMessageDeflater(Z)Lokhttp3/internal/ws/MessageDeflater;
-#newMessageInflater(Z)Lokhttp3/internal/ws/MessageInflater;
@5.0.0-alpha.4
-###okhttp3/internal/ws/WebSocketExtensions

+###okhttp3/internal/ws/MessageInflaterKt
@4.5.0-RC1
@5.0.0-alpha.4
-###okhttp3/internal/ws/MessageInflaterKt

+###okhttp3/MultipartReader$Part
@4.6.0
+#headers()Lokhttp3/Headers;
+#body()Lokio/BufferedSource;
+#<init>(Lokhttp3/Headers;Lokio/BufferedSource;)V
+#close()V
@5.0.0-alpha.4
-###okhttp3/MultipartReader$Part

+###okhttp3/OkHttp
@4.7.0
@5.0.0-alpha.4
-###okhttp3/OkHttp

+###okhttp3/MultipartReader$Companion
@4.6.0
+#getAfterBoundaryOptions()Lokio/Options;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@5.0.0-alpha.4
-###okhttp3/MultipartReader$Companion

+###okhttp3/OkHttpClient$Builder$addNetworkInterceptor$2
@4.9.0
+#intercept(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;
+#<init>(Lkotlin/jvm/functions/Function1;)V
@5.0.0-alpha.4
-###okhttp3/OkHttpClient$Builder$addNetworkInterceptor$2

+###okhttp3/internal/framed/StreamResetException
@3.3.0
+#<init>(Lokhttp3/internal/framed/ErrorCode;)V
@3.5.0
-###okhttp3/internal/framed/StreamResetException

+###okhttp3/internal/connection/Transmitter
@3.14.0
+#<init>(Lokhttp3/OkHttpClient;Lokhttp3/Call;)V
+#timeout()Lokio/Timeout;
+#timeoutEnter()V
+#timeoutEarlyExit()V
+#callStart()V
+#prepareToConnect(Lokhttp3/Request;)V
+#exchangeDoneDueToException()V
+#noMoreExchanges(Ljava/io/IOException;)Ljava/io/IOException;
+#canRetry()Z
+#hasExchange()Z
+#cancel()V
+#isCanceled()Z
@4.0.0-alpha01
+#getConnection()Lokhttp3/internal/connection/RealConnection;
+#setConnection(Lokhttp3/internal/connection/RealConnection;)V
+#newExchange$okhttp(Lokhttp3/Interceptor$Chain;Z)Lokhttp3/internal/connection/Exchange;
+#acquireConnectionNoEvents(Lokhttp3/internal/connection/RealConnection;)V
+#releaseConnectionNoEvents()Ljava/net/Socket;
+#exchangeMessageDone$okhttp(Lokhttp3/internal/connection/Exchange;ZZLjava/io/IOException;)Ljava/io/IOException;
@4.4.0
-###okhttp3/internal/connection/Transmitter

+###okhttp3/RequestBody$Companion$toRequestBody$3
@4.0.0-alpha02
+#contentType()Lokhttp3/MediaType;
+#contentLength()J
+#writeTo(Lokio/BufferedSink;)V
@4.0.0-RC2
-###okhttp3/RequestBody$Companion$toRequestBody$3

+###okhttp3/internal/NativeImageTestsAccessorsKt
@5.0.0-alpha.2
+#buildCache(Ljava/io/File;JLokhttp3/internal/io/FileSystem;)Lokhttp3/Cache;
+#getIdleAtNsAccessor(Lokhttp3/internal/connection/RealConnection;)J
+#setIdleAtNsAccessor(Lokhttp3/internal/connection/RealConnection;J)V
+#getExchange(Lokhttp3/Response;)Lokhttp3/internal/connection/Exchange;
+#getConnection(Lokhttp3/internal/connection/Exchange;)Lokhttp3/internal/connection/RealConnection;
+#finished(Lokhttp3/Dispatcher;Lokhttp3/internal/connection/RealCall$AsyncCall;)V
@5.0.0-alpha.3
+#buildCache(Lokio/Path;JLokio/FileSystem;)Lokhttp3/Cache;
+#getExchangeAccessor(Lokhttp3/Response;)Lokhttp3/internal/connection/Exchange;
+#getConnectionAccessor(Lokhttp3/internal/connection/Exchange;)Lokhttp3/internal/connection/RealConnection;
+#finishedAccessor(Lokhttp3/Dispatcher;Lokhttp3/internal/connection/RealCall$AsyncCall;)V
-#buildCache(Ljava/io/File;JLokhttp3/internal/io/FileSystem;)Lokhttp3/Cache;
-#getExchange(Lokhttp3/Response;)Lokhttp3/internal/connection/Exchange;
-#getConnection(Lokhttp3/internal/connection/Exchange;)Lokhttp3/internal/connection/RealConnection;
-#finished(Lokhttp3/Dispatcher;Lokhttp3/internal/connection/RealCall$AsyncCall;)V
@5.0.0-alpha.4
-###okhttp3/internal/NativeImageTestsAccessorsKt

+###okhttp3/internal/cache/DiskLruCache$fileSystem$1
@5.0.0-alpha.3
+#sink(Lokio/Path;Z)Lokio/Sink;
@5.0.0-alpha.4
-###okhttp3/internal/cache/DiskLruCache$fileSystem$1

+###okhttp3/internal/graal/TargetAndroid10Platform
@4.10.0-RC1
+#<init>()V
@4.10.0
-###okhttp3/internal/graal/TargetAndroid10Platform

+###okhttp3/internal/graal/TargetAndroidPlatform
@4.10.0-RC1
+#<init>()V
@4.10.0
-###okhttp3/internal/graal/TargetAndroidPlatform

+###okhttp3/internal/graal/TargetBouncyCastlePlatform
@4.10.0-RC1
+#<init>()V
@4.10.0
-###okhttp3/internal/graal/TargetBouncyCastlePlatform

+###okhttp3/internal/graal/TargetConscryptPlatform
@4.10.0-RC1
+#<init>()V
@4.10.0
-###okhttp3/internal/graal/TargetConscryptPlatform

+###okhttp3/internal/graal/TargetJdk8WithJettyBootPlatform
@4.10.0-RC1
+#<init>()V
@4.10.0
-###okhttp3/internal/graal/TargetJdk8WithJettyBootPlatform

+###okhttp3/internal/graal/TargetOpenJSSEPlatform
@4.10.0-RC1
+#<init>()V
@4.10.0
-###okhttp3/internal/graal/TargetOpenJSSEPlatform

+###okhttp3/internal/graal/TargetPlatform
@4.10.0-RC1
+#findPlatform()Lokhttp3/internal/platform/Platform;
+#<init>()V
@4.10.0
-###okhttp3/internal/graal/TargetPlatform

+###okhttp3/RealCall
@4.0.0-alpha01
+#getExecuted()Z
+#setExecuted(Z)V
+#isExecuted()Z
+#isCanceled()Z
+#request()Lokhttp3/Request;
+#execute()Lokhttp3/Response;
+#enqueue(Lokhttp3/Callback;)V
+#cancel()V
+#timeout()Lokio/Timeout;
+#clone()Lokhttp3/RealCall;
+#clone()Ljava/lang/Object;
+#clone()Lokhttp3/Call;
+#toLoggableString()Ljava/lang/String;
+#redactedUrl()Ljava/lang/String;
+#getResponseWithInterceptorChain()Lokhttp3/Response;
+#getClient()Lokhttp3/OkHttpClient;
+#getOriginalRequest()Lokhttp3/Request;
+#getForWebSocket()Z
+#access$getTransmitter$p(Lokhttp3/RealCall;)Lokhttp3/internal/connection/Transmitter;
+#access$setTransmitter$p(Lokhttp3/RealCall;Lokhttp3/internal/connection/Transmitter;)V
+#<init>(Lokhttp3/OkHttpClient;Lokhttp3/Request;ZLkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.4.0
-###okhttp3/RealCall

+###okhttp3/RealCall$AsyncCall
@4.0.0-alpha01
+#callsPerHost()Ljava/util/concurrent/atomic/AtomicInteger;
+#reuseCallsPerHostFrom(Lokhttp3/RealCall$AsyncCall;)V
+#host()Ljava/lang/String;
+#request()Lokhttp3/Request;
+#get()Lokhttp3/RealCall;
+#executeOn(Ljava/util/concurrent/ExecutorService;)V
+#<init>(Lokhttp3/RealCall;Lokhttp3/Callback;)V
@4.0.0-alpha02
+#run()V
@4.4.0
-###okhttp3/RealCall$AsyncCall

+###okhttp3/ResponseBody$Companion$toResponseBody$1
@4.0.0-alpha02
+#contentType()Lokhttp3/MediaType;
+#contentLength()J
+#source()Lokio/BufferedSource;
@4.0.0-RC2
-###okhttp3/ResponseBody$Companion$toResponseBody$1

+###okhttp3/Authenticator$Companion$NONE$1
@4.0.0-alpha01
+#authenticate(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;
@4.3.0
-###okhttp3/Authenticator$Companion$NONE$1

+###okhttp3/internal/connection/RealConnectionPool$cleanupRunnable$1
@4.0.0-alpha01
+#run()V
@4.3.0
-###okhttp3/internal/connection/RealConnectionPool$cleanupRunnable$1

+###okhttp3/internal/connection/Transmitter$TransmitterReference
@4.0.0-alpha01
+#getCallStackTrace()Ljava/lang/Object;
+#<init>(Lokhttp3/internal/connection/Transmitter;Ljava/lang/Object;)V
@4.4.0
-###okhttp3/internal/connection/Transmitter$TransmitterReference

+###okhttp3/internal/connection/Exchange$Companion
@4.0.0-alpha02
+#get(Lokhttp3/Response;)Lokhttp3/internal/connection/Exchange;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.4.0
-###okhttp3/internal/connection/Exchange$Companion

+###okhttp3/internal/connection/Transmitter$timeout$1
@4.0.0-alpha01
@4.4.0
-###okhttp3/internal/connection/Transmitter$timeout$1

+###okhttp3/internal/platform/AndroidPlatform$CloseGuard
@4.0.0-alpha01
+#createAndOpen(Ljava/lang/String;)Ljava/lang/Object;
+#warnIfOpen(Ljava/lang/Object;)Z
+#<init>(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V
@4.2.0
-###okhttp3/internal/platform/AndroidPlatform$CloseGuard

+###okhttp3/internal/platform/AndroidPlatform$CloseGuard$Companion
@4.0.0-alpha01
+#get()Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.2.0
-###okhttp3/internal/platform/AndroidPlatform$CloseGuard$Companion

+###okhttp3/internal/platform/AndroidPlatform$AndroidCertificateChainCleaner
@4.0.0-alpha01
+#clean(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
@4.3.0
-###okhttp3/internal/platform/AndroidPlatform$AndroidCertificateChainCleaner

+###okhttp3/internal/http2/Http2Connection$ReaderRunnable$ping$$inlined$tryExecute$1
@4.0.0-alpha01
+#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;II)V
@4.0.0-alpha02
+#<init>(Ljava/lang/String;Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;II)V
+#run()V
-#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;II)V
@4.3.0
-###okhttp3/internal/http2/Http2Connection$ReaderRunnable$ping$$inlined$tryExecute$1

+###okhttp3/internal/http2/Http2Connection$pushHeadersLater$$inlined$tryExecute$1
@4.0.0-alpha01
+#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Connection;ILjava/util/List;Z)V
@4.0.0-alpha02
+#<init>(Ljava/lang/String;Lokhttp3/internal/http2/Http2Connection;ILjava/util/List;Z)V
+#run()V
-#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Connection;ILjava/util/List;Z)V
@4.3.0
-###okhttp3/internal/http2/Http2Connection$pushHeadersLater$$inlined$tryExecute$1

+###okhttp3/internal/http2/Http2Connection$writeSynResetLater$$inlined$tryExecute$1
@4.0.0-alpha01
+#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Connection;ILokhttp3/internal/http2/ErrorCode;)V
@4.0.0-alpha02
+#<init>(Ljava/lang/String;Lokhttp3/internal/http2/Http2Connection;ILokhttp3/internal/http2/ErrorCode;)V
+#run()V
-#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Connection;ILokhttp3/internal/http2/ErrorCode;)V
@4.3.0
-###okhttp3/internal/http2/Http2Connection$writeSynResetLater$$inlined$tryExecute$1

+###okhttp3/internal/http2/PushObserver$Companion$CANCEL$1
@4.0.0-alpha01
+#onRequest(ILjava/util/List;)Z
+#onHeaders(ILjava/util/List;Z)Z
+#onData(ILokio/BufferedSource;IZ)Z
+#onReset(ILokhttp3/internal/http2/ErrorCode;)V
@4.3.0
-###okhttp3/internal/http2/PushObserver$Companion$CANCEL$1

+###okhttp3/internal/http2/Http2Connection$pushRequestLater$$inlined$tryExecute$1
@4.0.0-alpha01
+#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Connection;ILjava/util/List;)V
@4.0.0-alpha02
+#<init>(Ljava/lang/String;Lokhttp3/internal/http2/Http2Connection;ILjava/util/List;)V
+#run()V
-#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Connection;ILjava/util/List;)V
@4.3.0
-###okhttp3/internal/http2/Http2Connection$pushRequestLater$$inlined$tryExecute$1

+###okhttp3/internal/http2/Http2Connection$ReaderRunnable$settings$$inlined$synchronized$lambda$1
@4.0.0-alpha01
+#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;ZLokhttp3/internal/http2/Settings;Lkotlin/jvm/internal/Ref$LongRef;Lkotlin/jvm/internal/Ref$ObjectRef;)V
@4.0.0-alpha02
+#<init>(Ljava/lang/String;Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;ZLokhttp3/internal/http2/Settings;Lkotlin/jvm/internal/Ref$LongRef;Lkotlin/jvm/internal/Ref$ObjectRef;)V
+#run()V
-#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;ZLokhttp3/internal/http2/Settings;Lkotlin/jvm/internal/Ref$LongRef;Lkotlin/jvm/internal/Ref$ObjectRef;)V
@4.2.0
-###okhttp3/internal/http2/Http2Connection$ReaderRunnable$settings$$inlined$synchronized$lambda$1

+###okhttp3/internal/http2/Http2Connection$writeWindowUpdateLater$$inlined$tryExecute$1
@4.0.0-alpha01
+#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Connection;IJ)V
@4.0.0-alpha02
+#<init>(Ljava/lang/String;Lokhttp3/internal/http2/Http2Connection;IJ)V
+#run()V
-#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Connection;IJ)V
@4.3.0
-###okhttp3/internal/http2/Http2Connection$writeWindowUpdateLater$$inlined$tryExecute$1

+###okhttp3/internal/http2/Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$tryExecute$1
@4.0.0-alpha01
+#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Lokhttp3/internal/http2/Settings;)V
@4.0.0-alpha02
+#<init>(Ljava/lang/String;Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Lokhttp3/internal/http2/Settings;)V
+#run()V
-#<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Lokhttp3/internal/http2/Settings;)V
@4.2.0
-###okhttp3/internal/http2/Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$tryExecute$1

+###okhttp3/internal/Util$execute$1
@4.0.0-alpha02
+#run()V
+#<init>(Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
@4.3.0
-###okhttp3/internal/Util$execute$1

+###okhttp3/internal/ws/RealWebSocket$CancelRunnable
@4.0.0-alpha02
+#run()V
+#<init>(Lokhttp3/internal/ws/RealWebSocket;)V
@4.3.0
-###okhttp3/internal/ws/RealWebSocket$CancelRunnable

+###okhttp3/RealCall$Companion
@4.0.0-alpha01
+#newRealCall(Lokhttp3/OkHttpClient;Lokhttp3/Request;Z)Lokhttp3/RealCall;
+#<init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
@4.4.0
-###okhttp3/RealCall$Companion

+###okhttp3/CookieJar$Companion$NO_COOKIES$1
@4.0.0-alpha01
+#saveFromResponse(Lokhttp3/HttpUrl;Ljava/util/List;)V
+#loadForRequest(Lokhttp3/HttpUrl;)Ljava/util/List;
@4.3.0
-###okhttp3/CookieJar$Companion$NO_COOKIES$1

+###okhttp3/Dns$Companion$SYSTEM$1
@4.0.0-alpha01
+#lookup(Ljava/lang/String;)Ljava/util/List;
@4.3.0
-###okhttp3/Dns$Companion$SYSTEM$1

+###okhttp3/internal/http2/Http2Connection$pushResetLater$$inlined$execute$default$1
@4.10.0
+#<init>(Ljava/lang/String;ZLokhttp3/internal/http2/Http2Connection;ILokhttp3/internal/http2/ErrorCode;)V
+#runOnce()J
@5.0.0-alpha.1
-###okhttp3/internal/http2/Http2Connection$pushResetLater$$inlined$execute$default$1

+###okhttp3/internal/http2/Http2Connection$ReaderRunnable$ping$$inlined$execute$default$1
@4.10.0
+#<init>(Ljava/lang/String;ZLokhttp3/internal/http2/Http2Connection;II)V
+#runOnce()J
@5.0.0-alpha.1
-###okhttp3/internal/http2/Http2Connection$ReaderRunnable$ping$$inlined$execute$default$1

+###okhttp3/internal/http2/Http2Connection$pushRequestLater$$inlined$execute$default$1
@4.10.0
+#<init>(Ljava/lang/String;ZLokhttp3/internal/http2/Http2Connection;ILjava/util/List;)V
+#runOnce()J
@5.0.0-alpha.1
-###okhttp3/internal/http2/Http2Connection$pushRequestLater$$inlined$execute$default$1

+###okhttp3/internal/http2/Http2Connection$ReaderRunnable$settings$$inlined$execute$default$1
@4.10.0
+#<init>(Ljava/lang/String;ZLokhttp3/internal/http2/Http2Connection$ReaderRunnable;ZLokhttp3/internal/http2/Settings;)V
+#runOnce()J
@5.0.0-alpha.1
-###okhttp3/internal/http2/Http2Connection$ReaderRunnable$settings$$inlined$execute$default$1

+###okhttp3/internal/http2/Http2Connection$sendDegradedPingLater$$inlined$execute$default$1
@4.10.0
+#<init>(Ljava/lang/String;ZLokhttp3/internal/http2/Http2Connection;)V
+#runOnce()J
@5.0.0-alpha.1
-###okhttp3/internal/http2/Http2Connection$sendDegradedPingLater$$inlined$execute$default$1

+###okhttp3/internal/http2/Http2Connection$writeWindowUpdateLater$$inlined$execute$default$1
@4.10.0
+#<init>(Ljava/lang/String;ZLokhttp3/internal/http2/Http2Connection;IJ)V
+#runOnce()J
@5.0.0-alpha.1
-###okhttp3/internal/http2/Http2Connection$writeWindowUpdateLater$$inlined$execute$default$1

+###okhttp3/internal/http2/Http2Connection$ReaderRunnable$applyAndAckSettings$lambda-7$lambda-6$$inlined$execute$default$1
@4.10.0
+#<init>(Ljava/lang/String;ZLokhttp3/internal/http2/Http2Connection;Lkotlin/jvm/internal/Ref$ObjectRef;)V
+#runOnce()J
@5.0.0-alpha.1
-###okhttp3/internal/http2/Http2Connection$ReaderRunnable$applyAndAckSettings$lambda-7$lambda-6$$inlined$execute$default$1

+###okhttp3/internal/http2/Http2Connection$pushHeadersLater$$inlined$execute$default$1
@4.10.0
+#<init>(Ljava/lang/String;ZLokhttp3/internal/http2/Http2Connection;ILjava/util/List;Z)V
+#runOnce()J
@5.0.0-alpha.1
-###okhttp3/internal/http2/Http2Connection$pushHeadersLater$$inlined$execute$default$1

+###okhttp3/internal/http2/Http2Connection$writeSynResetLater$$inlined$execute$default$1
@4.10.0
+#<init>(Ljava/lang/String;ZLokhttp3/internal/http2/Http2Connection;ILokhttp3/internal/http2/ErrorCode;)V
+#runOnce()J
@5.0.0-alpha.1
-###okhttp3/internal/http2/Http2Connection$writeSynResetLater$$inlined$execute$default$1

+###okhttp3/internal/http2/Http2Connection$ReaderRunnable$headers$lambda-2$$inlined$execute$default$1
@4.10.0
+#<init>(Ljava/lang/String;ZLokhttp3/internal/http2/Http2Connection;Lokhttp3/internal/http2/Http2Stream;)V
+#runOnce()J
@5.0.0-alpha.1
-###okhttp3/internal/http2/Http2Connection$ReaderRunnable$headers$lambda-2$$inlined$execute$default$1

+###okhttp3/internal/http2/Http2Connection$pushDataLater$$inlined$execute$default$1
@4.10.0
+#<init>(Ljava/lang/String;ZLokhttp3/internal/http2/Http2Connection;ILokio/Buffer;IZ)V
+#runOnce()J
@5.0.0-alpha.1
-###okhttp3/internal/http2/Http2Connection$pushDataLater$$inlined$execute$default$1

+###okhttp3/internal/http2/Http2Connection$special$$inlined$schedule$1
@4.10.0
+#<init>(Ljava/lang/String;Lokhttp3/internal/http2/Http2Connection;J)V
+#runOnce()J
@5.0.0-alpha.1
-###okhttp3/internal/http2/Http2Connection$special$$inlined$schedule$1

+###okhttp3/internal/ws/RealWebSocket$initReaderAndWriter$lambda-3$$inlined$schedule$1
@4.10.0
+#<init>(Ljava/lang/String;Lokhttp3/internal/ws/RealWebSocket;J)V
+#runOnce()J
@5.0.0-alpha.1
-###okhttp3/internal/ws/RealWebSocket$initReaderAndWriter$lambda-3$$inlined$schedule$1

+###okhttp3/internal/ws/RealWebSocket$writeOneFrame$lambda-8$$inlined$execute$default$1
@4.10.0
+#<init>(Ljava/lang/String;ZLokhttp3/internal/ws/RealWebSocket;)V
+#runOnce()J
@5.0.0-alpha.1
-###okhttp3/internal/ws/RealWebSocket$writeOneFrame$lambda-8$$inlined$execute$default$1

+###okhttp3/RequestBody$Companion$create$2
@4.0.0-alpha01
+#contentType()Lokhttp3/MediaType;
+#contentLength()J
+#writeTo(Lokio/BufferedSink;)V
@4.0.0-alpha02
-###okhttp3/RequestBody$Companion$create$2

+###okhttp3/EventListener$Factory$Companion$invoke$1
@4.0.0-alpha01
+#create(Lokhttp3/Call;)Lokhttp3/EventListener;
+#<init>(Lkotlin/jvm/functions/Function1;)V
@4.0.0-RC1
-###okhttp3/EventListener$Factory$Companion$invoke$1

+###okhttp3/RequestBody$Companion$create$1
@4.0.0-alpha01
+#contentType()Lokhttp3/MediaType;
+#contentLength()J
+#writeTo(Lokio/BufferedSink;)V
@4.0.0-alpha02
-###okhttp3/RequestBody$Companion$create$1

+###okhttp3/EventListener$Factory$Companion
@4.0.0-alpha01
+#-deprecated_Factory(Lkotlin/jvm/functions/Function1;)Lokhttp3/EventListener$Factory;
@4.0.0-RC1
-###okhttp3/EventListener$Factory$Companion

+###okhttp3/RequestBody$Companion$create$3
@4.0.0-alpha01
+#contentType()Lokhttp3/MediaType;
+#contentLength()J
+#writeTo(Lokio/BufferedSink;)V
@4.0.0-alpha02
-###okhttp3/RequestBody$Companion$create$3

+###okhttp3/internal/UtilKt$execute$1
@4.0.0-alpha01
+#<init>(Lkotlin/jvm/functions/Function0;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V
@4.0.0-alpha02
-###okhttp3/internal/UtilKt$execute$1

+###okhttp3/internal/InternalKtKt
@4.0.0-alpha01
+#parseCookie(JLokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/Cookie;
+#cookieToString(Lokhttp3/Cookie;Z)Ljava/lang/String;
+#addHeaderLenient(Lokhttp3/Headers$Builder;Ljava/lang/String;)Lokhttp3/Headers$Builder;
+#addHeaderLenient(Lokhttp3/Headers$Builder;Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;
+#cacheGet(Lokhttp3/Cache;Lokhttp3/Request;)Lokhttp3/Response;
+#applyConnectionSpec(Lokhttp3/ConnectionSpec;Ljavax/net/ssl/SSLSocket;Z)V
+#waitNanos(Ljava/lang/Object;J)V
+#wait(Ljava/lang/Object;)V
+#waitMillis(Ljava/lang/Object;JI)V
+#waitMillis$default(Ljava/lang/Object;JIILjava/lang/Object;)V
+#notify(Ljava/lang/Object;)V
+#notifyAll(Ljava/lang/Object;)V
@4.0.0-alpha02
-###okhttp3/internal/InternalKtKt

+###okhttp3/internal/UtilKt
@4.0.0-alpha01
+#and(BI)I
+#and(SI)I
+#and(IJ)J
+#writeMedium(Lokio/BufferedSink;I)V
+#readMedium(Lokio/BufferedSource;)I
+#connectionName(Ljava/net/Socket;)Ljava/lang/String;
+#ignoreIoExceptions(Lkotlin/jvm/functions/Function0;)V
+#execute(Ljava/util/concurrent/Executor;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
+#tryExecute(Ljava/util/concurrent/Executor;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
+#skipAll(Lokio/Buffer;B)I
+#indexOfNonWhitespace(Ljava/lang/String;I)I
+#indexOfNonWhitespace$default(Ljava/lang/String;IILjava/lang/Object;)I
+#headersContentLength(Lokhttp3/Response;)J
+#toLongOrDefault(Ljava/lang/String;J)J
+#toNonNegativeInt(Ljava/lang/String;I)I
@4.0.0-alpha02
-###okhttp3/internal/UtilKt

+###okhttp3/internal/http2/Http2Connection$1
@4.0.0-alpha01
@4.0.0-alpha02
-###okhttp3/internal/http2/Http2Connection$1

+###okhttp3/internal/http/HttpDate$STANDARD_DATE_FORMAT$1
@4.0.0-alpha01
+#initialValue()Ljava/lang/Object;
@4.0.0-RC1
-###okhttp3/internal/http/HttpDate$STANDARD_DATE_FORMAT$1

+###okhttp3/OkHttpClient$Builder$addInterceptor$$inlined$apply$lambda$1
@4.0.0-alpha01
+#<init>(Lkotlin/jvm/functions/Function1;)V
+#intercept(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;
@4.0.0-RC1
-###okhttp3/OkHttpClient$Builder$addInterceptor$$inlined$apply$lambda$1

+###okhttp3/Dns$Companion$invoke$1
@4.0.0-alpha01
+#lookup(Ljava/lang/String;)Ljava/util/List;
+#<init>(Lkotlin/jvm/functions/Function1;)V
@4.0.0-RC1
-###okhttp3/Dns$Companion$invoke$1

+###okhttp3/OkHttpClient$Builder$eventListenerFactory$$inlined$apply$lambda$1
@4.0.0-alpha01
+#<init>(Lkotlin/jvm/functions/Function1;)V
+#create(Lokhttp3/Call;)Lokhttp3/EventListener;
@4.0.0-RC1
-###okhttp3/OkHttpClient$Builder$eventListenerFactory$$inlined$apply$lambda$1

+###okhttp3/Dispatcher$setIdleCallback$1
@4.0.0-alpha01
+#run()V
+#<init>(Lkotlin/jvm/functions/Function0;)V
@4.0.0-RC1
-###okhttp3/Dispatcher$setIdleCallback$1

+###okhttp3/Authenticator$Companion$invoke$1
@4.0.0-alpha01
+#authenticate(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;
+#<init>(Lkotlin/jvm/functions/Function2;)V
@4.0.0-RC1
-###okhttp3/Authenticator$Companion$invoke$1

+###okhttp3/OkHttpClient$Builder$addNetworkInterceptor$$inlined$apply$lambda$1
@4.0.0-alpha01
+#<init>(Lkotlin/jvm/functions/Function1;)V
+#intercept(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;
@4.0.0-RC1
-###okhttp3/OkHttpClient$Builder$addNetworkInterceptor$$inlined$apply$lambda$1

+###okhttp3/Cache$internalCache$1
@4.0.0-alpha01
+#get(Lokhttp3/Request;)Lokhttp3/Response;
+#put(Lokhttp3/Response;)Lokhttp3/internal/cache/CacheRequest;
+#remove(Lokhttp3/Request;)V
+#update(Lokhttp3/Response;Lokhttp3/Response;)V
+#trackConditionalCacheHit()V
+#trackResponse(Lokhttp3/internal/cache/CacheStrategy;)V
@4.0.0-alpha02
-###okhttp3/Cache$internalCache$1

+###okhttp3/ResponseBody$Companion$create$1
@4.0.0-alpha01
+#contentType()Lokhttp3/MediaType;
+#contentLength()J
+#source()Lokio/BufferedSource;
@4.0.0-alpha02
-###okhttp3/ResponseBody$Companion$create$1

+###okhttp3/OkHttpClient$Companion$1
@4.0.0-alpha01
+#realConnectionPool(Lokhttp3/ConnectionPool;)Lokhttp3/internal/connection/RealConnectionPool;
+#equalsNonHost(Lokhttp3/Address;Lokhttp3/Address;)Z
+#newWebSocketCall(Lokhttp3/OkHttpClient;Lokhttp3/Request;)Lokhttp3/RealCall;
+#newWebSocketCall(Lokhttp3/OkHttpClient;Lokhttp3/Request;)Lokhttp3/Call;
+#exchange(Lokhttp3/Response;)Lokhttp3/internal/connection/Exchange;
@4.0.0-alpha02
-###okhttp3/OkHttpClient$Companion$1

+###okhttp3/internal/Util$asFactory$$inlined$-deprecated_Factory$1
@4.0.0-alpha02
+#<init>(Lokhttp3/EventListener;)V
+#create(Lokhttp3/Call;)Lokhttp3/EventListener;
@4.0.0-RC1
-###okhttp3/internal/Util$asFactory$$inlined$-deprecated_Factory$1

+###okhttp3/internal/duplex/DuplexRequestBody
@3.13.0
@3.14.0
-###okhttp3/internal/duplex/DuplexRequestBody

+###okhttp3/internal/http2/Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$execute$1
@4.2.0
+#<init>(Ljava/lang/String;Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;)V
+#run()V
@4.3.0
-###okhttp3/internal/http2/Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$execute$1

+###okhttp3/internal/http2/Http2Connection$ReaderRunnable$settings$$inlined$tryExecute$1
@4.2.0
+#<init>(Ljava/lang/String;Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;ZLokhttp3/internal/http2/Settings;)V
+#run()V
@4.3.0
-###okhttp3/internal/http2/Http2Connection$ReaderRunnable$settings$$inlined$tryExecute$1

+###okhttp3/internal/tls/CertificateAuthorityCouncil
@3.1.0
+#<init>([Ljava/security/cert/X509Certificate;)V
+#normalizeCertificateChain(Ljava/util/List;)Ljava/util/List;
@3.1.1
-###okhttp3/internal/tls/CertificateAuthorityCouncil
