
+###org/springframework/security/config/ldap/ContextSourceSettingPostProcessor
@5.4.0
+#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
+#setDefaultNameRequired(Z)V
+#getOrder()I

+###org/springframework/security/config/ldap/LdapUserServiceBeanDefinitionParser
@3.0.0.RELEASE
+#<init>()V

+###org/springframework/security/config/ldap/LdapProviderBeanDefinitionParser
@3.0.0.RELEASE
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/security/config/ldap/LdapServerBeanDefinitionParser
@3.0.0.RELEASE
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/security/config/http/MatcherType
@3.1.0.RELEASE
+#values()[Lorg/springframework/security/config/http/MatcherType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/config/http/MatcherType;
+#createMatcher(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/beans/factory/config/BeanDefinition;
@4.1.1.RELEASE
+#createMatcher(Lorg/springframework/beans/factory/xml/ParserContext;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/beans/factory/config/BeanDefinition;
-#createMatcher(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/beans/factory/config/BeanDefinition;
@4.1.2.RELEASE
+#createMatcher(Lorg/springframework/beans/factory/xml/ParserContext;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/security/config/http/UserDetailsServiceFactoryBean
@3.1.0.RELEASE
+#<init>()V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V

+###org/springframework/security/config/http/FilterChainMapBeanDefinitionDecorator
@3.0.0.RELEASE
+#<init>()V
+#decorate(Lorg/w3c/dom/Node;Lorg/springframework/beans/factory/config/BeanDefinitionHolder;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinitionHolder;

+###org/springframework/security/config/http/HeadersBeanDefinitionParser
@3.2.0.RELEASE
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/security/config/http/FilterInvocationSecurityMetadataSourceParser
@3.0.0.RELEASE
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/security/config/http/FormLoginBeanDefinitionParser
@3.0.0.RELEASE
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/security/config/http/CsrfBeanDefinitionParser
@3.2.0.RELEASE
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/security/config/http/HttpSecurityBeanDefinitionParser
@3.0.0.RELEASE
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/security/config/http/CorsBeanDefinitionParser
@4.1.1.RELEASE
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/BeanMetadataElement;
+#getSource(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/BeanMetadataElement;

+###org/springframework/security/config/http/ChannelAttributeFactory
@3.0.0.RELEASE
+#<init>()V
+#createChannelAttributes(Ljava/lang/String;)Ljava/util/List;
@5.4.0
-#<init>()V

+###org/springframework/security/config/http/DefaultFilterChainValidator
@3.0.0.RELEASE
+#<init>()V
+#validate(Lorg/springframework/security/web/FilterChainProxy;)V

+###org/springframework/security/config/http/HttpFirewallBeanDefinitionParser
@3.0.4.RELEASE
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/security/config/http/FilterChainBeanDefinitionParser
@3.1.0.RELEASE
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/security/config/http/SessionCreationPolicy
@3.2.0.RELEASE
+#values()[Lorg/springframework/security/config/http/SessionCreationPolicy;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/config/http/SessionCreationPolicy;

+###org/springframework/security/config/crypto/RsaKeyConversionServicePostProcessor
@5.2.0.RELEASE
+#<init>()V
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V

+###org/springframework/security/config/Customizer
@5.2.0.RELEASE
+#customize(Ljava/lang/Object;)V
+#withDefaults()Lorg/springframework/security/config/Customizer;

+###org/springframework/security/config/debug/SecurityDebugBeanFactoryPostProcessor
@3.1.0.RELEASE
+#<init>()V
+#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@3.1.1.RELEASE
+#postProcessBeanDefinitionRegistry(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V

+###org/springframework/security/config/authentication/AuthenticationManagerBeanDefinitionParser
@3.0.0.RELEASE
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/security/config/authentication/AuthenticationProviderBeanDefinitionParser
@3.0.0.RELEASE
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/security/config/authentication/AbstractUserDetailsServiceBeanDefinitionParser
@3.0.0.RELEASE
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/security/config/authentication/JdbcUserServiceBeanDefinitionParser
@3.0.0.RELEASE
+#<init>()V

+###org/springframework/security/config/authentication/AuthenticationManagerFactoryBean
@3.0.0.RELEASE
+#<init>()V
+#getObject()Lorg/springframework/security/authentication/AuthenticationManager;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#getObject()Ljava/lang/Object;
@6.0.0
+#setObservationRegistry(Lio/micrometer/observation/ObservationRegistry;)V

+###org/springframework/security/config/authentication/UserServiceBeanDefinitionParser
@3.0.0.RELEASE
+#<init>()V

+###org/springframework/security/config/authentication/AuthenticationManagerBeanDefinitionParser$NullAuthenticationProvider
@3.0.0.RELEASE
+#<init>()V
+#authenticate(Lorg/springframework/security/core/Authentication;)Lorg/springframework/security/core/Authentication;
+#supports(Ljava/lang/Class;)Z

+###org/springframework/security/config/authentication/PasswordEncoderParser
@3.0.0.RELEASE
+#<init>(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)V
+#createPasswordEncoderBeanDefinition(Ljava/lang/String;Z)Lorg/springframework/beans/factory/config/BeanDefinition;
+#getPasswordEncoder()Lorg/springframework/beans/BeanMetadataElement;
+#getSaltSource()Lorg/springframework/beans/BeanMetadataElement;
@5.0.0.RELEASE
-#getSaltSource()Lorg/springframework/beans/BeanMetadataElement;

+###org/springframework/security/config/provisioning/UserDetailsManagerResourceFactoryBean
@5.0.0.RELEASE
+#<init>()V
+#getObject()Lorg/springframework/security/provisioning/InMemoryUserDetailsManager;
+#getObjectType()Ljava/lang/Class;
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#setResourceLocation(Ljava/lang/String;)V
+#setResource(Lorg/springframework/core/io/Resource;)V
+#fromResourceLocation(Ljava/lang/String;)Lorg/springframework/security/config/provisioning/UserDetailsManagerResourceFactoryBean;
+#fromResource(Lorg/springframework/core/io/Resource;)Lorg/springframework/security/config/provisioning/UserDetailsManagerResourceFactoryBean;
+#fromString(Ljava/lang/String;)Lorg/springframework/security/config/provisioning/UserDetailsManagerResourceFactoryBean;
+#getObject()Ljava/lang/Object;

+###org/springframework/security/config/method/GlobalMethodSecurityBeanDefinitionParser
@3.0.0.RELEASE
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/security/config/method/InterceptMethodsBeanDefinitionDecorator
@3.0.0.RELEASE
+#<init>()V
+#decorate(Lorg/w3c/dom/Node;Lorg/springframework/beans/factory/config/BeanDefinitionHolder;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinitionHolder;

+###org/springframework/security/config/method/MethodSecurityMetadataSourceBeanDefinitionParser
@3.1.0.RELEASE
+#<init>()V
+#parseInternal(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/support/AbstractBeanDefinition;

+###org/springframework/security/config/BeanIds
@3.0.0.RELEASE
+#<init>()V

+###org/springframework/security/config/DebugBeanDefinitionParser
@3.1.0.RELEASE
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/security/config/web/server/ServerHttpSecurity$HttpBasicSpec
@5.0.0.RELEASE
+#authenticationManager(Lorg/springframework/security/authentication/ReactiveAuthenticationManager;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HttpBasicSpec;
+#securityContextRepository(Lorg/springframework/security/web/server/context/ServerSecurityContextRepository;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HttpBasicSpec;
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#disable()Lorg/springframework/security/config/web/server/ServerHttpSecurity;
@5.2.0.RELEASE
+#authenticationEntryPoint(Lorg/springframework/security/web/server/ServerAuthenticationEntryPoint;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HttpBasicSpec;
@5.8.0
+#authenticationFailureHandler(Lorg/springframework/security/web/server/authentication/ServerAuthenticationFailureHandler;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HttpBasicSpec;

+###org/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$FeaturePolicySpec
@5.1.0.RELEASE
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;

+###org/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$FrameOptionsSpec
@5.0.0.RELEASE
+#mode(Lorg/springframework/security/web/server/header/XFrameOptionsServerHttpHeadersWriter$Mode;)V
+#disable()V
@5.0.4.RELEASE
+#mode(Lorg/springframework/security/web/server/header/XFrameOptionsServerHttpHeadersWriter$Mode;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$FrameOptionsSpec;
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;
+#disable()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;
-#mode(Lorg/springframework/security/web/server/header/XFrameOptionsServerHttpHeadersWriter$Mode;)V
-#disable()V
@5.1.0.RELEASE
+#mode(Lorg/springframework/security/web/server/header/XFrameOptionsServerHttpHeadersWriter$Mode;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;
-#mode(Lorg/springframework/security/web/server/header/XFrameOptionsServerHttpHeadersWriter$Mode;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$FrameOptionsSpec;
-#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;

+###org/springframework/security/config/web/server/ServerHttpSecurity$AuthorizeExchangeSpec
@5.0.0.RELEASE
+#<init>(Lorg/springframework/security/config/web/server/ServerHttpSecurity;)V
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#anyExchange()Lorg/springframework/security/config/web/server/ServerHttpSecurity$AuthorizeExchangeSpec$Access;
+#anyExchange()Ljava/lang/Object;

+###org/springframework/security/config/web/server/ServerHttpSecurity$FormLoginSpec
@5.0.0.RELEASE
+#authenticationManager(Lorg/springframework/security/authentication/ReactiveAuthenticationManager;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$FormLoginSpec;
+#authenticationSuccessHandler(Lorg/springframework/security/web/server/authentication/ServerAuthenticationSuccessHandler;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$FormLoginSpec;
+#loginPage(Ljava/lang/String;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$FormLoginSpec;
+#authenticationEntryPoint(Lorg/springframework/security/web/server/ServerAuthenticationEntryPoint;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$FormLoginSpec;
+#requiresAuthenticationMatcher(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$FormLoginSpec;
+#authenticationFailureHandler(Lorg/springframework/security/web/server/authentication/ServerAuthenticationFailureHandler;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$FormLoginSpec;
+#securityContextRepository(Lorg/springframework/security/web/server/context/ServerSecurityContextRepository;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$FormLoginSpec;
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#disable()Lorg/springframework/security/config/web/server/ServerHttpSecurity;

+###org/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$ReferrerPolicySpec
@5.1.0.RELEASE
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;
@5.2.0.RELEASE
+#policy(Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$ReferrerPolicySpec;

+###org/springframework/security/config/web/server/ServerHttpSecurity$OAuth2LoginSpec
@5.1.0.RELEASE
+#authenticationManager(Lorg/springframework/security/authentication/ReactiveAuthenticationManager;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2LoginSpec;
+#authenticationConverter(Lorg/springframework/security/web/server/authentication/ServerAuthenticationConverter;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2LoginSpec;
+#clientRegistrationRepository(Lorg/springframework/security/oauth2/client/registration/ReactiveClientRegistrationRepository;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2LoginSpec;
+#authorizedClientService(Lorg/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientService;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2LoginSpec;
+#authorizedClientRepository(Lorg/springframework/security/oauth2/client/web/server/ServerOAuth2AuthorizedClientRepository;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2LoginSpec;
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity;
@5.2.0.RELEASE
+#securityContextRepository(Lorg/springframework/security/web/server/context/ServerSecurityContextRepository;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2LoginSpec;
+#authenticationSuccessHandler(Lorg/springframework/security/web/server/authentication/ServerAuthenticationSuccessHandler;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2LoginSpec;
+#authenticationFailureHandler(Lorg/springframework/security/web/server/authentication/ServerAuthenticationFailureHandler;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2LoginSpec;
+#authorizationRequestRepository(Lorg/springframework/security/oauth2/client/web/server/ServerAuthorizationRequestRepository;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2LoginSpec;
+#authorizationRequestResolver(Lorg/springframework/security/oauth2/client/web/server/ServerOAuth2AuthorizationRequestResolver;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2LoginSpec;
+#authenticationMatcher(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2LoginSpec;
@5.8.0
+#authorizationRedirectStrategy(Lorg/springframework/security/web/server/ServerRedirectStrategy;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2LoginSpec;

+###org/springframework/security/config/web/server/ServerHttpSecurity
@5.0.0.RELEASE
+#securityMatcher(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#addFilterAt(Lorg/springframework/web/server/WebFilter;Lorg/springframework/security/config/web/server/SecurityWebFiltersOrder;)Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#securityContextRepository(Lorg/springframework/security/web/server/context/ServerSecurityContextRepository;)Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#csrf()Lorg/springframework/security/config/web/server/ServerHttpSecurity$CsrfSpec;
+#httpBasic()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HttpBasicSpec;
+#formLogin()Lorg/springframework/security/config/web/server/ServerHttpSecurity$FormLoginSpec;
+#headers()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;
+#exceptionHandling()Lorg/springframework/security/config/web/server/ServerHttpSecurity$ExceptionHandlingSpec;
+#authorizeExchange()Lorg/springframework/security/config/web/server/ServerHttpSecurity$AuthorizeExchangeSpec;
+#logout()Lorg/springframework/security/config/web/server/ServerHttpSecurity$LogoutSpec;
+#requestCache()Lorg/springframework/security/config/web/server/ServerHttpSecurity$RequestCacheSpec;
+#authenticationManager(Lorg/springframework/security/authentication/ReactiveAuthenticationManager;)Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#build()Lorg/springframework/security/web/server/SecurityWebFilterChain;
+#http()Lorg/springframework/security/config/web/server/ServerHttpSecurity;
@5.1.0.RELEASE
+#redirectToHttps()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HttpsRedirectSpec;
+#cors()Lorg/springframework/security/config/web/server/ServerHttpSecurity$CorsSpec;
+#oauth2Login()Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2LoginSpec;
+#oauth2Client()Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ClientSpec;
+#oauth2ResourceServer()Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec;
@5.2.0.RELEASE
+#addFilterBefore(Lorg/springframework/web/server/WebFilter;Lorg/springframework/security/config/web/server/SecurityWebFiltersOrder;)Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#addFilterAfter(Lorg/springframework/web/server/WebFilter;Lorg/springframework/security/config/web/server/SecurityWebFiltersOrder;)Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#redirectToHttps(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#csrf(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#cors(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#anonymous()Lorg/springframework/security/config/web/server/ServerHttpSecurity$AnonymousSpec;
+#anonymous(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#httpBasic(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#formLogin(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#x509()Lorg/springframework/security/config/web/server/ServerHttpSecurity$X509Spec;
+#x509(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#oauth2Login(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#oauth2Client(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#oauth2ResourceServer(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#headers(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#exceptionHandling(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#authorizeExchange(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#logout(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#requestCache(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity;
@5.6.0
+#passwordManagement()Lorg/springframework/security/config/web/server/ServerHttpSecurity$PasswordManagementSpec;
+#passwordManagement(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity;

+###org/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ClientSpec
@5.1.0.RELEASE
+#authenticationConverter(Lorg/springframework/security/web/server/authentication/ServerAuthenticationConverter;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ClientSpec;
+#authenticationManager(Lorg/springframework/security/authentication/ReactiveAuthenticationManager;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ClientSpec;
+#clientRegistrationRepository(Lorg/springframework/security/oauth2/client/registration/ReactiveClientRegistrationRepository;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ClientSpec;
+#authorizedClientRepository(Lorg/springframework/security/oauth2/client/web/server/ServerOAuth2AuthorizedClientRepository;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ClientSpec;
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity;
@5.2.0.RELEASE
+#authorizationRequestRepository(Lorg/springframework/security/oauth2/client/web/server/ServerAuthorizationRequestRepository;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ClientSpec;
@5.8.0
+#authorizationRedirectStrategy(Lorg/springframework/security/web/server/ServerRedirectStrategy;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ClientSpec;

+###org/springframework/security/config/web/server/ServerHttpSecurity$HttpsRedirectSpec
@5.1.0.RELEASE
+#<init>(Lorg/springframework/security/config/web/server/ServerHttpSecurity;)V
+#httpsRedirectWhen([Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HttpsRedirectSpec;
+#httpsRedirectWhen(Ljava/util/function/Function;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HttpsRedirectSpec;
+#portMapper(Lorg/springframework/security/web/PortMapper;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HttpsRedirectSpec;
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity;

+###org/springframework/security/config/web/server/ServerHttpSecurity$LogoutSpec
@5.0.0.RELEASE
+#logoutHandler(Lorg/springframework/security/web/server/authentication/logout/ServerLogoutHandler;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$LogoutSpec;
+#logoutUrl(Ljava/lang/String;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$LogoutSpec;
+#requiresLogout(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$LogoutSpec;
+#logoutSuccessHandler(Lorg/springframework/security/web/server/authentication/logout/ServerLogoutSuccessHandler;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$LogoutSpec;
+#disable()Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#configure(Lorg/springframework/security/config/web/server/ServerHttpSecurity;)V
@5.0.4.RELEASE
-#configure(Lorg/springframework/security/config/web/server/ServerHttpSecurity;)V

+###org/springframework/security/config/web/server/ServerHttpSecurity$X509Spec
@5.2.0.RELEASE
+#principalExtractor(Lorg/springframework/security/web/authentication/preauth/x509/X509PrincipalExtractor;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$X509Spec;
+#authenticationManager(Lorg/springframework/security/authentication/ReactiveAuthenticationManager;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$X509Spec;
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity;

+###org/springframework/security/config/web/server/ServerHttpSecurity$CsrfSpec
@5.0.0.RELEASE
+#accessDeniedHandler(Lorg/springframework/security/web/server/authorization/ServerAccessDeniedHandler;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$CsrfSpec;
+#csrfTokenRepository(Lorg/springframework/security/web/server/csrf/ServerCsrfTokenRepository;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$CsrfSpec;
+#requireCsrfProtectionMatcher(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$CsrfSpec;
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#disable()Lorg/springframework/security/config/web/server/ServerHttpSecurity;
@5.2.1.RELEASE
+#tokenFromMultipartDataEnabled(Z)Lorg/springframework/security/config/web/server/ServerHttpSecurity$CsrfSpec;
@5.8.0
*#tokenFromMultipartDataEnabled(Z)Lorg/springframework/security/config/web/server/ServerHttpSecurity$CsrfSpec;[deprecated]
+#csrfTokenRequestHandler(Lorg/springframework/security/web/server/csrf/ServerCsrfTokenRequestHandler;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$CsrfSpec;
@6.0.0
-#tokenFromMultipartDataEnabled(Z)Lorg/springframework/security/config/web/server/ServerHttpSecurity$CsrfSpec;[deprecated]

+###org/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec$OpaqueTokenSpec
@5.2.0.RELEASE
+#introspectionUri(Ljava/lang/String;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec$OpaqueTokenSpec;
+#introspectionClientCredentials(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec$OpaqueTokenSpec;
+#introspector(Lorg/springframework/security/oauth2/server/resource/introspection/ReactiveOpaqueTokenIntrospector;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec$OpaqueTokenSpec;
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec;
@5.8.0
+#authenticationConverter(Lorg/springframework/security/oauth2/server/resource/introspection/ReactiveOpaqueTokenAuthenticationConverter;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec$OpaqueTokenSpec;

+###org/springframework/security/config/web/server/ServerHttpSecurity$RequestCacheSpec
@5.0.0.RELEASE
+#requestCache(Lorg/springframework/security/web/server/savedrequest/ServerRequestCache;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$RequestCacheSpec;
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#disable()Lorg/springframework/security/config/web/server/ServerHttpSecurity;

+###org/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$HstsSpec
@5.0.0.RELEASE
+#maxAge(Ljava/time/Duration;)V
+#includeSubdomains(Z)V
+#disable()V
@5.0.4.RELEASE
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;
+#disable()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;
-#disable()V
@5.1.0.RELEASE
+#maxAge(Ljava/time/Duration;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$HstsSpec;
+#includeSubdomains(Z)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$HstsSpec;
-#maxAge(Ljava/time/Duration;)V
-#includeSubdomains(Z)V
@5.2.0.RELEASE
+#preload(Z)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$HstsSpec;

+###org/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$ContentTypeOptionsSpec
@5.0.0.RELEASE
+#disable()V
@5.0.4.RELEASE
+#disable()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;
-#disable()V

+###org/springframework/security/config/web/server/ServerHttpSecurity$AuthorizeExchangeSpec$Access
@5.0.0.RELEASE
+#<init>(Lorg/springframework/security/config/web/server/ServerHttpSecurity$AuthorizeExchangeSpec;)V
+#permitAll()Lorg/springframework/security/config/web/server/ServerHttpSecurity$AuthorizeExchangeSpec;
+#denyAll()Lorg/springframework/security/config/web/server/ServerHttpSecurity$AuthorizeExchangeSpec;
+#hasRole(Ljava/lang/String;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$AuthorizeExchangeSpec;
+#hasAuthority(Ljava/lang/String;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$AuthorizeExchangeSpec;
+#authenticated()Lorg/springframework/security/config/web/server/ServerHttpSecurity$AuthorizeExchangeSpec;
+#access(Lorg/springframework/security/authorization/ReactiveAuthorizationManager;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$AuthorizeExchangeSpec;
@5.2.0.RELEASE
+#hasAnyRole([Ljava/lang/String;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$AuthorizeExchangeSpec;
+#hasAnyAuthority([Ljava/lang/String;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$AuthorizeExchangeSpec;
@5.7.0
+#hasIpAddress(Ljava/lang/String;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$AuthorizeExchangeSpec;

+###org/springframework/security/config/web/server/SecurityWebFiltersOrder
@5.0.0.RELEASE
+#values()[Lorg/springframework/security/config/web/server/SecurityWebFiltersOrder;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/config/web/server/SecurityWebFiltersOrder;
+#getOrder()I

+###org/springframework/security/config/web/server/ServerHttpSecurity$ExceptionHandlingSpec
@5.0.0.RELEASE
+#authenticationEntryPoint(Lorg/springframework/security/web/server/ServerAuthenticationEntryPoint;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$ExceptionHandlingSpec;
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity;
@5.0.5.RELEASE
+#accessDeniedHandler(Lorg/springframework/security/web/server/authorization/ServerAccessDeniedHandler;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$ExceptionHandlingSpec;

+###org/springframework/security/config/web/server/AbstractServerWebExchangeMatcherRegistry
@5.4.0
+#anyExchange()Ljava/lang/Object;
+#pathMatchers(Lorg/springframework/http/HttpMethod;)Ljava/lang/Object;
+#pathMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;
+#pathMatchers([Ljava/lang/String;)Ljava/lang/Object;
+#matchers([Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)Ljava/lang/Object;

+###org/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec
@5.0.0.RELEASE
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#cache()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$CacheSpec;
+#contentTypeOptions()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$ContentTypeOptionsSpec;
+#frameOptions()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$FrameOptionsSpec;
+#hsts()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$HstsSpec;
+#xssProtection()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$XssProtectionSpec;
@5.0.4.RELEASE
+#disable()Lorg/springframework/security/config/web/server/ServerHttpSecurity;
@5.1.0.RELEASE
+#contentSecurityPolicy(Ljava/lang/String;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$ContentSecurityPolicySpec;
+#featurePolicy(Ljava/lang/String;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$FeaturePolicySpec;
+#referrerPolicy(Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$ReferrerPolicySpec;
+#referrerPolicy()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$ReferrerPolicySpec;
@5.2.0.RELEASE
+#cache(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;
+#contentTypeOptions(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;
+#frameOptions(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;
+#hsts(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;
+#xssProtection(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;
+#contentSecurityPolicy(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;
+#referrerPolicy(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;
@5.3.0.RELEASE
+#writer(Lorg/springframework/security/web/server/header/ServerHttpHeadersWriter;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;
@5.5.0
+#permissionsPolicy()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$PermissionsPolicySpec;
+#permissionsPolicy(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;
@5.6.0
*#featurePolicy(Ljava/lang/String;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$FeaturePolicySpec;[deprecated]
@5.7.0
+#crossOriginOpenerPolicy()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$CrossOriginOpenerPolicySpec;
+#crossOriginOpenerPolicy(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;
+#crossOriginEmbedderPolicy()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$CrossOriginEmbedderPolicySpec;
+#crossOriginEmbedderPolicy(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;
+#crossOriginResourcePolicy()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$CrossOriginResourcePolicySpec;
+#crossOriginResourcePolicy(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;

+###org/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec
@5.1.0.RELEASE
+#<init>(Lorg/springframework/security/config/web/server/ServerHttpSecurity;)V
+#jwt()Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec$JwtSpec;
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity;
@5.1.5.RELEASE
+#bearerTokenConverter(Lorg/springframework/security/web/server/authentication/ServerAuthenticationConverter;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec;
@5.2.0.RELEASE
+#accessDeniedHandler(Lorg/springframework/security/web/server/authorization/ServerAccessDeniedHandler;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec;
+#authenticationEntryPoint(Lorg/springframework/security/web/server/ServerAuthenticationEntryPoint;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec;
+#authenticationManagerResolver(Lorg/springframework/security/authentication/ReactiveAuthenticationManagerResolver;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec;
+#jwt(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec;
+#opaqueToken()Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec$OpaqueTokenSpec;
+#opaqueToken(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec;
@5.8.0
+#authenticationFailureHandler(Lorg/springframework/security/web/server/authentication/ServerAuthenticationFailureHandler;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec;

+###org/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec$JwtSpec
@5.1.0.RELEASE
+#<init>(Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec;)V
+#authenticationManager(Lorg/springframework/security/authentication/ReactiveAuthenticationManager;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec$JwtSpec;
+#jwtDecoder(Lorg/springframework/security/oauth2/jwt/ReactiveJwtDecoder;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec$JwtSpec;
+#publicKey(Ljava/security/interfaces/RSAPublicKey;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec$JwtSpec;
+#jwkSetUri(Ljava/lang/String;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec$JwtSpec;
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec;
@5.1.1.RELEASE
+#jwtAuthenticationConverter(Lorg/springframework/core/convert/converter/Converter;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$OAuth2ResourceServerSpec$JwtSpec;

+###org/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$XssProtectionSpec
@5.0.0.RELEASE
+#disable()V
@5.0.4.RELEASE
+#disable()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;
-#disable()V
@5.8.0
+#headerValue(Lorg/springframework/security/web/server/header/XXssProtectionServerHttpHeadersWriter$HeaderValue;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;

+###org/springframework/security/config/web/server/ServerHttpSecurity$AnonymousSpec
@5.2.0.RELEASE
+#key(Ljava/lang/String;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$AnonymousSpec;
+#principal(Ljava/lang/Object;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$AnonymousSpec;
+#authorities(Ljava/util/List;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$AnonymousSpec;
+#authorities([Ljava/lang/String;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$AnonymousSpec;
+#authenticationFilter(Lorg/springframework/security/web/server/authentication/AnonymousAuthenticationWebFilter;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$AnonymousSpec;
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#disable()Lorg/springframework/security/config/web/server/ServerHttpSecurity;

+###org/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$ContentSecurityPolicySpec
@5.1.0.RELEASE
+#reportOnly(Z)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;
@5.2.0.RELEASE
+#policyDirectives(Ljava/lang/String;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;

+###org/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$CacheSpec
@5.0.0.RELEASE
+#disable()V
@5.0.4.RELEASE
+#disable()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;
-#disable()V

+###org/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$PermissionsPolicySpec
@5.5.0
+#policy(Ljava/lang/String;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$PermissionsPolicySpec;
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;

+###org/springframework/security/config/web/server/ServerHttpSecurity$CorsSpec
@5.1.0.RELEASE
+#configurationSource(Lorg/springframework/web/cors/reactive/CorsConfigurationSource;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$CorsSpec;
+#disable()Lorg/springframework/security/config/web/server/ServerHttpSecurity;
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity;

+###org/springframework/security/config/oauth2/client/ClientRegistrationsBeanDefinitionParser
@5.3.0.RELEASE
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/security/config/oauth2/client/CommonOAuth2Provider
@5.0.0.RELEASE
+#values()[Lorg/springframework/security/config/oauth2/client/CommonOAuth2Provider;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/config/oauth2/client/CommonOAuth2Provider;
+#getBuilder(Ljava/lang/String;)Lorg/springframework/security/oauth2/client/registration/ClientRegistration$Builder;

+###org/springframework/security/config/annotation/SecurityBuilder
@3.2.0.RELEASE
+#build()Ljava/lang/Object;

+###org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder
@3.2.0.RELEASE
+#getOrBuild()Ljava/lang/Object;
+#apply(Lorg/springframework/security/config/annotation/SecurityConfigurerAdapter;)Lorg/springframework/security/config/annotation/SecurityConfigurerAdapter;
+#apply(Lorg/springframework/security/config/annotation/SecurityConfigurer;)Lorg/springframework/security/config/annotation/SecurityConfigurer;
+#setSharedObject(Ljava/lang/Class;Ljava/lang/Object;)V
+#getSharedObject(Ljava/lang/Class;)Ljava/lang/Object;
+#getSharedObjects()Ljava/util/Map;
+#getConfigurers(Ljava/lang/Class;)Ljava/util/List;
+#removeConfigurers(Ljava/lang/Class;)Ljava/util/List;
+#getConfigurer(Ljava/lang/Class;)Lorg/springframework/security/config/annotation/SecurityConfigurer;
+#removeConfigurer(Ljava/lang/Class;)Lorg/springframework/security/config/annotation/SecurityConfigurer;
+#objectPostProcessor(Lorg/springframework/security/config/annotation/ObjectPostProcessor;)Ljava/lang/Object;
@5.3.0.RELEASE
+#objectPostProcessor(Lorg/springframework/security/config/annotation/ObjectPostProcessor;)Lorg/springframework/security/config/annotation/SecurityBuilder;
-#objectPostProcessor(Lorg/springframework/security/config/annotation/ObjectPostProcessor;)Ljava/lang/Object;

+###org/springframework/security/config/annotation/authentication/ProviderManagerBuilder
@3.2.0.RELEASE
+#authenticationProvider(Lorg/springframework/security/authentication/AuthenticationProvider;)Lorg/springframework/security/config/annotation/authentication/ProviderManagerBuilder;

+###org/springframework/security/config/annotation/authentication/configuration/AuthenticationConfiguration
@3.2.0.RELEASE
+#<init>()V
+#authenticationManagerBuilder(Lorg/springframework/security/config/annotation/ObjectPostProcessor;)Lorg/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder;
@3.2.1.RELEASE
+#enableGlobalAuthenticationAutowiredConfigurer(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/security/config/annotation/authentication/configurers/GlobalAuthenticationConfigurerAdapter;
+#getAuthenticationManager()Lorg/springframework/security/authentication/AuthenticationManager;
+#setGlobalAuthenticationConfigurers(Ljava/util/List;)V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#setObjectPostProcessor(Lorg/springframework/security/config/annotation/ObjectPostProcessor;)V
@4.1.0.RELEASE
+#initializeUserDetailsBeanManagerConfigurer(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/security/config/annotation/authentication/configuration/InitializeUserDetailsBeanManagerConfigurer;
+#initializeAuthenticationProviderBeanManagerConfigurer(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/security/config/annotation/authentication/configuration/InitializeAuthenticationProviderBeanManagerConfigurer;
@5.0.0.RELEASE
+#authenticationManagerBuilder(Lorg/springframework/security/config/annotation/ObjectPostProcessor;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder;
+#enableGlobalAuthenticationAutowiredConfigurer(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/security/config/annotation/authentication/configuration/GlobalAuthenticationConfigurerAdapter;
-#authenticationManagerBuilder(Lorg/springframework/security/config/annotation/ObjectPostProcessor;)Lorg/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder;
-#enableGlobalAuthenticationAutowiredConfigurer(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/security/config/annotation/authentication/configurers/GlobalAuthenticationConfigurerAdapter;

+###org/springframework/security/config/annotation/authentication/configuration/EnableGlobalAuthentication
@3.2.1.RELEASE

+###org/springframework/security/config/annotation/authentication/configuration/GlobalAuthenticationConfigurerAdapter
@5.0.0.RELEASE
+#<init>()V
+#init(Lorg/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V

+###org/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer$PasswordCompareConfigurer
@3.2.0.RELEASE
+#passwordEncoder(Lorg/springframework/security/authentication/encoding/PasswordEncoder;)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer$PasswordCompareConfigurer;
+#passwordAttribute(Ljava/lang/String;)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer$PasswordCompareConfigurer;
+#and()Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer;
@5.0.0.RELEASE
+#passwordEncoder(Lorg/springframework/security/crypto/password/PasswordEncoder;)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer$PasswordCompareConfigurer;
-#passwordEncoder(Lorg/springframework/security/authentication/encoding/PasswordEncoder;)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer$PasswordCompareConfigurer;

+###org/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer$ContextSourceBuilder
@3.2.0.RELEASE
+#ldif(Ljava/lang/String;)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer$ContextSourceBuilder;
+#managerDn(Ljava/lang/String;)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer$ContextSourceBuilder;
+#managerPassword(Ljava/lang/String;)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer$ContextSourceBuilder;
+#port(I)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer$ContextSourceBuilder;
+#root(Ljava/lang/String;)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer$ContextSourceBuilder;
+#url(Ljava/lang/String;)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer$ContextSourceBuilder;
+#and()Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer;

+###org/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer
@3.2.0.RELEASE
+#<init>()V
+#withObjectPostProcessor(Lorg/springframework/security/config/annotation/ObjectPostProcessor;)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer;
+#contextSource(Lorg/springframework/ldap/core/support/BaseLdapPathContextSource;)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer;
+#contextSource()Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer$ContextSourceBuilder;
+#passwordEncoder(Lorg/springframework/security/authentication/encoding/PasswordEncoder;)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer;
+#userDnPatterns([Ljava/lang/String;)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer;
+#userDetailsContextMapper(Lorg/springframework/security/ldap/userdetails/UserDetailsContextMapper;)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer;
+#groupRoleAttribute(Ljava/lang/String;)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer;
+#groupSearchBase(Ljava/lang/String;)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer;
+#groupSearchFilter(Ljava/lang/String;)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer;
+#rolePrefix(Ljava/lang/String;)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer;
+#userSearchBase(Ljava/lang/String;)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer;
+#userSearchFilter(Ljava/lang/String;)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer;
+#configure(Lorg/springframework/security/config/annotation/authentication/ProviderManagerBuilder;)V
+#passwordCompare()Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer$PasswordCompareConfigurer;
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@3.2.1.RELEASE
+#ldapAuthoritiesPopulator(Lorg/springframework/security/ldap/userdetails/LdapAuthoritiesPopulator;)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer;
@3.2.4.RELEASE
+#passwordEncoder(Lorg/springframework/security/crypto/password/PasswordEncoder;)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer;
@4.1.1.RELEASE
+#authoritiesMapper(Lorg/springframework/security/core/authority/mapping/GrantedAuthoritiesMapper;)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer;
@5.0.0.RELEASE
-#passwordEncoder(Lorg/springframework/security/authentication/encoding/PasswordEncoder;)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer;
@5.4.0
+#groupSearchSubtree(Z)Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer;

+###org/springframework/security/config/annotation/authentication/configurers/userdetails/UserDetailsAwareConfigurer
@3.2.0.RELEASE
+#<init>()V
+#getUserDetailsService()Lorg/springframework/security/core/userdetails/UserDetailsService;

+###org/springframework/security/config/annotation/authentication/configurers/userdetails/AbstractDaoAuthenticationConfigurer
@5.4.0
+#withObjectPostProcessor(Lorg/springframework/security/config/annotation/ObjectPostProcessor;)Lorg/springframework/security/config/annotation/authentication/configurers/userdetails/AbstractDaoAuthenticationConfigurer;
+#passwordEncoder(Lorg/springframework/security/crypto/password/PasswordEncoder;)Lorg/springframework/security/config/annotation/authentication/configurers/userdetails/AbstractDaoAuthenticationConfigurer;
+#userDetailsPasswordManager(Lorg/springframework/security/core/userdetails/UserDetailsPasswordService;)Lorg/springframework/security/config/annotation/authentication/configurers/userdetails/AbstractDaoAuthenticationConfigurer;
+#configure(Lorg/springframework/security/config/annotation/authentication/ProviderManagerBuilder;)V
+#getUserDetailsService()Lorg/springframework/security/core/userdetails/UserDetailsService;
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V

+###org/springframework/security/config/annotation/authentication/configurers/userdetails/UserDetailsServiceConfigurer
@3.2.0.RELEASE
+#<init>(Lorg/springframework/security/core/userdetails/UserDetailsService;)V
+#configure(Lorg/springframework/security/config/annotation/authentication/ProviderManagerBuilder;)V
+#getUserDetailsService()Lorg/springframework/security/core/userdetails/UserDetailsService;
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@5.4.0
-#getUserDetailsService()Lorg/springframework/security/core/userdetails/UserDetailsService;

+###org/springframework/security/config/annotation/authentication/configurers/userdetails/DaoAuthenticationConfigurer
@3.2.0.RELEASE
+#<init>(Lorg/springframework/security/core/userdetails/UserDetailsService;)V
+#getUserDetailsService()Lorg/springframework/security/core/userdetails/UserDetailsService;
+#configure(Lorg/springframework/security/config/annotation/authentication/ProviderManagerBuilder;)V
@5.4.0
-#getUserDetailsService()Lorg/springframework/security/core/userdetails/UserDetailsService;
-#configure(Lorg/springframework/security/config/annotation/authentication/ProviderManagerBuilder;)V

+###org/springframework/security/config/annotation/authentication/configurers/provisioning/InMemoryUserDetailsManagerConfigurer
@3.2.0.RELEASE
+#<init>()V

+###org/springframework/security/config/annotation/authentication/configurers/provisioning/UserDetailsManagerConfigurer$UserDetailsBuilder
@3.2.0.RELEASE
+#and()Lorg/springframework/security/config/annotation/authentication/configurers/provisioning/UserDetailsManagerConfigurer;
+#password(Ljava/lang/String;)Lorg/springframework/security/config/annotation/authentication/configurers/provisioning/UserDetailsManagerConfigurer$UserDetailsBuilder;
+#roles([Ljava/lang/String;)Lorg/springframework/security/config/annotation/authentication/configurers/provisioning/UserDetailsManagerConfigurer$UserDetailsBuilder;
+#authorities([Lorg/springframework/security/core/GrantedAuthority;)Lorg/springframework/security/config/annotation/authentication/configurers/provisioning/UserDetailsManagerConfigurer$UserDetailsBuilder;
+#authorities(Ljava/util/List;)Lorg/springframework/security/config/annotation/authentication/configurers/provisioning/UserDetailsManagerConfigurer$UserDetailsBuilder;
+#authorities([Ljava/lang/String;)Lorg/springframework/security/config/annotation/authentication/configurers/provisioning/UserDetailsManagerConfigurer$UserDetailsBuilder;
+#accountExpired(Z)Lorg/springframework/security/config/annotation/authentication/configurers/provisioning/UserDetailsManagerConfigurer$UserDetailsBuilder;
+#accountLocked(Z)Lorg/springframework/security/config/annotation/authentication/configurers/provisioning/UserDetailsManagerConfigurer$UserDetailsBuilder;
+#credentialsExpired(Z)Lorg/springframework/security/config/annotation/authentication/configurers/provisioning/UserDetailsManagerConfigurer$UserDetailsBuilder;
+#disabled(Z)Lorg/springframework/security/config/annotation/authentication/configurers/provisioning/UserDetailsManagerConfigurer$UserDetailsBuilder;

+###org/springframework/security/config/annotation/authentication/configurers/provisioning/JdbcUserDetailsManagerConfigurer
@3.2.0.RELEASE
+#<init>(Lorg/springframework/security/provisioning/JdbcUserDetailsManager;)V
+#<init>()V
+#dataSource(Ljavax/sql/DataSource;)Lorg/springframework/security/config/annotation/authentication/configurers/provisioning/JdbcUserDetailsManagerConfigurer;
+#usersByUsernameQuery(Ljava/lang/String;)Lorg/springframework/security/config/annotation/authentication/configurers/provisioning/JdbcUserDetailsManagerConfigurer;
+#authoritiesByUsernameQuery(Ljava/lang/String;)Lorg/springframework/security/config/annotation/authentication/configurers/provisioning/JdbcUserDetailsManagerConfigurer;
+#groupAuthoritiesByUsername(Ljava/lang/String;)Lorg/springframework/security/config/annotation/authentication/configurers/provisioning/JdbcUserDetailsManagerConfigurer;
+#rolePrefix(Ljava/lang/String;)Lorg/springframework/security/config/annotation/authentication/configurers/provisioning/JdbcUserDetailsManagerConfigurer;
+#userCache(Lorg/springframework/security/core/userdetails/UserCache;)Lorg/springframework/security/config/annotation/authentication/configurers/provisioning/JdbcUserDetailsManagerConfigurer;
+#getUserDetailsService()Lorg/springframework/security/provisioning/JdbcUserDetailsManager;
+#withDefaultSchema()Lorg/springframework/security/config/annotation/authentication/configurers/provisioning/JdbcUserDetailsManagerConfigurer;
+#getUserDetailsService()Lorg/springframework/security/core/userdetails/UserDetailsService;

+###org/springframework/security/config/annotation/authentication/configurers/provisioning/UserDetailsManagerConfigurer
@3.2.0.RELEASE
+#withUser(Ljava/lang/String;)Lorg/springframework/security/config/annotation/authentication/configurers/provisioning/UserDetailsManagerConfigurer$UserDetailsBuilder;
@5.0.0.RELEASE
+#withUser(Lorg/springframework/security/core/userdetails/UserDetails;)Lorg/springframework/security/config/annotation/authentication/configurers/provisioning/UserDetailsManagerConfigurer;
+#withUser(Lorg/springframework/security/core/userdetails/User$UserBuilder;)Lorg/springframework/security/config/annotation/authentication/configurers/provisioning/UserDetailsManagerConfigurer;

+###org/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder
@3.2.0.RELEASE
+#<init>(Lorg/springframework/security/config/annotation/ObjectPostProcessor;)V
+#parentAuthenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)Lorg/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder;
+#authenticationEventPublisher(Lorg/springframework/security/authentication/AuthenticationEventPublisher;)Lorg/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder;
+#eraseCredentials(Z)Lorg/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder;
+#inMemoryAuthentication()Lorg/springframework/security/config/annotation/authentication/configurers/provisioning/InMemoryUserDetailsManagerConfigurer;
+#jdbcAuthentication()Lorg/springframework/security/config/annotation/authentication/configurers/provisioning/JdbcUserDetailsManagerConfigurer;
+#userDetailsService(Lorg/springframework/security/core/userdetails/UserDetailsService;)Lorg/springframework/security/config/annotation/authentication/configurers/userdetails/DaoAuthenticationConfigurer;
+#ldapAuthentication()Lorg/springframework/security/config/annotation/authentication/configurers/ldap/LdapAuthenticationProviderConfigurer;
+#authenticationProvider(Lorg/springframework/security/authentication/AuthenticationProvider;)Lorg/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder;
+#getDefaultUserDetailsService()Lorg/springframework/security/core/userdetails/UserDetailsService;
+#authenticationProvider(Lorg/springframework/security/authentication/AuthenticationProvider;)Lorg/springframework/security/config/annotation/authentication/ProviderManagerBuilder;
@3.2.1.RELEASE
+#isConfigured()Z

+###org/springframework/security/config/annotation/method/configuration/EnableReactiveMethodSecurity
@5.0.0.RELEASE
+#proxyTargetClass()Z
+#mode()Lorg/springframework/context/annotation/AdviceMode;
+#order()I
@5.8.0
+#useAuthorizationManager()Z

+###org/springframework/security/config/annotation/method/configuration/EnableGlobalMethodSecurity
@3.2.0.RELEASE
+#prePostEnabled()Z
+#securedEnabled()Z
+#jsr250Enabled()Z
+#proxyTargetClass()Z
+#mode()Lorg/springframework/context/annotation/AdviceMode;
+#order()I

+###org/springframework/security/config/annotation/method/configuration/GlobalMethodSecurityConfiguration
@3.2.0.RELEASE
+#<init>()V
+#methodSecurityInterceptor()Lorg/aopalliance/intercept/MethodInterceptor;
+#methodSecurityMetadataSource()Lorg/springframework/security/access/method/MethodSecurityMetadataSource;
+#preInvocationAuthorizationAdvice()Lorg/springframework/security/access/prepost/PreInvocationAuthorizationAdvice;
+#metaDataSourceAdvisor()Lorg/springframework/security/access/intercept/aopalliance/MethodSecurityMetadataSourceAdvisor;
+#setImportMetadata(Lorg/springframework/core/type/AnnotationMetadata;)V
+#setAuthenticationTrustResolver(Lorg/springframework/security/authentication/AuthenticationTrustResolver;)V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#setObjectPostProcessor(Lorg/springframework/security/config/annotation/ObjectPostProcessor;)V
+#setPermissionEvaluator(Ljava/util/List;)V
@3.2.1.RELEASE
+#setAuthenticationConfiguration(Lorg/springframework/security/config/annotation/authentication/configuration/AuthenticationConfiguration;)V
-#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
@3.2.6.RELEASE
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
-#setAuthenticationConfiguration(Lorg/springframework/security/config/annotation/authentication/configuration/AuthenticationConfiguration;)V
@4.0.0.RELEASE
+#setJsr250MethodSecurityMetadataSource(Lorg/springframework/security/access/annotation/Jsr250MethodSecurityMetadataSource;)V
+#setMethodSecurityExpressionHandler(Ljava/util/List;)V
@4.0.2.RELEASE
-#metaDataSourceAdvisor()Lorg/springframework/security/access/intercept/aopalliance/MethodSecurityMetadataSourceAdvisor;
@4.1.0.RELEASE
+#setRoleHierarchy(Lorg/springframework/security/access/hierarchicalroles/RoleHierarchy;)V
@4.1.1.RELEASE
+#afterSingletonsInstantiated()V
@4.1.2.RELEASE
-#setAuthenticationTrustResolver(Lorg/springframework/security/authentication/AuthenticationTrustResolver;)V
-#setRoleHierarchy(Lorg/springframework/security/access/hierarchicalroles/RoleHierarchy;)V
-#setPermissionEvaluator(Ljava/util/List;)V
@5.1.0.RELEASE
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
-#setJsr250MethodSecurityMetadataSource(Lorg/springframework/security/access/annotation/Jsr250MethodSecurityMetadataSource;)V
-#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
@5.2.0.RELEASE
+#methodSecurityInterceptor(Lorg/springframework/security/access/method/MethodSecurityMetadataSource;)Lorg/aopalliance/intercept/MethodInterceptor;
-#methodSecurityInterceptor()Lorg/aopalliance/intercept/MethodInterceptor;

+###org/springframework/security/config/annotation/rsocket/RSocketSecurity$JwtSpec
@5.2.0.RELEASE
+#authenticationManager(Lorg/springframework/security/authentication/ReactiveAuthenticationManager;)Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$JwtSpec;

+###org/springframework/security/config/annotation/rsocket/RSocketSecurity$SimpleAuthenticationSpec
@5.3.0.RELEASE
+#authenticationManager(Lorg/springframework/security/authentication/ReactiveAuthenticationManager;)Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$SimpleAuthenticationSpec;

+###org/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec
@5.2.0.RELEASE
+#<init>(Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity;)V
+#setup()Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec$Access;
+#anyRequest()Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec$Access;
+#anyExchange()Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec$Access;
+#route(Ljava/lang/String;)Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec$Access;
+#matcher(Lorg/springframework/security/rsocket/util/matcher/PayloadExchangeMatcher;)Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec$Access;

+###org/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec$Access
@5.2.0.RELEASE
+#authenticated()Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec;
+#hasAuthority(Ljava/lang/String;)Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec;
+#hasRole(Ljava/lang/String;)Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec;
+#hasAnyRole([Ljava/lang/String;)Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec;
+#permitAll()Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec;
+#hasAnyAuthority([Ljava/lang/String;)Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec;
+#access(Lorg/springframework/security/authorization/ReactiveAuthorizationManager;)Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec;
+#denyAll()Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$AuthorizePayloadsSpec;

+###org/springframework/security/config/annotation/rsocket/RSocketSecurity
@5.2.0.RELEASE
+#<init>()V
+#addPayloadInterceptor(Lorg/springframework/security/rsocket/api/PayloadInterceptor;)Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity;
+#authenticationManager(Lorg/springframework/security/authentication/ReactiveAuthenticationManager;)Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity;
+#basicAuthentication(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity;
+#jwt(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity;
+#authorizePayload(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity;
+#build()Lorg/springframework/security/rsocket/core/PayloadSocketAcceptorInterceptor;
@5.3.0.RELEASE
+#simpleAuthentication(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity;
*#basicAuthentication(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity;[deprecated]

+###org/springframework/security/config/annotation/rsocket/RSocketSecurity$BasicAuthenticationSpec
@5.2.0.RELEASE
+#authenticationManager(Lorg/springframework/security/authentication/ReactiveAuthenticationManager;)Lorg/springframework/security/config/annotation/rsocket/RSocketSecurity$BasicAuthenticationSpec;

+###org/springframework/security/config/annotation/rsocket/PayloadInterceptorOrder
@5.2.0.RELEASE
+#values()[Lorg/springframework/security/config/annotation/rsocket/PayloadInterceptorOrder;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/config/annotation/rsocket/PayloadInterceptorOrder;
+#getOrder()I

+###org/springframework/security/config/annotation/rsocket/EnableRSocketSecurity
@5.2.0.RELEASE

+###org/springframework/security/config/annotation/AbstractSecurityBuilder
@3.2.0.RELEASE
+#<init>()V
+#build()Ljava/lang/Object;
+#getObject()Ljava/lang/Object;

+###org/springframework/security/config/annotation/AlreadyBuiltException
@3.2.0.RELEASE
+#<init>(Ljava/lang/String;)V

+###org/springframework/security/config/annotation/web/reactive/EnableWebFluxSecurity
@5.0.0.RELEASE

+###org/springframework/security/config/annotation/web/socket/AbstractSecurityWebSocketMessageBrokerConfigurer
@4.0.0.RELEASE
+#<init>()V
+#registerStompEndpoints(Lorg/springframework/web/socket/config/annotation/StompEndpointRegistry;)V
+#addArgumentResolvers(Ljava/util/List;)V
+#configureClientInboundChannel(Lorg/springframework/messaging/simp/config/ChannelRegistration;)V
+#csrfChannelInterceptor()Lorg/springframework/security/messaging/web/csrf/CsrfChannelInterceptor;
+#inboundChannelSecurity()Lorg/springframework/security/messaging/access/intercept/ChannelSecurityInterceptor;
+#securityContextChannelInterceptor()Lorg/springframework/security/messaging/context/SecurityContextChannelInterceptor;
+#inboundMessageSecurityMetadataSource()Lorg/springframework/security/messaging/access/intercept/MessageSecurityMetadataSource;
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#afterSingletonsInstantiated()V
@4.0.2.RELEASE
+#setMessageExpessionHandler(Ljava/util/List;)V
@4.1.0.RELEASE
*#setMessageExpessionHandler(Ljava/util/List;)V[deprecated]
+#setMessageExpressionHandler(Ljava/util/List;)V
+#setObjectPostProcessor(Lorg/springframework/security/config/annotation/ObjectPostProcessor;)V
@5.2.0.RELEASE
+#inboundChannelSecurity(Lorg/springframework/security/messaging/access/intercept/MessageSecurityMetadataSource;)Lorg/springframework/security/messaging/access/intercept/ChannelSecurityInterceptor;
-#inboundChannelSecurity()Lorg/springframework/security/messaging/access/intercept/ChannelSecurityInterceptor;

+###org/springframework/security/config/annotation/web/WebSecurityConfigurer
@3.2.0.RELEASE

+###org/springframework/security/config/annotation/web/servlet/configuration/EnableWebMvcSecurity
@3.2.0.RELEASE

+###org/springframework/security/config/annotation/web/servlet/configuration/WebMvcSecurityConfiguration
@3.2.0.RELEASE
+#<init>()V
+#addArgumentResolvers(Ljava/util/List;)V
+#requestDataValueProcessor()Lorg/springframework/web/servlet/support/RequestDataValueProcessor;

+###org/springframework/security/config/annotation/web/AbstractRequestMatcherRegistry
@3.2.0.RELEASE
+#<init>()V
+#anyRequest()Ljava/lang/Object;
+#antMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;
+#antMatchers([Ljava/lang/String;)Ljava/lang/Object;
+#regexMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;
+#regexMatchers([Ljava/lang/String;)Ljava/lang/Object;
+#requestMatchers([Lorg/springframework/security/web/util/matcher/RequestMatcher;)Ljava/lang/Object;
@3.2.9.RELEASE
+#antMatchers(Lorg/springframework/http/HttpMethod;)Ljava/lang/Object;
@4.0.0.RELEASE
-#antMatchers(Lorg/springframework/http/HttpMethod;)Ljava/lang/Object;
@4.0.3.RELEASE
+#antMatchers(Lorg/springframework/http/HttpMethod;)Ljava/lang/Object;
@4.1.1.RELEASE
+#mvcMatchers([Ljava/lang/String;)Ljava/lang/Object;
+#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;
@5.5.0
+#dispatcherTypeMatchers(Lorg/springframework/http/HttpMethod;[Ljavax/servlet/DispatcherType;)Ljava/lang/Object;
+#dispatcherTypeMatchers([Ljavax/servlet/DispatcherType;)Ljava/lang/Object;
@5.8.0
*#antMatchers(Lorg/springframework/http/HttpMethod;)Ljava/lang/Object;[deprecated]
*#antMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;[deprecated]
*#antMatchers([Ljava/lang/String;)Ljava/lang/Object;[deprecated]
*#mvcMatchers([Ljava/lang/String;)Ljava/lang/Object;[deprecated]
*#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;[deprecated]
*#regexMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;[deprecated]
*#regexMatchers([Ljava/lang/String;)Ljava/lang/Object;[deprecated]
+#requestMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;
+#requestMatchers([Ljava/lang/String;)Ljava/lang/Object;
+#requestMatchers(Lorg/springframework/http/HttpMethod;)Ljava/lang/Object;
@6.0.0
+#dispatcherTypeMatchers(Lorg/springframework/http/HttpMethod;[Ljakarta/servlet/DispatcherType;)Ljava/lang/Object;
+#dispatcherTypeMatchers([Ljakarta/servlet/DispatcherType;)Ljava/lang/Object;
-#antMatchers(Lorg/springframework/http/HttpMethod;)Ljava/lang/Object;[deprecated]
-#antMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;[deprecated]
-#antMatchers([Ljava/lang/String;)Ljava/lang/Object;[deprecated]
-#mvcMatchers([Ljava/lang/String;)Ljava/lang/Object;[deprecated]
-#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;[deprecated]
-#regexMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;[deprecated]
-#regexMatchers([Ljava/lang/String;)Ljava/lang/Object;[deprecated]
-#dispatcherTypeMatchers(Lorg/springframework/http/HttpMethod;[Ljavax/servlet/DispatcherType;)Ljava/lang/Object;
-#dispatcherTypeMatchers([Ljavax/servlet/DispatcherType;)Ljava/lang/Object;

+###org/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry$Constraint
@4.0.0.RELEASE
+#hasRole(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry;
+#hasAnyRole([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry;
+#hasAuthority(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry;
+#hasAnyAuthority([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry;
+#permitAll()Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry;
+#anonymous()Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry;
+#rememberMe()Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry;
+#denyAll()Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry;
+#authenticated()Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry;
+#fullyAuthenticated()Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry;
+#access(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry;

+###org/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry
@4.0.0.RELEASE
+#<init>()V
+#anyMessage()Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry$Constraint;
+#nullDestMatcher()Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry$Constraint;
+#simpTypeMatchers([Lorg/springframework/messaging/simp/SimpMessageType;)Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry$Constraint;
+#simpDestMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry$Constraint;
+#simpMessageDestMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry$Constraint;
+#simpSubscribeDestMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry$Constraint;
+#simpDestPathMatcher(Lorg/springframework/util/PathMatcher;)Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry;
+#matchers([Lorg/springframework/security/messaging/util/matcher/MessageMatcher;)Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry$Constraint;
@4.0.2.RELEASE
+#expressionHandler(Lorg/springframework/security/access/expression/SecurityExpressionHandler;)Lorg/springframework/security/config/annotation/web/messaging/MessageSecurityMetadataSourceRegistry;

+###org/springframework/security/config/annotation/web/configuration/EnableWebSecurity
@3.2.0.RELEASE
+#debug()Z

+###org/springframework/security/config/annotation/web/configuration/WebSecurityCustomizer
@5.4.0
+#customize(Lorg/springframework/security/config/annotation/web/builders/WebSecurity;)V

+###org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration
@3.2.0.RELEASE
+#<init>()V
+#webSecurityExpressionHandler()Lorg/springframework/security/access/expression/SecurityExpressionHandler;
+#springSecurityFilterChain()Ljavax/servlet/Filter;
+#privilegeEvaluator()Lorg/springframework/security/web/access/WebInvocationPrivilegeEvaluator;
+#setFilterChainProxySecurityConfigurer(Lorg/springframework/security/config/annotation/ObjectPostProcessor;Ljava/util/List;)V
+#setImportMetadata(Lorg/springframework/core/type/AnnotationMetadata;)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
@3.2.1.RELEASE
+#autowiredWebSecurityConfigurersIgnoreParents(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)Lorg/springframework/security/config/annotation/web/configuration/AutowiredWebSecurityConfigurersIgnoreParents;
@3.2.6.RELEASE
+#delegatingApplicationListener()Lorg/springframework/security/context/DelegatingApplicationListener;
@5.2.0.RELEASE
+#conversionServicePostProcessor()Lorg/springframework/beans/factory/config/BeanFactoryPostProcessor;
@5.7.0
+#setFilterChainProxySecurityConfigurer(Lorg/springframework/security/config/annotation/ObjectPostProcessor;Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
-#setFilterChainProxySecurityConfigurer(Lorg/springframework/security/config/annotation/ObjectPostProcessor;Ljava/util/List;)V
-#autowiredWebSecurityConfigurersIgnoreParents(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)Lorg/springframework/security/config/annotation/web/configuration/AutowiredWebSecurityConfigurersIgnoreParents;
@6.0.0
+#springSecurityFilterChain()Ljakarta/servlet/Filter;
-#springSecurityFilterChain()Ljavax/servlet/Filter;

+###org/springframework/security/config/annotation/web/configuration/AutowiredWebSecurityConfigurersIgnoreParents
@5.4.0
+#getWebSecurityConfigurers()Ljava/util/List;

+###org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter
@3.2.0.RELEASE
+#authenticationManagerBean()Lorg/springframework/security/authentication/AuthenticationManager;
+#userDetailsServiceBean()Lorg/springframework/security/core/userdetails/UserDetailsService;
+#init(Lorg/springframework/security/config/annotation/web/builders/WebSecurity;)V
+#configure(Lorg/springframework/security/config/annotation/web/builders/WebSecurity;)V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#setTrustResolver(Lorg/springframework/security/authentication/AuthenticationTrustResolver;)V
+#setContentNegotationStrategy(Lorg/springframework/web/accept/ContentNegotiationStrategy;)V
+#setObjectPostProcessor(Lorg/springframework/security/config/annotation/ObjectPostProcessor;)V
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@3.2.1.RELEASE
+#setAuthenticationConfiguration(Lorg/springframework/security/config/annotation/authentication/configuration/AuthenticationConfiguration;)V
@6.0.0
-###org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter

+###org/springframework/security/config/annotation/web/configurers/AnonymousConfigurer
@3.2.0.RELEASE
+#<init>()V
+#key(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/AnonymousConfigurer;
+#principal(Ljava/lang/Object;)Lorg/springframework/security/config/annotation/web/configurers/AnonymousConfigurer;
+#authorities(Ljava/util/List;)Lorg/springframework/security/config/annotation/web/configurers/AnonymousConfigurer;
+#authorities([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/AnonymousConfigurer;
+#authenticationProvider(Lorg/springframework/security/authentication/AuthenticationProvider;)Lorg/springframework/security/config/annotation/web/configurers/AnonymousConfigurer;
+#authenticationFilter(Lorg/springframework/security/web/authentication/AnonymousAuthenticationFilter;)Lorg/springframework/security/config/annotation/web/configurers/AnonymousConfigurer;
+#init(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@4.2.0.RELEASE
-#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;

+###org/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry
@5.5.0
+#mvcMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$MvcMatchersAuthorizedUrl;
+#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$MvcMatchersAuthorizedUrl;
+#withObjectPostProcessor(Lorg/springframework/security/config/annotation/ObjectPostProcessor;)Lorg/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry;
+#and()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;
+#mvcMatchers([Ljava/lang/String;)Ljava/lang/Object;
@5.7.0
+#shouldFilterAllDispatcherTypes(Z)Lorg/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry;
@5.8.0
*#mvcMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$MvcMatchersAuthorizedUrl;[deprecated]
*#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$MvcMatchersAuthorizedUrl;[deprecated]
*#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;[deprecated]
*#mvcMatchers([Ljava/lang/String;)Ljava/lang/Object;[deprecated]
@6.0.0
-#mvcMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$MvcMatchersAuthorizedUrl;[deprecated]
-#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$MvcMatchersAuthorizedUrl;[deprecated]
-#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;[deprecated]
-#mvcMatchers([Ljava/lang/String;)Ljava/lang/Object;[deprecated]

+###org/springframework/security/config/annotation/web/configurers/HeadersConfigurer$ContentSecurityPolicyConfig
@4.1.0.RELEASE
+#reportOnly()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$ContentSecurityPolicyConfig;
+#and()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
@5.2.0.RELEASE
+#policyDirectives(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$ContentSecurityPolicyConfig;

+###org/springframework/security/config/annotation/web/configurers/AbstractAuthenticationFilterConfigurer
@3.2.0.RELEASE
+#defaultSuccessUrl(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/AbstractAuthenticationFilterConfigurer;
+#defaultSuccessUrl(Ljava/lang/String;Z)Lorg/springframework/security/config/annotation/web/configurers/AbstractAuthenticationFilterConfigurer;
+#loginProcessingUrl(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/AbstractAuthenticationFilterConfigurer;
+#authenticationDetailsSource(Lorg/springframework/security/authentication/AuthenticationDetailsSource;)Lorg/springframework/security/config/annotation/web/configurers/AbstractAuthenticationFilterConfigurer;
+#successHandler(Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;)Lorg/springframework/security/config/annotation/web/configurers/AbstractAuthenticationFilterConfigurer;
+#permitAll()Lorg/springframework/security/config/annotation/web/configurers/AbstractAuthenticationFilterConfigurer;
+#permitAll(Z)Lorg/springframework/security/config/annotation/web/configurers/AbstractAuthenticationFilterConfigurer;
+#failureUrl(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/AbstractAuthenticationFilterConfigurer;
+#failureHandler(Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;)Lorg/springframework/security/config/annotation/web/configurers/AbstractAuthenticationFilterConfigurer;
+#init(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#isCustomLoginPage()Z
+#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@4.2.0.RELEASE
-#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
@5.7.0
+#securityContextRepository(Lorg/springframework/security/web/context/SecurityContextRepository;)Lorg/springframework/security/config/annotation/web/configurers/AbstractAuthenticationFilterConfigurer;

+###org/springframework/security/config/annotation/web/configurers/HeadersConfigurer$ContentTypeOptionsConfig
@4.0.0.RELEASE
+#disable()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
+#and()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;

+###org/springframework/security/config/annotation/web/configurers/HttpBasicConfigurer
@3.2.0.RELEASE
+#<init>()V
+#realmName(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/HttpBasicConfigurer;
+#authenticationEntryPoint(Lorg/springframework/security/web/AuthenticationEntryPoint;)Lorg/springframework/security/config/annotation/web/configurers/HttpBasicConfigurer;
+#authenticationDetailsSource(Lorg/springframework/security/authentication/AuthenticationDetailsSource;)Lorg/springframework/security/config/annotation/web/configurers/HttpBasicConfigurer;
+#init(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@4.2.0.RELEASE
-#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;

+###org/springframework/security/config/annotation/web/configurers/FormLoginConfigurer
@3.2.0.RELEASE
+#<init>()V
+#loginPage(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/FormLoginConfigurer;
+#usernameParameter(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/FormLoginConfigurer;
+#passwordParameter(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/FormLoginConfigurer;
+#init(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#loginPage(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/AbstractAuthenticationFilterConfigurer;
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@4.1.0.RELEASE
+#failureForwardUrl(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/FormLoginConfigurer;
+#successForwardUrl(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/FormLoginConfigurer;

+###org/springframework/security/config/annotation/web/configurers/PortMapperConfigurer$HttpPortMapping
@3.2.0.RELEASE
+#mapsTo(I)Lorg/springframework/security/config/annotation/web/configurers/PortMapperConfigurer;

+###org/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer$RequiresChannelUrl
@3.2.0.RELEASE
+#requiresSecure()Lorg/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer$ChannelRequestMatcherRegistry;
+#requiresInsecure()Lorg/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer$ChannelRequestMatcherRegistry;
+#requires(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer$ChannelRequestMatcherRegistry;

+###org/springframework/security/config/annotation/web/configurers/HeadersConfigurer$HpkpConfig
@4.1.0.RELEASE
+#withPins(Ljava/util/Map;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$HpkpConfig;
+#addSha256Pins([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$HpkpConfig;
+#maxAgeInSeconds(J)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$HpkpConfig;
+#includeSubDomains(Z)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$HpkpConfig;
+#reportOnly(Z)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$HpkpConfig;
+#reportUri(Ljava/net/URI;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$HpkpConfig;
+#reportUri(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$HpkpConfig;
+#disable()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
+#and()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;

+###org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer
@3.2.0.RELEASE
+#<init>()V
+#getRegistry()Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry;
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
@4.1.1.RELEASE
+#<init>(Lorg/springframework/context/ApplicationContext;)V
-#<init>()V
@4.2.0.RELEASE
-#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
@5.4.0
-#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V

+###org/springframework/security/config/annotation/web/configurers/LogoutConfigurer
@3.2.0.RELEASE
+#<init>()V
+#addLogoutHandler(Lorg/springframework/security/web/authentication/logout/LogoutHandler;)Lorg/springframework/security/config/annotation/web/configurers/LogoutConfigurer;
+#invalidateHttpSession(Z)Lorg/springframework/security/config/annotation/web/configurers/LogoutConfigurer;
+#logoutUrl(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/LogoutConfigurer;
+#logoutRequestMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)Lorg/springframework/security/config/annotation/web/configurers/LogoutConfigurer;
+#logoutSuccessUrl(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/LogoutConfigurer;
+#permitAll()Lorg/springframework/security/config/annotation/web/configurers/LogoutConfigurer;
+#deleteCookies([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/LogoutConfigurer;
+#logoutSuccessHandler(Lorg/springframework/security/web/authentication/logout/LogoutSuccessHandler;)Lorg/springframework/security/config/annotation/web/configurers/LogoutConfigurer;
+#permitAll(Z)Lorg/springframework/security/config/annotation/web/configurers/LogoutConfigurer;
+#init(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@3.2.9.RELEASE
+#clearAuthentication(Z)Lorg/springframework/security/config/annotation/web/configurers/LogoutConfigurer;
@4.0.0.RELEASE
-#clearAuthentication(Z)Lorg/springframework/security/config/annotation/web/configurers/LogoutConfigurer;
@4.0.3.RELEASE
+#clearAuthentication(Z)Lorg/springframework/security/config/annotation/web/configurers/LogoutConfigurer;
@4.1.0.RELEASE
+#defaultLogoutSuccessHandlerFor(Lorg/springframework/security/web/authentication/logout/LogoutSuccessHandler;Lorg/springframework/security/web/util/matcher/RequestMatcher;)Lorg/springframework/security/config/annotation/web/configurers/LogoutConfigurer;
@4.2.0.RELEASE
-#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
@5.6.0
+#getLogoutSuccessHandler()Lorg/springframework/security/web/authentication/logout/LogoutSuccessHandler;
+#getLogoutHandlers()Ljava/util/List;

+###org/springframework/security/config/annotation/web/configurers/X509Configurer
@3.2.0.RELEASE
+#<init>()V
+#x509AuthenticationFilter(Lorg/springframework/security/web/authentication/preauth/x509/X509AuthenticationFilter;)Lorg/springframework/security/config/annotation/web/configurers/X509Configurer;
+#authenticationDetailsSource(Lorg/springframework/security/authentication/AuthenticationDetailsSource;)Lorg/springframework/security/config/annotation/web/configurers/X509Configurer;
+#userDetailsService(Lorg/springframework/security/core/userdetails/UserDetailsService;)Lorg/springframework/security/config/annotation/web/configurers/X509Configurer;
+#authenticationUserDetailsService(Lorg/springframework/security/core/userdetails/AuthenticationUserDetailsService;)Lorg/springframework/security/config/annotation/web/configurers/X509Configurer;
+#subjectPrincipalRegex(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/X509Configurer;
+#init(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@4.2.0.RELEASE
-#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
@5.1.0.RELEASE
+#x509PrincipalExtractor(Lorg/springframework/security/web/authentication/preauth/x509/X509PrincipalExtractor;)Lorg/springframework/security/config/annotation/web/configurers/X509Configurer;

+###org/springframework/security/config/annotation/web/configurers/CsrfConfigurer
@3.2.0.RELEASE
+#<init>()V
+#csrfTokenRepository(Lorg/springframework/security/web/csrf/CsrfTokenRepository;)Lorg/springframework/security/config/annotation/web/configurers/CsrfConfigurer;
+#requireCsrfProtectionMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)Lorg/springframework/security/config/annotation/web/configurers/CsrfConfigurer;
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@4.0.0.RELEASE
+#ignoringAntMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/CsrfConfigurer;
@4.1.1.RELEASE
+#<init>(Lorg/springframework/context/ApplicationContext;)V
-#<init>()V
@4.2.0.RELEASE
-#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
@5.1.0.RELEASE
+#ignoringRequestMatchers([Lorg/springframework/security/web/util/matcher/RequestMatcher;)Lorg/springframework/security/config/annotation/web/configurers/CsrfConfigurer;
@5.2.0.RELEASE
+#sessionAuthenticationStrategy(Lorg/springframework/security/web/authentication/session/SessionAuthenticationStrategy;)Lorg/springframework/security/config/annotation/web/configurers/CsrfConfigurer;
@5.8.0
+#csrfTokenRequestHandler(Lorg/springframework/security/web/csrf/CsrfTokenRequestHandler;)Lorg/springframework/security/config/annotation/web/configurers/CsrfConfigurer;
*#ignoringAntMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/CsrfConfigurer;[deprecated]
+#ignoringRequestMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/CsrfConfigurer;
@6.0.0
-#ignoringAntMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/CsrfConfigurer;[deprecated]

+###org/springframework/security/config/annotation/web/configurers/AbstractConfigAttributeRequestMatcherRegistry
@3.2.0.RELEASE
+#<init>()V

+###org/springframework/security/config/annotation/web/configurers/RequestCacheConfigurer
@3.2.0.RELEASE
+#<init>()V
+#requestCache(Lorg/springframework/security/web/savedrequest/RequestCache;)Lorg/springframework/security/config/annotation/web/configurers/RequestCacheConfigurer;
+#init(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@4.2.0.RELEASE
-#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
@4.2.10.RELEASE
+#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
@5.0.0.RELEASE
-#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
@5.0.10.RELEASE
+#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
@5.1.0.RELEASE
-#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
@5.1.2.RELEASE
+#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;

+###org/springframework/security/config/annotation/web/configurers/HeadersConfigurer
@3.2.0.RELEASE
+#<init>()V
+#addHeaderWriter(Lorg/springframework/security/web/header/HeaderWriter;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
+#contentTypeOptions()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
+#xssProtection()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
+#cacheControl()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
+#httpStrictTransportSecurity()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
+#frameOptions()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@4.0.0.RELEASE
+#contentTypeOptions()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$ContentTypeOptionsConfig;
+#xssProtection()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$XXssConfig;
+#cacheControl()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$CacheControlConfig;
+#httpStrictTransportSecurity()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$HstsConfig;
+#frameOptions()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$FrameOptionsConfig;
+#defaultsDisabled()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
-#contentTypeOptions()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
-#xssProtection()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
-#cacheControl()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
-#httpStrictTransportSecurity()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
-#frameOptions()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
@4.1.0.RELEASE
+#httpPublicKeyPinning()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$HpkpConfig;
+#contentSecurityPolicy(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$ContentSecurityPolicyConfig;
@4.2.0.RELEASE
+#referrerPolicy()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$ReferrerPolicyConfig;
+#referrerPolicy(Lorg/springframework/security/web/header/writers/ReferrerPolicyHeaderWriter$ReferrerPolicy;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$ReferrerPolicyConfig;
-#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
@5.1.0.RELEASE
+#featurePolicy(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$FeaturePolicyConfig;
@5.2.0.RELEASE
+#contentTypeOptions(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
+#xssProtection(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
+#cacheControl(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
+#httpStrictTransportSecurity(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
+#frameOptions(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
+#httpPublicKeyPinning(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
+#contentSecurityPolicy(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
+#referrerPolicy(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
@5.5.0
*#featurePolicy(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$FeaturePolicyConfig;[deprecated]
+#permissionsPolicy()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$PermissionsPolicyConfig;
+#permissionsPolicy(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$PermissionsPolicyConfig;
@5.7.0
+#crossOriginOpenerPolicy()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$CrossOriginOpenerPolicyConfig;
+#crossOriginOpenerPolicy(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
+#crossOriginEmbedderPolicy()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$CrossOriginEmbedderPolicyConfig;
+#crossOriginEmbedderPolicy(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
+#crossOriginResourcePolicy()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$CrossOriginResourcePolicyConfig;
+#crossOriginResourcePolicy(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
@5.8.0
*#httpPublicKeyPinning()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$HpkpConfig;[deprecated]
*#httpPublicKeyPinning(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;[deprecated]

+###org/springframework/security/config/annotation/web/configurers/HeadersConfigurer$XXssConfig
@4.0.0.RELEASE
+#block(Z)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$XXssConfig;
+#xssProtectionEnabled(Z)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$XXssConfig;
+#disable()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
+#and()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
@5.8.0
*#block(Z)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$XXssConfig;[deprecated]
*#xssProtectionEnabled(Z)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$XXssConfig;[deprecated]
+#headerValue(Lorg/springframework/security/web/header/writers/XXssProtectionHeaderWriter$HeaderValue;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$XXssConfig;
@6.0.0
-#block(Z)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$XXssConfig;[deprecated]
-#xssProtectionEnabled(Z)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$XXssConfig;[deprecated]

+###org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry
@3.2.0.RELEASE
+#<init>(Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer;)V
+#expressionHandler(Lorg/springframework/security/access/expression/SecurityExpressionHandler;)Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry;
+#withObjectPostProcessor(Lorg/springframework/security/config/annotation/ObjectPostProcessor;)Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry;
+#and()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
@4.1.1.RELEASE
-#<init>(Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer;)V
@4.1.2.RELEASE
+#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$MvcMatchersAuthorizedUrl;
+#mvcMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$MvcMatchersAuthorizedUrl;
+#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;
+#mvcMatchers([Ljava/lang/String;)Ljava/lang/Object;
@5.8.0
*#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$MvcMatchersAuthorizedUrl;[deprecated]
*#mvcMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$MvcMatchersAuthorizedUrl;[deprecated]
*#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;[deprecated]
*#mvcMatchers([Ljava/lang/String;)Ljava/lang/Object;[deprecated]
@6.0.0
-#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$MvcMatchersAuthorizedUrl;[deprecated]
-#mvcMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$MvcMatchersAuthorizedUrl;[deprecated]
-#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;[deprecated]
-#mvcMatchers([Ljava/lang/String;)Ljava/lang/Object;[deprecated]

+###org/springframework/security/config/annotation/web/configurers/ServletApiConfigurer
@3.2.0.RELEASE
+#<init>()V
+#rolePrefix(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ServletApiConfigurer;
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@4.2.0.RELEASE
-#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;

+###org/springframework/security/config/annotation/web/configurers/ExceptionHandlingConfigurer
@3.2.0.RELEASE
+#<init>()V
+#accessDeniedPage(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ExceptionHandlingConfigurer;
+#accessDeniedHandler(Lorg/springframework/security/web/access/AccessDeniedHandler;)Lorg/springframework/security/config/annotation/web/configurers/ExceptionHandlingConfigurer;
+#authenticationEntryPoint(Lorg/springframework/security/web/AuthenticationEntryPoint;)Lorg/springframework/security/config/annotation/web/configurers/ExceptionHandlingConfigurer;
+#defaultAuthenticationEntryPointFor(Lorg/springframework/security/web/AuthenticationEntryPoint;Lorg/springframework/security/web/util/matcher/RequestMatcher;)Lorg/springframework/security/config/annotation/web/configurers/ExceptionHandlingConfigurer;
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@4.2.0.RELEASE
-#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
@5.1.0.RELEASE
+#defaultAccessDeniedHandlerFor(Lorg/springframework/security/web/access/AccessDeniedHandler;Lorg/springframework/security/web/util/matcher/RequestMatcher;)Lorg/springframework/security/config/annotation/web/configurers/ExceptionHandlingConfigurer;

+###org/springframework/security/config/annotation/web/configurers/RememberMeConfigurer
@3.2.0.RELEASE
+#<init>()V
+#tokenValiditySeconds(I)Lorg/springframework/security/config/annotation/web/configurers/RememberMeConfigurer;
+#useSecureCookie(Z)Lorg/springframework/security/config/annotation/web/configurers/RememberMeConfigurer;
+#userDetailsService(Lorg/springframework/security/core/userdetails/UserDetailsService;)Lorg/springframework/security/config/annotation/web/configurers/RememberMeConfigurer;
+#tokenRepository(Lorg/springframework/security/web/authentication/rememberme/PersistentTokenRepository;)Lorg/springframework/security/config/annotation/web/configurers/RememberMeConfigurer;
+#key(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/RememberMeConfigurer;
+#authenticationSuccessHandler(Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;)Lorg/springframework/security/config/annotation/web/configurers/RememberMeConfigurer;
+#rememberMeServices(Lorg/springframework/security/web/authentication/RememberMeServices;)Lorg/springframework/security/config/annotation/web/configurers/RememberMeConfigurer;
+#init(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@4.0.0.RELEASE
+#rememberMeParameter(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/RememberMeConfigurer;
@4.0.1.RELEASE
+#rememberMeCookieName(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/RememberMeConfigurer;
@4.1.0.RELEASE
+#rememberMeCookieDomain(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/RememberMeConfigurer;
@4.1.1.RELEASE
+#alwaysRemember(Z)Lorg/springframework/security/config/annotation/web/configurers/RememberMeConfigurer;
@4.2.0.RELEASE
-#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;

+###org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$AuthorizedUrl
@3.2.0.RELEASE
+#not()Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$AuthorizedUrl;
+#hasRole(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry;
+#hasAnyRole([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry;
+#hasAuthority(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry;
+#hasAnyAuthority([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry;
+#hasIpAddress(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry;
+#permitAll()Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry;
+#anonymous()Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry;
+#rememberMe()Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry;
+#denyAll()Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry;
+#authenticated()Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry;
+#fullyAuthenticated()Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry;
+#access(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry;

+###org/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$MvcMatchersAuthorizedUrl
@4.1.2.RELEASE
+#servletPath(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$AuthorizedUrl;
@6.0.0
-###org/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$MvcMatchersAuthorizedUrl

+###org/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$AuthorizedUrl
@3.2.0.RELEASE
+#hasRole(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$StandardInterceptUrlRegistry;
+#hasAnyRole([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$StandardInterceptUrlRegistry;
+#hasAuthority(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$StandardInterceptUrlRegistry;
+#hasAnyAuthority([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$StandardInterceptUrlRegistry;
+#anonymous()Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$StandardInterceptUrlRegistry;
+#access([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$StandardInterceptUrlRegistry;

+###org/springframework/security/config/annotation/web/configurers/AbstractInterceptUrlConfigurer$AbstractInterceptUrlRegistry
@5.4.0
+#accessDecisionManager(Lorg/springframework/security/access/AccessDecisionManager;)Lorg/springframework/security/config/annotation/web/configurers/AbstractInterceptUrlConfigurer$AbstractInterceptUrlRegistry;
+#filterSecurityInterceptorOncePerRequest(Z)Lorg/springframework/security/config/annotation/web/configurers/AbstractInterceptUrlConfigurer$AbstractInterceptUrlRegistry;

+###org/springframework/security/config/annotation/web/configurers/PortMapperConfigurer
@3.2.0.RELEASE
+#<init>()V
+#portMapper(Lorg/springframework/security/web/PortMapper;)Lorg/springframework/security/config/annotation/web/configurers/PortMapperConfigurer;
+#http(I)Lorg/springframework/security/config/annotation/web/configurers/PortMapperConfigurer$HttpPortMapping;
+#init(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@4.2.0.RELEASE
-#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;

+###org/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer
@3.2.0.RELEASE
+#<init>()V
+#getRegistry()Lorg/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer$ChannelRequestMatcherRegistry;
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@4.1.1.RELEASE
+#<init>(Lorg/springframework/context/ApplicationContext;)V
-#<init>()V
@4.2.0.RELEASE
-#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;

+###org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer
@3.2.0.RELEASE
+#<init>()V
+#invalidSessionUrl(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer;
+#sessionAuthenticationErrorUrl(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer;
+#enableSessionUrlRewriting(Z)Lorg/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer;
+#sessionCreationPolicy(Lorg/springframework/security/config/http/SessionCreationPolicy;)Lorg/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer;
+#sessionAuthenticationStrategy(Lorg/springframework/security/web/authentication/session/SessionAuthenticationStrategy;)Lorg/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer;
+#sessionFixation()Lorg/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer$SessionFixationConfigurer;
+#maximumSessions(I)Lorg/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer$ConcurrencyControlConfigurer;
+#init(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@4.1.0.RELEASE
+#invalidSessionStrategy(Lorg/springframework/security/web/session/InvalidSessionStrategy;)Lorg/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer;
@4.2.0.RELEASE
+#sessionAuthenticationFailureHandler(Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;)Lorg/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer;
-#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
@5.2.0.RELEASE
+#sessionFixation(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer;
+#sessionConcurrency(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer;
@5.8.0
+#requireExplicitAuthenticationStrategy(Z)Lorg/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer;

+###org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer$SessionFixationConfigurer
@3.2.0.RELEASE
+#<init>(Lorg/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer;)V
+#newSession()Lorg/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer;
+#migrateSession()Lorg/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer;
+#changeSessionId()Lorg/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer;
+#none()Lorg/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer;

+###org/springframework/security/config/annotation/web/configurers/SecurityContextConfigurer
@3.2.0.RELEASE
+#<init>()V
+#securityContextRepository(Lorg/springframework/security/web/context/SecurityContextRepository;)Lorg/springframework/security/config/annotation/web/configurers/SecurityContextConfigurer;
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@4.2.0.RELEASE
-#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
@5.7.0
+#requireExplicitSave(Z)Lorg/springframework/security/config/annotation/web/configurers/SecurityContextConfigurer;

+###org/springframework/security/config/annotation/web/configurers/HeadersConfigurer$FeaturePolicyConfig
@5.1.0.RELEASE
+#and()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;

+###org/springframework/security/config/annotation/web/configurers/HeadersConfigurer$CacheControlConfig
@4.0.0.RELEASE
+#disable()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
+#and()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;

+###org/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer$AttributeExchangeConfigurer
@3.2.0.RELEASE
+#and()Lorg/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer;
+#attribute(Lorg/springframework/security/openid/OpenIDAttribute;)Lorg/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer$AttributeExchangeConfigurer;
+#attribute(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer$AttributeExchangeConfigurer$AttributeConfigurer;
@5.2.0.RELEASE
+#identifierPattern(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer$AttributeExchangeConfigurer;
+#attribute(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer$AttributeExchangeConfigurer;
@6.0.0
-###org/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer$AttributeExchangeConfigurer

+###org/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer$AttributeExchangeConfigurer$AttributeConfigurer
@3.2.0.RELEASE
+#count(I)Lorg/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer$AttributeExchangeConfigurer$AttributeConfigurer;
+#required(Z)Lorg/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer$AttributeExchangeConfigurer$AttributeConfigurer;
+#type(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer$AttributeExchangeConfigurer$AttributeConfigurer;
+#and()Lorg/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer$AttributeExchangeConfigurer;
@5.2.0.RELEASE
+#name(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer$AttributeExchangeConfigurer$AttributeConfigurer;
@6.0.0
-###org/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer$AttributeExchangeConfigurer$AttributeConfigurer

+###org/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer
@3.2.0.RELEASE
+#<init>()V
+#attributeExchange(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer$AttributeExchangeConfigurer;
+#consumer(Lorg/springframework/security/openid/OpenIDConsumer;)Lorg/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer;
+#consumerManager(Lorg/openid4java/consumer/ConsumerManager;)Lorg/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer;
+#authenticationUserDetailsService(Lorg/springframework/security/core/userdetails/AuthenticationUserDetailsService;)Lorg/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer;
+#loginProcessingUrl(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer;
+#loginPage(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer;
+#init(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#loginPage(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/AbstractAuthenticationFilterConfigurer;
+#loginProcessingUrl(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/AbstractAuthenticationFilterConfigurer;
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@5.2.0.RELEASE
+#attributeExchange(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer;
@6.0.0
-###org/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer

+###org/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$MvcMatchersAuthorizedUrl
@5.5.0
+#servletPath(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$MvcMatchersAuthorizedUrl;
@6.0.0
-###org/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$MvcMatchersAuthorizedUrl

+###org/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer
@5.5.0
+#<init>(Lorg/springframework/context/ApplicationContext;)V
+#getRegistry()Lorg/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry;
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V

+###org/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$AuthorizedUrl
@5.5.0
+#permitAll()Lorg/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry;
+#denyAll()Lorg/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry;
+#hasRole(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry;
+#hasAnyRole([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry;
+#hasAuthority(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry;
+#hasAnyAuthority([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry;
+#authenticated()Lorg/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry;
+#access(Lorg/springframework/security/authorization/AuthorizationManager;)Lorg/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry;
@5.8.0
+#fullyAuthenticated()Lorg/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry;
+#rememberMe()Lorg/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry;
+#anonymous()Lorg/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry;

+###org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer$AuthorizationEndpointConfig
@5.0.0.RELEASE
+#baseUri(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer$AuthorizationEndpointConfig;
+#authorizationRequestRepository(Lorg/springframework/security/oauth2/client/web/AuthorizationRequestRepository;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer$AuthorizationEndpointConfig;
+#and()Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer;
@5.1.0.RELEASE
+#authorizationRequestResolver(Lorg/springframework/security/oauth2/client/web/OAuth2AuthorizationRequestResolver;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer$AuthorizationEndpointConfig;
@5.8.0
+#authorizationRedirectStrategy(Lorg/springframework/security/web/RedirectStrategy;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer$AuthorizationEndpointConfig;

+###org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer
@5.0.0.RELEASE
+#<init>()V
+#clientRegistrationRepository(Lorg/springframework/security/oauth2/client/registration/ClientRegistrationRepository;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer;
+#authorizedClientService(Lorg/springframework/security/oauth2/client/OAuth2AuthorizedClientService;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer;
+#loginPage(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer;
+#authorizationEndpoint()Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer$AuthorizationEndpointConfig;
+#tokenEndpoint()Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer$TokenEndpointConfig;
+#redirectionEndpoint()Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer$RedirectionEndpointConfig;
+#userInfoEndpoint()Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer$UserInfoEndpointConfig;
+#init(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#loginPage(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/AbstractAuthenticationFilterConfigurer;
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@5.0.7.RELEASE
+#loginProcessingUrl(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer;
+#loginProcessingUrl(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/AbstractAuthenticationFilterConfigurer;
@5.1.0.RELEASE
+#authorizedClientRepository(Lorg/springframework/security/oauth2/client/web/OAuth2AuthorizedClientRepository;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer;
@5.2.0.RELEASE
+#authorizationEndpoint(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer;
+#tokenEndpoint(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer;
+#redirectionEndpoint(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer;
+#userInfoEndpoint(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer;

+###org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer$TokenEndpointConfig
@5.0.0.RELEASE
+#accessTokenResponseClient(Lorg/springframework/security/oauth2/client/endpoint/OAuth2AccessTokenResponseClient;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer$TokenEndpointConfig;
+#and()Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer;

+###org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2ClientConfigurer
@5.1.0.RELEASE
+#<init>()V
+#clientRegistrationRepository(Lorg/springframework/security/oauth2/client/registration/ClientRegistrationRepository;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2ClientConfigurer;
+#authorizedClientRepository(Lorg/springframework/security/oauth2/client/web/OAuth2AuthorizedClientRepository;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2ClientConfigurer;
+#authorizedClientService(Lorg/springframework/security/oauth2/client/OAuth2AuthorizedClientService;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2ClientConfigurer;
+#authorizationCodeGrant()Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2ClientConfigurer$AuthorizationCodeGrantConfigurer;
+#init(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@5.2.0.RELEASE
+#authorizationCodeGrant(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2ClientConfigurer;

+###org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer$RedirectionEndpointConfig
@5.0.0.RELEASE
+#baseUri(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer$RedirectionEndpointConfig;
+#and()Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer;

+###org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2ClientConfigurer$AuthorizationCodeGrantConfigurer
@5.1.0.RELEASE
+#authorizationRequestResolver(Lorg/springframework/security/oauth2/client/web/OAuth2AuthorizationRequestResolver;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2ClientConfigurer$AuthorizationCodeGrantConfigurer;
+#authorizationRequestRepository(Lorg/springframework/security/oauth2/client/web/AuthorizationRequestRepository;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2ClientConfigurer$AuthorizationCodeGrantConfigurer;
+#accessTokenResponseClient(Lorg/springframework/security/oauth2/client/endpoint/OAuth2AccessTokenResponseClient;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2ClientConfigurer$AuthorizationCodeGrantConfigurer;
+#and()Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2ClientConfigurer;
@5.8.0
+#authorizationRedirectStrategy(Lorg/springframework/security/web/RedirectStrategy;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2ClientConfigurer$AuthorizationCodeGrantConfigurer;

+###org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer$UserInfoEndpointConfig
@5.0.0.RELEASE
+#userService(Lorg/springframework/security/oauth2/client/userinfo/OAuth2UserService;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer$UserInfoEndpointConfig;
+#oidcUserService(Lorg/springframework/security/oauth2/client/userinfo/OAuth2UserService;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer$UserInfoEndpointConfig;
+#customUserType(Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer$UserInfoEndpointConfig;
+#userAuthoritiesMapper(Lorg/springframework/security/core/authority/mapping/GrantedAuthoritiesMapper;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer$UserInfoEndpointConfig;
+#and()Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer;
@5.4.0
*#customUserType(Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer$UserInfoEndpointConfig;[deprecated]
@6.0.0
-#customUserType(Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer$UserInfoEndpointConfig;[deprecated]

+###org/springframework/security/config/annotation/web/configurers/oauth2/client/ImplicitGrantConfigurer
@5.0.0.RELEASE
+#<init>()V
+#authorizationRequestBaseUri(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/ImplicitGrantConfigurer;
+#clientRegistrationRepository(Lorg/springframework/security/oauth2/client/registration/ClientRegistrationRepository;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/ImplicitGrantConfigurer;
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@6.0.0
-###org/springframework/security/config/annotation/web/configurers/oauth2/client/ImplicitGrantConfigurer

+###org/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer
@5.1.0.RELEASE
+#<init>(Lorg/springframework/context/ApplicationContext;)V
+#accessDeniedHandler(Lorg/springframework/security/web/access/AccessDeniedHandler;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer;
+#authenticationEntryPoint(Lorg/springframework/security/web/AuthenticationEntryPoint;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer;
+#bearerTokenResolver(Lorg/springframework/security/oauth2/server/resource/web/BearerTokenResolver;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer;
+#jwt()Lorg/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer$JwtConfigurer;
+#init(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@5.2.0.RELEASE
+#authenticationManagerResolver(Lorg/springframework/security/authentication/AuthenticationManagerResolver;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer;
+#jwt(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer;
+#opaqueToken()Lorg/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer$OpaqueTokenConfigurer;
+#opaqueToken(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer;

+###org/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer$OpaqueTokenConfigurer
@5.2.0.RELEASE
+#authenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer$OpaqueTokenConfigurer;
+#introspectionUri(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer$OpaqueTokenConfigurer;
+#introspectionClientCredentials(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer$OpaqueTokenConfigurer;
+#introspector(Lorg/springframework/security/oauth2/server/resource/introspection/OpaqueTokenIntrospector;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer$OpaqueTokenConfigurer;
@5.8.0
+#authenticationConverter(Lorg/springframework/security/oauth2/server/resource/introspection/OpaqueTokenAuthenticationConverter;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer$OpaqueTokenConfigurer;

+###org/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer$JwtConfigurer
@5.1.0.RELEASE
+#decoder(Lorg/springframework/security/oauth2/jwt/JwtDecoder;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer$JwtConfigurer;
+#jwkSetUri(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer$JwtConfigurer;
+#jwtAuthenticationConverter(Lorg/springframework/core/convert/converter/Converter;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer$JwtConfigurer;
+#and()Lorg/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer;
@5.2.0.RELEASE
+#authenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)Lorg/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer$JwtConfigurer;

+###org/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer$MvcMatchersRequiresChannelUrl
@4.1.2.RELEASE
+#servletPath(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer$RequiresChannelUrl;
@6.0.0
-###org/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer$MvcMatchersRequiresChannelUrl

+###org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer$ConcurrencyControlConfigurer
@3.2.0.RELEASE
+#expiredUrl(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer$ConcurrencyControlConfigurer;
+#maxSessionsPreventsLogin(Z)Lorg/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer$ConcurrencyControlConfigurer;
+#sessionRegistry(Lorg/springframework/security/core/session/SessionRegistry;)Lorg/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer$ConcurrencyControlConfigurer;
+#and()Lorg/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer;
@4.2.0.RELEASE
+#expiredSessionStrategy(Lorg/springframework/security/web/session/SessionInformationExpiredStrategy;)Lorg/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer$ConcurrencyControlConfigurer;
@5.2.0.RELEASE
+#maximumSessions(I)Lorg/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer$ConcurrencyControlConfigurer;

+###org/springframework/security/config/annotation/web/configurers/DefaultLoginPageConfigurer
@3.2.0.RELEASE
+#<init>()V
+#init(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@4.2.0.RELEASE
-#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;

+###org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$MvcMatchersAuthorizedUrl
@4.1.2.RELEASE
+#servletPath(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$AuthorizedUrl;
@6.0.0
-###org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$MvcMatchersAuthorizedUrl

+###org/springframework/security/config/annotation/web/configurers/AbstractInterceptUrlConfigurer
@5.4.0
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V

+###org/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer
@3.2.0.RELEASE
+#<init>()V
+#getRegistry()Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$StandardInterceptUrlRegistry;
+#withObjectPostProcessor(Lorg/springframework/security/config/annotation/ObjectPostProcessor;)Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer;
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#withObjectPostProcessor(Lorg/springframework/security/config/annotation/ObjectPostProcessor;)Lorg/springframework/security/config/annotation/web/configurers/AbstractHttpConfigurer;
+#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
@4.1.1.RELEASE
+#<init>(Lorg/springframework/context/ApplicationContext;)V
-#<init>()V
@4.2.0.RELEASE
-#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
@5.4.0
-#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V

+###org/springframework/security/config/annotation/web/configurers/HeadersConfigurer$FrameOptionsConfig
@4.0.0.RELEASE
+#deny()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
+#sameOrigin()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
+#disable()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
+#and()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;

+###org/springframework/security/config/annotation/web/configurers/JeeConfigurer
@3.2.0.RELEASE
+#<init>()V
+#mappableAuthorities([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/JeeConfigurer;
+#mappableRoles([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/JeeConfigurer;
+#mappableAuthorities(Ljava/util/Set;)Lorg/springframework/security/config/annotation/web/configurers/JeeConfigurer;
+#authenticatedUserDetailsService(Lorg/springframework/security/core/userdetails/AuthenticationUserDetailsService;)Lorg/springframework/security/config/annotation/web/configurers/JeeConfigurer;
+#j2eePreAuthenticatedProcessingFilter(Lorg/springframework/security/web/authentication/preauth/j2ee/J2eePreAuthenticatedProcessingFilter;)Lorg/springframework/security/config/annotation/web/configurers/JeeConfigurer;
+#init(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@4.2.0.RELEASE
-#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;

+###org/springframework/security/config/annotation/web/configurers/CorsConfigurer
@4.1.1.RELEASE
+#<init>()V
+#configurationSource(Lorg/springframework/web/cors/CorsConfigurationSource;)Lorg/springframework/security/config/annotation/web/configurers/CorsConfigurer;
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@4.2.0.RELEASE
-#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;

+###org/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer$ChannelRequestMatcherRegistry
@3.2.0.RELEASE
+#withObjectPostProcessor(Lorg/springframework/security/config/annotation/ObjectPostProcessor;)Lorg/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer$ChannelRequestMatcherRegistry;
+#channelProcessors(Ljava/util/List;)Lorg/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer$ChannelRequestMatcherRegistry;
+#and()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
@4.1.2.RELEASE
+#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer$MvcMatchersRequiresChannelUrl;
+#mvcMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer$MvcMatchersRequiresChannelUrl;
+#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;
+#mvcMatchers([Ljava/lang/String;)Ljava/lang/Object;
@5.7.0
+#redirectStrategy(Lorg/springframework/security/web/RedirectStrategy;)Lorg/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer$ChannelRequestMatcherRegistry;
@5.8.0
*#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer$MvcMatchersRequiresChannelUrl;[deprecated]
*#mvcMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer$MvcMatchersRequiresChannelUrl;[deprecated]
*#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;[deprecated]
*#mvcMatchers([Ljava/lang/String;)Ljava/lang/Object;[deprecated]
@6.0.0
-#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer$MvcMatchersRequiresChannelUrl;[deprecated]
-#mvcMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer$MvcMatchersRequiresChannelUrl;[deprecated]
-#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;[deprecated]
-#mvcMatchers([Ljava/lang/String;)Ljava/lang/Object;[deprecated]

+###org/springframework/security/config/annotation/web/configurers/HeadersConfigurer$PermissionsPolicyConfig
@5.5.0
+#policy(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$PermissionsPolicyConfig;
+#and()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;

+###org/springframework/security/config/annotation/web/configurers/HeadersConfigurer$HstsConfig
@4.0.0.RELEASE
+#maxAgeInSeconds(J)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$HstsConfig;
+#requestMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$HstsConfig;
+#includeSubDomains(Z)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$HstsConfig;
+#disable()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
+#and()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
@5.2.0.RELEASE
+#preload(Z)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$HstsConfig;

+###org/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$StandardInterceptUrlRegistry
@3.2.0.RELEASE
+#<init>(Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer;)V
+#withObjectPostProcessor(Lorg/springframework/security/config/annotation/ObjectPostProcessor;)Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$StandardInterceptUrlRegistry;
+#and()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
@4.1.1.RELEASE
-#<init>(Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer;)V
@4.1.2.RELEASE
+#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$MvcMatchersAuthorizedUrl;
+#mvcMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$MvcMatchersAuthorizedUrl;
+#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;
+#mvcMatchers([Ljava/lang/String;)Ljava/lang/Object;
@5.8.0
*#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$MvcMatchersAuthorizedUrl;[deprecated]
*#mvcMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$MvcMatchersAuthorizedUrl;[deprecated]
*#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;[deprecated]
*#mvcMatchers([Ljava/lang/String;)Ljava/lang/Object;[deprecated]
@6.0.0
+#requestMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$AuthorizedUrl;
+#requestMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$AuthorizedUrl;
+#requestMatchers(Lorg/springframework/http/HttpMethod;)Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$AuthorizedUrl;
+#requestMatchers([Lorg/springframework/security/web/util/matcher/RequestMatcher;)Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$AuthorizedUrl;
+#requestMatchers(Lorg/springframework/http/HttpMethod;)Ljava/lang/Object;
+#requestMatchers([Ljava/lang/String;)Ljava/lang/Object;
+#requestMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;
+#requestMatchers([Lorg/springframework/security/web/util/matcher/RequestMatcher;)Ljava/lang/Object;
-#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$MvcMatchersAuthorizedUrl;[deprecated]
-#mvcMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/UrlAuthorizationConfigurer$MvcMatchersAuthorizedUrl;[deprecated]
-#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;[deprecated]
-#mvcMatchers([Ljava/lang/String;)Ljava/lang/Object;[deprecated]

+###org/springframework/security/config/annotation/web/configurers/HeadersConfigurer$ReferrerPolicyConfig
@4.2.0.RELEASE
+#and()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
@5.2.0.RELEASE
+#policy(Lorg/springframework/security/web/header/writers/ReferrerPolicyHeaderWriter$ReferrerPolicy;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$ReferrerPolicyConfig;

+###org/springframework/security/config/annotation/web/configurers/saml2/Saml2LoginConfigurer
@5.2.0.RELEASE
+#<init>()V
+#relyingPartyRegistrationRepository(Lorg/springframework/security/saml2/provider/service/registration/RelyingPartyRegistrationRepository;)Lorg/springframework/security/config/annotation/web/configurers/saml2/Saml2LoginConfigurer;
+#loginPage(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/saml2/Saml2LoginConfigurer;
+#loginProcessingUrl(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/saml2/Saml2LoginConfigurer;
+#init(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#loginPage(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/AbstractAuthenticationFilterConfigurer;
+#loginProcessingUrl(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/AbstractAuthenticationFilterConfigurer;
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@5.3.0.RELEASE
+#authenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)Lorg/springframework/security/config/annotation/web/configurers/saml2/Saml2LoginConfigurer;
@5.4.0
+#authenticationConverter(Lorg/springframework/security/web/authentication/AuthenticationConverter;)Lorg/springframework/security/config/annotation/web/configurers/saml2/Saml2LoginConfigurer;
@5.7.0
+#authenticationRequestResolver(Lorg/springframework/security/saml2/provider/service/web/authentication/Saml2AuthenticationRequestResolver;)Lorg/springframework/security/config/annotation/web/configurers/saml2/Saml2LoginConfigurer;
@6.0.0
+#authenticationRequestUri(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/saml2/Saml2LoginConfigurer;

+###org/springframework/security/config/annotation/web/configurers/AbstractHttpConfigurer
@4.2.0.RELEASE
+#<init>()V
+#disable()Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#withObjectPostProcessor(Lorg/springframework/security/config/annotation/ObjectPostProcessor;)Lorg/springframework/security/config/annotation/web/configurers/AbstractHttpConfigurer;

+###org/springframework/security/config/annotation/web/HttpSecurityBuilder
@3.2.0.RELEASE
+#getConfigurer(Ljava/lang/Class;)Lorg/springframework/security/config/annotation/SecurityConfigurer;
+#removeConfigurer(Ljava/lang/Class;)Lorg/springframework/security/config/annotation/SecurityConfigurer;
+#setSharedObject(Ljava/lang/Class;Ljava/lang/Object;)V
+#getSharedObject(Ljava/lang/Class;)Ljava/lang/Object;
+#authenticationProvider(Lorg/springframework/security/authentication/AuthenticationProvider;)Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#userDetailsService(Lorg/springframework/security/core/userdetails/UserDetailsService;)Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#addFilterAfter(Ljavax/servlet/Filter;Ljava/lang/Class;)Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#addFilterBefore(Ljavax/servlet/Filter;Ljava/lang/Class;)Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#addFilter(Ljavax/servlet/Filter;)Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
@6.0.0
+#addFilterAfter(Ljakarta/servlet/Filter;Ljava/lang/Class;)Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#addFilterBefore(Ljakarta/servlet/Filter;Ljava/lang/Class;)Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#addFilter(Ljakarta/servlet/Filter;)Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
-#addFilterAfter(Ljavax/servlet/Filter;Ljava/lang/Class;)Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
-#addFilterBefore(Ljavax/servlet/Filter;Ljava/lang/Class;)Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
-#addFilter(Ljavax/servlet/Filter;)Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;

+###org/springframework/security/config/annotation/web/builders/WebSecurity
@3.2.0.RELEASE
+#<init>(Lorg/springframework/security/config/annotation/ObjectPostProcessor;)V
+#ignoring()Lorg/springframework/security/config/annotation/web/builders/WebSecurity$IgnoredRequestConfigurer;
+#httpFirewall(Lorg/springframework/security/web/firewall/HttpFirewall;)Lorg/springframework/security/config/annotation/web/builders/WebSecurity;
+#debug(Z)Lorg/springframework/security/config/annotation/web/builders/WebSecurity;
+#addSecurityFilterChainBuilder(Lorg/springframework/security/config/annotation/SecurityBuilder;)Lorg/springframework/security/config/annotation/web/builders/WebSecurity;
+#privilegeEvaluator(Lorg/springframework/security/web/access/WebInvocationPrivilegeEvaluator;)Lorg/springframework/security/config/annotation/web/builders/WebSecurity;
+#expressionHandler(Lorg/springframework/security/access/expression/SecurityExpressionHandler;)Lorg/springframework/security/config/annotation/web/builders/WebSecurity;
+#getExpressionHandler()Lorg/springframework/security/access/expression/SecurityExpressionHandler;
+#getPrivilegeEvaluator()Lorg/springframework/security/web/access/WebInvocationPrivilegeEvaluator;
+#securityInterceptor(Lorg/springframework/security/web/access/intercept/FilterSecurityInterceptor;)Lorg/springframework/security/config/annotation/web/builders/WebSecurity;
+#postBuildAction(Ljava/lang/Runnable;)Lorg/springframework/security/config/annotation/web/builders/WebSecurity;
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
@5.5.5
+#setServletContext(Ljavax/servlet/ServletContext;)V
@5.6.0
-#setServletContext(Ljavax/servlet/ServletContext;)V
@5.6.2
+#setServletContext(Ljavax/servlet/ServletContext;)V
@5.6.7
*#securityInterceptor(Lorg/springframework/security/web/access/intercept/FilterSecurityInterceptor;)Lorg/springframework/security/config/annotation/web/builders/WebSecurity;[deprecated]
@5.7.0
+#requestRejectedHandler(Lorg/springframework/security/web/firewall/RequestRejectedHandler;)Lorg/springframework/security/config/annotation/web/builders/WebSecurity;
@5.7.3
*#securityInterceptor(Lorg/springframework/security/web/access/intercept/FilterSecurityInterceptor;)Lorg/springframework/security/config/annotation/web/builders/WebSecurity;[deprecated]
@6.0.0
+#setServletContext(Ljakarta/servlet/ServletContext;)V
-#securityInterceptor(Lorg/springframework/security/web/access/intercept/FilterSecurityInterceptor;)Lorg/springframework/security/config/annotation/web/builders/WebSecurity;[deprecated]
-#setServletContext(Ljavax/servlet/ServletContext;)V

+###org/springframework/security/config/annotation/web/builders/WebSecurity$MvcMatchersIgnoredRequestConfigurer
@4.1.2.RELEASE
+#servletPath(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/WebSecurity$IgnoredRequestConfigurer;
@6.0.0
-###org/springframework/security/config/annotation/web/builders/WebSecurity$MvcMatchersIgnoredRequestConfigurer

+###org/springframework/security/config/annotation/web/builders/HttpSecurity$RequestMatcherConfigurer
@3.2.0.RELEASE
+#and()Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
@4.1.2.RELEASE
+#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity$MvcMatchersRequestMatcherConfigurer;
+#mvcMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity$MvcMatchersRequestMatcherConfigurer;
+#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;
+#mvcMatchers([Ljava/lang/String;)Ljava/lang/Object;
@5.8.0
*#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity$MvcMatchersRequestMatcherConfigurer;[deprecated]
*#mvcMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity$MvcMatchersRequestMatcherConfigurer;[deprecated]
*#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;[deprecated]
*#mvcMatchers([Ljava/lang/String;)Ljava/lang/Object;[deprecated]
@6.0.0
-#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity$MvcMatchersRequestMatcherConfigurer;[deprecated]
-#mvcMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity$MvcMatchersRequestMatcherConfigurer;[deprecated]
-#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;[deprecated]
-#mvcMatchers([Ljava/lang/String;)Ljava/lang/Object;[deprecated]

+###org/springframework/security/config/annotation/web/builders/HttpSecurity
@3.2.0.RELEASE
+#<init>(Lorg/springframework/security/config/annotation/ObjectPostProcessor;Lorg/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder;Ljava/util/Map;)V
+#openidLogin()Lorg/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer;
+#headers()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;
+#sessionManagement()Lorg/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer;
+#portMapper()Lorg/springframework/security/config/annotation/web/configurers/PortMapperConfigurer;
+#jee()Lorg/springframework/security/config/annotation/web/configurers/JeeConfigurer;
+#x509()Lorg/springframework/security/config/annotation/web/configurers/X509Configurer;
+#rememberMe()Lorg/springframework/security/config/annotation/web/configurers/RememberMeConfigurer;
+#authorizeRequests()Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry;
+#requestCache()Lorg/springframework/security/config/annotation/web/configurers/RequestCacheConfigurer;
+#exceptionHandling()Lorg/springframework/security/config/annotation/web/configurers/ExceptionHandlingConfigurer;
+#securityContext()Lorg/springframework/security/config/annotation/web/configurers/SecurityContextConfigurer;
+#servletApi()Lorg/springframework/security/config/annotation/web/configurers/ServletApiConfigurer;
+#csrf()Lorg/springframework/security/config/annotation/web/configurers/CsrfConfigurer;
+#logout()Lorg/springframework/security/config/annotation/web/configurers/LogoutConfigurer;
+#anonymous()Lorg/springframework/security/config/annotation/web/configurers/AnonymousConfigurer;
+#formLogin()Lorg/springframework/security/config/annotation/web/configurers/FormLoginConfigurer;
+#requiresChannel()Lorg/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer$ChannelRequestMatcherRegistry;
+#httpBasic()Lorg/springframework/security/config/annotation/web/configurers/HttpBasicConfigurer;
+#authenticationProvider(Lorg/springframework/security/authentication/AuthenticationProvider;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#userDetailsService(Lorg/springframework/security/core/userdetails/UserDetailsService;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#addFilterAfter(Ljavax/servlet/Filter;Ljava/lang/Class;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#addFilterBefore(Ljavax/servlet/Filter;Ljava/lang/Class;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#addFilter(Ljavax/servlet/Filter;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#requestMatchers()Lorg/springframework/security/config/annotation/web/builders/HttpSecurity$RequestMatcherConfigurer;
+#requestMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#antMatcher(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#regexMatcher(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#addFilter(Ljavax/servlet/Filter;)Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#addFilterBefore(Ljavax/servlet/Filter;Ljava/lang/Class;)Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#addFilterAfter(Ljavax/servlet/Filter;Ljava/lang/Class;)Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#userDetailsService(Lorg/springframework/security/core/userdetails/UserDetailsService;)Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#authenticationProvider(Lorg/springframework/security/authentication/AuthenticationProvider;)Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
@4.0.3.RELEASE
+#setSharedObject(Ljava/lang/Class;Ljava/lang/Object;)V
@4.1.0.RELEASE
+#addFilterAt(Ljavax/servlet/Filter;Ljava/lang/Class;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
@4.1.1.RELEASE
+#cors()Lorg/springframework/security/config/annotation/web/configurers/CorsConfigurer;
@4.1.2.RELEASE
+#mvcMatcher(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
@5.0.0.RELEASE
+#oauth2Login()Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer;
@5.1.0.RELEASE
+#oauth2Client()Lorg/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2ClientConfigurer;
+#oauth2ResourceServer()Lorg/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer;
@5.2.0.RELEASE
+#openidLogin(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#headers(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#cors(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#sessionManagement(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#portMapper(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#jee(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#x509(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#rememberMe(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#authorizeRequests(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#requestCache(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#exceptionHandling(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#securityContext(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#servletApi(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#csrf(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#logout(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#anonymous(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#formLogin(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#saml2Login()Lorg/springframework/security/config/annotation/web/configurers/saml2/Saml2LoginConfigurer;
+#saml2Login(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#oauth2Login(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#oauth2Client(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#oauth2ResourceServer(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#requiresChannel(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#httpBasic(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#requestMatchers(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
@5.4.0
*#openidLogin()Lorg/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer;[deprecated]
*#openidLogin(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;[deprecated]
@5.5.0
+#authorizeHttpRequests(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
@5.6.0
+#authorizeHttpRequests()Lorg/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry;
+#saml2Logout(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#saml2Logout()Lorg/springframework/security/config/annotation/web/configurers/saml2/Saml2LogoutConfigurer;
+#passwordManagement(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#authenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
@5.8.0
*#authorizeRequests()Lorg/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry;[deprecated]
*#authorizeRequests(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;[deprecated]
*#requestMatchers()Lorg/springframework/security/config/annotation/web/builders/HttpSecurity$RequestMatcherConfigurer;[deprecated]
*#requestMatchers(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;[deprecated]
*#requestMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;[deprecated]
+#securityMatchers()Lorg/springframework/security/config/annotation/web/builders/HttpSecurity$RequestMatcherConfigurer;
+#securityMatchers(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#securityMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#securityMatcher([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
*#antMatcher(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;[deprecated]
*#mvcMatcher(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;[deprecated]
*#regexMatcher(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;[deprecated]
@6.0.0
+#addFilterAfter(Ljakarta/servlet/Filter;Ljava/lang/Class;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#addFilterBefore(Ljakarta/servlet/Filter;Ljava/lang/Class;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#addFilter(Ljakarta/servlet/Filter;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#addFilterAt(Ljakarta/servlet/Filter;Ljava/lang/Class;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
+#addFilter(Ljakarta/servlet/Filter;)Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#addFilterBefore(Ljakarta/servlet/Filter;Ljava/lang/Class;)Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
+#addFilterAfter(Ljakarta/servlet/Filter;Ljava/lang/Class;)Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
-#openidLogin()Lorg/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer;[deprecated]
-#openidLogin(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;[deprecated]
-#addFilterAfter(Ljavax/servlet/Filter;Ljava/lang/Class;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
-#addFilterBefore(Ljavax/servlet/Filter;Ljava/lang/Class;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
-#addFilter(Ljavax/servlet/Filter;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
-#addFilterAt(Ljavax/servlet/Filter;Ljava/lang/Class;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;
-#requestMatchers()Lorg/springframework/security/config/annotation/web/builders/HttpSecurity$RequestMatcherConfigurer;[deprecated]
-#requestMatchers(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;[deprecated]
-#requestMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;[deprecated]
-#antMatcher(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;[deprecated]
-#mvcMatcher(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;[deprecated]
-#regexMatcher(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;[deprecated]
-#addFilter(Ljavax/servlet/Filter;)Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
-#addFilterBefore(Ljavax/servlet/Filter;Ljava/lang/Class;)Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;
-#addFilterAfter(Ljavax/servlet/Filter;Ljava/lang/Class;)Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;

+###org/springframework/security/config/annotation/web/builders/HttpSecurity$MvcMatchersRequestMatcherConfigurer
@4.1.2.RELEASE
+#servletPath(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/HttpSecurity$RequestMatcherConfigurer;
@6.0.0
-###org/springframework/security/config/annotation/web/builders/HttpSecurity$MvcMatchersRequestMatcherConfigurer

+###org/springframework/security/config/annotation/web/builders/WebSecurity$IgnoredRequestConfigurer
@3.2.0.RELEASE
+#and()Lorg/springframework/security/config/annotation/web/builders/WebSecurity;
@4.1.2.RELEASE
+#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/WebSecurity$MvcMatchersIgnoredRequestConfigurer;
+#mvcMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/WebSecurity$MvcMatchersIgnoredRequestConfigurer;
+#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;
+#mvcMatchers([Ljava/lang/String;)Ljava/lang/Object;
@5.8.0
*#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/WebSecurity$MvcMatchersIgnoredRequestConfigurer;[deprecated]
*#mvcMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/WebSecurity$MvcMatchersIgnoredRequestConfigurer;[deprecated]
*#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;[deprecated]
*#mvcMatchers([Ljava/lang/String;)Ljava/lang/Object;[deprecated]
@6.0.0
-#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/WebSecurity$MvcMatchersIgnoredRequestConfigurer;[deprecated]
-#mvcMatchers([Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/builders/WebSecurity$MvcMatchersIgnoredRequestConfigurer;[deprecated]
-#mvcMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Ljava/lang/Object;[deprecated]
-#mvcMatchers([Ljava/lang/String;)Ljava/lang/Object;[deprecated]

+###org/springframework/security/config/annotation/configuration/ObjectPostProcessorConfiguration
@3.2.0.RELEASE
+#<init>()V
+#objectPostProcessor(Lorg/springframework/beans/factory/config/AutowireCapableBeanFactory;)Lorg/springframework/security/config/annotation/ObjectPostProcessor;

+###org/springframework/security/config/annotation/ObjectPostProcessor
@3.2.0.RELEASE
+#postProcess(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/security/config/annotation/SecurityConfigurer
@3.2.0.RELEASE
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V

+###org/springframework/security/config/annotation/SecurityConfigurerAdapter
@3.2.0.RELEASE
+#<init>()V
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
+#and()Lorg/springframework/security/config/annotation/SecurityBuilder;
+#addObjectPostProcessor(Lorg/springframework/security/config/annotation/ObjectPostProcessor;)V
+#setBuilder(Lorg/springframework/security/config/annotation/SecurityBuilder;)V

+###org/springframework/security/config/websocket/WebSocketMessageBrokerSecurityBeanDefinitionParser
@4.0.0.RELEASE
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/security/config/Elements
@3.0.0.RELEASE
+#<init>()V

+###org/springframework/security/config/SecurityNamespaceHandler
@3.0.0.RELEASE
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;
+#decorate(Lorg/w3c/dom/Node;Lorg/springframework/beans/factory/config/BeanDefinitionHolder;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinitionHolder;
+#init()V

+###org/springframework/security/config/core/userdetails/ReactiveUserDetailsServiceResourceFactoryBean
@5.0.0.RELEASE
+#<init>()V
+#getObject()Lorg/springframework/security/core/userdetails/MapReactiveUserDetailsService;
+#getObjectType()Ljava/lang/Class;
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#setResourceLocation(Ljava/lang/String;)V
+#setResource(Lorg/springframework/core/io/Resource;)V
+#fromResourceLocation(Ljava/lang/String;)Lorg/springframework/security/config/core/userdetails/ReactiveUserDetailsServiceResourceFactoryBean;
+#fromResource(Lorg/springframework/core/io/Resource;)Lorg/springframework/security/config/core/userdetails/ReactiveUserDetailsServiceResourceFactoryBean;
+#fromString(Ljava/lang/String;)Lorg/springframework/security/config/core/userdetails/ReactiveUserDetailsServiceResourceFactoryBean;
+#getObject()Ljava/lang/Object;

+###org/springframework/security/config/core/userdetails/UserDetailsMapFactoryBean
@5.0.0.RELEASE
+#<init>(Ljava/util/Map;)V
+#getObject()Ljava/util/Collection;
+#getObjectType()Ljava/lang/Class;
+#getObject()Ljava/lang/Object;

+###org/springframework/security/config/core/userdetails/UserDetailsResourceFactoryBean
@5.0.0.RELEASE
+#<init>()V
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#getObject()Ljava/util/Collection;
+#getObjectType()Ljava/lang/Class;
+#setResourceLocation(Ljava/lang/String;)V
+#setResource(Lorg/springframework/core/io/Resource;)V
+#fromResourceLocation(Ljava/lang/String;)Lorg/springframework/security/config/core/userdetails/UserDetailsResourceFactoryBean;
+#fromResource(Lorg/springframework/core/io/Resource;)Lorg/springframework/security/config/core/userdetails/UserDetailsResourceFactoryBean;
+#fromString(Ljava/lang/String;)Lorg/springframework/security/config/core/userdetails/UserDetailsResourceFactoryBean;
+#getObject()Ljava/lang/Object;

+###org/springframework/security/config/core/GrantedAuthorityDefaults
@4.2.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#getRolePrefix()Ljava/lang/String;

+###org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$AuthorizationRule
@5.3.0.RELEASE
+#getRule()Ljava/lang/String;
+#<init>(Ljava/lang/String;)V
@6.0.0
-###org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$AuthorizationRule

+###org/springframework/security/config/web/servlet/SessionManagementDsl$sam$i$org_springframework_security_config_Customizer$0
@5.3.0.RELEASE
+#<init>(Lkotlin/jvm/functions/Function1;)V
+#customize(Ljava/lang/Object;)V
@5.7.0
-###org/springframework/security/config/web/servlet/SessionManagementDsl$sam$i$org_springframework_security_config_Customizer$0

+###org/springframework/security/config/web/servlet/CorsDsl
@5.3.0.RELEASE
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDisabled$p(Lorg/springframework/security/config/web/servlet/CorsDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/servlet/CorsDsl;Z)V
@5.5.0
+#getConfigurationSource()Lorg/springframework/web/cors/CorsConfigurationSource;
+#setConfigurationSource(Lorg/springframework/web/cors/CorsConfigurationSource;)V
@6.0.0
-###org/springframework/security/config/web/servlet/CorsDsl

+###org/springframework/security/config/web/servlet/HeadersDsl$sam$i$org_springframework_security_config_Customizer$0
@5.3.0.RELEASE
+#<init>(Lkotlin/jvm/functions/Function1;)V
+#customize(Ljava/lang/Object;)V
@5.7.0
-###org/springframework/security/config/web/servlet/HeadersDsl$sam$i$org_springframework_security_config_Customizer$0

+###org/springframework/security/config/web/servlet/HttpBasicDsl
@5.3.0.RELEASE
+#getRealmName()Ljava/lang/String;
+#setRealmName(Ljava/lang/String;)V
+#getAuthenticationEntryPoint()Lorg/springframework/security/web/AuthenticationEntryPoint;
+#setAuthenticationEntryPoint(Lorg/springframework/security/web/AuthenticationEntryPoint;)V
+#getAuthenticationDetailsSource()Lorg/springframework/security/authentication/AuthenticationDetailsSource;
+#setAuthenticationDetailsSource(Lorg/springframework/security/authentication/AuthenticationDetailsSource;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDisabled$p(Lorg/springframework/security/config/web/servlet/HttpBasicDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/servlet/HttpBasicDsl;Z)V
@6.0.0
-###org/springframework/security/config/web/servlet/HttpBasicDsl

+###org/springframework/security/config/web/servlet/session/SessionConcurrencyDsl
@5.3.0.RELEASE
+#getMaximumSessions()Ljava/lang/Integer;
+#setMaximumSessions(Ljava/lang/Integer;)V
+#getExpiredUrl()Ljava/lang/String;
+#setExpiredUrl(Ljava/lang/String;)V
+#getExpiredSessionStrategy()Lorg/springframework/security/web/session/SessionInformationExpiredStrategy;
+#setExpiredSessionStrategy(Lorg/springframework/security/web/session/SessionInformationExpiredStrategy;)V
+#getMaxSessionsPreventsLogin()Ljava/lang/Boolean;
+#setMaxSessionsPreventsLogin(Ljava/lang/Boolean;)V
+#getSessionRegistry()Lorg/springframework/security/core/session/SessionRegistry;
+#setSessionRegistry(Lorg/springframework/security/core/session/SessionRegistry;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
@6.0.0
-###org/springframework/security/config/web/servlet/session/SessionConcurrencyDsl

+###org/springframework/security/config/web/servlet/session/SessionSecurityMarker
@5.4.0
@6.0.0
-###org/springframework/security/config/web/servlet/session/SessionSecurityMarker

+###org/springframework/security/config/web/servlet/session/SessionFixationDsl$WhenMappings
@5.3.0.RELEASE
@6.0.0
-###org/springframework/security/config/web/servlet/session/SessionFixationDsl$WhenMappings

+###org/springframework/security/config/web/servlet/session/SessionFixationDsl
@5.3.0.RELEASE
+#newSession()V
+#migrateSession()V
+#changeSessionId()V
+#none()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getStrategy$p(Lorg/springframework/security/config/web/servlet/session/SessionFixationDsl;)Lorg/springframework/security/config/web/servlet/session/SessionFixationStrategy;
+#access$setStrategy$p(Lorg/springframework/security/config/web/servlet/session/SessionFixationDsl;Lorg/springframework/security/config/web/servlet/session/SessionFixationStrategy;)V
@6.0.0
-###org/springframework/security/config/web/servlet/session/SessionFixationDsl

+###org/springframework/security/config/web/servlet/LogoutDsl
@5.3.0.RELEASE
+#getClearAuthentication()Ljava/lang/Boolean;
+#setClearAuthentication(Ljava/lang/Boolean;)V
+#getInvalidateHttpSession()Ljava/lang/Boolean;
+#setInvalidateHttpSession(Ljava/lang/Boolean;)V
+#getLogoutUrl()Ljava/lang/String;
+#setLogoutUrl(Ljava/lang/String;)V
+#getLogoutRequestMatcher()Lorg/springframework/security/web/util/matcher/RequestMatcher;
+#setLogoutRequestMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#getLogoutSuccessUrl()Ljava/lang/String;
+#setLogoutSuccessUrl(Ljava/lang/String;)V
+#getLogoutSuccessHandler()Lorg/springframework/security/web/authentication/logout/LogoutSuccessHandler;
+#setLogoutSuccessHandler(Lorg/springframework/security/web/authentication/logout/LogoutSuccessHandler;)V
+#getPermitAll()Ljava/lang/Boolean;
+#setPermitAll(Ljava/lang/Boolean;)V
+#addLogoutHandler(Lorg/springframework/security/web/authentication/logout/LogoutHandler;)V
+#deleteCookies([Ljava/lang/String;)V
+#defaultLogoutSuccessHandlerFor(Lorg/springframework/security/web/authentication/logout/LogoutSuccessHandler;Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#disable()V
+#permitAll()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDeleteCookies$p(Lorg/springframework/security/config/web/servlet/LogoutDsl;)[Ljava/lang/String;
+#access$setDeleteCookies$p(Lorg/springframework/security/config/web/servlet/LogoutDsl;[Ljava/lang/String;)V
+#access$getDefaultLogoutSuccessHandlerMappings$p(Lorg/springframework/security/config/web/servlet/LogoutDsl;)Ljava/util/LinkedHashMap;
+#access$setDefaultLogoutSuccessHandlerMappings$p(Lorg/springframework/security/config/web/servlet/LogoutDsl;Ljava/util/LinkedHashMap;)V
+#access$getLogoutHandlers$p(Lorg/springframework/security/config/web/servlet/LogoutDsl;)Ljava/util/List;
+#access$setLogoutHandlers$p(Lorg/springframework/security/config/web/servlet/LogoutDsl;Ljava/util/List;)V
+#access$getDisabled$p(Lorg/springframework/security/config/web/servlet/LogoutDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/servlet/LogoutDsl;Z)V
@6.0.0
-###org/springframework/security/config/web/servlet/LogoutDsl

+###org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl
@5.3.0.RELEASE
+#getAnyRequest()Lorg/springframework/security/web/util/matcher/RequestMatcher;
+#<init>()V
@6.0.0
-###org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl

+###org/springframework/security/config/web/servlet/headers/HttpStrictTransportSecurityDsl
@5.3.0.RELEASE
+#getMaxAgeInSeconds()Ljava/lang/Long;
+#setMaxAgeInSeconds(Ljava/lang/Long;)V
+#getRequestMatcher()Lorg/springframework/security/web/util/matcher/RequestMatcher;
+#setRequestMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#getIncludeSubDomains()Ljava/lang/Boolean;
+#setIncludeSubDomains(Ljava/lang/Boolean;)V
+#getPreload()Ljava/lang/Boolean;
+#setPreload(Ljava/lang/Boolean;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDisabled$p(Lorg/springframework/security/config/web/servlet/headers/HttpStrictTransportSecurityDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/servlet/headers/HttpStrictTransportSecurityDsl;Z)V
@6.0.0
-###org/springframework/security/config/web/servlet/headers/HttpStrictTransportSecurityDsl

+###org/springframework/security/config/web/servlet/headers/CacheControlDsl
@5.3.0.RELEASE
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDisabled$p(Lorg/springframework/security/config/web/servlet/headers/CacheControlDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/servlet/headers/CacheControlDsl;Z)V
@6.0.0
-###org/springframework/security/config/web/servlet/headers/CacheControlDsl

+###org/springframework/security/config/web/servlet/headers/ContentTypeOptionsDsl
@5.3.0.RELEASE
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDisabled$p(Lorg/springframework/security/config/web/servlet/headers/ContentTypeOptionsDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/servlet/headers/ContentTypeOptionsDsl;Z)V
@6.0.0
-###org/springframework/security/config/web/servlet/headers/ContentTypeOptionsDsl

+###org/springframework/security/config/web/servlet/headers/ContentSecurityPolicyDsl
@5.3.0.RELEASE
+#getPolicyDirectives()Ljava/lang/String;
+#setPolicyDirectives(Ljava/lang/String;)V
+#getReportOnly()Ljava/lang/Boolean;
+#setReportOnly(Ljava/lang/Boolean;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
@6.0.0
-###org/springframework/security/config/web/servlet/headers/ContentSecurityPolicyDsl

+###org/springframework/security/config/web/servlet/headers/HeadersSecurityMarker
@5.4.0
@6.0.0
-###org/springframework/security/config/web/servlet/headers/HeadersSecurityMarker

+###org/springframework/security/config/web/servlet/headers/ReferrerPolicyDsl
@5.3.0.RELEASE
+#getPolicy()Lorg/springframework/security/web/header/writers/ReferrerPolicyHeaderWriter$ReferrerPolicy;
+#setPolicy(Lorg/springframework/security/web/header/writers/ReferrerPolicyHeaderWriter$ReferrerPolicy;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
@6.0.0
-###org/springframework/security/config/web/servlet/headers/ReferrerPolicyDsl

+###org/springframework/security/config/web/servlet/headers/PermissionsPolicyDsl
@5.5.0
+#getPolicy()Ljava/lang/String;
+#setPolicy(Ljava/lang/String;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
@6.0.0
-###org/springframework/security/config/web/servlet/headers/PermissionsPolicyDsl

+###org/springframework/security/config/web/servlet/headers/HttpPublicKeyPinningDsl
@5.3.0.RELEASE
+#getPins()Ljava/util/Map;
+#setPins(Ljava/util/Map;)V
+#getMaxAgeInSeconds()Ljava/lang/Long;
+#setMaxAgeInSeconds(Ljava/lang/Long;)V
+#getIncludeSubDomains()Ljava/lang/Boolean;
+#setIncludeSubDomains(Ljava/lang/Boolean;)V
+#getReportOnly()Ljava/lang/Boolean;
+#setReportOnly(Ljava/lang/Boolean;)V
+#getReportUri()Ljava/lang/String;
+#setReportUri(Ljava/lang/String;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDisabled$p(Lorg/springframework/security/config/web/servlet/headers/HttpPublicKeyPinningDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/servlet/headers/HttpPublicKeyPinningDsl;Z)V
@6.0.0
-###org/springframework/security/config/web/servlet/headers/HttpPublicKeyPinningDsl

+###org/springframework/security/config/web/servlet/headers/FrameOptionsDsl
@5.3.0.RELEASE
+#getSameOrigin()Ljava/lang/Boolean;
+#setSameOrigin(Ljava/lang/Boolean;)V
+#getDeny()Ljava/lang/Boolean;
+#setDeny(Ljava/lang/Boolean;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDisabled$p(Lorg/springframework/security/config/web/servlet/headers/FrameOptionsDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/servlet/headers/FrameOptionsDsl;Z)V
@6.0.0
-###org/springframework/security/config/web/servlet/headers/FrameOptionsDsl

+###org/springframework/security/config/web/servlet/headers/XssProtectionConfigDsl
@5.3.0.RELEASE
+#getBlock()Ljava/lang/Boolean;
+#setBlock(Ljava/lang/Boolean;)V
+#getXssProtectionEnabled()Ljava/lang/Boolean;
+#setXssProtectionEnabled(Ljava/lang/Boolean;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDisabled$p(Lorg/springframework/security/config/web/servlet/headers/XssProtectionConfigDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/servlet/headers/XssProtectionConfigDsl;Z)V
@5.8.0
+#block$annotations()V
+#xssProtectionEnabled$annotations()V
+#getHeaderValue()Lorg/springframework/security/web/header/writers/XXssProtectionHeaderWriter$HeaderValue;
+#setHeaderValue(Lorg/springframework/security/web/header/writers/XXssProtectionHeaderWriter$HeaderValue;)V
@6.0.0
-###org/springframework/security/config/web/servlet/headers/XssProtectionConfigDsl

+###org/springframework/security/config/web/servlet/RememberMeDsl
@5.5.0
+#getAuthenticationSuccessHandler()Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;
+#setAuthenticationSuccessHandler(Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;)V
+#getKey()Ljava/lang/String;
+#setKey(Ljava/lang/String;)V
+#getRememberMeServices()Lorg/springframework/security/web/authentication/RememberMeServices;
+#setRememberMeServices(Lorg/springframework/security/web/authentication/RememberMeServices;)V
+#getRememberMeParameter()Ljava/lang/String;
+#setRememberMeParameter(Ljava/lang/String;)V
+#getRememberMeCookieName()Ljava/lang/String;
+#setRememberMeCookieName(Ljava/lang/String;)V
+#getRememberMeCookieDomain()Ljava/lang/String;
+#setRememberMeCookieDomain(Ljava/lang/String;)V
+#getTokenRepository()Lorg/springframework/security/web/authentication/rememberme/PersistentTokenRepository;
+#setTokenRepository(Lorg/springframework/security/web/authentication/rememberme/PersistentTokenRepository;)V
+#getUserDetailsService()Lorg/springframework/security/core/userdetails/UserDetailsService;
+#setUserDetailsService(Lorg/springframework/security/core/userdetails/UserDetailsService;)V
+#getTokenValiditySeconds()Ljava/lang/Integer;
+#setTokenValiditySeconds(Ljava/lang/Integer;)V
+#getUseSecureCookie()Ljava/lang/Boolean;
+#setUseSecureCookie(Ljava/lang/Boolean;)V
+#getAlwaysRemember()Ljava/lang/Boolean;
+#setAlwaysRemember(Ljava/lang/Boolean;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
@6.0.0
-###org/springframework/security/config/web/servlet/RememberMeDsl

+###org/springframework/security/config/web/servlet/OAuth2LoginDsl$sam$i$org_springframework_security_config_Customizer$0
@5.3.0.RELEASE
+#<init>(Lkotlin/jvm/functions/Function1;)V
+#customize(Ljava/lang/Object;)V
@5.7.0
-###org/springframework/security/config/web/servlet/OAuth2LoginDsl$sam$i$org_springframework_security_config_Customizer$0

+###org/springframework/security/config/web/servlet/AuthorizeRequestsDsl
@5.3.0.RELEASE
+#authorize(Lorg/springframework/security/web/util/matcher/RequestMatcher;Ljava/lang/String;)V
+#authorize$default(Lorg/springframework/security/config/web/servlet/AuthorizeRequestsDsl;Lorg/springframework/security/web/util/matcher/RequestMatcher;Ljava/lang/String;ILjava/lang/Object;)V
+#authorize(Ljava/lang/String;Ljava/lang/String;)V
+#authorize$default(Lorg/springframework/security/config/web/servlet/AuthorizeRequestsDsl;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
+#authorize(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#authorize$default(Lorg/springframework/security/config/web/servlet/AuthorizeRequestsDsl;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
+#hasAuthority(Ljava/lang/String;)Ljava/lang/String;
+#hasRole(Ljava/lang/String;)Ljava/lang/String;
+#getPermitAll()Ljava/lang/String;
+#getAnonymous()Ljava/lang/String;
+#getRememberMe()Ljava/lang/String;
+#getDenyAll()Ljava/lang/String;
+#getAuthenticated()Ljava/lang/String;
+#getFullyAuthenticated()Ljava/lang/String;
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getAuthorizationRules$p(Lorg/springframework/security/config/web/servlet/AuthorizeRequestsDsl;)Ljava/util/List;
@5.4.0
+#authorize(Lorg/springframework/http/HttpMethod;Ljava/lang/String;Ljava/lang/String;)V
+#authorize$default(Lorg/springframework/security/config/web/servlet/AuthorizeRequestsDsl;Lorg/springframework/http/HttpMethod;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
+#authorize(Lorg/springframework/http/HttpMethod;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#authorize$default(Lorg/springframework/security/config/web/servlet/AuthorizeRequestsDsl;Lorg/springframework/http/HttpMethod;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
+#hasAnyAuthority([Ljava/lang/String;)Ljava/lang/String;
+#hasAnyRole([Ljava/lang/String;)Ljava/lang/String;
@6.0.0
-###org/springframework/security/config/web/servlet/AuthorizeRequestsDsl

+###org/springframework/security/config/web/servlet/RequiresChannelDsl$WhenMappings
@5.3.0.RELEASE
@6.0.0
-###org/springframework/security/config/web/servlet/RequiresChannelDsl$WhenMappings

+###org/springframework/security/config/web/servlet/HttpSecurityDsl
@5.3.0.RELEASE
+#securityMatcher([Ljava/lang/String;)V
+#securityMatcher([Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#formLogin(Lkotlin/jvm/functions/Function1;)V
+#authorizeRequests(Lkotlin/jvm/functions/Function1;)V
+#httpBasic(Lkotlin/jvm/functions/Function1;)V
+#headers(Lkotlin/jvm/functions/Function1;)V
+#cors(Lkotlin/jvm/functions/Function1;)V
+#sessionManagement(Lkotlin/jvm/functions/Function1;)V
+#portMapper(Lkotlin/jvm/functions/Function1;)V
+#requiresChannel(Lkotlin/jvm/functions/Function1;)V
+#x509(Lkotlin/jvm/functions/Function1;)V
+#requestCache(Lkotlin/jvm/functions/Function1;)V
+#exceptionHandling(Lkotlin/jvm/functions/Function1;)V
+#csrf(Lkotlin/jvm/functions/Function1;)V
+#logout(Lkotlin/jvm/functions/Function1;)V
+#saml2Login(Lkotlin/jvm/functions/Function1;)V
+#anonymous(Lkotlin/jvm/functions/Function1;)V
+#oauth2Login(Lkotlin/jvm/functions/Function1;)V
+#oauth2Client(Lkotlin/jvm/functions/Function1;)V
+#oauth2ResourceServer(Lkotlin/jvm/functions/Function1;)V
+#addFilterAt(Ljavax/servlet/Filter;Ljava/lang/Class;)V
+#build$spring_security_config()V
+#<init>(Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;Lkotlin/jvm/functions/Function1;)V
@5.4.0
+#addFilterAt(Ljavax/servlet/Filter;)V
+#addFilterAfter(Ljavax/servlet/Filter;Ljava/lang/Class;)V
+#addFilterAfter(Ljavax/servlet/Filter;)V
+#addFilterBefore(Ljavax/servlet/Filter;Ljava/lang/Class;)V
+#addFilterBefore(Ljavax/servlet/Filter;)V
@5.5.0
+#rememberMe(Lkotlin/jvm/functions/Function1;)V
@5.6.0
+#getAuthenticationManager()Lorg/springframework/security/authentication/AuthenticationManager;
+#setAuthenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)V
+#passwordManagement(Lkotlin/jvm/functions/Function1;)V
@5.7.0
+#authorizeHttpRequests(Lkotlin/jvm/functions/Function1;)V
+#securityContext(Lkotlin/jvm/functions/Function1;)V
@5.8.0
+#apply(Lorg/springframework/security/config/annotation/SecurityConfigurerAdapter;Lkotlin/jvm/functions/Function1;)Lorg/springframework/security/config/annotation/SecurityConfigurerAdapter;
+#apply$default(Lorg/springframework/security/config/web/servlet/HttpSecurityDsl;Lorg/springframework/security/config/annotation/SecurityConfigurerAdapter;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/security/config/annotation/SecurityConfigurerAdapter;
@6.0.0
-###org/springframework/security/config/web/servlet/HttpSecurityDsl

+###org/springframework/security/config/web/servlet/HttpSecurityDslKt
@5.3.0.RELEASE
+#invoke(Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;Lkotlin/jvm/functions/Function1;)V
@6.0.0
-###org/springframework/security/config/web/servlet/HttpSecurityDslKt

+###org/springframework/security/config/web/servlet/RequestCacheDsl
@5.3.0.RELEASE
+#getRequestCache()Lorg/springframework/security/web/savedrequest/RequestCache;
+#setRequestCache(Lorg/springframework/security/web/savedrequest/RequestCache;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
@6.0.0
-###org/springframework/security/config/web/servlet/RequestCacheDsl

+###org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternAuthorizationRule
@5.3.0.RELEASE
+#getPattern()Ljava/lang/String;
+#getPatternType()Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;
+#getServletPath()Ljava/lang/String;
+#getRule()Ljava/lang/String;
+#<init>(Ljava/lang/String;Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Ljava/lang/String;)V
+#component1()Ljava/lang/String;
+#component2()Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;
+#component3()Ljava/lang/String;
+#component4()Ljava/lang/String;
+#copy(Ljava/lang/String;Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternAuthorizationRule;
+#copy$default(Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternAuthorizationRule;Ljava/lang/String;Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternAuthorizationRule;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@5.4.0
+#getHttpMethod()Lorg/springframework/http/HttpMethod;
+#<init>(Ljava/lang/String;Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Lorg/springframework/http/HttpMethod;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Lorg/springframework/http/HttpMethod;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
+#component4()Lorg/springframework/http/HttpMethod;
+#component5()Ljava/lang/String;
+#copy(Ljava/lang/String;Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Lorg/springframework/http/HttpMethod;Ljava/lang/String;)Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternAuthorizationRule;
+#copy$default(Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternAuthorizationRule;Ljava/lang/String;Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Lorg/springframework/http/HttpMethod;Ljava/lang/String;ILjava/lang/Object;)Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternAuthorizationRule;
-#<init>(Ljava/lang/String;Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Ljava/lang/String;)V
-#component4()Ljava/lang/String;
-#copy(Ljava/lang/String;Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternAuthorizationRule;
-#copy$default(Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternAuthorizationRule;Ljava/lang/String;Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternAuthorizationRule;
@6.0.0
-###org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternAuthorizationRule

+###org/springframework/security/config/web/servlet/OAuth2LoginDsl
@5.3.0.RELEASE
+#getClientRegistrationRepository()Lorg/springframework/security/oauth2/client/registration/ClientRegistrationRepository;
+#setClientRegistrationRepository(Lorg/springframework/security/oauth2/client/registration/ClientRegistrationRepository;)V
+#getAuthorizedClientRepository()Lorg/springframework/security/oauth2/client/web/OAuth2AuthorizedClientRepository;
+#setAuthorizedClientRepository(Lorg/springframework/security/oauth2/client/web/OAuth2AuthorizedClientRepository;)V
+#getAuthorizedClientService()Lorg/springframework/security/oauth2/client/OAuth2AuthorizedClientService;
+#setAuthorizedClientService(Lorg/springframework/security/oauth2/client/OAuth2AuthorizedClientService;)V
+#getLoginPage()Ljava/lang/String;
+#setLoginPage(Ljava/lang/String;)V
+#getAuthenticationSuccessHandler()Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;
+#setAuthenticationSuccessHandler(Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;)V
+#getAuthenticationFailureHandler()Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;
+#setAuthenticationFailureHandler(Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;)V
+#getFailureUrl()Ljava/lang/String;
+#setFailureUrl(Ljava/lang/String;)V
+#getLoginProcessingUrl()Ljava/lang/String;
+#setLoginProcessingUrl(Ljava/lang/String;)V
+#getPermitAll()Ljava/lang/Boolean;
+#setPermitAll(Ljava/lang/Boolean;)V
+#permitAll()V
+#defaultSuccessUrl(Ljava/lang/String;Z)V
+#authorizationEndpoint(Lkotlin/jvm/functions/Function1;)V
+#tokenEndpoint(Lkotlin/jvm/functions/Function1;)V
+#redirectionEndpoint(Lkotlin/jvm/functions/Function1;)V
+#userInfoEndpoint(Lkotlin/jvm/functions/Function1;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDefaultSuccessUrlOption$p(Lorg/springframework/security/config/web/servlet/OAuth2LoginDsl;)Lkotlin/Pair;
+#access$setDefaultSuccessUrlOption$p(Lorg/springframework/security/config/web/servlet/OAuth2LoginDsl;Lkotlin/Pair;)V
+#access$getAuthorizationEndpoint$p(Lorg/springframework/security/config/web/servlet/OAuth2LoginDsl;)Lkotlin/jvm/functions/Function1;
+#access$setAuthorizationEndpoint$p(Lorg/springframework/security/config/web/servlet/OAuth2LoginDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getTokenEndpoint$p(Lorg/springframework/security/config/web/servlet/OAuth2LoginDsl;)Lkotlin/jvm/functions/Function1;
+#access$setTokenEndpoint$p(Lorg/springframework/security/config/web/servlet/OAuth2LoginDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getRedirectionEndpoint$p(Lorg/springframework/security/config/web/servlet/OAuth2LoginDsl;)Lkotlin/jvm/functions/Function1;
+#access$setRedirectionEndpoint$p(Lorg/springframework/security/config/web/servlet/OAuth2LoginDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getUserInfoEndpoint$p(Lorg/springframework/security/config/web/servlet/OAuth2LoginDsl;)Lkotlin/jvm/functions/Function1;
+#access$setUserInfoEndpoint$p(Lorg/springframework/security/config/web/servlet/OAuth2LoginDsl;Lkotlin/jvm/functions/Function1;)V
@5.6.0
+#getAuthenticationDetailsSource()Lorg/springframework/security/authentication/AuthenticationDetailsSource;
+#setAuthenticationDetailsSource(Lorg/springframework/security/authentication/AuthenticationDetailsSource;)V
@6.0.0
-###org/springframework/security/config/web/servlet/OAuth2LoginDsl

+###org/springframework/security/config/web/servlet/X509Dsl
@5.3.0.RELEASE
+#getX509AuthenticationFilter()Lorg/springframework/security/web/authentication/preauth/x509/X509AuthenticationFilter;
+#setX509AuthenticationFilter(Lorg/springframework/security/web/authentication/preauth/x509/X509AuthenticationFilter;)V
+#getX509PrincipalExtractor()Lorg/springframework/security/web/authentication/preauth/x509/X509PrincipalExtractor;
+#setX509PrincipalExtractor(Lorg/springframework/security/web/authentication/preauth/x509/X509PrincipalExtractor;)V
+#getAuthenticationDetailsSource()Lorg/springframework/security/authentication/AuthenticationDetailsSource;
+#setAuthenticationDetailsSource(Lorg/springframework/security/authentication/AuthenticationDetailsSource;)V
+#getUserDetailsService()Lorg/springframework/security/core/userdetails/UserDetailsService;
+#setUserDetailsService(Lorg/springframework/security/core/userdetails/UserDetailsService;)V
+#getAuthenticationUserDetailsService()Lorg/springframework/security/core/userdetails/AuthenticationUserDetailsService;
+#setAuthenticationUserDetailsService(Lorg/springframework/security/core/userdetails/AuthenticationUserDetailsService;)V
+#getSubjectPrincipalRegex()Ljava/lang/String;
+#setSubjectPrincipalRegex(Ljava/lang/String;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
@6.0.0
-###org/springframework/security/config/web/servlet/X509Dsl

+###org/springframework/security/config/web/servlet/AnonymousDsl
@5.3.0.RELEASE
+#getKey()Ljava/lang/String;
+#setKey(Ljava/lang/String;)V
+#getPrincipal()Ljava/lang/Object;
+#setPrincipal(Ljava/lang/Object;)V
+#getAuthorities()Ljava/util/List;
+#setAuthorities(Ljava/util/List;)V
+#getAuthenticationProvider()Lorg/springframework/security/authentication/AuthenticationProvider;
+#setAuthenticationProvider(Lorg/springframework/security/authentication/AuthenticationProvider;)V
+#getAuthenticationFilter()Lorg/springframework/security/web/authentication/AnonymousAuthenticationFilter;
+#setAuthenticationFilter(Lorg/springframework/security/web/authentication/AnonymousAuthenticationFilter;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDisabled$p(Lorg/springframework/security/config/web/servlet/AnonymousDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/servlet/AnonymousDsl;Z)V
@6.0.0
-###org/springframework/security/config/web/servlet/AnonymousDsl

+###org/springframework/security/config/web/servlet/OAuth2ClientDsl$sam$i$org_springframework_security_config_Customizer$0
@5.3.0.RELEASE
+#<init>(Lkotlin/jvm/functions/Function1;)V
+#customize(Ljava/lang/Object;)V
@5.7.0
-###org/springframework/security/config/web/servlet/OAuth2ClientDsl$sam$i$org_springframework_security_config_Customizer$0

+###org/springframework/security/config/web/servlet/FormLoginDsl
@5.3.0.RELEASE
+#getLoginPage()Ljava/lang/String;
+#setLoginPage(Ljava/lang/String;)V
+#getAuthenticationSuccessHandler()Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;
+#setAuthenticationSuccessHandler(Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;)V
+#getAuthenticationFailureHandler()Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;
+#setAuthenticationFailureHandler(Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;)V
+#getFailureUrl()Ljava/lang/String;
+#setFailureUrl(Ljava/lang/String;)V
+#getLoginProcessingUrl()Ljava/lang/String;
+#setLoginProcessingUrl(Ljava/lang/String;)V
+#getPermitAll()Ljava/lang/Boolean;
+#setPermitAll(Ljava/lang/Boolean;)V
+#permitAll()V
+#defaultSuccessUrl(Ljava/lang/String;Z)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDefaultSuccessUrlOption$p(Lorg/springframework/security/config/web/servlet/FormLoginDsl;)Lkotlin/Pair;
+#access$setDefaultSuccessUrlOption$p(Lorg/springframework/security/config/web/servlet/FormLoginDsl;Lkotlin/Pair;)V
@5.6.0
+#getAuthenticationDetailsSource()Lorg/springframework/security/authentication/AuthenticationDetailsSource;
+#setAuthenticationDetailsSource(Lorg/springframework/security/authentication/AuthenticationDetailsSource;)V
@6.0.0
-###org/springframework/security/config/web/servlet/FormLoginDsl

+###org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$MatcherAuthorizationRule
@5.3.0.RELEASE
+#getMatcher()Lorg/springframework/security/web/util/matcher/RequestMatcher;
+#getRule()Ljava/lang/String;
+#<init>(Lorg/springframework/security/web/util/matcher/RequestMatcher;Ljava/lang/String;)V
+#component1()Lorg/springframework/security/web/util/matcher/RequestMatcher;
+#component2()Ljava/lang/String;
+#copy(Lorg/springframework/security/web/util/matcher/RequestMatcher;Ljava/lang/String;)Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$MatcherAuthorizationRule;
+#copy$default(Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$MatcherAuthorizationRule;Lorg/springframework/security/web/util/matcher/RequestMatcher;Ljava/lang/String;ILjava/lang/Object;)Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$MatcherAuthorizationRule;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@6.0.0
-###org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$MatcherAuthorizationRule

+###org/springframework/security/config/web/servlet/OAuth2ResourceServerDsl
@5.3.0.RELEASE
+#getAccessDeniedHandler()Lorg/springframework/security/web/access/AccessDeniedHandler;
+#setAccessDeniedHandler(Lorg/springframework/security/web/access/AccessDeniedHandler;)V
+#getAuthenticationEntryPoint()Lorg/springframework/security/web/AuthenticationEntryPoint;
+#setAuthenticationEntryPoint(Lorg/springframework/security/web/AuthenticationEntryPoint;)V
+#getBearerTokenResolver()Lorg/springframework/security/oauth2/server/resource/web/BearerTokenResolver;
+#setBearerTokenResolver(Lorg/springframework/security/oauth2/server/resource/web/BearerTokenResolver;)V
+#jwt(Lkotlin/jvm/functions/Function1;)V
+#opaqueToken(Lkotlin/jvm/functions/Function1;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getJwt$p(Lorg/springframework/security/config/web/servlet/OAuth2ResourceServerDsl;)Lkotlin/jvm/functions/Function1;
+#access$setJwt$p(Lorg/springframework/security/config/web/servlet/OAuth2ResourceServerDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getOpaqueToken$p(Lorg/springframework/security/config/web/servlet/OAuth2ResourceServerDsl;)Lkotlin/jvm/functions/Function1;
+#access$setOpaqueToken$p(Lorg/springframework/security/config/web/servlet/OAuth2ResourceServerDsl;Lkotlin/jvm/functions/Function1;)V
@5.4.0
+#getAuthenticationManagerResolver()Lorg/springframework/security/authentication/AuthenticationManagerResolver;
+#setAuthenticationManagerResolver(Lorg/springframework/security/authentication/AuthenticationManagerResolver;)V
@6.0.0
-###org/springframework/security/config/web/servlet/OAuth2ResourceServerDsl

+###org/springframework/security/config/web/servlet/AuthorizeRequestsDsl$WhenMappings
@5.3.0.RELEASE
@6.0.0
-###org/springframework/security/config/web/servlet/AuthorizeRequestsDsl$WhenMappings

+###org/springframework/security/config/web/servlet/Saml2Dsl
@5.3.0.RELEASE
+#getRelyingPartyRegistrationRepository()Lorg/springframework/security/saml2/provider/service/registration/RelyingPartyRegistrationRepository;
+#setRelyingPartyRegistrationRepository(Lorg/springframework/security/saml2/provider/service/registration/RelyingPartyRegistrationRepository;)V
+#getLoginPage()Ljava/lang/String;
+#setLoginPage(Ljava/lang/String;)V
+#getAuthenticationSuccessHandler()Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;
+#setAuthenticationSuccessHandler(Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;)V
+#getAuthenticationFailureHandler()Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;
+#setAuthenticationFailureHandler(Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;)V
+#getFailureUrl()Ljava/lang/String;
+#setFailureUrl(Ljava/lang/String;)V
+#getLoginProcessingUrl()Ljava/lang/String;
+#setLoginProcessingUrl(Ljava/lang/String;)V
+#getPermitAll()Ljava/lang/Boolean;
+#setPermitAll(Ljava/lang/Boolean;)V
+#permitAll()V
+#defaultSuccessUrl(Ljava/lang/String;Z)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDefaultSuccessUrlOption$p(Lorg/springframework/security/config/web/servlet/Saml2Dsl;)Lkotlin/Pair;
+#access$setDefaultSuccessUrlOption$p(Lorg/springframework/security/config/web/servlet/Saml2Dsl;Lkotlin/Pair;)V
@5.6.0
+#getAuthenticationManager()Lorg/springframework/security/authentication/AuthenticationManager;
+#setAuthenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)V
@6.0.0
-###org/springframework/security/config/web/servlet/Saml2Dsl

+###org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType
@5.3.0.RELEASE
+#values()[Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;
@6.0.0
-###org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType

+###org/springframework/security/config/web/servlet/PortMapperDsl
@5.3.0.RELEASE
+#getPortMapper()Lorg/springframework/security/web/PortMapper;
+#setPortMapper(Lorg/springframework/security/web/PortMapper;)V
+#map(II)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getMappings$p(Lorg/springframework/security/config/web/servlet/PortMapperDsl;)Ljava/util/List;
@6.0.0
-###org/springframework/security/config/web/servlet/PortMapperDsl

+###org/springframework/security/config/web/servlet/SecurityMarker
@5.3.0.RELEASE
@6.0.0
-###org/springframework/security/config/web/servlet/SecurityMarker

+###org/springframework/security/config/web/servlet/oauth2/login/OAuth2LoginSecurityMarker
@5.4.0
@6.0.0
-###org/springframework/security/config/web/servlet/oauth2/login/OAuth2LoginSecurityMarker

+###org/springframework/security/config/web/servlet/oauth2/login/UserInfoEndpointDsl
@5.3.0.RELEASE
+#getUserService()Lorg/springframework/security/oauth2/client/userinfo/OAuth2UserService;
+#setUserService(Lorg/springframework/security/oauth2/client/userinfo/OAuth2UserService;)V
+#getOidcUserService()Lorg/springframework/security/oauth2/client/userinfo/OAuth2UserService;
+#setOidcUserService(Lorg/springframework/security/oauth2/client/userinfo/OAuth2UserService;)V
+#getUserAuthoritiesMapper()Lorg/springframework/security/core/authority/mapping/GrantedAuthoritiesMapper;
+#setUserAuthoritiesMapper(Lorg/springframework/security/core/authority/mapping/GrantedAuthoritiesMapper;)V
+#customUserType(Ljava/lang/Class;Ljava/lang/String;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getCustomUserTypePair$p(Lorg/springframework/security/config/web/servlet/oauth2/login/UserInfoEndpointDsl;)Lkotlin/Pair;
+#access$setCustomUserTypePair$p(Lorg/springframework/security/config/web/servlet/oauth2/login/UserInfoEndpointDsl;Lkotlin/Pair;)V
@5.4.0
+#customUserType(Ljava/lang/String;)V
@6.0.0
-###org/springframework/security/config/web/servlet/oauth2/login/UserInfoEndpointDsl

+###org/springframework/security/config/web/servlet/oauth2/login/RedirectionEndpointDsl
@5.3.0.RELEASE
+#getBaseUri()Ljava/lang/String;
+#setBaseUri(Ljava/lang/String;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
@6.0.0
-###org/springframework/security/config/web/servlet/oauth2/login/RedirectionEndpointDsl

+###org/springframework/security/config/web/servlet/oauth2/login/AuthorizationEndpointDsl
@5.3.0.RELEASE
+#getBaseUri()Ljava/lang/String;
+#setBaseUri(Ljava/lang/String;)V
+#getAuthorizationRequestResolver()Lorg/springframework/security/oauth2/client/web/OAuth2AuthorizationRequestResolver;
+#setAuthorizationRequestResolver(Lorg/springframework/security/oauth2/client/web/OAuth2AuthorizationRequestResolver;)V
+#getAuthorizationRequestRepository()Lorg/springframework/security/oauth2/client/web/AuthorizationRequestRepository;
+#setAuthorizationRequestRepository(Lorg/springframework/security/oauth2/client/web/AuthorizationRequestRepository;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
@5.8.0
+#getAuthorizationRedirectStrategy()Lorg/springframework/security/web/RedirectStrategy;
+#setAuthorizationRedirectStrategy(Lorg/springframework/security/web/RedirectStrategy;)V
@6.0.0
-###org/springframework/security/config/web/servlet/oauth2/login/AuthorizationEndpointDsl

+###org/springframework/security/config/web/servlet/oauth2/login/TokenEndpointDsl
@5.3.0.RELEASE
+#getAccessTokenResponseClient()Lorg/springframework/security/oauth2/client/endpoint/OAuth2AccessTokenResponseClient;
+#setAccessTokenResponseClient(Lorg/springframework/security/oauth2/client/endpoint/OAuth2AccessTokenResponseClient;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
@6.0.0
-###org/springframework/security/config/web/servlet/oauth2/login/TokenEndpointDsl

+###org/springframework/security/config/web/servlet/oauth2/resourceserver/JwtDsl
@5.3.0.RELEASE
+#getJwtAuthenticationConverter()Lorg/springframework/core/convert/converter/Converter;
+#setJwtAuthenticationConverter(Lorg/springframework/core/convert/converter/Converter;)V
+#getJwtDecoder()Lorg/springframework/security/oauth2/jwt/JwtDecoder;
+#setJwtDecoder(Lorg/springframework/security/oauth2/jwt/JwtDecoder;)V
+#getJwkSetUri()Ljava/lang/String;
+#setJwkSetUri(Ljava/lang/String;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
@5.6.0
+#getAuthenticationManager()Lorg/springframework/security/authentication/AuthenticationManager;
+#setAuthenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)V
@6.0.0
-###org/springframework/security/config/web/servlet/oauth2/resourceserver/JwtDsl

+###org/springframework/security/config/web/servlet/oauth2/resourceserver/OAuth2ResourceServerSecurityMarker
@5.4.0
@6.0.0
-###org/springframework/security/config/web/servlet/oauth2/resourceserver/OAuth2ResourceServerSecurityMarker

+###org/springframework/security/config/web/servlet/oauth2/resourceserver/OpaqueTokenDsl
@5.3.0.RELEASE
+#getIntrospectionUri()Ljava/lang/String;
+#setIntrospectionUri(Ljava/lang/String;)V
+#getIntrospector()Lorg/springframework/security/oauth2/server/resource/introspection/OpaqueTokenIntrospector;
+#setIntrospector(Lorg/springframework/security/oauth2/server/resource/introspection/OpaqueTokenIntrospector;)V
+#introspectionClientCredentials(Ljava/lang/String;Ljava/lang/String;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getClientCredentials$p(Lorg/springframework/security/config/web/servlet/oauth2/resourceserver/OpaqueTokenDsl;)Lkotlin/Pair;
+#access$setClientCredentials$p(Lorg/springframework/security/config/web/servlet/oauth2/resourceserver/OpaqueTokenDsl;Lkotlin/Pair;)V
@5.6.0
+#getAuthenticationManager()Lorg/springframework/security/authentication/AuthenticationManager;
+#setAuthenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)V
@5.8.0
+#getAuthenticationConverter()Lorg/springframework/security/oauth2/server/resource/introspection/OpaqueTokenAuthenticationConverter;
+#setAuthenticationConverter(Lorg/springframework/security/oauth2/server/resource/introspection/OpaqueTokenAuthenticationConverter;)V
@6.0.0
-###org/springframework/security/config/web/servlet/oauth2/resourceserver/OpaqueTokenDsl

+###org/springframework/security/config/web/servlet/oauth2/client/OAuth2ClientSecurityMarker
@5.4.0
@6.0.0
-###org/springframework/security/config/web/servlet/oauth2/client/OAuth2ClientSecurityMarker

+###org/springframework/security/config/web/servlet/oauth2/client/AuthorizationCodeGrantDsl
@5.3.0.RELEASE
+#getAuthorizationRequestResolver()Lorg/springframework/security/oauth2/client/web/OAuth2AuthorizationRequestResolver;
+#setAuthorizationRequestResolver(Lorg/springframework/security/oauth2/client/web/OAuth2AuthorizationRequestResolver;)V
+#getAuthorizationRequestRepository()Lorg/springframework/security/oauth2/client/web/AuthorizationRequestRepository;
+#setAuthorizationRequestRepository(Lorg/springframework/security/oauth2/client/web/AuthorizationRequestRepository;)V
+#getAccessTokenResponseClient()Lorg/springframework/security/oauth2/client/endpoint/OAuth2AccessTokenResponseClient;
+#setAccessTokenResponseClient(Lorg/springframework/security/oauth2/client/endpoint/OAuth2AccessTokenResponseClient;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
@5.8.0
+#getAuthorizationRedirectStrategy()Lorg/springframework/security/web/RedirectStrategy;
+#setAuthorizationRedirectStrategy(Lorg/springframework/security/web/RedirectStrategy;)V
@6.0.0
-###org/springframework/security/config/web/servlet/oauth2/client/AuthorizationCodeGrantDsl

+###org/springframework/security/config/web/servlet/HeadersDsl
@5.3.0.RELEASE
+#getDefaultsDisabled()Ljava/lang/Boolean;
+#setDefaultsDisabled(Ljava/lang/Boolean;)V
+#contentTypeOptions(Lkotlin/jvm/functions/Function1;)V
+#xssProtection(Lkotlin/jvm/functions/Function1;)V
+#cacheControl(Lkotlin/jvm/functions/Function1;)V
+#httpStrictTransportSecurity(Lkotlin/jvm/functions/Function1;)V
+#frameOptions(Lkotlin/jvm/functions/Function1;)V
+#httpPublicKeyPinning(Lkotlin/jvm/functions/Function1;)V
+#contentSecurityPolicy(Lkotlin/jvm/functions/Function1;)V
+#referrerPolicy(Lkotlin/jvm/functions/Function1;)V
+#featurePolicy(Ljava/lang/String;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getContentTypeOptions$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$setContentTypeOptions$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getXssProtection$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$setXssProtection$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getCacheControl$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$setCacheControl$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getHsts$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$setHsts$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getFrameOptions$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$setFrameOptions$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getHpkp$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$setHpkp$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getContentSecurityPolicy$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$setContentSecurityPolicy$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getReferrerPolicy$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$setReferrerPolicy$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getFeaturePolicyDirectives$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;)Ljava/lang/String;
+#access$setFeaturePolicyDirectives$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;Ljava/lang/String;)V
@5.4.0
+#addHeaderWriter(Lorg/springframework/security/web/header/HeaderWriter;)V
+#disable()V
+#access$getHeaderWriters$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;)Ljava/util/List;
+#access$setHeaderWriters$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;Ljava/util/List;)V
+#access$getDisabled$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;Z)V
@5.5.0
+#permissionsPolicy(Lkotlin/jvm/functions/Function1;)V
+#access$getPermissionsPolicy$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$setPermissionsPolicy$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;Lkotlin/jvm/functions/Function1;)V
@5.7.0
+#crossOriginOpenerPolicy(Lkotlin/jvm/functions/Function1;)V
+#crossOriginEmbedderPolicy(Lkotlin/jvm/functions/Function1;)V
+#crossOriginResourcePolicy(Lkotlin/jvm/functions/Function1;)V
+#access$getCrossOriginOpenerPolicy$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$setCrossOriginOpenerPolicy$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getCrossOriginEmbedderPolicy$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$setCrossOriginEmbedderPolicy$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getCrossOriginResourcePolicy$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$setCrossOriginResourcePolicy$p(Lorg/springframework/security/config/web/servlet/HeadersDsl;Lkotlin/jvm/functions/Function1;)V
@6.0.0
-###org/springframework/security/config/web/servlet/HeadersDsl

+###org/springframework/security/config/web/servlet/OAuth2ResourceServerDsl$sam$i$org_springframework_security_config_Customizer$0
@5.3.0.RELEASE
+#<init>(Lkotlin/jvm/functions/Function1;)V
+#customize(Ljava/lang/Object;)V
@5.7.0
-###org/springframework/security/config/web/servlet/OAuth2ResourceServerDsl$sam$i$org_springframework_security_config_Customizer$0

+###org/springframework/security/config/web/servlet/OAuth2ClientDsl
@5.3.0.RELEASE
+#getClientRegistrationRepository()Lorg/springframework/security/oauth2/client/registration/ClientRegistrationRepository;
+#setClientRegistrationRepository(Lorg/springframework/security/oauth2/client/registration/ClientRegistrationRepository;)V
+#getAuthorizedClientRepository()Lorg/springframework/security/oauth2/client/web/OAuth2AuthorizedClientRepository;
+#setAuthorizedClientRepository(Lorg/springframework/security/oauth2/client/web/OAuth2AuthorizedClientRepository;)V
+#getAuthorizedClientService()Lorg/springframework/security/oauth2/client/OAuth2AuthorizedClientService;
+#setAuthorizedClientService(Lorg/springframework/security/oauth2/client/OAuth2AuthorizedClientService;)V
+#authorizationCodeGrant(Lkotlin/jvm/functions/Function1;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getAuthorizationCodeGrant$p(Lorg/springframework/security/config/web/servlet/OAuth2ClientDsl;)Lkotlin/jvm/functions/Function1;
+#access$setAuthorizationCodeGrant$p(Lorg/springframework/security/config/web/servlet/OAuth2ClientDsl;Lkotlin/jvm/functions/Function1;)V
@6.0.0
-###org/springframework/security/config/web/servlet/OAuth2ClientDsl

+###org/springframework/security/config/web/servlet/RequiresChannelDsl
@5.3.0.RELEASE
+#getChannelProcessors()Ljava/util/List;
+#setChannelProcessors(Ljava/util/List;)V
+#secure(Lorg/springframework/security/web/util/matcher/RequestMatcher;Ljava/lang/String;)V
+#secure$default(Lorg/springframework/security/config/web/servlet/RequiresChannelDsl;Lorg/springframework/security/web/util/matcher/RequestMatcher;Ljava/lang/String;ILjava/lang/Object;)V
+#secure(Ljava/lang/String;Ljava/lang/String;)V
+#secure$default(Lorg/springframework/security/config/web/servlet/RequiresChannelDsl;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
+#secure(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#secure$default(Lorg/springframework/security/config/web/servlet/RequiresChannelDsl;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
+#getRequiresSecure()Ljava/lang/String;
+#getRequiresInsecure()Ljava/lang/String;
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getChannelSecurityRules$p(Lorg/springframework/security/config/web/servlet/RequiresChannelDsl;)Ljava/util/List;
@6.0.0
-###org/springframework/security/config/web/servlet/RequiresChannelDsl

+###org/springframework/security/config/web/servlet/ExceptionHandlingDsl
@5.3.0.RELEASE
+#getAccessDeniedPage()Ljava/lang/String;
+#setAccessDeniedPage(Ljava/lang/String;)V
+#getAccessDeniedHandler()Lorg/springframework/security/web/access/AccessDeniedHandler;
+#setAccessDeniedHandler(Lorg/springframework/security/web/access/AccessDeniedHandler;)V
+#getAuthenticationEntryPoint()Lorg/springframework/security/web/AuthenticationEntryPoint;
+#setAuthenticationEntryPoint(Lorg/springframework/security/web/AuthenticationEntryPoint;)V
+#defaultAccessDeniedHandlerFor(Lorg/springframework/security/web/access/AccessDeniedHandler;Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#defaultAuthenticationEntryPointFor(Lorg/springframework/security/web/AuthenticationEntryPoint;Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDefaultDeniedHandlerMappings$p(Lorg/springframework/security/config/web/servlet/ExceptionHandlingDsl;)Ljava/util/LinkedHashMap;
+#access$setDefaultDeniedHandlerMappings$p(Lorg/springframework/security/config/web/servlet/ExceptionHandlingDsl;Ljava/util/LinkedHashMap;)V
+#access$getDefaultEntryPointMappings$p(Lorg/springframework/security/config/web/servlet/ExceptionHandlingDsl;)Ljava/util/LinkedHashMap;
+#access$setDefaultEntryPointMappings$p(Lorg/springframework/security/config/web/servlet/ExceptionHandlingDsl;Ljava/util/LinkedHashMap;)V
+#access$getDisabled$p(Lorg/springframework/security/config/web/servlet/ExceptionHandlingDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/servlet/ExceptionHandlingDsl;Z)V
@6.0.0
-###org/springframework/security/config/web/servlet/ExceptionHandlingDsl

+###org/springframework/security/config/web/servlet/SessionManagementDsl
@5.3.0.RELEASE
+#getInvalidSessionUrl()Ljava/lang/String;
+#setInvalidSessionUrl(Ljava/lang/String;)V
+#getInvalidSessionStrategy()Lorg/springframework/security/web/session/InvalidSessionStrategy;
+#setInvalidSessionStrategy(Lorg/springframework/security/web/session/InvalidSessionStrategy;)V
+#getSessionAuthenticationErrorUrl()Ljava/lang/String;
+#setSessionAuthenticationErrorUrl(Ljava/lang/String;)V
+#getSessionAuthenticationFailureHandler()Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;
+#setSessionAuthenticationFailureHandler(Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;)V
+#getEnableSessionUrlRewriting()Ljava/lang/Boolean;
+#setEnableSessionUrlRewriting(Ljava/lang/Boolean;)V
+#getSessionCreationPolicy()Lorg/springframework/security/config/http/SessionCreationPolicy;
+#setSessionCreationPolicy(Lorg/springframework/security/config/http/SessionCreationPolicy;)V
+#getSessionAuthenticationStrategy()Lorg/springframework/security/web/authentication/session/SessionAuthenticationStrategy;
+#setSessionAuthenticationStrategy(Lorg/springframework/security/web/authentication/session/SessionAuthenticationStrategy;)V
+#sessionFixation(Lkotlin/jvm/functions/Function1;)V
+#sessionConcurrency(Lkotlin/jvm/functions/Function1;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getSessionFixation$p(Lorg/springframework/security/config/web/servlet/SessionManagementDsl;)Lkotlin/jvm/functions/Function1;
+#access$setSessionFixation$p(Lorg/springframework/security/config/web/servlet/SessionManagementDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getSessionConcurrency$p(Lorg/springframework/security/config/web/servlet/SessionManagementDsl;)Lkotlin/jvm/functions/Function1;
+#access$setSessionConcurrency$p(Lorg/springframework/security/config/web/servlet/SessionManagementDsl;Lkotlin/jvm/functions/Function1;)V
@5.8.0
+#getRequireExplicitAuthenticationStrategy()Ljava/lang/Boolean;
+#setRequireExplicitAuthenticationStrategy(Ljava/lang/Boolean;)V
@6.0.0
-###org/springframework/security/config/web/servlet/SessionManagementDsl

+###org/springframework/security/config/web/servlet/CsrfDsl
@5.3.0.RELEASE
+#getCsrfTokenRepository()Lorg/springframework/security/web/csrf/CsrfTokenRepository;
+#setCsrfTokenRepository(Lorg/springframework/security/web/csrf/CsrfTokenRepository;)V
+#getRequireCsrfProtectionMatcher()Lorg/springframework/security/web/util/matcher/RequestMatcher;
+#setRequireCsrfProtectionMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#getSessionAuthenticationStrategy()Lorg/springframework/security/web/authentication/session/SessionAuthenticationStrategy;
+#setSessionAuthenticationStrategy(Lorg/springframework/security/web/authentication/session/SessionAuthenticationStrategy;)V
+#ignoringAntMatchers([Ljava/lang/String;)V
+#ignoringRequestMatchers([Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getIgnoringAntMatchers$p(Lorg/springframework/security/config/web/servlet/CsrfDsl;)[Ljava/lang/String;
+#access$setIgnoringAntMatchers$p(Lorg/springframework/security/config/web/servlet/CsrfDsl;[Ljava/lang/String;)V
+#access$getIgnoringRequestMatchers$p(Lorg/springframework/security/config/web/servlet/CsrfDsl;)[Lorg/springframework/security/web/util/matcher/RequestMatcher;
+#access$setIgnoringRequestMatchers$p(Lorg/springframework/security/config/web/servlet/CsrfDsl;[Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#access$getDisabled$p(Lorg/springframework/security/config/web/servlet/CsrfDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/servlet/CsrfDsl;Z)V
@5.8.0
+#getCsrfTokenRequestHandler()Lorg/springframework/security/web/csrf/CsrfTokenRequestHandler;
+#setCsrfTokenRequestHandler(Lorg/springframework/security/web/csrf/CsrfTokenRequestHandler;)V
+#ignoringRequestMatchers([Ljava/lang/String;)V
+#access$getIgnoringRequestMatchersPatterns$p(Lorg/springframework/security/config/web/servlet/CsrfDsl;)[Ljava/lang/String;
+#access$setIgnoringRequestMatchersPatterns$p(Lorg/springframework/security/config/web/servlet/CsrfDsl;[Ljava/lang/String;)V
@6.0.0
-###org/springframework/security/config/web/servlet/CsrfDsl

+###org/springframework/security/config/web/server/ServerCsrfDsl
@5.4.0
+#getAccessDeniedHandler()Lorg/springframework/security/web/server/authorization/ServerAccessDeniedHandler;
+#setAccessDeniedHandler(Lorg/springframework/security/web/server/authorization/ServerAccessDeniedHandler;)V
+#getCsrfTokenRepository()Lorg/springframework/security/web/server/csrf/ServerCsrfTokenRepository;
+#setCsrfTokenRepository(Lorg/springframework/security/web/server/csrf/ServerCsrfTokenRepository;)V
+#getRequireCsrfProtectionMatcher()Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;
+#setRequireCsrfProtectionMatcher(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)V
+#getTokenFromMultipartDataEnabled()Ljava/lang/Boolean;
+#setTokenFromMultipartDataEnabled(Ljava/lang/Boolean;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDisabled$p(Lorg/springframework/security/config/web/server/ServerCsrfDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerCsrfDsl;Z)V
@5.8.0
+#tokenFromMultipartDataEnabled$annotations()V
+#getCsrfTokenRequestHandler()Lorg/springframework/security/web/server/csrf/ServerCsrfTokenRequestHandler;
+#setCsrfTokenRequestHandler(Lorg/springframework/security/web/server/csrf/ServerCsrfTokenRequestHandler;)V
@6.0.0
-#tokenFromMultipartDataEnabled$annotations()V
-#getTokenFromMultipartDataEnabled()Ljava/lang/Boolean;
-#setTokenFromMultipartDataEnabled(Ljava/lang/Boolean;)V
-#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerCsrfDsl;Z)V

+###org/springframework/security/config/web/server/ServerHttpBasicDsl
@5.4.0
+#getAuthenticationManager()Lorg/springframework/security/authentication/ReactiveAuthenticationManager;
+#setAuthenticationManager(Lorg/springframework/security/authentication/ReactiveAuthenticationManager;)V
+#getSecurityContextRepository()Lorg/springframework/security/web/server/context/ServerSecurityContextRepository;
+#setSecurityContextRepository(Lorg/springframework/security/web/server/context/ServerSecurityContextRepository;)V
+#getAuthenticationEntryPoint()Lorg/springframework/security/web/server/ServerAuthenticationEntryPoint;
+#setAuthenticationEntryPoint(Lorg/springframework/security/web/server/ServerAuthenticationEntryPoint;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDisabled$p(Lorg/springframework/security/config/web/server/ServerHttpBasicDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerHttpBasicDsl;Z)V
@5.8.0
+#getAuthenticationFailureHandler()Lorg/springframework/security/web/server/authentication/ServerAuthenticationFailureHandler;
+#setAuthenticationFailureHandler(Lorg/springframework/security/web/server/authentication/ServerAuthenticationFailureHandler;)V
@6.0.0
-#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerHttpBasicDsl;Z)V

+###org/springframework/security/config/web/server/ServerHttpsRedirectDsl
@5.4.0
+#getPortMapper()Lorg/springframework/security/web/PortMapper;
+#setPortMapper(Lorg/springframework/security/web/PortMapper;)V
+#httpsRedirectWhen([Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)V
+#httpsRedirectWhen(Lkotlin/jvm/functions/Function1;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getRedirectMatchers$p(Lorg/springframework/security/config/web/server/ServerHttpsRedirectDsl;)[Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;
+#access$setRedirectMatchers$p(Lorg/springframework/security/config/web/server/ServerHttpsRedirectDsl;[Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)V
+#access$getRedirectMatcherFunction$p(Lorg/springframework/security/config/web/server/ServerHttpsRedirectDsl;)Lkotlin/jvm/functions/Function1;
+#access$setRedirectMatcherFunction$p(Lorg/springframework/security/config/web/server/ServerHttpsRedirectDsl;Lkotlin/jvm/functions/Function1;)V
@6.0.0
-#access$setRedirectMatchers$p(Lorg/springframework/security/config/web/server/ServerHttpsRedirectDsl;[Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)V
-#access$setRedirectMatcherFunction$p(Lorg/springframework/security/config/web/server/ServerHttpsRedirectDsl;Lkotlin/jvm/functions/Function1;)V

+###org/springframework/security/config/web/server/ServerJwtDsl
@5.4.0
+#getAuthenticationManager()Lorg/springframework/security/authentication/ReactiveAuthenticationManager;
+#setAuthenticationManager(Lorg/springframework/security/authentication/ReactiveAuthenticationManager;)V
+#getJwtAuthenticationConverter()Lorg/springframework/core/convert/converter/Converter;
+#setJwtAuthenticationConverter(Lorg/springframework/core/convert/converter/Converter;)V
+#getJwtDecoder()Lorg/springframework/security/oauth2/jwt/ReactiveJwtDecoder;
+#setJwtDecoder(Lorg/springframework/security/oauth2/jwt/ReactiveJwtDecoder;)V
+#getPublicKey()Ljava/security/interfaces/RSAPublicKey;
+#setPublicKey(Ljava/security/interfaces/RSAPublicKey;)V
+#getJwkSetUri()Ljava/lang/String;
+#setJwkSetUri(Ljava/lang/String;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V

+###org/springframework/security/config/web/server/ServerCorsDsl
@5.4.0
+#getConfigurationSource()Lorg/springframework/web/cors/reactive/CorsConfigurationSource;
+#setConfigurationSource(Lorg/springframework/web/cors/reactive/CorsConfigurationSource;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDisabled$p(Lorg/springframework/security/config/web/server/ServerCorsDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerCorsDsl;Z)V
@6.0.0
-#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerCorsDsl;Z)V

+###org/springframework/security/config/web/server/ServerFrameOptionsDsl
@5.4.0
+#getMode()Lorg/springframework/security/web/server/header/XFrameOptionsServerHttpHeadersWriter$Mode;
+#setMode(Lorg/springframework/security/web/server/header/XFrameOptionsServerHttpHeadersWriter$Mode;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDisabled$p(Lorg/springframework/security/config/web/server/ServerFrameOptionsDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerFrameOptionsDsl;Z)V
@6.0.0
-#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerFrameOptionsDsl;Z)V

+###org/springframework/security/config/web/server/ServerCacheControlDsl
@5.4.0
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDisabled$p(Lorg/springframework/security/config/web/server/ServerCacheControlDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerCacheControlDsl;Z)V
@6.0.0
-#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerCacheControlDsl;Z)V

+###org/springframework/security/config/web/server/ServerOAuth2ResourceServerDsl$sam$i$org_springframework_security_config_Customizer$0
@5.4.0
+#<init>(Lkotlin/jvm/functions/Function1;)V
+#customize(Ljava/lang/Object;)V
@5.7.0
-###org/springframework/security/config/web/server/ServerOAuth2ResourceServerDsl$sam$i$org_springframework_security_config_Customizer$0

+###org/springframework/security/config/web/server/ServerContentSecurityPolicyDsl
@5.4.0
+#getPolicyDirectives()Ljava/lang/String;
+#setPolicyDirectives(Ljava/lang/String;)V
+#getReportOnly()Ljava/lang/Boolean;
+#setReportOnly(Ljava/lang/Boolean;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V

+###org/springframework/security/config/web/server/ServerOpaqueTokenDsl
@5.4.0
+#getIntrospectionUri()Ljava/lang/String;
+#setIntrospectionUri(Ljava/lang/String;)V
+#getIntrospector()Lorg/springframework/security/oauth2/server/resource/introspection/ReactiveOpaqueTokenIntrospector;
+#setIntrospector(Lorg/springframework/security/oauth2/server/resource/introspection/ReactiveOpaqueTokenIntrospector;)V
+#introspectionClientCredentials(Ljava/lang/String;Ljava/lang/String;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getClientCredentials$p(Lorg/springframework/security/config/web/server/ServerOpaqueTokenDsl;)Lkotlin/Pair;
+#access$setClientCredentials$p(Lorg/springframework/security/config/web/server/ServerOpaqueTokenDsl;Lkotlin/Pair;)V
@5.8.0
+#getAuthenticationConverter()Lorg/springframework/security/oauth2/server/resource/introspection/ReactiveOpaqueTokenAuthenticationConverter;
+#setAuthenticationConverter(Lorg/springframework/security/oauth2/server/resource/introspection/ReactiveOpaqueTokenAuthenticationConverter;)V
@6.0.0
-#access$setClientCredentials$p(Lorg/springframework/security/config/web/server/ServerOpaqueTokenDsl;Lkotlin/Pair;)V

+###org/springframework/security/config/web/server/AuthorizeExchangeDsl
@5.4.0
+#authorize(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;Lorg/springframework/security/authorization/ReactiveAuthorizationManager;)V
+#authorize$default(Lorg/springframework/security/config/web/server/AuthorizeExchangeDsl;Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;Lorg/springframework/security/authorization/ReactiveAuthorizationManager;ILjava/lang/Object;)V
+#authorize(Ljava/lang/String;Lorg/springframework/security/authorization/ReactiveAuthorizationManager;)V
+#authorize$default(Lorg/springframework/security/config/web/server/AuthorizeExchangeDsl;Ljava/lang/String;Lorg/springframework/security/authorization/ReactiveAuthorizationManager;ILjava/lang/Object;)V
+#getAnyExchange()Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;
+#getPermitAll()Lorg/springframework/security/authorization/ReactiveAuthorizationManager;
+#getDenyAll()Lorg/springframework/security/authorization/ReactiveAuthorizationManager;
+#hasRole(Ljava/lang/String;)Lorg/springframework/security/authorization/ReactiveAuthorizationManager;
+#hasAnyRole([Ljava/lang/String;)Lorg/springframework/security/authorization/ReactiveAuthorizationManager;
+#hasAuthority(Ljava/lang/String;)Lorg/springframework/security/authorization/ReactiveAuthorizationManager;
+#hasAnyAuthority([Ljava/lang/String;)Lorg/springframework/security/authorization/ReactiveAuthorizationManager;
+#getAuthenticated()Lorg/springframework/security/authorization/ReactiveAuthorizationManager;
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getAuthorizationRules$p(Lorg/springframework/security/config/web/server/AuthorizeExchangeDsl;)Ljava/util/List;
@5.7.0
+#hasIpAddress(Ljava/lang/String;)Lorg/springframework/security/authorization/ReactiveAuthorizationManager;

+###org/springframework/security/config/web/server/ServerContentTypeOptionsDsl
@5.4.0
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDisabled$p(Lorg/springframework/security/config/web/server/ServerContentTypeOptionsDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerContentTypeOptionsDsl;Z)V
@6.0.0
-#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerContentTypeOptionsDsl;Z)V

+###org/springframework/security/config/web/server/ServerRequestCacheDsl
@5.4.0
+#getRequestCache()Lorg/springframework/security/web/server/savedrequest/ServerRequestCache;
+#setRequestCache(Lorg/springframework/security/web/server/savedrequest/ServerRequestCache;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDisabled$p(Lorg/springframework/security/config/web/server/ServerRequestCacheDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerRequestCacheDsl;Z)V
@6.0.0
-#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerRequestCacheDsl;Z)V

+###org/springframework/security/config/web/server/ServerHeadersDsl
@5.4.0
+#contentTypeOptions(Lkotlin/jvm/functions/Function1;)V
+#xssProtection(Lkotlin/jvm/functions/Function1;)V
+#cache(Lkotlin/jvm/functions/Function1;)V
+#hsts(Lkotlin/jvm/functions/Function1;)V
+#frameOptions(Lkotlin/jvm/functions/Function1;)V
+#contentSecurityPolicy(Lkotlin/jvm/functions/Function1;)V
+#referrerPolicy(Lkotlin/jvm/functions/Function1;)V
+#featurePolicy(Ljava/lang/String;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getContentTypeOptions$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$setContentTypeOptions$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getXssProtection$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$setXssProtection$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getCacheControl$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$setCacheControl$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getHsts$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$setHsts$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getFrameOptions$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$setFrameOptions$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getContentSecurityPolicy$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$setContentSecurityPolicy$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getFeaturePolicyDirectives$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;)Ljava/lang/String;
+#access$setFeaturePolicyDirectives$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Ljava/lang/String;)V
+#access$getReferrerPolicy$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$setReferrerPolicy$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getDisabled$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Z)V
@5.5.0
+#permissionsPolicy(Lkotlin/jvm/functions/Function1;)V
+#access$getPermissionsPolicy$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$setPermissionsPolicy$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Lkotlin/jvm/functions/Function1;)V
@5.7.0
+#crossOriginOpenerPolicy(Lkotlin/jvm/functions/Function1;)V
+#crossOriginEmbedderPolicy(Lkotlin/jvm/functions/Function1;)V
+#crossOriginResourcePolicy(Lkotlin/jvm/functions/Function1;)V
+#access$getCrossOriginOpenerPolicy$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$setCrossOriginOpenerPolicy$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getCrossOriginEmbedderPolicy$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$setCrossOriginEmbedderPolicy$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getCrossOriginResourcePolicy$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$setCrossOriginResourcePolicy$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Lkotlin/jvm/functions/Function1;)V
@6.0.0
-#access$setContentTypeOptions$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Lkotlin/jvm/functions/Function1;)V
-#access$setXssProtection$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Lkotlin/jvm/functions/Function1;)V
-#access$setCacheControl$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Lkotlin/jvm/functions/Function1;)V
-#access$setHsts$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Lkotlin/jvm/functions/Function1;)V
-#access$setFrameOptions$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Lkotlin/jvm/functions/Function1;)V
-#access$setContentSecurityPolicy$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Lkotlin/jvm/functions/Function1;)V
-#access$setFeaturePolicyDirectives$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Ljava/lang/String;)V
-#access$setPermissionsPolicy$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Lkotlin/jvm/functions/Function1;)V
-#access$setReferrerPolicy$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Lkotlin/jvm/functions/Function1;)V
-#access$setCrossOriginOpenerPolicy$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Lkotlin/jvm/functions/Function1;)V
-#access$setCrossOriginEmbedderPolicy$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Lkotlin/jvm/functions/Function1;)V
-#access$setCrossOriginResourcePolicy$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Lkotlin/jvm/functions/Function1;)V
-#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerHeadersDsl;Z)V

+###org/springframework/security/config/web/server/ServerAnonymousDsl
@5.4.0
+#getKey()Ljava/lang/String;
+#setKey(Ljava/lang/String;)V
+#getPrincipal()Ljava/lang/Object;
+#setPrincipal(Ljava/lang/Object;)V
+#getAuthorities()Ljava/util/List;
+#setAuthorities(Ljava/util/List;)V
+#getAuthenticationFilter()Lorg/springframework/security/web/server/authentication/AnonymousAuthenticationWebFilter;
+#setAuthenticationFilter(Lorg/springframework/security/web/server/authentication/AnonymousAuthenticationWebFilter;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDisabled$p(Lorg/springframework/security/config/web/server/ServerAnonymousDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerAnonymousDsl;Z)V
@6.0.0
-#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerAnonymousDsl;Z)V

+###org/springframework/security/config/web/server/ServerFormLoginDsl
@5.4.0
+#getAuthenticationManager()Lorg/springframework/security/authentication/ReactiveAuthenticationManager;
+#setAuthenticationManager(Lorg/springframework/security/authentication/ReactiveAuthenticationManager;)V
+#getLoginPage()Ljava/lang/String;
+#setLoginPage(Ljava/lang/String;)V
+#getAuthenticationEntryPoint()Lorg/springframework/security/web/server/ServerAuthenticationEntryPoint;
+#setAuthenticationEntryPoint(Lorg/springframework/security/web/server/ServerAuthenticationEntryPoint;)V
+#getRequiresAuthenticationMatcher()Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;
+#setRequiresAuthenticationMatcher(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)V
+#getAuthenticationSuccessHandler()Lorg/springframework/security/web/server/authentication/ServerAuthenticationSuccessHandler;
+#setAuthenticationSuccessHandler(Lorg/springframework/security/web/server/authentication/ServerAuthenticationSuccessHandler;)V
+#getAuthenticationFailureHandler()Lorg/springframework/security/web/server/authentication/ServerAuthenticationFailureHandler;
+#setAuthenticationFailureHandler(Lorg/springframework/security/web/server/authentication/ServerAuthenticationFailureHandler;)V
+#getSecurityContextRepository()Lorg/springframework/security/web/server/context/ServerSecurityContextRepository;
+#setSecurityContextRepository(Lorg/springframework/security/web/server/context/ServerSecurityContextRepository;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDisabled$p(Lorg/springframework/security/config/web/server/ServerFormLoginDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerFormLoginDsl;Z)V
@6.0.0
-#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerFormLoginDsl;Z)V

+###org/springframework/security/config/web/server/ServerLogoutDsl
@5.4.0
+#getLogoutHandler()Lorg/springframework/security/web/server/authentication/logout/ServerLogoutHandler;
+#setLogoutHandler(Lorg/springframework/security/web/server/authentication/logout/ServerLogoutHandler;)V
+#getLogoutUrl()Ljava/lang/String;
+#setLogoutUrl(Ljava/lang/String;)V
+#getRequiresLogout()Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;
+#setRequiresLogout(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)V
+#getLogoutSuccessHandler()Lorg/springframework/security/web/server/authentication/logout/ServerLogoutSuccessHandler;
+#setLogoutSuccessHandler(Lorg/springframework/security/web/server/authentication/logout/ServerLogoutSuccessHandler;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDisabled$p(Lorg/springframework/security/config/web/server/ServerLogoutDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerLogoutDsl;Z)V
@6.0.0
-#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerLogoutDsl;Z)V

+###org/springframework/security/config/web/server/ServerHttpStrictTransportSecurityDsl
@5.4.0
+#getMaxAge()Ljava/time/Duration;
+#setMaxAge(Ljava/time/Duration;)V
+#getIncludeSubdomains()Ljava/lang/Boolean;
+#setIncludeSubdomains(Ljava/lang/Boolean;)V
+#getPreload()Ljava/lang/Boolean;
+#setPreload(Ljava/lang/Boolean;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDisabled$p(Lorg/springframework/security/config/web/server/ServerHttpStrictTransportSecurityDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerHttpStrictTransportSecurityDsl;Z)V
@6.0.0
-#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerHttpStrictTransportSecurityDsl;Z)V

+###org/springframework/security/config/web/server/ServerHttpSecurityDsl
@5.4.0
+#securityMatcher(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)V
+#addFilterAt(Lorg/springframework/web/server/WebFilter;Lorg/springframework/security/config/web/server/SecurityWebFiltersOrder;)V
+#addFilterBefore(Lorg/springframework/web/server/WebFilter;Lorg/springframework/security/config/web/server/SecurityWebFiltersOrder;)V
+#addFilterAfter(Lorg/springframework/web/server/WebFilter;Lorg/springframework/security/config/web/server/SecurityWebFiltersOrder;)V
+#formLogin(Lkotlin/jvm/functions/Function1;)V
+#authorizeExchange(Lkotlin/jvm/functions/Function1;)V
+#httpBasic(Lkotlin/jvm/functions/Function1;)V
+#headers(Lkotlin/jvm/functions/Function1;)V
+#cors(Lkotlin/jvm/functions/Function1;)V
+#redirectToHttps(Lkotlin/jvm/functions/Function1;)V
+#exceptionHandling(Lkotlin/jvm/functions/Function1;)V
+#x509(Lkotlin/jvm/functions/Function1;)V
+#requestCache(Lkotlin/jvm/functions/Function1;)V
+#csrf(Lkotlin/jvm/functions/Function1;)V
+#logout(Lkotlin/jvm/functions/Function1;)V
+#anonymous(Lkotlin/jvm/functions/Function1;)V
+#oauth2Login(Lkotlin/jvm/functions/Function1;)V
+#oauth2Client(Lkotlin/jvm/functions/Function1;)V
+#oauth2ResourceServer(Lkotlin/jvm/functions/Function1;)V
+#build$spring_security_config()Lorg/springframework/security/web/server/SecurityWebFilterChain;
+#<init>(Lorg/springframework/security/config/web/server/ServerHttpSecurity;Lkotlin/jvm/functions/Function1;)V
@5.6.0
+#getAuthenticationManager()Lorg/springframework/security/authentication/ReactiveAuthenticationManager;
+#setAuthenticationManager(Lorg/springframework/security/authentication/ReactiveAuthenticationManager;)V
+#passwordManagement(Lkotlin/jvm/functions/Function1;)V

+###org/springframework/security/config/web/server/ServerOAuth2ClientDsl
@5.4.0
+#getAuthenticationManager()Lorg/springframework/security/authentication/ReactiveAuthenticationManager;
+#setAuthenticationManager(Lorg/springframework/security/authentication/ReactiveAuthenticationManager;)V
+#getAuthenticationConverter()Lorg/springframework/security/web/server/authentication/ServerAuthenticationConverter;
+#setAuthenticationConverter(Lorg/springframework/security/web/server/authentication/ServerAuthenticationConverter;)V
+#getClientRegistrationRepository()Lorg/springframework/security/oauth2/client/registration/ReactiveClientRegistrationRepository;
+#setClientRegistrationRepository(Lorg/springframework/security/oauth2/client/registration/ReactiveClientRegistrationRepository;)V
+#getAuthorizedClientRepository()Lorg/springframework/security/oauth2/client/web/server/ServerOAuth2AuthorizedClientRepository;
+#setAuthorizedClientRepository(Lorg/springframework/security/oauth2/client/web/server/ServerOAuth2AuthorizedClientRepository;)V
+#getAuthorizationRequestRepository()Lorg/springframework/security/oauth2/client/web/server/ServerAuthorizationRequestRepository;
+#setAuthorizationRequestRepository(Lorg/springframework/security/oauth2/client/web/server/ServerAuthorizationRequestRepository;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
@5.8.0
+#getAuthorizationRedirectStrategy()Lorg/springframework/security/web/server/ServerRedirectStrategy;
+#setAuthorizationRedirectStrategy(Lorg/springframework/security/web/server/ServerRedirectStrategy;)V

+###org/springframework/security/config/web/server/ServerHttpsRedirectDsl$sam$i$java_util_function_Function$0
@5.4.0
+#<init>(Lkotlin/jvm/functions/Function1;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@5.7.0
-###org/springframework/security/config/web/server/ServerHttpsRedirectDsl$sam$i$java_util_function_Function$0

+###org/springframework/security/config/web/server/ServerPermissionsPolicyDsl
@5.5.0
+#getPolicy()Ljava/lang/String;
+#setPolicy(Ljava/lang/String;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V

+###org/springframework/security/config/web/server/ServerOAuth2LoginDsl
@5.4.0
+#getAuthenticationManager()Lorg/springframework/security/authentication/ReactiveAuthenticationManager;
+#setAuthenticationManager(Lorg/springframework/security/authentication/ReactiveAuthenticationManager;)V
+#getSecurityContextRepository()Lorg/springframework/security/web/server/context/ServerSecurityContextRepository;
+#setSecurityContextRepository(Lorg/springframework/security/web/server/context/ServerSecurityContextRepository;)V
+#getAuthenticationSuccessHandler()Lorg/springframework/security/web/server/authentication/ServerAuthenticationSuccessHandler;
+#setAuthenticationSuccessHandler(Lorg/springframework/security/web/server/authentication/ServerAuthenticationSuccessHandler;)V
+#getAuthenticationFailureHandler()Lorg/springframework/security/web/server/authentication/ServerAuthenticationFailureHandler;
+#setAuthenticationFailureHandler(Lorg/springframework/security/web/server/authentication/ServerAuthenticationFailureHandler;)V
+#getAuthenticationConverter()Lorg/springframework/security/web/server/authentication/ServerAuthenticationConverter;
+#setAuthenticationConverter(Lorg/springframework/security/web/server/authentication/ServerAuthenticationConverter;)V
+#getClientRegistrationRepository()Lorg/springframework/security/oauth2/client/registration/ReactiveClientRegistrationRepository;
+#setClientRegistrationRepository(Lorg/springframework/security/oauth2/client/registration/ReactiveClientRegistrationRepository;)V
+#getAuthorizedClientService()Lorg/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientService;
+#setAuthorizedClientService(Lorg/springframework/security/oauth2/client/ReactiveOAuth2AuthorizedClientService;)V
+#getAuthorizedClientRepository()Lorg/springframework/security/oauth2/client/web/server/ServerOAuth2AuthorizedClientRepository;
+#setAuthorizedClientRepository(Lorg/springframework/security/oauth2/client/web/server/ServerOAuth2AuthorizedClientRepository;)V
+#getAuthorizationRequestRepository()Lorg/springframework/security/oauth2/client/web/server/ServerAuthorizationRequestRepository;
+#setAuthorizationRequestRepository(Lorg/springframework/security/oauth2/client/web/server/ServerAuthorizationRequestRepository;)V
+#getAuthorizationRequestResolver()Lorg/springframework/security/oauth2/client/web/server/ServerOAuth2AuthorizationRequestResolver;
+#setAuthorizationRequestResolver(Lorg/springframework/security/oauth2/client/web/server/ServerOAuth2AuthorizationRequestResolver;)V
+#getAuthenticationMatcher()Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;
+#setAuthenticationMatcher(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
@5.8.0
+#getAuthorizationRedirectStrategy()Lorg/springframework/security/web/server/ServerRedirectStrategy;
+#setAuthorizationRedirectStrategy(Lorg/springframework/security/web/server/ServerRedirectStrategy;)V

+###org/springframework/security/config/web/server/ServerX509Dsl
@5.4.0
+#getPrincipalExtractor()Lorg/springframework/security/web/authentication/preauth/x509/X509PrincipalExtractor;
+#setPrincipalExtractor(Lorg/springframework/security/web/authentication/preauth/x509/X509PrincipalExtractor;)V
+#getAuthenticationManager()Lorg/springframework/security/authentication/ReactiveAuthenticationManager;
+#setAuthenticationManager(Lorg/springframework/security/authentication/ReactiveAuthenticationManager;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V

+###org/springframework/security/config/web/server/ServerXssProtectionDsl
@5.4.0
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getDisabled$p(Lorg/springframework/security/config/web/server/ServerXssProtectionDsl;)Z
+#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerXssProtectionDsl;Z)V
@5.8.0
+#getHeaderValue()Lorg/springframework/security/web/server/header/XXssProtectionServerHttpHeadersWriter$HeaderValue;
+#setHeaderValue(Lorg/springframework/security/web/server/header/XXssProtectionServerHttpHeadersWriter$HeaderValue;)V
@6.0.0
-#access$setDisabled$p(Lorg/springframework/security/config/web/server/ServerXssProtectionDsl;Z)V

+###org/springframework/security/config/web/server/ServerHeadersDsl$sam$i$org_springframework_security_config_Customizer$0
@5.4.0
+#<init>(Lkotlin/jvm/functions/Function1;)V
+#customize(Ljava/lang/Object;)V
@5.7.0
-###org/springframework/security/config/web/server/ServerHeadersDsl$sam$i$org_springframework_security_config_Customizer$0

+###org/springframework/security/config/web/server/ServerReferrerPolicyDsl
@5.4.0
+#getPolicy()Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;
+#setPolicy(Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V

+###org/springframework/security/config/web/server/ServerExceptionHandlingDsl
@5.4.0
+#getAuthenticationEntryPoint()Lorg/springframework/security/web/server/ServerAuthenticationEntryPoint;
+#setAuthenticationEntryPoint(Lorg/springframework/security/web/server/ServerAuthenticationEntryPoint;)V
+#getAccessDeniedHandler()Lorg/springframework/security/web/server/authorization/ServerAccessDeniedHandler;
+#setAccessDeniedHandler(Lorg/springframework/security/web/server/authorization/ServerAccessDeniedHandler;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V

+###org/springframework/security/config/web/server/ServerOAuth2ResourceServerDsl
@5.4.0
+#getAccessDeniedHandler()Lorg/springframework/security/web/server/authorization/ServerAccessDeniedHandler;
+#setAccessDeniedHandler(Lorg/springframework/security/web/server/authorization/ServerAccessDeniedHandler;)V
+#getAuthenticationEntryPoint()Lorg/springframework/security/web/server/ServerAuthenticationEntryPoint;
+#setAuthenticationEntryPoint(Lorg/springframework/security/web/server/ServerAuthenticationEntryPoint;)V
+#getBearerTokenConverter()Lorg/springframework/security/web/server/authentication/ServerAuthenticationConverter;
+#setBearerTokenConverter(Lorg/springframework/security/web/server/authentication/ServerAuthenticationConverter;)V
+#getAuthenticationManagerResolver()Lorg/springframework/security/authentication/ReactiveAuthenticationManagerResolver;
+#setAuthenticationManagerResolver(Lorg/springframework/security/authentication/ReactiveAuthenticationManagerResolver;)V
+#jwt(Lkotlin/jvm/functions/Function1;)V
+#opaqueToken(Lkotlin/jvm/functions/Function1;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getJwt$p(Lorg/springframework/security/config/web/server/ServerOAuth2ResourceServerDsl;)Lkotlin/jvm/functions/Function1;
+#access$setJwt$p(Lorg/springframework/security/config/web/server/ServerOAuth2ResourceServerDsl;Lkotlin/jvm/functions/Function1;)V
+#access$getOpaqueToken$p(Lorg/springframework/security/config/web/server/ServerOAuth2ResourceServerDsl;)Lkotlin/jvm/functions/Function1;
+#access$setOpaqueToken$p(Lorg/springframework/security/config/web/server/ServerOAuth2ResourceServerDsl;Lkotlin/jvm/functions/Function1;)V
@5.8.0
+#getAuthenticationFailureHandler()Lorg/springframework/security/web/server/authentication/ServerAuthenticationFailureHandler;
+#setAuthenticationFailureHandler(Lorg/springframework/security/web/server/authentication/ServerAuthenticationFailureHandler;)V
@6.0.0
-#access$setJwt$p(Lorg/springframework/security/config/web/server/ServerOAuth2ResourceServerDsl;Lkotlin/jvm/functions/Function1;)V
-#access$setOpaqueToken$p(Lorg/springframework/security/config/web/server/ServerOAuth2ResourceServerDsl;Lkotlin/jvm/functions/Function1;)V

+###org/springframework/security/config/web/server/ServerSecurityMarker
@5.4.0

+###org/springframework/security/config/web/server/ServerHttpSecurityDslKt
@5.4.0
+#invoke(Lorg/springframework/security/config/web/server/ServerHttpSecurity;Lkotlin/jvm/functions/Function1;)Lorg/springframework/security/web/server/SecurityWebFilterChain;

+###org/springframework/security/config/authentication/CachingUserDetailsService
@3.0.0.RELEASE
+#getUserCache()Lorg/springframework/security/core/userdetails/UserCache;
+#setUserCache(Lorg/springframework/security/core/userdetails/UserCache;)V
+#loadUserByUsername(Ljava/lang/String;)Lorg/springframework/security/core/userdetails/UserDetails;
@5.2.0.RELEASE
-###org/springframework/security/config/authentication/CachingUserDetailsService

+###org/springframework/security/config/saml2/RelyingPartyRegistrationsBeanDefinitionParser
@5.7.0
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/security/config/annotation/web/socket/EnableWebSocketSecurity
@5.8.0

+###org/springframework/security/config/annotation/web/configurers/HeadersConfigurer$CrossOriginResourcePolicyConfig
@5.7.0
+#<init>(Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;)V
+#policy(Lorg/springframework/security/web/header/writers/CrossOriginResourcePolicyHeaderWriter$CrossOriginResourcePolicy;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$CrossOriginResourcePolicyConfig;
+#and()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;

+###org/springframework/security/config/annotation/web/configurers/saml2/Saml2LogoutConfigurer$LogoutRequestConfigurer
@5.6.0
+#logoutUrl(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/saml2/Saml2LogoutConfigurer$LogoutRequestConfigurer;
+#logoutRequestValidator(Lorg/springframework/security/saml2/provider/service/authentication/logout/Saml2LogoutRequestValidator;)Lorg/springframework/security/config/annotation/web/configurers/saml2/Saml2LogoutConfigurer$LogoutRequestConfigurer;
+#logoutRequestResolver(Lorg/springframework/security/saml2/provider/service/web/authentication/logout/Saml2LogoutRequestResolver;)Lorg/springframework/security/config/annotation/web/configurers/saml2/Saml2LogoutConfigurer$LogoutRequestConfigurer;
+#logoutRequestRepository(Lorg/springframework/security/saml2/provider/service/web/authentication/logout/Saml2LogoutRequestRepository;)Lorg/springframework/security/config/annotation/web/configurers/saml2/Saml2LogoutConfigurer$LogoutRequestConfigurer;
+#and()Lorg/springframework/security/config/annotation/web/configurers/saml2/Saml2LogoutConfigurer;

+###org/springframework/security/config/annotation/web/configurers/saml2/Saml2LogoutConfigurer$LogoutResponseConfigurer
@5.6.0
+#logoutUrl(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/saml2/Saml2LogoutConfigurer$LogoutResponseConfigurer;
+#logoutResponseValidator(Lorg/springframework/security/saml2/provider/service/authentication/logout/Saml2LogoutResponseValidator;)Lorg/springframework/security/config/annotation/web/configurers/saml2/Saml2LogoutConfigurer$LogoutResponseConfigurer;
+#logoutResponseResolver(Lorg/springframework/security/saml2/provider/service/web/authentication/logout/Saml2LogoutResponseResolver;)Lorg/springframework/security/config/annotation/web/configurers/saml2/Saml2LogoutConfigurer$LogoutResponseConfigurer;
+#and()Lorg/springframework/security/config/annotation/web/configurers/saml2/Saml2LogoutConfigurer;

+###org/springframework/security/config/annotation/web/configurers/saml2/Saml2LogoutConfigurer
@5.6.0
+#<init>(Lorg/springframework/context/ApplicationContext;)V
+#logoutUrl(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/saml2/Saml2LogoutConfigurer;
+#relyingPartyRegistrationRepository(Lorg/springframework/security/saml2/provider/service/registration/RelyingPartyRegistrationRepository;)Lorg/springframework/security/config/annotation/web/configurers/saml2/Saml2LogoutConfigurer;
+#logoutRequest()Lorg/springframework/security/config/annotation/web/configurers/saml2/Saml2LogoutConfigurer$LogoutRequestConfigurer;
+#logoutRequest(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/saml2/Saml2LogoutConfigurer;
+#logoutResponse()Lorg/springframework/security/config/annotation/web/configurers/saml2/Saml2LogoutConfigurer$LogoutResponseConfigurer;
+#logoutResponse(Lorg/springframework/security/config/Customizer;)Lorg/springframework/security/config/annotation/web/configurers/saml2/Saml2LogoutConfigurer;
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V

+###org/springframework/security/config/annotation/web/configurers/HeadersConfigurer$CrossOriginOpenerPolicyConfig
@5.7.0
+#<init>(Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;)V
+#policy(Lorg/springframework/security/web/header/writers/CrossOriginOpenerPolicyHeaderWriter$CrossOriginOpenerPolicy;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$CrossOriginOpenerPolicyConfig;
+#and()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;

+###org/springframework/security/config/annotation/web/configurers/HeadersConfigurer$CrossOriginEmbedderPolicyConfig
@5.7.0
+#<init>(Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;)V
+#policy(Lorg/springframework/security/web/header/writers/CrossOriginEmbedderPolicyHeaderWriter$CrossOriginEmbedderPolicy;)Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer$CrossOriginEmbedderPolicyConfig;
+#and()Lorg/springframework/security/config/annotation/web/configurers/HeadersConfigurer;

+###org/springframework/security/config/annotation/web/configurers/PasswordManagementConfigurer
@5.6.0
+#<init>()V
+#changePasswordPage(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/configurers/PasswordManagementConfigurer;
+#configure(Lorg/springframework/security/config/annotation/web/HttpSecurityBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V

+###org/springframework/security/config/annotation/method/configuration/EnableMethodSecurity
@5.6.0
+#prePostEnabled()Z
+#securedEnabled()Z
+#jsr250Enabled()Z
+#proxyTargetClass()Z
+#mode()Lorg/springframework/context/annotation/AdviceMode;

+###org/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$CrossOriginOpenerPolicySpec
@5.7.0
+#policy(Lorg/springframework/security/web/server/header/CrossOriginOpenerPolicyServerHttpHeadersWriter$CrossOriginOpenerPolicy;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$CrossOriginOpenerPolicySpec;
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;

+###org/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$CrossOriginEmbedderPolicySpec
@5.7.0
+#policy(Lorg/springframework/security/web/server/header/CrossOriginEmbedderPolicyServerHttpHeadersWriter$CrossOriginEmbedderPolicy;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$CrossOriginEmbedderPolicySpec;
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;

+###org/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$CrossOriginResourcePolicySpec
@5.7.0
+#policy(Lorg/springframework/security/web/server/header/CrossOriginResourcePolicyServerHttpHeadersWriter$CrossOriginResourcePolicy;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec$CrossOriginResourcePolicySpec;
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity$HeaderSpec;

+###org/springframework/security/config/web/server/ServerHttpSecurity$PasswordManagementSpec
@5.6.0
+#changePasswordPage(Ljava/lang/String;)Lorg/springframework/security/config/web/server/ServerHttpSecurity$PasswordManagementSpec;
+#and()Lorg/springframework/security/config/web/server/ServerHttpSecurity;

+###org/springframework/security/config/ldap/LdapBindAuthenticationManagerFactory
@5.7.0
+#<init>(Lorg/springframework/ldap/core/support/BaseLdapPathContextSource;)V

+###org/springframework/security/config/ldap/LdapPasswordComparisonAuthenticationManagerFactory
@5.7.0
+#<init>(Lorg/springframework/ldap/core/support/BaseLdapPathContextSource;Lorg/springframework/security/crypto/password/PasswordEncoder;)V
+#setPasswordEncoder(Lorg/springframework/security/crypto/password/PasswordEncoder;)V
+#setPasswordAttribute(Ljava/lang/String;)V

+###org/springframework/security/config/ldap/AbstractLdapAuthenticationManagerFactory
@5.7.0
+#setContextSource(Lorg/springframework/ldap/core/support/BaseLdapPathContextSource;)V
+#setLdapAuthoritiesPopulator(Lorg/springframework/security/ldap/userdetails/LdapAuthoritiesPopulator;)V
+#setAuthoritiesMapper(Lorg/springframework/security/core/authority/mapping/GrantedAuthoritiesMapper;)V
+#setUserDetailsContextMapper(Lorg/springframework/security/ldap/userdetails/UserDetailsContextMapper;)V
+#setUserDnPatterns([Ljava/lang/String;)V
+#setUserSearchFilter(Ljava/lang/String;)V
+#setUserSearchBase(Ljava/lang/String;)V
+#createAuthenticationManager()Lorg/springframework/security/authentication/AuthenticationManager;

+###org/springframework/security/config/ldap/EmbeddedLdapServerContextSourceFactoryBean
@5.7.0
+#<init>()V
+#fromEmbeddedLdapServer()Lorg/springframework/security/config/ldap/EmbeddedLdapServerContextSourceFactoryBean;
+#setLdif(Ljava/lang/String;)V
+#setPort(I)V
+#setRoot(Ljava/lang/String;)V
+#setManagerDn(Ljava/lang/String;)V
+#setManagerPassword(Ljava/lang/String;)V
+#getObject()Lorg/springframework/security/ldap/DefaultSpringSecurityContextSource;
+#getObjectType()Ljava/lang/Class;
+#destroy()V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#getObject()Ljava/lang/Object;

+###org/springframework/security/config/method/MethodSecurityBeanDefinitionParser$PreAuthorizeAuthorizationMethodInterceptor
@5.6.0
+#<init>()V
+#getObject()Lorg/springframework/security/authorization/method/AuthorizationManagerBeforeMethodInterceptor;
+#getObjectType()Ljava/lang/Class;
+#setExpressionHandler(Lorg/springframework/security/access/expression/method/MethodSecurityExpressionHandler;)V
+#getObject()Ljava/lang/Object;
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
@6.0.0
+#setObservationRegistry(Lio/micrometer/observation/ObservationRegistry;)V

+###org/springframework/security/config/method/MethodSecurityBeanDefinitionParser$Jsr250AuthorizationMethodInterceptor
@5.6.0
+#<init>()V
+#getObject()Lorg/springframework/security/authorization/method/AuthorizationManagerBeforeMethodInterceptor;
+#getObjectType()Ljava/lang/Class;
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#getObject()Ljava/lang/Object;
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
@6.0.0
+#setObservationRegistry(Lio/micrometer/observation/ObservationRegistry;)V

+###org/springframework/security/config/method/MethodSecurityBeanDefinitionParser
@5.6.0
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/security/config/method/MethodSecurityBeanDefinitionParser$MethodSecurityExpressionHandlerBean
@5.6.0
+#<init>()V
+#getObject()Lorg/springframework/security/access/expression/method/MethodSecurityExpressionHandler;
+#getObjectType()Ljava/lang/Class;
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#getObject()Ljava/lang/Object;

+###org/springframework/security/config/method/MethodSecurityBeanDefinitionParser$PostAuthorizeAuthorizationMethodInterceptor
@5.6.0
+#<init>()V
+#getObject()Lorg/springframework/security/authorization/method/AuthorizationManagerAfterMethodInterceptor;
+#getObjectType()Ljava/lang/Class;
+#setExpressionHandler(Lorg/springframework/security/access/expression/method/MethodSecurityExpressionHandler;)V
+#getObject()Ljava/lang/Object;
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
@6.0.0
+#setObservationRegistry(Lio/micrometer/observation/ObservationRegistry;)V

+###org/springframework/security/config/http/Saml2LoginBeanDefinitionParser$Saml2LoginBeanConfig
@5.7.0
+#<init>()V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V

+###org/springframework/security/config/http/Saml2LogoutBeanDefinitionParser$Saml2RequestMatcher
@5.8.0
+#<init>()V
+#matches(Ljavax/servlet/http/HttpServletRequest;)Z
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
@6.0.0
+#matches(Ljakarta/servlet/http/HttpServletRequest;)Z
-#matches(Ljavax/servlet/http/HttpServletRequest;)Z

+###org/springframework/security/config/http/WellKnownChangePasswordBeanDefinitionParser
@5.6.0
+#<init>()V
+#parse(Lorg/w3c/dom/Element;Lorg/springframework/beans/factory/xml/ParserContext;)Lorg/springframework/beans/factory/config/BeanDefinition;

+###org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$MatcherAuthorizationManagerRule
@5.7.0
+#getMatcher()Lorg/springframework/security/web/util/matcher/RequestMatcher;
+#getRule()Lorg/springframework/security/authorization/AuthorizationManager;
+#<init>(Lorg/springframework/security/web/util/matcher/RequestMatcher;Lorg/springframework/security/authorization/AuthorizationManager;)V
+#component1()Lorg/springframework/security/web/util/matcher/RequestMatcher;
+#component2()Lorg/springframework/security/authorization/AuthorizationManager;
+#copy(Lorg/springframework/security/web/util/matcher/RequestMatcher;Lorg/springframework/security/authorization/AuthorizationManager;)Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$MatcherAuthorizationManagerRule;
+#copy$default(Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$MatcherAuthorizationManagerRule;Lorg/springframework/security/web/util/matcher/RequestMatcher;Lorg/springframework/security/authorization/AuthorizationManager;ILjava/lang/Object;)Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$MatcherAuthorizationManagerRule;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@6.0.0
-###org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$MatcherAuthorizationManagerRule

+###org/springframework/security/config/web/servlet/headers/CrossOriginOpenerPolicyDsl
@5.7.0
+#getPolicy()Lorg/springframework/security/web/header/writers/CrossOriginOpenerPolicyHeaderWriter$CrossOriginOpenerPolicy;
+#setPolicy(Lorg/springframework/security/web/header/writers/CrossOriginOpenerPolicyHeaderWriter$CrossOriginOpenerPolicy;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
@6.0.0
-###org/springframework/security/config/web/servlet/headers/CrossOriginOpenerPolicyDsl

+###org/springframework/security/config/web/servlet/headers/CrossOriginResourcePolicyDsl
@5.7.0
+#getPolicy()Lorg/springframework/security/web/header/writers/CrossOriginResourcePolicyHeaderWriter$CrossOriginResourcePolicy;
+#setPolicy(Lorg/springframework/security/web/header/writers/CrossOriginResourcePolicyHeaderWriter$CrossOriginResourcePolicy;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
@6.0.0
-###org/springframework/security/config/web/servlet/headers/CrossOriginResourcePolicyDsl

+###org/springframework/security/config/web/servlet/headers/CrossOriginEmbedderPolicyDsl
@5.7.0
+#getPolicy()Lorg/springframework/security/web/header/writers/CrossOriginEmbedderPolicyHeaderWriter$CrossOriginEmbedderPolicy;
+#setPolicy(Lorg/springframework/security/web/header/writers/CrossOriginEmbedderPolicyHeaderWriter$CrossOriginEmbedderPolicy;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
@6.0.0
-###org/springframework/security/config/web/servlet/headers/CrossOriginEmbedderPolicyDsl

+###org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternAuthorizationManagerRule
@5.7.0
+#getPattern()Ljava/lang/String;
+#getPatternType()Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;
+#getServletPath()Ljava/lang/String;
+#getHttpMethod()Lorg/springframework/http/HttpMethod;
+#getRule()Lorg/springframework/security/authorization/AuthorizationManager;
+#<init>(Ljava/lang/String;Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/security/authorization/AuthorizationManager;)V
+#<init>(Ljava/lang/String;Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/security/authorization/AuthorizationManager;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
+#component1()Ljava/lang/String;
+#component2()Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;
+#component3()Ljava/lang/String;
+#component4()Lorg/springframework/http/HttpMethod;
+#component5()Lorg/springframework/security/authorization/AuthorizationManager;
+#copy(Ljava/lang/String;Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/security/authorization/AuthorizationManager;)Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternAuthorizationManagerRule;
+#copy$default(Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternAuthorizationManagerRule;Ljava/lang/String;Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/security/authorization/AuthorizationManager;ILjava/lang/Object;)Lorg/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternAuthorizationManagerRule;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@6.0.0
-###org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$PatternAuthorizationManagerRule

+###org/springframework/security/config/web/servlet/SecurityContextDsl
@5.7.0
+#getSecurityContextRepository()Lorg/springframework/security/web/context/SecurityContextRepository;
+#setSecurityContextRepository(Lorg/springframework/security/web/context/SecurityContextRepository;)V
+#getRequireExplicitSave()Ljava/lang/Boolean;
+#setRequireExplicitSave(Ljava/lang/Boolean;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
@6.0.0
-###org/springframework/security/config/web/servlet/SecurityContextDsl

+###org/springframework/security/config/web/servlet/AuthorizeHttpRequestsDsl
@5.7.0
+#getShouldFilterAllDispatcherTypes()Ljava/lang/Boolean;
+#setShouldFilterAllDispatcherTypes(Ljava/lang/Boolean;)V
+#authorize(Lorg/springframework/security/web/util/matcher/RequestMatcher;Lorg/springframework/security/authorization/AuthorizationManager;)V
+#authorize$default(Lorg/springframework/security/config/web/servlet/AuthorizeHttpRequestsDsl;Lorg/springframework/security/web/util/matcher/RequestMatcher;Lorg/springframework/security/authorization/AuthorizationManager;ILjava/lang/Object;)V
+#authorize(Ljava/lang/String;Lorg/springframework/security/authorization/AuthorizationManager;)V
+#authorize(Lorg/springframework/http/HttpMethod;Ljava/lang/String;Lorg/springframework/security/authorization/AuthorizationManager;)V
+#authorize(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/security/authorization/AuthorizationManager;)V
+#authorize(Lorg/springframework/http/HttpMethod;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/security/authorization/AuthorizationManager;)V
+#hasAuthority(Ljava/lang/String;)Lorg/springframework/security/authorization/AuthorizationManager;
+#hasAnyAuthority([Ljava/lang/String;)Lorg/springframework/security/authorization/AuthorizationManager;
+#hasRole(Ljava/lang/String;)Lorg/springframework/security/authorization/AuthorizationManager;
+#hasAnyRole([Ljava/lang/String;)Lorg/springframework/security/authorization/AuthorizationManager;
+#getPermitAll()Lorg/springframework/security/authorization/AuthorizationManager;
+#getDenyAll()Lorg/springframework/security/authorization/AuthorizationManager;
+#getAuthenticated()Lorg/springframework/security/authorization/AuthorizationManager;
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
+#access$getAuthorizationRules$p(Lorg/springframework/security/config/web/servlet/AuthorizeHttpRequestsDsl;)Ljava/util/List;
@6.0.0
-###org/springframework/security/config/web/servlet/AuthorizeHttpRequestsDsl

+###org/springframework/security/config/web/servlet/AuthorizeHttpRequestsDsl$WhenMappings
@5.7.0
@6.0.0
-###org/springframework/security/config/web/servlet/AuthorizeHttpRequestsDsl$WhenMappings

+###org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$AuthorizationManagerRule
@5.7.0
+#getRule()Lorg/springframework/security/authorization/AuthorizationManager;
+#<init>(Lorg/springframework/security/authorization/AuthorizationManager;)V
@6.0.0
-###org/springframework/security/config/web/servlet/AbstractRequestMatcherDsl$AuthorizationManagerRule

+###org/springframework/security/config/web/servlet/PasswordManagementDsl
@5.6.0
+#getChangePasswordPage()Ljava/lang/String;
+#setChangePasswordPage(Ljava/lang/String;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V
@6.0.0
-###org/springframework/security/config/web/servlet/PasswordManagementDsl

+###org/springframework/security/config/web/server/ServerPasswordManagementDsl
@5.6.0
+#getChangePasswordPage()Ljava/lang/String;
+#setChangePasswordPage(Ljava/lang/String;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V

+###org/springframework/security/config/web/server/ServerCrossOriginResourcePolicyDsl
@5.7.0
+#getPolicy()Lorg/springframework/security/web/server/header/CrossOriginResourcePolicyServerHttpHeadersWriter$CrossOriginResourcePolicy;
+#setPolicy(Lorg/springframework/security/web/server/header/CrossOriginResourcePolicyServerHttpHeadersWriter$CrossOriginResourcePolicy;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V

+###org/springframework/security/config/web/server/ServerCrossOriginOpenerPolicyDsl
@5.7.0
+#getPolicy()Lorg/springframework/security/web/server/header/CrossOriginOpenerPolicyServerHttpHeadersWriter$CrossOriginOpenerPolicy;
+#setPolicy(Lorg/springframework/security/web/server/header/CrossOriginOpenerPolicyServerHttpHeadersWriter$CrossOriginOpenerPolicy;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V

+###org/springframework/security/config/web/server/ServerCrossOriginEmbedderPolicyDsl
@5.7.0
+#getPolicy()Lorg/springframework/security/web/server/header/CrossOriginEmbedderPolicyServerHttpHeadersWriter$CrossOriginEmbedderPolicy;
+#setPolicy(Lorg/springframework/security/web/server/header/CrossOriginEmbedderPolicyServerHttpHeadersWriter$CrossOriginEmbedderPolicy;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#<init>()V

+###org/springframework/security/config/http/UserDetailsServiceInjectionBeanPostProcessor
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@3.1.0.RELEASE
-###org/springframework/security/config/http/UserDetailsServiceInjectionBeanPostProcessor

+###org/springframework/security/config/http/HttpFirewallInjectionBeanPostProcessor
@3.0.4.RELEASE
+#<init>(Ljava/lang/String;)V
+#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@3.1.0.RELEASE
-###org/springframework/security/config/http/HttpFirewallInjectionBeanPostProcessor

+###org/springframework/security/config/annotation/authentication/configurers/GlobalAuthenticationConfigurerAdapter
@3.2.1.RELEASE
+#<init>()V
+#init(Lorg/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder;)V
+#configure(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
+#init(Lorg/springframework/security/config/annotation/SecurityBuilder;)V
@5.0.0.RELEASE
-###org/springframework/security/config/annotation/authentication/configurers/GlobalAuthenticationConfigurerAdapter

+###org/springframework/security/config/http/HttpSecurityBeanDefinitionParser$ChildAuthenticationManagerFactoryBean
@6.0.0
+#<init>(Ljava/util/List;Lorg/springframework/security/authentication/AuthenticationManager;)V
+#getObject()Lorg/springframework/security/authentication/AuthenticationManager;
+#getObjectType()Ljava/lang/Class;
+#setEraseCredentialsAfterAuthentication(Z)V
+#setAuthenticationEventPublisher(Lorg/springframework/security/authentication/AuthenticationEventPublisher;)V
+#setObservationRegistry(Lio/micrometer/observation/ObservationRegistry;)V
+#getObject()Ljava/lang/Object;

+###org/springframework/security/config/http/HttpSecurityBeanDefinitionParser$RequestRejectedHandlerPostProcessor
@6.0.0
+#postProcessBeanDefinitionRegistry(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
+#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
+#setObservationRegistry(Lio/micrometer/observation/ObservationRegistry;)V

+###org/springframework/security/config/http/HttpSecurityBeanDefinitionParser$FilterChainDecoratorFactory
@6.0.0
+#<init>()V
+#getObject()Lorg/springframework/security/web/FilterChainProxy$FilterChainDecorator;
+#getObjectType()Ljava/lang/Class;
+#setObservationRegistry(Lio/micrometer/observation/ObservationRegistry;)V
+#getObject()Ljava/lang/Object;

+###org/springframework/security/config/http/AuthorizationFilterParser$RequestMatcherDelegatingAuthorizationManagerFactory
@6.0.0
+#<init>()V
+#getObject()Lorg/springframework/security/authorization/AuthorizationManager;
+#getObjectType()Ljava/lang/Class;
+#setRequestMatcherMap(Ljava/util/Map;)V
+#setObservationRegistry(Lio/micrometer/observation/ObservationRegistry;)V
+#getObject()Ljava/lang/Object;

+###org/springframework/security/config/method/MethodSecurityBeanDefinitionParser$SecuredAuthorizationMethodInterceptor
@6.0.0
+#<init>()V
+#getObject()Lorg/springframework/security/authorization/method/AuthorizationManagerBeforeMethodInterceptor;
+#getObjectType()Ljava/lang/Class;
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
+#setObservationRegistry(Lio/micrometer/observation/ObservationRegistry;)V
+#getObject()Ljava/lang/Object;

+###org/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$MatcherAuthorizationRule
@6.0.0
+#<init>(Lorg/springframework/security/web/util/matcher/RequestMatcher;Ljava/lang/String;)V
+#getMatcher()Lorg/springframework/security/web/util/matcher/RequestMatcher;
+#getRule()Ljava/lang/String;
+#component1()Lorg/springframework/security/web/util/matcher/RequestMatcher;
+#component2()Ljava/lang/String;
+#copy(Lorg/springframework/security/web/util/matcher/RequestMatcher;Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$MatcherAuthorizationRule;
+#copy$default(Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$MatcherAuthorizationRule;Lorg/springframework/security/web/util/matcher/RequestMatcher;Ljava/lang/String;ILjava/lang/Object;)Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$MatcherAuthorizationRule;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/security/config/annotation/web/RequiresChannelDsl$get$1$WhenMappings
@6.0.0

+###org/springframework/security/config/annotation/web/OAuth2ResourceServerDsl
@6.0.0
+#<init>()V
+#getAccessDeniedHandler()Lorg/springframework/security/web/access/AccessDeniedHandler;
+#setAccessDeniedHandler(Lorg/springframework/security/web/access/AccessDeniedHandler;)V
+#getAuthenticationEntryPoint()Lorg/springframework/security/web/AuthenticationEntryPoint;
+#setAuthenticationEntryPoint(Lorg/springframework/security/web/AuthenticationEntryPoint;)V
+#getBearerTokenResolver()Lorg/springframework/security/oauth2/server/resource/web/BearerTokenResolver;
+#setBearerTokenResolver(Lorg/springframework/security/oauth2/server/resource/web/BearerTokenResolver;)V
+#getAuthenticationManagerResolver()Lorg/springframework/security/authentication/AuthenticationManagerResolver;
+#setAuthenticationManagerResolver(Lorg/springframework/security/authentication/AuthenticationManagerResolver;)V
+#jwt(Lkotlin/jvm/functions/Function1;)V
+#opaqueToken(Lkotlin/jvm/functions/Function1;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getJwt$p(Lorg/springframework/security/config/annotation/web/OAuth2ResourceServerDsl;)Lkotlin/jvm/functions/Function1;
+#access$getOpaqueToken$p(Lorg/springframework/security/config/annotation/web/OAuth2ResourceServerDsl;)Lkotlin/jvm/functions/Function1;

+###org/springframework/security/config/annotation/web/AuthorizeHttpRequestsDsl
@6.0.0
+#<init>()V
+#getShouldFilterAllDispatcherTypes()Ljava/lang/Boolean;
+#setShouldFilterAllDispatcherTypes(Ljava/lang/Boolean;)V
+#authorize(Lorg/springframework/security/web/util/matcher/RequestMatcher;Lorg/springframework/security/authorization/AuthorizationManager;)V
+#authorize$default(Lorg/springframework/security/config/annotation/web/AuthorizeHttpRequestsDsl;Lorg/springframework/security/web/util/matcher/RequestMatcher;Lorg/springframework/security/authorization/AuthorizationManager;ILjava/lang/Object;)V
+#authorize(Ljava/lang/String;Lorg/springframework/security/authorization/AuthorizationManager;)V
+#authorize(Lorg/springframework/http/HttpMethod;Ljava/lang/String;Lorg/springframework/security/authorization/AuthorizationManager;)V
+#authorize(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/security/authorization/AuthorizationManager;)V
+#authorize(Lorg/springframework/http/HttpMethod;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/security/authorization/AuthorizationManager;)V
+#hasAuthority(Ljava/lang/String;)Lorg/springframework/security/authorization/AuthorizationManager;
+#hasAnyAuthority([Ljava/lang/String;)Lorg/springframework/security/authorization/AuthorizationManager;
+#hasRole(Ljava/lang/String;)Lorg/springframework/security/authorization/AuthorizationManager;
+#hasAnyRole([Ljava/lang/String;)Lorg/springframework/security/authorization/AuthorizationManager;
+#getPermitAll()Lorg/springframework/security/authorization/AuthorizationManager;
+#getDenyAll()Lorg/springframework/security/authorization/AuthorizationManager;
+#getAuthenticated()Lorg/springframework/security/authorization/AuthorizationManager;
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getAuthorizationRules$p(Lorg/springframework/security/config/annotation/web/AuthorizeHttpRequestsDsl;)Ljava/util/List;
+#access$getHANDLER_MAPPING_INTROSPECTOR_BEAN_NAME$p(Lorg/springframework/security/config/annotation/web/AuthorizeHttpRequestsDsl;)Ljava/lang/String;

+###org/springframework/security/config/annotation/web/PasswordManagementDsl
@6.0.0
+#<init>()V
+#getChangePasswordPage()Ljava/lang/String;
+#setChangePasswordPage(Ljava/lang/String;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;

+###org/springframework/security/config/annotation/web/AbstractRequestMatcherDsl
@6.0.0
+#<init>()V
+#getAnyRequest()Lorg/springframework/security/web/util/matcher/RequestMatcher;

+###org/springframework/security/config/annotation/web/RequestCacheDsl
@6.0.0
+#<init>()V
+#getRequestCache()Lorg/springframework/security/web/savedrequest/RequestCache;
+#setRequestCache(Lorg/springframework/security/web/savedrequest/RequestCache;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;

+###org/springframework/security/config/annotation/web/HttpSecurityDslKt
@6.0.0
+#invoke(Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;Lkotlin/jvm/functions/Function1;)V

+###org/springframework/security/config/annotation/web/FormLoginDsl
@6.0.0
+#<init>()V
+#getLoginPage()Ljava/lang/String;
+#setLoginPage(Ljava/lang/String;)V
+#getAuthenticationSuccessHandler()Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;
+#setAuthenticationSuccessHandler(Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;)V
+#getAuthenticationFailureHandler()Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;
+#setAuthenticationFailureHandler(Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;)V
+#getFailureUrl()Ljava/lang/String;
+#setFailureUrl(Ljava/lang/String;)V
+#getLoginProcessingUrl()Ljava/lang/String;
+#setLoginProcessingUrl(Ljava/lang/String;)V
+#getPermitAll()Ljava/lang/Boolean;
+#setPermitAll(Ljava/lang/Boolean;)V
+#getAuthenticationDetailsSource()Lorg/springframework/security/authentication/AuthenticationDetailsSource;
+#setAuthenticationDetailsSource(Lorg/springframework/security/authentication/AuthenticationDetailsSource;)V
+#permitAll()V
+#defaultSuccessUrl(Ljava/lang/String;Z)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getDefaultSuccessUrlOption$p(Lorg/springframework/security/config/annotation/web/FormLoginDsl;)Lkotlin/Pair;

+###org/springframework/security/config/annotation/web/AuthorizeRequestsDsl$get$1$WhenMappings
@6.0.0

+###org/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$AuthorizationManagerRule
@6.0.0
+#<init>(Lorg/springframework/security/authorization/AuthorizationManager;)V
+#getRule()Lorg/springframework/security/authorization/AuthorizationManager;

+###org/springframework/security/config/annotation/web/ExceptionHandlingDsl
@6.0.0
+#<init>()V
+#getAccessDeniedPage()Ljava/lang/String;
+#setAccessDeniedPage(Ljava/lang/String;)V
+#getAccessDeniedHandler()Lorg/springframework/security/web/access/AccessDeniedHandler;
+#setAccessDeniedHandler(Lorg/springframework/security/web/access/AccessDeniedHandler;)V
+#getAuthenticationEntryPoint()Lorg/springframework/security/web/AuthenticationEntryPoint;
+#setAuthenticationEntryPoint(Lorg/springframework/security/web/AuthenticationEntryPoint;)V
+#defaultAccessDeniedHandlerFor(Lorg/springframework/security/web/access/AccessDeniedHandler;Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#defaultAuthenticationEntryPointFor(Lorg/springframework/security/web/AuthenticationEntryPoint;Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getDefaultDeniedHandlerMappings$p(Lorg/springframework/security/config/annotation/web/ExceptionHandlingDsl;)Ljava/util/LinkedHashMap;
+#access$getDefaultEntryPointMappings$p(Lorg/springframework/security/config/annotation/web/ExceptionHandlingDsl;)Ljava/util/LinkedHashMap;
+#access$getDisabled$p(Lorg/springframework/security/config/annotation/web/ExceptionHandlingDsl;)Z

+###org/springframework/security/config/annotation/web/CsrfDsl
@6.0.0
+#<init>()V
+#getCsrfTokenRepository()Lorg/springframework/security/web/csrf/CsrfTokenRepository;
+#setCsrfTokenRepository(Lorg/springframework/security/web/csrf/CsrfTokenRepository;)V
+#getRequireCsrfProtectionMatcher()Lorg/springframework/security/web/util/matcher/RequestMatcher;
+#setRequireCsrfProtectionMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#getSessionAuthenticationStrategy()Lorg/springframework/security/web/authentication/session/SessionAuthenticationStrategy;
+#setSessionAuthenticationStrategy(Lorg/springframework/security/web/authentication/session/SessionAuthenticationStrategy;)V
+#getCsrfTokenRequestHandler()Lorg/springframework/security/web/csrf/CsrfTokenRequestHandler;
+#setCsrfTokenRequestHandler(Lorg/springframework/security/web/csrf/CsrfTokenRequestHandler;)V
+#ignoringRequestMatchers([Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#ignoringRequestMatchers([Ljava/lang/String;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getIgnoringRequestMatchers$p(Lorg/springframework/security/config/annotation/web/CsrfDsl;)[Lorg/springframework/security/web/util/matcher/RequestMatcher;
+#access$getIgnoringRequestMatchersPatterns$p(Lorg/springframework/security/config/annotation/web/CsrfDsl;)[Ljava/lang/String;
+#access$getDisabled$p(Lorg/springframework/security/config/annotation/web/CsrfDsl;)Z

+###org/springframework/security/config/annotation/web/Saml2Dsl
@6.0.0
+#<init>()V
+#getRelyingPartyRegistrationRepository()Lorg/springframework/security/saml2/provider/service/registration/RelyingPartyRegistrationRepository;
+#setRelyingPartyRegistrationRepository(Lorg/springframework/security/saml2/provider/service/registration/RelyingPartyRegistrationRepository;)V
+#getLoginPage()Ljava/lang/String;
+#setLoginPage(Ljava/lang/String;)V
+#getAuthenticationSuccessHandler()Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;
+#setAuthenticationSuccessHandler(Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;)V
+#getAuthenticationFailureHandler()Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;
+#setAuthenticationFailureHandler(Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;)V
+#getFailureUrl()Ljava/lang/String;
+#setFailureUrl(Ljava/lang/String;)V
+#getLoginProcessingUrl()Ljava/lang/String;
+#setLoginProcessingUrl(Ljava/lang/String;)V
+#getPermitAll()Ljava/lang/Boolean;
+#setPermitAll(Ljava/lang/Boolean;)V
+#getAuthenticationManager()Lorg/springframework/security/authentication/AuthenticationManager;
+#setAuthenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)V
+#permitAll()V
+#defaultSuccessUrl(Ljava/lang/String;Z)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getDefaultSuccessUrlOption$p(Lorg/springframework/security/config/annotation/web/Saml2Dsl;)Lkotlin/Pair;

+###org/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$PatternAuthorizationRule
@6.0.0
+#<init>(Ljava/lang/String;Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Lorg/springframework/http/HttpMethod;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Lorg/springframework/http/HttpMethod;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
+#getPattern()Ljava/lang/String;
+#getPatternType()Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$PatternType;
+#getServletPath()Ljava/lang/String;
+#getHttpMethod()Lorg/springframework/http/HttpMethod;
+#getRule()Ljava/lang/String;
+#component1()Ljava/lang/String;
+#component2()Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$PatternType;
+#component3()Ljava/lang/String;
+#component4()Lorg/springframework/http/HttpMethod;
+#component5()Ljava/lang/String;
+#copy(Ljava/lang/String;Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Lorg/springframework/http/HttpMethod;Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$PatternAuthorizationRule;
+#copy$default(Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$PatternAuthorizationRule;Ljava/lang/String;Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Lorg/springframework/http/HttpMethod;Ljava/lang/String;ILjava/lang/Object;)Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$PatternAuthorizationRule;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/security/config/annotation/web/headers/CacheControlDsl
@6.0.0
+#<init>()V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getDisabled$p(Lorg/springframework/security/config/annotation/web/headers/CacheControlDsl;)Z

+###org/springframework/security/config/annotation/web/headers/ReferrerPolicyDsl
@6.0.0
+#<init>()V
+#getPolicy()Lorg/springframework/security/web/header/writers/ReferrerPolicyHeaderWriter$ReferrerPolicy;
+#setPolicy(Lorg/springframework/security/web/header/writers/ReferrerPolicyHeaderWriter$ReferrerPolicy;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;

+###org/springframework/security/config/annotation/web/headers/CrossOriginEmbedderPolicyDsl
@6.0.0
+#<init>()V
+#getPolicy()Lorg/springframework/security/web/header/writers/CrossOriginEmbedderPolicyHeaderWriter$CrossOriginEmbedderPolicy;
+#setPolicy(Lorg/springframework/security/web/header/writers/CrossOriginEmbedderPolicyHeaderWriter$CrossOriginEmbedderPolicy;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;

+###org/springframework/security/config/annotation/web/headers/XssProtectionConfigDsl
@6.0.0
+#<init>()V
+#getHeaderValue()Lorg/springframework/security/web/header/writers/XXssProtectionHeaderWriter$HeaderValue;
+#setHeaderValue(Lorg/springframework/security/web/header/writers/XXssProtectionHeaderWriter$HeaderValue;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getDisabled$p(Lorg/springframework/security/config/annotation/web/headers/XssProtectionConfigDsl;)Z

+###org/springframework/security/config/annotation/web/headers/ContentTypeOptionsDsl
@6.0.0
+#<init>()V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getDisabled$p(Lorg/springframework/security/config/annotation/web/headers/ContentTypeOptionsDsl;)Z

+###org/springframework/security/config/annotation/web/headers/HttpPublicKeyPinningDsl
@6.0.0
+#<init>()V
+#getPins()Ljava/util/Map;
+#setPins(Ljava/util/Map;)V
+#getMaxAgeInSeconds()Ljava/lang/Long;
+#setMaxAgeInSeconds(Ljava/lang/Long;)V
+#getIncludeSubDomains()Ljava/lang/Boolean;
+#setIncludeSubDomains(Ljava/lang/Boolean;)V
+#getReportOnly()Ljava/lang/Boolean;
+#setReportOnly(Ljava/lang/Boolean;)V
+#getReportUri()Ljava/lang/String;
+#setReportUri(Ljava/lang/String;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getDisabled$p(Lorg/springframework/security/config/annotation/web/headers/HttpPublicKeyPinningDsl;)Z

+###org/springframework/security/config/annotation/web/headers/PermissionsPolicyDsl
@6.0.0
+#<init>()V
+#getPolicy()Ljava/lang/String;
+#setPolicy(Ljava/lang/String;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;

+###org/springframework/security/config/annotation/web/headers/CrossOriginResourcePolicyDsl
@6.0.0
+#<init>()V
+#getPolicy()Lorg/springframework/security/web/header/writers/CrossOriginResourcePolicyHeaderWriter$CrossOriginResourcePolicy;
+#setPolicy(Lorg/springframework/security/web/header/writers/CrossOriginResourcePolicyHeaderWriter$CrossOriginResourcePolicy;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;

+###org/springframework/security/config/annotation/web/headers/HttpStrictTransportSecurityDsl
@6.0.0
+#<init>()V
+#getMaxAgeInSeconds()Ljava/lang/Long;
+#setMaxAgeInSeconds(Ljava/lang/Long;)V
+#getRequestMatcher()Lorg/springframework/security/web/util/matcher/RequestMatcher;
+#setRequestMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#getIncludeSubDomains()Ljava/lang/Boolean;
+#setIncludeSubDomains(Ljava/lang/Boolean;)V
+#getPreload()Ljava/lang/Boolean;
+#setPreload(Ljava/lang/Boolean;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getDisabled$p(Lorg/springframework/security/config/annotation/web/headers/HttpStrictTransportSecurityDsl;)Z

+###org/springframework/security/config/annotation/web/headers/CrossOriginOpenerPolicyDsl
@6.0.0
+#<init>()V
+#getPolicy()Lorg/springframework/security/web/header/writers/CrossOriginOpenerPolicyHeaderWriter$CrossOriginOpenerPolicy;
+#setPolicy(Lorg/springframework/security/web/header/writers/CrossOriginOpenerPolicyHeaderWriter$CrossOriginOpenerPolicy;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;

+###org/springframework/security/config/annotation/web/headers/FrameOptionsDsl
@6.0.0
+#<init>()V
+#getSameOrigin()Ljava/lang/Boolean;
+#setSameOrigin(Ljava/lang/Boolean;)V
+#getDeny()Ljava/lang/Boolean;
+#setDeny(Ljava/lang/Boolean;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getDisabled$p(Lorg/springframework/security/config/annotation/web/headers/FrameOptionsDsl;)Z

+###org/springframework/security/config/annotation/web/headers/ContentSecurityPolicyDsl
@6.0.0
+#<init>()V
+#getPolicyDirectives()Ljava/lang/String;
+#setPolicyDirectives(Ljava/lang/String;)V
+#getReportOnly()Ljava/lang/Boolean;
+#setReportOnly(Ljava/lang/Boolean;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;

+###org/springframework/security/config/annotation/web/headers/HeadersSecurityMarker
@6.0.0

+###org/springframework/security/config/annotation/web/HeadersDsl
@6.0.0
+#<init>()V
+#getDefaultsDisabled()Ljava/lang/Boolean;
+#setDefaultsDisabled(Ljava/lang/Boolean;)V
+#contentTypeOptions(Lkotlin/jvm/functions/Function1;)V
+#xssProtection(Lkotlin/jvm/functions/Function1;)V
+#cacheControl(Lkotlin/jvm/functions/Function1;)V
+#httpStrictTransportSecurity(Lkotlin/jvm/functions/Function1;)V
+#frameOptions(Lkotlin/jvm/functions/Function1;)V
+#httpPublicKeyPinning(Lkotlin/jvm/functions/Function1;)V
+#contentSecurityPolicy(Lkotlin/jvm/functions/Function1;)V
+#referrerPolicy(Lkotlin/jvm/functions/Function1;)V
+#featurePolicy(Ljava/lang/String;)V
+#permissionsPolicy(Lkotlin/jvm/functions/Function1;)V
+#crossOriginOpenerPolicy(Lkotlin/jvm/functions/Function1;)V
+#crossOriginEmbedderPolicy(Lkotlin/jvm/functions/Function1;)V
+#crossOriginResourcePolicy(Lkotlin/jvm/functions/Function1;)V
+#addHeaderWriter(Lorg/springframework/security/web/header/HeaderWriter;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getContentTypeOptions$p(Lorg/springframework/security/config/annotation/web/HeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$getXssProtection$p(Lorg/springframework/security/config/annotation/web/HeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$getCacheControl$p(Lorg/springframework/security/config/annotation/web/HeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$getHsts$p(Lorg/springframework/security/config/annotation/web/HeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$getFrameOptions$p(Lorg/springframework/security/config/annotation/web/HeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$getHpkp$p(Lorg/springframework/security/config/annotation/web/HeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$getContentSecurityPolicy$p(Lorg/springframework/security/config/annotation/web/HeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$getReferrerPolicy$p(Lorg/springframework/security/config/annotation/web/HeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$getFeaturePolicyDirectives$p(Lorg/springframework/security/config/annotation/web/HeadersDsl;)Ljava/lang/String;
+#access$getPermissionsPolicy$p(Lorg/springframework/security/config/annotation/web/HeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$getCrossOriginOpenerPolicy$p(Lorg/springframework/security/config/annotation/web/HeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$getCrossOriginEmbedderPolicy$p(Lorg/springframework/security/config/annotation/web/HeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$getCrossOriginResourcePolicy$p(Lorg/springframework/security/config/annotation/web/HeadersDsl;)Lkotlin/jvm/functions/Function1;
+#access$getHeaderWriters$p(Lorg/springframework/security/config/annotation/web/HeadersDsl;)Ljava/util/List;
+#access$getDisabled$p(Lorg/springframework/security/config/annotation/web/HeadersDsl;)Z

+###org/springframework/security/config/annotation/web/HttpSecurityDsl
@6.0.0
+#<init>(Lorg/springframework/security/config/annotation/web/builders/HttpSecurity;Lkotlin/jvm/functions/Function1;)V
+#getAuthenticationManager()Lorg/springframework/security/authentication/AuthenticationManager;
+#setAuthenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)V
+#apply(Lorg/springframework/security/config/annotation/SecurityConfigurerAdapter;Lkotlin/jvm/functions/Function1;)Lorg/springframework/security/config/annotation/SecurityConfigurerAdapter;
+#apply$default(Lorg/springframework/security/config/annotation/web/HttpSecurityDsl;Lorg/springframework/security/config/annotation/SecurityConfigurerAdapter;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/springframework/security/config/annotation/SecurityConfigurerAdapter;
+#securityMatcher([Ljava/lang/String;)V
+#securityMatcher([Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#formLogin(Lkotlin/jvm/functions/Function1;)V
+#authorizeRequests(Lkotlin/jvm/functions/Function1;)V
+#authorizeHttpRequests(Lkotlin/jvm/functions/Function1;)V
+#httpBasic(Lkotlin/jvm/functions/Function1;)V
+#passwordManagement(Lkotlin/jvm/functions/Function1;)V
+#headers(Lkotlin/jvm/functions/Function1;)V
+#cors(Lkotlin/jvm/functions/Function1;)V
+#sessionManagement(Lkotlin/jvm/functions/Function1;)V
+#portMapper(Lkotlin/jvm/functions/Function1;)V
+#requiresChannel(Lkotlin/jvm/functions/Function1;)V
+#x509(Lkotlin/jvm/functions/Function1;)V
+#requestCache(Lkotlin/jvm/functions/Function1;)V
+#exceptionHandling(Lkotlin/jvm/functions/Function1;)V
+#csrf(Lkotlin/jvm/functions/Function1;)V
+#logout(Lkotlin/jvm/functions/Function1;)V
+#saml2Login(Lkotlin/jvm/functions/Function1;)V
+#anonymous(Lkotlin/jvm/functions/Function1;)V
+#oauth2Login(Lkotlin/jvm/functions/Function1;)V
+#oauth2Client(Lkotlin/jvm/functions/Function1;)V
+#oauth2ResourceServer(Lkotlin/jvm/functions/Function1;)V
+#rememberMe(Lkotlin/jvm/functions/Function1;)V
+#addFilterAt(Ljakarta/servlet/Filter;Ljava/lang/Class;)V
+#addFilterAt(Ljakarta/servlet/Filter;)V
+#addFilterAfter(Ljakarta/servlet/Filter;Ljava/lang/Class;)V
+#addFilterAfter(Ljakarta/servlet/Filter;)V
+#addFilterBefore(Ljakarta/servlet/Filter;Ljava/lang/Class;)V
+#addFilterBefore(Ljakarta/servlet/Filter;)V
+#build$spring_security_config()V
+#securityContext(Lkotlin/jvm/functions/Function1;)V

+###org/springframework/security/config/annotation/web/X509Dsl
@6.0.0
+#<init>()V
+#getX509AuthenticationFilter()Lorg/springframework/security/web/authentication/preauth/x509/X509AuthenticationFilter;
+#setX509AuthenticationFilter(Lorg/springframework/security/web/authentication/preauth/x509/X509AuthenticationFilter;)V
+#getX509PrincipalExtractor()Lorg/springframework/security/web/authentication/preauth/x509/X509PrincipalExtractor;
+#setX509PrincipalExtractor(Lorg/springframework/security/web/authentication/preauth/x509/X509PrincipalExtractor;)V
+#getAuthenticationDetailsSource()Lorg/springframework/security/authentication/AuthenticationDetailsSource;
+#setAuthenticationDetailsSource(Lorg/springframework/security/authentication/AuthenticationDetailsSource;)V
+#getUserDetailsService()Lorg/springframework/security/core/userdetails/UserDetailsService;
+#setUserDetailsService(Lorg/springframework/security/core/userdetails/UserDetailsService;)V
+#getAuthenticationUserDetailsService()Lorg/springframework/security/core/userdetails/AuthenticationUserDetailsService;
+#setAuthenticationUserDetailsService(Lorg/springframework/security/core/userdetails/AuthenticationUserDetailsService;)V
+#getSubjectPrincipalRegex()Ljava/lang/String;
+#setSubjectPrincipalRegex(Ljava/lang/String;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;

+###org/springframework/security/config/annotation/web/AuthorizeHttpRequestsDsl$get$1$WhenMappings
@6.0.0

+###org/springframework/security/config/annotation/web/LogoutDsl
@6.0.0
+#<init>()V
+#getClearAuthentication()Ljava/lang/Boolean;
+#setClearAuthentication(Ljava/lang/Boolean;)V
+#getInvalidateHttpSession()Ljava/lang/Boolean;
+#setInvalidateHttpSession(Ljava/lang/Boolean;)V
+#getLogoutUrl()Ljava/lang/String;
+#setLogoutUrl(Ljava/lang/String;)V
+#getLogoutRequestMatcher()Lorg/springframework/security/web/util/matcher/RequestMatcher;
+#setLogoutRequestMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#getLogoutSuccessUrl()Ljava/lang/String;
+#setLogoutSuccessUrl(Ljava/lang/String;)V
+#getLogoutSuccessHandler()Lorg/springframework/security/web/authentication/logout/LogoutSuccessHandler;
+#setLogoutSuccessHandler(Lorg/springframework/security/web/authentication/logout/LogoutSuccessHandler;)V
+#getPermitAll()Ljava/lang/Boolean;
+#setPermitAll(Ljava/lang/Boolean;)V
+#addLogoutHandler(Lorg/springframework/security/web/authentication/logout/LogoutHandler;)V
+#deleteCookies([Ljava/lang/String;)V
+#defaultLogoutSuccessHandlerFor(Lorg/springframework/security/web/authentication/logout/LogoutSuccessHandler;Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#disable()V
+#permitAll()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getDeleteCookies$p(Lorg/springframework/security/config/annotation/web/LogoutDsl;)[Ljava/lang/String;
+#access$getDefaultLogoutSuccessHandlerMappings$p(Lorg/springframework/security/config/annotation/web/LogoutDsl;)Ljava/util/LinkedHashMap;
+#access$getLogoutHandlers$p(Lorg/springframework/security/config/annotation/web/LogoutDsl;)Ljava/util/List;
+#access$getDisabled$p(Lorg/springframework/security/config/annotation/web/LogoutDsl;)Z

+###org/springframework/security/config/annotation/web/OAuth2LoginDsl
@6.0.0
+#<init>()V
+#getClientRegistrationRepository()Lorg/springframework/security/oauth2/client/registration/ClientRegistrationRepository;
+#setClientRegistrationRepository(Lorg/springframework/security/oauth2/client/registration/ClientRegistrationRepository;)V
+#getAuthorizedClientRepository()Lorg/springframework/security/oauth2/client/web/OAuth2AuthorizedClientRepository;
+#setAuthorizedClientRepository(Lorg/springframework/security/oauth2/client/web/OAuth2AuthorizedClientRepository;)V
+#getAuthorizedClientService()Lorg/springframework/security/oauth2/client/OAuth2AuthorizedClientService;
+#setAuthorizedClientService(Lorg/springframework/security/oauth2/client/OAuth2AuthorizedClientService;)V
+#getLoginPage()Ljava/lang/String;
+#setLoginPage(Ljava/lang/String;)V
+#getAuthenticationSuccessHandler()Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;
+#setAuthenticationSuccessHandler(Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;)V
+#getAuthenticationFailureHandler()Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;
+#setAuthenticationFailureHandler(Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;)V
+#getFailureUrl()Ljava/lang/String;
+#setFailureUrl(Ljava/lang/String;)V
+#getLoginProcessingUrl()Ljava/lang/String;
+#setLoginProcessingUrl(Ljava/lang/String;)V
+#getPermitAll()Ljava/lang/Boolean;
+#setPermitAll(Ljava/lang/Boolean;)V
+#getAuthenticationDetailsSource()Lorg/springframework/security/authentication/AuthenticationDetailsSource;
+#setAuthenticationDetailsSource(Lorg/springframework/security/authentication/AuthenticationDetailsSource;)V
+#permitAll()V
+#defaultSuccessUrl(Ljava/lang/String;Z)V
+#authorizationEndpoint(Lkotlin/jvm/functions/Function1;)V
+#tokenEndpoint(Lkotlin/jvm/functions/Function1;)V
+#redirectionEndpoint(Lkotlin/jvm/functions/Function1;)V
+#userInfoEndpoint(Lkotlin/jvm/functions/Function1;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getDefaultSuccessUrlOption$p(Lorg/springframework/security/config/annotation/web/OAuth2LoginDsl;)Lkotlin/Pair;
+#access$getAuthorizationEndpoint$p(Lorg/springframework/security/config/annotation/web/OAuth2LoginDsl;)Lkotlin/jvm/functions/Function1;
+#access$getTokenEndpoint$p(Lorg/springframework/security/config/annotation/web/OAuth2LoginDsl;)Lkotlin/jvm/functions/Function1;
+#access$getRedirectionEndpoint$p(Lorg/springframework/security/config/annotation/web/OAuth2LoginDsl;)Lkotlin/jvm/functions/Function1;
+#access$getUserInfoEndpoint$p(Lorg/springframework/security/config/annotation/web/OAuth2LoginDsl;)Lkotlin/jvm/functions/Function1;

+###org/springframework/security/config/annotation/web/OAuth2ClientDsl
@6.0.0
+#<init>()V
+#getClientRegistrationRepository()Lorg/springframework/security/oauth2/client/registration/ClientRegistrationRepository;
+#setClientRegistrationRepository(Lorg/springframework/security/oauth2/client/registration/ClientRegistrationRepository;)V
+#getAuthorizedClientRepository()Lorg/springframework/security/oauth2/client/web/OAuth2AuthorizedClientRepository;
+#setAuthorizedClientRepository(Lorg/springframework/security/oauth2/client/web/OAuth2AuthorizedClientRepository;)V
+#getAuthorizedClientService()Lorg/springframework/security/oauth2/client/OAuth2AuthorizedClientService;
+#setAuthorizedClientService(Lorg/springframework/security/oauth2/client/OAuth2AuthorizedClientService;)V
+#authorizationCodeGrant(Lkotlin/jvm/functions/Function1;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getAuthorizationCodeGrant$p(Lorg/springframework/security/config/annotation/web/OAuth2ClientDsl;)Lkotlin/jvm/functions/Function1;

+###org/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$MatcherAuthorizationManagerRule
@6.0.0
+#<init>(Lorg/springframework/security/web/util/matcher/RequestMatcher;Lorg/springframework/security/authorization/AuthorizationManager;)V
+#getMatcher()Lorg/springframework/security/web/util/matcher/RequestMatcher;
+#getRule()Lorg/springframework/security/authorization/AuthorizationManager;
+#component1()Lorg/springframework/security/web/util/matcher/RequestMatcher;
+#component2()Lorg/springframework/security/authorization/AuthorizationManager;
+#copy(Lorg/springframework/security/web/util/matcher/RequestMatcher;Lorg/springframework/security/authorization/AuthorizationManager;)Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$MatcherAuthorizationManagerRule;
+#copy$default(Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$MatcherAuthorizationManagerRule;Lorg/springframework/security/web/util/matcher/RequestMatcher;Lorg/springframework/security/authorization/AuthorizationManager;ILjava/lang/Object;)Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$MatcherAuthorizationManagerRule;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$PatternAuthorizationManagerRule
@6.0.0
+#<init>(Ljava/lang/String;Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/security/authorization/AuthorizationManager;)V
+#<init>(Ljava/lang/String;Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/security/authorization/AuthorizationManager;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
+#getPattern()Ljava/lang/String;
+#getPatternType()Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$PatternType;
+#getServletPath()Ljava/lang/String;
+#getHttpMethod()Lorg/springframework/http/HttpMethod;
+#getRule()Lorg/springframework/security/authorization/AuthorizationManager;
+#component1()Ljava/lang/String;
+#component2()Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$PatternType;
+#component3()Ljava/lang/String;
+#component4()Lorg/springframework/http/HttpMethod;
+#component5()Lorg/springframework/security/authorization/AuthorizationManager;
+#copy(Ljava/lang/String;Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/security/authorization/AuthorizationManager;)Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$PatternAuthorizationManagerRule;
+#copy$default(Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$PatternAuthorizationManagerRule;Ljava/lang/String;Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$PatternType;Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/security/authorization/AuthorizationManager;ILjava/lang/Object;)Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$PatternAuthorizationManagerRule;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/security/config/annotation/web/session/SessionSecurityMarker
@6.0.0

+###org/springframework/security/config/annotation/web/session/SessionFixationDsl$get$1$WhenMappings
@6.0.0

+###org/springframework/security/config/annotation/web/session/SessionConcurrencyDsl
@6.0.0
+#<init>()V
+#getMaximumSessions()Ljava/lang/Integer;
+#setMaximumSessions(Ljava/lang/Integer;)V
+#getExpiredUrl()Ljava/lang/String;
+#setExpiredUrl(Ljava/lang/String;)V
+#getExpiredSessionStrategy()Lorg/springframework/security/web/session/SessionInformationExpiredStrategy;
+#setExpiredSessionStrategy(Lorg/springframework/security/web/session/SessionInformationExpiredStrategy;)V
+#getMaxSessionsPreventsLogin()Ljava/lang/Boolean;
+#setMaxSessionsPreventsLogin(Ljava/lang/Boolean;)V
+#getSessionRegistry()Lorg/springframework/security/core/session/SessionRegistry;
+#setSessionRegistry(Lorg/springframework/security/core/session/SessionRegistry;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;

+###org/springframework/security/config/annotation/web/session/SessionFixationDsl
@6.0.0
+#<init>()V
+#newSession()V
+#migrateSession()V
+#changeSessionId()V
+#none()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getStrategy$p(Lorg/springframework/security/config/annotation/web/session/SessionFixationDsl;)Lorg/springframework/security/config/annotation/web/session/SessionFixationStrategy;

+###org/springframework/security/config/annotation/web/RequiresChannelDsl
@6.0.0
+#<init>()V
+#getChannelProcessors()Ljava/util/List;
+#setChannelProcessors(Ljava/util/List;)V
+#secure(Lorg/springframework/security/web/util/matcher/RequestMatcher;Ljava/lang/String;)V
+#secure$default(Lorg/springframework/security/config/annotation/web/RequiresChannelDsl;Lorg/springframework/security/web/util/matcher/RequestMatcher;Ljava/lang/String;ILjava/lang/Object;)V
+#secure(Ljava/lang/String;Ljava/lang/String;)V
+#secure$default(Lorg/springframework/security/config/annotation/web/RequiresChannelDsl;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
+#secure(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#secure$default(Lorg/springframework/security/config/annotation/web/RequiresChannelDsl;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
+#getRequiresSecure()Ljava/lang/String;
+#getRequiresInsecure()Ljava/lang/String;
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getChannelSecurityRules$p(Lorg/springframework/security/config/annotation/web/RequiresChannelDsl;)Ljava/util/List;
+#access$getHANDLER_MAPPING_INTROSPECTOR_BEAN_NAME$p(Lorg/springframework/security/config/annotation/web/RequiresChannelDsl;)Ljava/lang/String;

+###org/springframework/security/config/annotation/web/HttpBasicDsl
@6.0.0
+#<init>()V
+#getRealmName()Ljava/lang/String;
+#setRealmName(Ljava/lang/String;)V
+#getAuthenticationEntryPoint()Lorg/springframework/security/web/AuthenticationEntryPoint;
+#setAuthenticationEntryPoint(Lorg/springframework/security/web/AuthenticationEntryPoint;)V
+#getAuthenticationDetailsSource()Lorg/springframework/security/authentication/AuthenticationDetailsSource;
+#setAuthenticationDetailsSource(Lorg/springframework/security/authentication/AuthenticationDetailsSource;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getDisabled$p(Lorg/springframework/security/config/annotation/web/HttpBasicDsl;)Z

+###org/springframework/security/config/annotation/web/AuthorizeRequestsDsl
@6.0.0
+#<init>()V
+#authorize(Lorg/springframework/security/web/util/matcher/RequestMatcher;Ljava/lang/String;)V
+#authorize$default(Lorg/springframework/security/config/annotation/web/AuthorizeRequestsDsl;Lorg/springframework/security/web/util/matcher/RequestMatcher;Ljava/lang/String;ILjava/lang/Object;)V
+#authorize(Ljava/lang/String;Ljava/lang/String;)V
+#authorize(Lorg/springframework/http/HttpMethod;Ljava/lang/String;Ljava/lang/String;)V
+#authorize(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#authorize(Lorg/springframework/http/HttpMethod;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#hasAuthority(Ljava/lang/String;)Ljava/lang/String;
+#hasAnyAuthority([Ljava/lang/String;)Ljava/lang/String;
+#hasRole(Ljava/lang/String;)Ljava/lang/String;
+#hasAnyRole([Ljava/lang/String;)Ljava/lang/String;
+#getPermitAll()Ljava/lang/String;
+#getAnonymous()Ljava/lang/String;
+#getRememberMe()Ljava/lang/String;
+#getDenyAll()Ljava/lang/String;
+#getAuthenticated()Ljava/lang/String;
+#getFullyAuthenticated()Ljava/lang/String;
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getAuthorizationRules$p(Lorg/springframework/security/config/annotation/web/AuthorizeRequestsDsl;)Ljava/util/List;
+#access$getHANDLER_MAPPING_INTROSPECTOR_BEAN_NAME$p(Lorg/springframework/security/config/annotation/web/AuthorizeRequestsDsl;)Ljava/lang/String;

+###org/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$AuthorizationRule
@6.0.0
+#<init>(Ljava/lang/String;)V
+#getRule()Ljava/lang/String;

+###org/springframework/security/config/annotation/web/CorsDsl
@6.0.0
+#<init>()V
+#getConfigurationSource()Lorg/springframework/web/cors/CorsConfigurationSource;
+#setConfigurationSource(Lorg/springframework/web/cors/CorsConfigurationSource;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getDisabled$p(Lorg/springframework/security/config/annotation/web/CorsDsl;)Z

+###org/springframework/security/config/annotation/web/AnonymousDsl
@6.0.0
+#<init>()V
+#getKey()Ljava/lang/String;
+#setKey(Ljava/lang/String;)V
+#getPrincipal()Ljava/lang/Object;
+#setPrincipal(Ljava/lang/Object;)V
+#getAuthorities()Ljava/util/List;
+#setAuthorities(Ljava/util/List;)V
+#getAuthenticationProvider()Lorg/springframework/security/authentication/AuthenticationProvider;
+#setAuthenticationProvider(Lorg/springframework/security/authentication/AuthenticationProvider;)V
+#getAuthenticationFilter()Lorg/springframework/security/web/authentication/AnonymousAuthenticationFilter;
+#setAuthenticationFilter(Lorg/springframework/security/web/authentication/AnonymousAuthenticationFilter;)V
+#disable()V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getDisabled$p(Lorg/springframework/security/config/annotation/web/AnonymousDsl;)Z

+###org/springframework/security/config/annotation/web/SecurityContextDsl
@6.0.0
+#<init>()V
+#getSecurityContextRepository()Lorg/springframework/security/web/context/SecurityContextRepository;
+#setSecurityContextRepository(Lorg/springframework/security/web/context/SecurityContextRepository;)V
+#getRequireExplicitSave()Ljava/lang/Boolean;
+#setRequireExplicitSave(Ljava/lang/Boolean;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;

+###org/springframework/security/config/annotation/web/SessionManagementDsl
@6.0.0
+#<init>()V
+#getInvalidSessionUrl()Ljava/lang/String;
+#setInvalidSessionUrl(Ljava/lang/String;)V
+#getInvalidSessionStrategy()Lorg/springframework/security/web/session/InvalidSessionStrategy;
+#setInvalidSessionStrategy(Lorg/springframework/security/web/session/InvalidSessionStrategy;)V
+#getSessionAuthenticationErrorUrl()Ljava/lang/String;
+#setSessionAuthenticationErrorUrl(Ljava/lang/String;)V
+#getSessionAuthenticationFailureHandler()Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;
+#setSessionAuthenticationFailureHandler(Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;)V
+#getEnableSessionUrlRewriting()Ljava/lang/Boolean;
+#setEnableSessionUrlRewriting(Ljava/lang/Boolean;)V
+#getRequireExplicitAuthenticationStrategy()Ljava/lang/Boolean;
+#setRequireExplicitAuthenticationStrategy(Ljava/lang/Boolean;)V
+#getSessionCreationPolicy()Lorg/springframework/security/config/http/SessionCreationPolicy;
+#setSessionCreationPolicy(Lorg/springframework/security/config/http/SessionCreationPolicy;)V
+#getSessionAuthenticationStrategy()Lorg/springframework/security/web/authentication/session/SessionAuthenticationStrategy;
+#setSessionAuthenticationStrategy(Lorg/springframework/security/web/authentication/session/SessionAuthenticationStrategy;)V
+#sessionFixation(Lkotlin/jvm/functions/Function1;)V
+#sessionConcurrency(Lkotlin/jvm/functions/Function1;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getSessionFixation$p(Lorg/springframework/security/config/annotation/web/SessionManagementDsl;)Lkotlin/jvm/functions/Function1;
+#access$getSessionConcurrency$p(Lorg/springframework/security/config/annotation/web/SessionManagementDsl;)Lkotlin/jvm/functions/Function1;

+###org/springframework/security/config/annotation/web/PortMapperDsl
@6.0.0
+#<init>()V
+#getPortMapper()Lorg/springframework/security/web/PortMapper;
+#setPortMapper(Lorg/springframework/security/web/PortMapper;)V
+#map(II)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getMappings$p(Lorg/springframework/security/config/annotation/web/PortMapperDsl;)Ljava/util/List;

+###org/springframework/security/config/annotation/web/oauth2/resourceserver/JwtDsl
@6.0.0
+#<init>()V
+#getAuthenticationManager()Lorg/springframework/security/authentication/AuthenticationManager;
+#setAuthenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)V
+#getJwtAuthenticationConverter()Lorg/springframework/core/convert/converter/Converter;
+#setJwtAuthenticationConverter(Lorg/springframework/core/convert/converter/Converter;)V
+#getJwtDecoder()Lorg/springframework/security/oauth2/jwt/JwtDecoder;
+#setJwtDecoder(Lorg/springframework/security/oauth2/jwt/JwtDecoder;)V
+#getJwkSetUri()Ljava/lang/String;
+#setJwkSetUri(Ljava/lang/String;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;

+###org/springframework/security/config/annotation/web/oauth2/resourceserver/OAuth2ResourceServerSecurityMarker
@6.0.0

+###org/springframework/security/config/annotation/web/oauth2/resourceserver/OpaqueTokenDsl
@6.0.0
+#<init>()V
+#getAuthenticationManager()Lorg/springframework/security/authentication/AuthenticationManager;
+#setAuthenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)V
+#getIntrospectionUri()Ljava/lang/String;
+#setIntrospectionUri(Ljava/lang/String;)V
+#getIntrospector()Lorg/springframework/security/oauth2/server/resource/introspection/OpaqueTokenIntrospector;
+#setIntrospector(Lorg/springframework/security/oauth2/server/resource/introspection/OpaqueTokenIntrospector;)V
+#getAuthenticationConverter()Lorg/springframework/security/oauth2/server/resource/introspection/OpaqueTokenAuthenticationConverter;
+#setAuthenticationConverter(Lorg/springframework/security/oauth2/server/resource/introspection/OpaqueTokenAuthenticationConverter;)V
+#introspectionClientCredentials(Ljava/lang/String;Ljava/lang/String;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;
+#access$getClientCredentials$p(Lorg/springframework/security/config/annotation/web/oauth2/resourceserver/OpaqueTokenDsl;)Lkotlin/Pair;

+###org/springframework/security/config/annotation/web/oauth2/client/OAuth2ClientSecurityMarker
@6.0.0

+###org/springframework/security/config/annotation/web/oauth2/client/AuthorizationCodeGrantDsl
@6.0.0
+#<init>()V
+#getAuthorizationRequestResolver()Lorg/springframework/security/oauth2/client/web/OAuth2AuthorizationRequestResolver;
+#setAuthorizationRequestResolver(Lorg/springframework/security/oauth2/client/web/OAuth2AuthorizationRequestResolver;)V
+#getAuthorizationRequestRepository()Lorg/springframework/security/oauth2/client/web/AuthorizationRequestRepository;
+#setAuthorizationRequestRepository(Lorg/springframework/security/oauth2/client/web/AuthorizationRequestRepository;)V
+#getAuthorizationRedirectStrategy()Lorg/springframework/security/web/RedirectStrategy;
+#setAuthorizationRedirectStrategy(Lorg/springframework/security/web/RedirectStrategy;)V
+#getAccessTokenResponseClient()Lorg/springframework/security/oauth2/client/endpoint/OAuth2AccessTokenResponseClient;
+#setAccessTokenResponseClient(Lorg/springframework/security/oauth2/client/endpoint/OAuth2AccessTokenResponseClient;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;

+###org/springframework/security/config/annotation/web/oauth2/login/RedirectionEndpointDsl
@6.0.0
+#<init>()V
+#getBaseUri()Ljava/lang/String;
+#setBaseUri(Ljava/lang/String;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;

+###org/springframework/security/config/annotation/web/oauth2/login/OAuth2LoginSecurityMarker
@6.0.0

+###org/springframework/security/config/annotation/web/oauth2/login/UserInfoEndpointDsl
@6.0.0
+#<init>()V
+#getUserService()Lorg/springframework/security/oauth2/client/userinfo/OAuth2UserService;
+#setUserService(Lorg/springframework/security/oauth2/client/userinfo/OAuth2UserService;)V
+#getOidcUserService()Lorg/springframework/security/oauth2/client/userinfo/OAuth2UserService;
+#setOidcUserService(Lorg/springframework/security/oauth2/client/userinfo/OAuth2UserService;)V
+#getUserAuthoritiesMapper()Lorg/springframework/security/core/authority/mapping/GrantedAuthoritiesMapper;
+#setUserAuthoritiesMapper(Lorg/springframework/security/core/authority/mapping/GrantedAuthoritiesMapper;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;

+###org/springframework/security/config/annotation/web/oauth2/login/AuthorizationEndpointDsl
@6.0.0
+#<init>()V
+#getBaseUri()Ljava/lang/String;
+#setBaseUri(Ljava/lang/String;)V
+#getAuthorizationRequestResolver()Lorg/springframework/security/oauth2/client/web/OAuth2AuthorizationRequestResolver;
+#setAuthorizationRequestResolver(Lorg/springframework/security/oauth2/client/web/OAuth2AuthorizationRequestResolver;)V
+#getAuthorizationRequestRepository()Lorg/springframework/security/oauth2/client/web/AuthorizationRequestRepository;
+#setAuthorizationRequestRepository(Lorg/springframework/security/oauth2/client/web/AuthorizationRequestRepository;)V
+#getAuthorizationRedirectStrategy()Lorg/springframework/security/web/RedirectStrategy;
+#setAuthorizationRedirectStrategy(Lorg/springframework/security/web/RedirectStrategy;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;

+###org/springframework/security/config/annotation/web/oauth2/login/TokenEndpointDsl
@6.0.0
+#<init>()V
+#getAccessTokenResponseClient()Lorg/springframework/security/oauth2/client/endpoint/OAuth2AccessTokenResponseClient;
+#setAccessTokenResponseClient(Lorg/springframework/security/oauth2/client/endpoint/OAuth2AccessTokenResponseClient;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;

+###org/springframework/security/config/annotation/web/SecurityMarker
@6.0.0

+###org/springframework/security/config/annotation/web/RememberMeDsl
@6.0.0
+#<init>()V
+#getAuthenticationSuccessHandler()Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;
+#setAuthenticationSuccessHandler(Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;)V
+#getKey()Ljava/lang/String;
+#setKey(Ljava/lang/String;)V
+#getRememberMeServices()Lorg/springframework/security/web/authentication/RememberMeServices;
+#setRememberMeServices(Lorg/springframework/security/web/authentication/RememberMeServices;)V
+#getRememberMeParameter()Ljava/lang/String;
+#setRememberMeParameter(Ljava/lang/String;)V
+#getRememberMeCookieName()Ljava/lang/String;
+#setRememberMeCookieName(Ljava/lang/String;)V
+#getRememberMeCookieDomain()Ljava/lang/String;
+#setRememberMeCookieDomain(Ljava/lang/String;)V
+#getTokenRepository()Lorg/springframework/security/web/authentication/rememberme/PersistentTokenRepository;
+#setTokenRepository(Lorg/springframework/security/web/authentication/rememberme/PersistentTokenRepository;)V
+#getUserDetailsService()Lorg/springframework/security/core/userdetails/UserDetailsService;
+#setUserDetailsService(Lorg/springframework/security/core/userdetails/UserDetailsService;)V
+#getTokenValiditySeconds()Ljava/lang/Integer;
+#setTokenValiditySeconds(Ljava/lang/Integer;)V
+#getUseSecureCookie()Ljava/lang/Boolean;
+#setUseSecureCookie(Ljava/lang/Boolean;)V
+#getAlwaysRemember()Ljava/lang/Boolean;
+#setAlwaysRemember(Ljava/lang/Boolean;)V
+#get$spring_security_config()Lkotlin/jvm/functions/Function1;

+###org/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$PatternType
@6.0.0
+#values()[Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$PatternType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/config/annotation/web/AbstractRequestMatcherDsl$PatternType;
