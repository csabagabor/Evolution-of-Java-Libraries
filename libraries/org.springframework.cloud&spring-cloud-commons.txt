
+###org/springframework/cloud/client/actuator/FeaturesEndpoint
@1.1.0.RELEASE
+#<init>(Ljava/util/List;)V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#invoke()Lorg/springframework/cloud/client/actuator/FeaturesEndpoint$Features;
+#invoke()Ljava/lang/Object;
@2.0.0.RELEASE
+#features()Lorg/springframework/cloud/client/actuator/FeaturesEndpoint$Features;
-#invoke()Lorg/springframework/cloud/client/actuator/FeaturesEndpoint$Features;
-#invoke()Ljava/lang/Object;

+###org/springframework/cloud/client/actuator/HasFeatures
@1.1.0.RELEASE
+#abstractFeatures([Ljava/lang/Class;)Lorg/springframework/cloud/client/actuator/HasFeatures;
+#namedFeatures([Lorg/springframework/cloud/client/actuator/NamedFeature;)Lorg/springframework/cloud/client/actuator/HasFeatures;
+#namedFeature(Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/cloud/client/actuator/HasFeatures;
+#namedFeatures(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/cloud/client/actuator/HasFeatures;
+#<init>(Ljava/util/List;Ljava/util/List;)V
+#getAbstractFeatures()Ljava/util/List;
+#getNamedFeatures()Ljava/util/List;

+###org/springframework/cloud/client/actuator/NamedFeature
@1.1.0.RELEASE
+#getName()Ljava/lang/String;
+#getType()Ljava/lang/Class;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>(Ljava/lang/String;Ljava/lang/Class;)V
@1.3.0.RELEASE
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#toString()Ljava/lang/String;

+###org/springframework/cloud/client/circuitbreaker/EnableCircuitBreaker
@1.0.0.RELEASE
@4.0.0
-###org/springframework/cloud/client/circuitbreaker/EnableCircuitBreaker

+###org/springframework/cloud/client/circuitbreaker/EnableCircuitBreakerImportSelector
@1.0.0.RELEASE
+#<init>()V
@4.0.0
-###org/springframework/cloud/client/circuitbreaker/EnableCircuitBreakerImportSelector

+###org/springframework/cloud/client/CommonsClientAutoConfiguration$ActuatorConfiguration
@1.1.0.RELEASE
+#featuresEndpoint()Lorg/springframework/cloud/client/actuator/FeaturesEndpoint;

+###org/springframework/cloud/client/CommonsClientAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
+#instancesHealthIndicator(Lorg/springframework/cloud/client/discovery/DiscoveryClient;)Lorg/springframework/cloud/client/discovery/health/DiscoveryClientHealthIndicator;
+#discoveryHealthIndicator(Lorg/springframework/boot/actuate/health/HealthAggregator;Ljava/util/List;)Lorg/springframework/cloud/client/discovery/health/DiscoveryCompositeHealthIndicator;
@1.1.0.RELEASE
+#discoveryClientHealthIndicator(Lorg/springframework/cloud/client/discovery/DiscoveryClient;)Lorg/springframework/cloud/client/discovery/health/DiscoveryClientHealthIndicator;
+#discoveryCompositeHealthIndicator(Lorg/springframework/boot/actuate/health/HealthAggregator;Ljava/util/List;)Lorg/springframework/cloud/client/discovery/health/DiscoveryCompositeHealthIndicator;
+#commonsFeatures()Lorg/springframework/cloud/client/actuator/HasFeatures;
-#instancesHealthIndicator(Lorg/springframework/cloud/client/discovery/DiscoveryClient;)Lorg/springframework/cloud/client/discovery/health/DiscoveryClientHealthIndicator;
-#discoveryHealthIndicator(Lorg/springframework/boot/actuate/health/HealthAggregator;Ljava/util/List;)Lorg/springframework/cloud/client/discovery/health/DiscoveryCompositeHealthIndicator;
@1.2.0.RELEASE
-#discoveryClientHealthIndicator(Lorg/springframework/cloud/client/discovery/DiscoveryClient;)Lorg/springframework/cloud/client/discovery/health/DiscoveryClientHealthIndicator;
-#discoveryCompositeHealthIndicator(Lorg/springframework/boot/actuate/health/HealthAggregator;Ljava/util/List;)Lorg/springframework/cloud/client/discovery/health/DiscoveryCompositeHealthIndicator;
-#commonsFeatures()Lorg/springframework/cloud/client/actuator/HasFeatures;

+###org/springframework/cloud/client/DefaultServiceInstance
@1.0.0.RELEASE
+#getUri()Ljava/net/URI;
+#getUri(Lorg/springframework/cloud/client/ServiceInstance;)Ljava/net/URI;
+#getServiceId()Ljava/lang/String;
+#getHost()Ljava/lang/String;
+#getPort()I
+#isSecure()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>(Ljava/lang/String;Ljava/lang/String;IZ)V
@1.0.1.RELEASE
+#canEqual(Ljava/lang/Object;)Z
@1.1.0.RELEASE
+#getMetadata()Ljava/util/Map;
+#<init>(Ljava/lang/String;Ljava/lang/String;IZLjava/util/Map;)V
-#canEqual(Ljava/lang/Object;)Z
@2.1.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZLjava/util/Map;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZ)V
*#<init>(Ljava/lang/String;Ljava/lang/String;IZLjava/util/Map;)V[deprecated]
*#<init>(Ljava/lang/String;Ljava/lang/String;IZ)V[deprecated]
+#getInstanceId()Ljava/lang/String;
@2.2.6.RELEASE
+#<init>()V
+#setInstanceId(Ljava/lang/String;)V
+#setServiceId(Ljava/lang/String;)V
+#setHost(Ljava/lang/String;)V
+#setPort(I)V
+#setUri(Ljava/net/URI;)V
@3.0.0
-#<init>(Ljava/lang/String;Ljava/lang/String;IZLjava/util/Map;)V[deprecated]
-#<init>(Ljava/lang/String;Ljava/lang/String;IZ)V[deprecated]
@4.0.1
+#setSecure(Z)V

+###org/springframework/cloud/client/discovery/AbstractDiscoveryLifecycle
@1.0.0.RELEASE
+#<init>()V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#isAutoStartup()Z
+#stop(Ljava/lang/Runnable;)V
+#start()V
+#stop()V
+#destroy()V
+#isRunning()Z
+#getOrder()I
+#getPhase()I
@1.0.2.RELEASE
+#onApplicationEvent(Lorg/springframework/boot/context/embedded/EmbeddedServletContainerInitializedEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@1.2.0.RELEASE
*#onApplicationEvent(Lorg/springframework/boot/context/embedded/EmbeddedServletContainerInitializedEvent;)V[deprecated]
*#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V[deprecated]
@2.0.0.RELEASE
-###org/springframework/cloud/client/discovery/AbstractDiscoveryLifecycle

+###org/springframework/cloud/client/discovery/DiscoveryClient
@1.0.0.RELEASE
+#description()Ljava/lang/String;
+#getLocalServiceInstance()Lorg/springframework/cloud/client/ServiceInstance;
+#getInstances(Ljava/lang/String;)Ljava/util/List;
+#getServices()Ljava/util/List;
@1.2.0.RELEASE
*#getLocalServiceInstance()Lorg/springframework/cloud/client/ServiceInstance;[deprecated]
@2.0.0.RELEASE
-#getLocalServiceInstance()Lorg/springframework/cloud/client/ServiceInstance;[deprecated]
@2.1.0.RELEASE
+#getOrder()I
@2.2.8.RELEASE
+#probe()V
@3.0.0
-#probe()V
@3.0.2
+#probe()V

+###org/springframework/cloud/client/discovery/DiscoveryLifecycle
@1.0.0.RELEASE
@2.0.0.RELEASE
-###org/springframework/cloud/client/discovery/DiscoveryLifecycle

+###org/springframework/cloud/client/discovery/EnableDiscoveryClient
@1.0.0.RELEASE
@1.2.0.RELEASE
+#autoRegister()Z

+###org/springframework/cloud/client/discovery/EnableDiscoveryClientImportSelector
@1.0.0.RELEASE
+#<init>()V
@1.2.0.RELEASE
+#selectImports(Lorg/springframework/core/type/AnnotationMetadata;)[Ljava/lang/String;

+###org/springframework/cloud/client/discovery/event/HeartbeatEvent
@1.0.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#getValue()Ljava/lang/Object;

+###org/springframework/cloud/client/discovery/event/HeartbeatMonitor
@1.0.0.RELEASE
+#<init>()V
+#update(Ljava/lang/Object;)Z

+###org/springframework/cloud/client/discovery/event/InstanceRegisteredEvent
@1.0.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#getConfig()Ljava/lang/Object;

+###org/springframework/cloud/client/discovery/event/ParentHeartbeatEvent
@1.0.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#getValue()Ljava/lang/Object;

+###org/springframework/cloud/client/discovery/health/DiscoveryClientHealthIndicator
@1.0.0.RELEASE
+#<init>(Lorg/springframework/cloud/client/discovery/DiscoveryClient;)V
+#health()Lorg/springframework/boot/actuate/health/Health;
+#getName()Ljava/lang/String;
+#getOrder()I
+#setOrder(I)V
@1.0.1.RELEASE
+#onApplicationEvent(Lorg/springframework/cloud/client/discovery/event/InstanceRegisteredEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@1.3.0.RELEASE
*#<init>(Lorg/springframework/cloud/client/discovery/DiscoveryClient;)V[deprecated]
+#<init>(Lorg/springframework/cloud/client/discovery/DiscoveryClient;Lorg/springframework/cloud/client/discovery/health/DiscoveryClientHealthIndicatorProperties;)V
@2.1.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/cloud/client/discovery/health/DiscoveryClientHealthIndicatorProperties;)V
-#<init>(Lorg/springframework/cloud/client/discovery/DiscoveryClient;)V[deprecated]
-#<init>(Lorg/springframework/cloud/client/discovery/DiscoveryClient;Lorg/springframework/cloud/client/discovery/health/DiscoveryClientHealthIndicatorProperties;)V

+###org/springframework/cloud/client/discovery/health/DiscoveryCompositeHealthIndicator$Holder
@1.0.0.RELEASE
+#<init>(Lorg/springframework/cloud/client/discovery/health/DiscoveryHealthIndicator;)V
+#health()Lorg/springframework/boot/actuate/health/Health;
@1.1.0.RELEASE
+#getDelegate()Lorg/springframework/cloud/client/discovery/health/DiscoveryHealthIndicator;
@3.0.0
-###org/springframework/cloud/client/discovery/health/DiscoveryCompositeHealthIndicator$Holder

+###org/springframework/cloud/client/discovery/health/DiscoveryCompositeHealthIndicator
@1.0.0.RELEASE
+#<init>(Lorg/springframework/boot/actuate/health/HealthAggregator;Ljava/util/List;)V
@1.1.0.RELEASE
+#getHealthIndicators()Ljava/util/ArrayList;
@2.2.0.RELEASE
+#createMap(Ljava/util/List;)Ljava/util/Map;
@3.0.0
-###org/springframework/cloud/client/discovery/health/DiscoveryCompositeHealthIndicator

+###org/springframework/cloud/client/discovery/health/DiscoveryHealthIndicator
@1.0.0.RELEASE
+#getName()Ljava/lang/String;
+#health()Lorg/springframework/boot/actuate/health/Health;

+###org/springframework/cloud/client/discovery/ManagementServerPortUtils$ManagementServerPort
@1.0.0.RELEASE
+#get(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/cloud/client/discovery/ManagementServerPortUtils$ManagementServerPort;
+#values()[Lorg/springframework/cloud/client/discovery/ManagementServerPortUtils$ManagementServerPort;
+#valueOf(Ljava/lang/String;)Lorg/springframework/cloud/client/discovery/ManagementServerPortUtils$ManagementServerPort;

+###org/springframework/cloud/client/discovery/ManagementServerPortUtils
@1.0.0.RELEASE
+#<init>()V
+#get(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/cloud/client/discovery/ManagementServerPortUtils$ManagementServerPort;
+#isDifferent(Lorg/springframework/beans/factory/BeanFactory;)Z
+#isDisabled(Lorg/springframework/beans/factory/BeanFactory;)Z
+#isSame(Lorg/springframework/beans/factory/BeanFactory;)Z
@1.1.0.RELEASE
+#getPort(Lorg/springframework/beans/factory/BeanFactory;)Ljava/lang/Integer;
@2.1.1.RELEASE
-#<init>()V

+###org/springframework/cloud/client/discovery/noop/NoopDiscoveryClient
@1.0.0.RELEASE
+#<init>(Lorg/springframework/cloud/client/ServiceInstance;)V
+#description()Ljava/lang/String;
+#getLocalServiceInstance()Lorg/springframework/cloud/client/ServiceInstance;
+#getInstances(Ljava/lang/String;)Ljava/util/List;
+#getServices()Ljava/util/List;
@2.0.0.RELEASE
-#getLocalServiceInstance()Lorg/springframework/cloud/client/ServiceInstance;
@3.0.0
-###org/springframework/cloud/client/discovery/noop/NoopDiscoveryClient

+###org/springframework/cloud/client/discovery/noop/NoopDiscoveryClientAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
+#init()V
+#onApplicationEvent(Lorg/springframework/context/event/ContextRefreshedEvent;)V
+#discoveryClient()Lorg/springframework/cloud/client/discovery/DiscoveryClient;
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@3.0.0
-###org/springframework/cloud/client/discovery/noop/NoopDiscoveryClientAutoConfiguration

+###org/springframework/cloud/client/HostInfoEnvironmentPostProcessor
@1.1.0.RELEASE
+#<init>()V
+#getOrder()I
+#postProcessEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/SpringApplication;)V

+###org/springframework/cloud/client/hypermedia/CloudHypermediaAutoConfiguration$CloudHypermediaProperties$Refresh
@1.1.0.RELEASE
+#getFixedDelay()I
+#getInitialDelay()I
+#setFixedDelay(I)V
+#setInitialDelay(I)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@1.3.0.RELEASE
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#toString()Ljava/lang/String;

+###org/springframework/cloud/client/hypermedia/CloudHypermediaAutoConfiguration$CloudHypermediaProperties
@1.1.0.RELEASE
+#getRefresh()Lorg/springframework/cloud/client/hypermedia/CloudHypermediaAutoConfiguration$CloudHypermediaProperties$Refresh;
+#setRefresh(Lorg/springframework/cloud/client/hypermedia/CloudHypermediaAutoConfiguration$CloudHypermediaProperties$Refresh;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@1.3.0.RELEASE
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#toString()Ljava/lang/String;

+###org/springframework/cloud/client/hypermedia/CloudHypermediaAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
+#discoveredResourceRefresher()Lorg/springframework/cloud/client/hypermedia/RemoteResourceRefresher;

+###org/springframework/cloud/client/hypermedia/DiscoveredResource
@1.1.0.RELEASE
+#setRestOperations(Lorg/springframework/web/client/RestOperations;)V
+#verifyOrDiscover()V
+#getLink()Lorg/springframework/hateoas/Link;
+#<init>(Lorg/springframework/cloud/client/hypermedia/ServiceInstanceProvider;Lorg/springframework/cloud/client/hypermedia/TraversalDefinition;)V
@1.3.0.RELEASE
+#getProvider()Lorg/springframework/cloud/client/hypermedia/ServiceInstanceProvider;
+#getTraversal()Lorg/springframework/cloud/client/hypermedia/TraversalDefinition;
+#getRestOperations()Lorg/springframework/web/client/RestOperations;
+#setLink(Lorg/springframework/hateoas/Link;)V

+###org/springframework/cloud/client/hypermedia/DynamicServiceInstanceProvider
@1.1.0.RELEASE
+#getServiceInstance()Lorg/springframework/cloud/client/ServiceInstance;
+#<init>(Lorg/springframework/cloud/client/discovery/DiscoveryClient;Ljava/lang/String;)V

+###org/springframework/cloud/client/hypermedia/RemoteResource
@1.1.0.RELEASE
+#getLink()Lorg/springframework/hateoas/Link;
+#verifyOrDiscover()V

+###org/springframework/cloud/client/hypermedia/RemoteResourceRefresher
@1.1.0.RELEASE
+#afterPropertiesSet()V
+#<init>(Ljava/util/List;II)V

+###org/springframework/cloud/client/hypermedia/ServiceInstanceProvider
@1.1.0.RELEASE
+#getServiceInstance()Lorg/springframework/cloud/client/ServiceInstance;

+###org/springframework/cloud/client/hypermedia/StaticServiceInstanceProvider
@1.1.0.RELEASE
+#getServiceInstance()Lorg/springframework/cloud/client/ServiceInstance;
+#<init>(Lorg/springframework/cloud/client/ServiceInstance;)V

+###org/springframework/cloud/client/hypermedia/TraversalDefinition
@1.1.0.RELEASE
+#buildTraversal(Lorg/springframework/hateoas/client/Traverson;)Lorg/springframework/hateoas/client/Traverson$TraversalBuilder;

+###org/springframework/cloud/client/loadbalancer/LoadBalanced
@1.0.1.RELEASE

+###org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration
@1.0.0.RELEASE
+#<init>()V
+#restTemplate(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerInterceptor;)Lorg/springframework/web/client/RestTemplate;
+#ribbonInterceptor(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;)Lorg/springframework/cloud/client/loadbalancer/LoadBalancerInterceptor;
@1.0.1.RELEASE
+#loadBalancedRestTemplate(Lorg/springframework/cloud/client/loadbalancer/RestTemplateCustomizer;)Lorg/springframework/web/client/RestTemplate;
+#restTemplateCustomizer(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerInterceptor;)Lorg/springframework/cloud/client/loadbalancer/RestTemplateCustomizer;
-#restTemplate(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerInterceptor;)Lorg/springframework/web/client/RestTemplate;
@1.1.0.RELEASE
+#loadBalancedRestTemplateInitializer(Ljava/util/List;)Lorg/springframework/beans/factory/SmartInitializingSingleton;
-#loadBalancedRestTemplate(Lorg/springframework/cloud/client/loadbalancer/RestTemplateCustomizer;)Lorg/springframework/web/client/RestTemplate;
@1.1.5.RELEASE
-#restTemplateCustomizer(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerInterceptor;)Lorg/springframework/cloud/client/loadbalancer/RestTemplateCustomizer;
-#ribbonInterceptor(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;)Lorg/springframework/cloud/client/loadbalancer/LoadBalancerInterceptor;
@1.1.7.RELEASE
+#loadBalancerRequestFactory(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;)Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;
@2.0.0.RELEASE
+#loadBalancedRestTemplateInitializerDeprecated(Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/beans/factory/SmartInitializingSingleton;
-#loadBalancedRestTemplateInitializer(Ljava/util/List;)Lorg/springframework/beans/factory/SmartInitializingSingleton;

+###org/springframework/cloud/client/loadbalancer/LoadBalancerClient
@1.0.0.RELEASE
+#choose(Ljava/lang/String;)Lorg/springframework/cloud/client/ServiceInstance;
+#execute(Ljava/lang/String;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequest;)Ljava/lang/Object;
+#reconstructURI(Lorg/springframework/cloud/client/ServiceInstance;Ljava/net/URI;)Ljava/net/URI;
@1.1.5.RELEASE
+#execute(Ljava/lang/String;Lorg/springframework/cloud/client/ServiceInstance;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequest;)Ljava/lang/Object;
-#choose(Ljava/lang/String;)Lorg/springframework/cloud/client/ServiceInstance;

+###org/springframework/cloud/client/loadbalancer/LoadBalancerInterceptor
@1.0.0.RELEASE
+#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;)V
+#intercept(Lorg/springframework/http/HttpRequest;[BLorg/springframework/http/client/ClientHttpRequestExecution;)Lorg/springframework/http/client/ClientHttpResponse;
@1.1.7.RELEASE
+#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;)V

+###org/springframework/cloud/client/loadbalancer/LoadBalancerRequest
@1.0.0.RELEASE
+#apply(Lorg/springframework/cloud/client/ServiceInstance;)Ljava/lang/Object;

+###org/springframework/cloud/client/loadbalancer/RestTemplateCustomizer
@1.0.1.RELEASE
+#customize(Lorg/springframework/web/client/RestTemplate;)V

+###org/springframework/cloud/client/ServiceInstance
@1.0.0.RELEASE
+#getServiceId()Ljava/lang/String;
+#getHost()Ljava/lang/String;
+#getPort()I
+#isSecure()Z
+#getUri()Ljava/net/URI;
@1.1.0.RELEASE
+#getMetadata()Ljava/util/Map;
@2.0.0.RELEASE
+#getScheme()Ljava/lang/String;
@2.1.0.RELEASE
+#getInstanceId()Ljava/lang/String;

+###org/springframework/cloud/client/SpringCloudApplication
@1.0.0.RELEASE
@4.0.0
-###org/springframework/cloud/client/SpringCloudApplication

+###org/springframework/cloud/commons/util/IdUtils
@1.1.0.RELEASE
+#<init>()V
+#getDefaultInstanceId(Lorg/springframework/core/env/PropertyResolver;)Ljava/lang/String;
+#combineParts(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@2.0.0.RELEASE
+#getDefaultInstanceId(Lorg/springframework/core/env/PropertyResolver;Z)Ljava/lang/String;
@2.1.1.RELEASE
-#<init>()V
@2.2.3.RELEASE
+#getResolvedServiceId(Lorg/springframework/core/env/PropertyResolver;)Ljava/lang/String;
+#getUnresolvedServiceId()Ljava/lang/String;
@3.1.1
+#getUnresolvedServiceIdWithActiveProfiles()Ljava/lang/String;

+###org/springframework/cloud/commons/util/InetUtils$HostInfo
@1.1.0.RELEASE
+#getIpAddressAsInt()I
+#isOverride()Z
+#getIpAddress()Ljava/lang/String;
+#getHostname()Ljava/lang/String;
+#setOverride(Z)V
+#setIpAddress(Ljava/lang/String;)V
+#setHostname(Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.2.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>()V
@1.3.0.RELEASE
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#toString()Ljava/lang/String;

+###org/springframework/cloud/commons/util/InetUtils
@1.1.0.RELEASE
+#<init>(Lorg/springframework/cloud/commons/util/InetUtilsProperties;)V
+#close()V
+#findFirstNonLoopbackHostInfo()Lorg/springframework/cloud/commons/util/InetUtils$HostInfo;
+#findFirstNonLoopbackAddress()Ljava/net/InetAddress;
+#convertAddress(Ljava/net/InetAddress;)Lorg/springframework/cloud/commons/util/InetUtils$HostInfo;
+#getFirstNonLoopbackHostInfo()Lorg/springframework/cloud/commons/util/InetUtils$HostInfo;
+#convert(Ljava/net/InetAddress;)Lorg/springframework/cloud/commons/util/InetUtils$HostInfo;
+#getIpAddressAsInt(Ljava/lang/String;)I
@1.1.1.RELEASE
*#getFirstNonLoopbackHostInfo()Lorg/springframework/cloud/commons/util/InetUtils$HostInfo;[deprecated]
*#convert(Ljava/net/InetAddress;)Lorg/springframework/cloud/commons/util/InetUtils$HostInfo;[deprecated]
@2.0.0.RELEASE
-#getFirstNonLoopbackHostInfo()Lorg/springframework/cloud/commons/util/InetUtils$HostInfo;[deprecated]
-#convert(Ljava/net/InetAddress;)Lorg/springframework/cloud/commons/util/InetUtils$HostInfo;[deprecated]
-#getIpAddressAsInt(Ljava/lang/String;)I

+###org/springframework/cloud/commons/util/InetUtilsProperties
@1.1.0.RELEASE
+#getDefaultHostname()Ljava/lang/String;
+#getDefaultIpAddress()Ljava/lang/String;
+#getTimeoutSeconds()I
+#getIgnoredInterfaces()Ljava/util/List;
+#setDefaultHostname(Ljava/lang/String;)V
+#setDefaultIpAddress(Ljava/lang/String;)V
+#setTimeoutSeconds(I)V
+#setIgnoredInterfaces(Ljava/util/List;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>()V
@1.1.2.RELEASE
+#isUseOnlySiteLocalInterfaces()Z
+#getPreferredNetworks()Ljava/util/List;
+#setUseOnlySiteLocalInterfaces(Z)V
+#setPreferredNetworks(Ljava/util/List;)V
@1.3.0.RELEASE
+#getPREFIX()Ljava/lang/String;
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#toString()Ljava/lang/String;

+###org/springframework/cloud/commons/util/SpringFactoryImportSelector
@1.1.0.RELEASE
+#selectImports(Lorg/springframework/core/type/AnnotationMetadata;)[Ljava/lang/String;
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V

+###org/springframework/cloud/commons/util/UtilAutoConfiguration
@1.1.0.RELEASE
+#<init>()V
+#inetUtilsProperties()Lorg/springframework/cloud/commons/util/InetUtilsProperties;
+#inetUtils(Lorg/springframework/cloud/commons/util/InetUtilsProperties;)Lorg/springframework/cloud/commons/util/InetUtils;

+###org/springframework/cloud/client/discovery/simple/SimpleDiscoveryClientAutoConfiguration
@1.2.0.RELEASE
+#<init>()V
+#simpleDiscoveryClient()Lorg/springframework/cloud/client/discovery/DiscoveryClient;
@1.2.1.RELEASE
+#simpleDiscoveryProperties()Lorg/springframework/cloud/client/discovery/simple/SimpleDiscoveryProperties;
+#simpleDiscoveryClient(Lorg/springframework/cloud/client/discovery/simple/SimpleDiscoveryProperties;)Lorg/springframework/cloud/client/discovery/DiscoveryClient;
-#simpleDiscoveryClient()Lorg/springframework/cloud/client/discovery/DiscoveryClient;
@1.3.0.RELEASE
+#simpleDiscoveryClient()Lorg/springframework/cloud/client/discovery/DiscoveryClient;
-#simpleDiscoveryClient(Lorg/springframework/cloud/client/discovery/simple/SimpleDiscoveryProperties;)Lorg/springframework/cloud/client/discovery/DiscoveryClient;
@2.1.3.RELEASE
+#onApplicationEvent(Lorg/springframework/boot/web/context/WebServerInitializedEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@2.2.2.RELEASE
+#simpleDiscoveryClient(Lorg/springframework/cloud/client/discovery/simple/SimpleDiscoveryProperties;)Lorg/springframework/cloud/client/discovery/DiscoveryClient;
-#simpleDiscoveryClient()Lorg/springframework/cloud/client/discovery/DiscoveryClient;
@2.2.4.RELEASE
+#setServer(Lorg/springframework/boot/autoconfigure/web/ServerProperties;)V
+#setInet(Lorg/springframework/cloud/commons/util/InetUtils;)V
+#simpleDiscoveryProperties(Ljava/lang/String;)Lorg/springframework/cloud/client/discovery/simple/SimpleDiscoveryProperties;
-#simpleDiscoveryProperties()Lorg/springframework/cloud/client/discovery/simple/SimpleDiscoveryProperties;

+###org/springframework/cloud/client/loadbalancer/LoadBalancedRetryContext
@1.1.5.RELEASE
+#<init>(Lorg/springframework/retry/RetryContext;Lorg/springframework/http/HttpRequest;)V
+#getRequest()Lorg/springframework/http/HttpRequest;
+#setRequest(Lorg/springframework/http/HttpRequest;)V
+#getServiceInstance()Lorg/springframework/cloud/client/ServiceInstance;
+#setServiceInstance(Lorg/springframework/cloud/client/ServiceInstance;)V
@3.0.0
+#getPreviousServiceInstance()Lorg/springframework/cloud/client/ServiceInstance;
+#setPreviousServiceInstance(Lorg/springframework/cloud/client/ServiceInstance;)V

+###org/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory$NeverRetryFactory
@1.1.5.RELEASE
+#<init>()V
+#create(Ljava/lang/String;Lorg/springframework/cloud/client/loadbalancer/ServiceInstanceChooser;)Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicy;
@2.0.0.RELEASE
-###org/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory$NeverRetryFactory

+###org/springframework/cloud/client/serviceregistry/AbstractAutoServiceRegistration
@1.2.0.RELEASE
+#stop()V
@2.0.0.RELEASE
+#bind(Lorg/springframework/boot/web/context/WebServerInitializedEvent;)V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#isAutoStartup()Z
+#start()V
+#destroy()V
+#isRunning()Z
+#getOrder()I
+#getPhase()I
@2.1.0.RELEASE
+#onApplicationEvent(Lorg/springframework/boot/web/context/WebServerInitializedEvent;)V
*#bind(Lorg/springframework/boot/web/context/WebServerInitializedEvent;)V[deprecated]
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@4.0.0
+#addRegistrationManagementLifecycle(Lorg/springframework/cloud/client/serviceregistry/RegistrationManagementLifecycle;)V
+#addRegistrationLifecycle(Lorg/springframework/cloud/client/serviceregistry/RegistrationLifecycle;)V
-#bind(Lorg/springframework/boot/web/context/WebServerInitializedEvent;)V[deprecated]

+###org/springframework/cloud/client/serviceregistry/ServiceRegistryAutoConfiguration$ServiceRegistryEndpointConfiguration
@1.2.0.RELEASE
+#serviceRegistryEndpoint(Lorg/springframework/cloud/client/serviceregistry/ServiceRegistry;)Lorg/springframework/cloud/client/serviceregistry/endpoint/ServiceRegistryEndpoint;

+###org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration
@1.2.0.RELEASE
+#discoveryClientHealthIndicator(Lorg/springframework/cloud/client/discovery/DiscoveryClient;)Lorg/springframework/cloud/client/discovery/health/DiscoveryClientHealthIndicator;
+#discoveryCompositeHealthIndicator(Lorg/springframework/boot/actuate/health/HealthAggregator;Ljava/util/List;)Lorg/springframework/cloud/client/discovery/health/DiscoveryCompositeHealthIndicator;
+#commonsFeatures()Lorg/springframework/cloud/client/actuator/HasFeatures;
@1.3.0.RELEASE
+#discoveryClientHealthIndicator(Lorg/springframework/cloud/client/discovery/DiscoveryClient;Lorg/springframework/cloud/client/discovery/health/DiscoveryClientHealthIndicatorProperties;)Lorg/springframework/cloud/client/discovery/health/DiscoveryClientHealthIndicator;
-#discoveryClientHealthIndicator(Lorg/springframework/cloud/client/discovery/DiscoveryClient;)Lorg/springframework/cloud/client/discovery/health/DiscoveryClientHealthIndicator;
@2.1.0.RELEASE
+#discoveryClientHealthIndicator(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/cloud/client/discovery/health/DiscoveryClientHealthIndicatorProperties;)Lorg/springframework/cloud/client/discovery/health/DiscoveryClientHealthIndicator;
-#discoveryClientHealthIndicator(Lorg/springframework/cloud/client/discovery/DiscoveryClient;Lorg/springframework/cloud/client/discovery/health/DiscoveryClientHealthIndicatorProperties;)Lorg/springframework/cloud/client/discovery/health/DiscoveryClientHealthIndicator;
@2.2.0.RELEASE
+#discoveryCompositeHealthContributor(Ljava/util/List;)Lorg/springframework/cloud/client/discovery/health/DiscoveryCompositeHealthContributor;
-#discoveryCompositeHealthIndicator(Lorg/springframework/boot/actuate/health/HealthAggregator;Ljava/util/List;)Lorg/springframework/cloud/client/discovery/health/DiscoveryCompositeHealthIndicator;

+###org/springframework/cloud/client/discovery/simple/SimpleDiscoveryClient
@1.2.0.RELEASE
+#<init>(Lorg/springframework/cloud/client/discovery/simple/SimpleDiscoveryProperties;)V
+#description()Ljava/lang/String;
+#getLocalServiceInstance()Lorg/springframework/cloud/client/ServiceInstance;
+#getInstances(Ljava/lang/String;)Ljava/util/List;
+#getServices()Ljava/util/List;
@2.0.0.RELEASE
-#getLocalServiceInstance()Lorg/springframework/cloud/client/ServiceInstance;
@2.1.0.RELEASE
+#getOrder()I

+###org/springframework/cloud/client/loadbalancer/ServiceInstanceChooser
@1.1.5.RELEASE
+#choose(Ljava/lang/String;)Lorg/springframework/cloud/client/ServiceInstance;
@3.0.0
+#choose(Ljava/lang/String;Lorg/springframework/cloud/client/loadbalancer/Request;)Lorg/springframework/cloud/client/ServiceInstance;

+###org/springframework/cloud/client/serviceregistry/AutoServiceRegistrationProperties
@1.2.0.RELEASE
+#<init>()V
+#isFailFast()Z
+#setFailFast(Z)V
@1.3.0.RELEASE
+#isEnabled()Z
+#setEnabled(Z)V
+#isRegisterManagement()Z
+#shouldRegisterManagement()Z[deprecated]
+#setRegisterManagement(Z)V

+###org/springframework/cloud/client/discovery/simple/SimpleDiscoveryProperties$SimpleServiceInstance
@1.2.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#setUri(Ljava/lang/String;)V
+#getServiceId()Ljava/lang/String;
+#getHost()Ljava/lang/String;
+#getPort()I
+#isSecure()Z
+#getUri()Ljava/net/URI;
+#getMetadata()Ljava/util/Map;
@1.2.1.RELEASE
+#<init>(Ljava/net/URI;)V
+#setUri(Ljava/net/URI;)V
+#setServiceId(Ljava/lang/String;)V
-#<init>(Ljava/lang/String;)V
-#setUri(Ljava/lang/String;)V
@2.1.0.RELEASE
+#getInstanceId()Ljava/lang/String;
+#setInstanceId(Ljava/lang/String;)V
@3.0.0
-###org/springframework/cloud/client/discovery/simple/SimpleDiscoveryProperties$SimpleServiceInstance

+###org/springframework/cloud/client/loadbalancer/InterceptorRetryPolicy
@1.1.5.RELEASE
+#<init>(Lorg/springframework/http/HttpRequest;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicy;Lorg/springframework/cloud/client/loadbalancer/ServiceInstanceChooser;Ljava/lang/String;)V
+#canRetry(Lorg/springframework/retry/RetryContext;)Z
+#open(Lorg/springframework/retry/RetryContext;)Lorg/springframework/retry/RetryContext;
+#close(Lorg/springframework/retry/RetryContext;)V
+#registerThrowable(Lorg/springframework/retry/RetryContext;Ljava/lang/Throwable;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/cloud/client/loadbalancer/RetryLoadBalancerInterceptor
@1.1.5.RELEASE
+#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/retry/support/RetryTemplate;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory;)V
+#intercept(Lorg/springframework/http/HttpRequest;[BLorg/springframework/http/client/ClientHttpRequestExecution;)Lorg/springframework/http/client/ClientHttpResponse;
@1.1.7.RELEASE
+#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/retry/support/RetryTemplate;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;)V
@1.2.3.RELEASE
*#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/retry/support/RetryTemplate;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;)V[deprecated]
+#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;)V
*#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/retry/support/RetryTemplate;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory;)V[deprecated]
@1.3.0.RELEASE
*#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;)V[deprecated]
+#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedBackOffPolicyFactory;)V
-#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/retry/support/RetryTemplate;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;)V[deprecated]
-#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/retry/support/RetryTemplate;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory;)V[deprecated]
@1.3.1.RELEASE
*#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedBackOffPolicyFactory;)V[deprecated]
+#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedBackOffPolicyFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryListenerFactory;)V
@2.0.0.RELEASE
+#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryFactory;)V
-#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;)V[deprecated]
-#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedBackOffPolicyFactory;)V[deprecated]
-#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedBackOffPolicyFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryListenerFactory;)V
@3.0.0
+#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryFactory;Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;)V
-#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryFactory;)V
@3.1.0
*#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryFactory;Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;)V[deprecated]
+#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryFactory;Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;)V
@4.0.0
-#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryFactory;Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;)V[deprecated]

+###org/springframework/cloud/client/serviceregistry/endpoint/ServiceRegistryEndpoint
@1.2.0.RELEASE
+#<init>(Lorg/springframework/cloud/client/serviceregistry/ServiceRegistry;)V
+#setRegistration(Lorg/springframework/cloud/client/serviceregistry/Registration;)V
+#setStatus(Ljava/lang/String;)Lorg/springframework/http/ResponseEntity;
+#getStatus()Lorg/springframework/http/ResponseEntity;
+#getPath()Ljava/lang/String;
+#isSensitive()Z
+#getEndpointType()Ljava/lang/Class;
@2.0.0.RELEASE
-#getPath()Ljava/lang/String;
-#isSensitive()Z
-#getEndpointType()Ljava/lang/Class;
@3.0.5
+#setStatus(Ljava/lang/String;)Lorg/springframework/boot/actuate/endpoint/web/WebEndpointResponse;
+#getStatus()Lorg/springframework/boot/actuate/endpoint/web/WebEndpointResponse;
-#setStatus(Ljava/lang/String;)Lorg/springframework/http/ResponseEntity;
-#getStatus()Lorg/springframework/http/ResponseEntity;
@3.1.0
+#setStatus(Ljava/lang/String;)Lorg/springframework/http/ResponseEntity;
+#getStatus()Lorg/springframework/http/ResponseEntity;
-#setStatus(Ljava/lang/String;)Lorg/springframework/boot/actuate/endpoint/web/WebEndpointResponse;
-#getStatus()Lorg/springframework/boot/actuate/endpoint/web/WebEndpointResponse;
@3.1.1
+#setStatus(Ljava/lang/String;)Lorg/springframework/boot/actuate/endpoint/web/WebEndpointResponse;
+#getStatus()Lorg/springframework/boot/actuate/endpoint/web/WebEndpointResponse;
-#setStatus(Ljava/lang/String;)Lorg/springframework/http/ResponseEntity;
-#getStatus()Lorg/springframework/http/ResponseEntity;

+###org/springframework/cloud/client/serviceregistry/ServiceRegistry
@1.2.0.RELEASE
+#register(Lorg/springframework/cloud/client/serviceregistry/Registration;)V
+#deregister(Lorg/springframework/cloud/client/serviceregistry/Registration;)V
+#close()V
+#setStatus(Lorg/springframework/cloud/client/serviceregistry/Registration;Ljava/lang/String;)V
+#getStatus(Lorg/springframework/cloud/client/serviceregistry/Registration;)Ljava/lang/Object;

+###org/springframework/cloud/client/discovery/noop/NoopDiscoveryClientAutoConfiguration$Boot15PortFinderConfiguration
@1.2.0.RELEASE
+#portFinder(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/cloud/client/discovery/noop/NoopDiscoveryClientAutoConfiguration$PortFinder;
@3.0.0
-###org/springframework/cloud/client/discovery/noop/NoopDiscoveryClientAutoConfiguration$Boot15PortFinderConfiguration

+###org/springframework/cloud/client/loadbalancer/AsyncLoadBalancerAutoConfiguration
@1.2.0.RELEASE
+#<init>()V
@4.0.0
-###org/springframework/cloud/client/loadbalancer/AsyncLoadBalancerAutoConfiguration

+###org/springframework/cloud/client/loadbalancer/LoadBalancerRequestTransformer
@1.1.7.RELEASE
+#transformRequest(Lorg/springframework/http/HttpRequest;Lorg/springframework/cloud/client/ServiceInstance;)Lorg/springframework/http/HttpRequest;

+###org/springframework/cloud/client/discovery/simple/SimpleDiscoveryProperties
@1.2.0.RELEASE
+#<init>()V
+#getInstances()Ljava/util/Map;
+#setInstances(Ljava/util/Map;)V
@1.2.1.RELEASE
+#getLocal()Lorg/springframework/cloud/client/discovery/simple/SimpleDiscoveryProperties$SimpleServiceInstance;
+#init()V
@2.1.0.RELEASE
+#getOrder()I
+#setOrder(I)V
@2.2.6.RELEASE
+#getLocal()Lorg/springframework/cloud/client/DefaultServiceInstance;
+#setInstance(Ljava/lang/String;Ljava/lang/String;I)V
-#getLocal()Lorg/springframework/cloud/client/discovery/simple/SimpleDiscoveryProperties$SimpleServiceInstance;
@4.0.0
+#afterPropertiesSet()V
-#init()V

+###org/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicy
@1.1.5.RELEASE
+#canRetrySameServer(Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryContext;)Z
+#canRetryNextServer(Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryContext;)Z
+#close(Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryContext;)V
+#registerThrowable(Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryContext;Ljava/lang/Throwable;)V
@1.2.0.RELEASE
+#retryableStatusCode(I)Z
@4.0.0
+#retryableException(Ljava/lang/Throwable;)Z

+###org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration
@1.2.3.RELEASE
+#<init>()V
+#ribbonInterceptor(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;)Lorg/springframework/cloud/client/loadbalancer/RetryLoadBalancerInterceptor;
+#restTemplateCustomizer(Lorg/springframework/cloud/client/loadbalancer/RetryLoadBalancerInterceptor;)Lorg/springframework/cloud/client/loadbalancer/RestTemplateCustomizer;
@1.3.0.RELEASE
+#ribbonInterceptor(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedBackOffPolicyFactory;)Lorg/springframework/cloud/client/loadbalancer/RetryLoadBalancerInterceptor;
-#ribbonInterceptor(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;)Lorg/springframework/cloud/client/loadbalancer/RetryLoadBalancerInterceptor;
@1.3.1.RELEASE
+#ribbonInterceptor(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedBackOffPolicyFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryListenerFactory;)Lorg/springframework/cloud/client/loadbalancer/RetryLoadBalancerInterceptor;
-#ribbonInterceptor(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedBackOffPolicyFactory;)Lorg/springframework/cloud/client/loadbalancer/RetryLoadBalancerInterceptor;
@2.0.0.RELEASE
+#ribbonInterceptor(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryFactory;)Lorg/springframework/cloud/client/loadbalancer/RetryLoadBalancerInterceptor;
-#ribbonInterceptor(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedBackOffPolicyFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryListenerFactory;)Lorg/springframework/cloud/client/loadbalancer/RetryLoadBalancerInterceptor;
@2.2.6.RELEASE
+#loadBalancerRetryInterceptor(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;Ljava/util/List;)Lorg/springframework/cloud/client/loadbalancer/RetryLoadBalancerInterceptor;
-#ribbonInterceptor(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryFactory;)Lorg/springframework/cloud/client/loadbalancer/RetryLoadBalancerInterceptor;
@2.2.8.RELEASE
+#loadBalancerRetryInterceptor(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryFactory;)Lorg/springframework/cloud/client/loadbalancer/RetryLoadBalancerInterceptor;
-#loadBalancerRetryInterceptor(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;Ljava/util/List;)Lorg/springframework/cloud/client/loadbalancer/RetryLoadBalancerInterceptor;
@3.0.0
+#loadBalancerInterceptor(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryFactory;Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;)Lorg/springframework/cloud/client/loadbalancer/RetryLoadBalancerInterceptor;
-#loadBalancerRetryInterceptor(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryFactory;)Lorg/springframework/cloud/client/loadbalancer/RetryLoadBalancerInterceptor;
@3.1.0
+#loadBalancerInterceptor(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryFactory;Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;)Lorg/springframework/cloud/client/loadbalancer/RetryLoadBalancerInterceptor;
-#loadBalancerInterceptor(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryFactory;Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;)Lorg/springframework/cloud/client/loadbalancer/RetryLoadBalancerInterceptor;

+###org/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties
@1.1.5.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
@2.2.6.RELEASE
+#isRetryOnAllOperations()Z
+#setRetryOnAllOperations(Z)V
+#getMaxRetriesOnSameServiceInstance()I
+#setMaxRetriesOnSameServiceInstance(I)V
+#getMaxRetriesOnNextServiceInstance()I
+#setMaxRetriesOnNextServiceInstance(I)V
+#getRetryableStatusCodes()Ljava/util/Set;
+#setRetryableStatusCodes(Ljava/util/Set;)V
@2.2.7.RELEASE
+#getBackoff()Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties$Backoff;
+#setBackoff(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties$Backoff;)V
@3.0.0
-###org/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties

+###org/springframework/cloud/client/serviceregistry/AutoServiceRegistration
@1.2.0.RELEASE

+###org/springframework/cloud/client/serviceregistry/AutoServiceRegistrationAutoConfiguration
@1.2.0.RELEASE
+#<init>()V
@4.0.0
+#afterPropertiesSet()V

+###org/springframework/cloud/client/loadbalancer/AsyncRestTemplateCustomizer
@1.2.0.RELEASE
+#customize(Lorg/springframework/web/client/AsyncRestTemplate;)V
@4.0.0
-###org/springframework/cloud/client/loadbalancer/AsyncRestTemplateCustomizer

+###org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration$RetryAutoConfiguration
@1.2.3.RELEASE
+#<init>()V
+#retryTemplate()Lorg/springframework/retry/support/RetryTemplate;
+#loadBalancedRetryPolicyFactory()Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory;
@1.3.0.RELEASE
+#loadBalancedBackOffPolicyFactory()Lorg/springframework/cloud/client/loadbalancer/LoadBalancedBackOffPolicyFactory;
@1.3.1.RELEASE
+#loadBalancedRetryListenerFactory()Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryListenerFactory;
@2.0.0.RELEASE
+#loadBalancedRetryFactory()Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryFactory;
-#retryTemplate()Lorg/springframework/retry/support/RetryTemplate;
-#loadBalancedRetryPolicyFactory()Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory;
-#loadBalancedBackOffPolicyFactory()Lorg/springframework/cloud/client/loadbalancer/LoadBalancedBackOffPolicyFactory;
-#loadBalancedRetryListenerFactory()Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryListenerFactory;

+###org/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory
@1.1.7.RELEASE
+#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;Ljava/util/List;)V
+#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;)V
+#createRequest(Lorg/springframework/http/HttpRequest;[BLorg/springframework/http/client/ClientHttpRequestExecution;)Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequest;

+###org/springframework/cloud/client/loadbalancer/ServiceRequestWrapper
@1.1.5.RELEASE
+#<init>(Lorg/springframework/http/HttpRequest;Lorg/springframework/cloud/client/ServiceInstance;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;)V
+#getURI()Ljava/net/URI;

+###org/springframework/cloud/client/serviceregistry/Registration
@1.2.0.RELEASE
+#getServiceId()Ljava/lang/String;
@1.3.0.RELEASE
-#getServiceId()Ljava/lang/String;

+###org/springframework/cloud/client/loadbalancer/AsyncLoadBalancerInterceptor
@1.2.0.RELEASE
+#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;)V
+#intercept(Lorg/springframework/http/HttpRequest;[BLorg/springframework/http/client/AsyncClientHttpRequestExecution;)Lorg/springframework/util/concurrent/ListenableFuture;
@4.0.0
-###org/springframework/cloud/client/loadbalancer/AsyncLoadBalancerInterceptor

+###org/springframework/cloud/client/serviceregistry/AutoServiceRegistrationConfiguration
@1.2.0.RELEASE
+#<init>()V

+###org/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory
@1.1.5.RELEASE
+#create(Ljava/lang/String;Lorg/springframework/cloud/client/loadbalancer/ServiceInstanceChooser;)Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicy;
@2.0.0.RELEASE
-###org/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicyFactory

+###org/springframework/cloud/client/loadbalancer/RetryableStatusCodeException
@1.2.3.RELEASE
+#<init>(Ljava/lang/String;I)V
@1.3.1.RELEASE
+#<init>(Ljava/lang/String;ILjava/lang/Object;Ljava/net/URI;)V
+#getResponse()Ljava/lang/Object;
+#getUri()Ljava/net/URI;
@1.3.2.RELEASE
*#<init>(Ljava/lang/String;I)V[deprecated]
@2.0.0.RELEASE
-#<init>(Ljava/lang/String;I)V[deprecated]

+###org/springframework/cloud/client/serviceregistry/ServiceRegistryAutoConfiguration
@1.2.0.RELEASE
+#<init>()V

+###org/springframework/cloud/commons/httpclient/DefaultApacheHttpClientFactory
@1.3.0.RELEASE
+#<init>()V
+#createBuilder()Lorg/apache/http/impl/client/HttpClientBuilder;
@2.0.0.RELEASE
+#<init>(Lorg/apache/http/impl/client/HttpClientBuilder;)V
-#<init>()V
@4.0.0
-###org/springframework/cloud/commons/httpclient/DefaultApacheHttpClientFactory

+###org/springframework/cloud/commons/httpclient/DefaultOkHttpClientFactory
@1.3.0.RELEASE
+#<init>()V
+#createBuilder(Z)Lokhttp3/OkHttpClient$Builder;
@2.0.0.RELEASE
+#<init>(Lokhttp3/OkHttpClient$Builder;)V
-#<init>()V
@4.0.0
-###org/springframework/cloud/commons/httpclient/DefaultOkHttpClientFactory

+###org/springframework/cloud/client/discovery/health/DiscoveryClientHealthIndicatorProperties
@1.3.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#isIncludeDescription()Z
+#setIncludeDescription(Z)V
+#toString()Ljava/lang/String;
@2.2.8.RELEASE
+#isUseServicesQuery()Z
+#setUseServicesQuery(Z)V
@3.0.0
-#isUseServicesQuery()Z
-#setUseServicesQuery(Z)V
@3.0.2
+#isUseServicesQuery()Z
+#setUseServicesQuery(Z)V

+###org/springframework/cloud/commons/httpclient/OkHttpClientFactory
@1.3.0.RELEASE
+#createBuilder(Z)Lokhttp3/OkHttpClient$Builder;
@4.0.0
-###org/springframework/cloud/commons/httpclient/OkHttpClientFactory

+###org/springframework/cloud/client/discovery/composite/CompositeDiscoveryClientAutoConfiguration
@1.3.0.RELEASE
+#<init>()V
+#compositeDiscoveryClient(Ljava/util/List;)Lorg/springframework/cloud/client/discovery/composite/CompositeDiscoveryClient;

+###org/springframework/cloud/commons/httpclient/OkHttpClientFactory$TrustAllHostnames
@1.3.0.RELEASE
+#<init>()V
+#verify(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z
@4.0.0
-###org/springframework/cloud/commons/httpclient/OkHttpClientFactory$TrustAllHostnames

+###org/springframework/cloud/client/loadbalancer/LoadBalancedBackOffPolicyFactory$NoBackOffPolicyFactory
@1.3.0.RELEASE
+#<init>()V
+#createBackOffPolicy(Ljava/lang/String;)Lorg/springframework/retry/backoff/BackOffPolicy;
@2.0.0.RELEASE
-###org/springframework/cloud/client/loadbalancer/LoadBalancedBackOffPolicyFactory$NoBackOffPolicyFactory

+###org/springframework/cloud/client/loadbalancer/LoadBalancedBackOffPolicyFactory
@1.3.0.RELEASE
+#createBackOffPolicy(Ljava/lang/String;)Lorg/springframework/retry/backoff/BackOffPolicy;
@2.0.0.RELEASE
-###org/springframework/cloud/client/loadbalancer/LoadBalancedBackOffPolicyFactory

+###org/springframework/cloud/commons/httpclient/OkHttpClientConnectionPoolFactory
@1.3.0.RELEASE
+#create(IJLjava/util/concurrent/TimeUnit;)Lokhttp3/ConnectionPool;
@4.0.0
-###org/springframework/cloud/commons/httpclient/OkHttpClientConnectionPoolFactory

+###org/springframework/cloud/commons/httpclient/DefaultOkHttpClientConnectionPoolFactory
@1.3.0.RELEASE
+#<init>()V
+#create(IJLjava/util/concurrent/TimeUnit;)Lokhttp3/ConnectionPool;
@4.0.0
-###org/springframework/cloud/commons/httpclient/DefaultOkHttpClientConnectionPoolFactory

+###org/springframework/cloud/commons/httpclient/ApacheHttpClientFactory
@1.3.0.RELEASE
+#createBuilder()Lorg/apache/http/impl/client/HttpClientBuilder;
@4.0.0
-###org/springframework/cloud/commons/httpclient/ApacheHttpClientFactory

+###org/springframework/cloud/commons/httpclient/HttpClientConfiguration
@1.3.0.RELEASE
+#<init>()V
@4.0.0
-###org/springframework/cloud/commons/httpclient/HttpClientConfiguration

+###org/springframework/cloud/commons/httpclient/OkHttpClientFactory$DisableValidationTrustManager
@1.3.0.RELEASE
+#<init>()V
+#checkClientTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V
+#checkServerTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V
+#getAcceptedIssuers()[Ljava/security/cert/X509Certificate;
@4.0.0
-###org/springframework/cloud/commons/httpclient/OkHttpClientFactory$DisableValidationTrustManager

+###org/springframework/cloud/client/loadbalancer/ClientHttpResponseStatusCodeException
@1.3.2.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/http/client/ClientHttpResponse;[B)V
+#getResponse()Lorg/springframework/http/client/ClientHttpResponse;
+#getResponse()Ljava/lang/Object;

+###org/springframework/cloud/client/loadbalancer/RibbonRecoveryCallback
@1.3.2.RELEASE
+#<init>()V
+#recover(Lorg/springframework/retry/RetryContext;)Ljava/lang/Object;
@2.0.0.RELEASE
-###org/springframework/cloud/client/loadbalancer/RibbonRecoveryCallback

+###org/springframework/cloud/commons/httpclient/ApacheHttpClientConnectionManagerFactory
@1.3.0.RELEASE
+#newConnectionManager(ZIIJLjava/util/concurrent/TimeUnit;Lorg/apache/http/config/RegistryBuilder;)Lorg/apache/http/conn/HttpClientConnectionManager;
@4.0.0
-###org/springframework/cloud/commons/httpclient/ApacheHttpClientConnectionManagerFactory

+###org/springframework/cloud/client/loadbalancer/LoadBalancedRetryListenerFactory
@1.3.1.RELEASE
+#createRetryListeners(Ljava/lang/String;)[Lorg/springframework/retry/RetryListener;
@2.0.0.RELEASE
-###org/springframework/cloud/client/loadbalancer/LoadBalancedRetryListenerFactory

+###org/springframework/cloud/client/loadbalancer/LoadBalancedRetryListenerFactory$DefaultRetryListenerFactory
@1.3.1.RELEASE
+#<init>()V
+#createRetryListeners(Ljava/lang/String;)[Lorg/springframework/retry/RetryListener;
@2.0.0.RELEASE
-###org/springframework/cloud/client/loadbalancer/LoadBalancedRetryListenerFactory$DefaultRetryListenerFactory

+###org/springframework/cloud/commons/httpclient/DefaultApacheHttpClientConnectionManagerFactory
@1.3.0.RELEASE
+#<init>()V
+#newConnectionManager(ZII)Lorg/apache/http/conn/HttpClientConnectionManager;
+#newConnectionManager(ZIIJLjava/util/concurrent/TimeUnit;Lorg/apache/http/config/RegistryBuilder;)Lorg/apache/http/conn/HttpClientConnectionManager;
@4.0.0
-###org/springframework/cloud/commons/httpclient/DefaultApacheHttpClientConnectionManagerFactory

+###org/springframework/cloud/client/discovery/composite/CompositeDiscoveryClient
@1.3.0.RELEASE
+#<init>(Ljava/util/List;)V
+#description()Ljava/lang/String;
+#getLocalServiceInstance()Lorg/springframework/cloud/client/ServiceInstance;
+#getInstances(Ljava/lang/String;)Ljava/util/List;
+#getServices()Ljava/util/List;
+#getDiscoveryClients()Ljava/util/List;
@2.0.0.RELEASE
-#getLocalServiceInstance()Lorg/springframework/cloud/client/ServiceInstance;

+###org/springframework/cloud/client/ConditionalOnDiscoveryEnabled
@2.0.3.RELEASE
@2.1.0.RELEASE
-###org/springframework/cloud/client/ConditionalOnDiscoveryEnabled

+###org/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryProperties
@2.2.0.RELEASE
+#<init>()V
+#getInstances(Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#setInstances(Ljava/util/Map;)V
+#getLocal()Lorg/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryProperties$SimpleServiceInstance;
+#getOrder()I
+#setOrder(I)V
+#init()V
@2.2.6.RELEASE
+#getLocal()Lorg/springframework/cloud/client/DefaultServiceInstance;
-#getLocal()Lorg/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryProperties$SimpleServiceInstance;
@4.0.0
+#afterPropertiesSet()V
-#init()V

+###org/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryClient
@2.2.0.RELEASE
+#<init>(Lorg/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryProperties;)V
+#description()Ljava/lang/String;
+#getInstances(Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#getServices()Lreactor/core/publisher/Flux;
+#getOrder()I

+###org/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryClientAutoConfiguration$HealthConfiguration
@2.2.0.RELEASE
+#simpleReactiveDiscoveryClientHealthIndicator(Lorg/springframework/cloud/client/discovery/health/DiscoveryClientHealthIndicatorProperties;Lorg/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryClient;)Lorg/springframework/cloud/client/discovery/health/reactive/ReactiveDiscoveryClientHealthIndicator;

+###org/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryClientAutoConfiguration
@2.2.0.RELEASE
+#<init>()V
+#simpleReactiveDiscoveryProperties()Lorg/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryProperties;
+#simpleReactiveDiscoveryClient()Lorg/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryClient;
+#onApplicationEvent(Lorg/springframework/boot/web/context/WebServerInitializedEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@2.2.7.RELEASE
+#simpleReactiveDiscoveryClient(Lorg/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryProperties;)Lorg/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryClient;
-#simpleReactiveDiscoveryClient()Lorg/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryClient;

+###org/springframework/cloud/client/discovery/composite/reactive/ReactiveCompositeDiscoveryClient
@2.2.0.RELEASE
+#<init>(Ljava/util/List;)V
+#description()Ljava/lang/String;
+#getInstances(Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#getServices()Lreactor/core/publisher/Flux;
@3.0.0
+#getDiscoveryClients()Ljava/util/List;

+###org/springframework/cloud/client/discovery/composite/reactive/ReactiveCompositeDiscoveryClientAutoConfiguration
@2.2.0.RELEASE
+#<init>()V
+#reactiveCompositeDiscoveryClient(Ljava/util/List;)Lorg/springframework/cloud/client/discovery/composite/reactive/ReactiveCompositeDiscoveryClient;

+###org/springframework/cloud/client/discovery/event/InstancePreRegisteredEvent
@2.0.2.RELEASE
+#<init>(Ljava/lang/Object;Lorg/springframework/cloud/client/serviceregistry/Registration;)V
+#getRegistration()Lorg/springframework/cloud/client/serviceregistry/Registration;

+###org/springframework/cloud/client/discovery/ReactiveDiscoveryClient
@2.2.0.RELEASE
+#description()Ljava/lang/String;
+#getInstances(Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#getServices()Lreactor/core/publisher/Flux;
+#getOrder()I
@2.2.8.RELEASE
+#probe()V
@3.0.0
-#probe()V
@3.0.2
+#probe()V
@3.1.6
*#probe()V[deprecated]
+#reactiveProbe()Lreactor/core/publisher/Mono;
@4.0.0
-#reactiveProbe()Lreactor/core/publisher/Mono;

+###org/springframework/cloud/client/discovery/health/DiscoveryCompositeHealthContributor
@2.2.0.RELEASE
+#<init>(Ljava/util/Collection;)V
+#getContributor(Ljava/lang/String;)Lorg/springframework/boot/actuate/health/HealthContributor;
+#iterator()Ljava/util/Iterator;
+#getContributor(Ljava/lang/String;)Ljava/lang/Object;
@3.0.6
+#getIndicators()Ljava/util/Map;
@3.1.0
-#getIndicators()Ljava/util/Map;
@3.1.2
+#getIndicators()Ljava/util/Map;

+###org/springframework/cloud/client/discovery/health/reactive/ReactiveDiscoveryClientHealthIndicator
@2.2.0.RELEASE
+#<init>(Lorg/springframework/cloud/client/discovery/ReactiveDiscoveryClient;Lorg/springframework/cloud/client/discovery/health/DiscoveryClientHealthIndicatorProperties;)V
+#onApplicationEvent(Lorg/springframework/cloud/client/discovery/event/InstanceRegisteredEvent;)V
+#health()Lreactor/core/publisher/Mono;
+#getName()Ljava/lang/String;
+#getOrder()I
+#setOrder(I)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V

+###org/springframework/cloud/client/discovery/health/reactive/ReactiveDiscoveryHealthIndicator
@2.2.0.RELEASE
+#getName()Ljava/lang/String;
+#health()Lreactor/core/publisher/Mono;

+###org/springframework/cloud/client/discovery/health/reactive/ReactiveDiscoveryCompositeHealthContributor
@2.2.0.RELEASE
+#<init>(Ljava/util/Collection;)V
+#getContributor(Ljava/lang/String;)Lorg/springframework/boot/actuate/health/ReactiveHealthContributor;
+#iterator()Ljava/util/Iterator;
+#getContributor(Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/cloud/client/loadbalancer/LoadBalancerProperties$StickySession
@3.0.0
+#<init>()V
+#getInstanceIdCookieName()Ljava/lang/String;
+#setInstanceIdCookieName(Ljava/lang/String;)V
+#isAddServiceInstanceCookie()Z
+#setAddServiceInstanceCookie(Z)V

+###org/springframework/cloud/client/loadbalancer/TimedRequestContext
@3.0.0
+#getRequestStartTime()J
+#setRequestStartTime(J)V

+###org/springframework/cloud/client/loadbalancer/LoadBalancerRequestAdapter
@3.0.0
+#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequest;)V
+#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRequest;Ljava/lang/Object;)V
+#apply(Lorg/springframework/cloud/client/ServiceInstance;)Ljava/lang/Object;

+###org/springframework/cloud/client/loadbalancer/LoadBalancerProperties$Retry$Backoff
@3.0.0
+#<init>()V
+#getMinBackoff()Ljava/time/Duration;
+#setMinBackoff(Ljava/time/Duration;)V
+#getMaxBackoff()Ljava/time/Duration;
+#setMaxBackoff(Ljava/time/Duration;)V
+#getJitter()D
+#setJitter(D)V
+#isEnabled()Z
+#setEnabled(Z)V

+###org/springframework/cloud/client/loadbalancer/EmptyResponse
@2.2.4.RELEASE
+#<init>()V
+#hasServer()Z
+#getServer()Lorg/springframework/cloud/client/ServiceInstance;
+#onComplete(Lorg/springframework/cloud/client/loadbalancer/CompletionContext;)V
+#getServer()Ljava/lang/Object;
@3.0.0
-#onComplete(Lorg/springframework/cloud/client/loadbalancer/CompletionContext;)V

+###org/springframework/cloud/client/loadbalancer/LoadBalancerClientsProperties
@3.1.0
+#<init>()V
+#getClients()Ljava/util/Map;

+###org/springframework/cloud/client/loadbalancer/LoadBalancerUriTools
@2.1.3.RELEASE
+#reconstructURI(Lorg/springframework/cloud/client/ServiceInstance;Ljava/net/URI;)Ljava/net/URI;

+###org/springframework/cloud/client/loadbalancer/CompletionContext$Status
@2.2.4.RELEASE
+#values()[Lorg/springframework/cloud/client/loadbalancer/CompletionContext$Status;
+#valueOf(Ljava/lang/String;)Lorg/springframework/cloud/client/loadbalancer/CompletionContext$Status;

+###org/springframework/cloud/client/loadbalancer/LoadBalancerLifecycleValidator
@3.0.0
+#getSupportedLifecycleProcessors(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Set;

+###org/springframework/cloud/client/loadbalancer/ResponseData
@3.0.0
+#<init>(Lorg/springframework/http/HttpStatus;Lorg/springframework/http/HttpHeaders;Lorg/springframework/util/MultiValueMap;Lorg/springframework/cloud/client/loadbalancer/RequestData;)V
+#<init>(Lorg/springframework/web/reactive/function/client/ClientResponse;Lorg/springframework/cloud/client/loadbalancer/RequestData;)V
+#<init>(Lorg/springframework/http/server/reactive/ServerHttpResponse;Lorg/springframework/cloud/client/loadbalancer/RequestData;)V
+#<init>(Lorg/springframework/http/client/ClientHttpResponse;Lorg/springframework/cloud/client/loadbalancer/RequestData;)V
+#getHttpStatus()Lorg/springframework/http/HttpStatus;
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#getCookies()Lorg/springframework/util/MultiValueMap;
+#getRequestData()Lorg/springframework/cloud/client/loadbalancer/RequestData;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@3.1.2
+#<init>(Lorg/springframework/http/HttpHeaders;Lorg/springframework/util/MultiValueMap;Lorg/springframework/cloud/client/loadbalancer/RequestData;Ljava/lang/Integer;)V[deprecated]
*#<init>(Lorg/springframework/http/HttpStatus;Lorg/springframework/http/HttpHeaders;Lorg/springframework/util/MultiValueMap;Lorg/springframework/cloud/client/loadbalancer/RequestData;)V[deprecated]
*#<init>(Lorg/springframework/web/reactive/function/client/ClientResponse;Lorg/springframework/cloud/client/loadbalancer/RequestData;)V[deprecated]
+#<init>(Lorg/springframework/cloud/client/loadbalancer/RequestData;Lorg/springframework/web/reactive/function/client/ClientResponse;)V[deprecated]
*#<init>(Lorg/springframework/http/server/reactive/ServerHttpResponse;Lorg/springframework/cloud/client/loadbalancer/RequestData;)V[deprecated]
+#<init>(Lorg/springframework/cloud/client/loadbalancer/RequestData;Lorg/springframework/http/server/reactive/ServerHttpResponse;)V[deprecated]
*#<init>(Lorg/springframework/http/client/ClientHttpResponse;Lorg/springframework/cloud/client/loadbalancer/RequestData;)V[deprecated]
+#<init>(Lorg/springframework/cloud/client/loadbalancer/RequestData;Lorg/springframework/http/client/ClientHttpResponse;)V[deprecated]
+#getRawHttpStatus()Ljava/lang/Integer;
@4.0.0
+#<init>(Lorg/springframework/http/HttpStatusCode;Lorg/springframework/http/HttpHeaders;Lorg/springframework/util/MultiValueMap;Lorg/springframework/cloud/client/loadbalancer/RequestData;)V
+#getHttpStatus()Lorg/springframework/http/HttpStatusCode;
-#<init>(Lorg/springframework/http/HttpHeaders;Lorg/springframework/util/MultiValueMap;Lorg/springframework/cloud/client/loadbalancer/RequestData;Ljava/lang/Integer;)V[deprecated]
-#<init>(Lorg/springframework/http/HttpStatus;Lorg/springframework/http/HttpHeaders;Lorg/springframework/util/MultiValueMap;Lorg/springframework/cloud/client/loadbalancer/RequestData;)V[deprecated]
-#<init>(Lorg/springframework/cloud/client/loadbalancer/RequestData;Lorg/springframework/web/reactive/function/client/ClientResponse;)V[deprecated]
-#<init>(Lorg/springframework/cloud/client/loadbalancer/RequestData;Lorg/springframework/http/server/reactive/ServerHttpResponse;)V[deprecated]
-#<init>(Lorg/springframework/cloud/client/loadbalancer/RequestData;Lorg/springframework/http/client/ClientHttpResponse;)V[deprecated]
-#getHttpStatus()Lorg/springframework/http/HttpStatus;
-#getRawHttpStatus()Ljava/lang/Integer;

+###org/springframework/cloud/client/loadbalancer/RequestDataContext
@3.0.0
+#<init>()V
+#<init>(Lorg/springframework/cloud/client/loadbalancer/RequestData;)V
+#<init>(Lorg/springframework/cloud/client/loadbalancer/RequestData;Ljava/lang/String;)V
+#getClientRequest()Lorg/springframework/cloud/client/loadbalancer/RequestData;
+#method()Lorg/springframework/http/HttpMethod;
+#getClientRequest()Ljava/lang/Object;

+###org/springframework/cloud/client/loadbalancer/RequestData
@3.0.0
+#<init>(Lorg/springframework/http/HttpMethod;Ljava/net/URI;Lorg/springframework/http/HttpHeaders;Lorg/springframework/util/MultiValueMap;Ljava/util/Map;)V
+#<init>(Lorg/springframework/web/reactive/function/client/ClientRequest;)V
+#<init>(Lorg/springframework/http/HttpRequest;)V
+#<init>(Lorg/springframework/http/server/reactive/ServerHttpRequest;)V
+#getHttpMethod()Lorg/springframework/http/HttpMethod;
+#getUrl()Ljava/net/URI;
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#getCookies()Lorg/springframework/util/MultiValueMap;
+#getAttributes()Ljava/util/Map;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.1.5
+#<init>(Lorg/springframework/http/server/reactive/ServerHttpRequest;Ljava/util/Map;)V

+###org/springframework/cloud/client/loadbalancer/Response
@2.2.4.RELEASE
+#hasServer()Z
+#getServer()Ljava/lang/Object;
+#onComplete(Lorg/springframework/cloud/client/loadbalancer/CompletionContext;)V[deprecated]
@3.0.0
-#onComplete(Lorg/springframework/cloud/client/loadbalancer/CompletionContext;)V[deprecated]

+###org/springframework/cloud/client/loadbalancer/LoadBalancerLifecycle
@3.0.0
+#supports(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Z
+#onStart(Lorg/springframework/cloud/client/loadbalancer/Request;)V
+#onStartRequest(Lorg/springframework/cloud/client/loadbalancer/Request;Lorg/springframework/cloud/client/loadbalancer/Response;)V
+#onComplete(Lorg/springframework/cloud/client/loadbalancer/CompletionContext;)V

+###org/springframework/cloud/client/loadbalancer/DefaultRequest
@2.2.4.RELEASE
+#<init>()V
+#<init>(Ljava/lang/Object;)V
+#getContext()Ljava/lang/Object;
+#setContext(Ljava/lang/Object;)V
@2.2.6.RELEASE
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/cloud/client/loadbalancer/HintRequestContext
@3.0.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getHint()Ljava/lang/String;
+#setHint(Ljava/lang/String;)V
+#getRequestStartTime()J
+#setRequestStartTime(J)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/cloud/client/loadbalancer/Request
@2.2.4.RELEASE
+#getContext()Ljava/lang/Object;

+###org/springframework/cloud/client/loadbalancer/LoadBalancerDefaultMappingsProviderAutoConfiguration
@3.1.0
+#<init>()V
+#loadBalancerClientsDefaultsMappingsProvider()Lorg/springframework/cloud/commons/config/DefaultsBindHandlerAdvisor$MappingsProvider;

+###org/springframework/cloud/client/loadbalancer/LoadBalancerProperties
@3.0.0
+#<init>()V
+#getHealthCheck()Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties$HealthCheck;
+#setHealthCheck(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties$HealthCheck;)V
+#getHint()Ljava/util/Map;
+#setHint(Ljava/util/Map;)V
+#getRetry()Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties$Retry;
+#setRetry(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties$Retry;)V
+#getStickySession()Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties$StickySession;
+#setStickySession(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties$StickySession;)V
@3.0.2
+#getHintHeaderName()Ljava/lang/String;
+#setHintHeaderName(Ljava/lang/String;)V
@3.1.0
+#setxForwarded(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties$XForwarded;)V
+#getXForwarded()Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties$XForwarded;
@3.1.2
+#isUseRawStatusCodeInResponseData()Z
+#setUseRawStatusCodeInResponseData(Z)V
@4.0.0
-#isUseRawStatusCodeInResponseData()Z
-#setUseRawStatusCodeInResponseData(Z)V

+###org/springframework/cloud/client/loadbalancer/RetryableRequestContext
@2.2.7.RELEASE
+#<init>(Lorg/springframework/cloud/client/ServiceInstance;)V
+#<init>(Lorg/springframework/cloud/client/ServiceInstance;Ljava/lang/String;)V
+#getPreviousServiceInstance()Lorg/springframework/cloud/client/ServiceInstance;
+#setPreviousServiceInstance(Lorg/springframework/cloud/client/ServiceInstance;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0
+#<init>(Lorg/springframework/cloud/client/ServiceInstance;Lorg/springframework/cloud/client/loadbalancer/RequestData;)V
+#<init>(Lorg/springframework/cloud/client/ServiceInstance;Lorg/springframework/cloud/client/loadbalancer/RequestData;Ljava/lang/String;)V
-#<init>(Lorg/springframework/cloud/client/ServiceInstance;Ljava/lang/String;)V

+###org/springframework/cloud/client/loadbalancer/CompletionContext
@2.2.4.RELEASE
+#<init>(Lorg/springframework/cloud/client/loadbalancer/CompletionContext$Status;)V
+#<init>(Lorg/springframework/cloud/client/loadbalancer/CompletionContext$Status;Ljava/lang/Throwable;)V
+#status()Lorg/springframework/cloud/client/loadbalancer/CompletionContext$Status;
+#getThrowable()Ljava/lang/Throwable;
+#toString()Ljava/lang/String;
@3.0.0
+#<init>(Lorg/springframework/cloud/client/loadbalancer/CompletionContext$Status;Lorg/springframework/cloud/client/loadbalancer/Request;)V
+#<init>(Lorg/springframework/cloud/client/loadbalancer/CompletionContext$Status;Lorg/springframework/cloud/client/loadbalancer/Request;Lorg/springframework/cloud/client/loadbalancer/Response;)V
+#<init>(Lorg/springframework/cloud/client/loadbalancer/CompletionContext$Status;Ljava/lang/Throwable;Lorg/springframework/cloud/client/loadbalancer/Request;Lorg/springframework/cloud/client/loadbalancer/Response;)V
+#<init>(Lorg/springframework/cloud/client/loadbalancer/CompletionContext$Status;Lorg/springframework/cloud/client/loadbalancer/Request;Lorg/springframework/cloud/client/loadbalancer/Response;Ljava/lang/Object;)V
+#<init>(Lorg/springframework/cloud/client/loadbalancer/CompletionContext$Status;Ljava/lang/Throwable;Lorg/springframework/cloud/client/loadbalancer/Request;Lorg/springframework/cloud/client/loadbalancer/Response;Ljava/lang/Object;)V
+#getLoadBalancerResponse()Lorg/springframework/cloud/client/loadbalancer/Response;
+#getClientResponse()Ljava/lang/Object;
+#getLoadBalancerRequest()Lorg/springframework/cloud/client/loadbalancer/Request;
-#<init>(Lorg/springframework/cloud/client/loadbalancer/CompletionContext$Status;)V
-#<init>(Lorg/springframework/cloud/client/loadbalancer/CompletionContext$Status;Ljava/lang/Throwable;)V

+###org/springframework/cloud/client/loadbalancer/DefaultResponse
@2.2.4.RELEASE
+#<init>(Lorg/springframework/cloud/client/ServiceInstance;)V
+#hasServer()Z
+#getServer()Lorg/springframework/cloud/client/ServiceInstance;
+#onComplete(Lorg/springframework/cloud/client/loadbalancer/CompletionContext;)V
+#getServer()Ljava/lang/Object;
@3.0.0
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
-#onComplete(Lorg/springframework/cloud/client/loadbalancer/CompletionContext;)V

+###org/springframework/cloud/client/loadbalancer/LoadBalancerProperties$XForwarded
@3.1.0
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V

+###org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig
@2.2.0.RELEASE

+###org/springframework/cloud/client/loadbalancer/reactive/DeferringLoadBalancerExchangeFilterFunction
@2.2.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/ObjectProvider;)V
+#filter(Lorg/springframework/web/reactive/function/client/ClientRequest;Lorg/springframework/web/reactive/function/client/ExchangeFunction;)Lreactor/core/publisher/Mono;

+###org/springframework/cloud/client/loadbalancer/reactive/RetryableLoadBalancerExchangeFilterFunction
@2.2.7.RELEASE
+#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryPolicy;Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;)V
+#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;)V
+#filter(Lorg/springframework/web/reactive/function/client/ClientRequest;Lorg/springframework/web/reactive/function/client/ExchangeFunction;)Lreactor/core/publisher/Mono;
@2.2.8.RELEASE
*#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryPolicy;Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;)V[deprecated]
*#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;)V[deprecated]
+#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryPolicy;Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Ljava/util/List;)V
@3.0.0
+#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryPolicy;Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;)V
-#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryPolicy;Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;)V[deprecated]
-#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;)V[deprecated]
-#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryPolicy;Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;Ljava/util/List;)V
@3.0.2
*#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryPolicy;Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;)V[deprecated]
+#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryPolicy;Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;Ljava/util/List;)V
@3.1.0
*#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryPolicy;Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;Ljava/util/List;)V[deprecated]
+#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryPolicy$Factory;Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Ljava/util/List;)V
@4.0.0
-#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryPolicy;Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;)V[deprecated]
-#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryPolicy;Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;Ljava/util/List;)V[deprecated]

+###org/springframework/cloud/client/loadbalancer/reactive/ExchangeFilterFunctionUtils
@2.2.7.RELEASE

+###org/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory
@2.1.3.RELEASE
+#getInstance(Ljava/lang/String;)Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer;
@3.0.0
+#getInstances(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Map;
+#getInstance(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/Object;
@3.1.0
+#getProperties(Ljava/lang/String;)Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;

+###org/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer
@2.1.0.RELEASE
+#choose(Lorg/springframework/cloud/client/loadbalancer/reactive/Request;)Lorg/reactivestreams/Publisher;
+#choose()Lorg/reactivestreams/Publisher;
@3.0.0
+#choose(Lorg/springframework/cloud/client/loadbalancer/Request;)Lorg/reactivestreams/Publisher;
-#choose(Lorg/springframework/cloud/client/loadbalancer/reactive/Request;)Lorg/reactivestreams/Publisher;

+###org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerClientRequestTransformer
@2.2.8.RELEASE
+#transformRequest(Lorg/springframework/web/reactive/function/client/ClientRequest;Lorg/springframework/cloud/client/ServiceInstance;)Lorg/springframework/web/reactive/function/client/ClientRequest;
@3.0.0
-###org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerClientRequestTransformer

+###org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryPolicy
@2.2.7.RELEASE
+#canRetrySameServiceInstance(Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryContext;)Z
+#canRetryNextServiceInstance(Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryContext;)Z
+#retryableStatusCode(I)Z
+#canRetryOnMethod(Lorg/springframework/http/HttpMethod;)Z
@4.0.0
+#retryableException(Ljava/lang/Throwable;)Z

+###org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerWebClientBuilderBeanPostProcessor
@2.2.0.RELEASE
+#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/DeferringLoadBalancerExchangeFilterFunction;Lorg/springframework/context/ApplicationContext;)V
+#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/cloud/client/loadbalancer/reactive/RetryableExchangeFilterFunctionLoadBalancerRetryPolicy
@2.2.7.RELEASE
+#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;)V
+#canRetrySameServiceInstance(Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryContext;)Z
+#canRetryNextServiceInstance(Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryContext;)Z
+#retryableStatusCode(I)Z
+#canRetryOnMethod(Lorg/springframework/http/HttpMethod;)Z
@3.0.0
+#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;)V
-#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties;)V
@4.0.0
+#retryableException(Ljava/lang/Throwable;)Z

+###org/springframework/cloud/client/loadbalancer/reactive/ReactorLoadBalancerClientAutoConfiguration
@2.1.3.RELEASE
+#<init>()V
+#loadBalancedWebClientInitializer(Ljava/util/List;)Lorg/springframework/beans/factory/SmartInitializingSingleton;
+#loadBalancerClientWebClientCustomizer(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactorLoadBalancerExchangeFilterFunction;)Lorg/springframework/cloud/client/loadbalancer/reactive/WebClientCustomizer;
+#loadBalancerExchangeFilterFunction(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;)Lorg/springframework/cloud/client/loadbalancer/reactive/ReactorLoadBalancerExchangeFilterFunction;
@2.2.0.RELEASE
+#reactorLoadBalancerClientRibbonWarnLogger()Lorg/springframework/cloud/client/loadbalancer/reactive/ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger;
-#loadBalancedWebClientInitializer(Ljava/util/List;)Lorg/springframework/beans/factory/SmartInitializingSingleton;
-#loadBalancerClientWebClientCustomizer(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactorLoadBalancerExchangeFilterFunction;)Lorg/springframework/cloud/client/loadbalancer/reactive/WebClientCustomizer;
-#loadBalancerExchangeFilterFunction(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;)Lorg/springframework/cloud/client/loadbalancer/reactive/ReactorLoadBalancerExchangeFilterFunction;
@3.0.0
+#loadBalancerExchangeFilterFunction(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;)Lorg/springframework/cloud/client/loadbalancer/reactive/ReactorLoadBalancerExchangeFilterFunction;
+#retryableLoadBalancerExchangeFilterFunction(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryPolicy;)Lorg/springframework/cloud/client/loadbalancer/reactive/RetryableLoadBalancerExchangeFilterFunction;
+#loadBalancerRetryPolicy(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;)Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryPolicy;
-#reactorLoadBalancerClientRibbonWarnLogger()Lorg/springframework/cloud/client/loadbalancer/reactive/ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger;
@3.0.2
+#loadBalancerExchangeFilterFunction(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/cloud/client/loadbalancer/reactive/ReactorLoadBalancerExchangeFilterFunction;
+#retryableLoadBalancerExchangeFilterFunction(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryPolicy;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/cloud/client/loadbalancer/reactive/RetryableLoadBalancerExchangeFilterFunction;
-#loadBalancerExchangeFilterFunction(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;)Lorg/springframework/cloud/client/loadbalancer/reactive/ReactorLoadBalancerExchangeFilterFunction;
-#retryableLoadBalancerExchangeFilterFunction(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryPolicy;)Lorg/springframework/cloud/client/loadbalancer/reactive/RetryableLoadBalancerExchangeFilterFunction;
@3.1.0
+#loadBalancerExchangeFilterFunction(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/cloud/client/loadbalancer/reactive/ReactorLoadBalancerExchangeFilterFunction;
+#retryableLoadBalancerExchangeFilterFunction(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryPolicy$Factory;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/cloud/client/loadbalancer/reactive/RetryableLoadBalancerExchangeFilterFunction;
+#loadBalancerRetryPolicy(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;)Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryPolicy$Factory;
-#loadBalancerExchangeFilterFunction(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/cloud/client/loadbalancer/reactive/ReactorLoadBalancerExchangeFilterFunction;
-#retryableLoadBalancerExchangeFilterFunction(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryPolicy;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/cloud/client/loadbalancer/reactive/RetryableLoadBalancerExchangeFilterFunction;
-#loadBalancerRetryPolicy(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;)Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryPolicy;

+###org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerBeanPostProcessorAutoConfiguration
@2.2.0.RELEASE
+#<init>()V
+#loadBalancerWebClientBuilderBeanPostProcessor(Lorg/springframework/cloud/client/loadbalancer/reactive/DeferringLoadBalancerExchangeFilterFunction;Lorg/springframework/context/ApplicationContext;)Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerWebClientBuilderBeanPostProcessor;

+###org/springframework/cloud/client/loadbalancer/reactive/ReactorLoadBalancerExchangeFilterFunction
@2.1.3.RELEASE
+#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;)V
+#filter(Lorg/springframework/web/reactive/function/client/ClientRequest;Lorg/springframework/web/reactive/function/client/ExchangeFunction;)Lreactor/core/publisher/Mono;
@2.2.8.RELEASE
*#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;)V[deprecated]
+#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Ljava/util/List;)V
@3.0.0
+#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;)V
-#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;)V[deprecated]
-#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Ljava/util/List;)V
@3.0.2
*#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;)V[deprecated]
+#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;Ljava/util/List;)V
@3.1.0
*#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;Ljava/util/List;)V[deprecated]
+#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Ljava/util/List;)V
@4.0.0
-#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;)V[deprecated]
-#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties;Ljava/util/List;)V[deprecated]

+###org/springframework/cloud/client/loadbalancer/reactive/WebClientCustomizer
@2.0.2.RELEASE
+#customize(Lorg/springframework/web/reactive/function/client/WebClient$Builder;)V

+###org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryContext
@3.1.0

+###org/springframework/cloud/client/loadbalancer/reactive/LoadBalancedExchangeFilterFunction
@3.0.0

+###org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerRetryPolicy$Factory
@3.1.0

+###org/springframework/cloud/client/loadbalancer/LoadBalancedRetryFactory
@2.0.0.RELEASE
+#createRetryPolicy(Ljava/lang/String;Lorg/springframework/cloud/client/loadbalancer/ServiceInstanceChooser;)Lorg/springframework/cloud/client/loadbalancer/LoadBalancedRetryPolicy;
+#createRetryListeners(Ljava/lang/String;)[Lorg/springframework/retry/RetryListener;
+#createBackOffPolicy(Ljava/lang/String;)Lorg/springframework/retry/backoff/BackOffPolicy;

+###org/springframework/cloud/client/loadbalancer/DefaultRequestContext
@2.2.4.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getHint()Ljava/lang/String;
+#setHint(Ljava/lang/String;)V
@2.2.6.RELEASE
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#getClientRequest()Ljava/lang/Object;
-#<init>(Ljava/lang/String;)V
-#getHint()Ljava/lang/String;
-#setHint(Ljava/lang/String;)V

+###org/springframework/cloud/client/loadbalancer/LoadBalancedRecoveryCallback
@2.0.0.RELEASE
+#<init>()V
+#recover(Lorg/springframework/retry/RetryContext;)Ljava/lang/Object;

+###org/springframework/cloud/client/loadbalancer/LoadBalancerProperties$Retry
@3.0.0
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#isRetryOnAllOperations()Z
+#setRetryOnAllOperations(Z)V
+#getMaxRetriesOnSameServiceInstance()I
+#setMaxRetriesOnSameServiceInstance(I)V
+#getMaxRetriesOnNextServiceInstance()I
+#setMaxRetriesOnNextServiceInstance(I)V
+#getRetryableStatusCodes()Ljava/util/Set;
+#setRetryableStatusCodes(Ljava/util/Set;)V
+#getBackoff()Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties$Retry$Backoff;
+#setBackoff(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerProperties$Retry$Backoff;)V
@4.0.0
+#getRetryableExceptions()Ljava/util/Set;
+#setRetryableExceptions(Ljava/util/Set;)V
+#isRetryOnAllExceptions()Z
+#setRetryOnAllExceptions(Z)V

+###org/springframework/cloud/client/loadbalancer/LoadBalancerProperties$HealthCheck
@3.0.0
+#<init>()V
+#getRefetchInstances()Z
+#setRefetchInstances(Z)V
+#getRepeatHealthCheck()Z
+#setRepeatHealthCheck(Z)V
+#getInitialDelay()Ljava/time/Duration;
+#setInitialDelay(Ljava/time/Duration;)V
+#getRefetchInstancesInterval()Ljava/time/Duration;
+#setRefetchInstancesInterval(Ljava/time/Duration;)V
+#getPath()Ljava/util/Map;
+#setPath(Ljava/util/Map;)V
+#getInterval()Ljava/time/Duration;
+#setInterval(Ljava/time/Duration;)V
@3.1.0
+#getPort()Ljava/lang/Integer;
+#setPort(Ljava/lang/Integer;)V

+###org/springframework/cloud/client/ConditionalOnReactiveDiscoveryEnabled
@2.2.0.RELEASE

+###org/springframework/cloud/client/ConditionalOnDiscoveryHealthIndicatorEnabled
@2.2.0.RELEASE

+###org/springframework/cloud/client/circuitbreaker/NoFallbackAvailableException
@2.2.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/cloud/client/circuitbreaker/ReactiveCircuitBreaker
@2.2.0.RELEASE
+#run(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#run(Lreactor/core/publisher/Mono;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#run(Lreactor/core/publisher/Flux;)Lreactor/core/publisher/Flux;
+#run(Lreactor/core/publisher/Flux;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;

+###org/springframework/cloud/client/circuitbreaker/ReactiveCircuitBreakerFactory
@2.2.0.RELEASE
+#<init>()V
+#create(Ljava/lang/String;)Lorg/springframework/cloud/client/circuitbreaker/ReactiveCircuitBreaker;
@3.0.4
+#create(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/cloud/client/circuitbreaker/ReactiveCircuitBreaker;

+###org/springframework/cloud/client/circuitbreaker/ConfigBuilder
@2.2.0.RELEASE
+#build()Ljava/lang/Object;

+###org/springframework/cloud/client/circuitbreaker/AbstractCircuitBreakerFactory
@2.2.0.RELEASE
+#<init>()V
+#configure(Ljava/util/function/Consumer;[Ljava/lang/String;)V
+#configureDefault(Ljava/util/function/Function;)V

+###org/springframework/cloud/client/circuitbreaker/CircuitBreakerFactory
@2.2.0.RELEASE
+#<init>()V
+#create(Ljava/lang/String;)Lorg/springframework/cloud/client/circuitbreaker/CircuitBreaker;
@2.2.8.RELEASE
+#create(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/cloud/client/circuitbreaker/CircuitBreaker;
@3.0.0
-#create(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/cloud/client/circuitbreaker/CircuitBreaker;
@3.0.3
+#create(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/cloud/client/circuitbreaker/CircuitBreaker;

+###org/springframework/cloud/client/circuitbreaker/CircuitBreaker
@2.2.0.RELEASE
+#run(Ljava/util/function/Supplier;)Ljava/lang/Object;
+#run(Ljava/util/function/Supplier;Ljava/util/function/Function;)Ljava/lang/Object;

+###org/springframework/cloud/client/circuitbreaker/Customizer
@2.2.0.RELEASE
+#customize(Ljava/lang/Object;)V
@2.2.2.RELEASE
+#once(Lorg/springframework/cloud/client/circuitbreaker/Customizer;Ljava/util/function/Function;)Lorg/springframework/cloud/client/circuitbreaker/Customizer;

+###org/springframework/cloud/client/ReactiveCommonsClientAutoConfiguration$ReactiveDiscoveryLoadBalancerConfiguration
@2.2.0.RELEASE
+#reactiveDiscoveryClients(Ljava/util/Collection;)Lorg/springframework/cloud/client/discovery/health/reactive/ReactiveDiscoveryCompositeHealthContributor;
+#reactiveCommonsFeatures()Lorg/springframework/cloud/client/actuator/HasFeatures;

+###org/springframework/cloud/client/ConditionalOnBlockingDiscoveryEnabled
@2.2.0.RELEASE

+###org/springframework/cloud/client/ReactiveCommonsClientAutoConfiguration
@2.2.0.RELEASE
+#<init>()V

+###org/springframework/cloud/configuration/CompatibilityVerifierProperties
@1.3.6.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#getCompatibleBootVersions()Ljava/util/List;
+#setCompatibleBootVersions(Ljava/util/List;)V
@2.0.0.RELEASE
-###org/springframework/cloud/configuration/CompatibilityVerifierProperties

+###org/springframework/cloud/configuration/CompatibilityVerifierAutoConfiguration
@1.3.6.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/cloud/configuration/CompatibilityVerifierAutoConfiguration

+###org/springframework/cloud/configuration/CompatibilityNotMetFailureAnalyzer
@1.3.6.RELEASE
+#<init>()V
@2.0.0.RELEASE
-###org/springframework/cloud/configuration/CompatibilityNotMetFailureAnalyzer

+###org/springframework/cloud/configuration/TlsProperties
@2.2.5.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#getKeyStore()Lorg/springframework/core/io/Resource;
+#setKeyStore(Lorg/springframework/core/io/Resource;)V
+#getKeyStoreType()Ljava/lang/String;
+#setKeyStoreType(Ljava/lang/String;)V
+#getKeyStorePassword()Ljava/lang/String;
+#setKeyStorePassword(Ljava/lang/String;)V
+#keyStorePassword()[C
+#getKeyPassword()Ljava/lang/String;
+#setKeyPassword(Ljava/lang/String;)V
+#keyPassword()[C
+#getTrustStore()Lorg/springframework/core/io/Resource;
+#setTrustStore(Lorg/springframework/core/io/Resource;)V
+#getTrustStoreType()Ljava/lang/String;
+#setTrustStoreType(Ljava/lang/String;)V
+#getTrustStorePassword()Ljava/lang/String;
+#setTrustStorePassword(Ljava/lang/String;)V
+#trustStorePassword()[C
+#postConstruct()V
@3.0.2
*#postConstruct()V[deprecated]
@4.0.0
-#postConstruct()V[deprecated]

+###org/springframework/cloud/configuration/SSLContextFactory
@2.2.5.RELEASE
+#<init>(Lorg/springframework/cloud/configuration/TlsProperties;)V
+#createSSLContext()Ljavax/net/ssl/SSLContext;
+#createKeyStore()Ljava/security/KeyStore;
+#createTrustStore()Ljava/security/KeyStore;

+###org/springframework/cloud/commons/util/TaskSchedulerWrapper
@2.2.9.RELEASE
+#<init>(Lorg/springframework/scheduling/TaskScheduler;)V
+#getTaskScheduler()Lorg/springframework/scheduling/TaskScheduler;
+#destroy()V
+#afterPropertiesSet()V
@3.0.0
-###org/springframework/cloud/commons/util/TaskSchedulerWrapper

+###org/springframework/cloud/commons/ConfigDataMissingEnvironmentPostProcessor$ImportException
@3.0.3

+###org/springframework/cloud/commons/config/DefaultsBindHandlerAdvisor$MappingsProvider
@3.1.0
+#getDefaultMappings()Ljava/util/Map;

+###org/springframework/cloud/commons/config/CommonsConfigAutoConfiguration
@3.1.0
+#<init>()V
+#defaultsBindHandlerAdvisor([Lorg/springframework/cloud/commons/config/DefaultsBindHandlerAdvisor$MappingsProvider;)Lorg/springframework/cloud/commons/config/DefaultsBindHandlerAdvisor;

+###org/springframework/cloud/commons/config/DefaultsBindHandlerAdvisor
@3.1.0
+#<init>(Ljava/util/Map;)V
+#apply(Lorg/springframework/boot/context/properties/bind/BindHandler;)Lorg/springframework/boot/context/properties/bind/BindHandler;

+###org/springframework/cloud/commons/ConfigDataMissingEnvironmentPostProcessor
@3.0.3
+#<init>()V
+#getOrder()I
+#postProcessEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/SpringApplication;)V

+###org/springframework/cloud/commons/security/AccessTokenContextRelay
@3.0.0
+#<init>(Lorg/springframework/security/oauth2/client/OAuth2ClientContext;)V
+#copyToken()Z
@4.0.0
+#<init>()V
-#<init>(Lorg/springframework/security/oauth2/client/OAuth2ClientContext;)V
-#copyToken()Z

+###org/springframework/cloud/commons/security/ResourceServerTokenRelayAutoConfiguration
@3.0.0
+#<init>()V
+#accessTokenContextRelay(Lorg/springframework/security/oauth2/client/OAuth2ClientContext;)Lorg/springframework/cloud/commons/security/AccessTokenContextRelay;
@4.0.0
-#accessTokenContextRelay(Lorg/springframework/security/oauth2/client/OAuth2ClientContext;)Lorg/springframework/cloud/commons/security/AccessTokenContextRelay;

+###org/springframework/cloud/commons/security/ResourceServerTokenRelayAutoConfiguration$ResourceServerTokenRelayRegistrationAutoConfiguration
@3.0.0
+#<init>()V
+#addInterceptors(Lorg/springframework/web/servlet/config/annotation/InterceptorRegistry;)V

+###org/springframework/cloud/commons/publisher/CloudFlux
@2.2.7.RELEASE
+#<init>()V
+#firstNonEmpty([Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#firstNonEmpty(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
@3.0.0
-###org/springframework/cloud/commons/publisher/CloudFlux

+###org/springframework/cloud/client/loadbalancer/reactive/Response
@2.1.0.RELEASE
+#hasServer()Z
+#getServer()Ljava/lang/Object;
+#onComplete(Lorg/springframework/cloud/client/loadbalancer/reactive/CompletionContext;)V
@2.2.4.RELEASE
-#hasServer()Z
-#getServer()Ljava/lang/Object;
@3.0.0
-###org/springframework/cloud/client/loadbalancer/reactive/Response

+###org/springframework/cloud/client/loadbalancer/reactive/DefaultRequest
@2.1.0.RELEASE
+#<init>()V
@2.2.2.RELEASE
+#<init>(Ljava/lang/Object;)V
+#getContext()Ljava/lang/Object;
+#setContext(Ljava/lang/Object;)V
@2.2.4.RELEASE
-#getContext()Ljava/lang/Object;
-#setContext(Ljava/lang/Object;)V
@3.0.0
-###org/springframework/cloud/client/loadbalancer/reactive/DefaultRequest

+###org/springframework/cloud/client/loadbalancer/reactive/Request
@2.1.0.RELEASE
@2.2.2.RELEASE
+#getContext()Ljava/lang/Object;
@2.2.4.RELEASE
-#getContext()Ljava/lang/Object;
@3.0.0
-###org/springframework/cloud/client/loadbalancer/reactive/Request

+###org/springframework/cloud/client/loadbalancer/reactive/CompletionContext
@2.1.0.RELEASE
+#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/CompletionContext$Status;)V
+#<init>(Lorg/springframework/cloud/client/loadbalancer/reactive/CompletionContext$Status;Ljava/lang/Throwable;)V
+#getStatus()Lorg/springframework/cloud/client/loadbalancer/reactive/CompletionContext$Status;
+#getThrowable()Ljava/lang/Throwable;
+#toString()Ljava/lang/String;
@2.2.4.RELEASE
-#getThrowable()Ljava/lang/Throwable;
-#toString()Ljava/lang/String;
@3.0.0
-###org/springframework/cloud/client/loadbalancer/reactive/CompletionContext

+###org/springframework/cloud/client/loadbalancer/reactive/DefaultResponse
@2.1.0.RELEASE
+#<init>(Lorg/springframework/cloud/client/ServiceInstance;)V
+#hasServer()Z
+#getServer()Lorg/springframework/cloud/client/ServiceInstance;
+#onComplete(Lorg/springframework/cloud/client/loadbalancer/reactive/CompletionContext;)V
+#getServer()Ljava/lang/Object;
@2.2.4.RELEASE
-#hasServer()Z
-#getServer()Lorg/springframework/cloud/client/ServiceInstance;
-#getServer()Ljava/lang/Object;
@3.0.0
-###org/springframework/cloud/client/loadbalancer/reactive/DefaultResponse

+###org/springframework/cloud/client/loadbalancer/reactive/EmptyResponse
@2.1.0.RELEASE
+#<init>()V
+#hasServer()Z
+#getServer()Lorg/springframework/cloud/client/ServiceInstance;
+#onComplete(Lorg/springframework/cloud/client/loadbalancer/reactive/CompletionContext;)V
+#getServer()Ljava/lang/Object;
@2.2.4.RELEASE
-#hasServer()Z
-#getServer()Lorg/springframework/cloud/client/ServiceInstance;
-#getServer()Ljava/lang/Object;
@3.0.0
-###org/springframework/cloud/client/loadbalancer/reactive/EmptyResponse

+###org/springframework/cloud/client/loadbalancer/reactive/CompletionContext$Status
@2.1.0.RELEASE
+#values()[Lorg/springframework/cloud/client/loadbalancer/reactive/CompletionContext$Status;
+#valueOf(Ljava/lang/String;)Lorg/springframework/cloud/client/loadbalancer/reactive/CompletionContext$Status;
@3.0.0
-###org/springframework/cloud/client/loadbalancer/reactive/CompletionContext$Status

+###org/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancerAutoConfiguration
@2.0.0.RELEASE
+#<init>()V
+#getBuilders()Ljava/util/List;
+#loadBalancedWebClientInitializer(Ljava/util/List;)Lorg/springframework/beans/factory/SmartInitializingSingleton;
+#loadbalanceClientWebClientCustomizer(Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerExchangeFilterFunction;)Lorg/springframework/boot/web/reactive/function/client/WebClientCustomizer;
+#loadBalancerExchangeFilterFunction(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;)Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerExchangeFilterFunction;
@2.0.2.RELEASE
+#loadbalanceClientWebClientCustomizer(Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerExchangeFilterFunction;)Lorg/springframework/cloud/client/loadbalancer/reactive/WebClientCustomizer;
-#loadbalanceClientWebClientCustomizer(Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerExchangeFilterFunction;)Lorg/springframework/boot/web/reactive/function/client/WebClientCustomizer;
@2.1.3.RELEASE
+#loadBalancerClientWebClientCustomizer(Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerExchangeFilterFunction;)Lorg/springframework/cloud/client/loadbalancer/reactive/WebClientCustomizer;
-#loadbalanceClientWebClientCustomizer(Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerExchangeFilterFunction;)Lorg/springframework/cloud/client/loadbalancer/reactive/WebClientCustomizer;
@2.2.0.RELEASE
-#getBuilders()Ljava/util/List;
-#loadBalancedWebClientInitializer(Ljava/util/List;)Lorg/springframework/beans/factory/SmartInitializingSingleton;
-#loadBalancerClientWebClientCustomizer(Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerExchangeFilterFunction;)Lorg/springframework/cloud/client/loadbalancer/reactive/WebClientCustomizer;
@3.0.0
-###org/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancerAutoConfiguration

+###org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerExchangeFilterFunction
@2.0.0.RELEASE
+#<init>(Lorg/springframework/cloud/client/loadbalancer/LoadBalancerClient;)V
+#filter(Lorg/springframework/web/reactive/function/client/ClientRequest;Lorg/springframework/web/reactive/function/client/ExchangeFunction;)Lreactor/core/publisher/Mono;
@3.0.0
-###org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerExchangeFilterFunction

+###org/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryProperties$SimpleServiceInstance
@2.2.0.RELEASE
+#<init>()V
+#<init>(Ljava/net/URI;)V
+#getInstanceId()Ljava/lang/String;
+#setInstanceId(Ljava/lang/String;)V
+#getServiceId()Ljava/lang/String;
+#setServiceId(Ljava/lang/String;)V
+#getHost()Ljava/lang/String;
+#getPort()I
+#isSecure()Z
+#getUri()Ljava/net/URI;
+#setUri(Ljava/net/URI;)V
+#getMetadata()Ljava/util/Map;
@3.0.0
-###org/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryProperties$SimpleServiceInstance

+###org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig
@2.2.0.RELEASE
@3.0.0
-###org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig

+###org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerProperties
@2.2.1.RELEASE
+#<init>()V
+#getZone()Ljava/lang/String;
+#setZone(Ljava/lang/String;)V
@2.2.2.RELEASE
+#getHealthCheck()Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerProperties$HealthCheck;
+#setHealthCheck(Lorg/springframework/cloud/client/loadbalancer/reactive/LoadBalancerProperties$HealthCheck;)V
-#getZone()Ljava/lang/String;
-#setZone(Ljava/lang/String;)V
@3.0.0
-###org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerProperties

+###org/springframework/cloud/client/loadbalancer/reactive/ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerExchangeFilterFunctionConfig
@2.2.0.RELEASE
+#loadBalancerExchangeFilterFunction(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;)Lorg/springframework/cloud/client/loadbalancer/reactive/ReactorLoadBalancerExchangeFilterFunction;
@2.2.8.RELEASE
+#loadBalancerExchangeFilterFunction(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;Lorg/springframework/beans/factory/ObjectProvider;)Lorg/springframework/cloud/client/loadbalancer/reactive/ReactorLoadBalancerExchangeFilterFunction;
-#loadBalancerExchangeFilterFunction(Lorg/springframework/cloud/client/loadbalancer/reactive/ReactiveLoadBalancer$Factory;)Lorg/springframework/cloud/client/loadbalancer/reactive/ReactorLoadBalancerExchangeFilterFunction;
@3.0.0
-###org/springframework/cloud/client/loadbalancer/reactive/ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerExchangeFilterFunctionConfig

+###org/springframework/cloud/client/loadbalancer/reactive/DefaultRequestContext
@2.2.2.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getHint()Ljava/lang/String;
+#setHint(Ljava/lang/String;)V
@2.2.4.RELEASE
-#getHint()Ljava/lang/String;
-#setHint(Ljava/lang/String;)V
@3.0.0
-###org/springframework/cloud/client/loadbalancer/reactive/DefaultRequestContext

+###org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerProperties$HealthCheck
@2.2.2.RELEASE
+#<init>()V
+#getInitialDelay()I
+#setInitialDelay(I)V
+#getPath()Ljava/util/Map;
+#setPath(Ljava/util/Map;)V
+#getInterval()Ljava/time/Duration;
+#setInterval(Ljava/time/Duration;)V
@2.2.7.RELEASE
+#getRefetchInstances()Z
+#setRefetchInstances(Z)V
+#getRepeatHealthCheck()Z
+#setRepeatHealthCheck(Z)V
+#getRefetchInstancesInterval()Ljava/time/Duration;
+#setRefetchInstancesInterval(Ljava/time/Duration;)V
@3.0.0
-###org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerProperties$HealthCheck

+###org/springframework/cloud/client/loadbalancer/reactive/OnNoRibbonDefaultCondition
@2.2.1.RELEASE
+#<init>()V
@3.0.0
-###org/springframework/cloud/client/loadbalancer/reactive/OnNoRibbonDefaultCondition

+###reactor/core/publisher/CloudFlux
@2.2.0.RELEASE
+#<init>()V
+#firstNonEmpty([Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#firstNonEmpty(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
@2.2.7.RELEASE
-###reactor/core/publisher/CloudFlux

+###org/springframework/cloud/client/loadbalancer/LoadBalancerEagerLoadProperties
@4.0.0
+#<init>()V
+#getClients()Ljava/util/List;
+#setClients(Ljava/util/List;)V

+###org/springframework/cloud/client/loadbalancer/HttpRequestLoadBalancerRequest
@3.0.6
+#getHttpRequest()Lorg/springframework/http/HttpRequest;
@3.1.0
-###org/springframework/cloud/client/loadbalancer/HttpRequestLoadBalancerRequest

+###org/springframework/cloud/client/loadbalancer/reactive/RetryableStatusCodeException
@4.0.0
+#<init>()V

+###org/springframework/cloud/client/circuitbreaker/observation/DefaultCircuitBreakerObservationConvention
@4.0.0
+#<init>()V
+#getLowCardinalityKeyValues(Lorg/springframework/cloud/client/circuitbreaker/observation/CircuitBreakerObservationContext;)Lio/micrometer/common/KeyValues;
+#getName()Ljava/lang/String;
+#getContextualName(Lorg/springframework/cloud/client/circuitbreaker/observation/CircuitBreakerObservationContext;)Ljava/lang/String;
+#getContextualName(Lio/micrometer/observation/Observation$Context;)Ljava/lang/String;
+#getLowCardinalityKeyValues(Lio/micrometer/observation/Observation$Context;)Lio/micrometer/common/KeyValues;

+###org/springframework/cloud/client/circuitbreaker/observation/CircuitBreakerObservationDocumentation$LowCardinalityTags
@4.0.0
+#values()[Lorg/springframework/cloud/client/circuitbreaker/observation/CircuitBreakerObservationDocumentation$LowCardinalityTags;
+#valueOf(Ljava/lang/String;)Lorg/springframework/cloud/client/circuitbreaker/observation/CircuitBreakerObservationDocumentation$LowCardinalityTags;

+###org/springframework/cloud/client/circuitbreaker/observation/CircuitBreakerObservationConvention
@4.0.0
+#supportsContext(Lio/micrometer/observation/Observation$Context;)Z

+###org/springframework/cloud/client/circuitbreaker/observation/CircuitBreakerObservationContext
@4.0.0
+#<init>(Lorg/springframework/cloud/client/circuitbreaker/observation/CircuitBreakerObservationContext$Type;)V
+#getType()Lorg/springframework/cloud/client/circuitbreaker/observation/CircuitBreakerObservationContext$Type;

+###org/springframework/cloud/client/circuitbreaker/observation/ObservedCircuitBreaker
@4.0.0
+#<init>(Lorg/springframework/cloud/client/circuitbreaker/CircuitBreaker;Lio/micrometer/observation/ObservationRegistry;)V
+#run(Ljava/util/function/Supplier;Ljava/util/function/Function;)Ljava/lang/Object;
+#run(Ljava/util/function/Supplier;)Ljava/lang/Object;
+#setCustomConvention(Lorg/springframework/cloud/client/circuitbreaker/observation/CircuitBreakerObservationConvention;)V

+###org/springframework/cloud/client/circuitbreaker/observation/CircuitBreakerObservationContext$Type
@4.0.0
+#values()[Lorg/springframework/cloud/client/circuitbreaker/observation/CircuitBreakerObservationContext$Type;
+#valueOf(Ljava/lang/String;)Lorg/springframework/cloud/client/circuitbreaker/observation/CircuitBreakerObservationContext$Type;

+###org/springframework/cloud/client/serviceregistry/RegistrationLifecycle
@4.0.0
+#postProcessBeforeStartRegister(Lorg/springframework/cloud/client/serviceregistry/Registration;)V
+#postProcessAfterStartRegister(Lorg/springframework/cloud/client/serviceregistry/Registration;)V
+#postProcessBeforeStopRegister(Lorg/springframework/cloud/client/serviceregistry/Registration;)V
+#postProcessAfterStopRegister(Lorg/springframework/cloud/client/serviceregistry/Registration;)V
+#getOrder()I

+###org/springframework/cloud/client/serviceregistry/RegistrationManagementLifecycle
@4.0.0
+#postProcessBeforeStartRegisterManagement(Lorg/springframework/cloud/client/serviceregistry/Registration;)V
+#postProcessAfterStartRegisterManagement(Lorg/springframework/cloud/client/serviceregistry/Registration;)V
+#postProcessBeforeStopRegisterManagement(Lorg/springframework/cloud/client/serviceregistry/Registration;)V
+#postProcessAfterStopRegisterManagement(Lorg/springframework/cloud/client/serviceregistry/Registration;)V

+###org/springframework/cloud/util/SingleImplementationImportSelector
@1.0.0.RELEASE
+#selectImports(Lorg/springframework/core/type/AnnotationMetadata;)[Ljava/lang/String;
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
@1.0.2.RELEASE
-###org/springframework/cloud/util/SingleImplementationImportSelector

+###org/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties$Backoff
@2.2.7.RELEASE
+#<init>()V
+#getMinBackoff()Ljava/time/Duration;
+#setMinBackoff(Ljava/time/Duration;)V
+#getMaxBackoff()Ljava/time/Duration;
+#setMaxBackoff(Ljava/time/Duration;)V
+#getJitter()D
+#setJitter(D)V
+#isEnabled()Z
+#setEnabled(Z)V
@3.0.0
-###org/springframework/cloud/client/loadbalancer/LoadBalancerRetryProperties$Backoff

+###org/springframework/cloud/util/SpringFactoryImportSelector
@1.0.2.RELEASE
+#selectImports(Lorg/springframework/core/type/AnnotationMetadata;)[Ljava/lang/String;
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
@1.1.0.RELEASE
-###org/springframework/cloud/util/SpringFactoryImportSelector

+###org/springframework/cloud/client/loadbalancer/RetryLoadBalancerInterceptor$ClientHttpResponseWrapper
@1.3.1.RELEASE
+#<init>(Lorg/springframework/http/client/ClientHttpResponse;)V
+#init()V
+#getStatusCode()Lorg/springframework/http/HttpStatus;
+#getRawStatusCode()I
+#getStatusText()Ljava/lang/String;
+#close()V
+#getBody()Ljava/io/InputStream;
+#getHeaders()Lorg/springframework/http/HttpHeaders;
@1.3.2.RELEASE
-###org/springframework/cloud/client/loadbalancer/RetryLoadBalancerInterceptor$ClientHttpResponseWrapper
