
+###org/apache/commons/csv/CSVFormat
@1.0
+#newFormat(C)Lorg/apache/commons/csv/CSVFormat;
+#equals(Ljava/lang/Object;)Z
+#format([Ljava/lang/Object;)Ljava/lang/String;
+#getCommentMarker()Ljava/lang/Character;
+#getDelimiter()C
+#getEscapeCharacter()Ljava/lang/Character;
+#getHeader()[Ljava/lang/String;
+#getAllowMissingColumnNames()Z
+#getIgnoreEmptyLines()Z
+#getIgnoreSurroundingSpaces()Z
+#getNullString()Ljava/lang/String;
+#getQuoteCharacter()Ljava/lang/Character;
+#getQuoteMode()Lorg/apache/commons/csv/QuoteMode;
+#getRecordSeparator()Ljava/lang/String;
+#getSkipHeaderRecord()Z
+#hashCode()I
+#isCommentMarkerSet()Z
+#isEscapeCharacterSet()Z
+#isNullStringSet()Z
+#isQuoteCharacterSet()Z
+#parse(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;
+#print(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;
+#toString()Ljava/lang/String;
+#withCommentMarker(C)Lorg/apache/commons/csv/CSVFormat;
+#withCommentMarker(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;
+#withDelimiter(C)Lorg/apache/commons/csv/CSVFormat;
+#withEscape(C)Lorg/apache/commons/csv/CSVFormat;
+#withEscape(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;
+#withHeader([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;
+#withAllowMissingColumnNames(Z)Lorg/apache/commons/csv/CSVFormat;
+#withIgnoreEmptyLines(Z)Lorg/apache/commons/csv/CSVFormat;
+#withIgnoreSurroundingSpaces(Z)Lorg/apache/commons/csv/CSVFormat;
+#withNullString(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;
+#withQuote(C)Lorg/apache/commons/csv/CSVFormat;
+#withQuote(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;
+#withQuoteMode(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;
+#withRecordSeparator(C)Lorg/apache/commons/csv/CSVFormat;
+#withRecordSeparator(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;
+#withSkipHeaderRecord(Z)Lorg/apache/commons/csv/CSVFormat;
@1.1
+#getHeaderComments()[Ljava/lang/String;
+#withHeader(Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat;
+#withHeader(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;
+#withHeaderComments([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat;
+#withAllowMissingColumnNames()Lorg/apache/commons/csv/CSVFormat;
+#withIgnoreEmptyLines()Lorg/apache/commons/csv/CSVFormat;
+#withIgnoreSurroundingSpaces()Lorg/apache/commons/csv/CSVFormat;
+#withSkipHeaderRecord()Lorg/apache/commons/csv/CSVFormat;
@1.2
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;
@1.3
+#getIgnoreHeaderCase()Z
+#getTrailingDelimiter()Z
+#getTrim()Z
+#withFirstRecordAsHeader()Lorg/apache/commons/csv/CSVFormat;
+#withHeader(Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat;
+#withIgnoreHeaderCase()Lorg/apache/commons/csv/CSVFormat;
+#withIgnoreHeaderCase(Z)Lorg/apache/commons/csv/CSVFormat;
+#withTrailingDelimiter()Lorg/apache/commons/csv/CSVFormat;
+#withTrailingDelimiter(Z)Lorg/apache/commons/csv/CSVFormat;
+#withTrim()Lorg/apache/commons/csv/CSVFormat;
+#withTrim(Z)Lorg/apache/commons/csv/CSVFormat;
@1.4
+#print(Ljava/lang/Object;Ljava/lang/Appendable;Z)V
+#println(Ljava/lang/Appendable;)V
+#printRecord(Ljava/lang/Appendable;[Ljava/lang/Object;)V
@1.5
+#printer()Lorg/apache/commons/csv/CSVPrinter;
+#print(Ljava/io/File;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;
+#print(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;
@1.6
+#getAutoFlush()Z
+#withAutoFlush(Z)Lorg/apache/commons/csv/CSVFormat;
+#withSystemRecordSeparator()Lorg/apache/commons/csv/CSVFormat;
@1.7
+#getAllowDuplicateHeaderNames()Z
+#withAllowDuplicateHeaderNames()Lorg/apache/commons/csv/CSVFormat;
+#withAllowDuplicateHeaderNames(Z)Lorg/apache/commons/csv/CSVFormat;
@1.9.0
+#builder()Lorg/apache/commons/csv/CSVFormat$Builder;
*#getDelimiter()C[deprecated]
+#getDelimiterString()Ljava/lang/String;
*#withAllowDuplicateHeaderNames()Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withAllowDuplicateHeaderNames(Z)Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withAllowMissingColumnNames()Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withAllowMissingColumnNames(Z)Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withAutoFlush(Z)Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withCommentMarker(C)Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withCommentMarker(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withDelimiter(C)Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withEscape(C)Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withEscape(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withFirstRecordAsHeader()Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withHeader(Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withHeader(Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withHeader(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withHeader([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withHeaderComments([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withIgnoreEmptyLines()Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withIgnoreEmptyLines(Z)Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withIgnoreHeaderCase()Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withIgnoreHeaderCase(Z)Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withIgnoreSurroundingSpaces()Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withIgnoreSurroundingSpaces(Z)Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withNullString(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withQuote(C)Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withQuote(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withQuoteMode(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withRecordSeparator(C)Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withRecordSeparator(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withSkipHeaderRecord()Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withSkipHeaderRecord(Z)Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withSystemRecordSeparator()Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withTrailingDelimiter()Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withTrailingDelimiter(Z)Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withTrim()Lorg/apache/commons/csv/CSVFormat;[deprecated]
*#withTrim(Z)Lorg/apache/commons/csv/CSVFormat;[deprecated]
@1.10.0
*#getAllowDuplicateHeaderNames()Z[deprecated]
+#getDuplicateHeaderMode()Lorg/apache/commons/csv/DuplicateHeaderMode;

+###org/apache/commons/csv/CSVParser
@1.0
+#parse(Ljava/io/File;Ljava/nio/charset/Charset;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;
+#parse(Ljava/lang/String;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;
+#parse(Ljava/net/URL;Ljava/nio/charset/Charset;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;
+#<init>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V
+#close()V
+#getCurrentLineNumber()J
+#getHeaderMap()Ljava/util/Map;
+#getRecordNumber()J
+#getRecords()Ljava/util/List;
+#isClosed()Z
+#iterator()Ljava/util/Iterator;
@1.1
+#<init>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V
@1.5
+#parse(Ljava/io/InputStream;Ljava/nio/charset/Charset;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;
+#parse(Ljava/nio/file/Path;Ljava/nio/charset/Charset;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;
+#parse(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVParser;
+#getFirstEndOfLine()Ljava/lang/String;
@1.7
+#getHeaderNames()Ljava/util/List;
@1.9.0
+#stream()Ljava/util/stream/Stream;
@1.10.0
+#getHeaderComment()Ljava/lang/String;
+#getTrailerComment()Ljava/lang/String;
+#hasHeaderComment()Z
+#hasTrailerComment()Z

+###org/apache/commons/csv/CSVPrinter
@1.0
+#<init>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V
+#close()V
+#flush()V
+#print(Ljava/lang/Object;)V
+#printComment(Ljava/lang/String;)V
+#println()V
+#printRecord(Ljava/lang/Iterable;)V
+#printRecord([Ljava/lang/Object;)V
+#printRecords(Ljava/lang/Iterable;)V
+#printRecords([Ljava/lang/Object;)V
+#printRecords(Ljava/sql/ResultSet;)V
+#getOut()Ljava/lang/Appendable;
@1.6
+#close(Z)V
@1.9.0
+#printHeaders(Ljava/sql/ResultSet;)V
+#printRecords(Ljava/sql/ResultSet;Z)V
@1.10.0
+#printRecord(Ljava/util/stream/Stream;)V
+#printRecords(Ljava/util/stream/Stream;)V

+###org/apache/commons/csv/CSVRecord
@1.0
+#get(Ljava/lang/Enum;)Ljava/lang/String;
+#get(I)Ljava/lang/String;
+#get(Ljava/lang/String;)Ljava/lang/String;
+#getComment()Ljava/lang/String;
+#getRecordNumber()J
+#isConsistent()Z
+#isMapped(Ljava/lang/String;)Z
+#isSet(Ljava/lang/String;)Z
+#iterator()Ljava/util/Iterator;
+#size()I
+#toMap()Ljava/util/Map;
+#toString()Ljava/lang/String;
@1.1
+#getCharacterPosition()J
@1.3
+#hasComment()Z
@1.7
+#getParser()Lorg/apache/commons/csv/CSVParser;
@1.8
+#isSet(I)Z
@1.9.0
+#putIn(Ljava/util/Map;)Ljava/util/Map;
+#stream()Ljava/util/stream/Stream;
+#toList()Ljava/util/List;
@1.10.0
+#values()[Ljava/lang/String;

+###org/apache/commons/csv/QuoteMode
@1.0
+#values()[Lorg/apache/commons/csv/QuoteMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/csv/QuoteMode;

+###org/apache/commons/csv/CSVFormat$Predefined
@1.2
+#values()[Lorg/apache/commons/csv/CSVFormat$Predefined;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;
+#getFormat()Lorg/apache/commons/csv/CSVFormat;

+###org/apache/commons/csv/CSVFormat$Builder
@1.9.0
+#create()Lorg/apache/commons/csv/CSVFormat$Builder;
+#create(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVFormat$Builder;
+#build()Lorg/apache/commons/csv/CSVFormat;
+#setAllowDuplicateHeaderNames(Z)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setAllowMissingColumnNames(Z)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setAutoFlush(Z)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setCommentMarker(C)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setCommentMarker(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setDelimiter(C)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setDelimiter(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setEscape(C)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setEscape(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setHeader(Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setHeader(Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setHeader(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setHeader([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setHeaderComments([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setHeaderComments([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setIgnoreEmptyLines(Z)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setIgnoreHeaderCase(Z)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setIgnoreSurroundingSpaces(Z)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setNullString(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setQuote(C)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setQuote(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setQuoteMode(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setRecordSeparator(C)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setRecordSeparator(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setSkipHeaderRecord(Z)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setTrailingDelimiter(Z)Lorg/apache/commons/csv/CSVFormat$Builder;
+#setTrim(Z)Lorg/apache/commons/csv/CSVFormat$Builder;
@1.10.0
*#setAllowDuplicateHeaderNames(Z)Lorg/apache/commons/csv/CSVFormat$Builder;[deprecated]
+#setDuplicateHeaderMode(Lorg/apache/commons/csv/DuplicateHeaderMode;)Lorg/apache/commons/csv/CSVFormat$Builder;

+###org/apache/commons/csv/DuplicateHeaderMode
@1.10.0
+#values()[Lorg/apache/commons/csv/DuplicateHeaderMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/csv/DuplicateHeaderMode;
