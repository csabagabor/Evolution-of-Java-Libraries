
+###org/springframework/session/data/redis/config/annotation/SpringSessionRedisOperations
@2.0.0.RELEASE

+###org/springframework/session/data/redis/config/annotation/web/http/EnableRedisHttpSession
@2.0.0.RELEASE
+#maxInactiveIntervalInSeconds()I
+#redisNamespace()Ljava/lang/String;
+#redisFlushMode()Lorg/springframework/session/data/redis/RedisFlushMode;
+#cleanupCron()Ljava/lang/String;
@2.2.0.RELEASE
*#redisFlushMode()Lorg/springframework/session/data/redis/RedisFlushMode;[deprecated]
+#flushMode()Lorg/springframework/session/FlushMode;
+#saveMode()Lorg/springframework/session/SaveMode;
@3.0.0
-#redisFlushMode()Lorg/springframework/session/data/redis/RedisFlushMode;[deprecated]
-#cleanupCron()Ljava/lang/String;

+###org/springframework/session/data/redis/config/annotation/web/http/RedisHttpSessionConfiguration
@2.0.0.RELEASE
+#<init>()V
+#sessionRepository()Lorg/springframework/session/data/redis/RedisOperationsSessionRepository;
+#redisMessageListenerContainer()Lorg/springframework/data/redis/listener/RedisMessageListenerContainer;
+#enableRedisKeyspaceNotificationsInitializer()Lorg/springframework/beans/factory/InitializingBean;
+#setMaxInactiveIntervalInSeconds(I)V
+#setRedisNamespace(Ljava/lang/String;)V
+#setRedisFlushMode(Lorg/springframework/session/data/redis/RedisFlushMode;)V
+#setCleanupCron(Ljava/lang/String;)V
+#setConfigureRedisAction(Lorg/springframework/session/data/redis/config/ConfigureRedisAction;)V
+#setRedisConnectionFactory(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
+#setDefaultRedisSerializer(Lorg/springframework/data/redis/serializer/RedisSerializer;)V
+#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
+#setRedisTaskExecutor(Ljava/util/concurrent/Executor;)V
+#setRedisSubscriptionExecutor(Ljava/util/concurrent/Executor;)V
+#setEmbeddedValueResolver(Lorg/springframework/util/StringValueResolver;)V
+#setImportMetadata(Lorg/springframework/core/type/AnnotationMetadata;)V
+#configureTasks(Lorg/springframework/scheduling/config/ScheduledTaskRegistrar;)V
@2.0.1.RELEASE
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
@2.2.0.RELEASE
+#sessionRepository()Lorg/springframework/session/data/redis/RedisIndexedSessionRepository;
+#springSessionRedisMessageListenerContainer(Lorg/springframework/session/data/redis/RedisIndexedSessionRepository;)Lorg/springframework/data/redis/listener/RedisMessageListenerContainer;
*#setRedisFlushMode(Lorg/springframework/session/data/redis/RedisFlushMode;)V[deprecated]
+#setFlushMode(Lorg/springframework/session/FlushMode;)V
+#setSaveMode(Lorg/springframework/session/SaveMode;)V
+#setIndexResolver(Lorg/springframework/session/IndexResolver;)V
+#setSessionRepositoryCustomizer(Lorg/springframework/beans/factory/ObjectProvider;)V
-#sessionRepository()Lorg/springframework/session/data/redis/RedisOperationsSessionRepository;
-#redisMessageListenerContainer()Lorg/springframework/data/redis/listener/RedisMessageListenerContainer;
-#configureTasks(Lorg/springframework/scheduling/config/ScheduledTaskRegistrar;)V
@3.0.0
+#sessionRepository()Lorg/springframework/session/data/redis/RedisSessionRepository;
+#sessionRepository()Lorg/springframework/session/SessionRepository;
-#sessionRepository()Lorg/springframework/session/data/redis/RedisIndexedSessionRepository;
-#springSessionRedisMessageListenerContainer(Lorg/springframework/session/data/redis/RedisIndexedSessionRepository;)Lorg/springframework/data/redis/listener/RedisMessageListenerContainer;
-#enableRedisKeyspaceNotificationsInitializer()Lorg/springframework/beans/factory/InitializingBean;
-#setMaxInactiveIntervalInSeconds(I)V
-#setRedisNamespace(Ljava/lang/String;)V
-#setRedisFlushMode(Lorg/springframework/session/data/redis/RedisFlushMode;)V[deprecated]
-#setFlushMode(Lorg/springframework/session/FlushMode;)V
-#setSaveMode(Lorg/springframework/session/SaveMode;)V
-#setCleanupCron(Ljava/lang/String;)V
-#setConfigureRedisAction(Lorg/springframework/session/data/redis/config/ConfigureRedisAction;)V
-#setRedisConnectionFactory(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
-#setDefaultRedisSerializer(Lorg/springframework/data/redis/serializer/RedisSerializer;)V
-#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
-#setIndexResolver(Lorg/springframework/session/IndexResolver;)V
-#setRedisTaskExecutor(Ljava/util/concurrent/Executor;)V
-#setRedisSubscriptionExecutor(Ljava/util/concurrent/Executor;)V
-#setSessionRepositoryCustomizer(Lorg/springframework/beans/factory/ObjectProvider;)V
-#setBeanClassLoader(Ljava/lang/ClassLoader;)V

+###org/springframework/session/data/redis/config/annotation/web/server/RedisWebSessionConfiguration
@2.0.0.RELEASE
+#<init>()V
+#sessionRepository()Lorg/springframework/session/data/redis/ReactiveRedisOperationsSessionRepository;
+#setMaxInactiveIntervalInSeconds(I)V
+#setRedisNamespace(Ljava/lang/String;)V
+#setRedisFlushMode(Lorg/springframework/session/data/redis/RedisFlushMode;)V
+#setRedisConnectionFactory(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
+#setEmbeddedValueResolver(Lorg/springframework/util/StringValueResolver;)V
+#setImportMetadata(Lorg/springframework/core/type/AnnotationMetadata;)V
@2.0.1.RELEASE
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
@2.1.0.RELEASE
+#setDefaultRedisSerializer(Lorg/springframework/data/redis/serializer/RedisSerializer;)V
@2.2.0.RELEASE
+#sessionRepository()Lorg/springframework/session/data/redis/ReactiveRedisSessionRepository;
*#setRedisFlushMode(Lorg/springframework/session/data/redis/RedisFlushMode;)V[deprecated]
+#setSaveMode(Lorg/springframework/session/SaveMode;)V
+#setSessionRepositoryCustomizer(Lorg/springframework/beans/factory/ObjectProvider;)V
-#sessionRepository()Lorg/springframework/session/data/redis/ReactiveRedisOperationsSessionRepository;
@3.0.0
+#setMaxInactiveInterval(Ljava/time/Duration;)V
*#setMaxInactiveIntervalInSeconds(I)V[deprecated]
-#setRedisFlushMode(Lorg/springframework/session/data/redis/RedisFlushMode;)V[deprecated]

+###org/springframework/session/data/redis/config/annotation/web/server/EnableRedisWebSession
@2.0.0.RELEASE
+#maxInactiveIntervalInSeconds()I
+#redisNamespace()Ljava/lang/String;
+#redisFlushMode()Lorg/springframework/session/data/redis/RedisFlushMode;
@2.2.0.RELEASE
*#redisFlushMode()Lorg/springframework/session/data/redis/RedisFlushMode;[deprecated]
+#saveMode()Lorg/springframework/session/SaveMode;
@3.0.0
-#redisFlushMode()Lorg/springframework/session/data/redis/RedisFlushMode;[deprecated]

+###org/springframework/session/data/redis/config/annotation/SpringSessionRedisConnectionFactory
@2.0.0.RELEASE

+###org/springframework/session/data/redis/config/ConfigureNotifyKeyspaceEventsAction
@2.0.0.RELEASE
+#<init>()V
+#configure(Lorg/springframework/data/redis/connection/RedisConnection;)V

+###org/springframework/session/data/redis/config/ConfigureRedisAction
@2.0.0.RELEASE
+#configure(Lorg/springframework/data/redis/connection/RedisConnection;)V

+###org/springframework/session/data/redis/RedisFlushMode
@2.0.0.RELEASE
+#values()[Lorg/springframework/session/data/redis/RedisFlushMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/session/data/redis/RedisFlushMode;
@2.2.0.RELEASE
+#getFlushMode()Lorg/springframework/session/FlushMode;
@3.0.0
-###org/springframework/session/data/redis/RedisFlushMode

+###org/springframework/session/data/redis/RedisIndexedSessionRepository
@2.2.0.RELEASE
+#<init>(Lorg/springframework/data/redis/core/RedisOperations;)V
+#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
+#setDefaultMaxInactiveInterval(I)V
+#setIndexResolver(Lorg/springframework/session/IndexResolver;)V
+#setDefaultSerializer(Lorg/springframework/data/redis/serializer/RedisSerializer;)V
+#setFlushMode(Lorg/springframework/session/FlushMode;)V
+#setSaveMode(Lorg/springframework/session/SaveMode;)V
+#setDatabase(I)V
+#getSessionRedisOperations()Lorg/springframework/data/redis/core/RedisOperations;
+#save(Lorg/springframework/session/data/redis/RedisIndexedSessionRepository$RedisSession;)V
+#cleanupExpiredSessions()V
+#findById(Ljava/lang/String;)Lorg/springframework/session/data/redis/RedisIndexedSessionRepository$RedisSession;
+#findByIndexNameAndIndexValue(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
+#deleteById(Ljava/lang/String;)V
+#createSession()Lorg/springframework/session/data/redis/RedisIndexedSessionRepository$RedisSession;
+#onMessage(Lorg/springframework/data/redis/connection/Message;[B)V
+#setRedisKeyNamespace(Ljava/lang/String;)V
+#getSessionCreatedChannelPrefix()Ljava/lang/String;
+#getSessionDeletedChannel()Ljava/lang/String;
+#getSessionExpiredChannel()Ljava/lang/String;
+#findById(Ljava/lang/String;)Lorg/springframework/session/Session;
+#save(Lorg/springframework/session/Session;)V
+#createSession()Lorg/springframework/session/Session;
@3.0.0
+#afterPropertiesSet()V
+#destroy()V
+#setDefaultMaxInactiveInterval(Ljava/time/Duration;)V
*#setDefaultMaxInactiveInterval(I)V[deprecated]
+#setCleanupCron(Ljava/lang/String;)V
+#cleanUpExpiredSessions()V
-#cleanupExpiredSessions()V

+###org/springframework/session/data/redis/RedisSessionRepository
@2.2.0.RELEASE
+#<init>(Lorg/springframework/data/redis/core/RedisOperations;)V
+#setDefaultMaxInactiveInterval(Ljava/time/Duration;)V
+#setKeyNamespace(Ljava/lang/String;)V
+#setFlushMode(Lorg/springframework/session/FlushMode;)V
+#setSaveMode(Lorg/springframework/session/SaveMode;)V
+#createSession()Lorg/springframework/session/data/redis/RedisSessionRepository$RedisSession;
+#save(Lorg/springframework/session/data/redis/RedisSessionRepository$RedisSession;)V
+#findById(Ljava/lang/String;)Lorg/springframework/session/data/redis/RedisSessionRepository$RedisSession;
+#deleteById(Ljava/lang/String;)V
+#getSessionRedisOperations()Lorg/springframework/data/redis/core/RedisOperations;
+#findById(Ljava/lang/String;)Lorg/springframework/session/Session;
+#save(Lorg/springframework/session/Session;)V
+#createSession()Lorg/springframework/session/Session;
@2.5.0
*#setKeyNamespace(Ljava/lang/String;)V[deprecated]
+#setRedisKeyNamespace(Ljava/lang/String;)V
@3.0.0
-#setKeyNamespace(Ljava/lang/String;)V[deprecated]

+###org/springframework/session/data/redis/ReactiveRedisSessionRepository
@2.2.0.RELEASE
+#<init>(Lorg/springframework/data/redis/core/ReactiveRedisOperations;)V
+#setRedisKeyNamespace(Ljava/lang/String;)V
+#setDefaultMaxInactiveInterval(I)V
+#setSaveMode(Lorg/springframework/session/SaveMode;)V
+#getSessionRedisOperations()Lorg/springframework/data/redis/core/ReactiveRedisOperations;
+#createSession()Lreactor/core/publisher/Mono;
+#save(Lorg/springframework/session/data/redis/ReactiveRedisSessionRepository$RedisSession;)Lreactor/core/publisher/Mono;
+#findById(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#deleteById(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#save(Lorg/springframework/session/Session;)Lreactor/core/publisher/Mono;
@3.0.0
+#setDefaultMaxInactiveInterval(Ljava/time/Duration;)V
*#setDefaultMaxInactiveInterval(I)V[deprecated]

+###org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepository
@2.0.0.RELEASE
+#<init>(Lorg/springframework/data/redis/core/ReactiveRedisOperations;)V
+#setRedisKeyNamespace(Ljava/lang/String;)V
+#setDefaultMaxInactiveInterval(I)V
+#setRedisFlushMode(Lorg/springframework/session/data/redis/RedisFlushMode;)V
+#createSession()Lreactor/core/publisher/Mono;
+#save(Lorg/springframework/session/data/redis/ReactiveRedisOperationsSessionRepository$RedisSession;)Lreactor/core/publisher/Mono;
+#findById(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#deleteById(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#save(Lorg/springframework/session/Session;)Lreactor/core/publisher/Mono;
@2.1.0.RELEASE
+#getSessionRedisOperations()Lorg/springframework/data/redis/core/ReactiveRedisOperations;
@2.2.0.RELEASE
*#setRedisFlushMode(Lorg/springframework/session/data/redis/RedisFlushMode;)V[deprecated]
-#setRedisKeyNamespace(Ljava/lang/String;)V
-#setDefaultMaxInactiveInterval(I)V
-#getSessionRedisOperations()Lorg/springframework/data/redis/core/ReactiveRedisOperations;
-#createSession()Lreactor/core/publisher/Mono;
-#save(Lorg/springframework/session/data/redis/ReactiveRedisOperationsSessionRepository$RedisSession;)Lreactor/core/publisher/Mono;
-#findById(Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#deleteById(Ljava/lang/String;)Lreactor/core/publisher/Mono;
-#save(Lorg/springframework/session/Session;)Lreactor/core/publisher/Mono;
@3.0.0
-###org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepository

+###org/springframework/session/data/redis/RedisOperationsSessionRepository
@2.0.0.RELEASE
+#<init>(Lorg/springframework/data/redis/core/RedisOperations;)V
+#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
+#setDefaultMaxInactiveInterval(I)V
+#setDefaultSerializer(Lorg/springframework/data/redis/serializer/RedisSerializer;)V
+#setRedisFlushMode(Lorg/springframework/session/data/redis/RedisFlushMode;)V
+#getSessionRedisOperations()Lorg/springframework/data/redis/core/RedisOperations;
+#save(Lorg/springframework/session/data/redis/RedisOperationsSessionRepository$RedisSession;)V
+#cleanupExpiredSessions()V
+#findById(Ljava/lang/String;)Lorg/springframework/session/data/redis/RedisOperationsSessionRepository$RedisSession;
+#findByIndexNameAndIndexValue(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
+#deleteById(Ljava/lang/String;)V
+#createSession()Lorg/springframework/session/data/redis/RedisOperationsSessionRepository$RedisSession;
+#onMessage(Lorg/springframework/data/redis/connection/Message;[B)V
+#setRedisKeyNamespace(Ljava/lang/String;)V
+#getSessionCreatedChannelPrefix()Ljava/lang/String;
+#findById(Ljava/lang/String;)Lorg/springframework/session/Session;
+#save(Lorg/springframework/session/Session;)V
+#createSession()Lorg/springframework/session/Session;
@2.0.7.RELEASE
+#setDatabase(I)V
+#getSessionDeletedChannel()Ljava/lang/String;
+#getSessionExpiredChannel()Ljava/lang/String;
@2.2.0.RELEASE
*#setRedisFlushMode(Lorg/springframework/session/data/redis/RedisFlushMode;)V[deprecated]
-#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
-#setDefaultMaxInactiveInterval(I)V
-#setDefaultSerializer(Lorg/springframework/data/redis/serializer/RedisSerializer;)V
-#setDatabase(I)V
-#getSessionRedisOperations()Lorg/springframework/data/redis/core/RedisOperations;
-#save(Lorg/springframework/session/data/redis/RedisOperationsSessionRepository$RedisSession;)V
-#cleanupExpiredSessions()V
-#findById(Ljava/lang/String;)Lorg/springframework/session/data/redis/RedisOperationsSessionRepository$RedisSession;
-#findByIndexNameAndIndexValue(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
-#deleteById(Ljava/lang/String;)V
-#createSession()Lorg/springframework/session/data/redis/RedisOperationsSessionRepository$RedisSession;
-#onMessage(Lorg/springframework/data/redis/connection/Message;[B)V
-#setRedisKeyNamespace(Ljava/lang/String;)V
-#getSessionCreatedChannelPrefix()Ljava/lang/String;
-#getSessionDeletedChannel()Ljava/lang/String;
-#getSessionExpiredChannel()Ljava/lang/String;
-#findById(Ljava/lang/String;)Lorg/springframework/session/Session;
-#save(Lorg/springframework/session/Session;)V
-#createSession()Lorg/springframework/session/Session;
@3.0.0
-###org/springframework/session/data/redis/RedisOperationsSessionRepository

+###org/springframework/session/data/redis/config/annotation/web/http/EnableRedisIndexedHttpSession
@3.0.0
+#maxInactiveIntervalInSeconds()I
+#redisNamespace()Ljava/lang/String;
+#flushMode()Lorg/springframework/session/FlushMode;
+#saveMode()Lorg/springframework/session/SaveMode;
+#cleanupCron()Ljava/lang/String;

+###org/springframework/session/data/redis/config/annotation/web/http/RedisIndexedHttpSessionConfiguration
@3.0.0
+#<init>()V
+#sessionRepository()Lorg/springframework/session/data/redis/RedisIndexedSessionRepository;
+#springSessionRedisMessageListenerContainer(Lorg/springframework/session/data/redis/RedisIndexedSessionRepository;)Lorg/springframework/data/redis/listener/RedisMessageListenerContainer;
+#enableRedisKeyspaceNotificationsInitializer()Lorg/springframework/beans/factory/InitializingBean;
+#setCleanupCron(Ljava/lang/String;)V
+#setConfigureRedisAction(Lorg/springframework/session/data/redis/config/ConfigureRedisAction;)V
+#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
+#setIndexResolver(Lorg/springframework/session/IndexResolver;)V
+#setRedisTaskExecutor(Ljava/util/concurrent/Executor;)V
+#setRedisSubscriptionExecutor(Ljava/util/concurrent/Executor;)V
+#setEmbeddedValueResolver(Lorg/springframework/util/StringValueResolver;)V
+#setImportMetadata(Lorg/springframework/core/type/AnnotationMetadata;)V
+#sessionRepository()Lorg/springframework/session/SessionRepository;

+###org/springframework/session/data/redis/config/annotation/web/http/AbstractRedisHttpSessionConfiguration
@3.0.0
+#<init>()V
+#sessionRepository()Lorg/springframework/session/SessionRepository;
+#setMaxInactiveInterval(Ljava/time/Duration;)V
+#setMaxInactiveIntervalInSeconds(I)V[deprecated]
+#setRedisNamespace(Ljava/lang/String;)V
+#setFlushMode(Lorg/springframework/session/FlushMode;)V
+#setSaveMode(Lorg/springframework/session/SaveMode;)V
+#setRedisConnectionFactory(Lorg/springframework/beans/factory/ObjectProvider;Lorg/springframework/beans/factory/ObjectProvider;)V
+#setDefaultRedisSerializer(Lorg/springframework/data/redis/serializer/RedisSerializer;)V
+#setSessionRepositoryCustomizer(Lorg/springframework/beans/factory/ObjectProvider;)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
