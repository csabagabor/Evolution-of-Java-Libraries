
+###io/micrometer/core/instrument/MeterRegistry$More
@0.10.0.RELEASE
+#longTaskTimer(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/LongTaskTimer;
+#longTaskTimer(Ljava/lang/String;[Ljava/lang/String;)Lio/micrometer/core/instrument/LongTaskTimer;
+#longTaskTimerBuilder(Ljava/lang/String;)Lio/micrometer/core/instrument/LongTaskTimer$Builder;
+#counter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
+#counter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Number;)Ljava/lang/Number;
@0.11.0.RELEASE
+#longTaskTimer(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/LongTaskTimer;
+#counter(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Meter;
+#counter(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Number;)Lio/micrometer/core/instrument/Meter;
+#timeGauge(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/concurrent/TimeUnit;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge;
-#longTaskTimer(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/LongTaskTimer;
-#longTaskTimer(Ljava/lang/String;[Ljava/lang/String;)Lio/micrometer/core/instrument/LongTaskTimer;
-#longTaskTimerBuilder(Ljava/lang/String;)Lio/micrometer/core/instrument/LongTaskTimer$Builder;
-#counter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
-#counter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Number;)Ljava/lang/Number;
@1.0.0-rc.2
+#counter(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/FunctionCounter;
+#timer(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/function/ToLongFunction;Ljava/util/function/ToDoubleFunction;Ljava/util/concurrent/TimeUnit;)Lio/micrometer/core/instrument/FunctionTimer;
-#counter(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Meter;
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;)V
+#longTaskTimer(Ljava/lang/String;[Ljava/lang/String;)Lio/micrometer/core/instrument/LongTaskTimer;
+#longTaskTimer(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/LongTaskTimer;
+#counter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/FunctionCounter;
+#counter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Number;)Lio/micrometer/core/instrument/FunctionCounter;
+#timer(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToLongFunction;Ljava/util/function/ToDoubleFunction;Ljava/util/concurrent/TimeUnit;)Lio/micrometer/core/instrument/FunctionTimer;
+#timeGauge(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/concurrent/TimeUnit;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/TimeGauge;
-#longTaskTimer(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/LongTaskTimer;
-#counter(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/FunctionCounter;
-#timer(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/function/ToLongFunction;Ljava/util/function/ToDoubleFunction;Ljava/util/concurrent/TimeUnit;)Lio/micrometer/core/instrument/FunctionTimer;
-#counter(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Number;)Lio/micrometer/core/instrument/Meter;
-#timeGauge(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/concurrent/TimeUnit;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge;

+###io/micrometer/core/instrument/Clock
@0.6.3.RELEASE
+#monotonicTime()J
@0.7.0.RELEASE
+#wallTime()J

+###io/micrometer/core/instrument/MockClock
@1.0.0-rc.3
+#<init>()V
+#monotonicTime()J
+#wallTime()J
+#clock(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/MockClock;
+#add(JLjava/util/concurrent/TimeUnit;)J
+#add(Ljava/time/Duration;)J
+#addSeconds(J)J

+###io/micrometer/core/instrument/AbstractTimer
@0.7.0.RELEASE
+#recordCallable(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#record(Ljava/util/function/Supplier;)Ljava/lang/Object;
+#wrap(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;
+#record(Ljava/lang/Runnable;)V
+#getName()Ljava/lang/String;
+#getTags()Ljava/lang/Iterable;
@0.9.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.10.0.RELEASE
-#getName()Ljava/lang/String;
-#getTags()Ljava/lang/Iterable;
@1.0.0-rc.3
+#record(JLjava/util/concurrent/TimeUnit;)V
+#percentile(DLjava/util/concurrent/TimeUnit;)D
+#histogramCountAtValue(J)D
+#statsConfig()Lio/micrometer/core/instrument/histogram/HistogramConfig;
@1.0.0-rc.4
+#takeSnapshot(Z)Lio/micrometer/core/instrument/HistogramSnapshot;
-#wrap(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;
@1.0.0-rc.6
+#baseTimeUnit()Ljava/util/concurrent/TimeUnit;
@1.0.0
+#takeSnapshot(Z)Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
+#statsConfig()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
+#close()V
-#takeSnapshot(Z)Lio/micrometer/core/instrument/HistogramSnapshot;
-#statsConfig()Lio/micrometer/core/instrument/histogram/HistogramConfig;
@1.0.3
+#takeSnapshot()Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
-#percentile(DLjava/util/concurrent/TimeUnit;)D
-#histogramCountAtValue(J)D
-#takeSnapshot(Z)Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
-#statsConfig()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
@1.7.10
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@1.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.8.4
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@1.10.0
+#record(Ljava/util/function/BooleanSupplier;)Z
+#record(Ljava/util/function/IntSupplier;)I
+#record(Ljava/util/function/LongSupplier;)J
+#record(Ljava/util/function/DoubleSupplier;)D

+###io/micrometer/core/instrument/FunctionCounter$Builder
@1.0.0-rc.3
+#tags([Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
+#tags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
+#description(Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
+#baseUnit(Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
+#register(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/FunctionCounter;
@1.0.0-rc.6
+#tag(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionCounter$Builder;

+###io/micrometer/core/instrument/noop/NoopFunctionTimer
@1.0.0-rc.2
+#count()J
+#totalTime(Ljava/util/concurrent/TimeUnit;)D
+#baseTimeUnit()Ljava/util/concurrent/TimeUnit;
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/Meter$Id;)V
@1.0.0-rc.6
+#count()D
-#count()J

+###io/micrometer/core/instrument/noop/NoopTimeGauge
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/Meter$Id;)V
+#getBaseTimeUnit()Ljava/util/concurrent/TimeUnit;
+#value()D
@1.0.0-rc.4
+#baseTimeUnit()Ljava/util/concurrent/TimeUnit;
-#getBaseTimeUnit()Ljava/util/concurrent/TimeUnit;

+###io/micrometer/core/instrument/noop/NoopTimer
@0.10.0.RELEASE
+#record(JLjava/util/concurrent/TimeUnit;)V
+#record(Ljava/util/function/Supplier;)Ljava/lang/Object;
+#recordCallable(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#record(Ljava/lang/Runnable;)V
+#wrap(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;
+#count()J
+#totalTime(Ljava/util/concurrent/TimeUnit;)D
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/Meter$Id;)V
+#max(Ljava/util/concurrent/TimeUnit;)D
+#percentile(DLjava/util/concurrent/TimeUnit;)D
+#histogramCountAtValue(J)D
@1.0.0-rc.4
+#takeSnapshot(Z)Lio/micrometer/core/instrument/HistogramSnapshot;
-#wrap(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;
@1.0.0-rc.6
+#baseTimeUnit()Ljava/util/concurrent/TimeUnit;
@1.0.0
+#takeSnapshot(Z)Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
-#takeSnapshot(Z)Lio/micrometer/core/instrument/HistogramSnapshot;
@1.0.3
+#takeSnapshot()Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
-#percentile(DLjava/util/concurrent/TimeUnit;)D
-#histogramCountAtValue(J)D
-#takeSnapshot(Z)Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
@1.10.0
+#record(Ljava/util/function/BooleanSupplier;)Z
+#record(Ljava/util/function/IntSupplier;)I
+#record(Ljava/util/function/LongSupplier;)J
+#record(Ljava/util/function/DoubleSupplier;)D

+###io/micrometer/core/instrument/noop/NoopLongTaskTimer
@0.10.0.RELEASE
+#start()J
+#stop(J)J
+#duration(J)J
+#duration()J
+#activeTasks()I
@0.11.0.RELEASE
+#duration(JLjava/util/concurrent/TimeUnit;)D
+#duration(Ljava/util/concurrent/TimeUnit;)D
-#duration(J)J
-#duration()J
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/Meter$Id;)V
@1.0.0-rc.8
+#start()Lio/micrometer/core/instrument/LongTaskTimer$Sample;
-#start()J
@1.5.0
+#max(Ljava/util/concurrent/TimeUnit;)D
+#takeSnapshot()Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
+#baseTimeUnit()Ljava/util/concurrent/TimeUnit;
-#stop(J)J
-#duration(JLjava/util/concurrent/TimeUnit;)D

+###io/micrometer/core/instrument/noop/NoopFunctionCounter
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/Meter$Id;)V
+#count()D

+###io/micrometer/core/instrument/noop/NoopMeter
@0.10.0.RELEASE
+#<init>()V
+#getName()Ljava/lang/String;
+#getTags()Ljava/lang/Iterable;
+#getDescription()Ljava/lang/String;
+#measure()Ljava/util/List;
+#measure()Ljava/lang/Iterable;
@0.11.0.RELEASE
+#getId()Lio/micrometer/core/instrument/Meter$Id;
-#getName()Ljava/lang/String;
-#getTags()Ljava/lang/Iterable;
-#getDescription()Ljava/lang/String;
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/Meter$Id;)V
-#<init>()V
-#getId()Lio/micrometer/core/instrument/Meter$Id;

+###io/micrometer/core/instrument/noop/NoopCounter
@0.10.0.RELEASE
+#increment(D)V
+#count()D
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/Meter$Id;)V

+###io/micrometer/core/instrument/noop/NoopDistributionSummary
@0.10.0.RELEASE
+#record(D)V
+#count()J
+#totalAmount()D
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/Meter$Id;)V
+#max()D
+#percentile(D)D
+#histogramCountAtValue(J)D
@1.0.0-rc.4
+#takeSnapshot(Z)Lio/micrometer/core/instrument/HistogramSnapshot;
@1.0.0
+#takeSnapshot(Z)Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
-#takeSnapshot(Z)Lio/micrometer/core/instrument/HistogramSnapshot;
@1.0.3
+#takeSnapshot()Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
-#percentile(D)D
-#histogramCountAtValue(J)D
-#takeSnapshot(Z)Lio/micrometer/core/instrument/distribution/HistogramSnapshot;

+###io/micrometer/core/instrument/noop/NoopGauge
@0.10.0.RELEASE
+#value()D
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/Meter$Id;)V

+###io/micrometer/core/instrument/LongTaskTimer$Sample
@1.0.0-rc.8
+#<init>(Lio/micrometer/core/instrument/LongTaskTimer;J)V
+#stop()J
+#duration(Ljava/util/concurrent/TimeUnit;)D
@1.5.0
+#<init>()V
-#<init>(Lio/micrometer/core/instrument/LongTaskTimer;J)V

+###io/micrometer/core/instrument/AbstractDistributionSummary
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/histogram/HistogramConfig;)V
+#record(D)V
+#percentile(D)D
+#histogramCountAtValue(J)D
@1.0.0-rc.4
+#takeSnapshot(Z)Lio/micrometer/core/instrument/HistogramSnapshot;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#statsConfig()Lio/micrometer/core/instrument/histogram/HistogramConfig;
-#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/histogram/HistogramConfig;)V
@1.0.0
+#takeSnapshot(Z)Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
+#statsConfig()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
-#takeSnapshot(Z)Lio/micrometer/core/instrument/HistogramSnapshot;
-#statsConfig()Lio/micrometer/core/instrument/histogram/HistogramConfig;
@1.0.3
+#takeSnapshot()Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
-#percentile(D)D
-#histogramCountAtValue(J)D
-#takeSnapshot(Z)Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
-#statsConfig()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
@1.7.10
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@1.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.8.4
-#equals(Ljava/lang/Object;)Z
-#hashCode()I

+###io/micrometer/core/instrument/util/MeterPartition
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;I)V
+#get(I)Ljava/util/List;
+#size()I
+#isEmpty()Z
+#partition(Lio/micrometer/core/instrument/MeterRegistry;I)Ljava/util/List;
+#get(I)Ljava/lang/Object;
@1.2.2
-#get(I)Ljava/util/List;
-#size()I
-#isEmpty()Z
-#get(I)Ljava/lang/Object;
@1.8.0
+#<init>(Ljava/util/List;I)V

+###io/micrometer/core/instrument/util/HierarchicalNameMapper
@0.8.0.RELEASE
+#<init>()V
+#setTagSeparator(Ljava/lang/String;)Lio/micrometer/core/instrument/util/HierarchicalNameMapper;
+#setValueSeparator(Ljava/lang/String;)Lio/micrometer/core/instrument/util/HierarchicalNameMapper;
+#setTagComparator(Ljava/util/Comparator;)Lio/micrometer/core/instrument/util/HierarchicalNameMapper;
+#toHierarchicalName(Ljava/lang/String;Ljava/util/Collection;)Ljava/lang/String;
@0.10.0.RELEASE
+#toHierarchicalName(Ljava/lang/String;Ljava/lang/Iterable;)Ljava/lang/String;
-#<init>()V
-#setTagSeparator(Ljava/lang/String;)Lio/micrometer/core/instrument/util/HierarchicalNameMapper;
-#setValueSeparator(Ljava/lang/String;)Lio/micrometer/core/instrument/util/HierarchicalNameMapper;
-#setTagComparator(Ljava/util/Comparator;)Lio/micrometer/core/instrument/util/HierarchicalNameMapper;
-#toHierarchicalName(Ljava/lang/String;Ljava/util/Collection;)Ljava/lang/String;
@0.11.0.RELEASE
+#toHierarchicalName(Lio/micrometer/core/instrument/Meter$Id;)Ljava/lang/String;
-#toHierarchicalName(Ljava/lang/String;Ljava/lang/Iterable;)Ljava/lang/String;
@0.12.0.RELEASE
+#toHierarchicalName(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/NamingConvention;)Ljava/lang/String;
-#toHierarchicalName(Lio/micrometer/core/instrument/Meter$Id;)Ljava/lang/String;
@1.0.0-rc.4
+#toHierarchicalName(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/config/NamingConvention;)Ljava/lang/String;
-#toHierarchicalName(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/NamingConvention;)Ljava/lang/String;

+###io/micrometer/core/instrument/util/MathUtils
@1.0.0-rc.6
+#divideWithCeilingRoundingMode(II)I
@1.3.3
-###io/micrometer/core/instrument/util/MathUtils

+###io/micrometer/core/instrument/util/DoubleFormat
@1.0.0-rc.3
+#<init>()V
+#toString(D)Ljava/lang/String;
@1.0.0
+#decimalOrNan(D)Ljava/lang/String;
+#decimalOrWhole(D)Ljava/lang/String;
-#toString(D)Ljava/lang/String;
@1.0.11
*#decimalOrWhole(D)Ljava/lang/String;[deprecated]
+#wholeOrDecimal(D)Ljava/lang/String;
@1.1.0
+#decimal(D)Ljava/lang/String;
-#wholeOrDecimal(D)Ljava/lang/String;
@1.1.5
*#decimalOrWhole(D)Ljava/lang/String;[deprecated]
+#wholeOrDecimal(D)Ljava/lang/String;
@1.2.0
-#<init>()V

+###io/micrometer/core/instrument/util/TimeUtils
@0.7.0.RELEASE
+#<init>()V
+#convert(DLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;)D
+#nanosToUnit(DLjava/util/concurrent/TimeUnit;)D
+#microsToUnit(DLjava/util/concurrent/TimeUnit;)D
+#millisToUnit(DLjava/util/concurrent/TimeUnit;)D
+#secondsToUnit(DLjava/util/concurrent/TimeUnit;)D
+#minutesToUnit(DLjava/util/concurrent/TimeUnit;)D
+#hoursToUnit(DLjava/util/concurrent/TimeUnit;)D
+#daysToUnit(DLjava/util/concurrent/TimeUnit;)D
@0.10.0.RELEASE
-#<init>()V
@1.0.0-rc.4
+#simpleParse(Ljava/lang/String;)Ljava/time/Duration;
@1.1.0
+#format(Ljava/time/Duration;)Ljava/lang/String;
@1.5.0
*#simpleParse(Ljava/lang/String;)Ljava/time/Duration;[deprecated]

+###io/micrometer/core/instrument/util/StringEscapeUtils
@1.0.4
+#<init>()V
+#escapeJson(Ljava/lang/String;)Ljava/lang/String;
@1.1.0
-#<init>()V

+###io/micrometer/core/instrument/util/MeterEquivalence
@0.10.0.RELEASE
+#equals(Lio/micrometer/core/instrument/Meter;Ljava/lang/Object;)Z
+#hashCode(Lio/micrometer/core/instrument/Meter;)I

+###io/micrometer/core/instrument/MeterRegistry$Config
@0.10.0.RELEASE
+#commonTags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/MeterRegistry$Config;
+#commonTags([Ljava/lang/String;)Lio/micrometer/core/instrument/MeterRegistry$Config;
+#namingConvention(Lio/micrometer/core/instrument/NamingConvention;)Lio/micrometer/core/instrument/MeterRegistry$Config;
+#clock()Lio/micrometer/core/instrument/Clock;
@0.11.0.RELEASE
+#commonTags()Ljava/lang/Iterable;
+#namingConvention()Lio/micrometer/core/instrument/NamingConvention;
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;)V
+#meterFilter(Lio/micrometer/core/instrument/MeterFilter;)Lio/micrometer/core/instrument/MeterRegistry$Config;
-#commonTags()Ljava/lang/Iterable;
@1.0.0-rc.4
+#meterFilter(Lio/micrometer/core/instrument/config/MeterFilter;)Lio/micrometer/core/instrument/MeterRegistry$Config;
+#namingConvention(Lio/micrometer/core/instrument/config/NamingConvention;)Lio/micrometer/core/instrument/MeterRegistry$Config;
+#namingConvention()Lio/micrometer/core/instrument/config/NamingConvention;
-#meterFilter(Lio/micrometer/core/instrument/MeterFilter;)Lio/micrometer/core/instrument/MeterRegistry$Config;
-#namingConvention(Lio/micrometer/core/instrument/NamingConvention;)Lio/micrometer/core/instrument/MeterRegistry$Config;
-#namingConvention()Lio/micrometer/core/instrument/NamingConvention;
@1.0.0-rc.6
+#onMeterAdded(Ljava/util/function/Consumer;)Lio/micrometer/core/instrument/MeterRegistry$Config;
+#pauseDetector(Lio/micrometer/core/instrument/histogram/pause/PauseDetector;)Lio/micrometer/core/instrument/MeterRegistry$Config;
+#pauseDetector()Lio/micrometer/core/instrument/histogram/pause/PauseDetector;
@1.0.0
+#pauseDetector(Lio/micrometer/core/instrument/distribution/pause/PauseDetector;)Lio/micrometer/core/instrument/MeterRegistry$Config;
+#pauseDetector()Lio/micrometer/core/instrument/distribution/pause/PauseDetector;
-#pauseDetector(Lio/micrometer/core/instrument/histogram/pause/PauseDetector;)Lio/micrometer/core/instrument/MeterRegistry$Config;
-#pauseDetector()Lio/micrometer/core/instrument/histogram/pause/PauseDetector;
@1.1.0
+#onMeterRemoved(Ljava/util/function/Consumer;)Lio/micrometer/core/instrument/MeterRegistry$Config;
@1.6.0
+#onMeterRegistrationFailed(Ljava/util/function/BiConsumer;)Lio/micrometer/core/instrument/MeterRegistry$Config;
@1.10.0
+#withHighCardinalityTagsDetector()Lio/micrometer/core/instrument/MeterRegistry$Config;
+#withHighCardinalityTagsDetector(JLjava/time/Duration;)Lio/micrometer/core/instrument/MeterRegistry$Config;
+#highCardinalityTagsDetector()Lio/micrometer/core/instrument/HighCardinalityTagsDetector;

+###io/micrometer/core/instrument/binder/cache/GuavaCacheMetrics
@1.0.0-rc.2
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/google/common/cache/Cache;Ljava/lang/String;[Ljava/lang/String;)Lcom/google/common/cache/Cache;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/google/common/cache/Cache;Ljava/lang/String;Ljava/lang/Iterable;)Lcom/google/common/cache/Cache;
+#<init>(Lcom/google/common/cache/Cache;Ljava/lang/Iterable;Ljava/lang/String;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.0.0-rc.8
+#<init>(Lcom/google/common/cache/Cache;Ljava/lang/String;Ljava/lang/Iterable;)V
-#<init>(Lcom/google/common/cache/Cache;Ljava/lang/Iterable;Ljava/lang/String;)V
@1.0.0
-#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V

+###io/micrometer/core/instrument/binder/cache/EhCache2Metrics
@1.0.0-rc.2
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lnet/sf/ehcache/Ehcache;Ljava/lang/String;[Ljava/lang/String;)Lnet/sf/ehcache/Ehcache;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lnet/sf/ehcache/Ehcache;Ljava/lang/String;Ljava/lang/Iterable;)Lnet/sf/ehcache/Ehcache;
+#<init>(Lnet/sf/ehcache/Ehcache;Ljava/lang/String;Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.0.0
+#<init>(Lnet/sf/ehcache/Ehcache;Ljava/lang/Iterable;)V
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lnet/sf/ehcache/Ehcache;[Ljava/lang/String;)Lnet/sf/ehcache/Ehcache;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lnet/sf/ehcache/Ehcache;Ljava/lang/Iterable;)Lnet/sf/ehcache/Ehcache;
-#<init>(Lnet/sf/ehcache/Ehcache;Ljava/lang/String;Ljava/lang/Iterable;)V
-#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lnet/sf/ehcache/Ehcache;Ljava/lang/String;[Ljava/lang/String;)Lnet/sf/ehcache/Ehcache;
-#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lnet/sf/ehcache/Ehcache;Ljava/lang/String;Ljava/lang/Iterable;)Lnet/sf/ehcache/Ehcache;
-#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V

+###io/micrometer/core/instrument/binder/cache/CacheMeterBinder
@1.0.0
+#<init>(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V

+###io/micrometer/core/instrument/binder/cache/HazelcastCacheMetrics
@1.0.0-rc.2
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/hazelcast/core/IMap;Ljava/lang/String;[Ljava/lang/String;)Lcom/hazelcast/core/IMap;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/hazelcast/core/IMap;Ljava/lang/String;Ljava/lang/Iterable;)Lcom/hazelcast/core/IMap;
+#<init>(Lcom/hazelcast/core/IMap;Ljava/lang/String;Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.0.0
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/hazelcast/core/IMap;[Ljava/lang/String;)Lcom/hazelcast/core/IMap;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/hazelcast/core/IMap;Ljava/lang/Iterable;)Lcom/hazelcast/core/IMap;
+#<init>(Lcom/hazelcast/core/IMap;Ljava/lang/Iterable;)V
-#<init>(Lcom/hazelcast/core/IMap;Ljava/lang/String;Ljava/lang/Iterable;)V
-#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/hazelcast/core/IMap;Ljava/lang/String;[Ljava/lang/String;)Lcom/hazelcast/core/IMap;
-#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/hazelcast/core/IMap;Ljava/lang/String;Ljava/lang/Iterable;)Lcom/hazelcast/core/IMap;
-#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.5.0
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/lang/Object;
+#<init>(Ljava/lang/Object;Ljava/lang/Iterable;)V
-#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/hazelcast/core/IMap;[Ljava/lang/String;)Lcom/hazelcast/core/IMap;
-#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/hazelcast/core/IMap;Ljava/lang/Iterable;)Lcom/hazelcast/core/IMap;
-#<init>(Lcom/hazelcast/core/IMap;Ljava/lang/Iterable;)V

+###io/micrometer/core/instrument/binder/cache/CaffeineCacheMetrics
@1.0.0-rc.2
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/github/benmanes/caffeine/cache/Cache;Ljava/lang/String;[Ljava/lang/String;)Lcom/github/benmanes/caffeine/cache/Cache;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/github/benmanes/caffeine/cache/Cache;Ljava/lang/String;Ljava/lang/Iterable;)Lcom/github/benmanes/caffeine/cache/Cache;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/github/benmanes/caffeine/cache/AsyncLoadingCache;Ljava/lang/String;[Ljava/lang/String;)Lcom/github/benmanes/caffeine/cache/AsyncLoadingCache;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/github/benmanes/caffeine/cache/AsyncLoadingCache;Ljava/lang/String;Ljava/lang/Iterable;)Lcom/github/benmanes/caffeine/cache/AsyncLoadingCache;
+#<init>(Lcom/github/benmanes/caffeine/cache/Cache;Ljava/lang/Iterable;Ljava/lang/String;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.0.0-rc.6
+#<init>(Lcom/github/benmanes/caffeine/cache/Cache;Ljava/lang/String;Ljava/lang/Iterable;)V
-#<init>(Lcom/github/benmanes/caffeine/cache/Cache;Ljava/lang/Iterable;Ljava/lang/String;)V
@1.0.0
-#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.2.0
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/github/benmanes/caffeine/cache/AsyncCache;Ljava/lang/String;[Ljava/lang/String;)Lcom/github/benmanes/caffeine/cache/AsyncCache;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/github/benmanes/caffeine/cache/AsyncCache;Ljava/lang/String;Ljava/lang/Iterable;)Lcom/github/benmanes/caffeine/cache/AsyncCache;
-#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/github/benmanes/caffeine/cache/AsyncLoadingCache;Ljava/lang/String;[Ljava/lang/String;)Lcom/github/benmanes/caffeine/cache/AsyncLoadingCache;
-#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/github/benmanes/caffeine/cache/AsyncLoadingCache;Ljava/lang/String;Ljava/lang/Iterable;)Lcom/github/benmanes/caffeine/cache/AsyncLoadingCache;

+###io/micrometer/core/instrument/binder/cache/JCacheMetrics
@1.0.0-rc.2
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljavax/cache/Cache;Ljava/lang/String;[Ljava/lang/String;)Ljavax/cache/Cache;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljavax/cache/Cache;Ljava/lang/String;Ljava/lang/Iterable;)Ljavax/cache/Cache;
+#<init>(Ljavax/cache/Cache;Ljava/lang/String;Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.0.0
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljavax/cache/Cache;[Ljava/lang/String;)Ljavax/cache/Cache;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljavax/cache/Cache;Ljava/lang/Iterable;)Ljavax/cache/Cache;
+#<init>(Ljavax/cache/Cache;Ljava/lang/Iterable;)V
-#<init>(Ljavax/cache/Cache;Ljava/lang/String;Ljava/lang/Iterable;)V
-#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljavax/cache/Cache;Ljava/lang/String;[Ljava/lang/String;)Ljavax/cache/Cache;
-#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljavax/cache/Cache;Ljava/lang/String;Ljava/lang/Iterable;)Ljavax/cache/Cache;
-#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V

+###io/micrometer/core/instrument/binder/tomcat/TomcatMetrics
@1.0.0-rc.6
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lorg/apache/catalina/Manager;[Ljava/lang/String;)V
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lorg/apache/catalina/Manager;Ljava/lang/Iterable;)V
+#getMBeanServer()Ljavax/management/MBeanServer;
+#<init>(Lorg/apache/catalina/Manager;Ljava/lang/Iterable;)V
+#<init>(Lorg/apache/catalina/Manager;Ljava/lang/Iterable;Ljavax/management/MBeanServer;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.0.11
+#setJmxDomain(Ljava/lang/String;)V
@1.1.0
-#setJmxDomain(Ljava/lang/String;)V
@1.1.5
+#setJmxDomain(Ljava/lang/String;)V
@1.1.10
+#close()V
@1.2.0
-#close()V
@1.3.3
+#close()V

+###io/micrometer/core/instrument/binder/jetty/JettyStatisticsMetrics
@1.0.0-rc.4
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lorg/eclipse/jetty/server/handler/StatisticsHandler;[Ljava/lang/String;)V
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lorg/eclipse/jetty/server/handler/StatisticsHandler;Ljava/lang/Iterable;)V
+#<init>(Lorg/eclipse/jetty/server/handler/StatisticsHandler;Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.3.4
-###io/micrometer/core/instrument/binder/jetty/JettyStatisticsMetrics

+###io/micrometer/core/instrument/binder/jvm/JvmGcMetrics
@1.0.0-rc.2
+#<init>()V
+#<init>(Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.0.11
+#close()V
@1.1.0
-#close()V
@1.1.4
+#close()V

+###io/micrometer/core/instrument/binder/jvm/ExecutorServiceMetrics
@1.0.0-rc.2
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/Executor;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/concurrent/Executor;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/Executor;Ljava/lang/String;[Lio/micrometer/core/instrument/Tag;)Ljava/util/concurrent/Executor;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/concurrent/ExecutorService;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;[Lio/micrometer/core/instrument/Tag;)Ljava/util/concurrent/ExecutorService;
+#<init>(Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.3.0
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/concurrent/ScheduledExecutorService;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/String;[Lio/micrometer/core/instrument/Tag;)Ljava/util/concurrent/ScheduledExecutorService;
@1.3.9
+#<init>(Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)V
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/Executor;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/concurrent/Executor;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/Executor;Ljava/lang/String;Ljava/lang/String;[Lio/micrometer/core/instrument/Tag;)Ljava/util/concurrent/Executor;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/concurrent/ExecutorService;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/lang/String;[Lio/micrometer/core/instrument/Tag;)Ljava/util/concurrent/ExecutorService;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/concurrent/ScheduledExecutorService;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/String;Ljava/lang/String;[Lio/micrometer/core/instrument/Tag;)Ljava/util/concurrent/ScheduledExecutorService;
@1.4.0
-#<init>(Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)V
-#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/Executor;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/concurrent/Executor;
-#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/Executor;Ljava/lang/String;Ljava/lang/String;[Lio/micrometer/core/instrument/Tag;)Ljava/util/concurrent/Executor;
-#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/concurrent/ExecutorService;
-#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/lang/String;[Lio/micrometer/core/instrument/Tag;)Ljava/util/concurrent/ExecutorService;
-#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/concurrent/ScheduledExecutorService;
-#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/String;Ljava/lang/String;[Lio/micrometer/core/instrument/Tag;)Ljava/util/concurrent/ScheduledExecutorService;
@1.5.0
+#<init>(Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)V
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/Executor;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/concurrent/Executor;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/Executor;Ljava/lang/String;Ljava/lang/String;[Lio/micrometer/core/instrument/Tag;)Ljava/util/concurrent/Executor;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/concurrent/ExecutorService;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/lang/String;[Lio/micrometer/core/instrument/Tag;)Ljava/util/concurrent/ExecutorService;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/concurrent/ScheduledExecutorService;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/String;Ljava/lang/String;[Lio/micrometer/core/instrument/Tag;)Ljava/util/concurrent/ScheduledExecutorService;
@1.6.0
+#disableIllegalReflectiveAccess()V

+###io/micrometer/core/instrument/binder/jvm/JvmThreadMetrics
@1.0.0-rc.2
+#<init>()V
+#<init>(Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V

+###io/micrometer/core/instrument/binder/jvm/ClassLoaderMetrics
@1.0.0-rc.2
+#<init>()V
+#<init>(Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V

+###io/micrometer/core/instrument/binder/jvm/JvmMemoryMetrics
@1.0.0-rc.2
+#<init>()V
+#<init>(Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V

+###io/micrometer/core/instrument/binder/jpa/HibernateMetrics
@1.0.0-rc.4
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljavax/persistence/EntityManagerFactory;Ljava/lang/String;[Ljava/lang/String;)V
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljavax/persistence/EntityManagerFactory;Ljava/lang/String;Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.0.0-rc.8
+#<init>(Ljavax/persistence/EntityManagerFactory;Ljava/lang/String;Ljava/lang/Iterable;)V
@1.1.2
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lorg/hibernate/SessionFactory;Ljava/lang/String;[Ljava/lang/String;)V
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lorg/hibernate/SessionFactory;Ljava/lang/String;Ljava/lang/Iterable;)V
*#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljavax/persistence/EntityManagerFactory;Ljava/lang/String;[Ljava/lang/String;)V[deprecated]
*#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljavax/persistence/EntityManagerFactory;Ljava/lang/String;Ljava/lang/Iterable;)V[deprecated]
+#<init>(Lorg/hibernate/SessionFactory;Ljava/lang/String;Ljava/lang/Iterable;)V
*#<init>(Ljavax/persistence/EntityManagerFactory;Ljava/lang/String;Ljava/lang/Iterable;)V[deprecated]

+###io/micrometer/core/instrument/binder/okhttp3/OkHttpMetricsEventListener
@1.0.0-rc.4
+#callStart(Lokhttp3/Call;)V
+#requestHeadersEnd(Lokhttp3/Call;Lokhttp3/Request;)V
+#callFailed(Lokhttp3/Call;Ljava/io/IOException;)V
+#responseHeadersEnd(Lokhttp3/Call;Lokhttp3/Response;)V
+#builder(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/String;)Lio/micrometer/core/instrument/binder/okhttp3/OkHttpMetricsEventListener$Builder;
@1.1.12
+#callEnd(Lokhttp3/Call;)V
@1.2.0
-#requestHeadersEnd(Lokhttp3/Call;Lokhttp3/Request;)V
-#callEnd(Lokhttp3/Call;)V
@1.3.7
+#callEnd(Lokhttp3/Call;)V
@1.4.0
-#callEnd(Lokhttp3/Call;)V
@1.4.1
+#callEnd(Lokhttp3/Call;)V

+###io/micrometer/core/instrument/binder/okhttp3/OkHttpMetricsEventListener$Builder
@1.0.0-rc.4
+#tags(Ljava/util/List;)Lio/micrometer/core/instrument/binder/okhttp3/OkHttpMetricsEventListener$Builder;
+#uriMapper(Ljava/util/function/Function;)Lio/micrometer/core/instrument/binder/okhttp3/OkHttpMetricsEventListener$Builder;
+#build()Lio/micrometer/core/instrument/binder/okhttp3/OkHttpMetricsEventListener;
@1.0.0-rc.8
+#tags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/binder/okhttp3/OkHttpMetricsEventListener$Builder;
-#tags(Ljava/util/List;)Lio/micrometer/core/instrument/binder/okhttp3/OkHttpMetricsEventListener$Builder;
@1.3.9
+#requestTagKeys([Ljava/lang/String;)Lio/micrometer/core/instrument/binder/okhttp3/OkHttpMetricsEventListener$Builder;
+#requestTagKeys(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/binder/okhttp3/OkHttpMetricsEventListener$Builder;
@1.4.0
-#requestTagKeys([Ljava/lang/String;)Lio/micrometer/core/instrument/binder/okhttp3/OkHttpMetricsEventListener$Builder;
-#requestTagKeys(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/binder/okhttp3/OkHttpMetricsEventListener$Builder;
@1.5.0
+#tag(Lio/micrometer/core/instrument/Tag;)Lio/micrometer/core/instrument/binder/okhttp3/OkHttpMetricsEventListener$Builder;
+#tag(Ljava/util/function/BiFunction;)Lio/micrometer/core/instrument/binder/okhttp3/OkHttpMetricsEventListener$Builder;
+#includeHostTag(Z)Lio/micrometer/core/instrument/binder/okhttp3/OkHttpMetricsEventListener$Builder;
@1.5.1
+#requestTagKeys([Ljava/lang/String;)Lio/micrometer/core/instrument/binder/okhttp3/OkHttpMetricsEventListener$Builder;
+#requestTagKeys(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/binder/okhttp3/OkHttpMetricsEventListener$Builder;

+###io/micrometer/core/instrument/binder/system/ProcessorMetrics
@1.0.0-rc.2
+#<init>()V
+#<init>(Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V

+###io/micrometer/core/instrument/binder/system/FileDescriptorMetrics
@1.0.0-rc.2
+#<init>()V
+#<init>(Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V

+###io/micrometer/core/instrument/binder/system/UptimeMetrics
@1.0.0-rc.2
+#<init>()V
+#<init>(Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V

+###io/micrometer/core/instrument/binder/db/DatabaseTableMetrics
@1.0.0-rc.2
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljavax/sql/DataSource;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljavax/sql/DataSource;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)V
+#<init>(Ljavax/sql/DataSource;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)V
+#<init>(Ljavax/sql/DataSource;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.0.0
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/String;Ljava/lang/String;Ljavax/sql/DataSource;[Ljava/lang/String;)V
-#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljavax/sql/DataSource;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V

+###io/micrometer/core/instrument/binder/hystrix/MicrometerMetricsPublisherCommand
@1.0.0-rc.4
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Lcom/netflix/hystrix/HystrixCommandKey;Lcom/netflix/hystrix/HystrixCommandGroupKey;Lcom/netflix/hystrix/HystrixCommandMetrics;Lcom/netflix/hystrix/HystrixCircuitBreaker;Lcom/netflix/hystrix/HystrixCommandProperties;)V
+#initialize()V
@1.1.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Lcom/netflix/hystrix/HystrixCommandKey;Lcom/netflix/hystrix/HystrixCommandGroupKey;Lcom/netflix/hystrix/HystrixCommandMetrics;Lcom/netflix/hystrix/HystrixCircuitBreaker;Lcom/netflix/hystrix/strategy/metrics/HystrixMetricsPublisherCommand;)V
-#<init>(Lio/micrometer/core/instrument/MeterRegistry;Lcom/netflix/hystrix/HystrixCommandKey;Lcom/netflix/hystrix/HystrixCommandGroupKey;Lcom/netflix/hystrix/HystrixCommandMetrics;Lcom/netflix/hystrix/HystrixCircuitBreaker;Lcom/netflix/hystrix/HystrixCommandProperties;)V

+###io/micrometer/core/instrument/binder/hystrix/HystrixMetricsBinder
@1.0.0-rc.5
+#<init>()V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V

+###io/micrometer/core/instrument/binder/hystrix/MicrometerMetricsPublisher
@1.0.0-rc.4
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;)V
+#getMetricsPublisherForCommand(Lcom/netflix/hystrix/HystrixCommandKey;Lcom/netflix/hystrix/HystrixCommandGroupKey;Lcom/netflix/hystrix/HystrixCommandMetrics;Lcom/netflix/hystrix/HystrixCircuitBreaker;Lcom/netflix/hystrix/HystrixCommandProperties;)Lcom/netflix/hystrix/strategy/metrics/HystrixMetricsPublisherCommand;
@1.1.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Lcom/netflix/hystrix/strategy/metrics/HystrixMetricsPublisher;)V
+#getMetricsPublisherForThreadPool(Lcom/netflix/hystrix/HystrixThreadPoolKey;Lcom/netflix/hystrix/HystrixThreadPoolMetrics;Lcom/netflix/hystrix/HystrixThreadPoolProperties;)Lcom/netflix/hystrix/strategy/metrics/HystrixMetricsPublisherThreadPool;
+#getMetricsPublisherForCollapser(Lcom/netflix/hystrix/HystrixCollapserKey;Lcom/netflix/hystrix/HystrixCollapserMetrics;Lcom/netflix/hystrix/HystrixCollapserProperties;)Lcom/netflix/hystrix/strategy/metrics/HystrixMetricsPublisherCollapser;
-#<init>(Lio/micrometer/core/instrument/MeterRegistry;)V

+###io/micrometer/core/instrument/binder/MeterBinder
@0.6.3.RELEASE
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V

+###io/micrometer/core/instrument/binder/logging/LogbackMetrics
@1.0.0-rc.2
+#<init>()V
+#<init>(Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.0.0
+#<init>(Ljava/lang/Iterable;Lch/qos/logback/classic/LoggerContext;)V
+#ignoreMetrics(Ljava/lang/Runnable;)V
+#close()V

+###io/micrometer/core/instrument/config/MeterFilter
@1.0.0-rc.4
+#accept(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/config/MeterFilterReply;
+#map(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Meter$Id;
+#configure(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/histogram/HistogramConfig;)Lio/micrometer/core/instrument/histogram/HistogramConfig;
+#commonTags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/config/MeterFilter;
+#ignoreTags([Ljava/lang/String;)Lio/micrometer/core/instrument/config/MeterFilter;
+#replaceTagValues(Ljava/lang/String;Ljava/util/function/Function;[Ljava/lang/String;)Lio/micrometer/core/instrument/config/MeterFilter;
+#accept(Ljava/util/function/Predicate;)Lio/micrometer/core/instrument/config/MeterFilter;
+#deny(Ljava/util/function/Predicate;)Lio/micrometer/core/instrument/config/MeterFilter;
+#denyNameStartsWith(Ljava/lang/String;)Lio/micrometer/core/instrument/config/MeterFilter;
@1.0.0-rc.6
+#maximumAllowableMetrics(I)Lio/micrometer/core/instrument/config/MeterFilter;
@1.0.0-rc.8
+#renameTag(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/config/MeterFilter;
+#accept()Lio/micrometer/core/instrument/config/MeterFilter;
+#deny()Lio/micrometer/core/instrument/config/MeterFilter;
+#maximumAllowableTags(Ljava/lang/String;Ljava/lang/String;ILio/micrometer/core/instrument/config/MeterFilter;)Lio/micrometer/core/instrument/config/MeterFilter;
@1.0.0
+#denyUnless(Ljava/util/function/Predicate;)Lio/micrometer/core/instrument/config/MeterFilter;
+#maxExpected(Ljava/lang/String;Ljava/time/Duration;)Lio/micrometer/core/instrument/config/MeterFilter;
+#maxExpected(Ljava/lang/String;J)Lio/micrometer/core/instrument/config/MeterFilter;
+#minExpected(Ljava/lang/String;Ljava/time/Duration;)Lio/micrometer/core/instrument/config/MeterFilter;
+#minExpected(Ljava/lang/String;J)Lio/micrometer/core/instrument/config/MeterFilter;
+#configure(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
-#configure(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/histogram/HistogramConfig;)Lio/micrometer/core/instrument/histogram/HistogramConfig;
@1.2.0
+#acceptNameStartsWith(Ljava/lang/String;)Lio/micrometer/core/instrument/config/MeterFilter;
@1.4.0
+#maxExpected(Ljava/lang/String;D)Lio/micrometer/core/instrument/config/MeterFilter;
+#minExpected(Ljava/lang/String;D)Lio/micrometer/core/instrument/config/MeterFilter;
@1.4.2
*#maxExpected(Ljava/lang/String;J)Lio/micrometer/core/instrument/config/MeterFilter;[deprecated]
*#minExpected(Ljava/lang/String;J)Lio/micrometer/core/instrument/config/MeterFilter;[deprecated]

+###io/micrometer/core/instrument/config/MissingRequiredConfigurationException
@1.0.0
+#<init>(Ljava/lang/String;)V

+###io/micrometer/core/instrument/config/MeterFilterReply
@1.0.0-rc.4
+#values()[Lio/micrometer/core/instrument/config/MeterFilterReply;
+#valueOf(Ljava/lang/String;)Lio/micrometer/core/instrument/config/MeterFilterReply;

+###io/micrometer/core/instrument/config/MeterRegistryConfig
@1.0.0-rc.4
+#prefix()Ljava/lang/String;
+#get(Ljava/lang/String;)Ljava/lang/String;
@1.5.0
+#validate()Lio/micrometer/core/instrument/config/validate/Validated;
+#requireValid()V

+###io/micrometer/core/instrument/config/NamingConvention
@1.0.0-rc.4
+#name(Ljava/lang/String;Lio/micrometer/core/instrument/Meter$Type;)Ljava/lang/String;
+#name(Ljava/lang/String;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/String;)Ljava/lang/String;
+#tagKey(Ljava/lang/String;)Ljava/lang/String;
+#tagValue(Ljava/lang/String;)Ljava/lang/String;

+###io/micrometer/core/instrument/config/InvalidConfigurationException
@1.0.0
+#<init>(Ljava/lang/String;)V

+###io/micrometer/core/instrument/Metrics$More
@1.0.6
+#<init>()V
+#longTaskTimer(Ljava/lang/String;[Ljava/lang/String;)Lio/micrometer/core/instrument/LongTaskTimer;
+#longTaskTimer(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/LongTaskTimer;
+#counter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/FunctionCounter;
+#counter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Number;)Lio/micrometer/core/instrument/FunctionCounter;
+#timeGauge(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/concurrent/TimeUnit;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/TimeGauge;
+#timer(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToLongFunction;Ljava/util/function/ToDoubleFunction;Ljava/util/concurrent/TimeUnit;)Lio/micrometer/core/instrument/FunctionTimer;

+###io/micrometer/core/instrument/Counter$Builder
@0.10.0.RELEASE
+#tags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Counter$Builder;
+#tags([Ljava/lang/String;)Lio/micrometer/core/instrument/Counter$Builder;
+#description(Ljava/lang/String;)Lio/micrometer/core/instrument/Counter$Builder;
+#create()Lio/micrometer/core/instrument/Counter;
@0.11.0.RELEASE
+#baseUnit(Ljava/lang/String;)Lio/micrometer/core/instrument/Counter$Builder;
+#register(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Counter;
-#create()Lio/micrometer/core/instrument/Counter;
@1.0.0-rc.6
+#tag(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Counter$Builder;

+###io/micrometer/core/instrument/ImmutableTag
@0.7.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getKey()Ljava/lang/String;
+#getValue()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###io/micrometer/core/instrument/Measurement
@0.6.3.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/List;D)V
+#getName()Ljava/lang/String;
+#getTags()Ljava/util/SortedSet;
+#getValue()D
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@0.10.0.RELEASE
+#<init>(Ljava/util/function/Supplier;Lio/micrometer/core/instrument/Statistic;)V
+#getValueFunction()Ljava/util/function/Supplier;
+#getStatistic()Lio/micrometer/core/instrument/Statistic;
-#<init>(Ljava/lang/String;Ljava/util/List;D)V
-#getName()Ljava/lang/String;
-#getTags()Ljava/util/SortedSet;
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@1.0.0-rc.6
-#getValueFunction()Ljava/util/function/Supplier;
@1.10.0
+#<init>(Ljava/util/function/DoubleSupplier;Lio/micrometer/core/instrument/Statistic;)V

+###io/micrometer/core/instrument/distribution/pause/ClockDriftPauseDetector
@1.0.0
+#<init>(Ljava/time/Duration;Ljava/time/Duration;)V
+#getSleepInterval()Ljava/time/Duration;
+#getPauseThreshold()Ljava/time/Duration;

+###io/micrometer/core/instrument/distribution/pause/PauseDetector
@1.0.0

+###io/micrometer/core/instrument/distribution/pause/NoPauseDetector
@1.0.0
+#<init>()V

+###io/micrometer/core/instrument/distribution/HistogramGauges
@1.0.3
+#registerWithCommonFormat(Lio/micrometer/core/instrument/Timer;Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/distribution/HistogramGauges;
+#registerWithCommonFormat(Lio/micrometer/core/instrument/DistributionSummary;Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/distribution/HistogramGauges;
+#register(Lio/micrometer/core/instrument/distribution/HistogramSupport;Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Lio/micrometer/core/instrument/distribution/HistogramGauges;
@1.5.0
+#registerWithCommonFormat(Lio/micrometer/core/instrument/LongTaskTimer;Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/distribution/HistogramGauges;

+###io/micrometer/core/instrument/distribution/Histogram
@1.0.3
+#recordLong(J)V
+#recordDouble(D)V
+#takeSnapshot(JDD)Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
+#close()V

+###io/micrometer/core/instrument/distribution/DistributionStatisticConfig
@1.0.0
+#<init>()V
+#builder()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
+#merge(Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
+#isPublishingHistogram()Z
+#getHistogramBuckets(Z)Ljava/util/NavigableSet;
+#isPercentileHistogram()Ljava/lang/Boolean;
+#getPercentiles()[D
+#getMinimumExpectedValue()Ljava/lang/Long;
+#getMaximumExpectedValue()Ljava/lang/Long;
+#getExpiry()Ljava/time/Duration;
+#getBufferLength()Ljava/lang/Integer;
+#getSlaBoundaries()[J
+#merge(Ljava/lang/Object;)Ljava/lang/Object;
@1.0.3
+#getPercentilePrecision()Ljava/lang/Integer;
+#isPublishingPercentiles()Z
@1.3.8
*#getMinimumExpectedValue()Ljava/lang/Long;[deprecated]
+#getMinimumExpectedValueAsDouble()Ljava/lang/Double;
*#getMaximumExpectedValue()Ljava/lang/Long;[deprecated]
+#getMaximumExpectedValueAsDouble()Ljava/lang/Double;
*#getSlaBoundaries()[J[deprecated]
+#getServiceLevelObjectiveBoundaries()[D
@1.4.0
+#getMinimumExpectedValue()Ljava/lang/Double;
+#getMaximumExpectedValue()Ljava/lang/Double;
+#getSlaBoundaries()[D
-#getMinimumExpectedValue()Ljava/lang/Long;[deprecated]
-#getMinimumExpectedValueAsDouble()Ljava/lang/Double;
-#getMaximumExpectedValue()Ljava/lang/Long;[deprecated]
-#getMaximumExpectedValueAsDouble()Ljava/lang/Double;
-#getSlaBoundaries()[J[deprecated]
-#getServiceLevelObjectiveBoundaries()[D
@1.4.2
*#getMinimumExpectedValue()Ljava/lang/Double;[deprecated]
+#getMinimumExpectedValueAsDouble()Ljava/lang/Double;
*#getMaximumExpectedValue()Ljava/lang/Double;[deprecated]
+#getMaximumExpectedValueAsDouble()Ljava/lang/Double;
*#getSlaBoundaries()[D[deprecated]
+#getServiceLevelObjectiveBoundaries()[D

+###io/micrometer/core/instrument/distribution/TimeWindowFixedBoundaryHistogram
@1.0.3
+#<init>(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Z)V
+#recordDouble(D)V
+#recordLong(J)V
@1.9.0
+#<init>(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;ZZ)V

+###io/micrometer/core/instrument/distribution/NoopHistogram
@1.0.3
+#recordLong(J)V
+#recordDouble(D)V
+#takeSnapshot(JDD)Lio/micrometer/core/instrument/distribution/HistogramSnapshot;

+###io/micrometer/core/instrument/distribution/HistogramSupport
@1.0.3
+#takeSnapshot()Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
+#takeSnapshot(Z)Lio/micrometer/core/instrument/distribution/HistogramSnapshot;[deprecated]
@1.0.7
+#getId()Lio/micrometer/core/instrument/Meter$Id;
@1.1.0
-#getId()Lio/micrometer/core/instrument/Meter$Id;

+###io/micrometer/core/instrument/distribution/HistogramSnapshot
@1.0.0
+#count()J
+#total()D
+#total(Ljava/util/concurrent/TimeUnit;)D
+#max()D
+#max(Ljava/util/concurrent/TimeUnit;)D
+#mean()D
+#mean(Ljava/util/concurrent/TimeUnit;)D
+#percentileValues()[Lio/micrometer/core/instrument/distribution/ValueAtPercentile;
+#histogramCounts()[Lio/micrometer/core/instrument/distribution/CountAtBucket;
+#toString()Ljava/lang/String;
+#of(JDD[Lio/micrometer/core/instrument/distribution/ValueAtPercentile;[Lio/micrometer/core/instrument/distribution/CountAtBucket;)Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
+#empty()Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
@1.0.3
+#<init>(JDD[Lio/micrometer/core/instrument/distribution/ValueAtPercentile;[Lio/micrometer/core/instrument/distribution/CountAtBucket;Ljava/util/function/BiConsumer;)V
+#empty(JDD)Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
+#outputSummary(Ljava/io/PrintStream;D)V
-#of(JDD[Lio/micrometer/core/instrument/distribution/ValueAtPercentile;[Lio/micrometer/core/instrument/distribution/CountAtBucket;)Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
-#empty()Lio/micrometer/core/instrument/distribution/HistogramSnapshot;

+###io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder
@1.0.0
+#<init>()V
+#percentilesHistogram(Ljava/lang/Boolean;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
+#percentiles([D)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
+#sla([J)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
+#minimumExpectedValue(Ljava/lang/Long;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
+#maximumExpectedValue(Ljava/lang/Long;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
+#expiry(Ljava/time/Duration;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
+#bufferLength(Ljava/lang/Integer;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
+#build()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
@1.0.3
+#percentilePrecision(Ljava/lang/Integer;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
@1.3.10
+#minimumExpectedValue(Ljava/lang/Double;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
+#maximumExpectedValue(Ljava/lang/Double;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
@1.4.0
+#sla([D)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
*#sla([J)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;[deprecated]
*#minimumExpectedValue(Ljava/lang/Long;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;[deprecated]
*#maximumExpectedValue(Ljava/lang/Long;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;[deprecated]
@1.5.0
+#serviceLevelObjectives([D)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
*#sla([D)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;[deprecated]

+###io/micrometer/core/instrument/distribution/PercentileHistogramBuckets
@1.0.0
+#<init>()V
+#buckets(Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)Ljava/util/NavigableSet;

+###io/micrometer/core/instrument/distribution/ValueAtPercentile
@1.0.0
+#percentile()D
+#value()D
+#value(Ljava/util/concurrent/TimeUnit;)D
+#toString()Ljava/lang/String;
+#of(DD)Lio/micrometer/core/instrument/distribution/ValueAtPercentile;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.0.3
+#<init>(DD)V
-#of(DD)Lio/micrometer/core/instrument/distribution/ValueAtPercentile;

+###io/micrometer/core/instrument/distribution/CountAtBucket
@1.0.0
+#bucket()J
+#bucket(Ljava/util/concurrent/TimeUnit;)D
+#count()D
+#toString()Ljava/lang/String;
+#of(JD)Lio/micrometer/core/instrument/distribution/CountAtBucket;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.0.3
+#<init>(JD)V
-#of(JD)Lio/micrometer/core/instrument/distribution/CountAtBucket;
@1.4.0
*#<init>(JD)V[deprecated]
+#<init>(DD)V
+#bucket()D
-#bucket()J

+###io/micrometer/core/instrument/distribution/TimeWindowPercentileHistogram
@1.0.3
+#<init>(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Z)V
+#recordDouble(D)V
+#recordLong(J)V

+###io/micrometer/core/instrument/distribution/TimeWindowMax
@1.0.3
+#<init>(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)V
+#<init>(Lio/micrometer/core/instrument/Clock;JI)V
+#record(DLjava/util/concurrent/TimeUnit;)V
+#poll(Ljava/util/concurrent/TimeUnit;)D
+#poll()D
+#record(D)V

+###io/micrometer/core/instrument/internal/DefaultMeter
@1.0.0-rc.6
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)V
+#measure()Ljava/lang/Iterable;
+#getType()Lio/micrometer/core/instrument/Meter$Type;

+###io/micrometer/core/instrument/internal/DefaultLongTaskTimer
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;)V
+#start()J
+#stop(J)J
+#duration(JLjava/util/concurrent/TimeUnit;)D
+#duration(Ljava/util/concurrent/TimeUnit;)D
+#activeTasks()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.0.0-rc.8
+#start()Lio/micrometer/core/instrument/LongTaskTimer$Sample;
-#start()J
@1.5.0
*#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;)V[deprecated]
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Ljava/util/concurrent/TimeUnit;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Z)V
+#max(Ljava/util/concurrent/TimeUnit;)D
+#baseTimeUnit()Ljava/util/concurrent/TimeUnit;
+#takeSnapshot()Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
-#stop(J)J
-#duration(JLjava/util/concurrent/TimeUnit;)D
@1.7.10
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@1.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.8.4
-#equals(Ljava/lang/Object;)Z
-#hashCode()I

+###io/micrometer/core/instrument/internal/TimedExecutor
@1.0.0-rc.2
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/Executor;Ljava/lang/String;Ljava/lang/Iterable;)V
+#execute(Ljava/lang/Runnable;)V
@1.3.9
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/Executor;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)V
-#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/Executor;Ljava/lang/String;Ljava/lang/Iterable;)V
@1.4.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/Executor;Ljava/lang/String;Ljava/lang/Iterable;)V
-#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/Executor;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)V
@1.5.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/Executor;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)V
-#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/Executor;Ljava/lang/String;Ljava/lang/Iterable;)V

+###io/micrometer/core/instrument/internal/DefaultGauge
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)V
+#value()D
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.7.10
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@1.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.8.4
-#equals(Ljava/lang/Object;)Z
-#hashCode()I

+###io/micrometer/core/instrument/internal/TimedExecutorService
@0.6.3.RELEASE
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/lang/Iterable;)V
+#shutdown()V
+#shutdownNow()Ljava/util/List;
+#isShutdown()Z
+#isTerminated()Z
+#awaitTermination(JLjava/util/concurrent/TimeUnit;)Z
+#submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
+#invokeAll(Ljava/util/Collection;)Ljava/util/List;
+#invokeAll(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;
+#invokeAny(Ljava/util/Collection;)Ljava/lang/Object;
+#invokeAny(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#execute(Ljava/lang/Runnable;)V
@1.3.9
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)V
-#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/lang/Iterable;)V
@1.4.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/lang/Iterable;)V
-#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)V
@1.5.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)V
-#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/lang/Iterable;)V

+###io/micrometer/core/instrument/internal/Mergeable
@1.0.0-rc.3
+#merge(Ljava/lang/Object;)Ljava/lang/Object;

+###io/micrometer/core/instrument/step/StepCounter
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;J)V
+#increment(D)V
+#count()D

+###io/micrometer/core/instrument/step/StepLong
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/Clock;J)V
+#getCurrent()Ljava/util/concurrent/atomic/LongAdder;
+#poll()D
@1.4.0
-#poll()D

+###io/micrometer/core/instrument/step/StepFunctionTimer
@1.0.0-rc.6
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;JLjava/lang/Object;Ljava/util/function/ToLongFunction;Ljava/util/function/ToDoubleFunction;Ljava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;)V
+#count()D
+#totalTime(Ljava/util/concurrent/TimeUnit;)D
+#getId()Lio/micrometer/core/instrument/Meter$Id;
+#baseTimeUnit()Ljava/util/concurrent/TimeUnit;
+#type()Lio/micrometer/core/instrument/Meter$Type;

+###io/micrometer/core/instrument/step/StepTimer
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/histogram/HistogramConfig;J)V
+#count()J
+#totalTime(Ljava/util/concurrent/TimeUnit;)D
+#max(Ljava/util/concurrent/TimeUnit;)D
+#measure()Ljava/lang/Iterable;
@1.0.0-rc.6
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/histogram/HistogramConfig;Lio/micrometer/core/instrument/histogram/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;)V
-#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/histogram/HistogramConfig;J)V
-#measure()Ljava/lang/Iterable;
@1.0.0
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;)V
-#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/histogram/HistogramConfig;Lio/micrometer/core/instrument/histogram/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;)V
@1.0.3
*#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;)V[deprecated]
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;Z)V
@1.0.6
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;J)V[deprecated]
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;JZ)V
-#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;)V[deprecated]
-#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;Z)V
@1.0.7
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;)V[deprecated]
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;Z)V[deprecated]
-#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;J)V[deprecated]
@1.4.0
-#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;)V[deprecated]
-#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;Z)V[deprecated]

+###io/micrometer/core/instrument/step/StepDouble
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/Clock;J)V
+#getCurrent()Ljava/util/concurrent/atomic/DoubleAdder;
+#poll()D
@1.4.0
-#poll()D

+###io/micrometer/core/instrument/step/StepMeterRegistry
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/step/StepRegistryConfig;Lio/micrometer/core/instrument/Clock;)V
+#start()V
+#start(Ljava/util/concurrent/ThreadFactory;)V
+#stop()V
@1.0.0
+#close()V
@1.1.0
-#start()V
-#start(Ljava/util/concurrent/ThreadFactory;)V
-#stop()V
-#close()V

+###io/micrometer/core/instrument/step/StepDistributionSummary
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/histogram/HistogramConfig;J)V
+#count()J
+#totalAmount()D
+#max()D
+#measure()Ljava/lang/Iterable;
@1.0.0-rc.6
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/histogram/HistogramConfig;)V
-#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/histogram/HistogramConfig;J)V
@1.0.0
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;D)V
-#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/histogram/HistogramConfig;)V
@1.0.3
*#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;D)V[deprecated]
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;DZ)V
@1.0.6
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;JD)V[deprecated]
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;DJZ)V
-#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;D)V[deprecated]
-#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;DZ)V
@1.0.7
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;D)V[deprecated]
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;DZ)V[deprecated]
-#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;JD)V[deprecated]
@1.4.0
-#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;D)V[deprecated]
-#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;DZ)V[deprecated]

+###io/micrometer/core/instrument/step/StepRegistryConfig
@1.0.0-rc.3
+#step()Ljava/time/Duration;
+#enabled()Z
+#numThreads()I
+#connectTimeout()Ljava/time/Duration;
+#readTimeout()Ljava/time/Duration;
+#batchSize()I
@1.1.0
-#step()Ljava/time/Duration;
-#enabled()Z
-#numThreads()I
-#connectTimeout()Ljava/time/Duration;
-#readTimeout()Ljava/time/Duration;
-#batchSize()I
@1.5.0
+#validate(Lio/micrometer/core/instrument/step/StepRegistryConfig;)Lio/micrometer/core/instrument/config/validate/Validated;

+###io/micrometer/core/instrument/step/StepFunctionCounter
@1.0.0-rc.6
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;JLjava/lang/Object;Ljava/util/function/ToDoubleFunction;)V
+#count()D

+###io/micrometer/core/instrument/TimeGauge
@1.0.0-rc.3
+#getBaseTimeUnit()Ljava/util/concurrent/TimeUnit;
+#value(Ljava/util/concurrent/TimeUnit;)D
+#builder(Ljava/lang/String;Ljava/lang/Object;Ljava/util/concurrent/TimeUnit;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/TimeGauge$Builder;
@1.0.0-rc.4
+#baseTimeUnit()Ljava/util/concurrent/TimeUnit;
-#getBaseTimeUnit()Ljava/util/concurrent/TimeUnit;
@1.7.0
+#builder(Ljava/lang/String;Ljava/util/function/Supplier;Ljava/util/concurrent/TimeUnit;)Lio/micrometer/core/instrument/TimeGauge$Builder;

+###io/micrometer/core/instrument/MeterRegistry
@0.6.3.RELEASE
+#getMeters()Ljava/util/Collection;
+#findMeter(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Optional;
+#findMeter(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/Optional;
+#findMeter(Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Optional;
+#findMeter(Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/Optional;
+#getClock()Lio/micrometer/core/instrument/Clock;
+#counter(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Counter;
+#counter(Ljava/lang/String;[Ljava/lang/String;)Lio/micrometer/core/instrument/Counter;
+#summaryBuilder(Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
+#summary(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/DistributionSummary;
+#summary(Ljava/lang/String;[Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary;
+#timerBuilder(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
+#timer(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Timer;
+#timer(Ljava/lang/String;[Ljava/lang/String;)Lio/micrometer/core/instrument/Timer;
+#longTaskTimer(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/LongTaskTimer;
+#longTaskTimer(Ljava/lang/String;[Ljava/lang/String;)Lio/micrometer/core/instrument/LongTaskTimer;
+#register(Lio/micrometer/core/instrument/Meter;)Lio/micrometer/core/instrument/MeterRegistry;
+#gauge(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
+#gauge(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Number;)Ljava/lang/Number;
+#gauge(Ljava/lang/String;Ljava/lang/Number;)Ljava/lang/Number;
+#gauge(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
+#collectionSize(Ljava/util/Collection;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/Collection;
+#collectionSize(Ljava/util/Collection;Ljava/lang/String;[Lio/micrometer/core/instrument/Tag;)Ljava/util/Collection;
+#mapSize(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/Map;
+#mapSize(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Map;
@0.7.0.RELEASE
+#commonTags(Ljava/lang/Iterable;)V
+#commonTags([Ljava/lang/String;)V
@0.9.0.RELEASE
+#counter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
+#counter(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
+#counter(Ljava/lang/String;Ljava/lang/Number;)Ljava/lang/Number;
+#counter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Number;)Ljava/lang/Number;
@0.10.0.RELEASE
+#config()Lio/micrometer/core/instrument/MeterRegistry$Config;
+#find(Ljava/lang/String;)Lio/micrometer/core/instrument/MeterRegistry$Search;
+#counterBuilder(Ljava/lang/String;)Lio/micrometer/core/instrument/Counter$Builder;
+#more()Lio/micrometer/core/instrument/MeterRegistry$More;
+#register(Ljava/lang/String;Ljava/lang/Iterable;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/MeterRegistry;
+#gaugeCollectionSize(Ljava/lang/String;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;
+#gaugeMapSize(Ljava/lang/String;Ljava/lang/Iterable;Ljava/util/Map;)Ljava/util/Map;
+#gaugeBuilder(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
-#commonTags(Ljava/lang/Iterable;)V
-#commonTags([Ljava/lang/String;)V
-#findMeter(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Optional;
-#findMeter(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/Optional;
-#findMeter(Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Optional;
-#findMeter(Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/Optional;
-#getClock()Lio/micrometer/core/instrument/Clock;
-#counter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
-#counter(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
-#counter(Ljava/lang/String;Ljava/lang/Number;)Ljava/lang/Number;
-#counter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Number;)Ljava/lang/Number;
-#longTaskTimer(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/LongTaskTimer;
-#longTaskTimer(Ljava/lang/String;[Ljava/lang/String;)Lio/micrometer/core/instrument/LongTaskTimer;
-#register(Lio/micrometer/core/instrument/Meter;)Lio/micrometer/core/instrument/MeterRegistry;
-#collectionSize(Ljava/util/Collection;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/Collection;
-#collectionSize(Ljava/util/Collection;Ljava/lang/String;[Lio/micrometer/core/instrument/Tag;)Ljava/util/Collection;
-#mapSize(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/Map;
-#mapSize(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Map;
@0.11.0.RELEASE
+#counter(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Counter;
+#summary(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;Lio/micrometer/core/instrument/stats/quantile/Quantiles;)Lio/micrometer/core/instrument/DistributionSummary;
+#timer(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;Lio/micrometer/core/instrument/stats/quantile/Quantiles;)Lio/micrometer/core/instrument/Timer;
+#register(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Meter;
+#gauge(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge;
+#createId(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;)Lio/micrometer/core/instrument/Meter$Id;
+#createId(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Meter$Id;
-#counterBuilder(Ljava/lang/String;)Lio/micrometer/core/instrument/Counter$Builder;
-#summaryBuilder(Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
-#timerBuilder(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
-#register(Ljava/lang/String;Ljava/lang/Iterable;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/MeterRegistry;
-#gaugeBuilder(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/Clock;)V
-#counter(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Counter;
-#summary(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;Lio/micrometer/core/instrument/stats/quantile/Quantiles;)Lio/micrometer/core/instrument/DistributionSummary;
-#timer(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;Lio/micrometer/core/instrument/stats/quantile/Quantiles;)Lio/micrometer/core/instrument/Timer;
-#register(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Meter;
-#gauge(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge;
-#createId(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;)Lio/micrometer/core/instrument/Meter$Id;
-#createId(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Meter$Id;
@1.0.0-rc.4
+#getMeters()Ljava/util/List;
+#forEachMeter(Ljava/util/function/Consumer;)V
-#<init>(Lio/micrometer/core/instrument/Clock;)V
-#getMeters()Ljava/util/Collection;
@1.0.0-rc.8
+#find(Ljava/lang/String;)Lio/micrometer/core/instrument/search/Search;
+#get(Ljava/lang/String;)Lio/micrometer/core/instrument/search/RequiredSearch;
-#find(Ljava/lang/String;)Lio/micrometer/core/instrument/MeterRegistry$Search;
@1.0.0
+#close()V
+#isClosed()Z
@1.1.0
+#remove(Lio/micrometer/core/instrument/Meter;)Lio/micrometer/core/instrument/Meter;
+#remove(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Meter;
@1.2.0
+#clear()V
@1.3.16
+#removeByPreFilterId(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Meter;
@1.4.0
-#removeByPreFilterId(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Meter;
@1.5.8
+#removeByPreFilterId(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Meter;
@1.6.0
-#removeByPreFilterId(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Meter;
@1.6.2
+#removeByPreFilterId(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Meter;

+###io/micrometer/core/instrument/Statistic
@0.10.0.RELEASE
+#values()[Lio/micrometer/core/instrument/Statistic;
+#valueOf(Ljava/lang/String;)Lio/micrometer/core/instrument/Statistic;
@1.0.0-rc.8
+#getTagValueRepresentation()Ljava/lang/String;

+###io/micrometer/core/instrument/DistributionSummary
@0.6.3.RELEASE
+#record(D)V
+#count()J
+#totalAmount()D
+#getType()Lio/micrometer/core/instrument/Meter$Type;
@0.10.0.RELEASE
+#measure()Ljava/lang/Iterable;
-#getType()Lio/micrometer/core/instrument/Meter$Type;
@0.11.0.RELEASE
+#builder(Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
@1.0.0-rc.3
+#mean()D
+#max()D
+#percentile(D)D
+#histogramCountAtValue(J)D
@1.0.0-rc.4
+#takeSnapshot(Z)Lio/micrometer/core/instrument/HistogramSnapshot;
@1.0.0
+#takeSnapshot(Z)Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
-#takeSnapshot(Z)Lio/micrometer/core/instrument/HistogramSnapshot;
@1.0.3
*#histogramCountAtValue(J)D[deprecated]
*#percentile(D)D[deprecated]
-#takeSnapshot(Z)Lio/micrometer/core/instrument/distribution/HistogramSnapshot;

+###io/micrometer/core/instrument/Timer
@0.6.3.RELEASE
+#record(JLjava/util/concurrent/TimeUnit;)V
+#record(Ljava/util/function/Supplier;)Ljava/lang/Object;
+#recordCallable(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#record(Ljava/lang/Runnable;)V
+#wrap(Ljava/lang/Runnable;)Ljava/lang/Runnable;
+#wrap(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;
+#count()J
+#totalTime(Ljava/util/concurrent/TimeUnit;)D
+#totalTimeNanos()D
+#getType()Lio/micrometer/core/instrument/Meter$Type;
@0.10.0.RELEASE
+#measure()Ljava/lang/Iterable;
@0.11.0.RELEASE
+#builder(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
-#totalTimeNanos()D
@1.0.0-rc.3
+#record(Ljava/time/Duration;)V
+#mean(Ljava/util/concurrent/TimeUnit;)D
+#max(Ljava/util/concurrent/TimeUnit;)D
+#percentile(DLjava/util/concurrent/TimeUnit;)D
+#histogramCountAtValue(J)D
@1.0.0-rc.4
+#takeSnapshot(Z)Lio/micrometer/core/instrument/HistogramSnapshot;
+#type()Lio/micrometer/core/instrument/Meter$Type;
-#getType()Lio/micrometer/core/instrument/Meter$Type;
@1.0.0-rc.6
+#baseTimeUnit()Ljava/util/concurrent/TimeUnit;
@1.0.0-rc.8
+#start(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer$Sample;
+#start(Lio/micrometer/core/instrument/Clock;)Lio/micrometer/core/instrument/Timer$Sample;
+#builder(Lio/micrometer/core/annotation/Timed;Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
@1.0.0
+#takeSnapshot(Z)Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
-#takeSnapshot(Z)Lio/micrometer/core/instrument/HistogramSnapshot;
-#type()Lio/micrometer/core/instrument/Meter$Type;
@1.0.3
*#histogramCountAtValue(J)D[deprecated]
*#percentile(DLjava/util/concurrent/TimeUnit;)D[deprecated]
-#takeSnapshot(Z)Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
@1.1.0
+#start()Lio/micrometer/core/instrument/Timer$Sample;
@1.2.0
+#wrap(Ljava/util/function/Supplier;)Ljava/util/function/Supplier;
@1.6.0
+#resource(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$ResourceSample;
@1.10.0
+#record(Ljava/util/function/BooleanSupplier;)Z
+#record(Ljava/util/function/IntSupplier;)I
+#record(Ljava/util/function/LongSupplier;)J
+#record(Ljava/util/function/DoubleSupplier;)D

+###io/micrometer/core/instrument/FunctionCounter
@1.0.0-rc.2
+#count()D
+#measure()Ljava/lang/Iterable;
+#getType()Lio/micrometer/core/instrument/Meter$Type;
@1.0.0-rc.3
+#builder(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
@1.0.0-rc.4
+#type()Lio/micrometer/core/instrument/Meter$Type;
-#getType()Lio/micrometer/core/instrument/Meter$Type;
@1.0.0
-#type()Lio/micrometer/core/instrument/Meter$Type;

+###io/micrometer/core/instrument/simple/SimpleMeterRegistry
@0.6.3.RELEASE
+#<init>()V
+#<init>(Lio/micrometer/core/instrument/Clock;)V
+#counter(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Counter;
+#distributionSummary(Ljava/lang/String;Ljava/lang/Iterable;Lio/micrometer/core/instrument/stats/quantile/Quantiles;Lio/micrometer/core/instrument/stats/hist/Histogram;)Lio/micrometer/core/instrument/DistributionSummary;
+#longTaskTimer(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/LongTaskTimer;
+#register(Lio/micrometer/core/instrument/Meter;)Lio/micrometer/core/instrument/MeterRegistry;
+#gauge(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
+#getMeters()Ljava/util/Collection;
+#findMeter(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/Optional;
+#findMeter(Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/Optional;
+#clear()V
@0.9.0.RELEASE
+#counter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
@0.10.0.RELEASE
-#counter(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Counter;
-#counter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
-#distributionSummary(Ljava/lang/String;Ljava/lang/Iterable;Lio/micrometer/core/instrument/stats/quantile/Quantiles;Lio/micrometer/core/instrument/stats/hist/Histogram;)Lio/micrometer/core/instrument/DistributionSummary;
-#longTaskTimer(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/LongTaskTimer;
-#register(Lio/micrometer/core/instrument/Meter;)Lio/micrometer/core/instrument/MeterRegistry;
-#gauge(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
-#getMeters()Ljava/util/Collection;
-#findMeter(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/Optional;
-#findMeter(Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/Optional;
-#clear()V
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/simple/SimpleConfig;Lio/micrometer/core/instrument/Clock;)V
-#<init>(Lio/micrometer/core/instrument/Clock;)V
@1.9.0
+#getMetersAsString()Ljava/lang/String;

+###io/micrometer/core/instrument/simple/SimpleConfig
@1.0.0-rc.3
+#prefix()Ljava/lang/String;
+#step()Ljava/time/Duration;
@1.0.0-rc.4
+#mode()Lio/micrometer/core/instrument/simple/CountingMode;
@1.5.0
+#validate()Lio/micrometer/core/instrument/config/validate/Validated;

+###io/micrometer/core/instrument/simple/CountingMode
@1.0.0-rc.4
+#values()[Lio/micrometer/core/instrument/simple/CountingMode;
+#valueOf(Ljava/lang/String;)Lio/micrometer/core/instrument/simple/CountingMode;

+###io/micrometer/core/instrument/Timer$Builder
@0.6.3.RELEASE
+#quantiles(Lio/micrometer/core/instrument/stats/quantile/Quantiles;)Lio/micrometer/core/instrument/Timer$Builder;
+#histogram(Lio/micrometer/core/instrument/stats/hist/Histogram;)Lio/micrometer/core/instrument/Timer$Builder;
+#tags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Timer$Builder;
+#tags([Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
+#create()Lio/micrometer/core/instrument/Timer;
@0.10.0.RELEASE
+#description(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
@0.11.0.RELEASE
+#histogram(Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;)Lio/micrometer/core/instrument/Timer$Builder;
+#register(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer;
-#histogram(Lio/micrometer/core/instrument/stats/hist/Histogram;)Lio/micrometer/core/instrument/Timer$Builder;
-#create()Lio/micrometer/core/instrument/Timer;
@1.0.0-rc.3
+#publishPercentiles([D)Lio/micrometer/core/instrument/Timer$Builder;
+#publishPercentileHistogram()Lio/micrometer/core/instrument/Timer$Builder;
+#publishPercentileHistogram(Ljava/lang/Boolean;)Lio/micrometer/core/instrument/Timer$Builder;
+#sla([Ljava/time/Duration;)Lio/micrometer/core/instrument/Timer$Builder;
+#minimumExpectedValue(Ljava/time/Duration;)Lio/micrometer/core/instrument/Timer$Builder;
+#maximumExpectedValue(Ljava/time/Duration;)Lio/micrometer/core/instrument/Timer$Builder;
+#histogramExpiry(Ljava/time/Duration;)Lio/micrometer/core/instrument/Timer$Builder;
+#histogramBufferLength(Ljava/lang/Integer;)Lio/micrometer/core/instrument/Timer$Builder;
-#quantiles(Lio/micrometer/core/instrument/stats/quantile/Quantiles;)Lio/micrometer/core/instrument/Timer$Builder;
-#histogram(Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;)Lio/micrometer/core/instrument/Timer$Builder;
@1.0.0-rc.6
+#tag(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
+#pauseDetector(Lio/micrometer/core/instrument/histogram/pause/PauseDetector;)Lio/micrometer/core/instrument/Timer$Builder;
@1.0.0
+#distributionStatisticExpiry(Ljava/time/Duration;)Lio/micrometer/core/instrument/Timer$Builder;
+#distributionStatisticBufferLength(Ljava/lang/Integer;)Lio/micrometer/core/instrument/Timer$Builder;
+#pauseDetector(Lio/micrometer/core/instrument/distribution/pause/PauseDetector;)Lio/micrometer/core/instrument/Timer$Builder;
-#histogramExpiry(Ljava/time/Duration;)Lio/micrometer/core/instrument/Timer$Builder;
-#histogramBufferLength(Ljava/lang/Integer;)Lio/micrometer/core/instrument/Timer$Builder;
-#pauseDetector(Lio/micrometer/core/instrument/histogram/pause/PauseDetector;)Lio/micrometer/core/instrument/Timer$Builder;
@1.0.3
+#percentilePrecision(I)Lio/micrometer/core/instrument/Timer$Builder;
@1.0.4
+#percentilePrecision(Ljava/lang/Integer;)Lio/micrometer/core/instrument/Timer$Builder;
-#percentilePrecision(I)Lio/micrometer/core/instrument/Timer$Builder;
@1.5.0
*#sla([Ljava/time/Duration;)Lio/micrometer/core/instrument/Timer$Builder;[deprecated]
+#serviceLevelObjectives([Ljava/time/Duration;)Lio/micrometer/core/instrument/Timer$Builder;
@1.6.0
+#description(Ljava/lang/String;)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#pauseDetector(Lio/micrometer/core/instrument/distribution/pause/PauseDetector;)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#distributionStatisticBufferLength(Ljava/lang/Integer;)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#distributionStatisticExpiry(Ljava/time/Duration;)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#maximumExpectedValue(Ljava/time/Duration;)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#minimumExpectedValue(Ljava/time/Duration;)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#serviceLevelObjectives([Ljava/time/Duration;)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#sla([Ljava/time/Duration;)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#publishPercentileHistogram(Ljava/lang/Boolean;)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#publishPercentileHistogram()Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#percentilePrecision(Ljava/lang/Integer;)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#publishPercentiles([D)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#tag(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#tags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#tags([Ljava/lang/String;)Lio/micrometer/core/instrument/AbstractTimerBuilder;

+###io/micrometer/core/instrument/composite/CompositeMeterRegistry
@0.10.0.RELEASE
+#<init>()V
+#<init>(Lio/micrometer/core/instrument/Clock;)V
+#add(Lio/micrometer/core/instrument/MeterRegistry;)V
+#remove(Lio/micrometer/core/instrument/MeterRegistry;)V
@0.11.0.RELEASE
+#add(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/composite/CompositeMeterRegistry;
+#remove(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/composite/CompositeMeterRegistry;
+#getRegistries()Ljava/util/Set;
-#add(Lio/micrometer/core/instrument/MeterRegistry;)V
-#remove(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.0.0-rc.8
+#<init>(Lio/micrometer/core/instrument/Clock;Ljava/lang/Iterable;)V
@1.0.7
+#close()V

+###io/micrometer/core/instrument/composite/CompositeFunctionCounter
@1.0.0-rc.6
+#count()D

+###io/micrometer/core/instrument/search/MeterNotFoundException
@1.0.0-rc.8
+#<init>(Ljava/lang/String;Ljava/util/List;Ljava/lang/Class;)V
@1.0.0
+#<init>(Ljava/lang/String;Ljava/util/Collection;Ljava/lang/Class;)V
-#<init>(Ljava/lang/String;Ljava/util/List;Ljava/lang/Class;)V
@1.0.4
-#<init>(Ljava/lang/String;Ljava/util/Collection;Ljava/lang/Class;)V

+###io/micrometer/core/instrument/search/RequiredSearch
@1.0.0-rc.8
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/String;)V
+#tags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/search/RequiredSearch;
+#tags([Ljava/lang/String;)Lio/micrometer/core/instrument/search/RequiredSearch;
+#timer()Lio/micrometer/core/instrument/Timer;
+#counter()Lio/micrometer/core/instrument/Counter;
+#gauge()Lio/micrometer/core/instrument/Gauge;
+#functionCounter()Lio/micrometer/core/instrument/FunctionCounter;
+#timeGauge()Lio/micrometer/core/instrument/TimeGauge;
+#functionTimer()Lio/micrometer/core/instrument/FunctionTimer;
+#summary()Lio/micrometer/core/instrument/DistributionSummary;
+#longTaskTimer()Lio/micrometer/core/instrument/LongTaskTimer;
+#meter()Lio/micrometer/core/instrument/Meter;
+#meters()Ljava/util/Collection;
@1.0.0
+#name(Ljava/lang/String;)Lio/micrometer/core/instrument/search/RequiredSearch;
+#name(Ljava/util/function/Predicate;)Lio/micrometer/core/instrument/search/RequiredSearch;
+#tag(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/search/RequiredSearch;
+#tagKeys([Ljava/lang/String;)Lio/micrometer/core/instrument/search/RequiredSearch;
+#in(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/search/RequiredSearch;
-#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/String;)V
@1.0.4
+#counters()Ljava/util/Collection;
+#gauges()Ljava/util/Collection;
+#timers()Ljava/util/Collection;
+#summaries()Ljava/util/Collection;
+#longTaskTimers()Ljava/util/Collection;
+#functionCounters()Ljava/util/Collection;
+#functionTimers()Ljava/util/Collection;
+#timeGauges()Ljava/util/Collection;

+###io/micrometer/core/instrument/search/Search
@1.0.0-rc.8
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/String;)V
+#tags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/search/Search;
+#tags([Ljava/lang/String;)Lio/micrometer/core/instrument/search/Search;
+#timer()Lio/micrometer/core/instrument/Timer;
+#counter()Lio/micrometer/core/instrument/Counter;
+#gauge()Lio/micrometer/core/instrument/Gauge;
+#functionCounter()Lio/micrometer/core/instrument/FunctionCounter;
+#timeGauge()Lio/micrometer/core/instrument/TimeGauge;
+#functionTimer()Lio/micrometer/core/instrument/FunctionTimer;
+#summary()Lio/micrometer/core/instrument/DistributionSummary;
+#longTaskTimer()Lio/micrometer/core/instrument/LongTaskTimer;
+#meter()Lio/micrometer/core/instrument/Meter;
+#meters()Ljava/util/Collection;
@1.0.0
+#name(Ljava/lang/String;)Lio/micrometer/core/instrument/search/Search;
+#name(Ljava/util/function/Predicate;)Lio/micrometer/core/instrument/search/Search;
+#tag(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/search/Search;
+#tagKeys([Ljava/lang/String;)Lio/micrometer/core/instrument/search/Search;
+#in(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/search/Search;
-#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/String;)V
@1.0.4
+#counters()Ljava/util/Collection;
+#gauges()Ljava/util/Collection;
+#timers()Ljava/util/Collection;
+#summaries()Ljava/util/Collection;
+#longTaskTimers()Ljava/util/Collection;
+#functionCounters()Ljava/util/Collection;
+#functionTimers()Ljava/util/Collection;
+#timeGauges()Ljava/util/Collection;
@1.6.0
+#tag(Ljava/lang/String;Ljava/util/function/Predicate;)Lio/micrometer/core/instrument/search/Search;
+#acceptFilter()Lio/micrometer/core/instrument/config/MeterFilter;
@1.7.0
+#tagKeys(Ljava/util/Collection;)Lio/micrometer/core/instrument/search/Search;

+###io/micrometer/core/instrument/Tags
@0.6.3.RELEASE
+#<init>()V
+#zip([Ljava/lang/String;)Ljava/util/List;
@0.10.0.RELEASE
+#concat(Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#concat(Ljava/lang/Iterable;[Ljava/lang/String;)Ljava/lang/Iterable;
-#<init>()V
@1.0.0-rc.6
+#of(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Iterable;
@1.0.0-rc.8
+#and(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tags;
+#and([Ljava/lang/String;)Lio/micrometer/core/instrument/Tags;
+#and([Lio/micrometer/core/instrument/Tag;)Lio/micrometer/core/instrument/Tags;
+#and(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Tags;
+#iterator()Ljava/util/Iterator;
+#stream()Ljava/util/stream/Stream;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#concat(Ljava/lang/Iterable;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Tags;
+#concat(Ljava/lang/Iterable;[Ljava/lang/String;)Lio/micrometer/core/instrument/Tags;
+#of(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Tags;
+#of(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tags;
+#of([Ljava/lang/String;)Lio/micrometer/core/instrument/Tags;
+#of([Lio/micrometer/core/instrument/Tag;)Lio/micrometer/core/instrument/Tags;
+#empty()Lio/micrometer/core/instrument/Tags;
-#zip([Ljava/lang/String;)Ljava/util/List;
-#concat(Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/lang/Iterable;
-#concat(Ljava/lang/Iterable;[Ljava/lang/String;)Ljava/lang/Iterable;
-#of(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Iterable;
@1.1.0
+#toString()Ljava/lang/String;
@1.10.0
+#spliterator()Ljava/util/Spliterator;

+###io/micrometer/core/instrument/Meter$Type
@0.6.3.RELEASE
+#values()[Lio/micrometer/core/instrument/Meter$Type;
+#valueOf(Ljava/lang/String;)Lio/micrometer/core/instrument/Meter$Type;

+###io/micrometer/core/instrument/Meter$Builder
@1.0.0-rc.3
+#tags([Ljava/lang/String;)Lio/micrometer/core/instrument/Meter$Builder;
+#tags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Meter$Builder;
+#description(Ljava/lang/String;)Lio/micrometer/core/instrument/Meter$Builder;
+#baseUnit(Ljava/lang/String;)Lio/micrometer/core/instrument/Meter$Builder;
+#register(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Meter;
@1.0.0-rc.8
+#tag(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Meter$Builder;

+###io/micrometer/core/instrument/LongTaskTimer
@0.6.3.RELEASE
+#recordCallable(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#record(Ljava/util/function/Supplier;)Ljava/lang/Object;
+#record(Ljava/util/function/Consumer;)V
+#record(Ljava/lang/Runnable;)V
+#start()J
+#stop(J)J
+#duration(J)J
+#duration()J
+#activeTasks()I
+#getType()Lio/micrometer/core/instrument/Meter$Type;
@0.10.0.RELEASE
+#measure()Ljava/lang/Iterable;
@0.11.0.RELEASE
+#duration(JLjava/util/concurrent/TimeUnit;)D
+#duration(Ljava/util/concurrent/TimeUnit;)D
+#builder(Ljava/lang/String;)Lio/micrometer/core/instrument/LongTaskTimer$Builder;
-#duration(J)J
-#duration()J
@1.0.0-rc.4
+#type()Lio/micrometer/core/instrument/Meter$Type;
-#getType()Lio/micrometer/core/instrument/Meter$Type;
@1.0.0-rc.8
+#builder(Lio/micrometer/core/annotation/Timed;)Lio/micrometer/core/instrument/LongTaskTimer$Builder;
+#start()Lio/micrometer/core/instrument/LongTaskTimer$Sample;
-#start()J
@1.0.0
-#type()Lio/micrometer/core/instrument/Meter$Type;
@1.5.0
+#max(Ljava/util/concurrent/TimeUnit;)D
+#baseTimeUnit()Ljava/util/concurrent/TimeUnit;
*#stop(J)J[deprecated]
*#duration(JLjava/util/concurrent/TimeUnit;)D[deprecated]
@1.5.1
+#mean(Ljava/util/concurrent/TimeUnit;)D
@1.10.0
+#record(Ljava/util/function/BooleanSupplier;)Z
+#record(Ljava/util/function/IntSupplier;)I
+#record(Ljava/util/function/LongSupplier;)J
+#record(Ljava/util/function/DoubleSupplier;)D

+###io/micrometer/core/instrument/DistributionSummary$Builder
@0.6.3.RELEASE
+#quantiles(Lio/micrometer/core/instrument/stats/quantile/Quantiles;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
+#histogram(Lio/micrometer/core/instrument/stats/hist/Histogram;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
+#tags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
+#tags([Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
+#create()Lio/micrometer/core/instrument/DistributionSummary;
@0.10.0.RELEASE
+#description(Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
+#baseUnit(Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
@0.11.0.RELEASE
+#histogram(Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
+#register(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/DistributionSummary;
-#histogram(Lio/micrometer/core/instrument/stats/hist/Histogram;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
-#create()Lio/micrometer/core/instrument/DistributionSummary;
@1.0.0-rc.3
+#publishPercentiles([D)Lio/micrometer/core/instrument/DistributionSummary$Builder;
+#publishPercentileHistogram()Lio/micrometer/core/instrument/DistributionSummary$Builder;
+#publishPercentileHistogram(Ljava/lang/Boolean;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
+#sla([J)Lio/micrometer/core/instrument/DistributionSummary$Builder;
+#minimumExpectedValue(Ljava/lang/Long;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
+#maximumExpectedValue(Ljava/lang/Long;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
+#histogramExpiry(Ljava/time/Duration;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
+#histogramBufferLength(Ljava/lang/Integer;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
-#quantiles(Lio/micrometer/core/instrument/stats/quantile/Quantiles;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
-#histogram(Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
@1.0.0-rc.6
+#tag(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
@1.0.0
+#distributionStatisticExpiry(Ljava/time/Duration;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
+#distributionStatisticBufferLength(Ljava/lang/Integer;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
+#scale(D)Lio/micrometer/core/instrument/DistributionSummary$Builder;
-#histogramExpiry(Ljava/time/Duration;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
-#histogramBufferLength(Ljava/lang/Integer;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
@1.0.3
+#percentilePrecision(I)Lio/micrometer/core/instrument/DistributionSummary$Builder;
@1.0.4
+#percentilePrecision(Ljava/lang/Integer;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
-#percentilePrecision(I)Lio/micrometer/core/instrument/DistributionSummary$Builder;
@1.3.10
+#minimumExpectedValue(Ljava/lang/Double;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
+#maximumExpectedValue(Ljava/lang/Double;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
@1.4.0
*#sla([J)Lio/micrometer/core/instrument/DistributionSummary$Builder;[deprecated]
+#sla([D)Lio/micrometer/core/instrument/DistributionSummary$Builder;
*#minimumExpectedValue(Ljava/lang/Long;)Lio/micrometer/core/instrument/DistributionSummary$Builder;[deprecated]
*#maximumExpectedValue(Ljava/lang/Long;)Lio/micrometer/core/instrument/DistributionSummary$Builder;[deprecated]
@1.5.0
*#sla([D)Lio/micrometer/core/instrument/DistributionSummary$Builder;[deprecated]
+#serviceLevelObjectives([D)Lio/micrometer/core/instrument/DistributionSummary$Builder;

+###io/micrometer/core/instrument/Counter
@0.6.3.RELEASE
+#increment()V
+#increment(D)V
+#count()D
+#getType()Lio/micrometer/core/instrument/Meter$Type;
@0.10.0.RELEASE
+#measure()Ljava/lang/Iterable;
@0.11.0.RELEASE
+#builder(Ljava/lang/String;)Lio/micrometer/core/instrument/Counter$Builder;
@1.0.0-rc.4
+#type()Lio/micrometer/core/instrument/Meter$Type;
-#getType()Lio/micrometer/core/instrument/Meter$Type;
@1.0.0
-#type()Lio/micrometer/core/instrument/Meter$Type;

+###io/micrometer/core/instrument/Meter$Id
@0.11.0.RELEASE
+#getName()Ljava/lang/String;
+#getTags()Ljava/lang/Iterable;
+#getBaseUnit()Ljava/lang/String;
+#getDescription()Ljava/lang/String;
+#getConventionName()Ljava/lang/String;
+#getConventionTags()Ljava/util/List;
+#setType(Lio/micrometer/core/instrument/Meter$Type;)V
+#setBaseUnit(Ljava/lang/String;)V
@0.12.0.RELEASE
+#getConventionName(Lio/micrometer/core/instrument/NamingConvention;)Ljava/lang/String;
+#getConventionTags(Lio/micrometer/core/instrument/NamingConvention;)Ljava/util/List;
-#getConventionName()Ljava/lang/String;
-#getConventionTags()Ljava/util/List;
@1.0.0-rc.2
+#withTag(Lio/micrometer/core/instrument/Tag;)Lio/micrometer/core/instrument/Meter$Id;
+#withTag(Lio/micrometer/core/instrument/Statistic;)Lio/micrometer/core/instrument/Meter$Id;
@1.0.0-rc.3
+#<init>(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getType()Lio/micrometer/core/instrument/Meter$Type;
@1.0.0-rc.4
+#<init>(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Lio/micrometer/core/instrument/Meter$Type;)V
+#getConventionName(Lio/micrometer/core/instrument/config/NamingConvention;)Ljava/lang/String;
+#getConventionTags(Lio/micrometer/core/instrument/config/NamingConvention;)Ljava/util/List;
-#<init>(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;)V
-#getConventionName(Lio/micrometer/core/instrument/NamingConvention;)Ljava/lang/String;
-#getConventionTags(Lio/micrometer/core/instrument/NamingConvention;)Ljava/util/List;
-#setType(Lio/micrometer/core/instrument/Meter$Type;)V
@1.0.0-rc.6
+#withBaseUnit(Ljava/lang/String;)Lio/micrometer/core/instrument/Meter$Id;
-#setBaseUnit(Ljava/lang/String;)V
@1.0.0-rc.8
+#getTag(Ljava/lang/String;)Ljava/lang/String;
@1.0.0
+#withName(Ljava/lang/String;)Lio/micrometer/core/instrument/Meter$Id;
+#getTags()Ljava/util/List;
-#getTags()Ljava/lang/Iterable;
@1.0.6
+#<init>(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Lio/micrometer/core/instrument/Meter$Type;Z)V
+#isSynthetic()Z
@1.1.0
+#<init>(Ljava/lang/String;Lio/micrometer/core/instrument/Tags;Ljava/lang/String;Ljava/lang/String;Lio/micrometer/core/instrument/Meter$Type;)V
+#withTags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Meter$Id;
+#replaceTags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Meter$Id;
+#getTagsAsIterable()Ljava/lang/Iterable;
+#syntheticAssociation()Lio/micrometer/core/instrument/Meter$Id;
-#<init>(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Lio/micrometer/core/instrument/Meter$Type;Z)V
-#<init>(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Lio/micrometer/core/instrument/Meter$Type;)V
-#isSynthetic()Z

+###io/micrometer/core/instrument/Meter
@0.6.3.RELEASE
+#getName()Ljava/lang/String;
+#getTags()Ljava/lang/Iterable;
+#getType()Lio/micrometer/core/instrument/Meter$Type;
+#measure()Ljava/lang/Iterable;
@0.8.0.RELEASE
+#measure()Ljava/util/List;
-#measure()Ljava/lang/Iterable;
@0.10.0.RELEASE
+#getDescription()Ljava/lang/String;
+#measure()Ljava/lang/Iterable;
-#measure()Ljava/util/List;
@0.11.0.RELEASE
+#getId()Lio/micrometer/core/instrument/Meter$Id;
-#getName()Ljava/lang/String;
-#getTags()Ljava/lang/Iterable;
-#getDescription()Ljava/lang/String;
@1.0.0-rc.3
+#builder(Ljava/lang/String;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Meter$Builder;
@1.0.0-rc.4
+#type()Lio/micrometer/core/instrument/Meter$Type;
-#getType()Lio/micrometer/core/instrument/Meter$Type;
@1.0.0
+#close()V
-#type()Lio/micrometer/core/instrument/Meter$Type;
@1.1.0
+#match(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/lang/Object;
+#use(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V

+###io/micrometer/core/instrument/TimeGauge$Builder
@1.0.0-rc.3
+#tags([Ljava/lang/String;)Lio/micrometer/core/instrument/TimeGauge$Builder;
+#tags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/TimeGauge$Builder;
+#description(Ljava/lang/String;)Lio/micrometer/core/instrument/TimeGauge$Builder;
+#register(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/TimeGauge;
@1.0.0-rc.6
+#tag(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/TimeGauge$Builder;
@1.7.0
+#strongReference(Z)Lio/micrometer/core/instrument/TimeGauge$Builder;

+###io/micrometer/core/instrument/Metrics
@0.10.0.RELEASE
+#<init>()V
+#addRegistry(Lio/micrometer/core/instrument/MeterRegistry;)V
+#removeRegistry(Lio/micrometer/core/instrument/MeterRegistry;)V
+#counterBuilder(Ljava/lang/String;)Lio/micrometer/core/instrument/Counter$Builder;
+#counter(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Counter;
+#counter(Ljava/lang/String;[Ljava/lang/String;)Lio/micrometer/core/instrument/Counter;
+#summaryBuilder(Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
+#summary(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/DistributionSummary;
+#summary(Ljava/lang/String;[Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary;
+#timerBuilder(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
+#timer(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Timer;
+#timer(Ljava/lang/String;[Ljava/lang/String;)Lio/micrometer/core/instrument/Timer;
+#more()Lio/micrometer/core/instrument/Metrics$More;
+#register(Ljava/lang/String;Ljava/lang/Iterable;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/MeterRegistry;
+#gauge(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
+#gauge(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Number;)Ljava/lang/Number;
+#gauge(Ljava/lang/String;Ljava/lang/Number;)Ljava/lang/Number;
+#gauge(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
+#gaugeCollectionSize(Ljava/lang/String;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;
+#gaugeMapSize(Ljava/lang/String;Ljava/lang/Iterable;Ljava/util/Map;)Ljava/util/Map;
+#gaugeBuilder(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
@0.11.0.RELEASE
+#counter(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Counter;
+#summary(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;Lio/micrometer/core/instrument/stats/quantile/Quantiles;)Lio/micrometer/core/instrument/DistributionSummary;
+#timer(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;Lio/micrometer/core/instrument/stats/quantile/Quantiles;)Lio/micrometer/core/instrument/Timer;
+#register(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Meter;
+#gauge(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge;
-#counterBuilder(Ljava/lang/String;)Lio/micrometer/core/instrument/Counter$Builder;
-#summaryBuilder(Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
-#timerBuilder(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
-#register(Ljava/lang/String;Ljava/lang/Iterable;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/MeterRegistry;
-#gaugeBuilder(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
@1.0.0-rc.3
-#counter(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Counter;
-#summary(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;Lio/micrometer/core/instrument/stats/quantile/Quantiles;)Lio/micrometer/core/instrument/DistributionSummary;
-#timer(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;Lio/micrometer/core/instrument/stats/quantile/Quantiles;)Lio/micrometer/core/instrument/Timer;
-#register(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Meter;
-#gauge(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge;

+###io/micrometer/core/instrument/FunctionTimer$Builder
@1.0.0-rc.3
+#tags([Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionTimer$Builder;
+#tags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/FunctionTimer$Builder;
+#description(Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionTimer$Builder;
+#baseUnit(Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionTimer$Builder;
+#register(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/FunctionTimer;
@1.0.0-rc.6
+#tag(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionTimer$Builder;
@1.0.0-rc.8
-#baseUnit(Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionTimer$Builder;

+###io/micrometer/core/instrument/LongTaskTimer$Builder
@0.10.0.RELEASE
+#tags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/LongTaskTimer$Builder;
+#tags([Ljava/lang/String;)Lio/micrometer/core/instrument/LongTaskTimer$Builder;
+#description(Ljava/lang/String;)Lio/micrometer/core/instrument/LongTaskTimer$Builder;
+#create()Lio/micrometer/core/instrument/LongTaskTimer;
@0.11.0.RELEASE
+#register(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/LongTaskTimer;
-#create()Lio/micrometer/core/instrument/LongTaskTimer;
@1.0.0-rc.6
+#tag(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/LongTaskTimer$Builder;
@1.5.0
+#serviceLevelObjectives([Ljava/time/Duration;)Lio/micrometer/core/instrument/LongTaskTimer$Builder;
+#minimumExpectedValue(Ljava/time/Duration;)Lio/micrometer/core/instrument/LongTaskTimer$Builder;
+#maximumExpectedValue(Ljava/time/Duration;)Lio/micrometer/core/instrument/LongTaskTimer$Builder;
+#distributionStatisticExpiry(Ljava/time/Duration;)Lio/micrometer/core/instrument/LongTaskTimer$Builder;
+#distributionStatisticBufferLength(Ljava/lang/Integer;)Lio/micrometer/core/instrument/LongTaskTimer$Builder;
+#publishPercentiles([D)Lio/micrometer/core/instrument/LongTaskTimer$Builder;
+#percentilePrecision(Ljava/lang/Integer;)Lio/micrometer/core/instrument/LongTaskTimer$Builder;
+#publishPercentileHistogram()Lio/micrometer/core/instrument/LongTaskTimer$Builder;
+#publishPercentileHistogram(Ljava/lang/Boolean;)Lio/micrometer/core/instrument/LongTaskTimer$Builder;

+###io/micrometer/core/instrument/Tag
@0.6.3.RELEASE
+#getKey()Ljava/lang/String;
+#getValue()Ljava/lang/String;
+#of(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
@1.1.0
+#compareTo(Lio/micrometer/core/instrument/Tag;)I
+#compareTo(Ljava/lang/Object;)I

+###io/micrometer/core/instrument/AbstractMeter
@0.10.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getTags()Ljava/lang/Iterable;
+#getDescription()Ljava/lang/String;
@0.11.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/Meter$Id;)V
+#getId()Lio/micrometer/core/instrument/Meter$Id;
-#<init>(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;)V
-#getName()Ljava/lang/String;
-#getTags()Ljava/lang/Iterable;
-#getDescription()Ljava/lang/String;
@1.7.10
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.8.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@1.8.4
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###io/micrometer/core/instrument/dropwizard/DropwizardMeterRegistry
@0.8.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/util/HierarchicalNameMapper;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/TagFormatter;)V
+#getDropwizardRegistry()Lcom/codahale/metrics/MetricRegistry;
+#getMeters()Ljava/util/Collection;
+#findMeter(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/Optional;
+#findMeter(Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/Optional;
+#counter(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Counter;
+#longTaskTimer(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/LongTaskTimer;
+#register(Lio/micrometer/core/instrument/Meter;)Lio/micrometer/core/instrument/MeterRegistry;
+#gauge(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
@0.9.0.RELEASE
+#counter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
@0.10.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/util/HierarchicalNameMapper;Lio/micrometer/core/instrument/Clock;)V
-#<init>(Lio/micrometer/core/instrument/util/HierarchicalNameMapper;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/TagFormatter;)V
-#getMeters()Ljava/util/Collection;
-#findMeter(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/Optional;
-#findMeter(Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/Optional;
-#counter(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Counter;
-#counter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
-#longTaskTimer(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/LongTaskTimer;
-#register(Lio/micrometer/core/instrument/Meter;)Lio/micrometer/core/instrument/MeterRegistry;
-#gauge(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
@1.0.0-rc.6
+#<init>(Lio/micrometer/core/instrument/dropwizard/DropwizardConfig;Lio/micrometer/core/instrument/util/HierarchicalNameMapper;Lio/micrometer/core/instrument/Clock;)V
-#<init>(Lio/micrometer/core/instrument/util/HierarchicalNameMapper;Lio/micrometer/core/instrument/Clock;)V
@1.0.0-rc.8
+#<init>(Lio/micrometer/core/instrument/dropwizard/DropwizardConfig;Lcom/codahale/metrics/MetricRegistry;Lio/micrometer/core/instrument/util/HierarchicalNameMapper;Lio/micrometer/core/instrument/Clock;)V
-#<init>(Lio/micrometer/core/instrument/dropwizard/DropwizardConfig;Lio/micrometer/core/instrument/util/HierarchicalNameMapper;Lio/micrometer/core/instrument/Clock;)V

+###io/micrometer/core/instrument/dropwizard/DropwizardFunctionCounter
@1.0.0-rc.6
+#getDropwizardMeter()Lcom/codahale/metrics/Meter;
+#count()D

+###io/micrometer/core/instrument/dropwizard/DropwizardCounter
@0.8.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/util/MeterId;Lcom/codahale/metrics/Meter;)V
+#measure()Ljava/util/List;
+#increment()V
+#increment(D)V
+#count()D
@0.9.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
-#increment()V
@0.10.0.RELEASE
-#<init>(Lio/micrometer/core/instrument/util/MeterId;Lcom/codahale/metrics/Meter;)V
-#measure()Ljava/util/List;
@1.7.10
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@1.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.8.4
-#equals(Ljava/lang/Object;)Z
-#hashCode()I

+###io/micrometer/core/instrument/dropwizard/DropwizardGauge
@0.8.0.RELEASE
+#value()D
+#measure()Ljava/util/List;
@0.9.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.10.0.RELEASE
-#measure()Ljava/util/List;
@1.7.10
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@1.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.8.4
-#equals(Ljava/lang/Object;)Z
-#hashCode()I

+###io/micrometer/core/instrument/dropwizard/DropwizardClock
@1.0.0-rc.6
+#<init>(Lio/micrometer/core/instrument/Clock;)V
+#getTick()J
+#getTime()J

+###io/micrometer/core/instrument/dropwizard/DropwizardDistributionSummary
@0.8.0.RELEASE
+#measure()Ljava/util/List;
+#record(D)V
+#count()J
+#totalAmount()D
@0.9.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.10.0.RELEASE
-#measure()Ljava/util/List;
@1.0.0-rc.3
+#max()D
-#record(D)V
@1.7.10
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@1.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.8.4
-#equals(Ljava/lang/Object;)Z
-#hashCode()I

+###io/micrometer/core/instrument/dropwizard/DropwizardConfig
@1.0.0-rc.6
+#step()Ljava/time/Duration;
@1.5.0
+#validate()Lio/micrometer/core/instrument/config/validate/Validated;
+#validate(Lio/micrometer/core/instrument/dropwizard/DropwizardConfig;)Lio/micrometer/core/instrument/config/validate/Validated;

+###io/micrometer/core/instrument/dropwizard/DropwizardFunctionTimer
@1.0.0-rc.6
+#getDropwizardMeter()Lcom/codahale/metrics/Timer;
+#count()D
+#totalTime(Ljava/util/concurrent/TimeUnit;)D
+#baseTimeUnit()Ljava/util/concurrent/TimeUnit;

+###io/micrometer/core/instrument/dropwizard/DropwizardTimer
@0.8.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/util/MeterId;Lcom/codahale/metrics/Timer;Lio/micrometer/core/instrument/Clock;)V
+#record(JLjava/util/concurrent/TimeUnit;)V
+#count()J
+#totalTime(Ljava/util/concurrent/TimeUnit;)D
+#measure()Ljava/util/List;
@0.10.0.RELEASE
-#<init>(Lio/micrometer/core/instrument/util/MeterId;Lcom/codahale/metrics/Timer;Lio/micrometer/core/instrument/Clock;)V
-#measure()Ljava/util/List;
@1.0.0-rc.3
+#max(Ljava/util/concurrent/TimeUnit;)D
-#record(JLjava/util/concurrent/TimeUnit;)V

+###io/micrometer/core/instrument/cumulative/CumulativeDistributionSummary
@1.0.0-rc.6
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/histogram/HistogramConfig;)V
+#count()J
+#totalAmount()D
+#max()D
+#measure()Ljava/lang/Iterable;
@1.0.0
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;D)V
-#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/histogram/HistogramConfig;)V
@1.0.3
*#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;D)V[deprecated]
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;DZ)V

+###io/micrometer/core/instrument/cumulative/CumulativeFunctionCounter
@1.0.0-rc.6
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)V
+#count()D

+###io/micrometer/core/instrument/cumulative/CumulativeFunctionTimer
@1.0.0-rc.6
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/function/ToLongFunction;Ljava/util/function/ToDoubleFunction;Ljava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;)V
+#count()D
+#totalTime(Ljava/util/concurrent/TimeUnit;)D
+#getId()Lio/micrometer/core/instrument/Meter$Id;
+#baseTimeUnit()Ljava/util/concurrent/TimeUnit;
+#type()Lio/micrometer/core/instrument/Meter$Type;
@1.8.9
-#getId()Lio/micrometer/core/instrument/Meter$Id;
@1.9.0
+#getId()Lio/micrometer/core/instrument/Meter$Id;
@1.9.3
-#getId()Lio/micrometer/core/instrument/Meter$Id;

+###io/micrometer/core/instrument/cumulative/CumulativeTimer
@1.0.0-rc.6
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/histogram/HistogramConfig;Lio/micrometer/core/instrument/histogram/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;)V
+#count()J
+#totalTime(Ljava/util/concurrent/TimeUnit;)D
+#max(Ljava/util/concurrent/TimeUnit;)D
@1.0.0
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;)V
-#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/histogram/HistogramConfig;Lio/micrometer/core/instrument/histogram/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;)V
@1.0.3
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;Z)V

+###io/micrometer/core/instrument/cumulative/CumulativeCounter
@1.0.0-rc.6
+#<init>(Lio/micrometer/core/instrument/Meter$Id;)V
+#increment(D)V
+#count()D

+###io/micrometer/core/instrument/Gauge
@0.6.3.RELEASE
+#value()D
+#getType()Lio/micrometer/core/instrument/Meter$Type;
@0.10.0.RELEASE
+#measure()Ljava/lang/Iterable;
@0.11.0.RELEASE
+#builder(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
@1.0.0-rc.4
+#type()Lio/micrometer/core/instrument/Meter$Type;
-#getType()Lio/micrometer/core/instrument/Meter$Type;
@1.0.0
-#type()Lio/micrometer/core/instrument/Meter$Type;
@1.1.0
+#builder(Ljava/lang/String;Ljava/util/function/Supplier;)Lio/micrometer/core/instrument/Gauge$Builder;

+###io/micrometer/core/instrument/Gauge$Builder
@0.10.0.RELEASE
+#tags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Gauge$Builder;
+#tags([Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
+#description(Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
+#create()Lio/micrometer/core/instrument/Gauge;
@0.11.0.RELEASE
+#baseUnit(Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
+#register(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Gauge;
-#create()Lio/micrometer/core/instrument/Gauge;
@1.0.0-rc.6
+#tag(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
@1.0.6
+#synthetic(Z)Lio/micrometer/core/instrument/Gauge$Builder;
@1.1.0
+#synthetic(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Gauge$Builder;
+#strongReference(Z)Lio/micrometer/core/instrument/Gauge$Builder;
-#synthetic(Z)Lio/micrometer/core/instrument/Gauge$Builder;

+###io/micrometer/core/instrument/FunctionTimer
@1.0.0-rc.2
+#count()J
+#totalTime(Ljava/util/concurrent/TimeUnit;)D
+#baseTimeUnit()Ljava/util/concurrent/TimeUnit;
+#measure()Ljava/lang/Iterable;
@1.0.0-rc.3
+#mean(Ljava/util/concurrent/TimeUnit;)D
+#builder(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToLongFunction;Ljava/util/function/ToDoubleFunction;Ljava/util/concurrent/TimeUnit;)Lio/micrometer/core/instrument/FunctionTimer$Builder;
@1.0.0-rc.6
+#count()D
-#count()J

+###io/micrometer/core/instrument/Timer$Sample
@1.0.0-rc.8
+#stop(Lio/micrometer/core/instrument/Timer;)J
@1.4.0
+#stop(Lio/micrometer/core/instrument/MeterRegistry;Lio/micrometer/core/instrument/Timer$Builder;)J
+#tags([Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Sample;
+#tags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Timer$Sample;
@1.6.0
-#stop(Lio/micrometer/core/instrument/MeterRegistry;Lio/micrometer/core/instrument/Timer$Builder;)J
-#tags([Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Sample;
-#tags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Timer$Sample;

+###io/micrometer/core/annotation/TimedSet
@0.6.3.RELEASE
+#value()[Lio/micrometer/core/annotation/Timed;

+###io/micrometer/core/annotation/Incubating
@1.0.0-rc.3
+#since()Ljava/lang/String;

+###io/micrometer/core/annotation/Timed
@0.6.3.RELEASE
+#value()Ljava/lang/String;
+#extraTags()[Ljava/lang/String;
+#longTask()Z
+#quantiles()[D
@0.11.0.RELEASE
+#percentiles()Z
@1.0.0-rc.3
+#percentiles()[D
+#histogram()Z
-#quantiles()[D
-#percentiles()Z
@1.0.0-rc.8
+#description()Ljava/lang/String;

+###io/micrometer/core/aop/TimedAspect
@1.0.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;)V
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/function/Function;)V
+#timedMethod(Lorg/aspectj/lang/ProceedingJoinPoint;)Ljava/lang/Object;
@1.2.0
+#<init>()V
@1.7.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/function/Predicate;)V
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/function/Function;Ljava/util/function/Predicate;)V
@1.9.0
+#timedClass(Lorg/aspectj/lang/ProceedingJoinPoint;)Ljava/lang/Object;

+###io/micrometer/core/lang/NonNullFields
@1.0.0-rc.8

+###io/micrometer/core/lang/NonNull
@1.0.0-rc.8

+###io/micrometer/core/lang/NonNullApi
@1.0.0-rc.8

+###io/micrometer/core/lang/Nullable
@1.0.0-rc.8

+###io/micrometer/shaded/org/pcollections/PStack
@1.0.4
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PStack;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PStack;
+#with(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PStack;
+#plus(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PStack;
+#plusAll(ILjava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PStack;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PStack;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PStack;
+#minus(I)Lio/micrometer/shaded/org/pcollections/PStack;
+#subList(II)Lio/micrometer/shaded/org/pcollections/PStack;
+#subList(I)Lio/micrometer/shaded/org/pcollections/PStack;
+#subList(II)Lio/micrometer/shaded/org/pcollections/PSequence;
+#minus(I)Lio/micrometer/shaded/org/pcollections/PSequence;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#plusAll(ILjava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#plus(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#with(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#subList(II)Ljava/util/List;
@1.1.0
-#subList(II)Lio/micrometer/shaded/org/pcollections/PSequence;
-#minus(I)Lio/micrometer/shaded/org/pcollections/PSequence;
-#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSequence;
-#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
-#plusAll(ILjava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSequence;
-#plus(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
-#with(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
-#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSequence;
-#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
-#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
-#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
-#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
-#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
-#subList(II)Ljava/util/List;
@1.3.4
-###io/micrometer/shaded/org/pcollections/PStack

+###io/micrometer/shaded/org/pcollections/PSequence
@1.0.4
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#with(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#plus(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#plusAll(ILjava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#minus(I)Lio/micrometer/shaded/org/pcollections/PSequence;
+#subList(II)Lio/micrometer/shaded/org/pcollections/PSequence;
+#addAll(ILjava/util/Collection;)Z[deprecated]
+#set(ILjava/lang/Object;)Ljava/lang/Object;[deprecated]
+#add(ILjava/lang/Object;)V[deprecated]
+#remove(I)Ljava/lang/Object;[deprecated]
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#subList(II)Ljava/util/List;
@1.1.0
-#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
-#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
-#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
-#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
-#subList(II)Ljava/util/List;
@1.3.4
-###io/micrometer/shaded/org/pcollections/PSequence

+###io/micrometer/shaded/org/pcollections/HashTreePBag
@1.0.4
+#empty()Lio/micrometer/shaded/org/pcollections/MapPBag;
+#singleton(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/MapPBag;
+#from(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/MapPBag;
@1.3.4
-###io/micrometer/shaded/org/pcollections/HashTreePBag

+###io/micrometer/shaded/org/pcollections/POrderedSet
@1.0.4
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/POrderedSet;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/POrderedSet;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/POrderedSet;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/POrderedSet;
+#get(I)Ljava/lang/Object;
+#indexOf(Ljava/lang/Object;)I
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSet;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSet;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSet;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSet;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
@1.1.0
-#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSet;
-#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSet;
-#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSet;
-#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSet;
-#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
-#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
-#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
-#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
@1.3.4
-###io/micrometer/shaded/org/pcollections/POrderedSet

+###io/micrometer/shaded/org/pcollections/PVector
@1.0.4
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PVector;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PVector;
+#with(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PVector;
+#plus(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PVector;
+#plusAll(ILjava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PVector;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PVector;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PVector;
+#minus(I)Lio/micrometer/shaded/org/pcollections/PVector;
+#subList(II)Lio/micrometer/shaded/org/pcollections/PVector;
+#subList(II)Lio/micrometer/shaded/org/pcollections/PSequence;
+#minus(I)Lio/micrometer/shaded/org/pcollections/PSequence;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#plusAll(ILjava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#plus(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#with(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#subList(II)Ljava/util/List;
@1.1.0
-#subList(II)Lio/micrometer/shaded/org/pcollections/PSequence;
-#minus(I)Lio/micrometer/shaded/org/pcollections/PSequence;
-#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSequence;
-#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
-#plusAll(ILjava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSequence;
-#plus(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
-#with(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
-#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSequence;
-#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
-#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
-#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
-#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
-#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
-#subList(II)Ljava/util/List;
@1.3.4
-###io/micrometer/shaded/org/pcollections/PVector

+###io/micrometer/shaded/org/pcollections/HashPMap
@1.0.4
+#empty(Lio/micrometer/shaded/org/pcollections/PMap;)Lio/micrometer/shaded/org/pcollections/HashPMap;
+#entrySet()Ljava/util/Set;
+#size()I
+#containsKey(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#plusAll(Ljava/util/Map;)Lio/micrometer/shaded/org/pcollections/HashPMap;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/HashPMap;
+#plus(Ljava/lang/Object;Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/HashPMap;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/HashPMap;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PMap;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PMap;
+#plusAll(Ljava/util/Map;)Lio/micrometer/shaded/org/pcollections/PMap;
+#plus(Ljava/lang/Object;Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PMap;
@1.3.4
-###io/micrometer/shaded/org/pcollections/HashPMap

+###io/micrometer/shaded/org/pcollections/OrderedPSet
@1.0.4
+#empty()Lio/micrometer/shaded/org/pcollections/OrderedPSet;
+#from(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/OrderedPSet;
+#singleton(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/OrderedPSet;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/OrderedPSet;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/OrderedPSet;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/OrderedPSet;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/OrderedPSet;
+#iterator()Ljava/util/Iterator;
+#size()I
+#get(I)Ljava/lang/Object;
+#indexOf(Ljava/lang/Object;)I
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/POrderedSet;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/POrderedSet;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/POrderedSet;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/POrderedSet;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSet;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSet;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSet;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSet;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
@1.3.4
-###io/micrometer/shaded/org/pcollections/OrderedPSet

+###io/micrometer/shaded/org/pcollections/HashTreePMap
@1.0.4
+#empty()Lio/micrometer/shaded/org/pcollections/HashPMap;
+#singleton(Ljava/lang/Object;Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/HashPMap;
+#from(Ljava/util/Map;)Lio/micrometer/shaded/org/pcollections/HashPMap;
@1.3.4
-###io/micrometer/shaded/org/pcollections/HashTreePMap

+###io/micrometer/shaded/org/pcollections/Empty
@1.0.4
+#stack()Lio/micrometer/shaded/org/pcollections/PStack;
+#queue()Lio/micrometer/shaded/org/pcollections/PQueue;
+#vector()Lio/micrometer/shaded/org/pcollections/PVector;
+#set()Lio/micrometer/shaded/org/pcollections/PSet;
+#orderedSet()Lio/micrometer/shaded/org/pcollections/POrderedSet;
+#bag()Lio/micrometer/shaded/org/pcollections/PBag;
+#map()Lio/micrometer/shaded/org/pcollections/PMap;
@1.3.4
-###io/micrometer/shaded/org/pcollections/Empty

+###io/micrometer/shaded/org/pcollections/HashTreePSet
@1.0.4
+#empty()Lio/micrometer/shaded/org/pcollections/MapPSet;
+#singleton(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/MapPSet;
+#from(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/MapPSet;
@1.3.4
-###io/micrometer/shaded/org/pcollections/HashTreePSet

+###io/micrometer/shaded/org/pcollections/PSet
@1.0.4
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSet;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSet;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSet;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSet;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
@1.1.0
-#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
-#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
-#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
-#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
@1.3.4
-###io/micrometer/shaded/org/pcollections/PSet

+###io/micrometer/shaded/org/pcollections/PQueue
@1.0.4
+#minus()Lio/micrometer/shaded/org/pcollections/PQueue;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PQueue;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PQueue;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#offer(Ljava/lang/Object;)Z[deprecated]
+#poll()Ljava/lang/Object;[deprecated]
+#remove()Ljava/lang/Object;[deprecated]
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
@1.1.0
-#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
-#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
@1.3.4
-###io/micrometer/shaded/org/pcollections/PQueue

+###io/micrometer/shaded/org/pcollections/PCollection
@1.0.4
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#add(Ljava/lang/Object;)Z[deprecated]
+#remove(Ljava/lang/Object;)Z[deprecated]
+#addAll(Ljava/util/Collection;)Z[deprecated]
+#removeAll(Ljava/util/Collection;)Z[deprecated]
+#retainAll(Ljava/util/Collection;)Z[deprecated]
+#clear()V[deprecated]
@1.3.4
-###io/micrometer/shaded/org/pcollections/PCollection

+###io/micrometer/shaded/org/pcollections/PMap
@1.0.4
+#plus(Ljava/lang/Object;Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PMap;
+#plusAll(Ljava/util/Map;)Lio/micrometer/shaded/org/pcollections/PMap;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PMap;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PMap;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
+#remove(Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
+#putAll(Ljava/util/Map;)V[deprecated]
+#clear()V[deprecated]
@1.3.4
-###io/micrometer/shaded/org/pcollections/PMap

+###io/micrometer/shaded/org/pcollections/MapPBag
@1.0.4
+#empty(Lio/micrometer/shaded/org/pcollections/PMap;)Lio/micrometer/shaded/org/pcollections/MapPBag;
+#size()I
+#iterator()Ljava/util/Iterator;
+#contains(Ljava/lang/Object;)Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/MapPBag;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/MapPBag;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/MapPBag;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/MapPBag;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PBag;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PBag;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PBag;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PBag;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
@1.3.4
-###io/micrometer/shaded/org/pcollections/MapPBag

+###io/micrometer/shaded/org/pcollections/ConsPStack
@1.0.4
+#empty()Lio/micrometer/shaded/org/pcollections/ConsPStack;
+#singleton(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/ConsPStack;
+#from(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/ConsPStack;
+#size()I
+#listIterator(I)Ljava/util/ListIterator;
+#subList(II)Lio/micrometer/shaded/org/pcollections/ConsPStack;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/ConsPStack;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/ConsPStack;
+#plus(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/ConsPStack;
+#plusAll(ILjava/util/Collection;)Lio/micrometer/shaded/org/pcollections/ConsPStack;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/ConsPStack;
+#minus(I)Lio/micrometer/shaded/org/pcollections/ConsPStack;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/ConsPStack;
+#with(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/ConsPStack;
+#subList(I)Lio/micrometer/shaded/org/pcollections/ConsPStack;
+#subList(II)Ljava/util/List;
+#subList(I)Lio/micrometer/shaded/org/pcollections/PStack;
+#subList(II)Lio/micrometer/shaded/org/pcollections/PStack;
+#minus(I)Lio/micrometer/shaded/org/pcollections/PStack;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PStack;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PStack;
+#plusAll(ILjava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PStack;
+#plus(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PStack;
+#with(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PStack;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PStack;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PStack;
+#subList(II)Lio/micrometer/shaded/org/pcollections/PSequence;
+#minus(I)Lio/micrometer/shaded/org/pcollections/PSequence;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#plusAll(ILjava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#plus(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#with(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
@1.3.4
-###io/micrometer/shaded/org/pcollections/ConsPStack

+###io/micrometer/shaded/org/pcollections/AmortizedPQueue
@1.0.4
+#empty()Lio/micrometer/shaded/org/pcollections/AmortizedPQueue;
+#iterator()Ljava/util/Iterator;
+#size()I
+#peek()Ljava/lang/Object;
+#minus()Lio/micrometer/shaded/org/pcollections/AmortizedPQueue;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/AmortizedPQueue;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/AmortizedPQueue;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#offer(Ljava/lang/Object;)Z
+#poll()Ljava/lang/Object;
+#main([Ljava/lang/String;)V
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PQueue;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PQueue;
+#minus()Lio/micrometer/shaded/org/pcollections/PQueue;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
@1.3.4
-###io/micrometer/shaded/org/pcollections/AmortizedPQueue

+###io/micrometer/shaded/org/pcollections/IntTreePMap
@1.0.4
+#empty()Lio/micrometer/shaded/org/pcollections/IntTreePMap;
+#singleton(Ljava/lang/Integer;Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/IntTreePMap;
+#from(Ljava/util/Map;)Lio/micrometer/shaded/org/pcollections/IntTreePMap;
+#entrySet()Ljava/util/Set;
+#size()I
+#containsKey(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#plus(Ljava/lang/Integer;Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/IntTreePMap;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/IntTreePMap;
+#plusAll(Ljava/util/Map;)Lio/micrometer/shaded/org/pcollections/IntTreePMap;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/IntTreePMap;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PMap;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PMap;
+#plusAll(Ljava/util/Map;)Lio/micrometer/shaded/org/pcollections/PMap;
+#plus(Ljava/lang/Object;Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PMap;
@1.1.6
+#minusRange(II)Lio/micrometer/shaded/org/pcollections/IntTreePMap;
@1.2.0
-#minusRange(II)Lio/micrometer/shaded/org/pcollections/IntTreePMap;
@1.2.1
+#minusRange(II)Lio/micrometer/shaded/org/pcollections/IntTreePMap;
@1.3.4
-###io/micrometer/shaded/org/pcollections/IntTreePMap

+###io/micrometer/shaded/org/pcollections/MapPSet
@1.0.4
+#from(Lio/micrometer/shaded/org/pcollections/PMap;)Lio/micrometer/shaded/org/pcollections/MapPSet;
+#from(Lio/micrometer/shaded/org/pcollections/PMap;Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/MapPSet;
+#from(Lio/micrometer/shaded/org/pcollections/PMap;Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/MapPSet;
+#iterator()Ljava/util/Iterator;
+#size()I
+#contains(Ljava/lang/Object;)Z
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/MapPSet;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/MapPSet;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/MapPSet;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/MapPSet;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSet;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSet;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSet;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSet;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
@1.3.4
-###io/micrometer/shaded/org/pcollections/MapPSet

+###io/micrometer/shaded/org/pcollections/TreePVector
@1.0.4
+#empty()Lio/micrometer/shaded/org/pcollections/TreePVector;
+#singleton(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/TreePVector;
+#from(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/TreePVector;
+#size()I
+#get(I)Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#subList(II)Lio/micrometer/shaded/org/pcollections/TreePVector;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/TreePVector;
+#plus(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/TreePVector;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/TreePVector;
+#minus(I)Lio/micrometer/shaded/org/pcollections/TreePVector;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/TreePVector;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/TreePVector;
+#plusAll(ILjava/util/Collection;)Lio/micrometer/shaded/org/pcollections/TreePVector;
+#with(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PVector;
+#subList(II)Ljava/util/List;
+#subList(II)Lio/micrometer/shaded/org/pcollections/PVector;
+#minus(I)Lio/micrometer/shaded/org/pcollections/PVector;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PVector;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PVector;
+#plusAll(ILjava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PVector;
+#plus(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PVector;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PVector;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PVector;
+#subList(II)Lio/micrometer/shaded/org/pcollections/PSequence;
+#minus(I)Lio/micrometer/shaded/org/pcollections/PSequence;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#plusAll(ILjava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#plus(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#with(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
@1.3.4
-###io/micrometer/shaded/org/pcollections/TreePVector

+###io/micrometer/shaded/org/pcollections/PBag
@1.0.4
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PBag;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PBag;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PBag;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PBag;
+#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
+#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
@1.1.0
-#minusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
-#minus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
-#plusAll(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PCollection;
-#plus(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PCollection;
@1.3.4
-###io/micrometer/shaded/org/pcollections/PBag

+###io/micrometer/core/instrument/MultiGauge$Builder
@1.1.0
+#tags([Ljava/lang/String;)Lio/micrometer/core/instrument/MultiGauge$Builder;
+#tags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/MultiGauge$Builder;
+#tag(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/MultiGauge$Builder;
+#description(Ljava/lang/String;)Lio/micrometer/core/instrument/MultiGauge$Builder;
+#baseUnit(Ljava/lang/String;)Lio/micrometer/core/instrument/MultiGauge$Builder;
+#register(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/MultiGauge;

+###io/micrometer/core/instrument/MultiGauge$Row
@1.1.0
+#of(Lio/micrometer/core/instrument/Tags;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/MultiGauge$Row;
+#of(Lio/micrometer/core/instrument/Tags;Ljava/lang/Number;)Lio/micrometer/core/instrument/MultiGauge$Row;
+#of(Lio/micrometer/core/instrument/Tags;Ljava/util/function/Supplier;)Lio/micrometer/core/instrument/MultiGauge$Row;

+###io/micrometer/core/instrument/util/JsonUtils
@1.1.0
+#<init>()V
+#prettyPrint(Ljava/lang/String;)Ljava/lang/String;
@1.2.0
-#<init>()V
@1.6.11
*#prettyPrint(Ljava/lang/String;)Ljava/lang/String;[deprecated]
@1.7.4
*#prettyPrint(Ljava/lang/String;)Ljava/lang/String;[deprecated]
@1.8.0
-###io/micrometer/core/instrument/util/JsonUtils

+###io/micrometer/core/instrument/util/StringUtils
@1.1.0
+#isBlank(Ljava/lang/String;)Z
+#isNotBlank(Ljava/lang/String;)Z
+#isEmpty(Ljava/lang/String;)Z
+#isNotEmpty(Ljava/lang/String;)Z
+#truncate(Ljava/lang/String;I)Ljava/lang/String;
@1.9.0
+#truncate(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;

+###io/micrometer/core/instrument/util/IOUtils
@1.1.0
+#toString(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Ljava/lang/String;
+#toString(Ljava/io/InputStream;)Ljava/lang/String;

+###io/micrometer/core/instrument/util/NamedThreadFactory
@1.1.0
+#<init>(Ljava/lang/String;)V
+#newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;

+###io/micrometer/core/instrument/binder/jetty/JettyServerThreadPoolMetrics
@1.1.0
+#<init>(Lorg/eclipse/jetty/util/thread/ThreadPool;Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V

+###io/micrometer/core/instrument/binder/jetty/InstrumentedQueuedThreadPool
@1.1.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/Iterable;)V
@1.5.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/Iterable;I)V
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/Iterable;II)V
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/Iterable;III)V
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/Iterable;IIILjava/util/concurrent/BlockingQueue;)V

+###io/micrometer/core/instrument/binder/jvm/DiskSpaceMetrics
@1.1.0
+#<init>(Ljava/io/File;)V
+#<init>(Ljava/io/File;Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V

+###io/micrometer/core/instrument/binder/kafka/KafkaConsumerMetrics
@1.1.0
+#<init>()V
+#<init>(Ljava/lang/Iterable;)V
+#<init>(Ljavax/management/MBeanServer;Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.1.4
+#close()V

+###io/micrometer/core/instrument/binder/db/PostgreSQLDatabaseMetrics
@1.1.0
+#<init>(Ljavax/sql/DataSource;Ljava/lang/String;)V
+#<init>(Ljavax/sql/DataSource;Ljava/lang/String;Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V

+###io/micrometer/core/instrument/binder/logging/Log4j2Metrics
@1.1.0
+#<init>()V
+#<init>(Ljava/lang/Iterable;)V
+#<init>(Ljava/lang/Iterable;Lorg/apache/logging/log4j/core/LoggerContext;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
+#close()V

+###io/micrometer/core/instrument/push/PushMeterRegistry
@1.1.0
+#start()V[deprecated]
+#start(Ljava/util/concurrent/ThreadFactory;)V
+#stop()V
+#close()V

+###io/micrometer/core/instrument/push/PushRegistryConfig
@1.1.0
+#step()Ljava/time/Duration;
+#enabled()Z
+#numThreads()I
+#connectTimeout()Ljava/time/Duration;[deprecated]
+#readTimeout()Ljava/time/Duration;[deprecated]
+#batchSize()I
@1.1.13
*#numThreads()I[deprecated]
@1.3.8
*#numThreads()I[deprecated]
@1.4.2
*#numThreads()I[deprecated]
@1.5.0
+#validate()Lio/micrometer/core/instrument/config/validate/Validated;
+#validate(Lio/micrometer/core/instrument/push/PushRegistryConfig;)Lio/micrometer/core/instrument/config/validate/Validated;

+###io/micrometer/core/instrument/MultiGauge
@1.1.0
+#builder(Ljava/lang/String;)Lio/micrometer/core/instrument/MultiGauge$Builder;
+#register(Ljava/lang/Iterable;)V
+#register(Ljava/lang/Iterable;Z)V

+###io/micrometer/core/instrument/logging/LoggingMeterRegistry$Builder
@1.1.0
+#clock(Lio/micrometer/core/instrument/Clock;)Lio/micrometer/core/instrument/logging/LoggingMeterRegistry$Builder;
+#threadFactory(Ljava/util/concurrent/ThreadFactory;)Lio/micrometer/core/instrument/logging/LoggingMeterRegistry$Builder;
+#loggingSink(Ljava/util/function/Consumer;)Lio/micrometer/core/instrument/logging/LoggingMeterRegistry$Builder;
+#build()Lio/micrometer/core/instrument/logging/LoggingMeterRegistry;
@1.2.0
+#meterIdPrinter(Ljava/util/function/Function;)Lio/micrometer/core/instrument/logging/LoggingMeterRegistry$Builder;

+###io/micrometer/core/instrument/logging/LoggingMeterRegistry
@1.1.0
+#<init>()V
+#<init>(Lio/micrometer/core/instrument/logging/LoggingRegistryConfig;Lio/micrometer/core/instrument/Clock;)V
+#start(Ljava/util/concurrent/ThreadFactory;)V
+#builder(Lio/micrometer/core/instrument/logging/LoggingRegistryConfig;)Lio/micrometer/core/instrument/logging/LoggingMeterRegistry$Builder;
@1.4.0
-#start(Ljava/util/concurrent/ThreadFactory;)V

+###io/micrometer/core/instrument/logging/LoggingRegistryConfig
@1.1.0
+#prefix()Ljava/lang/String;
+#logInactive()Z

+###io/micrometer/core/ipc/http/HttpUrlConnectionSender
@1.1.0
+#<init>(Ljava/time/Duration;Ljava/time/Duration;)V
+#<init>()V
+#send(Lio/micrometer/core/ipc/http/HttpSender$Request;)Lio/micrometer/core/ipc/http/HttpSender$Response;
@1.2.0
+#<init>(Ljava/time/Duration;Ljava/time/Duration;Ljava/net/Proxy;)V

+###io/micrometer/core/ipc/http/OkHttpSender
@1.1.0
+#<init>(Lokhttp3/OkHttpClient;)V
+#<init>()V
+#send(Lio/micrometer/core/ipc/http/HttpSender$Request;)Lio/micrometer/core/ipc/http/HttpSender$Response;

+###io/micrometer/core/ipc/http/HttpSender$Request$Builder
@1.1.0
+#withHeader(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/ipc/http/HttpSender$Request$Builder;
+#withBasicAuthentication(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/ipc/http/HttpSender$Request$Builder;
+#withJsonContent(Ljava/lang/String;)Lio/micrometer/core/ipc/http/HttpSender$Request$Builder;
+#withPlainText(Ljava/lang/String;)Lio/micrometer/core/ipc/http/HttpSender$Request$Builder;
+#withContent(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/ipc/http/HttpSender$Request$Builder;
+#withContent(Ljava/lang/String;[B)Lio/micrometer/core/ipc/http/HttpSender$Request$Builder;
+#acceptJson()Lio/micrometer/core/ipc/http/HttpSender$Request$Builder;
+#accept(Ljava/lang/String;)Lio/micrometer/core/ipc/http/HttpSender$Request$Builder;
+#withMethod(Lio/micrometer/core/ipc/http/HttpSender$Method;)Lio/micrometer/core/ipc/http/HttpSender$Request$Builder;
+#compress()Lio/micrometer/core/ipc/http/HttpSender$Request$Builder;
+#compressWhen(Ljava/util/function/Supplier;)Lio/micrometer/core/ipc/http/HttpSender$Request$Builder;
+#print()Lio/micrometer/core/ipc/http/HttpSender$Request$Builder;
+#send()Lio/micrometer/core/ipc/http/HttpSender$Response;
@1.8.0
+#withAuthentication(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/ipc/http/HttpSender$Request$Builder;

+###io/micrometer/core/ipc/http/HttpSender
@1.1.0
+#send(Lio/micrometer/core/ipc/http/HttpSender$Request;)Lio/micrometer/core/ipc/http/HttpSender$Response;
+#post(Ljava/lang/String;)Lio/micrometer/core/ipc/http/HttpSender$Request$Builder;
+#head(Ljava/lang/String;)Lio/micrometer/core/ipc/http/HttpSender$Request$Builder;
+#put(Ljava/lang/String;)Lio/micrometer/core/ipc/http/HttpSender$Request$Builder;
+#get(Ljava/lang/String;)Lio/micrometer/core/ipc/http/HttpSender$Request$Builder;
+#delete(Ljava/lang/String;)Lio/micrometer/core/ipc/http/HttpSender$Request$Builder;
+#options(Ljava/lang/String;)Lio/micrometer/core/ipc/http/HttpSender$Request$Builder;
+#newRequest(Ljava/lang/String;)Lio/micrometer/core/ipc/http/HttpSender$Request$Builder;

+###io/micrometer/core/ipc/http/HttpSender$Method
@1.1.0
+#values()[Lio/micrometer/core/ipc/http/HttpSender$Method;
+#valueOf(Ljava/lang/String;)Lio/micrometer/core/ipc/http/HttpSender$Method;

+###io/micrometer/core/ipc/http/ReactorNettySender
@1.1.0
+#<init>(Lreactor/netty/http/client/HttpClient;)V
+#<init>()V
+#send(Lio/micrometer/core/ipc/http/HttpSender$Request;)Lio/micrometer/core/ipc/http/HttpSender$Response;
@1.9.0
-###io/micrometer/core/ipc/http/ReactorNettySender

+###io/micrometer/core/ipc/http/HttpSender$Request
@1.1.0
+#<init>(Ljava/net/URL;[BLio/micrometer/core/ipc/http/HttpSender$Method;Ljava/util/Map;)V
+#getUrl()Ljava/net/URL;
+#getEntity()[B
+#getMethod()Lio/micrometer/core/ipc/http/HttpSender$Method;
+#getRequestHeaders()Ljava/util/Map;
+#build(Ljava/lang/String;Lio/micrometer/core/ipc/http/HttpSender;)Lio/micrometer/core/ipc/http/HttpSender$Request$Builder;
+#toString()Ljava/lang/String;

+###io/micrometer/core/ipc/http/HttpSender$Response
@1.1.0
+#<init>(ILjava/lang/String;)V
+#code()I
+#body()Ljava/lang/String;
+#onSuccess(Ljava/util/function/Consumer;)Lio/micrometer/core/ipc/http/HttpSender$Response;
+#onError(Ljava/util/function/Consumer;)Lio/micrometer/core/ipc/http/HttpSender$Response;
+#isSuccessful()Z

+###io/micrometer/core/annotation/Counted
@1.2.0
+#value()Ljava/lang/String;
+#recordFailuresOnly()Z
+#description()Ljava/lang/String;
@1.3.4
+#extraTags()[Ljava/lang/String;
@1.3.5
-#extraTags()[Ljava/lang/String;
@1.4.0
+#extraTags()[Ljava/lang/String;

+###io/micrometer/core/aop/CountedAspect
@1.2.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;)V
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/function/Function;)V
+#interceptAndRecord(Lorg/aspectj/lang/ProceedingJoinPoint;Lio/micrometer/core/annotation/Counted;)Ljava/lang/Object;
@1.7.0
+#<init>()V
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/function/Predicate;)V
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/function/Function;Ljava/util/function/Predicate;)V

+###io/micrometer/core/instrument/AbstractTimerBuilder
@1.6.0
+#tags([Ljava/lang/String;)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#tags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#tag(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#publishPercentiles([D)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#percentilePrecision(Ljava/lang/Integer;)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#publishPercentileHistogram()Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#publishPercentileHistogram(Ljava/lang/Boolean;)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#sla([Ljava/time/Duration;)Lio/micrometer/core/instrument/AbstractTimerBuilder;[deprecated]
+#serviceLevelObjectives([Ljava/time/Duration;)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#minimumExpectedValue(Ljava/time/Duration;)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#maximumExpectedValue(Ljava/time/Duration;)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#distributionStatisticExpiry(Ljava/time/Duration;)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#distributionStatisticBufferLength(Ljava/lang/Integer;)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#pauseDetector(Lio/micrometer/core/instrument/distribution/pause/PauseDetector;)Lio/micrometer/core/instrument/AbstractTimerBuilder;
+#description(Ljava/lang/String;)Lio/micrometer/core/instrument/AbstractTimerBuilder;

+###io/micrometer/core/instrument/binder/BaseUnits
@1.0.11
@1.1.0
-###io/micrometer/core/instrument/binder/BaseUnits

+###io/micrometer/core/instrument/binder/cache/CaffeineStatsCounter
@1.7.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/String;)V
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/String;Ljava/lang/Iterable;)V
+#registerSizeMetric(Lcom/github/benmanes/caffeine/cache/Cache;)V
+#recordHits(I)V
+#recordMisses(I)V
+#recordLoadSuccess(J)V
+#recordLoadFailure(J)V
+#recordEviction()V
+#recordEviction(ILcom/github/benmanes/caffeine/cache/RemovalCause;)V
+#snapshot()Lcom/github/benmanes/caffeine/cache/stats/CacheStats;
+#toString()Ljava/lang/String;

+###io/micrometer/core/instrument/binder/commonspool2/CommonsObjectPool2Metrics
@1.6.0
+#<init>()V
+#<init>(Ljava/lang/Iterable;)V
+#<init>(Ljavax/management/MBeanServer;Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
+#close()V

+###io/micrometer/core/instrument/binder/db/MetricsDSLContext
@1.3.4
+#withMetrics(Lorg/jooq/DSLContext;Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/binder/db/MetricsDSLContext;
+#time(Lorg/jooq/Query;)Lorg/jooq/Query;
+#time(Lorg/jooq/Configuration;)Lorg/jooq/Configuration;
+#timeCoercable(Ljava/lang/Object;)Ljava/lang/Object;
+#tag(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/DSLContext;
+#tag(Lio/micrometer/core/instrument/Tag;)Lorg/jooq/DSLContext;
+#tags(Ljava/lang/Iterable;)Lorg/jooq/DSLContext;
+#close()V
+#map(Lorg/jooq/Schema;)Lorg/jooq/Schema;
+#map(Lorg/jooq/Table;)Lorg/jooq/Table;
+#parser()Lorg/jooq/Parser;
+#parsingConnection()Ljava/sql/Connection;
+#parsingDataSource()Ljavax/sql/DataSource;
+#diagnosticsConnection()Ljava/sql/Connection;
+#diagnosticsDataSource()Ljavax/sql/DataSource;
+#meta()Lorg/jooq/Meta;
+#meta(Ljava/sql/DatabaseMetaData;)Lorg/jooq/Meta;
+#meta([Lorg/jooq/Catalog;)Lorg/jooq/Meta;
+#meta([Lorg/jooq/Schema;)Lorg/jooq/Meta;
+#meta([Lorg/jooq/Table;)Lorg/jooq/Meta;
+#meta(Lorg/jooq/util/xml/jaxb/InformationSchema;)Lorg/jooq/Meta;
+#meta([Lorg/jooq/Source;)Lorg/jooq/Meta;
+#informationSchema(Lorg/jooq/Catalog;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#informationSchema([Lorg/jooq/Catalog;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#informationSchema(Lorg/jooq/Schema;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#informationSchema([Lorg/jooq/Schema;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#informationSchema(Lorg/jooq/Table;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#informationSchema([Lorg/jooq/Table;)Lorg/jooq/util/xml/jaxb/InformationSchema;
+#explain(Lorg/jooq/Query;)Lorg/jooq/Explain;
+#transactionResult(Lorg/jooq/TransactionalCallable;)Ljava/lang/Object;
+#transactionResult(Lorg/jooq/ContextTransactionalCallable;)Ljava/lang/Object;
+#transaction(Lorg/jooq/TransactionalRunnable;)V
+#transaction(Lorg/jooq/ContextTransactionalRunnable;)V
+#transactionResultAsync(Lorg/jooq/TransactionalCallable;)Ljava/util/concurrent/CompletionStage;
+#transactionAsync(Lorg/jooq/TransactionalRunnable;)Ljava/util/concurrent/CompletionStage;
+#transactionResultAsync(Ljava/util/concurrent/Executor;Lorg/jooq/TransactionalCallable;)Ljava/util/concurrent/CompletionStage;
+#transactionAsync(Ljava/util/concurrent/Executor;Lorg/jooq/TransactionalRunnable;)Ljava/util/concurrent/CompletionStage;
+#connectionResult(Lorg/jooq/ConnectionCallable;)Ljava/lang/Object;
+#connection(Lorg/jooq/ConnectionRunnable;)V
+#mockResult(Lorg/jooq/tools/jdbc/MockDataProvider;Lorg/jooq/tools/jdbc/MockCallable;)Ljava/lang/Object;
+#mock(Lorg/jooq/tools/jdbc/MockDataProvider;Lorg/jooq/tools/jdbc/MockRunnable;)V
+#renderContext()Lorg/jooq/RenderContext;[deprecated]
+#render(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#renderNamedParams(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#renderNamedOrInlinedParams(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#renderInlined(Lorg/jooq/QueryPart;)Ljava/lang/String;
+#extractBindValues(Lorg/jooq/QueryPart;)Ljava/util/List;
+#extractParams(Lorg/jooq/QueryPart;)Ljava/util/Map;
+#extractParam(Lorg/jooq/QueryPart;Ljava/lang/String;)Lorg/jooq/Param;
+#bindContext(Ljava/sql/PreparedStatement;)Lorg/jooq/BindContext;[deprecated]
+#bind(Lorg/jooq/QueryPart;Ljava/sql/PreparedStatement;)I[deprecated]
+#attach([Lorg/jooq/Attachable;)V
+#attach(Ljava/util/Collection;)V
+#loadInto(Lorg/jooq/Table;)Lorg/jooq/LoaderOptionsStep;
+#queries([Lorg/jooq/Query;)Lorg/jooq/Queries;
+#queries(Ljava/util/Collection;)Lorg/jooq/Queries;
+#begin([Lorg/jooq/Statement;)Lorg/jooq/Block;
+#begin(Ljava/util/Collection;)Lorg/jooq/Block;
+#query(Lorg/jooq/SQL;)Lorg/jooq/RowCountQuery;
+#query(Ljava/lang/String;)Lorg/jooq/RowCountQuery;
+#query(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/RowCountQuery;
+#query(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/RowCountQuery;
+#fetch(Lorg/jooq/SQL;)Lorg/jooq/Result;
+#fetch(Ljava/lang/String;)Lorg/jooq/Result;
+#fetch(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Result;
+#fetch(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Result;
+#fetchLazy(Lorg/jooq/SQL;)Lorg/jooq/Cursor;
+#fetchLazy(Ljava/lang/String;)Lorg/jooq/Cursor;
+#fetchLazy(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Cursor;
+#fetchLazy(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Cursor;
+#fetchAsync(Lorg/jooq/SQL;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/lang/String;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Lorg/jooq/SQL;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Ljava/lang/String;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/concurrent/CompletionStage;
+#fetchStream(Lorg/jooq/SQL;)Ljava/util/stream/Stream;
+#fetchStream(Ljava/lang/String;)Ljava/util/stream/Stream;
+#fetchStream(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/stream/Stream;
+#fetchStream(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/stream/Stream;
+#fetchMany(Lorg/jooq/SQL;)Lorg/jooq/Results;
+#fetchMany(Ljava/lang/String;)Lorg/jooq/Results;
+#fetchMany(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Results;
+#fetchMany(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Results;
+#fetchOne(Lorg/jooq/SQL;)Lorg/jooq/Record;
+#fetchOne(Ljava/lang/String;)Lorg/jooq/Record;
+#fetchOne(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Record;
+#fetchOne(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/SQL;)Lorg/jooq/Record;
+#fetchSingle(Ljava/lang/String;)Lorg/jooq/Record;
+#fetchSingle(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/Record;
+#fetchSingle(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/Record;
+#fetchOptional(Lorg/jooq/SQL;)Ljava/util/Optional;
+#fetchOptional(Ljava/lang/String;)Ljava/util/Optional;
+#fetchOptional(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Optional;
+#fetchOptional(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/Optional;
+#fetchValue(Lorg/jooq/SQL;)Ljava/lang/Object;
+#fetchValue(Ljava/lang/String;)Ljava/lang/Object;
+#fetchValue(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#fetchValue(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/lang/Object;
+#fetchOptionalValue(Lorg/jooq/SQL;)Ljava/util/Optional;
+#fetchOptionalValue(Ljava/lang/String;)Ljava/util/Optional;
+#fetchOptionalValue(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Optional;
+#fetchOptionalValue(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/Optional;
+#fetchValues(Lorg/jooq/SQL;)Ljava/util/List;
+#fetchValues(Ljava/lang/String;)Ljava/util/List;
+#fetchValues(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
+#fetchValues(Ljava/lang/String;[Lorg/jooq/QueryPart;)Ljava/util/List;
+#execute(Lorg/jooq/SQL;)I
+#execute(Ljava/lang/String;)I
+#execute(Ljava/lang/String;[Ljava/lang/Object;)I
+#execute(Ljava/lang/String;[Lorg/jooq/QueryPart;)I
+#resultQuery(Lorg/jooq/SQL;)Lorg/jooq/ResultQuery;
+#resultQuery(Ljava/lang/String;)Lorg/jooq/ResultQuery;
+#resultQuery(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/ResultQuery;
+#resultQuery(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/ResultQuery;
+#fetch(Ljava/sql/ResultSet;)Lorg/jooq/Result;
+#fetch(Ljava/sql/ResultSet;[Lorg/jooq/Field;)Lorg/jooq/Result;
+#fetch(Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Lorg/jooq/Result;
+#fetch(Ljava/sql/ResultSet;[Ljava/lang/Class;)Lorg/jooq/Result;
+#fetchOne(Ljava/sql/ResultSet;)Lorg/jooq/Record;
+#fetchOne(Ljava/sql/ResultSet;[Lorg/jooq/Field;)Lorg/jooq/Record;
+#fetchOne(Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Lorg/jooq/Record;
+#fetchOne(Ljava/sql/ResultSet;[Ljava/lang/Class;)Lorg/jooq/Record;
+#fetchSingle(Ljava/sql/ResultSet;)Lorg/jooq/Record;
+#fetchSingle(Ljava/sql/ResultSet;[Lorg/jooq/Field;)Lorg/jooq/Record;
+#fetchSingle(Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Lorg/jooq/Record;
+#fetchSingle(Ljava/sql/ResultSet;[Ljava/lang/Class;)Lorg/jooq/Record;
+#fetchOptional(Ljava/sql/ResultSet;)Ljava/util/Optional;
+#fetchOptional(Ljava/sql/ResultSet;[Lorg/jooq/Field;)Ljava/util/Optional;
+#fetchOptional(Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Ljava/util/Optional;
+#fetchOptional(Ljava/sql/ResultSet;[Ljava/lang/Class;)Ljava/util/Optional;
+#fetchValue(Ljava/sql/ResultSet;)Ljava/lang/Object;
+#fetchValue(Ljava/sql/ResultSet;Lorg/jooq/Field;)Ljava/lang/Object;
+#fetchValue(Ljava/sql/ResultSet;Lorg/jooq/DataType;)Ljava/lang/Object;
+#fetchValue(Ljava/sql/ResultSet;Ljava/lang/Class;)Ljava/lang/Object;
+#fetchOptionalValue(Ljava/sql/ResultSet;)Ljava/util/Optional;
+#fetchOptionalValue(Ljava/sql/ResultSet;Lorg/jooq/Field;)Ljava/util/Optional;
+#fetchOptionalValue(Ljava/sql/ResultSet;Lorg/jooq/DataType;)Ljava/util/Optional;
+#fetchOptionalValue(Ljava/sql/ResultSet;Ljava/lang/Class;)Ljava/util/Optional;
+#fetchValues(Ljava/sql/ResultSet;)Ljava/util/List;
+#fetchValues(Ljava/sql/ResultSet;Lorg/jooq/Field;)Ljava/util/List;
+#fetchValues(Ljava/sql/ResultSet;Lorg/jooq/DataType;)Ljava/util/List;
+#fetchValues(Ljava/sql/ResultSet;Ljava/lang/Class;)Ljava/util/List;
+#fetchLazy(Ljava/sql/ResultSet;)Lorg/jooq/Cursor;
+#fetchLazy(Ljava/sql/ResultSet;[Lorg/jooq/Field;)Lorg/jooq/Cursor;
+#fetchLazy(Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Lorg/jooq/Cursor;
+#fetchLazy(Ljava/sql/ResultSet;[Ljava/lang/Class;)Lorg/jooq/Cursor;
+#fetchAsync(Ljava/sql/ResultSet;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/sql/ResultSet;[Lorg/jooq/Field;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/sql/ResultSet;[Ljava/lang/Class;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Ljava/sql/ResultSet;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Ljava/sql/ResultSet;[Lorg/jooq/Field;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Ljava/sql/ResultSet;[Ljava/lang/Class;)Ljava/util/concurrent/CompletionStage;
+#fetchStream(Ljava/sql/ResultSet;)Ljava/util/stream/Stream;
+#fetchStream(Ljava/sql/ResultSet;[Lorg/jooq/Field;)Ljava/util/stream/Stream;
+#fetchStream(Ljava/sql/ResultSet;[Lorg/jooq/DataType;)Ljava/util/stream/Stream;
+#fetchStream(Ljava/sql/ResultSet;[Ljava/lang/Class;)Ljava/util/stream/Stream;
+#fetchFromTXT(Ljava/lang/String;)Lorg/jooq/Result;
+#fetchFromTXT(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/Result;
+#fetchFromHTML(Ljava/lang/String;)Lorg/jooq/Result;
+#fetchFromCSV(Ljava/lang/String;)Lorg/jooq/Result;
+#fetchFromCSV(Ljava/lang/String;C)Lorg/jooq/Result;
+#fetchFromCSV(Ljava/lang/String;Z)Lorg/jooq/Result;
+#fetchFromCSV(Ljava/lang/String;ZC)Lorg/jooq/Result;
+#fetchFromJSON(Ljava/lang/String;)Lorg/jooq/Result;
+#fetchFromXML(Ljava/lang/String;)Lorg/jooq/Result;
+#fetchFromStringData([[Ljava/lang/String;)Lorg/jooq/Result;
+#fetchFromStringData(Ljava/util/List;)Lorg/jooq/Result;
+#fetchFromStringData(Ljava/util/List;Z)Lorg/jooq/Result;
+#with(Ljava/lang/String;)Lorg/jooq/WithAsStep;
+#with(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/WithAsStep;
+#with(Lorg/jooq/Name;)Lorg/jooq/WithAsStep;
+#with(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/WithAsStep;
+#with(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/WithAsStep;
+#with(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/WithAsStep;
+#with(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep1;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep2;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep3;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep4;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep5;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep6;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep7;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep8;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep9;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep10;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep11;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep12;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep13;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep14;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep15;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep16;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep17;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep18;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep19;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep20;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep21;
+#with(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep22;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep1;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep2;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep3;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep4;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep5;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep6;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep7;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep8;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep9;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep10;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep11;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep12;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep13;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep14;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep15;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep16;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep17;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep18;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep19;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep20;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep21;
+#with(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep22;
+#with([Lorg/jooq/CommonTableExpression;)Lorg/jooq/WithStep;
+#withRecursive(Ljava/lang/String;)Lorg/jooq/WithAsStep;
+#withRecursive(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/WithAsStep;
+#withRecursive(Lorg/jooq/Name;)Lorg/jooq/WithAsStep;
+#withRecursive(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/WithAsStep;
+#withRecursive(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/WithAsStep;
+#withRecursive(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/WithAsStep;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep1;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep2;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep3;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep4;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep5;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep6;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep7;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep8;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep9;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep10;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep11;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep12;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep13;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep14;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep15;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep16;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep17;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep18;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep19;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep20;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep21;
+#withRecursive(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jooq/WithAsStep22;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep1;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep2;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep3;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep4;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep5;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep6;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep7;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep8;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep9;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep10;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep11;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep12;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep13;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep14;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep15;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep16;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep17;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep18;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep19;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep20;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep21;
+#withRecursive(Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;Lorg/jooq/Name;)Lorg/jooq/WithAsStep22;
+#withRecursive([Lorg/jooq/CommonTableExpression;)Lorg/jooq/WithStep;
+#selectFrom(Lorg/jooq/Table;)Lorg/jooq/SelectWhereStep;
+#selectFrom(Lorg/jooq/Name;)Lorg/jooq/SelectWhereStep;
+#selectFrom(Lorg/jooq/SQL;)Lorg/jooq/SelectWhereStep;
+#selectFrom(Ljava/lang/String;)Lorg/jooq/SelectWhereStep;
+#selectFrom(Ljava/lang/String;[Ljava/lang/Object;)Lorg/jooq/SelectWhereStep;
+#selectFrom(Ljava/lang/String;[Lorg/jooq/QueryPart;)Lorg/jooq/SelectWhereStep;
+#select(Ljava/util/Collection;)Lorg/jooq/SelectSelectStep;
+#select([Lorg/jooq/SelectFieldOrAsterisk;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#select(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Ljava/util/Collection;)Lorg/jooq/SelectSelectStep;
+#selectDistinct([Lorg/jooq/SelectFieldOrAsterisk;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectDistinct(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/SelectSelectStep;
+#selectZero()Lorg/jooq/SelectSelectStep;
+#selectOne()Lorg/jooq/SelectSelectStep;
+#selectCount()Lorg/jooq/SelectSelectStep;
+#selectQuery()Lorg/jooq/SelectQuery;
+#selectQuery(Lorg/jooq/TableLike;)Lorg/jooq/SelectQuery;
+#insertQuery(Lorg/jooq/Table;)Lorg/jooq/InsertQuery;
+#insertInto(Lorg/jooq/Table;)Lorg/jooq/InsertSetStep;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep1;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep2;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep3;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep4;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep5;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep6;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep7;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep8;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep9;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep10;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep11;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep12;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep13;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep14;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep15;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep16;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep17;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep18;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep19;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep20;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep21;
+#insertInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/InsertValuesStep22;
+#insertInto(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/InsertValuesStepN;
+#insertInto(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/InsertValuesStepN;
+#updateQuery(Lorg/jooq/Table;)Lorg/jooq/UpdateQuery;
+#update(Lorg/jooq/Table;)Lorg/jooq/UpdateSetFirstStep;
+#mergeInto(Lorg/jooq/Table;)Lorg/jooq/MergeUsingStep;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep1;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep2;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep3;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep4;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep5;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep6;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep7;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep8;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep9;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep10;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep11;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep12;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep13;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep14;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep15;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep16;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep17;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep18;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep19;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep20;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep21;
+#mergeInto(Lorg/jooq/Table;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/MergeKeyStep22;
+#mergeInto(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/MergeKeyStepN;
+#mergeInto(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/MergeKeyStepN;
+#deleteQuery(Lorg/jooq/Table;)Lorg/jooq/DeleteQuery;
+#deleteFrom(Lorg/jooq/Table;)Lorg/jooq/DeleteWhereStep;
+#delete(Lorg/jooq/Table;)Lorg/jooq/DeleteWhereStep;
+#batch([Lorg/jooq/Query;)Lorg/jooq/Batch;
+#batch(Lorg/jooq/Queries;)Lorg/jooq/Batch;
+#batch([Ljava/lang/String;)Lorg/jooq/Batch;
+#batch(Ljava/util/Collection;)Lorg/jooq/Batch;
+#batch(Lorg/jooq/Query;)Lorg/jooq/BatchBindStep;
+#batch(Ljava/lang/String;)Lorg/jooq/BatchBindStep;
+#batch(Lorg/jooq/Query;[[Ljava/lang/Object;)Lorg/jooq/Batch;
+#batch(Ljava/lang/String;[[Ljava/lang/Object;)Lorg/jooq/Batch;
+#batchStore([Lorg/jooq/UpdatableRecord;)Lorg/jooq/Batch;
+#batchStore(Ljava/util/Collection;)Lorg/jooq/Batch;
+#batchInsert([Lorg/jooq/TableRecord;)Lorg/jooq/Batch;
+#batchInsert(Ljava/util/Collection;)Lorg/jooq/Batch;
+#batchUpdate([Lorg/jooq/UpdatableRecord;)Lorg/jooq/Batch;
+#batchUpdate(Ljava/util/Collection;)Lorg/jooq/Batch;
+#batchDelete([Lorg/jooq/UpdatableRecord;)Lorg/jooq/Batch;
+#batchDelete(Ljava/util/Collection;)Lorg/jooq/Batch;
+#ddl(Lorg/jooq/Catalog;)Lorg/jooq/Queries;
+#ddl(Lorg/jooq/Catalog;Lorg/jooq/DDLExportConfiguration;)Lorg/jooq/Queries;
+#ddl(Lorg/jooq/Catalog;[Lorg/jooq/DDLFlag;)Lorg/jooq/Queries;
+#ddl(Lorg/jooq/Schema;)Lorg/jooq/Queries;
+#ddl(Lorg/jooq/Schema;Lorg/jooq/DDLExportConfiguration;)Lorg/jooq/Queries;
+#ddl(Lorg/jooq/Schema;[Lorg/jooq/DDLFlag;)Lorg/jooq/Queries;
+#ddl(Lorg/jooq/Table;)Lorg/jooq/Queries;
+#ddl(Lorg/jooq/Table;Lorg/jooq/DDLExportConfiguration;)Lorg/jooq/Queries;
+#ddl(Lorg/jooq/Table;[Lorg/jooq/DDLFlag;)Lorg/jooq/Queries;
+#ddl([Lorg/jooq/Table;)Lorg/jooq/Queries;
+#ddl([Lorg/jooq/Table;Lorg/jooq/DDLExportConfiguration;)Lorg/jooq/Queries;
+#ddl([Lorg/jooq/Table;[Lorg/jooq/DDLFlag;)Lorg/jooq/Queries;
+#ddl(Ljava/util/Collection;)Lorg/jooq/Queries;
+#ddl(Ljava/util/Collection;[Lorg/jooq/DDLFlag;)Lorg/jooq/Queries;
+#ddl(Ljava/util/Collection;Lorg/jooq/DDLExportConfiguration;)Lorg/jooq/Queries;
+#setCatalog(Ljava/lang/String;)Lorg/jooq/RowCountQuery;
+#setCatalog(Lorg/jooq/Name;)Lorg/jooq/RowCountQuery;
+#setCatalog(Lorg/jooq/Catalog;)Lorg/jooq/RowCountQuery;
+#setSchema(Ljava/lang/String;)Lorg/jooq/RowCountQuery;
+#setSchema(Lorg/jooq/Name;)Lorg/jooq/RowCountQuery;
+#setSchema(Lorg/jooq/Schema;)Lorg/jooq/RowCountQuery;
+#commentOnTable(Ljava/lang/String;)Lorg/jooq/CommentOnIsStep;
+#commentOnTable(Lorg/jooq/Name;)Lorg/jooq/CommentOnIsStep;
+#commentOnTable(Lorg/jooq/Table;)Lorg/jooq/CommentOnIsStep;
+#commentOnView(Ljava/lang/String;)Lorg/jooq/CommentOnIsStep;
+#commentOnView(Lorg/jooq/Name;)Lorg/jooq/CommentOnIsStep;
+#commentOnView(Lorg/jooq/Table;)Lorg/jooq/CommentOnIsStep;
+#commentOnColumn(Lorg/jooq/Name;)Lorg/jooq/CommentOnIsStep;
+#commentOnColumn(Lorg/jooq/Field;)Lorg/jooq/CommentOnIsStep;
+#createSchema(Ljava/lang/String;)Lorg/jooq/CreateSchemaFinalStep;
+#createSchema(Lorg/jooq/Name;)Lorg/jooq/CreateSchemaFinalStep;
+#createSchema(Lorg/jooq/Schema;)Lorg/jooq/CreateSchemaFinalStep;
+#createSchemaIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateSchemaFinalStep;
+#createSchemaIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateSchemaFinalStep;
+#createSchemaIfNotExists(Lorg/jooq/Schema;)Lorg/jooq/CreateSchemaFinalStep;
+#createTable(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
+#createTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
+#createTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
+#createTableIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
+#createTableIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
+#createTableIfNotExists(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
+#createTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
+#createTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
+#createTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
+#createGlobalTemporaryTable(Ljava/lang/String;)Lorg/jooq/CreateTableColumnStep;
+#createGlobalTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/CreateTableColumnStep;
+#createGlobalTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/CreateTableColumnStep;
+#createView(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/CreateViewAsStep;
+#createView(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/CreateViewAsStep;
+#createView(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/CreateViewAsStep;
+#createView(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createView(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createView(Lorg/jooq/Name;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createView(Lorg/jooq/Name;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createView(Lorg/jooq/Table;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createView(Lorg/jooq/Table;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Lorg/jooq/Name;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Lorg/jooq/Name;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Lorg/jooq/Table;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createOrReplaceView(Lorg/jooq/Table;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Ljava/lang/String;[Ljava/lang/String;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Lorg/jooq/Name;[Lorg/jooq/Name;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Lorg/jooq/Table;[Lorg/jooq/Field;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Ljava/lang/String;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Lorg/jooq/Name;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Lorg/jooq/Name;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Lorg/jooq/Table;Ljava/util/function/Function;)Lorg/jooq/CreateViewAsStep;
+#createViewIfNotExists(Lorg/jooq/Table;Ljava/util/function/BiFunction;)Lorg/jooq/CreateViewAsStep;
+#createType(Ljava/lang/String;)Lorg/jooq/CreateTypeStep;
+#createType(Lorg/jooq/Name;)Lorg/jooq/CreateTypeStep;
+#dropType(Ljava/lang/String;)Lorg/jooq/DropTypeStep;
+#dropType(Lorg/jooq/Name;)Lorg/jooq/DropTypeStep;
+#dropType([Ljava/lang/String;)Lorg/jooq/DropTypeStep;
+#dropType([Lorg/jooq/Name;)Lorg/jooq/DropTypeStep;
+#dropType(Ljava/util/Collection;)Lorg/jooq/DropTypeStep;
+#dropTypeIfExists(Ljava/lang/String;)Lorg/jooq/DropTypeStep;
+#dropTypeIfExists(Lorg/jooq/Name;)Lorg/jooq/DropTypeStep;
+#dropTypeIfExists([Ljava/lang/String;)Lorg/jooq/DropTypeStep;
+#dropTypeIfExists([Lorg/jooq/Name;)Lorg/jooq/DropTypeStep;
+#dropTypeIfExists(Ljava/util/Collection;)Lorg/jooq/DropTypeStep;
+#createIndex()Lorg/jooq/CreateIndexStep;
+#createIndex(Ljava/lang/String;)Lorg/jooq/CreateIndexStep;
+#createIndex(Lorg/jooq/Name;)Lorg/jooq/CreateIndexStep;
+#createIndex(Lorg/jooq/Index;)Lorg/jooq/CreateIndexStep;
+#createIndexIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateIndexStep;
+#createIndexIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateIndexStep;
+#createIndexIfNotExists(Lorg/jooq/Index;)Lorg/jooq/CreateIndexStep;
+#createUniqueIndex()Lorg/jooq/CreateIndexStep;
+#createUniqueIndex(Ljava/lang/String;)Lorg/jooq/CreateIndexStep;
+#createUniqueIndex(Lorg/jooq/Name;)Lorg/jooq/CreateIndexStep;
+#createUniqueIndex(Lorg/jooq/Index;)Lorg/jooq/CreateIndexStep;
+#createUniqueIndexIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateIndexStep;
+#createUniqueIndexIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateIndexStep;
+#createUniqueIndexIfNotExists(Lorg/jooq/Index;)Lorg/jooq/CreateIndexStep;
+#createSequence(Ljava/lang/String;)Lorg/jooq/CreateSequenceFlagsStep;
+#createSequence(Lorg/jooq/Name;)Lorg/jooq/CreateSequenceFlagsStep;
+#createSequence(Lorg/jooq/Sequence;)Lorg/jooq/CreateSequenceFlagsStep;
+#createSequenceIfNotExists(Ljava/lang/String;)Lorg/jooq/CreateSequenceFlagsStep;
+#createSequenceIfNotExists(Lorg/jooq/Name;)Lorg/jooq/CreateSequenceFlagsStep;
+#createSequenceIfNotExists(Lorg/jooq/Sequence;)Lorg/jooq/CreateSequenceFlagsStep;
+#alterSequence(Ljava/lang/String;)Lorg/jooq/AlterSequenceStep;
+#alterSequence(Lorg/jooq/Name;)Lorg/jooq/AlterSequenceStep;
+#alterSequence(Lorg/jooq/Sequence;)Lorg/jooq/AlterSequenceStep;
+#alterSequenceIfExists(Ljava/lang/String;)Lorg/jooq/AlterSequenceStep;
+#alterSequenceIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterSequenceStep;
+#alterSequenceIfExists(Lorg/jooq/Sequence;)Lorg/jooq/AlterSequenceStep;
+#alterTable(Ljava/lang/String;)Lorg/jooq/AlterTableStep;
+#alterTable(Lorg/jooq/Name;)Lorg/jooq/AlterTableStep;
+#alterTable(Lorg/jooq/Table;)Lorg/jooq/AlterTableStep;
+#alterTableIfExists(Ljava/lang/String;)Lorg/jooq/AlterTableStep;
+#alterTableIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterTableStep;
+#alterTableIfExists(Lorg/jooq/Table;)Lorg/jooq/AlterTableStep;
+#alterSchema(Ljava/lang/String;)Lorg/jooq/AlterSchemaStep;
+#alterSchema(Lorg/jooq/Name;)Lorg/jooq/AlterSchemaStep;
+#alterSchema(Lorg/jooq/Schema;)Lorg/jooq/AlterSchemaStep;
+#alterSchemaIfExists(Ljava/lang/String;)Lorg/jooq/AlterSchemaStep;
+#alterSchemaIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterSchemaStep;
+#alterSchemaIfExists(Lorg/jooq/Schema;)Lorg/jooq/AlterSchemaStep;
+#alterView(Ljava/lang/String;)Lorg/jooq/AlterViewStep;
+#alterView(Lorg/jooq/Name;)Lorg/jooq/AlterViewStep;
+#alterView(Lorg/jooq/Table;)Lorg/jooq/AlterViewStep;
+#alterViewIfExists(Ljava/lang/String;)Lorg/jooq/AlterViewStep;
+#alterViewIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterViewStep;
+#alterViewIfExists(Lorg/jooq/Table;)Lorg/jooq/AlterViewStep;
+#alterIndex(Ljava/lang/String;)Lorg/jooq/AlterIndexOnStep;
+#alterIndex(Lorg/jooq/Name;)Lorg/jooq/AlterIndexOnStep;
+#alterIndex(Lorg/jooq/Index;)Lorg/jooq/AlterIndexOnStep;
+#alterIndexIfExists(Ljava/lang/String;)Lorg/jooq/AlterIndexStep;
+#alterIndexIfExists(Lorg/jooq/Name;)Lorg/jooq/AlterIndexStep;
+#alterIndexIfExists(Lorg/jooq/Index;)Lorg/jooq/AlterIndexStep;
+#dropSchema(Ljava/lang/String;)Lorg/jooq/DropSchemaStep;
+#dropSchema(Lorg/jooq/Name;)Lorg/jooq/DropSchemaStep;
+#dropSchema(Lorg/jooq/Schema;)Lorg/jooq/DropSchemaStep;
+#dropSchemaIfExists(Ljava/lang/String;)Lorg/jooq/DropSchemaStep;
+#dropSchemaIfExists(Lorg/jooq/Name;)Lorg/jooq/DropSchemaStep;
+#dropSchemaIfExists(Lorg/jooq/Schema;)Lorg/jooq/DropSchemaStep;
+#dropView(Ljava/lang/String;)Lorg/jooq/DropViewFinalStep;
+#dropView(Lorg/jooq/Name;)Lorg/jooq/DropViewFinalStep;
+#dropView(Lorg/jooq/Table;)Lorg/jooq/DropViewFinalStep;
+#dropViewIfExists(Ljava/lang/String;)Lorg/jooq/DropViewFinalStep;
+#dropViewIfExists(Lorg/jooq/Name;)Lorg/jooq/DropViewFinalStep;
+#dropViewIfExists(Lorg/jooq/Table;)Lorg/jooq/DropViewFinalStep;
+#dropTable(Ljava/lang/String;)Lorg/jooq/DropTableStep;
+#dropTable(Lorg/jooq/Name;)Lorg/jooq/DropTableStep;
+#dropTable(Lorg/jooq/Table;)Lorg/jooq/DropTableStep;
+#dropTableIfExists(Ljava/lang/String;)Lorg/jooq/DropTableStep;
+#dropTableIfExists(Lorg/jooq/Name;)Lorg/jooq/DropTableStep;
+#dropTableIfExists(Lorg/jooq/Table;)Lorg/jooq/DropTableStep;
+#dropTemporaryTable(Ljava/lang/String;)Lorg/jooq/DropTableStep;
+#dropTemporaryTable(Lorg/jooq/Name;)Lorg/jooq/DropTableStep;
+#dropTemporaryTable(Lorg/jooq/Table;)Lorg/jooq/DropTableStep;
+#dropIndex(Ljava/lang/String;)Lorg/jooq/DropIndexOnStep;
+#dropIndex(Lorg/jooq/Name;)Lorg/jooq/DropIndexOnStep;
+#dropIndex(Lorg/jooq/Index;)Lorg/jooq/DropIndexOnStep;
+#dropIndexIfExists(Ljava/lang/String;)Lorg/jooq/DropIndexOnStep;
+#dropIndexIfExists(Lorg/jooq/Name;)Lorg/jooq/DropIndexOnStep;
+#dropIndexIfExists(Lorg/jooq/Index;)Lorg/jooq/DropIndexOnStep;
+#dropSequence(Ljava/lang/String;)Lorg/jooq/DropSequenceFinalStep;
+#dropSequence(Lorg/jooq/Name;)Lorg/jooq/DropSequenceFinalStep;
+#dropSequence(Lorg/jooq/Sequence;)Lorg/jooq/DropSequenceFinalStep;
+#dropSequenceIfExists(Ljava/lang/String;)Lorg/jooq/DropSequenceFinalStep;
+#dropSequenceIfExists(Lorg/jooq/Name;)Lorg/jooq/DropSequenceFinalStep;
+#dropSequenceIfExists(Lorg/jooq/Sequence;)Lorg/jooq/DropSequenceFinalStep;
+#truncate(Ljava/lang/String;)Lorg/jooq/TruncateIdentityStep;
+#truncate(Lorg/jooq/Name;)Lorg/jooq/TruncateIdentityStep;
+#truncate(Lorg/jooq/Table;)Lorg/jooq/TruncateIdentityStep;
+#truncateTable(Ljava/lang/String;)Lorg/jooq/TruncateIdentityStep;
+#truncateTable(Lorg/jooq/Name;)Lorg/jooq/TruncateIdentityStep;
+#truncateTable(Lorg/jooq/Table;)Lorg/jooq/TruncateIdentityStep;
+#grant(Lorg/jooq/Privilege;)Lorg/jooq/GrantOnStep;
+#grant([Lorg/jooq/Privilege;)Lorg/jooq/GrantOnStep;
+#grant(Ljava/util/Collection;)Lorg/jooq/GrantOnStep;
+#revoke(Lorg/jooq/Privilege;)Lorg/jooq/RevokeOnStep;
+#revoke([Lorg/jooq/Privilege;)Lorg/jooq/RevokeOnStep;
+#revoke(Ljava/util/Collection;)Lorg/jooq/RevokeOnStep;
+#revokeGrantOptionFor(Lorg/jooq/Privilege;)Lorg/jooq/RevokeOnStep;
+#revokeGrantOptionFor([Lorg/jooq/Privilege;)Lorg/jooq/RevokeOnStep;
+#revokeGrantOptionFor(Ljava/util/Collection;)Lorg/jooq/RevokeOnStep;
+#lastID()Ljava/math/BigInteger;
+#nextval(Ljava/lang/String;)Ljava/math/BigInteger;
+#nextval(Lorg/jooq/Name;)Ljava/math/BigInteger;
+#nextval(Lorg/jooq/Sequence;)Ljava/lang/Number;
+#currval(Ljava/lang/String;)Ljava/math/BigInteger;
+#currval(Lorg/jooq/Name;)Ljava/math/BigInteger;
+#currval(Lorg/jooq/Sequence;)Ljava/lang/Number;
+#newRecord(Lorg/jooq/UDT;)Lorg/jooq/UDTRecord;
+#newRecord(Lorg/jooq/Table;)Lorg/jooq/Record;
+#newRecord(Lorg/jooq/Table;Ljava/lang/Object;)Lorg/jooq/Record;
+#newRecord([Lorg/jooq/Field;)Lorg/jooq/Record;
+#newRecord(Ljava/util/Collection;)Lorg/jooq/Record;
+#newRecord(Lorg/jooq/Field;)Lorg/jooq/Record1;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record2;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record3;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record4;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record5;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record6;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record7;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record8;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record9;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record10;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record11;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record12;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record13;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record14;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record15;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record16;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record17;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record18;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record19;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record20;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record21;
+#newRecord(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Record22;
+#newResult(Lorg/jooq/Table;)Lorg/jooq/Result;
+#newResult([Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Ljava/util/Collection;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#newResult(Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;Lorg/jooq/Field;)Lorg/jooq/Result;
+#fetch(Lorg/jooq/ResultQuery;)Lorg/jooq/Result;
+#fetchLazy(Lorg/jooq/ResultQuery;)Lorg/jooq/Cursor;
+#fetchAsync(Lorg/jooq/ResultQuery;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Lorg/jooq/ResultQuery;)Ljava/util/concurrent/CompletionStage;
+#fetchStream(Lorg/jooq/ResultQuery;)Ljava/util/stream/Stream;
+#fetchMany(Lorg/jooq/ResultQuery;)Lorg/jooq/Results;
+#fetchOne(Lorg/jooq/ResultQuery;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/ResultQuery;)Lorg/jooq/Record;
+#fetchOptional(Lorg/jooq/ResultQuery;)Ljava/util/Optional;
+#fetchValue(Lorg/jooq/Table;)Ljava/lang/Object;
+#fetchValue(Lorg/jooq/ResultQuery;)Ljava/lang/Object;
+#fetchValue(Lorg/jooq/TableField;)Ljava/lang/Object;
+#fetchValue(Lorg/jooq/Field;)Ljava/lang/Object;
+#fetchOptionalValue(Lorg/jooq/ResultQuery;)Ljava/util/Optional;
+#fetchOptionalValue(Lorg/jooq/TableField;)Ljava/util/Optional;
+#fetchValues(Lorg/jooq/Table;)Ljava/util/List;
+#fetchValues(Lorg/jooq/ResultQuery;)Ljava/util/List;
+#fetchValues(Lorg/jooq/TableField;)Ljava/util/List;
+#fetchByExample(Lorg/jooq/TableRecord;)Lorg/jooq/Result;
+#fetchCount(Lorg/jooq/Select;)I
+#fetchCount(Lorg/jooq/Table;)I
+#fetchCount(Lorg/jooq/Table;Lorg/jooq/Condition;)I
+#fetchCount(Lorg/jooq/Table;[Lorg/jooq/Condition;)I
+#fetchCount(Lorg/jooq/Table;Ljava/util/Collection;)I
+#fetchExists(Lorg/jooq/Select;)Z
+#fetchExists(Lorg/jooq/Table;)Z
+#fetchExists(Lorg/jooq/Table;Lorg/jooq/Condition;)Z
+#fetchExists(Lorg/jooq/Table;[Lorg/jooq/Condition;)Z
+#fetchExists(Lorg/jooq/Table;Ljava/util/Collection;)Z
+#execute(Lorg/jooq/Query;)I
+#fetch(Lorg/jooq/Table;)Lorg/jooq/Result;
+#fetch(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Result;
+#fetch(Lorg/jooq/Table;[Lorg/jooq/Condition;)Lorg/jooq/Result;
+#fetch(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/Result;
+#fetchOne(Lorg/jooq/Table;)Lorg/jooq/Record;
+#fetchOne(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchOne(Lorg/jooq/Table;[Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchOne(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;[Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/Record;
+#fetchSingle([Lorg/jooq/SelectField;)Lorg/jooq/Record;
+#fetchSingle(Ljava/util/Collection;)Lorg/jooq/Record;
+#fetchSingle(Lorg/jooq/SelectField;)Lorg/jooq/Record1;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record2;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record3;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record4;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record5;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record6;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record7;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record8;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record9;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record10;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record11;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record12;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record13;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record14;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record15;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record16;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record17;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record18;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record19;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record20;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record21;
+#fetchSingle(Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;Lorg/jooq/SelectField;)Lorg/jooq/Record22;
+#fetchOptional(Lorg/jooq/Table;)Ljava/util/Optional;
+#fetchOptional(Lorg/jooq/Table;Lorg/jooq/Condition;)Ljava/util/Optional;
+#fetchOptional(Lorg/jooq/Table;[Lorg/jooq/Condition;)Ljava/util/Optional;
+#fetchOptional(Lorg/jooq/Table;Ljava/util/Collection;)Ljava/util/Optional;
+#fetchAny(Lorg/jooq/Table;)Lorg/jooq/Record;
+#fetchAny(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchAny(Lorg/jooq/Table;[Lorg/jooq/Condition;)Lorg/jooq/Record;
+#fetchAny(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/Record;
+#fetchLazy(Lorg/jooq/Table;)Lorg/jooq/Cursor;
+#fetchLazy(Lorg/jooq/Table;Lorg/jooq/Condition;)Lorg/jooq/Cursor;
+#fetchLazy(Lorg/jooq/Table;[Lorg/jooq/Condition;)Lorg/jooq/Cursor;
+#fetchLazy(Lorg/jooq/Table;Ljava/util/Collection;)Lorg/jooq/Cursor;
+#fetchAsync(Lorg/jooq/Table;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Lorg/jooq/Table;Lorg/jooq/Condition;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Lorg/jooq/Table;[Lorg/jooq/Condition;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Lorg/jooq/Table;Ljava/util/Collection;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Lorg/jooq/Table;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Lorg/jooq/Table;Lorg/jooq/Condition;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Lorg/jooq/Table;[Lorg/jooq/Condition;)Ljava/util/concurrent/CompletionStage;
+#fetchAsync(Ljava/util/concurrent/Executor;Lorg/jooq/Table;Ljava/util/Collection;)Ljava/util/concurrent/CompletionStage;
+#fetchStream(Lorg/jooq/Table;)Ljava/util/stream/Stream;
+#fetchStream(Lorg/jooq/Table;Lorg/jooq/Condition;)Ljava/util/stream/Stream;
+#fetchStream(Lorg/jooq/Table;[Lorg/jooq/Condition;)Ljava/util/stream/Stream;
+#fetchStream(Lorg/jooq/Table;Ljava/util/Collection;)Ljava/util/stream/Stream;
+#executeInsert(Lorg/jooq/TableRecord;)I
+#executeUpdate(Lorg/jooq/UpdatableRecord;)I
+#executeUpdate(Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I
+#executeDelete(Lorg/jooq/UpdatableRecord;)I
+#executeDelete(Lorg/jooq/TableRecord;Lorg/jooq/Condition;)I
+#configuration()Lorg/jooq/Configuration;
+#dsl()Lorg/jooq/DSLContext;
+#settings()Lorg/jooq/conf/Settings;
+#dialect()Lorg/jooq/SQLDialect;
+#family()Lorg/jooq/SQLDialect;
+#data()Ljava/util/Map;
+#data(Ljava/lang/Object;)Ljava/lang/Object;
+#data(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@1.3.5
-###io/micrometer/core/instrument/binder/db/MetricsDSLContext

+###io/micrometer/core/instrument/binder/grpc/AbstractMetricCollectingInterceptor$MetricSet
@1.7.0
+#<init>(Lio/micrometer/core/instrument/Counter;Lio/micrometer/core/instrument/Counter;Ljava/util/function/Function;)V
+#getRequestCounter()Lio/micrometer/core/instrument/Counter;
+#getResponseCounter()Lio/micrometer/core/instrument/Counter;
+#newProcessingDurationTiming(Lio/micrometer/core/instrument/MeterRegistry;)Ljava/util/function/Consumer;

+###io/micrometer/core/instrument/binder/grpc/AbstractMetricCollectingInterceptor
@1.7.0
+#preregisterService(Lio/grpc/ServiceDescriptor;)V
+#preregisterMethod(Lio/grpc/MethodDescriptor;)V

+###io/micrometer/core/instrument/binder/grpc/MetricCollectingClientInterceptor
@1.7.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;)V
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/function/UnaryOperator;Ljava/util/function/UnaryOperator;[Lio/grpc/Status$Code;)V
+#interceptCall(Lio/grpc/MethodDescriptor;Lio/grpc/CallOptions;Lio/grpc/Channel;)Lio/grpc/ClientCall;

+###io/micrometer/core/instrument/binder/grpc/MetricCollectingServerInterceptor
@1.7.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;)V
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/function/UnaryOperator;Ljava/util/function/UnaryOperator;[Lio/grpc/Status$Code;)V
+#preregisterService(Lio/grpc/BindableService;)V
+#preregisterService(Lio/grpc/ServerServiceDefinition;)V
+#interceptCall(Lio/grpc/ServerCall;Lio/grpc/Metadata;Lio/grpc/ServerCallHandler;)Lio/grpc/ServerCall$Listener;

+###io/micrometer/core/instrument/binder/http/DefaultHttpServletRequestTagsProvider
@1.4.0
+#<init>()V
+#getTags(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljava/lang/Iterable;

+###io/micrometer/core/instrument/binder/http/HttpRequestTags
@1.3.4
+#method(Ljavax/servlet/http/HttpServletRequest;)Lio/micrometer/core/instrument/Tag;
+#status(Ljavax/servlet/http/HttpServletResponse;)Lio/micrometer/core/instrument/Tag;
+#exception(Ljava/lang/Throwable;)Lio/micrometer/core/instrument/Tag;
+#outcome(Ljavax/servlet/http/HttpServletResponse;)Lio/micrometer/core/instrument/Tag;
@1.3.5
-###io/micrometer/core/instrument/binder/http/HttpRequestTags

+###io/micrometer/core/instrument/binder/http/HttpServletRequestTagsProvider
@1.4.0
+#getTags(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljava/lang/Iterable;

+###io/micrometer/core/instrument/binder/http/Outcome
@1.3.4
+#values()[Lio/micrometer/core/instrument/binder/http/Outcome;
+#valueOf(Ljava/lang/String;)Lio/micrometer/core/instrument/binder/http/Outcome;
+#asTag()Lio/micrometer/core/instrument/Tag;
+#forStatus(I)Lio/micrometer/core/instrument/binder/http/Outcome;
@1.3.5
-###io/micrometer/core/instrument/binder/http/Outcome

+###io/micrometer/core/instrument/binder/httpcomponents/DefaultUriMapper
@1.4.0
+#<init>()V
+#apply(Lorg/apache/http/HttpRequest;)Ljava/lang/String;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;

+###io/micrometer/core/instrument/binder/httpcomponents/MicrometerHttpClientInterceptor
@1.4.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/function/Function;Ljava/lang/Iterable;Z)V
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/Iterable;Z)V
+#getRequestInterceptor()Lorg/apache/http/HttpRequestInterceptor;
+#getResponseInterceptor()Lorg/apache/http/HttpResponseInterceptor;

+###io/micrometer/core/instrument/binder/httpcomponents/MicrometerHttpRequestExecutor$Builder
@1.2.0
+#waitForContinue(I)Lio/micrometer/core/instrument/binder/httpcomponents/MicrometerHttpRequestExecutor$Builder;
+#tags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/binder/httpcomponents/MicrometerHttpRequestExecutor$Builder;
+#uriMapper(Ljava/util/function/Function;)Lio/micrometer/core/instrument/binder/httpcomponents/MicrometerHttpRequestExecutor$Builder;
+#exportTagsForRoute(Z)Lio/micrometer/core/instrument/binder/httpcomponents/MicrometerHttpRequestExecutor$Builder;
+#build()Lio/micrometer/core/instrument/binder/httpcomponents/MicrometerHttpRequestExecutor;
@1.10.0
+#observationRegistry(Lio/micrometer/observation/ObservationRegistry;)Lio/micrometer/core/instrument/binder/httpcomponents/MicrometerHttpRequestExecutor$Builder;
+#observationConvention(Lio/micrometer/core/instrument/binder/httpcomponents/ApacheHttpClientObservationConvention;)Lio/micrometer/core/instrument/binder/httpcomponents/MicrometerHttpRequestExecutor$Builder;

+###io/micrometer/core/instrument/binder/httpcomponents/MicrometerHttpRequestExecutor
@1.2.0
+#builder(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/binder/httpcomponents/MicrometerHttpRequestExecutor$Builder;
+#execute(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpClientConnection;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;

+###io/micrometer/core/instrument/binder/httpcomponents/PoolingHttpClientConnectionManagerMetricsBinder
@1.3.0
+#<init>(Lorg/apache/http/impl/conn/PoolingHttpClientConnectionManager;Ljava/lang/String;[Ljava/lang/String;)V
+#<init>(Lorg/apache/http/impl/conn/PoolingHttpClientConnectionManager;Ljava/lang/String;Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.3.4
+#<init>(Lorg/apache/http/pool/ConnPoolControl;Ljava/lang/String;[Ljava/lang/String;)V
+#<init>(Lorg/apache/http/pool/ConnPoolControl;Ljava/lang/String;Ljava/lang/Iterable;)V
-#<init>(Lorg/apache/http/impl/conn/PoolingHttpClientConnectionManager;Ljava/lang/String;[Ljava/lang/String;)V
-#<init>(Lorg/apache/http/impl/conn/PoolingHttpClientConnectionManager;Ljava/lang/String;Ljava/lang/Iterable;)V
@1.3.5
+#<init>(Lorg/apache/http/impl/conn/PoolingHttpClientConnectionManager;Ljava/lang/String;[Ljava/lang/String;)V
+#<init>(Lorg/apache/http/impl/conn/PoolingHttpClientConnectionManager;Ljava/lang/String;Ljava/lang/Iterable;)V
-#<init>(Lorg/apache/http/pool/ConnPoolControl;Ljava/lang/String;[Ljava/lang/String;)V
-#<init>(Lorg/apache/http/pool/ConnPoolControl;Ljava/lang/String;Ljava/lang/Iterable;)V
@1.4.0
+#<init>(Lorg/apache/http/pool/ConnPoolControl;Ljava/lang/String;[Ljava/lang/String;)V
+#<init>(Lorg/apache/http/pool/ConnPoolControl;Ljava/lang/String;Ljava/lang/Iterable;)V
-#<init>(Lorg/apache/http/impl/conn/PoolingHttpClientConnectionManager;Ljava/lang/String;[Ljava/lang/String;)V
-#<init>(Lorg/apache/http/impl/conn/PoolingHttpClientConnectionManager;Ljava/lang/String;Ljava/lang/Iterable;)V

+###io/micrometer/core/instrument/binder/hystrix/MicrometerMetricsPublisherThreadPool
@1.2.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Lcom/netflix/hystrix/HystrixThreadPoolKey;Lcom/netflix/hystrix/HystrixThreadPoolMetrics;Lcom/netflix/hystrix/HystrixThreadPoolProperties;Lcom/netflix/hystrix/strategy/metrics/HystrixMetricsPublisherThreadPool;)V
+#initialize()V

+###io/micrometer/core/instrument/binder/jersey/server/AnnotationFinder
@1.8.0
+#findAnnotation(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;

+###io/micrometer/core/instrument/binder/jersey/server/DefaultJerseyTagsProvider
@1.8.0
+#<init>()V
+#httpRequestTags(Lorg/glassfish/jersey/server/monitoring/RequestEvent;)Ljava/lang/Iterable;
+#httpLongRequestTags(Lorg/glassfish/jersey/server/monitoring/RequestEvent;)Ljava/lang/Iterable;

+###io/micrometer/core/instrument/binder/jersey/server/JerseyTags
@1.8.0
+#method(Lorg/glassfish/jersey/server/ContainerRequest;)Lio/micrometer/core/instrument/Tag;
+#status(Lorg/glassfish/jersey/server/ContainerResponse;)Lio/micrometer/core/instrument/Tag;
+#uri(Lorg/glassfish/jersey/server/monitoring/RequestEvent;)Lio/micrometer/core/instrument/Tag;
+#exception(Lorg/glassfish/jersey/server/monitoring/RequestEvent;)Lio/micrometer/core/instrument/Tag;
+#outcome(Lorg/glassfish/jersey/server/ContainerResponse;)Lio/micrometer/core/instrument/Tag;

+###io/micrometer/core/instrument/binder/jersey/server/JerseyTagsProvider
@1.8.0
+#httpRequestTags(Lorg/glassfish/jersey/server/monitoring/RequestEvent;)Ljava/lang/Iterable;
+#httpLongRequestTags(Lorg/glassfish/jersey/server/monitoring/RequestEvent;)Ljava/lang/Iterable;

+###io/micrometer/core/instrument/binder/jersey/server/MetricsApplicationEventListener
@1.8.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Lio/micrometer/core/instrument/binder/jersey/server/JerseyTagsProvider;Ljava/lang/String;Z)V
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Lio/micrometer/core/instrument/binder/jersey/server/JerseyTagsProvider;Ljava/lang/String;ZLio/micrometer/core/instrument/binder/jersey/server/AnnotationFinder;)V
+#onEvent(Lorg/glassfish/jersey/server/monitoring/ApplicationEvent;)V
+#onRequest(Lorg/glassfish/jersey/server/monitoring/RequestEvent;)Lorg/glassfish/jersey/server/monitoring/RequestEventListener;

+###io/micrometer/core/instrument/binder/jersey/server/MetricsRequestEventListener
@1.8.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Lio/micrometer/core/instrument/binder/jersey/server/JerseyTagsProvider;Ljava/lang/String;ZLio/micrometer/core/instrument/binder/jersey/server/AnnotationFinder;)V
+#onEvent(Lorg/glassfish/jersey/server/monitoring/RequestEvent;)V

+###io/micrometer/core/instrument/binder/jetty/JettyClientMetrics$Builder
@1.5.0
+#timingMetricName(Ljava/lang/String;)Lio/micrometer/core/instrument/binder/jetty/JettyClientMetrics$Builder;
+#contentSizeMetricName(Ljava/lang/String;)Lio/micrometer/core/instrument/binder/jetty/JettyClientMetrics$Builder;
+#maxUriTags(I)Lio/micrometer/core/instrument/binder/jetty/JettyClientMetrics$Builder;
+#build()Lio/micrometer/core/instrument/binder/jetty/JettyClientMetrics;

+###io/micrometer/core/instrument/binder/jetty/JettyClientMetrics
@1.5.0
+#onQueued(Lorg/eclipse/jetty/client/api/Request;)V
+#builder(Lio/micrometer/core/instrument/MeterRegistry;Lio/micrometer/core/instrument/binder/jetty/JettyClientTagsProvider;)Lio/micrometer/core/instrument/binder/jetty/JettyClientMetrics$Builder;

+###io/micrometer/core/instrument/binder/jetty/JettyClientTags
@1.5.0
+#method(Lorg/eclipse/jetty/client/api/Request;)Lio/micrometer/core/instrument/Tag;
+#status(Lorg/eclipse/jetty/client/api/Result;)Lio/micrometer/core/instrument/Tag;
+#uri(Lorg/eclipse/jetty/client/api/Result;Ljava/util/function/Function;)Lio/micrometer/core/instrument/Tag;
+#exception(Lorg/eclipse/jetty/client/api/Result;)Lio/micrometer/core/instrument/Tag;
+#outcome(Lorg/eclipse/jetty/client/api/Result;)Lio/micrometer/core/instrument/Tag;
@1.7.0
+#host(Lorg/eclipse/jetty/client/api/Request;)Lio/micrometer/core/instrument/Tag;

+###io/micrometer/core/instrument/binder/jetty/JettyClientTagsProvider
@1.5.0
+#httpRequestTags(Lorg/eclipse/jetty/client/api/Result;)Ljava/lang/Iterable;
+#uriPattern(Lorg/eclipse/jetty/client/api/Result;)Ljava/lang/String;

+###io/micrometer/core/instrument/binder/jetty/JettyConnectionMetrics
@1.3.4
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;)V
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/Iterable;)V
+#onOpened(Lorg/eclipse/jetty/io/Connection;)V
+#onClosed(Lorg/eclipse/jetty/io/Connection;)V
+#addToAllConnectors(Lorg/eclipse/jetty/server/Server;Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/Iterable;)V
+#addToAllConnectors(Lorg/eclipse/jetty/server/Server;Lio/micrometer/core/instrument/MeterRegistry;)V
@1.3.5
-###io/micrometer/core/instrument/binder/jetty/JettyConnectionMetrics

+###io/micrometer/core/instrument/binder/jetty/JettySslHandshakeMetrics
@1.5.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;)V
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/Iterable;)V
+#handshakeSucceeded(Lorg/eclipse/jetty/io/ssl/SslHandshakeListener$Event;)V
+#handshakeFailed(Lorg/eclipse/jetty/io/ssl/SslHandshakeListener$Event;Ljava/lang/Throwable;)V
+#addToAllConnectors(Lorg/eclipse/jetty/server/Server;Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/Iterable;)V
+#addToAllConnectors(Lorg/eclipse/jetty/server/Server;Lio/micrometer/core/instrument/MeterRegistry;)V
@1.8.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Lorg/eclipse/jetty/server/Connector;)V
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Lorg/eclipse/jetty/server/Connector;Ljava/lang/Iterable;)V

+###io/micrometer/core/instrument/binder/jetty/TimedHandler
@1.3.4
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/Iterable;)V
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/Iterable;Lio/micrometer/core/instrument/binder/http/HttpRequestTagsProvider;)V
+#handle(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#shutdown()Ljava/util/concurrent/Future;
+#isShutdown()Z
@1.3.5
-###io/micrometer/core/instrument/binder/jetty/TimedHandler

+###io/micrometer/core/instrument/binder/jpa/HibernateQueryMetrics
@1.4.0
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lorg/hibernate/SessionFactory;Ljava/lang/String;[Ljava/lang/String;)V
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lorg/hibernate/SessionFactory;Ljava/lang/String;Ljava/lang/Iterable;)V
+#<init>(Lorg/hibernate/SessionFactory;Ljava/lang/String;Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V

+###io/micrometer/core/instrument/binder/jvm/JvmCompilationMetrics
@1.3.4
+#<init>()V
+#<init>(Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.3.5
-###io/micrometer/core/instrument/binder/jvm/JvmCompilationMetrics

+###io/micrometer/core/instrument/binder/jvm/JvmHeapPressureMetrics
@1.4.0
+#<init>()V
+#<init>(Ljava/lang/Iterable;Ljava/time/Duration;Ljava/time/Duration;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
+#close()V

+###io/micrometer/core/instrument/binder/jvm/JvmInfoMetrics
@1.7.0
+#<init>()V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V

+###io/micrometer/core/instrument/binder/kafka/KafkaClientMetrics
@1.4.0
+#<init>(Lorg/apache/kafka/clients/producer/Producer;Ljava/lang/Iterable;)V
+#<init>(Lorg/apache/kafka/clients/producer/Producer;)V
+#<init>(Lorg/apache/kafka/clients/consumer/Consumer;Ljava/lang/Iterable;)V
+#<init>(Lorg/apache/kafka/clients/consumer/Consumer;)V
+#<init>(Lorg/apache/kafka/clients/admin/AdminClient;Ljava/lang/Iterable;)V
+#<init>(Lorg/apache/kafka/clients/admin/AdminClient;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.4.2
+#close()V

+###io/micrometer/core/instrument/binder/kafka/KafkaStreamsMetrics
@1.4.0
+#<init>(Lorg/apache/kafka/streams/KafkaStreams;Ljava/lang/Iterable;)V
+#<init>(Lorg/apache/kafka/streams/KafkaStreams;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.4.2
+#close()V

+###io/micrometer/core/instrument/binder/mongodb/DefaultMongoCommandTagsProvider
@1.7.0
+#<init>()V
+#commandTags(Lcom/mongodb/event/CommandEvent;)Ljava/lang/Iterable;
@1.8.0
+#commandStarted(Lcom/mongodb/event/CommandStartedEvent;)V

+###io/micrometer/core/instrument/binder/mongodb/DefaultMongoConnectionPoolTagsProvider
@1.7.0
+#<init>()V
+#connectionPoolTags(Lcom/mongodb/event/ConnectionPoolCreatedEvent;)Ljava/lang/Iterable;

+###io/micrometer/core/instrument/binder/mongodb/MongoCommandTagsProvider
@1.7.0
+#commandTags(Lcom/mongodb/event/CommandEvent;)Ljava/lang/Iterable;
@1.8.0
+#commandStarted(Lcom/mongodb/event/CommandStartedEvent;)V

+###io/micrometer/core/instrument/binder/mongodb/MongoConnectionPoolTagsProvider
@1.7.0
+#connectionPoolTags(Lcom/mongodb/event/ConnectionPoolCreatedEvent;)Ljava/lang/Iterable;

+###io/micrometer/core/instrument/binder/mongodb/MongoMetricsCommandListener
@1.2.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;)V
+#commandStarted(Lcom/mongodb/event/CommandStartedEvent;)V
+#commandSucceeded(Lcom/mongodb/event/CommandSucceededEvent;)V
+#commandFailed(Lcom/mongodb/event/CommandFailedEvent;)V
@1.7.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Lio/micrometer/core/instrument/binder/mongodb/MongoCommandTagsProvider;)V

+###io/micrometer/core/instrument/binder/mongodb/MongoMetricsConnectionPoolListener
@1.2.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;)V
+#connectionPoolOpened(Lcom/mongodb/event/ConnectionPoolOpenedEvent;)V
+#connectionPoolClosed(Lcom/mongodb/event/ConnectionPoolClosedEvent;)V
+#connectionCheckedOut(Lcom/mongodb/event/ConnectionCheckedOutEvent;)V
+#connectionCheckedIn(Lcom/mongodb/event/ConnectionCheckedInEvent;)V
+#waitQueueEntered(Lcom/mongodb/event/ConnectionPoolWaitQueueEnteredEvent;)V
+#waitQueueExited(Lcom/mongodb/event/ConnectionPoolWaitQueueExitedEvent;)V
+#connectionAdded(Lcom/mongodb/event/ConnectionAddedEvent;)V
+#connectionRemoved(Lcom/mongodb/event/ConnectionRemovedEvent;)V
@1.7.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Lio/micrometer/core/instrument/binder/mongodb/MongoConnectionPoolTagsProvider;)V
+#connectionPoolCreated(Lcom/mongodb/event/ConnectionPoolCreatedEvent;)V
+#connectionCheckOutStarted(Lcom/mongodb/event/ConnectionCheckOutStartedEvent;)V
+#connectionCheckOutFailed(Lcom/mongodb/event/ConnectionCheckOutFailedEvent;)V
+#connectionCreated(Lcom/mongodb/event/ConnectionCreatedEvent;)V
+#connectionClosed(Lcom/mongodb/event/ConnectionClosedEvent;)V
-#connectionPoolOpened(Lcom/mongodb/event/ConnectionPoolOpenedEvent;)V
-#waitQueueEntered(Lcom/mongodb/event/ConnectionPoolWaitQueueEnteredEvent;)V
-#waitQueueExited(Lcom/mongodb/event/ConnectionPoolWaitQueueExitedEvent;)V
-#connectionAdded(Lcom/mongodb/event/ConnectionAddedEvent;)V
-#connectionRemoved(Lcom/mongodb/event/ConnectionRemovedEvent;)V

+###io/micrometer/core/instrument/binder/okhttp3/OkHttpConnectionPoolMetrics
@1.6.0
+#<init>(Lokhttp3/ConnectionPool;)V
+#<init>(Lokhttp3/ConnectionPool;Ljava/lang/Iterable;)V
+#<init>(Lokhttp3/ConnectionPool;Ljava/lang/String;Ljava/lang/Iterable;)V
+#<init>(Lokhttp3/ConnectionPool;Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Integer;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V

+###io/micrometer/core/instrument/binder/system/DiskSpaceMetrics
@1.8.0
+#<init>(Ljava/io/File;)V
+#<init>(Ljava/io/File;Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V

+###io/micrometer/core/instrument/config/MeterRegistryConfigValidator
@1.5.0
+#checkAll(Lio/micrometer/core/instrument/config/MeterRegistryConfig;[Ljava/util/function/Function;)Lio/micrometer/core/instrument/config/validate/Validated;
+#check(Ljava/lang/String;Ljava/util/function/Function;)Ljava/util/function/Function;
+#checkRequired(Ljava/lang/String;Ljava/util/function/Function;)Ljava/util/function/Function;

+###io/micrometer/core/instrument/config/validate/DurationValidator
@1.5.0
+#values()[Lio/micrometer/core/instrument/config/validate/DurationValidator;
+#valueOf(Ljava/lang/String;)Lio/micrometer/core/instrument/config/validate/DurationValidator;
+#validate(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/config/validate/Validated;
+#validateTimeUnit(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/config/validate/Validated;
+#validateChronoUnit(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/config/validate/Validated;

+###io/micrometer/core/instrument/config/validate/InvalidReason
@1.5.0
+#values()[Lio/micrometer/core/instrument/config/validate/InvalidReason;
+#valueOf(Ljava/lang/String;)Lio/micrometer/core/instrument/config/validate/InvalidReason;

+###io/micrometer/core/instrument/config/validate/PropertyValidator
@1.5.0
+#getDuration(Lio/micrometer/core/instrument/config/MeterRegistryConfig;Ljava/lang/String;)Lio/micrometer/core/instrument/config/validate/Validated;
+#getTimeUnit(Lio/micrometer/core/instrument/config/MeterRegistryConfig;Ljava/lang/String;)Lio/micrometer/core/instrument/config/validate/Validated;
+#getInteger(Lio/micrometer/core/instrument/config/MeterRegistryConfig;Ljava/lang/String;)Lio/micrometer/core/instrument/config/validate/Validated;
+#getEnum(Lio/micrometer/core/instrument/config/MeterRegistryConfig;Ljava/lang/Class;Ljava/lang/String;)Lio/micrometer/core/instrument/config/validate/Validated;
+#getBoolean(Lio/micrometer/core/instrument/config/MeterRegistryConfig;Ljava/lang/String;)Lio/micrometer/core/instrument/config/validate/Validated;
+#getSecret(Lio/micrometer/core/instrument/config/MeterRegistryConfig;Ljava/lang/String;)Lio/micrometer/core/instrument/config/validate/Validated;
+#getString(Lio/micrometer/core/instrument/config/MeterRegistryConfig;Ljava/lang/String;)Lio/micrometer/core/instrument/config/validate/Validated;
+#getUrlString(Lio/micrometer/core/instrument/config/MeterRegistryConfig;Ljava/lang/String;)Lio/micrometer/core/instrument/config/validate/Validated;

+###io/micrometer/core/instrument/config/validate/Validated$Either
@1.5.0
+#<init>(Lio/micrometer/core/instrument/config/validate/Validated;Lio/micrometer/core/instrument/config/validate/Validated;)V
+#isValid()Z
+#get()Ljava/lang/Object;
+#orElseGet(Ljava/util/function/Supplier;)Ljava/lang/Object;
+#orThrow()V
+#map(Ljava/util/function/Function;)Lio/micrometer/core/instrument/config/validate/Validated;
+#flatMap(Ljava/util/function/BiFunction;)Lio/micrometer/core/instrument/config/validate/Validated;
+#iterator()Ljava/util/Iterator;

+###io/micrometer/core/instrument/config/validate/Validated$Invalid
@1.5.0
+#<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;Lio/micrometer/core/instrument/config/validate/InvalidReason;Ljava/lang/Throwable;)V
+#isValid()Z
+#iterator()Ljava/util/Iterator;
+#getMessage()Ljava/lang/String;
+#getReason()Lio/micrometer/core/instrument/config/validate/InvalidReason;
+#getException()Ljava/lang/Throwable;
+#get()Ljava/lang/Object;
+#orElseGet(Ljava/util/function/Supplier;)Ljava/lang/Object;
+#orThrow()V
+#map(Ljava/util/function/Function;)Lio/micrometer/core/instrument/config/validate/Validated;
+#flatMap(Ljava/util/function/BiFunction;)Lio/micrometer/core/instrument/config/validate/Validated;
+#getProperty()Ljava/lang/String;
+#getValue()Ljava/lang/Object;
+#toString()Ljava/lang/String;

+###io/micrometer/core/instrument/config/validate/Validated$None
@1.5.0
+#<init>()V
+#isValid()Z
+#map(Ljava/util/function/Function;)Lio/micrometer/core/instrument/config/validate/Validated;
+#flatMap(Ljava/util/function/BiFunction;)Lio/micrometer/core/instrument/config/validate/Validated;
+#get()Ljava/lang/Object;
+#orElseGet(Ljava/util/function/Supplier;)Ljava/lang/Object;
+#orThrow()V
+#iterator()Ljava/util/Iterator;

+###io/micrometer/core/instrument/config/validate/Validated$Secret
@1.5.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#toString()Ljava/lang/String;

+###io/micrometer/core/instrument/config/validate/Validated$Valid
@1.5.0
+#<init>(Ljava/lang/String;Ljava/lang/Object;)V
+#isValid()Z
+#iterator()Ljava/util/Iterator;
+#get()Ljava/lang/Object;
+#orThrow()V
+#orElseGet(Ljava/util/function/Supplier;)Ljava/lang/Object;
+#map(Ljava/util/function/Function;)Lio/micrometer/core/instrument/config/validate/Validated;
+#flatMap(Ljava/util/function/BiFunction;)Lio/micrometer/core/instrument/config/validate/Validated;
+#getProperty()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###io/micrometer/core/instrument/config/validate/Validated
@1.5.0
+#isValid()Z
+#isInvalid()Z
+#failures()Ljava/util/List;
+#validSecret(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/config/validate/Validated$Secret;
+#none()Lio/micrometer/core/instrument/config/validate/Validated$None;
+#valid(Ljava/lang/String;Ljava/lang/Object;)Lio/micrometer/core/instrument/config/validate/Validated$Valid;
+#invalid(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;Lio/micrometer/core/instrument/config/validate/InvalidReason;)Lio/micrometer/core/instrument/config/validate/Validated$Invalid;
+#invalid(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;Lio/micrometer/core/instrument/config/validate/InvalidReason;Ljava/lang/Throwable;)Lio/micrometer/core/instrument/config/validate/Validated$Invalid;
+#and(Lio/micrometer/core/instrument/config/validate/Validated;)Lio/micrometer/core/instrument/config/validate/Validated;
+#map(Ljava/util/function/Function;)Lio/micrometer/core/instrument/config/validate/Validated;
+#flatMap(Ljava/util/function/BiFunction;)Lio/micrometer/core/instrument/config/validate/Validated;
+#flatMap(Ljava/util/function/Function;)Lio/micrometer/core/instrument/config/validate/Validated;
+#invalidateWhen(Ljava/util/function/Predicate;Ljava/lang/String;Lio/micrometer/core/instrument/config/validate/InvalidReason;)Lio/micrometer/core/instrument/config/validate/Validated;
+#required()Lio/micrometer/core/instrument/config/validate/Validated;
+#nonBlank()Lio/micrometer/core/instrument/config/validate/Validated;
+#get()Ljava/lang/Object;
+#orElse(Ljava/lang/Object;)Ljava/lang/Object;
+#orElseGet(Ljava/util/function/Supplier;)Ljava/lang/Object;
+#orThrow()V

+###io/micrometer/core/instrument/config/validate/ValidationException
@1.5.0
+#<init>(Lio/micrometer/core/instrument/config/validate/Validated;)V
+#getValidation()Lio/micrometer/core/instrument/config/validate/Validated;

+###io/micrometer/core/instrument/distribution/FixedBoundaryVictoriaMetricsHistogram
@1.4.0
+#<init>()V
+#recordLong(J)V
+#recordDouble(D)V
+#getRangeTagValue(D)Ljava/lang/String;
+#takeSnapshot(JDD)Lio/micrometer/core/instrument/distribution/HistogramSnapshot;

+###io/micrometer/core/instrument/distribution/TimeWindowSum
@1.4.0
+#<init>(ILjava/time/Duration;)V
+#record(J)V
+#poll()D

+###io/micrometer/core/instrument/internal/CumulativeHistogramLongTaskTimer
@1.5.2
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Ljava/util/concurrent/TimeUnit;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)V
+#takeSnapshot()Lio/micrometer/core/instrument/distribution/HistogramSnapshot;

+###io/micrometer/core/instrument/internal/OnlyOnceLoggingDenyMeterFilter
@1.5.0
+#<init>(Ljava/util/function/Supplier;)V
+#accept(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/config/MeterFilterReply;

+###io/micrometer/core/instrument/internal/TimedScheduledExecutorService
@1.3.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/String;Ljava/lang/Iterable;)V
+#shutdown()V
+#shutdownNow()Ljava/util/List;
+#isShutdown()Z
+#isTerminated()Z
+#awaitTermination(JLjava/util/concurrent/TimeUnit;)Z
+#submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
+#invokeAll(Ljava/util/Collection;)Ljava/util/List;
+#invokeAll(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;
+#invokeAny(Ljava/util/Collection;)Ljava/lang/Object;
+#invokeAny(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#execute(Ljava/lang/Runnable;)V
+#schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
+#schedule(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
+#scheduleAtFixedRate(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
+#scheduleWithFixedDelay(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
@1.3.9
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)V
-#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/String;Ljava/lang/Iterable;)V
@1.4.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/String;Ljava/lang/Iterable;)V
-#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)V
@1.5.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Iterable;)V
-#<init>(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/String;Ljava/lang/Iterable;)V

+###io/micrometer/core/instrument/step/StepTuple2
@1.5.1
+#<init>(Lio/micrometer/core/instrument/Clock;JLjava/lang/Object;Ljava/lang/Object;Ljava/util/function/Supplier;Ljava/util/function/Supplier;)V
+#poll1()Ljava/lang/Object;
+#poll2()Ljava/lang/Object;

+###io/micrometer/core/instrument/step/StepValue
@1.4.0
+#<init>(Lio/micrometer/core/instrument/Clock;J)V
+#poll()Ljava/lang/Object;

+###io/micrometer/core/instrument/Timer$ResourceSample
@1.6.0
+#close()V

+###io/micrometer/core/instrument/util/AbstractPartition
@1.2.2
+#get(I)Ljava/util/List;
+#size()I
+#isEmpty()Z
+#get(I)Ljava/lang/Object;

+###io/micrometer/core/util/internal/logging/AbstractInternalLogger
@1.1.7
+#name()Ljava/lang/String;
+#isEnabled(Lio/micrometer/core/util/internal/logging/InternalLogLevel;)Z
+#trace(Ljava/lang/Throwable;)V
+#debug(Ljava/lang/Throwable;)V
+#info(Ljava/lang/Throwable;)V
+#warn(Ljava/lang/Throwable;)V
+#error(Ljava/lang/Throwable;)V
+#log(Lio/micrometer/core/util/internal/logging/InternalLogLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
+#log(Lio/micrometer/core/util/internal/logging/InternalLogLevel;Ljava/lang/Throwable;)V
+#log(Lio/micrometer/core/util/internal/logging/InternalLogLevel;Ljava/lang/String;)V
+#log(Lio/micrometer/core/util/internal/logging/InternalLogLevel;Ljava/lang/String;Ljava/lang/Object;)V
+#log(Lio/micrometer/core/util/internal/logging/InternalLogLevel;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#log(Lio/micrometer/core/util/internal/logging/InternalLogLevel;Ljava/lang/String;[Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
@1.2.0
-###io/micrometer/core/util/internal/logging/AbstractInternalLogger

+###io/micrometer/core/util/internal/logging/InternalLogger
@1.1.7
+#name()Ljava/lang/String;
+#isTraceEnabled()Z
+#trace(Ljava/lang/String;)V
+#trace(Ljava/lang/String;Ljava/lang/Object;)V
+#trace(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#trace(Ljava/lang/String;[Ljava/lang/Object;)V
+#trace(Ljava/lang/String;Ljava/lang/Throwable;)V
+#trace(Ljava/lang/Throwable;)V
+#isDebugEnabled()Z
+#debug(Ljava/lang/String;)V
+#debug(Ljava/lang/String;Ljava/lang/Object;)V
+#debug(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#debug(Ljava/lang/String;[Ljava/lang/Object;)V
+#debug(Ljava/lang/String;Ljava/lang/Throwable;)V
+#debug(Ljava/lang/Throwable;)V
+#isInfoEnabled()Z
+#info(Ljava/lang/String;)V
+#info(Ljava/lang/String;Ljava/lang/Object;)V
+#info(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#info(Ljava/lang/String;[Ljava/lang/Object;)V
+#info(Ljava/lang/String;Ljava/lang/Throwable;)V
+#info(Ljava/lang/Throwable;)V
+#isWarnEnabled()Z
+#warn(Ljava/lang/String;)V
+#warn(Ljava/lang/String;Ljava/lang/Object;)V
+#warn(Ljava/lang/String;[Ljava/lang/Object;)V
+#warn(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#warn(Ljava/lang/String;Ljava/lang/Throwable;)V
+#warn(Ljava/lang/Throwable;)V
+#isErrorEnabled()Z
+#error(Ljava/lang/String;)V
+#error(Ljava/lang/String;Ljava/lang/Object;)V
+#error(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#error(Ljava/lang/String;[Ljava/lang/Object;)V
+#error(Ljava/lang/String;Ljava/lang/Throwable;)V
+#error(Ljava/lang/Throwable;)V
+#isEnabled(Lio/micrometer/core/util/internal/logging/InternalLogLevel;)Z
+#log(Lio/micrometer/core/util/internal/logging/InternalLogLevel;Ljava/lang/String;)V
+#log(Lio/micrometer/core/util/internal/logging/InternalLogLevel;Ljava/lang/String;Ljava/lang/Object;)V
+#log(Lio/micrometer/core/util/internal/logging/InternalLogLevel;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#log(Lio/micrometer/core/util/internal/logging/InternalLogLevel;Ljava/lang/String;[Ljava/lang/Object;)V
+#log(Lio/micrometer/core/util/internal/logging/InternalLogLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
+#log(Lio/micrometer/core/util/internal/logging/InternalLogLevel;Ljava/lang/Throwable;)V
@1.2.0
-###io/micrometer/core/util/internal/logging/InternalLogger

+###io/micrometer/core/util/internal/logging/InternalLoggerFactory
@1.1.7
+#<init>()V
+#getDefaultFactory()Lio/micrometer/core/util/internal/logging/InternalLoggerFactory;
+#setDefaultFactory(Lio/micrometer/core/util/internal/logging/InternalLoggerFactory;)V
+#getInstance(Ljava/lang/Class;)Lio/micrometer/core/util/internal/logging/InternalLogger;
+#getInstance(Ljava/lang/String;)Lio/micrometer/core/util/internal/logging/InternalLogger;
@1.2.0
-###io/micrometer/core/util/internal/logging/InternalLoggerFactory

+###io/micrometer/core/util/internal/logging/InternalLogLevel
@1.1.7
+#values()[Lio/micrometer/core/util/internal/logging/InternalLogLevel;
+#valueOf(Ljava/lang/String;)Lio/micrometer/core/util/internal/logging/InternalLogLevel;
@1.2.0
-###io/micrometer/core/util/internal/logging/InternalLogLevel

+###io/micrometer/core/util/internal/logging/JdkLoggerFactory
@1.1.7
+#newInstance(Ljava/lang/String;)Lio/micrometer/core/util/internal/logging/InternalLogger;
@1.2.0
-###io/micrometer/core/util/internal/logging/JdkLoggerFactory

+###io/micrometer/core/util/internal/logging/Slf4JLoggerFactory
@1.1.7
+#newInstance(Ljava/lang/String;)Lio/micrometer/core/util/internal/logging/InternalLogger;
@1.2.0
-###io/micrometer/core/util/internal/logging/Slf4JLoggerFactory

+###io/micrometer/core/util/internal/logging/WarnThenDebugLogger
@1.1.8
+#<init>(Ljava/lang/Class;)V
+#log(Ljava/lang/String;Ljava/lang/Throwable;)V
@1.1.9
+#log(Ljava/lang/String;)V
@1.2.0
-###io/micrometer/core/util/internal/logging/WarnThenDebugLogger

+###io/micrometer/core/instrument/AbstractMeterRegistry
@0.7.0.RELEASE
+#getClock()Lio/micrometer/core/instrument/Clock;
+#timerBuilder(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
+#summaryBuilder(Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
+#commonTags(Ljava/lang/Iterable;)V
@0.10.0.RELEASE
+#config()Lio/micrometer/core/instrument/MeterRegistry$Config;
+#<init>(Lio/micrometer/core/instrument/Clock;)V
+#register(Ljava/lang/String;Ljava/lang/Iterable;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/MeterRegistry;
+#gaugeBuilder(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
+#counterBuilder(Ljava/lang/String;)Lio/micrometer/core/instrument/Counter$Builder;
+#more()Lio/micrometer/core/instrument/MeterRegistry$More;
+#find(Ljava/lang/String;)Lio/micrometer/core/instrument/MeterRegistry$Search;
+#getMeters()Ljava/util/Collection;
-#getClock()Lio/micrometer/core/instrument/Clock;
-#commonTags(Ljava/lang/Iterable;)V
@0.11.0.RELEASE
+#register(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Meter;
+#counter(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Counter;
+#gauge(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge;
+#timer(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;Lio/micrometer/core/instrument/stats/quantile/Quantiles;)Lio/micrometer/core/instrument/Timer;
+#summary(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;Lio/micrometer/core/instrument/stats/quantile/Quantiles;)Lio/micrometer/core/instrument/DistributionSummary;
+#createId(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Meter$Id;
-#register(Ljava/lang/String;Ljava/lang/Iterable;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/MeterRegistry;
-#gaugeBuilder(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
-#timerBuilder(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
-#summaryBuilder(Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
-#counterBuilder(Ljava/lang/String;)Lio/micrometer/core/instrument/Counter$Builder;
@1.0.0-rc.3
-###io/micrometer/core/instrument/AbstractMeterRegistry

+###io/micrometer/core/instrument/binder/CaffeineCacheMetrics
@0.10.0.RELEASE
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/github/benmanes/caffeine/cache/Cache;Ljava/lang/String;[Ljava/lang/String;)Lcom/github/benmanes/caffeine/cache/Cache;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/github/benmanes/caffeine/cache/Cache;Ljava/lang/String;Ljava/lang/Iterable;)Lcom/github/benmanes/caffeine/cache/Cache;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/github/benmanes/caffeine/cache/AsyncLoadingCache;Ljava/lang/String;[Ljava/lang/String;)Lcom/github/benmanes/caffeine/cache/AsyncLoadingCache;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/github/benmanes/caffeine/cache/AsyncLoadingCache;Ljava/lang/String;Ljava/lang/Iterable;)Lcom/github/benmanes/caffeine/cache/AsyncLoadingCache;
+#<init>(Ljava/lang/String;Ljava/lang/Iterable;Lcom/github/benmanes/caffeine/cache/Cache;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.0.0-rc.2
-###io/micrometer/core/instrument/binder/CaffeineCacheMetrics

+###io/micrometer/core/instrument/binder/ClassLoaderMetrics
@0.6.3.RELEASE
+#<init>()V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@0.11.0.RELEASE
+#<init>(Ljava/lang/Iterable;)V
@1.0.0-rc.2
-###io/micrometer/core/instrument/binder/ClassLoaderMetrics

+###io/micrometer/core/instrument/binder/ExecutorServiceMetrics
@0.6.3.RELEASE
+#<init>(Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@0.10.0.RELEASE
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/Executor;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/concurrent/Executor;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/Executor;Ljava/lang/String;[Lio/micrometer/core/instrument/Tag;)Ljava/util/concurrent/Executor;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/concurrent/ExecutorService;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;[Lio/micrometer/core/instrument/Tag;)Ljava/util/concurrent/ExecutorService;
@1.0.0-rc.2
-###io/micrometer/core/instrument/binder/ExecutorServiceMetrics

+###io/micrometer/core/instrument/binder/GuavaCacheMetrics
@0.10.0.RELEASE
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/google/common/cache/Cache;Ljava/lang/String;[Ljava/lang/String;)Lcom/google/common/cache/Cache;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/google/common/cache/Cache;Ljava/lang/String;Ljava/lang/Iterable;)Lcom/google/common/cache/Cache;
+#<init>(Ljava/lang/String;Ljava/lang/Iterable;Lcom/google/common/cache/Cache;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.0.0-rc.2
-###io/micrometer/core/instrument/binder/GuavaCacheMetrics

+###io/micrometer/core/instrument/binder/JvmGcMetrics
@0.6.3.RELEASE
+#<init>()V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@0.11.0.RELEASE
+#<init>(Ljava/lang/Iterable;)V
@1.0.0-rc.2
-###io/micrometer/core/instrument/binder/JvmGcMetrics

+###io/micrometer/core/instrument/binder/JvmMemoryMetrics
@0.6.3.RELEASE
+#<init>()V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@0.11.0.RELEASE
+#<init>(Ljava/lang/Iterable;)V
@1.0.0-rc.2
-###io/micrometer/core/instrument/binder/JvmMemoryMetrics

+###io/micrometer/core/instrument/binder/JvmThreadMetrics
@0.11.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.0.0-rc.2
-###io/micrometer/core/instrument/binder/JvmThreadMetrics

+###io/micrometer/core/instrument/binder/LogbackMetrics
@0.6.3.RELEASE
+#<init>()V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@0.11.0.RELEASE
+#<init>(Ljava/lang/Iterable;)V
@1.0.0-rc.2
-###io/micrometer/core/instrument/binder/LogbackMetrics

+###io/micrometer/core/instrument/binder/ProcessorMetrics
@0.6.3.RELEASE
+#<init>()V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@0.11.0.RELEASE
+#<init>(Ljava/lang/Iterable;)V
@1.0.0-rc.2
-###io/micrometer/core/instrument/binder/ProcessorMetrics

+###io/micrometer/core/instrument/binder/UptimeMetrics
@0.11.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/Iterable;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.0.0-rc.2
-###io/micrometer/core/instrument/binder/UptimeMetrics

+###io/micrometer/core/instrument/composite/CompositeCustomMeter
@0.10.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Iterable;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)V
+#getName()Ljava/lang/String;
+#getTags()Ljava/lang/Iterable;
+#getDescription()Ljava/lang/String;
+#measure()Ljava/lang/Iterable;
+#add(Lio/micrometer/core/instrument/MeterRegistry;)V
+#remove(Lio/micrometer/core/instrument/MeterRegistry;)V
@0.11.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)V
+#getId()Lio/micrometer/core/instrument/Meter$Id;
-#<init>(Ljava/lang/String;Ljava/lang/Iterable;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)V
-#getName()Ljava/lang/String;
-#getTags()Ljava/lang/Iterable;
-#getDescription()Ljava/lang/String;
@1.0.0-rc.3
-#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)V
@1.0.0-rc.4
-###io/micrometer/core/instrument/composite/CompositeCustomMeter

+###io/micrometer/core/instrument/composite/CompositeDistributionSummary
@0.10.0.RELEASE
+#record(D)V
+#count()J
+#totalAmount()D
+#add(Lio/micrometer/core/instrument/MeterRegistry;)V
+#remove(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.0.0-rc.3
+#max()D
+#histogramCountAtValue(J)D
+#percentile(D)D
@1.0.0-rc.4
-###io/micrometer/core/instrument/composite/CompositeDistributionSummary

+###io/micrometer/core/instrument/composite/CompositeGauge
@0.10.0.RELEASE
+#value()D
+#add(Lio/micrometer/core/instrument/MeterRegistry;)V
+#remove(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.0.0-rc.4
-###io/micrometer/core/instrument/composite/CompositeGauge

+###io/micrometer/core/instrument/composite/CompositeLongTaskTimer
@0.10.0.RELEASE
+#start()J
+#stop(J)J
+#duration(J)J
+#duration()J
+#activeTasks()I
+#add(Lio/micrometer/core/instrument/MeterRegistry;)V
+#remove(Lio/micrometer/core/instrument/MeterRegistry;)V
@0.11.0.RELEASE
+#duration(JLjava/util/concurrent/TimeUnit;)D
+#duration(Ljava/util/concurrent/TimeUnit;)D
-#duration(J)J
-#duration()J
@1.0.0-rc.4
-###io/micrometer/core/instrument/composite/CompositeLongTaskTimer

+###io/micrometer/core/instrument/composite/CompositeMeter
@0.10.0.RELEASE
+#add(Lio/micrometer/core/instrument/MeterRegistry;)V
+#remove(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.0.0-rc.4
-###io/micrometer/core/instrument/composite/CompositeMeter

+###io/micrometer/core/instrument/composite/CompositeTimeGauge
@0.11.0.RELEASE
+#add(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.0.0-rc.3
+#getBaseTimeUnit()Ljava/util/concurrent/TimeUnit;
@1.0.0-rc.4
-###io/micrometer/core/instrument/composite/CompositeTimeGauge

+###io/micrometer/core/instrument/composite/CompositeTimer
@0.10.0.RELEASE
+#record(JLjava/util/concurrent/TimeUnit;)V
+#count()J
+#totalTime(Ljava/util/concurrent/TimeUnit;)D
+#add(Lio/micrometer/core/instrument/MeterRegistry;)V
+#remove(Lio/micrometer/core/instrument/MeterRegistry;)V
@1.0.0-rc.3
+#record(Ljava/time/Duration;)V
+#record(Ljava/util/function/Supplier;)Ljava/lang/Object;
+#recordCallable(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#record(Ljava/lang/Runnable;)V
+#wrap(Ljava/lang/Runnable;)Ljava/lang/Runnable;
+#wrap(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;
+#max(Ljava/util/concurrent/TimeUnit;)D
+#percentile(DLjava/util/concurrent/TimeUnit;)D
+#histogramCountAtValue(J)D
@1.0.0-rc.4
-###io/micrometer/core/instrument/composite/CompositeTimer

+###io/micrometer/core/instrument/composite/internal/CompositeUtils
@0.11.0.RELEASE
@1.0.0-rc.8
-###io/micrometer/core/instrument/composite/internal/CompositeUtils

+###io/micrometer/core/instrument/internal/MeterId
@0.6.3.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Iterable;)V
+#<init>(Ljava/lang/String;[Lio/micrometer/core/instrument/Tag;)V
+#getName()Ljava/lang/String;
+#getTags()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#withTags([Lio/micrometer/core/instrument/Tag;)Lio/micrometer/core/instrument/internal/MeterId;
+#withTags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/internal/MeterId;
+#measurement(D)Lio/micrometer/core/instrument/Measurement;
@0.7.0.RELEASE
-###io/micrometer/core/instrument/internal/MeterId

+###io/micrometer/core/instrument/MeterRegistry$Search
@0.10.0.RELEASE
+#tags([Ljava/lang/String;)Lio/micrometer/core/instrument/MeterRegistry$Search;
+#tags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/MeterRegistry$Search;
+#value(Lio/micrometer/core/instrument/Statistic;D)Lio/micrometer/core/instrument/MeterRegistry$Search;
+#timer()Ljava/util/Optional;
+#counter()Ljava/util/Optional;
+#gauge()Ljava/util/Optional;
+#summary()Ljava/util/Optional;
+#longTaskTimer()Ljava/util/Optional;
+#meter()Ljava/util/Optional;
+#meters()Ljava/util/Collection;
@1.0.0-rc.4
+#functionCounter()Ljava/util/Optional;
+#timeGauge()Ljava/util/Optional;
+#functionTimer()Ljava/util/Optional;
@1.0.0-rc.8
-###io/micrometer/core/instrument/MeterRegistry$Search

+###io/micrometer/core/instrument/NamingConvention
@0.10.0.RELEASE
+#name(Ljava/lang/String;Lio/micrometer/core/instrument/Meter$Type;)Ljava/lang/String;
+#name(Ljava/lang/String;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/String;)Ljava/lang/String;
+#tagKey(Ljava/lang/String;)Ljava/lang/String;
+#tagValue(Ljava/lang/String;)Ljava/lang/String;
@1.0.0-rc.4
-###io/micrometer/core/instrument/NamingConvention

+###io/micrometer/core/instrument/reactor/ReactorMetrics
@0.11.0.RELEASE
+#timed(Ljava/lang/Iterable;)Ljava/util/function/Function;
@1.0.0-rc.8
-###io/micrometer/core/instrument/reactor/ReactorMetrics

+###io/micrometer/core/instrument/reactor/ReactorMetricsSubscriber
@0.11.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Iterable;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#request(J)V
+#cancel()V
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
@1.0.0-rc.8
-###io/micrometer/core/instrument/reactor/ReactorMetricsSubscriber

+###io/micrometer/core/instrument/simple/SimpleCounter
@0.6.3.RELEASE
+#<init>(Lio/micrometer/core/instrument/internal/MeterId;)V
+#increment()V
+#increment(D)V
+#count()D
+#measure()Ljava/lang/Iterable;
@0.7.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/util/MeterId;)V
-#<init>(Lio/micrometer/core/instrument/internal/MeterId;)V
@0.8.0.RELEASE
+#measure()Ljava/util/List;
-#measure()Ljava/lang/Iterable;
@0.9.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
-#increment()V
@0.10.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;)V
-#<init>(Lio/micrometer/core/instrument/util/MeterId;)V
-#measure()Ljava/util/List;
@0.11.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/Meter$Id;)V
-#<init>(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;)V
@1.0.0-rc.3
-###io/micrometer/core/instrument/simple/SimpleCounter

+###io/micrometer/core/instrument/simple/SimpleDistributionSummary
@0.6.3.RELEASE
+#<init>(Lio/micrometer/core/instrument/internal/MeterId;)V
+#record(D)V
+#count()J
+#totalAmount()D
+#measure()Ljava/lang/Iterable;
@0.7.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/util/MeterId;)V
-#<init>(Lio/micrometer/core/instrument/internal/MeterId;)V
@0.8.0.RELEASE
+#measure()Ljava/util/List;
-#measure()Ljava/lang/Iterable;
@0.9.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.10.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;)V
-#<init>(Lio/micrometer/core/instrument/util/MeterId;)V
-#measure()Ljava/util/List;
@0.11.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/stats/quantile/Quantiles;Lio/micrometer/core/instrument/stats/hist/Histogram;)V
-#<init>(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;)V
@1.0.0-rc.3
-###io/micrometer/core/instrument/simple/SimpleDistributionSummary

+###io/micrometer/core/instrument/simple/SimpleGauge
@0.6.3.RELEASE
+#<init>(Lio/micrometer/core/instrument/internal/MeterId;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)V
+#value()D
+#measure()Ljava/lang/Iterable;
@0.7.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/util/MeterId;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)V
-#<init>(Lio/micrometer/core/instrument/internal/MeterId;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)V
@0.8.0.RELEASE
+#measure()Ljava/util/List;
-#measure()Ljava/lang/Iterable;
@0.9.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.10.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)V
-#<init>(Lio/micrometer/core/instrument/util/MeterId;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)V
-#measure()Ljava/util/List;
@0.11.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)V
-#<init>(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)V
@1.0.0-rc.3
-###io/micrometer/core/instrument/simple/SimpleGauge

+###io/micrometer/core/instrument/simple/SimpleLongTaskTimer
@0.6.3.RELEASE
+#<init>(Lio/micrometer/core/instrument/internal/MeterId;Lio/micrometer/core/instrument/Clock;)V
+#start()J
+#stop(J)J
+#duration(J)J
+#duration()J
+#activeTasks()I
+#measure()Ljava/lang/Iterable;
@0.7.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/util/MeterId;Lio/micrometer/core/instrument/Clock;)V
-#<init>(Lio/micrometer/core/instrument/internal/MeterId;Lio/micrometer/core/instrument/Clock;)V
@0.8.0.RELEASE
+#measure()Ljava/util/List;
-#measure()Ljava/lang/Iterable;
@0.9.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.10.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;Lio/micrometer/core/instrument/Clock;)V
-#<init>(Lio/micrometer/core/instrument/util/MeterId;Lio/micrometer/core/instrument/Clock;)V
-#measure()Ljava/util/List;
@0.11.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;)V
+#duration(JLjava/util/concurrent/TimeUnit;)D
+#duration(Ljava/util/concurrent/TimeUnit;)D
-#<init>(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;Lio/micrometer/core/instrument/Clock;)V
-#duration(J)J
-#duration()J
@1.0.0-rc.3
-###io/micrometer/core/instrument/simple/SimpleLongTaskTimer

+###io/micrometer/core/instrument/simple/SimpleTimer
@0.6.3.RELEASE
+#<init>(Lio/micrometer/core/instrument/internal/MeterId;Lio/micrometer/core/instrument/Clock;)V
+#record(JLjava/util/concurrent/TimeUnit;)V
+#count()J
+#totalTime(Ljava/util/concurrent/TimeUnit;)D
+#measure()Ljava/lang/Iterable;
@0.7.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/util/MeterId;Lio/micrometer/core/instrument/Clock;)V
-#<init>(Lio/micrometer/core/instrument/internal/MeterId;Lio/micrometer/core/instrument/Clock;)V
@0.8.0.RELEASE
+#measure()Ljava/util/List;
-#measure()Ljava/lang/Iterable;
@0.10.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;Lio/micrometer/core/instrument/Clock;)V
-#<init>(Lio/micrometer/core/instrument/util/MeterId;Lio/micrometer/core/instrument/Clock;)V
-#measure()Ljava/util/List;
@0.11.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/stats/quantile/Quantiles;Lio/micrometer/core/instrument/stats/hist/Histogram;)V
-#<init>(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;Lio/micrometer/core/instrument/Clock;)V
@1.0.0-rc.3
-###io/micrometer/core/instrument/simple/SimpleTimer

+###io/micrometer/core/instrument/spectator/SpectatorConf
@0.12.0.RELEASE
+#prefix()Ljava/lang/String;
+#timerPercentilesMax()Ljava/time/Duration;
+#timerPercentilesMin()Ljava/time/Duration;
@1.0.0-rc.2
-#prefix()Ljava/lang/String;
-#timerPercentilesMax()Ljava/time/Duration;
-#timerPercentilesMin()Ljava/time/Duration;
@1.0.0-rc.3
-###io/micrometer/core/instrument/spectator/SpectatorConf

+###io/micrometer/core/instrument/spectator/SpectatorCounter
@0.6.3.RELEASE
+#<init>(Lcom/netflix/spectator/api/Counter;)V
+#increment()V
+#increment(D)V
+#count()D
+#getName()Ljava/lang/String;
+#getTags()Ljava/lang/Iterable;
+#measure()Ljava/lang/Iterable;
@0.8.0.RELEASE
+#measure()Ljava/util/List;
-#measure()Ljava/lang/Iterable;
@0.9.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
-#increment()V
@0.10.0.RELEASE
+#<init>(Lcom/netflix/spectator/api/Counter;Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
-#<init>(Lcom/netflix/spectator/api/Counter;)V
-#measure()Ljava/util/List;
@0.11.0.RELEASE
-#<init>(Lcom/netflix/spectator/api/Counter;Ljava/lang/String;)V
-#getName()Ljava/lang/String;
-#getDescription()Ljava/lang/String;
-#getTags()Ljava/lang/Iterable;
@1.0.0-rc.3
-###io/micrometer/core/instrument/spectator/SpectatorCounter

+###io/micrometer/core/instrument/spectator/SpectatorDistributionSummary
@0.6.3.RELEASE
+#<init>(Lcom/netflix/spectator/api/DistributionSummary;)V
+#record(D)V
+#count()J
+#totalAmount()D
+#getName()Ljava/lang/String;
+#getTags()Ljava/lang/Iterable;
+#measure()Ljava/lang/Iterable;
@0.8.0.RELEASE
+#measure()Ljava/util/List;
-#measure()Ljava/lang/Iterable;
@0.9.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.10.0.RELEASE
+#<init>(Lcom/netflix/spectator/api/DistributionSummary;Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
-#<init>(Lcom/netflix/spectator/api/DistributionSummary;)V
-#measure()Ljava/util/List;
@0.11.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lcom/netflix/spectator/api/DistributionSummary;Lio/micrometer/core/instrument/stats/quantile/Quantiles;Lio/micrometer/core/instrument/stats/hist/Histogram;)V
-#<init>(Lcom/netflix/spectator/api/DistributionSummary;Ljava/lang/String;)V
-#getName()Ljava/lang/String;
-#getTags()Ljava/lang/Iterable;
-#getDescription()Ljava/lang/String;
@1.0.0-rc.3
-###io/micrometer/core/instrument/spectator/SpectatorDistributionSummary

+###io/micrometer/core/instrument/spectator/SpectatorGauge
@0.6.3.RELEASE
+#<init>(Lcom/netflix/spectator/api/Gauge;)V
+#value()D
+#getName()Ljava/lang/String;
+#getTags()Ljava/lang/Iterable;
+#measure()Ljava/lang/Iterable;
@0.8.0.RELEASE
+#measure()Ljava/util/List;
-#measure()Ljava/lang/Iterable;
@0.9.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.10.0.RELEASE
+#<init>(Lcom/netflix/spectator/api/Gauge;Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
-#<init>(Lcom/netflix/spectator/api/Gauge;)V
-#measure()Ljava/util/List;
@0.11.0.RELEASE
-#<init>(Lcom/netflix/spectator/api/Gauge;Ljava/lang/String;)V
-#getName()Ljava/lang/String;
-#getTags()Ljava/lang/Iterable;
-#getDescription()Ljava/lang/String;
@1.0.0-rc.3
-###io/micrometer/core/instrument/spectator/SpectatorGauge

+###io/micrometer/core/instrument/spectator/SpectatorLongTaskTimer
@0.6.3.RELEASE
+#<init>(Lcom/netflix/spectator/api/LongTaskTimer;)V
+#start()J
+#stop(J)J
+#duration(J)J
+#duration()J
+#activeTasks()I
+#getName()Ljava/lang/String;
+#getTags()Ljava/lang/Iterable;
+#measure()Ljava/lang/Iterable;
@0.8.0.RELEASE
+#measure()Ljava/util/List;
-#measure()Ljava/lang/Iterable;
@0.9.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.10.0.RELEASE
+#<init>(Lcom/netflix/spectator/api/LongTaskTimer;Ljava/lang/String;)V
+#getDescription()Ljava/lang/String;
-#<init>(Lcom/netflix/spectator/api/LongTaskTimer;)V
-#measure()Ljava/util/List;
@0.11.0.RELEASE
+#duration(JLjava/util/concurrent/TimeUnit;)D
+#duration(Ljava/util/concurrent/TimeUnit;)D
-#<init>(Lcom/netflix/spectator/api/LongTaskTimer;Ljava/lang/String;)V
-#duration(J)J
-#duration()J
-#getName()Ljava/lang/String;
-#getTags()Ljava/lang/Iterable;
-#getDescription()Ljava/lang/String;
@1.0.0-rc.3
-###io/micrometer/core/instrument/spectator/SpectatorLongTaskTimer

+###io/micrometer/core/instrument/spectator/SpectatorMeterRegistry
@0.6.3.RELEASE
+#<init>()V
+#<init>(Lcom/netflix/spectator/api/Registry;)V
+#<init>(Lcom/netflix/spectator/api/Registry;Lio/micrometer/core/instrument/Clock;)V
+#getMeters()Ljava/util/Collection;
+#findMeter(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/Optional;
+#findMeter(Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/Optional;
+#counter(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Counter;
+#distributionSummary(Ljava/lang/String;Ljava/lang/Iterable;Lio/micrometer/core/instrument/stats/quantile/Quantiles;Lio/micrometer/core/instrument/stats/hist/Histogram;)Lio/micrometer/core/instrument/DistributionSummary;
+#longTaskTimer(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/LongTaskTimer;
+#register(Lio/micrometer/core/instrument/Meter;)Lio/micrometer/core/instrument/MeterRegistry;
+#gauge(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
+#getSpectatorRegistry()Lcom/netflix/spectator/api/Registry;
@0.8.0.RELEASE
+#<init>(Lcom/netflix/spectator/api/Registry;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/TagFormatter;)V
-#<init>()V
-#<init>(Lcom/netflix/spectator/api/Registry;)V
-#<init>(Lcom/netflix/spectator/api/Registry;Lio/micrometer/core/instrument/Clock;)V
@0.10.0.RELEASE
+#<init>(Lcom/netflix/spectator/api/Registry;Lio/micrometer/core/instrument/Clock;)V
-#<init>(Lcom/netflix/spectator/api/Registry;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/TagFormatter;)V
-#getMeters()Ljava/util/Collection;
-#findMeter(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/Optional;
-#findMeter(Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/Optional;
-#counter(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Counter;
-#distributionSummary(Ljava/lang/String;Ljava/lang/Iterable;Lio/micrometer/core/instrument/stats/quantile/Quantiles;Lio/micrometer/core/instrument/stats/hist/Histogram;)Lio/micrometer/core/instrument/DistributionSummary;
-#longTaskTimer(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/LongTaskTimer;
-#register(Lio/micrometer/core/instrument/Meter;)Lio/micrometer/core/instrument/MeterRegistry;
-#gauge(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
@0.12.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/spectator/SpectatorConf;Lcom/netflix/spectator/api/Registry;Lio/micrometer/core/instrument/Clock;)V
-#<init>(Lcom/netflix/spectator/api/Registry;Lio/micrometer/core/instrument/Clock;)V
@1.0.0-rc.3
-###io/micrometer/core/instrument/spectator/SpectatorMeterRegistry

+###io/micrometer/core/instrument/spectator/SpectatorTimer
@0.6.3.RELEASE
+#record(JLjava/util/concurrent/TimeUnit;)V
+#count()J
+#totalTime(Ljava/util/concurrent/TimeUnit;)D
+#measure()Ljava/lang/Iterable;
@0.8.0.RELEASE
+#measure()Ljava/util/List;
-#measure()Ljava/lang/Iterable;
@0.10.0.RELEASE
-#measure()Ljava/util/List;
@0.11.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lcom/netflix/spectator/api/Timer;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/stats/quantile/Quantiles;Lio/micrometer/core/instrument/stats/hist/Histogram;)V
@1.0.0-rc.3
-###io/micrometer/core/instrument/spectator/SpectatorTimer

+###io/micrometer/core/instrument/spectator/SpectatorUtils
@0.9.0.RELEASE
+#<init>()V
+#measurements(Lcom/netflix/spectator/api/Meter;)Ljava/util/List;
+#tags(Lcom/netflix/spectator/api/Meter;)Ljava/util/List;
+#spectatorId(Lcom/netflix/spectator/api/Registry;Ljava/lang/String;Ljava/lang/Iterable;)Lcom/netflix/spectator/api/Id;
+#spectatorClock(Lio/micrometer/core/instrument/Clock;)Lcom/netflix/spectator/api/Clock;
@0.10.0.RELEASE
-#measurements(Lcom/netflix/spectator/api/Meter;)Ljava/util/List;
-#spectatorId(Lcom/netflix/spectator/api/Registry;Ljava/lang/String;Ljava/lang/Iterable;)Lcom/netflix/spectator/api/Id;
-#spectatorClock(Lio/micrometer/core/instrument/Clock;)Lcom/netflix/spectator/api/Clock;
@1.0.0-rc.3
-###io/micrometer/core/instrument/spectator/SpectatorUtils

+###io/micrometer/core/instrument/spectator/step/AbstractStepRegistry
@0.7.0.RELEASE
+#<init>(Lcom/netflix/spectator/api/Clock;Lio/micrometer/core/instrument/spectator/step/StepRegistryConfig;)V
+#start()V
+#stop()V
@0.9.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/spectator/step/StepRegistryConfig;Lcom/netflix/spectator/api/Clock;)V
-#<init>(Lcom/netflix/spectator/api/Clock;Lio/micrometer/core/instrument/spectator/step/StepRegistryConfig;)V
@1.0.0-rc.3
-###io/micrometer/core/instrument/spectator/step/AbstractStepRegistry

+###io/micrometer/core/instrument/spectator/step/StepClock
@0.7.0.RELEASE
+#<init>(Lcom/netflix/spectator/api/Clock;J)V
+#wallTime()J
+#monotonicTime()J
@1.0.0-rc.3
-###io/micrometer/core/instrument/spectator/step/StepClock

+###io/micrometer/core/instrument/spectator/step/StepCounter
@0.7.0.RELEASE
+#<init>(Lcom/netflix/spectator/api/Id;Lcom/netflix/spectator/api/Clock;J)V
+#id()Lcom/netflix/spectator/api/Id;
+#hasExpired()Z
+#measure()Ljava/lang/Iterable;
+#increment()V
+#increment(J)V
+#count()J
@1.0.0-rc.3
-###io/micrometer/core/instrument/spectator/step/StepCounter

+###io/micrometer/core/instrument/spectator/step/StepRegistryConfig
@0.7.0.RELEASE
+#prefix()Ljava/lang/String;
+#step()Ljava/time/Duration;
+#enabled()Z
+#numThreads()I
+#connectTimeout()Ljava/time/Duration;
+#readTimeout()Ljava/time/Duration;
+#batchSize()I
@0.12.0.RELEASE
-#prefix()Ljava/lang/String;
@1.0.0-rc.3
-###io/micrometer/core/instrument/spectator/step/StepRegistryConfig

+###io/micrometer/core/instrument/spectator/step/StepSpectatorMeterRegistry
@0.10.0.RELEASE
+#<init>(Lcom/netflix/spectator/api/Registry;Lio/micrometer/core/instrument/Clock;J)V
+#register(Ljava/lang/String;Ljava/lang/Iterable;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/MeterRegistry;
@0.11.0.RELEASE
+#register(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Meter;
-#register(Ljava/lang/String;Ljava/lang/Iterable;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/MeterRegistry;
@0.12.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/spectator/step/StepRegistryConfig;Lcom/netflix/spectator/api/Registry;Lio/micrometer/core/instrument/Clock;J)V
-#<init>(Lcom/netflix/spectator/api/Registry;Lio/micrometer/core/instrument/Clock;J)V
@1.0.0-rc.3
-###io/micrometer/core/instrument/spectator/step/StepSpectatorMeterRegistry

+###io/micrometer/core/instrument/stats/hist/Bucket
@0.6.3.RELEASE
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;J)V
+#getTag()Ljava/lang/String;
+#getTag(Ljava/util/function/Function;)Ljava/lang/String;
+#increment()Lio/micrometer/core/instrument/stats/hist/Bucket;
+#getValue()D
@0.11.0.RELEASE
+#<init>(Ljava/lang/Object;ZJ)V
+#isPercentile()Z
+#getValue()J
-#<init>(Ljava/lang/Object;)V
-#<init>(Ljava/lang/Object;J)V
-#getValue()D
@0.12.0.RELEASE
+#<init>(Ljava/lang/Object;I)V
+#getTag()Ljava/lang/Object;
+#getTagString()Ljava/lang/String;
+#getTagString(Ljava/util/function/Function;)Ljava/lang/String;
+#toString()Ljava/lang/String;
+#getIndex()Ljava/lang/Integer;
-#<init>(Ljava/lang/Object;ZJ)V
-#isPercentile()Z
-#getTag()Ljava/lang/String;
-#getTag(Ljava/util/function/Function;)Ljava/lang/String;
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/hist/Bucket

+###io/micrometer/core/instrument/stats/hist/BucketFilter
@0.12.0.RELEASE
+#clampMax(Ljava/lang/Comparable;)Lio/micrometer/core/instrument/stats/hist/BucketFilter;
+#clampMin(Ljava/lang/Comparable;)Lio/micrometer/core/instrument/stats/hist/BucketFilter;
+#shouldPublish(Lio/micrometer/core/instrument/stats/hist/Bucket;)Z
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/hist/BucketFilter

+###io/micrometer/core/instrument/stats/hist/BucketFunction
@0.6.3.RELEASE
+#bucket(D)Ljava/lang/Object;
@0.12.0.RELEASE
+#buckets()Ljava/util/Collection;
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/hist/BucketFunction

+###io/micrometer/core/instrument/stats/hist/DefaultHistogram$Builder
@0.12.0.RELEASE
+#create(Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;)Lio/micrometer/core/instrument/stats/hist/DefaultHistogram;
+#create(Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;)Lio/micrometer/core/instrument/stats/hist/Histogram;
@1.0.0-rc.2
+#summation(Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;)Lio/micrometer/core/instrument/stats/hist/DefaultHistogram$Builder;
+#filterBuckets(Lio/micrometer/core/instrument/stats/hist/BucketFilter;)Lio/micrometer/core/instrument/stats/hist/DefaultHistogram$Builder;
+#summation(Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;)Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
+#filterBuckets(Lio/micrometer/core/instrument/stats/hist/BucketFilter;)Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/hist/DefaultHistogram$Builder

+###io/micrometer/core/instrument/stats/hist/DefaultHistogram
@0.12.0.RELEASE
+#getBuckets()Ljava/util/Collection;
+#filterBuckets(Lio/micrometer/core/instrument/stats/hist/BucketFilter;)Lio/micrometer/core/instrument/stats/hist/Histogram;
+#getBucket(Ljava/lang/Object;)Lio/micrometer/core/instrument/stats/hist/Bucket;
+#observe(D)V
+#isCumulative()Z
@1.0.0-rc.2
-#filterBuckets(Lio/micrometer/core/instrument/stats/hist/BucketFilter;)Lio/micrometer/core/instrument/stats/hist/Histogram;
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/hist/DefaultHistogram

+###io/micrometer/core/instrument/stats/hist/DoubleHistogram
@0.12.0.RELEASE
+#infinityBucket()V
@1.0.0-rc.2
-###io/micrometer/core/instrument/stats/hist/DoubleHistogram

+###io/micrometer/core/instrument/stats/hist/Histogram$Builder
@0.11.0.RELEASE
+#create(Ljava/util/concurrent/TimeUnit;Lio/micrometer/core/instrument/stats/hist/Histogram$Type;)Lio/micrometer/core/instrument/stats/hist/Histogram;
+#bucketListener(Lio/micrometer/core/instrument/stats/hist/BucketListener;)Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
+#type(Lio/micrometer/core/instrument/stats/hist/Histogram$Type;)Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
+#usedForPercentiles()Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
@0.12.0.RELEASE
+#summation(Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;)Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
+#create(Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;)Lio/micrometer/core/instrument/stats/hist/Histogram;
-#create(Ljava/util/concurrent/TimeUnit;Lio/micrometer/core/instrument/stats/hist/Histogram$Type;)Lio/micrometer/core/instrument/stats/hist/Histogram;
-#bucketListener(Lio/micrometer/core/instrument/stats/hist/BucketListener;)Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
-#type(Lio/micrometer/core/instrument/stats/hist/Histogram$Type;)Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
-#usedForPercentiles()Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
@1.0.0-rc.2
+#filterBuckets(Lio/micrometer/core/instrument/stats/hist/BucketFilter;)Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/hist/Histogram$Builder

+###io/micrometer/core/instrument/stats/hist/Histogram$Summation
@0.12.0.RELEASE
+#values()[Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;
+#valueOf(Ljava/lang/String;)Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/hist/Histogram$Summation

+###io/micrometer/core/instrument/stats/hist/Histogram
@0.6.3.RELEASE
+#observe(D)V
+#getBuckets()Ljava/util/Collection;
@0.11.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/stats/hist/BucketFunction;Lio/micrometer/core/instrument/stats/hist/Histogram$Type;Ljava/util/List;Z)V
+#isCumulative()Z
+#isPercentiles()Z
+#getType()Lio/micrometer/core/instrument/stats/hist/Histogram$Type;
+#function(Lio/micrometer/core/instrument/stats/hist/BucketFunction;)Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
+#linear(DDI)Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
+#linearTime(Ljava/util/concurrent/TimeUnit;DDI)Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
+#exponential(DDI)Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
+#exponentialTime(Ljava/util/concurrent/TimeUnit;DDI)Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
+#percentiles()Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
+#percentilesTime()Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
@0.12.0.RELEASE
+#filterBuckets(Lio/micrometer/core/instrument/stats/hist/BucketFilter;)Lio/micrometer/core/instrument/stats/hist/Histogram;
+#getBucket(Ljava/lang/Object;)Lio/micrometer/core/instrument/stats/hist/Bucket;
+#function(Lio/micrometer/core/instrument/stats/hist/BucketFunction;)Lio/micrometer/core/instrument/stats/hist/DefaultHistogram$Builder;
+#linear(DDI)Lio/micrometer/core/instrument/stats/hist/DefaultHistogram$Builder;
+#linearTime(Ljava/util/concurrent/TimeUnit;DDI)Lio/micrometer/core/instrument/stats/hist/TimeHistogram$Builder;
+#exponential(DDI)Lio/micrometer/core/instrument/stats/hist/DefaultHistogram$Builder;
+#exponentialTime(Ljava/util/concurrent/TimeUnit;DDI)Lio/micrometer/core/instrument/stats/hist/TimeHistogram$Builder;
+#percentiles()Lio/micrometer/core/instrument/stats/hist/PercentileHistogram$Builder;
+#percentilesTime()Lio/micrometer/core/instrument/stats/hist/PercentileTimeHistogram$Builder;
+#linearFunction(DDI)Lio/micrometer/core/instrument/stats/hist/BucketFunction;
+#exponentialFunction(DDI)Lio/micrometer/core/instrument/stats/hist/BucketFunction;
-#<init>(Lio/micrometer/core/instrument/stats/hist/BucketFunction;Lio/micrometer/core/instrument/stats/hist/Histogram$Type;Ljava/util/List;Z)V
-#isPercentiles()Z
-#getType()Lio/micrometer/core/instrument/stats/hist/Histogram$Type;
-#function(Lio/micrometer/core/instrument/stats/hist/BucketFunction;)Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
-#linear(DDI)Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
-#linearTime(Ljava/util/concurrent/TimeUnit;DDI)Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
-#exponential(DDI)Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
-#exponentialTime(Ljava/util/concurrent/TimeUnit;DDI)Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
-#percentiles()Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
-#percentilesTime()Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
@1.0.0-rc.2
-#filterBuckets(Lio/micrometer/core/instrument/stats/hist/BucketFilter;)Lio/micrometer/core/instrument/stats/hist/Histogram;
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/hist/Histogram

+###io/micrometer/core/instrument/stats/hist/PercentileBucketFunction
@0.12.0.RELEASE
+#bucket(D)Ljava/lang/Double;
+#buckets()Ljava/util/Collection;
+#bucket(D)Ljava/lang/Object;
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/hist/PercentileBucketFunction

+###io/micrometer/core/instrument/stats/hist/PercentileHistogram$Builder
@0.12.0.RELEASE
+#create(Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;)Lio/micrometer/core/instrument/stats/hist/PercentileHistogram;
+#create(Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;)Lio/micrometer/core/instrument/stats/hist/Histogram;
@1.0.0-rc.2
+#summation(Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;)Lio/micrometer/core/instrument/stats/hist/PercentileHistogram$Builder;
+#filterBuckets(Lio/micrometer/core/instrument/stats/hist/BucketFilter;)Lio/micrometer/core/instrument/stats/hist/PercentileHistogram$Builder;
+#summation(Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;)Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
+#filterBuckets(Lio/micrometer/core/instrument/stats/hist/BucketFilter;)Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/hist/PercentileHistogram$Builder

+###io/micrometer/core/instrument/stats/hist/PercentileHistogram
@0.12.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/stats/hist/BucketFunction;Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;)V
@1.0.0-rc.2
+#<init>(Lio/micrometer/core/instrument/stats/hist/BucketFunction;Ljava/util/Collection;Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;)V
-#<init>(Lio/micrometer/core/instrument/stats/hist/BucketFunction;Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;)V
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/hist/PercentileHistogram

+###io/micrometer/core/instrument/stats/hist/PercentileTimeHistogram$Builder
@0.12.0.RELEASE
+#create(Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;)Lio/micrometer/core/instrument/stats/hist/PercentileTimeHistogram;
+#create(Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;)Lio/micrometer/core/instrument/stats/hist/Histogram;
@1.0.0-rc.2
+#summation(Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;)Lio/micrometer/core/instrument/stats/hist/PercentileTimeHistogram$Builder;
+#filterBuckets(Lio/micrometer/core/instrument/stats/hist/BucketFilter;)Lio/micrometer/core/instrument/stats/hist/PercentileTimeHistogram$Builder;
+#bucketTimeScale(Ljava/util/concurrent/TimeUnit;)Lio/micrometer/core/instrument/stats/hist/PercentileTimeHistogram$Builder;
+#create(Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;)Lio/micrometer/core/instrument/stats/hist/TimeHistogram;
+#bucketTimeScale(Ljava/util/concurrent/TimeUnit;)Lio/micrometer/core/instrument/stats/hist/TimeHistogram$Builder;
+#filterBuckets(Lio/micrometer/core/instrument/stats/hist/BucketFilter;)Lio/micrometer/core/instrument/stats/hist/TimeHistogram$Builder;
+#summation(Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;)Lio/micrometer/core/instrument/stats/hist/TimeHistogram$Builder;
+#summation(Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;)Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
+#filterBuckets(Lio/micrometer/core/instrument/stats/hist/BucketFilter;)Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/hist/PercentileTimeHistogram$Builder

+###io/micrometer/core/instrument/stats/hist/PercentileTimeHistogram
@0.12.0.RELEASE
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/hist/PercentileTimeHistogram

+###io/micrometer/core/instrument/stats/hist/TimeHistogram$Builder
@0.12.0.RELEASE
+#create(Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;)Lio/micrometer/core/instrument/stats/hist/TimeHistogram;
+#create(Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;)Lio/micrometer/core/instrument/stats/hist/Histogram;
@1.0.0-rc.2
+#summation(Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;)Lio/micrometer/core/instrument/stats/hist/TimeHistogram$Builder;
+#filterBuckets(Lio/micrometer/core/instrument/stats/hist/BucketFilter;)Lio/micrometer/core/instrument/stats/hist/TimeHistogram$Builder;
+#bucketTimeScale(Ljava/util/concurrent/TimeUnit;)Lio/micrometer/core/instrument/stats/hist/TimeHistogram$Builder;
+#summation(Lio/micrometer/core/instrument/stats/hist/Histogram$Summation;)Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
+#filterBuckets(Lio/micrometer/core/instrument/stats/hist/BucketFilter;)Lio/micrometer/core/instrument/stats/hist/Histogram$Builder;
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/hist/TimeHistogram$Builder

+###io/micrometer/core/instrument/stats/hist/TimeHistogram
@0.12.0.RELEASE
+#bucketTimeScale(Ljava/util/concurrent/TimeUnit;)V
+#getBuckets()Ljava/util/Collection;
+#filterBuckets(Lio/micrometer/core/instrument/stats/hist/BucketFilter;)Lio/micrometer/core/instrument/stats/hist/Histogram;
+#infinityBucket()V
+#getBucket(Ljava/lang/Double;)Lio/micrometer/core/instrument/stats/hist/Bucket;
+#observe(D)V
+#isCumulative()Z
+#getBucket(Ljava/lang/Object;)Lio/micrometer/core/instrument/stats/hist/Bucket;
@1.0.0-rc.2
-#bucketTimeScale(Ljava/util/concurrent/TimeUnit;)V
-#filterBuckets(Lio/micrometer/core/instrument/stats/hist/BucketFilter;)Lio/micrometer/core/instrument/stats/hist/Histogram;
-#infinityBucket()V
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/hist/TimeHistogram

+###io/micrometer/core/instrument/stats/quantile/CKMSQuantiles$Builder
@0.6.3.RELEASE
+#<init>()V
+#quantile(DD)Lio/micrometer/core/instrument/stats/quantile/CKMSQuantiles$Builder;
+#create()Lio/micrometer/core/instrument/stats/quantile/CKMSQuantiles;
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/quantile/CKMSQuantiles$Builder

+###io/micrometer/core/instrument/stats/quantile/CKMSQuantiles$Quantile
@0.6.3.RELEASE
+#getError()D
+#toString()Ljava/lang/String;
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/quantile/CKMSQuantiles$Quantile

+###io/micrometer/core/instrument/stats/quantile/CKMSQuantiles
@0.6.3.RELEASE
+#observe(D)V
+#get(D)Ljava/lang/Double;
+#monitored()Ljava/util/Collection;
+#getQuantiles()[Lio/micrometer/core/instrument/stats/quantile/CKMSQuantiles$Quantile;
+#quantile(DD)Lio/micrometer/core/instrument/stats/quantile/CKMSQuantiles$Builder;
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/quantile/CKMSQuantiles

+###io/micrometer/core/instrument/stats/quantile/Frugal2UQuantiles$Builder
@0.6.3.RELEASE
+#<init>()V
+#quantile(DD)Lio/micrometer/core/instrument/stats/quantile/Frugal2UQuantiles$Builder;
+#create()Lio/micrometer/core/instrument/stats/quantile/Frugal2UQuantiles;
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/quantile/Frugal2UQuantiles$Builder

+###io/micrometer/core/instrument/stats/quantile/Frugal2UQuantiles
@0.6.3.RELEASE
+#observe(D)V
+#get(D)Ljava/lang/Double;
+#monitored()Ljava/util/Collection;
+#getQuantiles()[Lio/micrometer/core/instrument/stats/quantile/Frugal2UQuantiles$Quantile;
+#quantile(DD)Lio/micrometer/core/instrument/stats/quantile/Frugal2UQuantiles$Builder;
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/quantile/Frugal2UQuantiles

+###io/micrometer/core/instrument/stats/quantile/GKQuantiles$Builder
@0.6.3.RELEASE
+#<init>()V
+#quantiles([D)Lio/micrometer/core/instrument/stats/quantile/GKQuantiles$Builder;
+#error(D)Lio/micrometer/core/instrument/stats/quantile/GKQuantiles$Builder;
+#create()Lio/micrometer/core/instrument/stats/quantile/GKQuantiles;
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/quantile/GKQuantiles$Builder

+###io/micrometer/core/instrument/stats/quantile/GKQuantiles
@0.6.3.RELEASE
+#<init>(Ljava/util/Collection;D)V
+#monitored()Ljava/util/Collection;
+#setEpsilon(D)V
+#observe(D)V
+#get(D)Ljava/lang/Double;
+#getCount()Ljava/lang/Integer;
+#toString()Ljava/lang/String;
+#quantiles([D)Lio/micrometer/core/instrument/stats/quantile/GKQuantiles$Builder;
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/quantile/GKQuantiles

+###io/micrometer/core/instrument/stats/quantile/PowerOfTwo
@0.6.3.RELEASE
+#<init>()V
+#ceilToNext(I)I
+#floorToNext(Ljava/lang/Float;)Ljava/lang/Float;
+#floorToNext(D)D
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/quantile/PowerOfTwo

+###io/micrometer/core/instrument/stats/quantile/Quantiles
@0.6.3.RELEASE
+#observe(D)V
+#get(D)Ljava/lang/Double;
+#monitored()Ljava/util/Collection;
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/quantile/Quantiles

+###io/micrometer/core/instrument/stats/quantile/SlidingWindow
@0.6.3.RELEASE
+#<init>(Ljava/lang/Integer;)V
+#add(Ljava/lang/Object;)V
+#add(Ljava/lang/Object;Ljava/lang/Integer;)V
+#slideWindowByOnePosition()V
+#slideWindow(Ljava/lang/Integer;)V
+#get(Ljava/lang/Integer;)Ljava/lang/Object;
+#getOldestElement()Ljava/lang/Object;
+#getNewestElement()Ljava/lang/Object;
+#getAll()Ljava/util/Collection;
+#getAllLifeTimes()Ljava/util/Collection;
+#getLifeTime(Ljava/lang/Integer;)Ljava/lang/Integer;
+#getWindowSize()Ljava/lang/Integer;
+#getSize(Ljava/lang/Integer;)Ljava/lang/Integer;
+#isEmpty()Z
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/quantile/SlidingWindow

+###io/micrometer/core/instrument/stats/quantile/WindowSketchQuantiles$Block
@0.6.3.RELEASE
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/quantile/WindowSketchQuantiles$Block

+###io/micrometer/core/instrument/stats/quantile/WindowSketchQuantiles$Builder
@0.6.3.RELEASE
+#<init>()V
+#quantiles([D)Lio/micrometer/core/instrument/stats/quantile/WindowSketchQuantiles$Builder;
+#error(D)Lio/micrometer/core/instrument/stats/quantile/WindowSketchQuantiles$Builder;
+#create()Lio/micrometer/core/instrument/stats/quantile/WindowSketchQuantiles;
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/quantile/WindowSketchQuantiles$Builder

+###io/micrometer/core/instrument/stats/quantile/WindowSketchQuantiles$Quantiles
@0.6.3.RELEASE
+#<init>(Lio/micrometer/core/instrument/stats/quantile/WindowSketchQuantiles;Ljava/lang/Float;Ljava/util/LinkedList;)V
+#getQuantile(F)Ljava/lang/Double;
+#getQuantiles()Ljava/util/LinkedList;
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/quantile/WindowSketchQuantiles$Quantiles

+###io/micrometer/core/instrument/stats/quantile/WindowSketchQuantiles
@0.6.3.RELEASE
+#<init>(Ljava/util/Collection;D)V
+#observe(D)V
+#get(D)Ljava/lang/Double;
+#monitored()Ljava/util/Collection;
+#setWindowSize(I)V
+#toString()Ljava/lang/String;
+#quantiles([D)Lio/micrometer/core/instrument/stats/quantile/WindowSketchQuantiles$Builder;
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/quantile/WindowSketchQuantiles

+###io/micrometer/core/instrument/util/AnnotationUtils
@0.7.0.RELEASE
+#<init>()V
+#findTimed(Ljava/lang/Class;)Ljava/util/stream/Stream;
+#findTimed(Ljava/lang/reflect/Method;)Ljava/util/stream/Stream;
@0.10.0.RELEASE
-#<init>()V
@1.0.0-rc.3
-###io/micrometer/core/instrument/util/AnnotationUtils

+###io/micrometer/core/instrument/config/PropertyMeterFilter
@1.0.0-rc.4
+#<init>()V
+#get(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#accept(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/config/MeterFilterReply;
+#configure(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/histogram/HistogramConfig;)Lio/micrometer/core/instrument/histogram/HistogramConfig;
@1.0.0-rc.8
-###io/micrometer/core/instrument/config/PropertyMeterFilter

+###io/micrometer/core/instrument/CountAtValue
@1.0.0-rc.4
+#of(JD)Lio/micrometer/core/instrument/CountAtValue;
+#value()J
+#value(Ljava/util/concurrent/TimeUnit;)D
+#count()D
+#toString()Ljava/lang/String;
@1.0.0
-###io/micrometer/core/instrument/CountAtValue

+###io/micrometer/core/instrument/histogram/HistogramConfig$Builder
@1.0.0-rc.3
+#<init>()V
+#percentilesHistogram(Ljava/lang/Boolean;)Lio/micrometer/core/instrument/histogram/HistogramConfig$Builder;
+#percentiles([D)Lio/micrometer/core/instrument/histogram/HistogramConfig$Builder;
+#sla([J)Lio/micrometer/core/instrument/histogram/HistogramConfig$Builder;
+#minimumExpectedValue(Ljava/lang/Long;)Lio/micrometer/core/instrument/histogram/HistogramConfig$Builder;
+#maximumExpectedValue(Ljava/lang/Long;)Lio/micrometer/core/instrument/histogram/HistogramConfig$Builder;
+#histogramExpiry(Ljava/time/Duration;)Lio/micrometer/core/instrument/histogram/HistogramConfig$Builder;
+#histogramBufferLength(Ljava/lang/Integer;)Lio/micrometer/core/instrument/histogram/HistogramConfig$Builder;
+#build()Lio/micrometer/core/instrument/histogram/HistogramConfig;
@1.0.0
-###io/micrometer/core/instrument/histogram/HistogramConfig$Builder

+###io/micrometer/core/instrument/histogram/HistogramConfig
@1.0.0-rc.3
+#<init>()V
+#merge(Lio/micrometer/core/instrument/histogram/HistogramConfig;)Lio/micrometer/core/instrument/histogram/HistogramConfig;
+#isPublishingHistogram()Z
+#getHistogramBuckets(Z)Ljava/util/NavigableSet;
+#isPercentileHistogram()Ljava/lang/Boolean;
+#getPercentiles()[D
+#getMinimumExpectedValue()Ljava/lang/Long;
+#getMaximumExpectedValue()Ljava/lang/Long;
+#getHistogramExpiry()Ljava/time/Duration;
+#getHistogramBufferLength()Ljava/lang/Integer;
+#getSlaBoundaries()[J
+#builder()Lio/micrometer/core/instrument/histogram/HistogramConfig$Builder;
+#merge(Ljava/lang/Object;)Ljava/lang/Object;
@1.0.0
-###io/micrometer/core/instrument/histogram/HistogramConfig

+###io/micrometer/core/instrument/histogram/PercentileHistogramBuckets
@1.0.0-rc.3
+#<init>()V
+#buckets(Lio/micrometer/core/instrument/histogram/HistogramConfig;)Ljava/util/NavigableSet;
@1.0.0
-###io/micrometer/core/instrument/histogram/PercentileHistogramBuckets

+###io/micrometer/core/instrument/histogram/TimeWindowHistogram
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/histogram/HistogramConfig;)V
+#percentile(D)D
+#histogramCountAtValue(D)D
+#record(D)V
@1.0.0-rc.4
-#percentile(D)D
-#histogramCountAtValue(D)D
-#record(D)V
@1.0.0
-###io/micrometer/core/instrument/histogram/TimeWindowHistogram

+###io/micrometer/core/instrument/histogram/TimeWindowLatencyHistogram
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/histogram/HistogramConfig;)V
+#percentile(DLjava/util/concurrent/TimeUnit;)D
+#histogramCountAtValue(J)D
+#record(J)V
@1.0.0-rc.4
-#percentile(DLjava/util/concurrent/TimeUnit;)D
-#histogramCountAtValue(J)D
-#record(J)V
@1.0.0-rc.6
+#<init>(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/histogram/HistogramConfig;Lio/micrometer/core/instrument/histogram/pause/PauseDetector;)V
@1.0.0
-###io/micrometer/core/instrument/histogram/TimeWindowLatencyHistogram

+###io/micrometer/core/instrument/HistogramSnapshot
@1.0.0-rc.4
+#of(JDD[Lio/micrometer/core/instrument/ValueAtPercentile;[Lio/micrometer/core/instrument/CountAtValue;)Lio/micrometer/core/instrument/HistogramSnapshot;
+#empty()Lio/micrometer/core/instrument/HistogramSnapshot;
+#count()J
+#total()D
+#total(Ljava/util/concurrent/TimeUnit;)D
+#max()D
+#max(Ljava/util/concurrent/TimeUnit;)D
+#mean()D
+#mean(Ljava/util/concurrent/TimeUnit;)D
+#percentileValues()[Lio/micrometer/core/instrument/ValueAtPercentile;
+#histogramCounts()[Lio/micrometer/core/instrument/CountAtValue;
+#toString()Ljava/lang/String;
@1.0.0
-###io/micrometer/core/instrument/HistogramSnapshot

+###io/micrometer/core/instrument/internal/DefaultFunctionTimer
@1.0.0-rc.2
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/function/ToLongFunction;Ljava/util/function/ToDoubleFunction;Ljava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;)V
+#count()J
+#totalTime(Ljava/util/concurrent/TimeUnit;)D
+#getId()Lio/micrometer/core/instrument/Meter$Id;
+#baseTimeUnit()Ljava/util/concurrent/TimeUnit;
+#getType()Lio/micrometer/core/instrument/Meter$Type;
@1.0.0-rc.4
+#type()Lio/micrometer/core/instrument/Meter$Type;
-#getType()Lio/micrometer/core/instrument/Meter$Type;
@1.0.0-rc.6
-###io/micrometer/core/instrument/internal/DefaultFunctionTimer

+###io/micrometer/core/instrument/simple/CumulativeCounter
@1.0.0-rc.4
+#<init>(Lio/micrometer/core/instrument/Meter$Id;)V
+#increment(D)V
+#count()D
@1.0.0-rc.6
-###io/micrometer/core/instrument/simple/CumulativeCounter

+###io/micrometer/core/instrument/simple/CumulativeDistributionSummary
@1.0.0-rc.4
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/histogram/HistogramConfig;)V
+#count()J
+#totalAmount()D
+#max()D
+#measure()Ljava/lang/Iterable;
@1.0.0-rc.6
-###io/micrometer/core/instrument/simple/CumulativeDistributionSummary

+###io/micrometer/core/instrument/simple/CumulativeTimer
@1.0.0-rc.4
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/histogram/HistogramConfig;)V
+#count()J
+#totalTime(Ljava/util/concurrent/TimeUnit;)D
+#max(Ljava/util/concurrent/TimeUnit;)D
+#measure()Ljava/lang/Iterable;
@1.0.0-rc.6
-###io/micrometer/core/instrument/simple/CumulativeTimer

+###io/micrometer/core/instrument/ValueAtPercentile
@1.0.0-rc.4
+#of(DD)Lio/micrometer/core/instrument/ValueAtPercentile;
+#percentile()D
+#value()D
+#value(Ljava/util/concurrent/TimeUnit;)D
+#toString()Ljava/lang/String;
@1.0.0
-###io/micrometer/core/instrument/ValueAtPercentile

+###io/micrometer/core/instrument/binder/grpc/DefaultGrpcClientObservationConvention
@1.10.0
+#<init>()V
+#getName()Ljava/lang/String;
+#getContextualName(Lio/micrometer/core/instrument/binder/grpc/GrpcClientObservationContext;)Ljava/lang/String;
+#getLowCardinalityKeyValues(Lio/micrometer/core/instrument/binder/grpc/GrpcClientObservationContext;)Lio/micrometer/common/KeyValues;
+#getContextualName(Lio/micrometer/observation/Observation$Context;)Ljava/lang/String;
+#getLowCardinalityKeyValues(Lio/micrometer/observation/Observation$Context;)Lio/micrometer/common/KeyValues;

+###io/micrometer/core/instrument/binder/grpc/DefaultGrpcServerObservationConvention
@1.10.0
+#<init>()V
+#getName()Ljava/lang/String;
+#getContextualName(Lio/micrometer/core/instrument/binder/grpc/GrpcServerObservationContext;)Ljava/lang/String;
+#getLowCardinalityKeyValues(Lio/micrometer/core/instrument/binder/grpc/GrpcServerObservationContext;)Lio/micrometer/common/KeyValues;
+#getContextualName(Lio/micrometer/observation/Observation$Context;)Ljava/lang/String;
+#getLowCardinalityKeyValues(Lio/micrometer/observation/Observation$Context;)Lio/micrometer/common/KeyValues;

+###io/micrometer/core/instrument/binder/grpc/GrpcClientObservationContext
@1.10.0
+#<init>(Lio/micrometer/observation/transport/Propagator$Setter;)V
+#getServiceName()Ljava/lang/String;
+#setServiceName(Ljava/lang/String;)V
+#getMethodName()Ljava/lang/String;
+#setMethodName(Ljava/lang/String;)V
+#getFullMethodName()Ljava/lang/String;
+#setFullMethodName(Ljava/lang/String;)V
+#getMethodType()Lio/grpc/MethodDescriptor$MethodType;
+#setMethodType(Lio/grpc/MethodDescriptor$MethodType;)V
+#getStatusCode()Lio/grpc/Status$Code;
+#setStatusCode(Lio/grpc/Status$Code;)V
+#getAuthority()Ljava/lang/String;
+#setAuthority(Ljava/lang/String;)V

+###io/micrometer/core/instrument/binder/grpc/GrpcClientObservationConvention
@1.10.0
+#supportsContext(Lio/micrometer/observation/Observation$Context;)Z

+###io/micrometer/core/instrument/binder/grpc/GrpcObservationDocumentation$GrpcClientEvents
@1.10.0
+#values()[Lio/micrometer/core/instrument/binder/grpc/GrpcObservationDocumentation$GrpcClientEvents;
+#valueOf(Ljava/lang/String;)Lio/micrometer/core/instrument/binder/grpc/GrpcObservationDocumentation$GrpcClientEvents;

+###io/micrometer/core/instrument/binder/grpc/GrpcObservationDocumentation$GrpcServerEvents
@1.10.0
+#values()[Lio/micrometer/core/instrument/binder/grpc/GrpcObservationDocumentation$GrpcServerEvents;
+#valueOf(Ljava/lang/String;)Lio/micrometer/core/instrument/binder/grpc/GrpcObservationDocumentation$GrpcServerEvents;

+###io/micrometer/core/instrument/binder/grpc/GrpcObservationDocumentation$LowCardinalityKeyNames
@1.10.0
+#values()[Lio/micrometer/core/instrument/binder/grpc/GrpcObservationDocumentation$LowCardinalityKeyNames;
+#valueOf(Ljava/lang/String;)Lio/micrometer/core/instrument/binder/grpc/GrpcObservationDocumentation$LowCardinalityKeyNames;

+###io/micrometer/core/instrument/binder/grpc/GrpcObservationDocumentation
@1.10.0
+#values()[Lio/micrometer/core/instrument/binder/grpc/GrpcObservationDocumentation;
+#valueOf(Ljava/lang/String;)Lio/micrometer/core/instrument/binder/grpc/GrpcObservationDocumentation;

+###io/micrometer/core/instrument/binder/grpc/GrpcServerObservationContext
@1.10.0
+#<init>(Lio/micrometer/observation/transport/Propagator$Getter;)V
+#getServiceName()Ljava/lang/String;
+#setServiceName(Ljava/lang/String;)V
+#getMethodName()Ljava/lang/String;
+#setMethodName(Ljava/lang/String;)V
+#getFullMethodName()Ljava/lang/String;
+#setFullMethodName(Ljava/lang/String;)V
+#getMethodType()Lio/grpc/MethodDescriptor$MethodType;
+#setMethodType(Lio/grpc/MethodDescriptor$MethodType;)V
+#getStatusCode()Lio/grpc/Status$Code;
+#setStatusCode(Lio/grpc/Status$Code;)V
+#getAuthority()Ljava/lang/String;
+#setAuthority(Ljava/lang/String;)V

+###io/micrometer/core/instrument/binder/grpc/GrpcServerObservationConvention
@1.10.0
+#supportsContext(Lio/micrometer/observation/Observation$Context;)Z

+###io/micrometer/core/instrument/binder/grpc/ObservationGrpcClientInterceptor
@1.10.0
+#<init>(Lio/micrometer/observation/ObservationRegistry;)V
+#interceptCall(Lio/grpc/MethodDescriptor;Lio/grpc/CallOptions;Lio/grpc/Channel;)Lio/grpc/ClientCall;
+#setCustomConvention(Lio/micrometer/core/instrument/binder/grpc/GrpcClientObservationConvention;)V

+###io/micrometer/core/instrument/binder/grpc/ObservationGrpcServerInterceptor
@1.10.0
+#<init>(Lio/micrometer/observation/ObservationRegistry;)V
+#interceptCall(Lio/grpc/ServerCall;Lio/grpc/Metadata;Lio/grpc/ServerCallHandler;)Lio/grpc/ServerCall$Listener;
+#setCustomConvention(Lio/micrometer/core/instrument/binder/grpc/GrpcServerObservationConvention;)V

+###io/micrometer/core/instrument/binder/http/DefaultHttpJakartaServletRequestTagsProvider
@1.10.0
+#<init>()V
+#getTags(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)Ljava/lang/Iterable;

+###io/micrometer/core/instrument/binder/http/HttpJakartaServletRequestTagsProvider
@1.10.0
+#getTags(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)Ljava/lang/Iterable;

+###io/micrometer/core/instrument/binder/httpcomponents/ApacheHttpClientContext
@1.10.0
+#<init>(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;Ljava/util/function/Function;Z)V
+#getApacheHttpContext()Lorg/apache/http/protocol/HttpContext;
+#getUriMapper()Ljava/util/function/Function;
+#shouldExportTagsForRoute()Z

+###io/micrometer/core/instrument/binder/httpcomponents/ApacheHttpClientObservationConvention
@1.10.0
+#supportsContext(Lio/micrometer/observation/Observation$Context;)Z

+###io/micrometer/core/instrument/binder/httpcomponents/ApacheHttpClientObservationDocumentation
@1.10.0
+#values()[Lio/micrometer/core/instrument/binder/httpcomponents/ApacheHttpClientObservationDocumentation;
+#valueOf(Ljava/lang/String;)Lio/micrometer/core/instrument/binder/httpcomponents/ApacheHttpClientObservationDocumentation;

+###io/micrometer/core/instrument/binder/httpcomponents/DefaultApacheHttpClientObservationConvention
@1.10.0
+#getName()Ljava/lang/String;
+#getContextualName(Lio/micrometer/core/instrument/binder/httpcomponents/ApacheHttpClientContext;)Ljava/lang/String;
+#getLowCardinalityKeyValues(Lio/micrometer/core/instrument/binder/httpcomponents/ApacheHttpClientContext;)Lio/micrometer/common/KeyValues;
+#getContextualName(Lio/micrometer/observation/Observation$Context;)Ljava/lang/String;
+#getLowCardinalityKeyValues(Lio/micrometer/observation/Observation$Context;)Lio/micrometer/common/KeyValues;

+###io/micrometer/core/instrument/binder/jersey/server/DefaultJerseyObservationConvention
@1.10.0
+#<init>(Ljava/lang/String;)V
+#getLowCardinalityKeyValues(Lio/micrometer/core/instrument/binder/jersey/server/JerseyContext;)Lio/micrometer/common/KeyValues;
+#getName()Ljava/lang/String;
+#getContextualName(Lio/micrometer/core/instrument/binder/jersey/server/JerseyContext;)Ljava/lang/String;
+#getContextualName(Lio/micrometer/observation/Observation$Context;)Ljava/lang/String;
+#getLowCardinalityKeyValues(Lio/micrometer/observation/Observation$Context;)Lio/micrometer/common/KeyValues;

+###io/micrometer/core/instrument/binder/jersey/server/JerseyContext
@1.10.0
+#<init>(Lorg/glassfish/jersey/server/monitoring/RequestEvent;)V
+#setRequestEvent(Lorg/glassfish/jersey/server/monitoring/RequestEvent;)V
+#getRequestEvent()Lorg/glassfish/jersey/server/monitoring/RequestEvent;

+###io/micrometer/core/instrument/binder/jersey/server/JerseyObservationConvention
@1.10.0
+#supportsContext(Lio/micrometer/observation/Observation$Context;)Z

+###io/micrometer/core/instrument/binder/jersey/server/JerseyObservationDocumentation
@1.10.0
+#values()[Lio/micrometer/core/instrument/binder/jersey/server/JerseyObservationDocumentation;
+#valueOf(Ljava/lang/String;)Lio/micrometer/core/instrument/binder/jersey/server/JerseyObservationDocumentation;

+###io/micrometer/core/instrument/binder/jersey/server/ObservationApplicationEventListener
@1.10.0
+#<init>(Lio/micrometer/observation/ObservationRegistry;Ljava/lang/String;)V
+#<init>(Lio/micrometer/observation/ObservationRegistry;Ljava/lang/String;Lio/micrometer/core/instrument/binder/jersey/server/JerseyObservationConvention;)V
+#onEvent(Lorg/glassfish/jersey/server/monitoring/ApplicationEvent;)V
+#onRequest(Lorg/glassfish/jersey/server/monitoring/RequestEvent;)Lorg/glassfish/jersey/server/monitoring/RequestEventListener;

+###io/micrometer/core/instrument/binder/jersey/server/ObservationRequestEventListener
@1.10.0
+#<init>(Lio/micrometer/observation/ObservationRegistry;Ljava/lang/String;)V
+#<init>(Lio/micrometer/observation/ObservationRegistry;Ljava/lang/String;Lio/micrometer/core/instrument/binder/jersey/server/JerseyObservationConvention;)V
+#onEvent(Lorg/glassfish/jersey/server/monitoring/RequestEvent;)V

+###io/micrometer/core/instrument/binder/okhttp3/DefaultOkHttpObservationConvention
@1.10.0
+#<init>(Ljava/lang/String;)V
+#getLowCardinalityKeyValues(Lio/micrometer/core/instrument/binder/okhttp3/OkHttpContext;)Lio/micrometer/common/KeyValues;
+#getName()Ljava/lang/String;
+#getContextualName(Lio/micrometer/core/instrument/binder/okhttp3/OkHttpContext;)Ljava/lang/String;
+#getContextualName(Lio/micrometer/observation/Observation$Context;)Ljava/lang/String;
+#getLowCardinalityKeyValues(Lio/micrometer/observation/Observation$Context;)Lio/micrometer/common/KeyValues;

+###io/micrometer/core/instrument/binder/okhttp3/OkHttpContext
@1.10.0
+#<init>(Ljava/util/function/Function;Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Iterable;ZLokhttp3/Request;)V
+#setState(Lio/micrometer/core/instrument/binder/okhttp3/OkHttpObservationInterceptor$CallState;)V
+#getState()Lio/micrometer/core/instrument/binder/okhttp3/OkHttpObservationInterceptor$CallState;
+#getUrlMapper()Ljava/util/function/Function;
+#getExtraTags()Ljava/lang/Iterable;
+#getContextSpecificTags()Ljava/lang/Iterable;
+#getUnknownRequestTags()Ljava/lang/Iterable;
+#isIncludeHostTag()Z
+#getOriginalRequest()Lokhttp3/Request;
+#get()Lio/micrometer/core/instrument/binder/okhttp3/OkHttpContext;
+#get()Ljava/lang/Object;

+###io/micrometer/core/instrument/binder/okhttp3/OkHttpObservationConvention
@1.10.0
+#supportsContext(Lio/micrometer/observation/Observation$Context;)Z

+###io/micrometer/core/instrument/binder/okhttp3/OkHttpObservationDocumentation
@1.10.0
+#values()[Lio/micrometer/core/instrument/binder/okhttp3/OkHttpObservationDocumentation;
+#valueOf(Ljava/lang/String;)Lio/micrometer/core/instrument/binder/okhttp3/OkHttpObservationDocumentation;

+###io/micrometer/core/instrument/binder/okhttp3/OkHttpObservationInterceptor$Builder
@1.10.0
+#tags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/binder/okhttp3/OkHttpObservationInterceptor$Builder;
+#observationConvention(Lio/micrometer/core/instrument/binder/okhttp3/OkHttpObservationConvention;)Lio/micrometer/core/instrument/binder/okhttp3/OkHttpObservationInterceptor$Builder;
+#tag(Lio/micrometer/common/KeyValue;)Lio/micrometer/core/instrument/binder/okhttp3/OkHttpObservationInterceptor$Builder;
+#tag(Ljava/util/function/BiFunction;)Lio/micrometer/core/instrument/binder/okhttp3/OkHttpObservationInterceptor$Builder;
+#uriMapper(Ljava/util/function/Function;)Lio/micrometer/core/instrument/binder/okhttp3/OkHttpObservationInterceptor$Builder;
+#includeHostTag(Z)Lio/micrometer/core/instrument/binder/okhttp3/OkHttpObservationInterceptor$Builder;
+#requestTagKeys([Ljava/lang/String;)Lio/micrometer/core/instrument/binder/okhttp3/OkHttpObservationInterceptor$Builder;
+#requestTagKeys(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/binder/okhttp3/OkHttpObservationInterceptor$Builder;
+#build()Lio/micrometer/core/instrument/binder/okhttp3/OkHttpObservationInterceptor;

+###io/micrometer/core/instrument/binder/okhttp3/OkHttpObservationInterceptor
@1.10.0
+#<init>(Lio/micrometer/observation/ObservationRegistry;Lio/micrometer/core/instrument/binder/okhttp3/OkHttpObservationConvention;Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Iterable;Z)V
+#builder(Lio/micrometer/observation/ObservationRegistry;Ljava/lang/String;)Lio/micrometer/core/instrument/binder/okhttp3/OkHttpObservationInterceptor$Builder;
+#intercept(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;
+#setObservationConvention(Lio/micrometer/core/instrument/binder/okhttp3/OkHttpObservationConvention;)V

+###io/micrometer/core/instrument/docs/MeterDocumentation
@1.10.0
+#getName()Ljava/lang/String;
+#getBaseUnit()Ljava/lang/String;
+#getType()Lio/micrometer/core/instrument/Meter$Type;
+#getName([Ljava/lang/String;)Ljava/lang/String;
+#getKeyNames()[Lio/micrometer/common/docs/KeyName;
+#getAdditionalKeyNames()[Lio/micrometer/common/docs/KeyName;
+#overridesDefaultMetricFrom()Ljava/lang/Enum;
+#getPrefix()Ljava/lang/String;

+###io/micrometer/core/instrument/HighCardinalityTagsDetector
@1.10.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;)V
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;JLjava/time/Duration;)V
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;JLjava/time/Duration;Ljava/util/function/Consumer;)V
+#start()V
+#shutdown()V
+#close()V
+#findFirst()Ljava/util/Optional;

+###io/micrometer/core/instrument/observation/DefaultMeterObservationHandler
@1.10.0
+#<init>(Lio/micrometer/core/instrument/MeterRegistry;)V
+#onStart(Lio/micrometer/observation/Observation$Context;)V
+#onStop(Lio/micrometer/observation/Observation$Context;)V
+#onEvent(Lio/micrometer/observation/Observation$Event;Lio/micrometer/observation/Observation$Context;)V

+###io/micrometer/core/instrument/observation/MeterObservationHandler
@1.10.0
+#supportsContext(Lio/micrometer/observation/Observation$Context;)Z

+###io/micrometer/core/instrument/observation/ObservationOrTimerCompatibleInstrumentation
@1.10.0
+#start(Lio/micrometer/core/instrument/MeterRegistry;Lio/micrometer/observation/ObservationRegistry;Ljava/util/function/Supplier;Lio/micrometer/observation/ObservationConvention;Lio/micrometer/observation/ObservationConvention;)Lio/micrometer/core/instrument/observation/ObservationOrTimerCompatibleInstrumentation;
+#setResponse(Ljava/lang/Object;)V
+#setThrowable(Ljava/lang/Throwable;)V
+#stop(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Supplier;)V

+###io/micrometer/core/instrument/kotlin/AsContextElementKt
@1.10.0
+#asContextElement(Lio/micrometer/observation/ObservationRegistry;)Lkotlin/coroutines/CoroutineContext;
+#currentObservation(Lkotlin/coroutines/CoroutineContext;)Lio/micrometer/observation/Observation;

+###io/micrometer/core/instrument/binder/jdk/DefaultHttpClientObservationConvention
@1.10.0
+#<init>()V
+#getLowCardinalityKeyValues(Lio/micrometer/core/instrument/binder/jdk/HttpClientContext;)Lio/micrometer/common/KeyValues;
+#getName()Ljava/lang/String;
+#getContextualName(Lio/micrometer/core/instrument/binder/jdk/HttpClientContext;)Ljava/lang/String;
+#getContextualName(Lio/micrometer/observation/Observation$Context;)Ljava/lang/String;
+#getLowCardinalityKeyValues(Lio/micrometer/observation/Observation$Context;)Lio/micrometer/common/KeyValues;

+###io/micrometer/core/instrument/binder/jdk/HttpClientContext
@1.10.0
+#<init>(Ljava/util/function/Function;)V
+#getUriMapper()Ljava/util/function/Function;

+###io/micrometer/core/instrument/binder/jdk/HttpClientObservationConvention
@1.10.0
+#supportsContext(Lio/micrometer/observation/Observation$Context;)Z

+###io/micrometer/core/instrument/binder/jdk/MicrometerHttpClient$InstrumentationBuilder
@1.10.0
+#<init>(Ljava/net/http/HttpClient;Lio/micrometer/core/instrument/MeterRegistry;)V
+#observationRegistry(Lio/micrometer/observation/ObservationRegistry;)Lio/micrometer/core/instrument/binder/jdk/MicrometerHttpClient$InstrumentationBuilder;
+#customObservationConvention(Lio/micrometer/core/instrument/binder/jdk/HttpClientObservationConvention;)Lio/micrometer/core/instrument/binder/jdk/MicrometerHttpClient$InstrumentationBuilder;
+#uriMapper(Ljava/util/function/Function;)Lio/micrometer/core/instrument/binder/jdk/MicrometerHttpClient$InstrumentationBuilder;
+#build()Ljava/net/http/HttpClient;

+###io/micrometer/core/instrument/binder/jdk/MicrometerHttpClient
@1.10.0
+#instrumentationBuilder(Ljava/net/http/HttpClient;Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/binder/jdk/MicrometerHttpClient$InstrumentationBuilder;
+#cookieHandler()Ljava/util/Optional;
+#connectTimeout()Ljava/util/Optional;
+#followRedirects()Ljava/net/http/HttpClient$Redirect;
+#proxy()Ljava/util/Optional;
+#sslContext()Ljavax/net/ssl/SSLContext;
+#sslParameters()Ljavax/net/ssl/SSLParameters;
+#authenticator()Ljava/util/Optional;
+#version()Ljava/net/http/HttpClient$Version;
+#executor()Ljava/util/Optional;
+#send(Ljava/net/http/HttpRequest;Ljava/net/http/HttpResponse$BodyHandler;)Ljava/net/http/HttpResponse;
+#sendAsync(Ljava/net/http/HttpRequest;Ljava/net/http/HttpResponse$BodyHandler;)Ljava/util/concurrent/CompletableFuture;
+#sendAsync(Ljava/net/http/HttpRequest;Ljava/net/http/HttpResponse$BodyHandler;Ljava/net/http/HttpResponse$PushPromiseHandler;)Ljava/util/concurrent/CompletableFuture;

+###io/micrometer/core/instrument/composite/CompositeFunctionTimer
@1.0.0-rc.2
+#<init>(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/function/ToLongFunction;Ljava/util/function/ToDoubleFunction;Ljava/util/concurrent/TimeUnit;)V
+#add(Lio/micrometer/core/instrument/MeterRegistry;)V
+#remove(Lio/micrometer/core/instrument/MeterRegistry;)V
+#count()J
+#totalTime(Ljava/util/concurrent/TimeUnit;)D
+#baseTimeUnit()Ljava/util/concurrent/TimeUnit;
@1.0.0-rc.3
-#<init>(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/function/ToLongFunction;Ljava/util/function/ToDoubleFunction;Ljava/util/concurrent/TimeUnit;)V
@1.0.0-rc.4
-###io/micrometer/core/instrument/composite/CompositeFunctionTimer

+###io/micrometer/core/instrument/MeterFilter
@1.0.0-rc.3
+#accept(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/MeterFilterReply;
+#map(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Meter$Id;
+#configure(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/histogram/HistogramConfig;)Lio/micrometer/core/instrument/histogram/HistogramConfig;
+#commonTags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/MeterFilter;
+#ignoreTags([Ljava/lang/String;)Lio/micrometer/core/instrument/MeterFilter;
+#replaceTagValues(Ljava/lang/String;Ljava/util/function/Function;[Ljava/lang/String;)Lio/micrometer/core/instrument/MeterFilter;
+#accept(Ljava/util/function/Predicate;)Lio/micrometer/core/instrument/MeterFilter;
+#deny(Ljava/util/function/Predicate;)Lio/micrometer/core/instrument/MeterFilter;
+#denyNameStartsWith(Ljava/lang/String;)Lio/micrometer/core/instrument/MeterFilter;
@1.0.0-rc.4
-###io/micrometer/core/instrument/MeterFilter

+###io/micrometer/core/instrument/MeterFilterReply
@1.0.0-rc.3
+#values()[Lio/micrometer/core/instrument/MeterFilterReply;
+#valueOf(Ljava/lang/String;)Lio/micrometer/core/instrument/MeterFilterReply;
@1.0.0-rc.4
-###io/micrometer/core/instrument/MeterFilterReply

+###io/micrometer/core/instrument/MeterRegistryConfig
@1.0.0-rc.2
+#prefix()Ljava/lang/String;
+#get(Ljava/lang/String;)Ljava/lang/String;
@1.0.0-rc.4
-###io/micrometer/core/instrument/MeterRegistryConfig

+###io/micrometer/core/instrument/step/StepClock
@1.0.0-rc.3
+#<init>(Lio/micrometer/core/instrument/Clock;J)V
+#wallTime()J
+#monotonicTime()J
@1.0.0-rc.4
-###io/micrometer/core/instrument/step/StepClock

+###io/micrometer/core/instrument/atlas/AtlasMeterRegistry
@0.8.0.RELEASE
+#<init>(Lcom/netflix/spectator/atlas/AtlasConfig;Lio/micrometer/core/instrument/Clock;)V
+#<init>(Lcom/netflix/spectator/atlas/AtlasConfig;)V
@0.9.0.RELEASE
+#start()V
+#stop()V
+#counter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
@0.10.0.RELEASE
-#counter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
@0.11.0.RELEASE
-###io/micrometer/core/instrument/atlas/AtlasMeterRegistry

+###io/micrometer/core/instrument/atlas/AtlasUtils
@0.8.0.RELEASE
+#<init>()V
+#pushConfig(Ljava/lang/String;)Lcom/netflix/spectator/atlas/AtlasConfig;
+#pollingConfig(Ljava/lang/String;Ljava/time/Duration;)Lcom/netflix/spectator/atlas/AtlasConfig;
+#atlasPublish(Lio/micrometer/core/instrument/spectator/SpectatorMeterRegistry;Lcom/netflix/spectator/atlas/AtlasConfig;)V
@0.10.0.RELEASE
-#pushConfig(Ljava/lang/String;)Lcom/netflix/spectator/atlas/AtlasConfig;
-#atlasPublish(Lio/micrometer/core/instrument/spectator/SpectatorMeterRegistry;Lcom/netflix/spectator/atlas/AtlasConfig;)V
@0.11.0.RELEASE
-###io/micrometer/core/instrument/atlas/AtlasUtils

+###io/micrometer/core/instrument/binder/ThreadMetrics
@0.6.3.RELEASE
+#<init>()V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@0.11.0.RELEASE
-###io/micrometer/core/instrument/binder/ThreadMetrics

+###io/micrometer/core/instrument/datadog/DatadogConfig
@0.6.3.RELEASE
+#apiKey()Ljava/lang/String;
+#step()Ljava/time/Duration;
+#enabled()Z
+#numThreads()I
+#connectTimeout()Ljava/time/Duration;
+#readTimeout()Ljava/time/Duration;
+#batchSize()I
+#hostTag()Ljava/lang/String;
@0.7.0.RELEASE
+#prefix()Ljava/lang/String;
-#step()Ljava/time/Duration;
-#enabled()Z
-#numThreads()I
-#connectTimeout()Ljava/time/Duration;
-#readTimeout()Ljava/time/Duration;
-#batchSize()I
@0.11.0.RELEASE
-###io/micrometer/core/instrument/datadog/DatadogConfig

+###io/micrometer/core/instrument/datadog/DatadogMeterRegistry
@0.7.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/datadog/DatadogConfig;)V
+#<init>(Lio/micrometer/core/instrument/datadog/DatadogConfig;)V
@0.8.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/datadog/DatadogConfig;Lio/micrometer/core/instrument/Clock;)V
-#<init>(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/datadog/DatadogConfig;)V
@0.9.0.RELEASE
+#counter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
@0.10.0.RELEASE
+#start()V
+#stop()V
-#counter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
@0.11.0.RELEASE
-###io/micrometer/core/instrument/datadog/DatadogMeterRegistry

+###io/micrometer/core/instrument/datadog/DatadogNamingConvention
@0.10.0.RELEASE
+#<init>()V
+#name(Ljava/lang/String;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/String;)Ljava/lang/String;
+#tagKey(Ljava/lang/String;)Ljava/lang/String;
+#tagValue(Ljava/lang/String;)Ljava/lang/String;
@0.11.0.RELEASE
-###io/micrometer/core/instrument/datadog/DatadogNamingConvention

+###io/micrometer/core/instrument/ganglia/GangliaConfig
@0.8.0.RELEASE
+#get(Ljava/lang/String;)Ljava/lang/String;
+#prefix()Ljava/lang/String;
+#step()Ljava/time/Duration;
+#rateUnits()Ljava/util/concurrent/TimeUnit;
+#durationUnits()Ljava/util/concurrent/TimeUnit;
+#protocolVersion()Ljava/lang/String;
+#addressingMode()Linfo/ganglia/gmetric4j/gmetric/GMetric$UDPAddressingMode;
+#ttl()I
+#host()Ljava/lang/String;
+#port()I
@0.10.0.RELEASE
+#enabled()Z
@0.11.0.RELEASE
-###io/micrometer/core/instrument/ganglia/GangliaConfig

+###io/micrometer/core/instrument/ganglia/GangliaMeterRegistry
@0.8.0.RELEASE
+#<init>()V
+#<init>(Lio/micrometer/core/instrument/ganglia/GangliaConfig;)V
+#<init>(Lio/micrometer/core/instrument/ganglia/GangliaConfig;Lio/micrometer/core/instrument/util/HierarchicalNameMapper;Lio/micrometer/core/instrument/Clock;)V
+#stop()V
+#start()V
@0.11.0.RELEASE
-###io/micrometer/core/instrument/ganglia/GangliaMeterRegistry

+###io/micrometer/core/instrument/graphite/GraphiteConfig
@0.8.0.RELEASE
+#get(Ljava/lang/String;)Ljava/lang/String;
+#prefix()Ljava/lang/String;
+#step()Ljava/time/Duration;
+#rateUnits()Ljava/util/concurrent/TimeUnit;
+#durationUnits()Ljava/util/concurrent/TimeUnit;
+#host()Ljava/lang/String;
+#port()I
@0.10.0.RELEASE
+#enabled()Z
@0.11.0.RELEASE
-###io/micrometer/core/instrument/graphite/GraphiteConfig

+###io/micrometer/core/instrument/graphite/GraphiteMeterRegistry
@0.8.0.RELEASE
+#<init>()V
+#<init>(Lio/micrometer/core/instrument/graphite/GraphiteConfig;)V
+#<init>(Lio/micrometer/core/instrument/graphite/GraphiteConfig;Lio/micrometer/core/instrument/util/HierarchicalNameMapper;Lio/micrometer/core/instrument/Clock;)V
+#stop()V
+#start()V
@0.11.0.RELEASE
-###io/micrometer/core/instrument/graphite/GraphiteMeterRegistry

+###io/micrometer/core/instrument/graphite/GraphiteNamingConvention
@0.10.0.RELEASE
+#<init>()V
+#name(Ljava/lang/String;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/String;)Ljava/lang/String;
+#tagKey(Ljava/lang/String;)Ljava/lang/String;
+#tagValue(Ljava/lang/String;)Ljava/lang/String;
@0.11.0.RELEASE
-###io/micrometer/core/instrument/graphite/GraphiteNamingConvention

+###io/micrometer/core/instrument/influx/InfluxConfig
@0.9.0.RELEASE
+#prefix()Ljava/lang/String;
+#db()Ljava/lang/String;
+#consistency()Ljava/lang/String;
+#userName()Ljava/lang/String;
+#password()Ljava/lang/String;
+#retentionPolicy()Ljava/lang/String;
+#uri()Ljava/lang/String;
+#compressed()Z
@0.11.0.RELEASE
-###io/micrometer/core/instrument/influx/InfluxConfig

+###io/micrometer/core/instrument/influx/InfluxMeterRegistry
@0.9.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/influx/InfluxConfig;Lio/micrometer/core/instrument/Clock;)V
+#<init>(Lio/micrometer/core/instrument/influx/InfluxConfig;)V
+#counter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
@0.10.0.RELEASE
+#start()V
+#stop()V
-#counter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
@0.11.0.RELEASE
-###io/micrometer/core/instrument/influx/InfluxMeterRegistry

+###io/micrometer/core/instrument/influx/InfluxNamingConvention
@0.10.0.RELEASE
+#<init>()V
+#name(Ljava/lang/String;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/String;)Ljava/lang/String;
+#tagKey(Ljava/lang/String;)Ljava/lang/String;
+#tagValue(Ljava/lang/String;)Ljava/lang/String;
@0.11.0.RELEASE
-###io/micrometer/core/instrument/influx/InfluxNamingConvention

+###io/micrometer/core/instrument/influx/InfluxRegistry
@0.9.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/influx/InfluxConfig;Lcom/netflix/spectator/api/Clock;)V
@0.11.0.RELEASE
-###io/micrometer/core/instrument/influx/InfluxRegistry

+###io/micrometer/core/instrument/jmx/JmxMeterRegistry
@0.8.0.RELEASE
+#<init>()V
+#<init>(Lio/micrometer/core/instrument/util/HierarchicalNameMapper;Lio/micrometer/core/instrument/Clock;)V
+#stop()V
+#start()V
@0.11.0.RELEASE
-###io/micrometer/core/instrument/jmx/JmxMeterRegistry

+###io/micrometer/core/instrument/lazy/LazyCounter
@0.10.0.RELEASE
+#<init>(Ljava/util/function/Supplier;)V
+#getName()Ljava/lang/String;
+#getTags()Ljava/lang/Iterable;
+#getDescription()Ljava/lang/String;
+#increment(D)V
+#count()D
@0.11.0.RELEASE
-###io/micrometer/core/instrument/lazy/LazyCounter

+###io/micrometer/core/instrument/lazy/LazyDistributionSummary
@0.10.0.RELEASE
+#<init>(Ljava/util/function/Supplier;)V
+#getName()Ljava/lang/String;
+#getTags()Ljava/lang/Iterable;
+#getDescription()Ljava/lang/String;
+#record(D)V
+#count()J
+#totalAmount()D
@0.11.0.RELEASE
-###io/micrometer/core/instrument/lazy/LazyDistributionSummary

+###io/micrometer/core/instrument/lazy/LazyLongTaskTimer
@0.10.0.RELEASE
+#<init>(Ljava/util/function/Supplier;)V
+#getName()Ljava/lang/String;
+#getTags()Ljava/lang/Iterable;
+#getDescription()Ljava/lang/String;
+#start()J
+#stop(J)J
+#duration(J)J
+#duration()J
+#activeTasks()I
@0.11.0.RELEASE
-###io/micrometer/core/instrument/lazy/LazyLongTaskTimer

+###io/micrometer/core/instrument/lazy/LazyTimer
@0.10.0.RELEASE
+#<init>(Ljava/util/function/Supplier;)V
+#getName()Ljava/lang/String;
+#getTags()Ljava/lang/Iterable;
+#getDescription()Ljava/lang/String;
+#record(JLjava/util/concurrent/TimeUnit;)V
+#record(Ljava/util/function/Supplier;)Ljava/lang/Object;
+#recordCallable(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#record(Ljava/lang/Runnable;)V
+#wrap(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;
+#count()J
+#totalTime(Ljava/util/concurrent/TimeUnit;)D
@0.11.0.RELEASE
-###io/micrometer/core/instrument/lazy/LazyTimer

+###io/micrometer/core/instrument/LazyMetrics
@0.10.0.RELEASE
+#<init>()V
+#lazyCounter(Ljava/util/function/Supplier;)Lio/micrometer/core/instrument/Counter;
+#lazyTimer(Ljava/util/function/Supplier;)Lio/micrometer/core/instrument/Timer;
+#lazySummary(Ljava/util/function/Supplier;)Lio/micrometer/core/instrument/DistributionSummary;
+#lazyLongTaskTimer(Ljava/util/function/Supplier;)Lio/micrometer/core/instrument/LongTaskTimer;
@0.11.0.RELEASE
-###io/micrometer/core/instrument/LazyMetrics

+###io/micrometer/core/instrument/prometheus/internal/CustomCollectorChild
@0.9.0.RELEASE
+#collect()Ljava/util/stream/Stream;
+#measure()Ljava/util/List;
@0.10.0.RELEASE
-#measure()Ljava/util/List;
@0.11.0.RELEASE
-###io/micrometer/core/instrument/prometheus/internal/CustomCollectorChild

+###io/micrometer/core/instrument/prometheus/internal/CustomPrometheusCollector
@0.9.0.RELEASE
+#<init>(Ljava/lang/String;Lio/prometheus/client/Collector$Type;)V
+#child(Ljava/util/function/Supplier;)Lio/micrometer/core/instrument/prometheus/internal/CustomPrometheusCollector$Child;
+#collect()Ljava/util/List;
@0.10.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Iterable;Lio/prometheus/client/Collector$Type;)V
+#child(Ljava/lang/Iterable;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/prometheus/internal/CustomPrometheusCollector$Child;
-#<init>(Ljava/lang/String;Lio/prometheus/client/Collector$Type;)V
-#child(Ljava/util/function/Supplier;)Lio/micrometer/core/instrument/prometheus/internal/CustomPrometheusCollector$Child;
@0.11.0.RELEASE
-###io/micrometer/core/instrument/prometheus/internal/CustomPrometheusCollector

+###io/micrometer/core/instrument/prometheus/internal/CustomPrometheusLongTaskTimer$Child
@0.9.0.RELEASE
+#collect()Ljava/util/stream/Stream;
+#start()J
+#stop(J)J
+#duration(J)J
+#duration()J
+#activeTasks()I
@0.11.0.RELEASE
-###io/micrometer/core/instrument/prometheus/internal/CustomPrometheusLongTaskTimer$Child

+###io/micrometer/core/instrument/prometheus/internal/CustomPrometheusLongTaskTimer
@0.9.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/List;Lio/micrometer/core/instrument/Clock;)V
+#child(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/prometheus/internal/CustomPrometheusLongTaskTimer$Child;
+#collect()Ljava/util/List;
@0.10.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;Lio/micrometer/core/instrument/Clock;)V
-#<init>(Ljava/lang/String;Ljava/util/List;Lio/micrometer/core/instrument/Clock;)V
@0.11.0.RELEASE
-###io/micrometer/core/instrument/prometheus/internal/CustomPrometheusLongTaskTimer

+###io/micrometer/core/instrument/prometheus/internal/CustomPrometheusSummary$Child
@0.9.0.RELEASE
+#collect()Ljava/util/stream/Stream;
+#observe(D)V
+#count()J
+#sum()D
@0.11.0.RELEASE
-###io/micrometer/core/instrument/prometheus/internal/CustomPrometheusSummary$Child

+###io/micrometer/core/instrument/prometheus/internal/CustomPrometheusSummary
@0.9.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/List;)V
+#child(Ljava/lang/Iterable;Lio/micrometer/core/instrument/stats/quantile/Quantiles;Lio/micrometer/core/instrument/stats/hist/Histogram;)Lio/micrometer/core/instrument/prometheus/internal/CustomPrometheusSummary$Child;
+#collect()Ljava/util/List;
@0.10.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;)V
-#<init>(Ljava/lang/String;Ljava/util/List;)V
@0.11.0.RELEASE
-###io/micrometer/core/instrument/prometheus/internal/CustomPrometheusSummary

+###io/micrometer/core/instrument/prometheus/PrometheusCounter
@0.6.3.RELEASE
+#increment()V
+#increment(D)V
+#count()D
+#getName()Ljava/lang/String;
+#getTags()Ljava/lang/Iterable;
+#measure()Ljava/lang/Iterable;
@0.8.0.RELEASE
+#measure()Ljava/util/List;
-#measure()Ljava/lang/Iterable;
@0.9.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
-#increment()V
@0.10.0.RELEASE
-#getName()Ljava/lang/String;
-#getTags()Ljava/lang/Iterable;
-#measure()Ljava/util/List;
@0.11.0.RELEASE
-###io/micrometer/core/instrument/prometheus/PrometheusCounter

+###io/micrometer/core/instrument/prometheus/PrometheusDistributionSummary
@0.6.3.RELEASE
+#record(D)V
+#count()J
+#totalAmount()D
+#getName()Ljava/lang/String;
+#getTags()Ljava/lang/Iterable;
+#measure()Ljava/lang/Iterable;
@0.8.0.RELEASE
+#measure()Ljava/util/List;
-#measure()Ljava/lang/Iterable;
@0.9.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.10.0.RELEASE
-#getName()Ljava/lang/String;
-#getTags()Ljava/lang/Iterable;
-#measure()Ljava/util/List;
@0.11.0.RELEASE
-###io/micrometer/core/instrument/prometheus/PrometheusDistributionSummary

+###io/micrometer/core/instrument/prometheus/PrometheusGauge
@0.6.3.RELEASE
+#value()D
+#getName()Ljava/lang/String;
+#getTags()Ljava/lang/Iterable;
+#measure()Ljava/lang/Iterable;
@0.8.0.RELEASE
+#measure()Ljava/util/List;
-#measure()Ljava/lang/Iterable;
@0.9.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.10.0.RELEASE
-#getName()Ljava/lang/String;
-#getTags()Ljava/lang/Iterable;
-#measure()Ljava/util/List;
@0.11.0.RELEASE
-###io/micrometer/core/instrument/prometheus/PrometheusGauge

+###io/micrometer/core/instrument/prometheus/PrometheusLongTaskTimer
@0.6.3.RELEASE
+#start()J
+#stop(J)J
+#duration(J)J
+#duration()J
+#activeTasks()I
+#getName()Ljava/lang/String;
+#getTags()Ljava/lang/Iterable;
+#measure()Ljava/lang/Iterable;
@0.8.0.RELEASE
+#measure()Ljava/util/List;
-#measure()Ljava/lang/Iterable;
@0.9.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.10.0.RELEASE
-#getName()Ljava/lang/String;
-#getTags()Ljava/lang/Iterable;
-#measure()Ljava/util/List;
@0.11.0.RELEASE
-###io/micrometer/core/instrument/prometheus/PrometheusLongTaskTimer

+###io/micrometer/core/instrument/prometheus/PrometheusMeterRegistry
@0.6.3.RELEASE
+#<init>()V
+#<init>(Lio/prometheus/client/CollectorRegistry;)V
+#<init>(Lio/prometheus/client/CollectorRegistry;Lio/micrometer/core/instrument/Clock;)V
+#getMeters()Ljava/util/Collection;
+#scrape()Ljava/lang/String;
+#findMeter(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/Optional;
+#findMeter(Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/Optional;
+#counter(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Counter;
+#distributionSummary(Ljava/lang/String;Ljava/lang/Iterable;Lio/micrometer/core/instrument/stats/quantile/Quantiles;Lio/micrometer/core/instrument/stats/hist/Histogram;)Lio/micrometer/core/instrument/DistributionSummary;
+#longTaskTimer(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/LongTaskTimer;
+#gauge(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
+#register(Lio/micrometer/core/instrument/Meter;)Lio/micrometer/core/instrument/MeterRegistry;
+#getPrometheusRegistry()Lio/prometheus/client/CollectorRegistry;
@0.9.0.RELEASE
+#counter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
@0.10.0.RELEASE
+#newCounter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;)Lio/micrometer/core/instrument/Counter;
+#newDistributionSummary(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/String;Lio/micrometer/core/instrument/stats/quantile/Quantiles;Lio/micrometer/core/instrument/stats/hist/Histogram;)Lio/micrometer/core/instrument/DistributionSummary;
-#getMeters()Ljava/util/Collection;
-#findMeter(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/Optional;
-#findMeter(Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/Optional;
-#counter(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Counter;
-#counter(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
-#distributionSummary(Ljava/lang/String;Ljava/lang/Iterable;Lio/micrometer/core/instrument/stats/quantile/Quantiles;Lio/micrometer/core/instrument/stats/hist/Histogram;)Lio/micrometer/core/instrument/DistributionSummary;
-#longTaskTimer(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/LongTaskTimer;
-#gauge(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
-#register(Lio/micrometer/core/instrument/Meter;)Lio/micrometer/core/instrument/MeterRegistry;
@0.11.0.RELEASE
-###io/micrometer/core/instrument/prometheus/PrometheusMeterRegistry

+###io/micrometer/core/instrument/prometheus/PrometheusNamingConvention
@0.10.0.RELEASE
+#<init>()V
+#name(Ljava/lang/String;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/String;)Ljava/lang/String;
+#tagKey(Ljava/lang/String;)Ljava/lang/String;
@0.11.0.RELEASE
-###io/micrometer/core/instrument/prometheus/PrometheusNamingConvention

+###io/micrometer/core/instrument/prometheus/PrometheusTimer
@0.6.3.RELEASE
+#record(JLjava/util/concurrent/TimeUnit;)V
+#count()J
+#totalTime(Ljava/util/concurrent/TimeUnit;)D
+#measure()Ljava/lang/Iterable;
@0.8.0.RELEASE
+#measure()Ljava/util/List;
-#measure()Ljava/lang/Iterable;
@0.10.0.RELEASE
-#measure()Ljava/util/List;
@0.11.0.RELEASE
-###io/micrometer/core/instrument/prometheus/PrometheusTimer

+###io/micrometer/core/instrument/stats/hist/CumulativeBucketFunction
@0.6.3.RELEASE
+#bucketFloor(D)Ljava/lang/Object;
+#buckets()Ljava/util/Set;
+#bucketComparator()Ljava/util/Comparator;
@0.11.0.RELEASE
-###io/micrometer/core/instrument/stats/hist/CumulativeBucketFunction

+###io/micrometer/core/instrument/stats/hist/CumulativeHistogram
@0.6.3.RELEASE
+#<init>(Lio/micrometer/core/instrument/stats/hist/CumulativeBucketFunction;)V
+#observe(D)V
+#getBuckets()Ljava/util/Collection;
+#buckets(Lio/micrometer/core/instrument/stats/hist/CumulativeBucketFunction;)Lio/micrometer/core/instrument/stats/hist/CumulativeHistogram;
+#buckets(Lio/micrometer/core/instrument/stats/hist/CumulativeBucketFunction;Ljava/util/concurrent/TimeUnit;)Lio/micrometer/core/instrument/stats/hist/TimeScaleCumulativeHistogram;
+#exponential(DDI)Lio/micrometer/core/instrument/stats/hist/CumulativeBucketFunction;
+#linear(DDI)Lio/micrometer/core/instrument/stats/hist/CumulativeBucketFunction;
@0.11.0.RELEASE
-###io/micrometer/core/instrument/stats/hist/CumulativeHistogram

+###io/micrometer/core/instrument/stats/hist/FixedCumulativeBucketFunction
@0.6.3.RELEASE
+#bucketFloor(D)Ljava/lang/Object;
+#<init>(Ljava/util/function/DoubleFunction;Ljava/util/Set;Ljava/util/Comparator;)V
+#buckets()Ljava/util/Set;
+#bucketComparator()Ljava/util/Comparator;
@0.11.0.RELEASE
-###io/micrometer/core/instrument/stats/hist/FixedCumulativeBucketFunction

+###io/micrometer/core/instrument/stats/hist/NormalHistogram
@0.6.3.RELEASE
+#<init>(Lio/micrometer/core/instrument/stats/hist/BucketFunction;)V
+#observe(D)V
+#getBuckets()Ljava/util/Collection;
+#buckets(Lio/micrometer/core/instrument/stats/hist/BucketFunction;)Lio/micrometer/core/instrument/stats/hist/NormalHistogram;
+#buckets(Lio/micrometer/core/instrument/stats/hist/BucketFunction;Ljava/util/concurrent/TimeUnit;)Lio/micrometer/core/instrument/stats/hist/TimeScaleNormalHistogram;
+#linear(DDI)Lio/micrometer/core/instrument/stats/hist/BucketFunction;
+#exponential(DDI)Lio/micrometer/core/instrument/stats/hist/BucketFunction;
@0.11.0.RELEASE
-###io/micrometer/core/instrument/stats/hist/NormalHistogram

+###io/micrometer/core/instrument/stats/hist/TimeScaleCumulativeHistogram
@0.6.3.RELEASE
+#<init>(Lio/micrometer/core/instrument/stats/hist/CumulativeBucketFunction;Ljava/util/concurrent/TimeUnit;)V
+#shiftScale(Ljava/util/concurrent/TimeUnit;)Lio/micrometer/core/instrument/stats/hist/TimeScaleCumulativeHistogram;
@0.11.0.RELEASE
-###io/micrometer/core/instrument/stats/hist/TimeScaleCumulativeHistogram

+###io/micrometer/core/instrument/stats/hist/TimeScaleNormalHistogram
@0.6.3.RELEASE
+#<init>(Lio/micrometer/core/instrument/stats/hist/BucketFunction;Ljava/util/concurrent/TimeUnit;)V
+#shiftScale(Ljava/util/concurrent/TimeUnit;)Lio/micrometer/core/instrument/stats/hist/TimeScaleNormalHistogram;
@0.11.0.RELEASE
-###io/micrometer/core/instrument/stats/hist/TimeScaleNormalHistogram

+###io/micrometer/core/instrument/binder/CacheMetrics
@0.6.3.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Iterable;Lcom/google/common/cache/Cache;)V
+#bindTo(Lio/micrometer/core/instrument/MeterRegistry;)V
@0.10.0.RELEASE
-###io/micrometer/core/instrument/binder/CacheMetrics

+###io/micrometer/core/instrument/datadog/DatadogTagFormatter
@0.8.0.RELEASE
+#<init>()V
+#formatName(Ljava/lang/String;)Ljava/lang/String;
+#formatTagKey(Ljava/lang/String;)Ljava/lang/String;
+#formatTagValue(Ljava/lang/String;)Ljava/lang/String;
@0.10.0.RELEASE
-###io/micrometer/core/instrument/datadog/DatadogTagFormatter

+###io/micrometer/core/instrument/dropwizard/AbstractDropwizardMeter
@0.8.0.RELEASE
+#getName()Ljava/lang/String;
+#getTags()Ljava/lang/Iterable;
@0.10.0.RELEASE
-###io/micrometer/core/instrument/dropwizard/AbstractDropwizardMeter

+###io/micrometer/core/instrument/graphite/GraphiteTagFormatter
@0.8.0.RELEASE
+#<init>()V
+#formatName(Ljava/lang/String;)Ljava/lang/String;
+#formatTagKey(Ljava/lang/String;)Ljava/lang/String;
+#formatTagValue(Ljava/lang/String;)Ljava/lang/String;
@0.10.0.RELEASE
-###io/micrometer/core/instrument/graphite/GraphiteTagFormatter

+###io/micrometer/core/instrument/IdentityTagFormatter
@0.6.3.RELEASE
+#<init>()V
@0.10.0.RELEASE
-###io/micrometer/core/instrument/IdentityTagFormatter

+###io/micrometer/core/instrument/influx/InfluxTagFormatter
@0.9.0.RELEASE
+#<init>()V
+#formatName(Ljava/lang/String;)Ljava/lang/String;
+#formatTagKey(Ljava/lang/String;)Ljava/lang/String;
+#formatTagValue(Ljava/lang/String;)Ljava/lang/String;
@0.10.0.RELEASE
-###io/micrometer/core/instrument/influx/InfluxTagFormatter

+###io/micrometer/core/instrument/internal/FunctionTrackingCounter
@0.9.0.RELEASE
+#<init>(Lio/micrometer/core/instrument/util/MeterId;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)V
+#getName()Ljava/lang/String;
+#getTags()Ljava/lang/Iterable;
+#getType()Lio/micrometer/core/instrument/Meter$Type;
+#measure()Ljava/util/List;
@0.10.0.RELEASE
-###io/micrometer/core/instrument/internal/FunctionTrackingCounter

+###io/micrometer/core/instrument/Meters$Builder
@0.6.3.RELEASE
+#tags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Meters$Builder;
+#tags([Ljava/lang/String;)Lio/micrometer/core/instrument/Meters$Builder;
+#type(Lio/micrometer/core/instrument/Meter$Type;)Lio/micrometer/core/instrument/Meters$Builder;
+#create(Ljava/util/function/Function;)Lio/micrometer/core/instrument/Meter;
+#create(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lio/micrometer/core/instrument/Meter;
@0.10.0.RELEASE
-###io/micrometer/core/instrument/Meters$Builder

+###io/micrometer/core/instrument/Meters
@0.6.3.RELEASE
+#<init>()V
+#build(Ljava/lang/String;)Lio/micrometer/core/instrument/Meters$Builder;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/google/common/cache/Cache;Ljava/lang/String;[Lio/micrometer/core/instrument/Tag;)Lcom/google/common/cache/Cache;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Lcom/google/common/cache/Cache;Ljava/lang/String;Ljava/lang/Iterable;)Lcom/google/common/cache/Cache;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/Executor;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/concurrent/Executor;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/Executor;Ljava/lang/String;[Lio/micrometer/core/instrument/Tag;)Ljava/util/concurrent/Executor;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;Ljava/lang/Iterable;)Ljava/util/concurrent/ExecutorService;
+#monitor(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/concurrent/ExecutorService;Ljava/lang/String;[Lio/micrometer/core/instrument/Tag;)Ljava/util/concurrent/ExecutorService;
@0.9.0.RELEASE
+#equals(Lio/micrometer/core/instrument/Meter;Ljava/lang/Object;)Z
+#hashCode(Lio/micrometer/core/instrument/Meter;)I
@0.10.0.RELEASE
-###io/micrometer/core/instrument/Meters

+###io/micrometer/core/instrument/prometheus/PrometheusTagFormatter
@0.8.0.RELEASE
+#<init>()V
+#formatName(Ljava/lang/String;)Ljava/lang/String;
+#formatTagKey(Ljava/lang/String;)Ljava/lang/String;
+#formatTagValue(Ljava/lang/String;)Ljava/lang/String;
@0.10.0.RELEASE
-###io/micrometer/core/instrument/prometheus/PrometheusTagFormatter

+###io/micrometer/core/instrument/simple/AbstractSimpleMeter
@0.6.3.RELEASE
+#getName()Ljava/lang/String;
+#getTags()Ljava/lang/Iterable;
@0.10.0.RELEASE
-###io/micrometer/core/instrument/simple/AbstractSimpleMeter

+###io/micrometer/core/instrument/simple/SimpleUtils
@0.6.3.RELEASE
+#<init>()V
+#typeTag(Lio/micrometer/core/instrument/Meter$Type;)Lio/micrometer/core/instrument/Tag;
@0.10.0.RELEASE
-###io/micrometer/core/instrument/simple/SimpleUtils

+###io/micrometer/core/instrument/spectator/SpectatorMeterWrapper
@0.9.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Iterable;Lio/micrometer/core/instrument/Meter$Type;Lcom/netflix/spectator/api/Meter;)V
+#getName()Ljava/lang/String;
+#getTags()Ljava/lang/Iterable;
+#getType()Lio/micrometer/core/instrument/Meter$Type;
+#measure()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.10.0.RELEASE
-###io/micrometer/core/instrument/spectator/SpectatorMeterWrapper

+###io/micrometer/core/instrument/spectator/step/FunctionTrackingStepCounter
@0.9.0.RELEASE
+#<init>(Lcom/netflix/spectator/api/Id;Lcom/netflix/spectator/api/Clock;JLjava/lang/Object;Ljava/util/function/ToDoubleFunction;)V
+#increment()V
+#increment(J)V
+#count()J
+#id()Lcom/netflix/spectator/api/Id;
+#measure()Ljava/lang/Iterable;
+#hasExpired()Z
@0.10.0.RELEASE
-###io/micrometer/core/instrument/spectator/step/FunctionTrackingStepCounter

+###io/micrometer/core/instrument/TagFormatter
@0.6.3.RELEASE
+#formatName(Ljava/lang/String;)Ljava/lang/String;
+#formatTagKey(Ljava/lang/String;)Ljava/lang/String;
+#formatTagValue(Ljava/lang/String;)Ljava/lang/String;
@0.10.0.RELEASE
-###io/micrometer/core/instrument/TagFormatter

+###io/micrometer/core/instrument/util/MapAccess
@0.7.0.RELEASE
+#<init>()V
+#computeIfAbsent(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
@0.10.0.RELEASE
-###io/micrometer/core/instrument/util/MapAccess

+###io/micrometer/core/instrument/util/MeterId
@0.7.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Iterable;)V
+#<init>(Ljava/lang/String;[Lio/micrometer/core/instrument/Tag;)V
+#getName()Ljava/lang/String;
+#getTags()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#withTags([Lio/micrometer/core/instrument/Tag;)Lio/micrometer/core/instrument/util/MeterId;
+#withTags(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/util/MeterId;
+#measurement(D)Lio/micrometer/core/instrument/Measurement;
@0.8.0.RELEASE
+#withName(Ljava/lang/String;)Lio/micrometer/core/instrument/util/MeterId;
-#<init>(Ljava/lang/String;[Lio/micrometer/core/instrument/Tag;)V
@0.10.0.RELEASE
-###io/micrometer/core/instrument/util/MeterId

+###io/micrometer/core/instrument/binder/http/HttpRequestTagsProvider
@1.3.4
+#getTags(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljava/lang/Iterable;
@1.3.5
-###io/micrometer/core/instrument/binder/http/HttpRequestTagsProvider

+###io/micrometer/core/instrument/binder/http/DefaultHttpRequestTagsProvider
@1.3.4
+#<init>()V
+#getTags(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljava/lang/Iterable;
@1.3.5
-###io/micrometer/core/instrument/binder/http/DefaultHttpRequestTagsProvider

+###io/micrometer/core/instrument/datadog/DatadogCounter
@0.6.3.RELEASE
+#id()Lcom/netflix/spectator/api/Id;
+#hasExpired()Z
+#measure()Ljava/lang/Iterable;
+#increment()V
+#increment(J)V
+#count()J
@0.7.0.RELEASE
-###io/micrometer/core/instrument/datadog/DatadogCounter

+###io/micrometer/core/instrument/datadog/DatadogRegistry
@0.6.3.RELEASE
+#<init>(Lcom/netflix/spectator/api/Clock;Lio/micrometer/core/instrument/datadog/DatadogConfig;)V
+#start()V
+#stop()V
@0.7.0.RELEASE
-###io/micrometer/core/instrument/datadog/DatadogRegistry

+###io/micrometer/core/instrument/internal/AbstractMeterRegistry
@0.6.3.RELEASE
+#getClock()Lio/micrometer/core/instrument/Clock;
+#timerBuilder(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
+#summaryBuilder(Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
@0.7.0.RELEASE
-###io/micrometer/core/instrument/internal/AbstractMeterRegistry

+###io/micrometer/core/instrument/internal/AbstractTimer
@0.6.3.RELEASE
+#recordCallable(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#record(Ljava/util/function/Supplier;)Ljava/lang/Object;
+#wrap(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;
+#record(Ljava/lang/Runnable;)V
+#getName()Ljava/lang/String;
+#getTags()Ljava/lang/Iterable;
@0.7.0.RELEASE
-###io/micrometer/core/instrument/internal/AbstractTimer

+###io/micrometer/core/instrument/internal/AnnotationUtils
@0.6.3.RELEASE
+#<init>()V
+#findTimed(Ljava/lang/Class;)Ljava/util/stream/Stream;
+#findTimed(Ljava/lang/reflect/Method;)Ljava/util/stream/Stream;
@0.7.0.RELEASE
-###io/micrometer/core/instrument/internal/AnnotationUtils

+###io/micrometer/core/instrument/internal/ImmutableTag
@0.6.3.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getKey()Ljava/lang/String;
+#getValue()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@0.7.0.RELEASE
-###io/micrometer/core/instrument/internal/ImmutableTag

+###io/micrometer/core/instrument/internal/MapAccess
@0.6.3.RELEASE
+#<init>()V
+#computeIfAbsent(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
@0.7.0.RELEASE
-###io/micrometer/core/instrument/internal/MapAccess

+###io/micrometer/core/instrument/internal/TimeUtils
@0.6.3.RELEASE
+#<init>()V
+#convert(DLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;)D
+#nanosToUnit(DLjava/util/concurrent/TimeUnit;)D
+#microsToUnit(DLjava/util/concurrent/TimeUnit;)D
+#millisToUnit(DLjava/util/concurrent/TimeUnit;)D
+#secondsToUnit(DLjava/util/concurrent/TimeUnit;)D
+#minutesToUnit(DLjava/util/concurrent/TimeUnit;)D
+#hoursToUnit(DLjava/util/concurrent/TimeUnit;)D
+#daysToUnit(DLjava/util/concurrent/TimeUnit;)D
@0.7.0.RELEASE
-###io/micrometer/core/instrument/internal/TimeUtils

+###io/micrometer/core/instrument/prometheus/CustomCollectorChild
@0.6.3.RELEASE
+#collect()Ljava/util/stream/Stream;
+#measure()Ljava/lang/Iterable;
@0.8.0.RELEASE
+#measure()Ljava/util/List;
-#measure()Ljava/lang/Iterable;
@0.9.0.RELEASE
-###io/micrometer/core/instrument/prometheus/CustomCollectorChild

+###io/micrometer/core/instrument/prometheus/CustomPrometheusLongTaskTimer
@0.6.3.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/List;Lio/micrometer/core/instrument/Clock;)V
+#collect()Ljava/util/List;
@0.9.0.RELEASE
-###io/micrometer/core/instrument/prometheus/CustomPrometheusLongTaskTimer

+###io/micrometer/core/instrument/prometheus/CustomPrometheusSummary
@0.6.3.RELEASE
+#collect()Ljava/util/List;
@0.9.0.RELEASE
-###io/micrometer/core/instrument/prometheus/CustomPrometheusSummary

+###io/micrometer/core/instrument/spectator/ExternalClockSpectatorRegistry
@0.6.3.RELEASE
+#getSpectatorRegistry()Lcom/netflix/spectator/api/Registry;
+#clock()Lcom/netflix/spectator/api/Clock;
+#config()Lcom/netflix/spectator/api/RegistryConfig;
+#createId(Ljava/lang/String;)Lcom/netflix/spectator/api/Id;
+#createId(Ljava/lang/String;Ljava/lang/Iterable;)Lcom/netflix/spectator/api/Id;
+#register(Lcom/netflix/spectator/api/Meter;)V
+#state()Ljava/util/concurrent/ConcurrentMap;
+#counter(Lcom/netflix/spectator/api/Id;)Lcom/netflix/spectator/api/Counter;
+#distributionSummary(Lcom/netflix/spectator/api/Id;)Lcom/netflix/spectator/api/DistributionSummary;
+#timer(Lcom/netflix/spectator/api/Id;)Lcom/netflix/spectator/api/Timer;
+#gauge(Lcom/netflix/spectator/api/Id;)Lcom/netflix/spectator/api/Gauge;
+#get(Lcom/netflix/spectator/api/Id;)Lcom/netflix/spectator/api/Meter;
+#iterator()Ljava/util/Iterator;
+#underlying(Ljava/lang/Class;)Lcom/netflix/spectator/api/Registry;
+#createId(Ljava/lang/String;[Ljava/lang/String;)Lcom/netflix/spectator/api/Id;
+#createId(Ljava/lang/String;Ljava/util/Map;)Lcom/netflix/spectator/api/Id;
+#counter(Ljava/lang/String;)Lcom/netflix/spectator/api/Counter;
+#counter(Ljava/lang/String;Ljava/lang/Iterable;)Lcom/netflix/spectator/api/Counter;
+#counter(Ljava/lang/String;[Ljava/lang/String;)Lcom/netflix/spectator/api/Counter;
+#distributionSummary(Ljava/lang/String;)Lcom/netflix/spectator/api/DistributionSummary;
+#distributionSummary(Ljava/lang/String;Ljava/lang/Iterable;)Lcom/netflix/spectator/api/DistributionSummary;
+#distributionSummary(Ljava/lang/String;[Ljava/lang/String;)Lcom/netflix/spectator/api/DistributionSummary;
+#timer(Ljava/lang/String;)Lcom/netflix/spectator/api/Timer;
+#timer(Ljava/lang/String;Ljava/lang/Iterable;)Lcom/netflix/spectator/api/Timer;
+#timer(Ljava/lang/String;[Ljava/lang/String;)Lcom/netflix/spectator/api/Timer;
+#longTaskTimer(Lcom/netflix/spectator/api/Id;)Lcom/netflix/spectator/api/LongTaskTimer;
+#longTaskTimer(Ljava/lang/String;)Lcom/netflix/spectator/api/LongTaskTimer;
+#longTaskTimer(Ljava/lang/String;Ljava/lang/Iterable;)Lcom/netflix/spectator/api/LongTaskTimer;
+#longTaskTimer(Ljava/lang/String;[Ljava/lang/String;)Lcom/netflix/spectator/api/LongTaskTimer;
+#gauge(Lcom/netflix/spectator/api/Id;Ljava/lang/Number;)Ljava/lang/Number;
+#gauge(Ljava/lang/String;Ljava/lang/Number;)Ljava/lang/Number;
+#gauge(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Number;)Ljava/lang/Number;
+#gauge(Lcom/netflix/spectator/api/Id;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
+#gauge(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
+#collectionSize(Lcom/netflix/spectator/api/Id;Ljava/util/Collection;)Ljava/util/Collection;
+#collectionSize(Ljava/lang/String;Ljava/util/Collection;)Ljava/util/Collection;
+#mapSize(Lcom/netflix/spectator/api/Id;Ljava/util/Map;)Ljava/util/Map;
+#mapSize(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map;
+#methodValue(Lcom/netflix/spectator/api/Id;Ljava/lang/Object;Ljava/lang/String;)V
+#methodValue(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;)V
+#stream()Ljava/util/stream/Stream;
+#counters()Ljava/util/stream/Stream;
+#distributionSummaries()Ljava/util/stream/Stream;
+#timers()Ljava/util/stream/Stream;
+#gauges()Ljava/util/stream/Stream;
+#propagate(Ljava/lang/String;Ljava/lang/Throwable;)V
+#propagate(Ljava/lang/Throwable;)V
@0.9.0.RELEASE
-###io/micrometer/core/instrument/spectator/ExternalClockSpectatorRegistry

+###io/micrometer/core/instrument/util/TimeDecayingMax
@1.0.0-rc.6
+#<init>(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/histogram/HistogramConfig;)V
+#<init>(Lio/micrometer/core/instrument/Clock;JI)V
+#record(DLjava/util/concurrent/TimeUnit;)V
+#poll(Ljava/util/concurrent/TimeUnit;)D
+#poll()D
+#record(D)V
@1.0.0
+#<init>(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)V
-#<init>(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/histogram/HistogramConfig;)V
@1.0.3
-###io/micrometer/core/instrument/util/TimeDecayingMax

+###io/micrometer/core/instrument/distribution/TimeWindowLatencyHistogram
@1.0.0
+#<init>(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)V
+#<init>(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;)V
+#close()V
@1.0.3
-###io/micrometer/core/instrument/distribution/TimeWindowLatencyHistogram

+###io/micrometer/core/instrument/distribution/TimeWindowHistogram
@1.0.0
+#<init>(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)V
@1.0.3
-###io/micrometer/core/instrument/distribution/TimeWindowHistogram

+###io/micrometer/core/instrument/binder/reactor/ReactorMetrics
@1.0.0-rc.8
+#timed(Ljava/lang/Iterable;)Ljava/util/function/Function;
@1.0.0
-###io/micrometer/core/instrument/binder/reactor/ReactorMetrics

+###io/micrometer/core/instrument/binder/reactor/ReactorMetricsSubscriber
@1.0.0-rc.8
+#<init>(Ljava/lang/String;Ljava/lang/Iterable;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#request(J)V
+#cancel()V
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
@1.0.0
-###io/micrometer/core/instrument/binder/reactor/ReactorMetricsSubscriber

+###io/micrometer/core/instrument/histogram/pause/ClockDriftPauseDetector
@1.0.0-rc.6
+#<init>(Ljava/time/Duration;Ljava/time/Duration;)V
+#getSleepInterval()Ljava/time/Duration;
+#getPauseThreshold()Ljava/time/Duration;
@1.0.0
-###io/micrometer/core/instrument/histogram/pause/ClockDriftPauseDetector

+###io/micrometer/core/instrument/histogram/pause/NoPauseDetector
@1.0.0-rc.6
+#<init>()V
@1.0.0
-###io/micrometer/core/instrument/histogram/pause/NoPauseDetector

+###io/micrometer/core/instrument/histogram/pause/PauseDetector
@1.0.0-rc.6
@1.0.0
-###io/micrometer/core/instrument/histogram/pause/PauseDetector

+###io/micrometer/core/instrument/stats/hist/HistogramConfig
@1.0.0-rc.2
+#timerPercentilesMax()Ljava/time/Duration;
+#timerPercentilesMin()Ljava/time/Duration;
@1.0.0-rc.3
-###io/micrometer/core/instrument/stats/hist/HistogramConfig

+###io/micrometer/core/instrument/stats/hist/BucketListener
@0.11.0.RELEASE
+#bucketAdded(Lio/micrometer/core/instrument/stats/hist/Bucket;)V
@0.12.0.RELEASE
-###io/micrometer/core/instrument/stats/hist/BucketListener

+###io/micrometer/core/instrument/stats/hist/Histogram$Type
@0.11.0.RELEASE
+#values()[Lio/micrometer/core/instrument/stats/hist/Histogram$Type;
+#valueOf(Ljava/lang/String;)Lio/micrometer/core/instrument/stats/hist/Histogram$Type;
@0.12.0.RELEASE
-###io/micrometer/core/instrument/stats/hist/Histogram$Type

+###io/micrometer/core/instrument/stats/hist/PercentileBuckets
@0.11.0.RELEASE
+#<init>()V
+#bucketFunction(D)D
@0.12.0.RELEASE
-###io/micrometer/core/instrument/stats/hist/PercentileBuckets
