
+###org/apache/flume/Clock
@1.3.0
+#currentTimeMillis()J

+###org/apache/flume/NamedComponent
@1.2.0
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;

+###org/apache/flume/SourceFactory
@1.0.0-incubating
+#register(Ljava/lang/String;Ljava/lang/Class;)Z
+#unregister(Ljava/lang/String;)Z
+#create(Ljava/lang/String;)Lorg/apache/flume/Source;
+#getSourceNames()Ljava/util/Set;
@1.2.0
+#create(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flume/Source;
+#unregister(Lorg/apache/flume/Source;)Z
-#register(Ljava/lang/String;Ljava/lang/Class;)Z
-#unregister(Ljava/lang/String;)Z
-#create(Ljava/lang/String;)Lorg/apache/flume/Source;
-#getSourceNames()Ljava/util/Set;
@1.4.0
+#getClass(Ljava/lang/String;)Ljava/lang/Class;
-#unregister(Lorg/apache/flume/Source;)Z

+###org/apache/flume/serialization/ResettableFileInputStream
@1.4.0
+#<init>(Ljava/io/File;Lorg/apache/flume/serialization/PositionTracker;)V
+#<init>(Ljava/io/File;Lorg/apache/flume/serialization/PositionTracker;ILjava/nio/charset/Charset;)V
+#read()I
+#read([BII)I
+#readChar()I
+#mark()V
+#markPosition(J)V
+#getMarkPosition()J
+#reset()V
+#length()J
+#tell()J
+#seek(J)V
+#close()V
@1.5.0
+#<init>(Ljava/io/File;Lorg/apache/flume/serialization/PositionTracker;ILjava/nio/charset/Charset;Lorg/apache/flume/serialization/DecodeErrorPolicy;)V
-#<init>(Ljava/io/File;Lorg/apache/flume/serialization/PositionTracker;ILjava/nio/charset/Charset;)V

+###org/apache/flume/serialization/AvroEventDeserializer$AvroSchemaType
@1.4.0
+#values()[Lorg/apache/flume/serialization/AvroEventDeserializer$AvroSchemaType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flume/serialization/AvroEventDeserializer$AvroSchemaType;

+###org/apache/flume/serialization/EventDeserializer
@1.4.0
+#readEvent()Lorg/apache/flume/Event;
+#readEvents(I)Ljava/util/List;
+#mark()V
+#reset()V
+#close()V

+###org/apache/flume/source/EventDrivenSourceRunner
@1.0.0-incubating
+#<init>()V
+#start()V
+#stop()V
+#toString()Ljava/lang/String;
+#getLifecycleState()Lorg/apache/flume/lifecycle/LifecycleState;

+###org/apache/flume/source/SyslogUtils
@1.2.0
+#<init>()V
+#<init>(Z)V
+#<init>(Ljava/lang/Integer;Z)V
+#addFormats(Ljava/util/Map;)V
+#extractEvent(Lorg/jboss/netty/buffer/ChannelBuffer;)Lorg/apache/flume/Event;
+#getEventSize()Ljava/lang/Integer;
+#setEventSize(Ljava/lang/Integer;)V
@1.5.0
+#<init>(Ljava/lang/Integer;ZZ)V
+#setKeepFields(Ljava/lang/Boolean;)V
-#<init>(Ljava/lang/Integer;Z)V
@1.6.0
+#keepAllFields(Ljava/util/Set;)Z
+#chooseFieldsToKeep(Ljava/lang/String;)Ljava/util/Set;
+#addFieldsToBody(Ljava/util/Set;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#<init>(Ljava/lang/Integer;Ljava/util/Set;Z)V
+#setKeepFields(Ljava/util/Set;)V
-#<init>(Ljava/lang/Integer;ZZ)V
-#setKeepFields(Ljava/lang/Boolean;)V
@1.9.0
+#getIP(Ljava/net/SocketAddress;)Ljava/lang/String;
+#getHostname(Ljava/net/SocketAddress;)Ljava/lang/String;
+#<init>(Ljava/lang/Integer;Ljava/util/Set;ZLjava/time/Clock;)V
@1.10.0
+#extractEvent(Lio/netty/buffer/ByteBuf;)Lorg/apache/flume/Event;
-#extractEvent(Lorg/jboss/netty/buffer/ChannelBuffer;)Lorg/apache/flume/Event;

+###org/apache/flume/instrumentation/SinkProcessorCounter
@1.2.0

+###org/apache/flume/formatter/output/DefaultPathManager
@1.7.0
+#<init>(Lorg/apache/flume/Context;)V
+#nextFile()Ljava/io/File;
+#getCurrentFile()Ljava/io/File;
+#rotate()V
+#getBaseDirectory()Ljava/io/File;
+#setBaseDirectory(Ljava/io/File;)V
+#getSeriesTimestamp()J
+#getPrefix()Ljava/lang/String;
+#getExtension()Ljava/lang/String;
+#getFileIndex()Ljava/util/concurrent/atomic/AtomicInteger;

+###org/apache/flume/PollableSource$Status
@1.0.0-incubating
+#values()[Lorg/apache/flume/PollableSource$Status;
+#valueOf(Ljava/lang/String;)Lorg/apache/flume/PollableSource$Status;

+###org/apache/flume/interceptor/StaticInterceptor$Constants
@1.3.0
+#<init>()V

+###org/apache/flume/Constants
@1.0.0-incubating

+###org/apache/flume/SinkRunner
@1.0.0-incubating
+#<init>()V
+#forSink(Lorg/apache/flume/Sink;)Lorg/apache/flume/SinkRunner;
+#getSink()Lorg/apache/flume/Sink;
+#setSink(Lorg/apache/flume/Sink;)V
@1.2.0
+#<init>(Lorg/apache/flume/SinkProcessor;)V
+#getPolicy()Lorg/apache/flume/SinkProcessor;
+#setSink(Lorg/apache/flume/SinkProcessor;)V
+#start()V
+#stop()V
+#toString()Ljava/lang/String;
+#getLifecycleState()Lorg/apache/flume/lifecycle/LifecycleState;
-#forSink(Lorg/apache/flume/Sink;)Lorg/apache/flume/SinkRunner;
-#getSink()Lorg/apache/flume/Sink;
-#setSink(Lorg/apache/flume/Sink;)V

+###org/apache/flume/serialization/BodyTextEventSerializer$Builder
@1.2.0
+#<init>()V
+#build(Lorg/apache/flume/Context;Ljava/io/OutputStream;)Lorg/apache/flume/serialization/EventSerializer;

+###org/apache/flume/serialization/BodyTextEventSerializer
@1.2.0
+#configure(Lorg/apache/flume/Context;)V
+#supportsReopen()Z
+#afterCreate()V
+#afterReopen()V
+#beforeClose()V
+#write(Lorg/apache/flume/Event;)V
+#flush()V
@1.3.0
-#configure(Lorg/apache/flume/Context;)V

+###org/apache/flume/source/AbstractSource
@1.0.0-incubating
+#<init>()V
+#start()V
+#stop()V
+#getChannel()Lorg/apache/flume/Channel;
+#setChannel(Lorg/apache/flume/Channel;)V
+#getLifecycleState()Lorg/apache/flume/lifecycle/LifecycleState;
@1.2.0
+#setChannelProcessor(Lorg/apache/flume/channel/ChannelProcessor;)V
+#getChannelProcessor()Lorg/apache/flume/channel/ChannelProcessor;
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
-#getChannel()Lorg/apache/flume/Channel;
-#setChannel(Lorg/apache/flume/Channel;)V
@1.3.0
+#toString()Ljava/lang/String;

+###org/apache/flume/source/ExecSource
@1.0.0-incubating
+#<init>()V
+#start()V
+#stop()V
+#configure(Lorg/apache/flume/Context;)V
@1.9.0
+#getBatchSize()J

+###org/apache/flume/source/PollableSourceRunner$PollingRunner
@1.0.0-incubating
+#<init>()V
+#run()V

+###org/apache/flume/lifecycle/LifecycleSupervisor$SupervisorPolicy
@1.0.0-incubating
+#<init>()V

+###org/apache/flume/lifecycle/LifecycleAware
@1.0.0-incubating
+#start()V
+#stop()V
+#getLifecycleState()Lorg/apache/flume/lifecycle/LifecycleState;

+###org/apache/flume/sink/FailoverSinkProcessor
@1.2.0
+#<init>()V
+#configure(Lorg/apache/flume/Context;)V
+#process()Lorg/apache/flume/Sink$Status;
+#setSinks(Ljava/util/List;)V

+###org/apache/flume/netty/filter/PatternRule
@1.10.0
+#<init>(Lio/netty/handler/ipfilter/IpFilterRuleType;Ljava/lang/String;)V
+#matches(Ljava/net/InetSocketAddress;)Z
+#ruleType()Lio/netty/handler/ipfilter/IpFilterRuleType;

+###org/apache/flume/channel/MultiplexingChannelSelector
@1.2.0
+#<init>()V
+#getRequiredChannels(Lorg/apache/flume/Event;)Ljava/util/List;
+#getOptionalChannels(Lorg/apache/flume/Event;)Ljava/util/List;
+#configure(Lorg/apache/flume/Context;)V

+###org/apache/flume/client/avro/ReliableEventReader
@1.4.0
+#commit()V

+###org/apache/flume/interceptor/InterceptorBuilderFactory
@1.2.0
+#<init>()V
+#newInstance(Ljava/lang/String;)Lorg/apache/flume/interceptor/Interceptor$Builder;

+###org/apache/flume/ChannelSelector
@1.2.0
+#setChannels(Ljava/util/List;)V
+#getRequiredChannels(Lorg/apache/flume/Event;)Ljava/util/List;
+#getOptionalChannels(Lorg/apache/flume/Event;)Ljava/util/List;
+#getAllChannels()Ljava/util/List;

+###org/apache/flume/ChannelException
@1.0.0-incubating
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Exception;)V
+#<init>(Ljava/lang/String;Ljava/lang/Exception;)V
@1.2.0
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
-#<init>(Ljava/lang/Exception;)V
-#<init>(Ljava/lang/String;Ljava/lang/Exception;)V

+###org/apache/flume/serialization/HeaderAndBodyTextEventSerializer
@1.4.0
+#supportsReopen()Z
+#afterCreate()V
+#afterReopen()V
+#beforeClose()V
+#write(Lorg/apache/flume/Event;)V
+#flush()V

+###org/apache/flume/source/DefaultSourceFactory
@1.0.0-incubating
+#<init>()V
+#register(Ljava/lang/String;Ljava/lang/Class;)Z
+#unregister(Ljava/lang/String;)Z
+#getSourceNames()Ljava/util/Set;
+#create(Ljava/lang/String;)Lorg/apache/flume/Source;
+#toString()Ljava/lang/String;
+#getSourceRegistry()Ljava/util/Map;
+#setSourceRegistry(Ljava/util/Map;)V
@1.2.0
+#unregister(Lorg/apache/flume/Source;)Z
+#create(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flume/Source;
+#getRegistryClone()Ljava/util/Map;
-#register(Ljava/lang/String;Ljava/lang/Class;)Z
-#unregister(Ljava/lang/String;)Z
-#getSourceNames()Ljava/util/Set;
-#create(Ljava/lang/String;)Lorg/apache/flume/Source;
-#toString()Ljava/lang/String;
-#getSourceRegistry()Ljava/util/Map;
-#setSourceRegistry(Ljava/util/Map;)V
@1.4.0
+#getClass(Ljava/lang/String;)Ljava/lang/Class;
-#unregister(Lorg/apache/flume/Source;)Z
-#getRegistryClone()Ljava/util/Map;

+###org/apache/flume/sink/AbstractSinkProcessor
@1.2.0
+#<init>()V
+#start()V
+#stop()V
+#getLifecycleState()Lorg/apache/flume/lifecycle/LifecycleState;
+#setSinks(Ljava/util/List;)V
@1.10.0
+#getSinks()Ljava/util/List;

+###org/apache/flume/sink/LoggerSink
@1.0.0-incubating
+#<init>()V
+#process()Lorg/apache/flume/PollableSink$Status;
@1.2.0
+#process()Lorg/apache/flume/Sink$Status;
-#process()Lorg/apache/flume/PollableSink$Status;
@1.6.0
+#configure(Lorg/apache/flume/Context;)V

+###org/apache/flume/instrumentation/MonitorService
@1.3.0
+#start()V
+#stop()V

+###org/apache/flume/instrumentation/ChannelCounterMBean
@1.2.0
+#getChannelSize()J
+#getEventPutAttemptCount()J
+#getEventTakeAttemptCount()J
+#getEventPutSuccessCount()J
+#getEventTakeSuccessCount()J
+#getStartTime()J
+#getStopTime()J
@1.3.0
+#getChannelCapacity()J
+#getType()Ljava/lang/String;
+#getChannelFillPercentage()D

+###org/apache/flume/channel/ChannelSelectorFactory
@1.2.0
+#<init>()V
+#create(Ljava/util/List;Ljava/util/Map;)Lorg/apache/flume/ChannelSelector;
+#create(Ljava/util/List;Lorg/apache/flume/conf/channel/ChannelSelectorConfiguration;)Lorg/apache/flume/ChannelSelector;

+###org/apache/flume/formatter/output/TextDelimitedOutputFormatter
@1.0.0-incubating
+#<init>()V
+#format(Lorg/apache/flume/Event;)[B

+###org/apache/flume/SourceRunner
@1.0.0-incubating
+#<init>()V
+#forSource(Lorg/apache/flume/Source;)Lorg/apache/flume/SourceRunner;
+#getSource()Lorg/apache/flume/Source;
+#setSource(Lorg/apache/flume/Source;)V

+###org/apache/flume/interceptor/StaticInterceptor
@1.3.0
+#initialize()V
+#intercept(Lorg/apache/flume/Event;)Lorg/apache/flume/Event;
+#intercept(Ljava/util/List;)Ljava/util/List;
+#close()V

+###org/apache/flume/interceptor/HostInterceptor$Builder
@1.2.0
+#<init>()V
+#build()Lorg/apache/flume/interceptor/Interceptor;
+#configure(Lorg/apache/flume/Context;)V

+###org/apache/flume/Source
@1.0.0-incubating
+#setChannel(Lorg/apache/flume/Channel;)V
+#getChannel()Lorg/apache/flume/Channel;
@1.2.0
+#setChannelProcessor(Lorg/apache/flume/channel/ChannelProcessor;)V
+#getChannelProcessor()Lorg/apache/flume/channel/ChannelProcessor;
-#setChannel(Lorg/apache/flume/Channel;)V
-#getChannel()Lorg/apache/flume/Channel;

+###org/apache/flume/serialization/EventSerializerType
@1.2.0
+#values()[Lorg/apache/flume/serialization/EventSerializerType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flume/serialization/EventSerializerType;
+#getBuilderClass()Ljava/lang/Class;

+###org/apache/flume/serialization/Seekable
@1.4.0
+#seek(J)V
+#tell()J

+###org/apache/flume/source/AbstractPollableSource
@1.4.0
+#<init>()V
+#process()Lorg/apache/flume/PollableSource$Status;
@1.7.0
+#configure(Lorg/apache/flume/Context;)V
+#getBackOffSleepIncrement()J
+#getMaxBackOffSleepInterval()J

+###org/apache/flume/source/AvroSource
@1.0.0-incubating
+#<init>()V
+#configure(Lorg/apache/flume/Context;)V
+#start()V
+#stop()V
+#toString()Ljava/lang/String;
+#append(Lorg/apache/flume/source/avro/AvroFlumeEvent;)Lorg/apache/flume/source/avro/Status;
+#appendBatch(Ljava/util/List;)Lorg/apache/flume/source/avro/Status;

+###org/apache/flume/lifecycle/LifecycleSupervisor$SupervisorPolicy$OnceOnlyPolicy
@1.0.0-incubating
+#<init>()V

+###org/apache/flume/sink/AvroSink
@1.0.0-incubating
+#<init>()V
+#configure(Lorg/apache/flume/Context;)V
+#start()V
+#stop()V
+#process()Lorg/apache/flume/PollableSink$Status;
@1.2.0
+#toString()Ljava/lang/String;
+#process()Lorg/apache/flume/Sink$Status;
-#process()Lorg/apache/flume/PollableSink$Status;
@1.4.0
-#configure(Lorg/apache/flume/Context;)V
-#start()V
-#stop()V
-#toString()Ljava/lang/String;
-#process()Lorg/apache/flume/Sink$Status;

+###org/apache/flume/sink/AbstractSink
@1.0.0-incubating
+#<init>()V
+#start()V
+#stop()V
+#getChannel()Lorg/apache/flume/Channel;
+#setChannel(Lorg/apache/flume/Channel;)V
+#getLifecycleState()Lorg/apache/flume/lifecycle/LifecycleState;
@1.2.0
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
@1.3.0
+#toString()Ljava/lang/String;

+###org/apache/flume/instrumentation/MonitoringType
@1.3.0
+#values()[Lorg/apache/flume/instrumentation/MonitoringType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flume/instrumentation/MonitoringType;
+#getMonitorClass()Ljava/lang/Class;

+###org/apache/flume/instrumentation/SinkCounter
@1.2.0
+#<init>(Ljava/lang/String;)V
+#getConnectionCreatedCount()J
+#incrementConnectionCreatedCount()J
+#getConnectionClosedCount()J
+#incrementConnectionClosedCount()J
+#getConnectionFailedCount()J
+#incrementConnectionFailedCount()J
+#getBatchEmptyCount()J
+#incrementBatchEmptyCount()J
+#getBatchUnderflowCount()J
+#incrementBatchUnderflowCount()J
+#getBatchCompleteCount()J
+#incrementBatchCompleteCount()J
+#getEventDrainAttemptCount()J
+#incrementEventDrainAttemptCount()J
+#addToEventDrainAttemptCount(J)J
+#getEventDrainSuccessCount()J
+#incrementEventDrainSuccessCount()J
+#addToEventDrainSuccessCount(J)J
@1.6.0
+#<init>(Ljava/lang/String;[Ljava/lang/String;)V
@1.9.0
+#incrementEventWriteFail()J
+#getEventWriteFail()J
+#incrementChannelReadFail()J
+#getChannelReadFail()J
+#incrementEventWriteOrChannelFail(Ljava/lang/Throwable;)J

+###org/apache/flume/channel/ChannelProcessor
@1.2.0
+#<init>(Lorg/apache/flume/ChannelSelector;)V
+#initialize()V
+#close()V
+#configure(Lorg/apache/flume/Context;)V
+#getSelector()Lorg/apache/flume/ChannelSelector;
+#processEventBatch(Ljava/util/List;)V
+#processEvent(Lorg/apache/flume/Event;)V

+###org/apache/flume/channel/PseudoTxnMemoryChannel$NoOpTransaction
@1.0.0-incubating
+#<init>()V
+#sharedInstance()Lorg/apache/flume/Transaction;
+#begin()V
+#commit()V
+#rollback()V
+#close()V

+###org/apache/flume/formatter/output/BucketPath
@1.0.0-incubating
+#<init>()V
+#containsTag(Ljava/lang/String;)Z
+#expandShorthand(C)Ljava/lang/String;
+#replaceShorthand(CLjava/util/Map;)Ljava/lang/String;
+#escapeString(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;
+#getEscapeMapping(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map;
@1.2.0
+#replaceShorthand(CLjava/util/Map;ZII)Ljava/lang/String;
+#escapeString(Ljava/lang/String;Ljava/util/Map;ZII)Ljava/lang/String;
+#getEscapeMapping(Ljava/lang/String;Ljava/util/Map;ZII)Ljava/util/Map;
@1.3.0
+#replaceShorthand(CLjava/util/Map;Ljava/util/TimeZone;ZII)Ljava/lang/String;
+#escapeString(Ljava/lang/String;Ljava/util/Map;Ljava/util/TimeZone;ZII)Ljava/lang/String;
@1.4.0
*#containsTag(Ljava/lang/String;)Z[deprecated]
*#expandShorthand(C)Ljava/lang/String;[deprecated]
*#replaceShorthand(CLjava/util/Map;)Ljava/lang/String;[deprecated]
*#replaceShorthand(CLjava/util/Map;ZII)Ljava/lang/String;[deprecated]
+#replaceShorthand(CLjava/util/Map;Ljava/util/TimeZone;ZIIZ)Ljava/lang/String;[deprecated]
+#escapeString(Ljava/lang/String;Ljava/util/Map;Ljava/util/TimeZone;ZIIZ)Ljava/lang/String;
*#getEscapeMapping(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map;[deprecated]
*#getEscapeMapping(Ljava/lang/String;Ljava/util/Map;ZII)Ljava/util/Map;[deprecated]
+#setClock(Lorg/apache/flume/Clock;)V
+#getClock()Lorg/apache/flume/Clock;
-#replaceShorthand(CLjava/util/Map;Ljava/util/TimeZone;ZII)Ljava/lang/String;
-#escapeString(Ljava/lang/String;Ljava/util/Map;Ljava/util/TimeZone;ZII)Ljava/lang/String;

+###org/apache/flume/client/avro/ReliableSpoolingFileEventReader
@1.4.0
+#getLastFileRead()Ljava/lang/String;
+#readEvent()Lorg/apache/flume/Event;
+#readEvents(I)Ljava/util/List;
+#close()V
+#commit()V
@1.10.0
+#getLastFileReadInfo()Ljava/lang/String;

+###org/apache/flume/interceptor/TimestampInterceptor$Constants
@1.2.0
+#<init>()V

+###org/apache/flume/VersionAnnotation
@1.2.0
+#version()Ljava/lang/String;
+#revision()Ljava/lang/String;
+#branch()Ljava/lang/String;
+#user()Ljava/lang/String;
+#date()Ljava/lang/String;
+#url()Ljava/lang/String;
+#srcChecksum()Ljava/lang/String;

+###org/apache/flume/Channel
@1.0.0-incubating
+#put(Lorg/apache/flume/Event;)V
+#take()Lorg/apache/flume/Event;
+#getTransaction()Lorg/apache/flume/Transaction;
+#shutdown()V
+#getName()Ljava/lang/String;
@1.2.0
-#shutdown()V
-#getName()Ljava/lang/String;

+###org/apache/flume/serialization/Resettable
@1.4.0
+#mark()V
+#reset()V

+###org/apache/flume/source/SequenceGeneratorSource
@1.0.0-incubating
+#<init>()V
+#process()Lorg/apache/flume/PollableSource$Status;
+#start()V
+#stop()V
@1.3.0
+#configure(Lorg/apache/flume/Context;)V
@1.7.0
-#configure(Lorg/apache/flume/Context;)V
-#process()Lorg/apache/flume/PollableSource$Status;
-#start()V
-#stop()V
@1.9.0
+#getBatchSize()J

+###org/apache/flume/source/PollableSourceConstants
@1.7.0
+#<init>()V

+###org/apache/flume/source/SslContextAwareAbstractSource
@1.9.0
+#<init>()V
+#getKeystore()Ljava/lang/String;
+#getKeystorePassword()Ljava/lang/String;
+#getKeystoreType()Ljava/lang/String;
+#getExcludeProtocols()Ljava/util/Set;
+#getIncludeProtocols()Ljava/util/Set;
+#getExcludeCipherSuites()Ljava/util/Set;
+#getIncludeCipherSuites()Ljava/util/Set;
+#isSslEnabled()Z

+###org/apache/flume/source/http/JSONHandler
@1.3.0
+#<init>()V
+#getEvents(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/List;
+#configure(Lorg/apache/flume/Context;)V

+###org/apache/flume/source/NetcatSource
@1.0.0-incubating
+#<init>()V
+#configure(Lorg/apache/flume/Context;)V
+#start()V
+#stop()V

+###org/apache/flume/sink/LoadBalancingSinkProcessor
@1.2.0
+#<init>()V
+#configure(Lorg/apache/flume/Context;)V
+#start()V
+#stop()V
+#process()Lorg/apache/flume/Sink$Status;

+###org/apache/flume/instrumentation/GangliaServer$GangliaCollector
@1.3.0
+#run()V

+###org/apache/flume/channel/AbstractChannel
@1.2.0
+#<init>()V
+#setName(Ljava/lang/String;)V
+#start()V
+#stop()V
+#getLifecycleState()Lorg/apache/flume/lifecycle/LifecycleState;
+#getName()Ljava/lang/String;
+#configure(Lorg/apache/flume/Context;)V
@1.3.0
+#toString()Ljava/lang/String;

+###org/apache/flume/annotations/InterfaceStability$Unstable
@1.3.0

+###org/apache/flume/annotations/InterfaceAudience$LimitedPrivate
@1.3.0
+#value()[Ljava/lang/String;

+###org/apache/flume/client/avro/SimpleTextLineEventReader
@1.4.0
+#<init>(Ljava/io/Reader;)V
+#readEvent()Lorg/apache/flume/Event;
+#readEvents(I)Ljava/util/List;
+#close()V

+###org/apache/flume/interceptor/HostInterceptor
@1.2.0
+#initialize()V
+#intercept(Lorg/apache/flume/Event;)Lorg/apache/flume/Event;
+#intercept(Ljava/util/List;)Ljava/util/List;
+#close()V

+###org/apache/flume/tools/FlumeBeanConfigurator
@1.9.0
+#<init>()V
+#setConfigurationFields(Ljava/lang/Object;Ljava/util/Map;)V
+#setConfigurationFields(Ljava/lang/Object;Lorg/apache/flume/Context;)V
+#setConfigurationFields(Ljava/lang/Object;Lorg/apache/flume/Context;Ljava/lang/String;)V

+###org/apache/flume/serialization/EventSerializer$Builder
@1.2.0
+#build(Lorg/apache/flume/Context;Ljava/io/OutputStream;)Lorg/apache/flume/serialization/EventSerializer;

+###org/apache/flume/serialization/TransferStateFileMeta$Builder
@1.4.0
+#getOffset()Ljava/lang/Long;
+#setOffset(J)Lorg/apache/flume/serialization/TransferStateFileMeta$Builder;
+#hasOffset()Z
+#clearOffset()Lorg/apache/flume/serialization/TransferStateFileMeta$Builder;
+#build()Lorg/apache/flume/serialization/TransferStateFileMeta;
+#build()Ljava/lang/Object;
@1.10.0
+#getOffset()J
-#getOffset()Ljava/lang/Long;

+###org/apache/flume/serialization/RemoteMarkable
@1.4.0
+#markPosition(J)V
+#getMarkPosition()J

+###org/apache/flume/source/shaded/guava/RateLimiter
@1.9.0
+#create(D)Lorg/apache/flume/source/shaded/guava/RateLimiter;
+#create(DJLjava/util/concurrent/TimeUnit;)Lorg/apache/flume/source/shaded/guava/RateLimiter;
+#setRate(D)V
+#getRate()D
+#acquire()D
+#acquire(I)D
+#tryAcquire(JLjava/util/concurrent/TimeUnit;)Z
+#tryAcquire(I)Z
+#tryAcquire()Z
+#tryAcquire(IJLjava/util/concurrent/TimeUnit;)Z
+#toString()Ljava/lang/String;

+###org/apache/flume/source/SpoolDirectorySource$SpoolDirectoryRunnable
@1.9.0
+#<init>(Lorg/apache/flume/source/SpoolDirectorySource;Lorg/apache/flume/client/avro/ReliableSpoolingFileEventReader;Lorg/apache/flume/instrumentation/SourceCounter;)V
+#run()V

+###org/apache/flume/source/http/HTTPSourceHandler
@1.3.0
+#getEvents(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/List;

+###org/apache/flume/sink/AbstractSingleSinkProcessor
@1.10.0
+#<init>()V
+#start()V
+#stop()V
+#getLifecycleState()Lorg/apache/flume/lifecycle/LifecycleState;
+#setSinks(Ljava/util/List;)V
+#getSink()Lorg/apache/flume/Sink;

+###org/apache/flume/instrumentation/GangliaServer
@1.3.0
+#<init>()V
+#sendToGangliaNodes()V
+#start()V
+#stop()V
+#setPollFrequency(I)V
+#getPollFrequency()I
+#setIsGanglia3(Z)V
+#isGanglia3()Z
+#configure(Lorg/apache/flume/Context;)V

+###org/apache/flume/instrumentation/SinkCounterMBean
@1.2.0
+#getConnectionCreatedCount()J
+#getConnectionClosedCount()J
+#getConnectionFailedCount()J
+#getBatchEmptyCount()J
+#getBatchUnderflowCount()J
+#getBatchCompleteCount()J
+#getEventDrainAttemptCount()J
+#getEventDrainSuccessCount()J
+#getStartTime()J
+#getStopTime()J
@1.3.0
+#getType()Ljava/lang/String;
@1.9.0
+#getEventWriteFail()J
+#getChannelReadFail()J

+###org/apache/flume/instrumentation/ChannelProcessorCounter
@1.2.0

+###org/apache/flume/annotations/Recyclable
@1.4.0

+###org/apache/flume/formatter/output/RollTimePathManager
@1.7.0
+#<init>(Lorg/apache/flume/Context;)V
+#nextFile()Ljava/io/File;

+###org/apache/flume/event/EventHelper
@1.2.0
+#<init>()V
+#dumpEvent(Lorg/apache/flume/Event;)Ljava/lang/String;
+#dumpEvent(Lorg/apache/flume/Event;I)Ljava/lang/String;

+###org/apache/flume/interceptor/SearchAndReplaceInterceptor$Builder
@1.6.0
+#<init>()V
+#configure(Lorg/apache/flume/Context;)V
+#build()Lorg/apache/flume/interceptor/Interceptor;

+###org/apache/flume/interceptor/RemoveHeaderInterceptor$Builder
@1.8.0
+#<init>()V
+#build()Lorg/apache/flume/interceptor/Interceptor;
+#configure(Lorg/apache/flume/Context;)V

+###org/apache/flume/tools/GetJavaProperty
@1.2.0
+#<init>()V
+#main([Ljava/lang/String;)V

+###org/apache/flume/serialization/EventSerDe$Builder
@1.4.0
+#build(Lorg/apache/flume/Context;Lorg/apache/flume/serialization/ResettableInputStream;Ljava/io/OutputStream;)Lorg/apache/flume/serialization/EventSerDe;

+###org/apache/flume/serialization/DecodeErrorPolicy
@1.5.0
+#values()[Lorg/apache/flume/serialization/DecodeErrorPolicy;
+#valueOf(Ljava/lang/String;)Lorg/apache/flume/serialization/DecodeErrorPolicy;

+###org/apache/flume/serialization/EventSerializerFactory
@1.2.0
+#<init>()V
+#getInstance(Ljava/lang/String;Lorg/apache/flume/Context;Ljava/io/OutputStream;)Lorg/apache/flume/serialization/EventSerializer;

+###org/apache/flume/source/SyslogUDPSource
@1.2.0
+#<init>()V
+#start()V
+#stop()V
+#configure(Lorg/apache/flume/Context;)V
@1.5.0
+#getSourcePort()I
@1.7.0
-#getSourcePort()I

+###org/apache/flume/source/PollableSourceRunner
@1.0.0-incubating
+#<init>()V
+#start()V
+#stop()V
+#toString()Ljava/lang/String;
+#getLifecycleState()Lorg/apache/flume/lifecycle/LifecycleState;

+###org/apache/flume/source/http/HTTPBadRequestException
@1.3.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flume/lifecycle/LifecycleSupervisor
@1.0.0-incubating
+#<init>()V
+#start()V
+#stop()V
+#fail()V
+#supervise(Lorg/apache/flume/lifecycle/LifecycleAware;Lorg/apache/flume/lifecycle/LifecycleSupervisor$SupervisorPolicy;Lorg/apache/flume/lifecycle/LifecycleState;)V
+#unsupervise(Lorg/apache/flume/lifecycle/LifecycleAware;)V
+#setDesiredState(Lorg/apache/flume/lifecycle/LifecycleAware;Lorg/apache/flume/lifecycle/LifecycleState;)V
+#getLifecycleState()Lorg/apache/flume/lifecycle/LifecycleState;
@1.2.0
+#isComponentInErrorState(Lorg/apache/flume/lifecycle/LifecycleAware;)Z

+###org/apache/flume/sink/ThriftSink
@1.4.0
+#<init>()V

+###org/apache/flume/ChannelFactory
@1.0.0-incubating
+#register(Ljava/lang/String;Ljava/lang/Class;)Z
+#unregister(Ljava/lang/String;)Z
+#create(Ljava/lang/String;)Lorg/apache/flume/Channel;
+#createFanout(Ljava/lang/String;Ljava/util/Map;)Lorg/apache/flume/Channel;
+#getChannelNames()Ljava/util/Set;
@1.2.0
+#create(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flume/Channel;
+#unregister(Lorg/apache/flume/Channel;)Z
-#register(Ljava/lang/String;Ljava/lang/Class;)Z
-#unregister(Ljava/lang/String;)Z
-#create(Ljava/lang/String;)Lorg/apache/flume/Channel;
-#createFanout(Ljava/lang/String;Ljava/util/Map;)Lorg/apache/flume/Channel;
-#getChannelNames()Ljava/util/Set;
@1.4.0
+#getClass(Ljava/lang/String;)Ljava/lang/Class;
-#unregister(Lorg/apache/flume/Channel;)Z

+###org/apache/flume/Transaction$TransactionState
@1.0.0-incubating
+#values()[Lorg/apache/flume/Transaction$TransactionState;
+#valueOf(Ljava/lang/String;)Lorg/apache/flume/Transaction$TransactionState;

+###org/apache/flume/channel/AbstractChannelSelector
@1.2.0
+#<init>()V
+#getAllChannels()Ljava/util/List;
+#setChannels(Ljava/util/List;)V
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;

+###org/apache/flume/channel/ReplicatingChannelSelector
@1.2.0
+#<init>()V
+#getRequiredChannels(Lorg/apache/flume/Event;)Ljava/util/List;
+#getOptionalChannels(Lorg/apache/flume/Event;)Ljava/util/List;
+#configure(Lorg/apache/flume/Context;)V

+###org/apache/flume/annotations/InterfaceStability
@1.3.0
+#<init>()V

+###org/apache/flume/Transaction
@1.0.0-incubating
+#begin()V
+#commit()V
+#rollback()V
+#close()V

+###org/apache/flume/client/avro/EventReader
@1.4.0
+#readEvent()Lorg/apache/flume/Event;
+#readEvents(I)Ljava/util/List;
+#close()V

+###org/apache/flume/tools/PlatformDetect
@1.4.0
+#<init>()V
+#isWindows()Z

+###org/apache/flume/serialization/EventSerializer
@1.2.0
+#afterCreate()V
+#afterReopen()V
+#write(Lorg/apache/flume/Event;)V
+#flush()V
+#beforeClose()V
+#supportsReopen()Z

+###org/apache/flume/serialization/AvroEventSerializerConfigurationConstants
@1.2.0
+#<init>()V

+###org/apache/flume/serialization/FlumeEventAvroEventSerializer$Builder
@1.2.0
+#<init>()V
+#build(Lorg/apache/flume/Context;Ljava/io/OutputStream;)Lorg/apache/flume/serialization/EventSerializer;

+###org/apache/flume/source/shaded/guava/Stopwatch
@1.9.0
+#createUnstarted()Lorg/apache/flume/source/shaded/guava/Stopwatch;
+#createUnstarted(Lcom/google/common/base/Ticker;)Lorg/apache/flume/source/shaded/guava/Stopwatch;
+#createStarted()Lorg/apache/flume/source/shaded/guava/Stopwatch;
+#createStarted(Lcom/google/common/base/Ticker;)Lorg/apache/flume/source/shaded/guava/Stopwatch;
+#isRunning()Z
+#start()Lorg/apache/flume/source/shaded/guava/Stopwatch;
+#stop()Lorg/apache/flume/source/shaded/guava/Stopwatch;
+#reset()Lorg/apache/flume/source/shaded/guava/Stopwatch;
+#elapsed(Ljava/util/concurrent/TimeUnit;)J
+#toString()Ljava/lang/String;

+###org/apache/flume/source/SpoolDirectorySourceConfigurationConstants
@1.3.0
+#<init>()V

+###org/apache/flume/source/SyslogUtils$SyslogStatus
@1.2.0
+#values()[Lorg/apache/flume/source/SyslogUtils$SyslogStatus;
+#valueOf(Ljava/lang/String;)Lorg/apache/flume/source/SyslogUtils$SyslogStatus;
+#getSyslogStatus()Ljava/lang/String;

+###org/apache/flume/source/SyslogTcpSource$SyslogTcpHandler
@1.10.0

+###org/apache/flume/sink/NullSink
@1.0.0-incubating
+#<init>()V
+#process()Lorg/apache/flume/PollableSink$Status;
+#start()V
+#stop()V
@1.2.0
+#configure(Lorg/apache/flume/Context;)V
+#process()Lorg/apache/flume/Sink$Status;
+#toString()Ljava/lang/String;
-#process()Lorg/apache/flume/PollableSink$Status;
@1.9.0
+#getBatchSize()J
@1.10.0
+#getCounterGroup()Lorg/apache/flume/CounterGroup;
+#getLogEveryNEvents()I

+###org/apache/flume/sink/SinkProcessorFactory
@1.2.0
+#<init>()V
+#getProcessor(Lorg/apache/flume/Context;Ljava/util/List;)Lorg/apache/flume/SinkProcessor;
+#getProcessor(Lorg/apache/flume/conf/ComponentConfiguration;Ljava/util/List;)Lorg/apache/flume/SinkProcessor;

+###org/apache/flume/Sink
@1.0.0-incubating
+#setChannel(Lorg/apache/flume/Channel;)V
+#getChannel()Lorg/apache/flume/Channel;
@1.2.0
+#process()Lorg/apache/flume/Sink$Status;

+###org/apache/flume/channel/DefaultChannelFactory
@1.0.0-incubating
+#<init>()V
+#register(Ljava/lang/String;Ljava/lang/Class;)Z
+#unregister(Ljava/lang/String;)Z
+#getChannelNames()Ljava/util/Set;
+#create(Ljava/lang/String;)Lorg/apache/flume/Channel;
+#toString()Ljava/lang/String;
+#getChannelRegistry()Ljava/util/Map;
+#setChannelRegistry(Ljava/util/Map;)V
+#createFanout(Ljava/lang/String;Ljava/util/Map;)Lorg/apache/flume/Channel;
@1.2.0
+#unregister(Lorg/apache/flume/Channel;)Z
+#create(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flume/Channel;
+#getRegistryClone()Ljava/util/Map;
-#register(Ljava/lang/String;Ljava/lang/Class;)Z
-#unregister(Ljava/lang/String;)Z
-#getChannelNames()Ljava/util/Set;
-#create(Ljava/lang/String;)Lorg/apache/flume/Channel;
-#toString()Ljava/lang/String;
-#getChannelRegistry()Ljava/util/Map;
-#setChannelRegistry(Ljava/util/Map;)V
-#createFanout(Ljava/lang/String;Ljava/util/Map;)Lorg/apache/flume/Channel;
@1.4.0
+#getClass(Ljava/lang/String;)Ljava/lang/Class;
-#unregister(Lorg/apache/flume/Channel;)Z
-#getRegistryClone()Ljava/util/Map;

+###org/apache/flume/formatter/output/RollTimePathManager$Builder
@1.7.0
+#<init>()V
+#build(Lorg/apache/flume/Context;)Lorg/apache/flume/formatter/output/PathManager;

+###org/apache/flume/SinkFactory
@1.0.0-incubating
+#register(Ljava/lang/String;Ljava/lang/Class;)Z
+#unregister(Ljava/lang/String;)Z
+#create(Ljava/lang/String;)Lorg/apache/flume/Sink;
+#getSinkNames()Ljava/util/Set;
@1.2.0
+#create(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flume/Sink;
+#unregister(Lorg/apache/flume/Sink;)Z
-#register(Ljava/lang/String;Ljava/lang/Class;)Z
-#unregister(Ljava/lang/String;)Z
-#create(Ljava/lang/String;)Lorg/apache/flume/Sink;
-#getSinkNames()Ljava/util/Set;
@1.4.0
+#getClass(Ljava/lang/String;)Ljava/lang/Class;
-#unregister(Lorg/apache/flume/Sink;)Z

+###org/apache/flume/conf/BatchSizeSupported
@1.9.0
+#getBatchSize()J

+###org/apache/flume/conf/Configurable
@1.0.0-incubating
+#configure(Lorg/apache/flume/Context;)V

+###org/apache/flume/client/avro/ReliableSpoolingFileEventReader$Builder
@1.4.0
+#<init>()V
+#spoolDirectory(Ljava/io/File;)Lorg/apache/flume/client/avro/ReliableSpoolingFileEventReader$Builder;
+#completedSuffix(Ljava/lang/String;)Lorg/apache/flume/client/avro/ReliableSpoolingFileEventReader$Builder;
+#ignorePattern(Ljava/lang/String;)Lorg/apache/flume/client/avro/ReliableSpoolingFileEventReader$Builder;
+#trackerDirPath(Ljava/lang/String;)Lorg/apache/flume/client/avro/ReliableSpoolingFileEventReader$Builder;
+#annotateFileName(Ljava/lang/Boolean;)Lorg/apache/flume/client/avro/ReliableSpoolingFileEventReader$Builder;
+#fileNameHeader(Ljava/lang/String;)Lorg/apache/flume/client/avro/ReliableSpoolingFileEventReader$Builder;
+#deserializerType(Ljava/lang/String;)Lorg/apache/flume/client/avro/ReliableSpoolingFileEventReader$Builder;
+#deserializerContext(Lorg/apache/flume/Context;)Lorg/apache/flume/client/avro/ReliableSpoolingFileEventReader$Builder;
+#deletePolicy(Ljava/lang/String;)Lorg/apache/flume/client/avro/ReliableSpoolingFileEventReader$Builder;
+#inputCharset(Ljava/lang/String;)Lorg/apache/flume/client/avro/ReliableSpoolingFileEventReader$Builder;
+#build()Lorg/apache/flume/client/avro/ReliableSpoolingFileEventReader;
@1.5.0
+#annotateBaseName(Ljava/lang/Boolean;)Lorg/apache/flume/client/avro/ReliableSpoolingFileEventReader$Builder;
+#baseNameHeader(Ljava/lang/String;)Lorg/apache/flume/client/avro/ReliableSpoolingFileEventReader$Builder;
+#decodeErrorPolicy(Lorg/apache/flume/serialization/DecodeErrorPolicy;)Lorg/apache/flume/client/avro/ReliableSpoolingFileEventReader$Builder;
+#consumeOrder(Lorg/apache/flume/source/SpoolDirectorySourceConfigurationConstants$ConsumeOrder;)Lorg/apache/flume/client/avro/ReliableSpoolingFileEventReader$Builder;
@1.7.0
+#includePattern(Ljava/lang/String;)Lorg/apache/flume/client/avro/ReliableSpoolingFileEventReader$Builder;
+#recursiveDirectorySearch(Z)Lorg/apache/flume/client/avro/ReliableSpoolingFileEventReader$Builder;
@1.9.0
+#trackingPolicy(Ljava/lang/String;)Lorg/apache/flume/client/avro/ReliableSpoolingFileEventReader$Builder;
+#sourceCounter(Lorg/apache/flume/instrumentation/SourceCounter;)Lorg/apache/flume/client/avro/ReliableSpoolingFileEventReader$Builder;

+###org/apache/flume/interceptor/RegexExtractorInterceptorPassThroughSerializer
@1.3.0
+#<init>()V
+#serialize(Ljava/lang/String;)Ljava/lang/String;
+#configure(Lorg/apache/flume/Context;)V
+#configure(Lorg/apache/flume/conf/ComponentConfiguration;)V

+###org/apache/flume/interceptor/Interceptor
@1.2.0
+#initialize()V
+#intercept(Lorg/apache/flume/Event;)Lorg/apache/flume/Event;
+#intercept(Ljava/util/List;)Ljava/util/List;
+#close()V

+###org/apache/flume/PollableSource
@1.0.0-incubating
+#process()Lorg/apache/flume/PollableSource$Status;
@1.7.0
+#getBackOffSleepIncrement()J
+#getMaxBackOffSleepInterval()J

+###org/apache/flume/tools/HTTPServerConstraintUtil
@1.5.0
+#enforceConstraints(Lorg/mortbay/jetty/servlet/Context;)V
@1.9.0
+#enforceConstraints()Lorg/eclipse/jetty/security/ConstraintSecurityHandler;
-#enforceConstraints(Lorg/mortbay/jetty/servlet/Context;)V

+###org/apache/flume/serialization/EventDeserializerType
@1.4.0
+#values()[Lorg/apache/flume/serialization/EventDeserializerType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flume/serialization/EventDeserializerType;
+#getBuilderClass()Ljava/lang/Class;

+###org/apache/flume/serialization/EventDeserializer$Builder
@1.4.0
+#build(Lorg/apache/flume/Context;Lorg/apache/flume/serialization/ResettableInputStream;)Lorg/apache/flume/serialization/EventDeserializer;

+###org/apache/flume/serialization/LineDeserializer
@1.4.0
+#readEvent()Lorg/apache/flume/Event;
+#readEvents(I)Ljava/util/List;
+#mark()V
+#reset()V
+#close()V

+###org/apache/flume/source/SyslogParser
@1.3.0
+#<init>()V
+#parseMessage(Ljava/lang/String;Ljava/nio/charset/Charset;)Lorg/apache/flume/Event;
@1.5.0
+#parseMessage(Ljava/lang/String;Ljava/nio/charset/Charset;Z)Lorg/apache/flume/Event;
-#parseMessage(Ljava/lang/String;Ljava/nio/charset/Charset;)Lorg/apache/flume/Event;
@1.6.0
+#parseMessage(Ljava/lang/String;Ljava/nio/charset/Charset;Ljava/util/Set;)Lorg/apache/flume/Event;
-#parseMessage(Ljava/lang/String;Ljava/nio/charset/Charset;Z)Lorg/apache/flume/Event;

+###org/apache/flume/sink/AbstractRpcSink
@1.4.0
+#<init>()V
+#configure(Lorg/apache/flume/Context;)V
+#start()V
+#stop()V
+#toString()Ljava/lang/String;
+#process()Lorg/apache/flume/Sink$Status;
@1.9.0
+#getBatchSize()J

+###org/apache/flume/instrumentation/kafka/KafkaChannelCounter
@1.6.0
+#<init>(Ljava/lang/String;)V
+#addToKafkaEventGetTimer(J)J
+#addToKafkaEventSendTimer(J)J
+#addToKafkaCommitTimer(J)J
+#addToRollbackCounter(J)J
+#getKafkaEventGetTimer()J
+#getKafkaEventSendTimer()J
+#getKafkaCommitTimer()J
+#getRollbackCount()J

+###org/apache/flume/channel/MemoryChannel
@1.0.0-incubating
+#<init>()V
+#configure(Lorg/apache/flume/Context;)V
+#put(Lorg/apache/flume/Event;)V
+#take()Lorg/apache/flume/Event;
+#getTransaction()Lorg/apache/flume/Transaction;
+#shutdown()V
+#getName()Ljava/lang/String;
@1.2.0
+#start()V
+#stop()V
-#put(Lorg/apache/flume/Event;)V
-#take()Lorg/apache/flume/Event;
-#getTransaction()Lorg/apache/flume/Transaction;
-#shutdown()V
-#getName()Ljava/lang/String;
@1.9.0
+#getTransactionCapacity()J

+###org/apache/flume/channel/BasicChannelSemantics
@1.2.0
+#<init>()V
+#put(Lorg/apache/flume/Event;)V
+#take()Lorg/apache/flume/Event;
+#getTransaction()Lorg/apache/flume/Transaction;

+###org/apache/flume/interceptor/TimestampInterceptor$Builder
@1.2.0
+#<init>()V
+#build()Lorg/apache/flume/interceptor/Interceptor;
+#configure(Lorg/apache/flume/Context;)V

+###org/apache/flume/interceptor/RegexExtractorInterceptor$Builder
@1.3.0
+#<init>()V
+#configure(Lorg/apache/flume/Context;)V
+#build()Lorg/apache/flume/interceptor/Interceptor;

+###org/apache/flume/tools/VersionInfo
@1.2.0
+#<init>()V
+#getVersion()Ljava/lang/String;
+#getRevision()Ljava/lang/String;
+#getBranch()Ljava/lang/String;
+#getDate()Ljava/lang/String;
+#getUser()Ljava/lang/String;
+#getUrl()Ljava/lang/String;
+#getSrcChecksum()Ljava/lang/String;
+#getBuildVersion()Ljava/lang/String;
+#main([Ljava/lang/String;)V

+###org/apache/flume/serialization/AvroEventDeserializer$Builder
@1.4.0
+#<init>()V
+#build(Lorg/apache/flume/Context;Lorg/apache/flume/serialization/ResettableInputStream;)Lorg/apache/flume/serialization/EventDeserializer;

+###org/apache/flume/source/ExecSourceConfigurationConstants
@1.2.0
+#<init>()V

+###org/apache/flume/source/BasicSourceSemantics
@1.4.0
+#<init>()V
+#configure(Lorg/apache/flume/Context;)V
+#start()V
+#stop()V
+#setChannelProcessor(Lorg/apache/flume/channel/ChannelProcessor;)V
+#getChannelProcessor()Lorg/apache/flume/channel/ChannelProcessor;
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getLifecycleState()Lorg/apache/flume/lifecycle/LifecycleState;
+#toString()Ljava/lang/String;

+###org/apache/flume/lifecycle/LifecycleSupervisor$Status
@1.0.0-incubating
+#<init>()V
+#toString()Ljava/lang/String;

+###org/apache/flume/sink/LoadBalancingSinkProcessor$SinkSelector
@1.2.0
+#setSinks(Ljava/util/List;)V
+#createSinkIterator()Ljava/util/Iterator;
@1.3.0
+#informSinkFailed(Lorg/apache/flume/Sink;)V

+###org/apache/flume/instrumentation/MonitoredCounterGroup$Type
@1.2.0
+#values()[Lorg/apache/flume/instrumentation/MonitoredCounterGroup$Type;
+#valueOf(Ljava/lang/String;)Lorg/apache/flume/instrumentation/MonitoredCounterGroup$Type;

+###org/apache/flume/instrumentation/kafka/KafkaChannelCounterMBean
@1.6.0
+#getKafkaEventGetTimer()J
+#getKafkaEventSendTimer()J
+#getKafkaCommitTimer()J
+#getRollbackCount()J
+#getChannelSize()J
+#getEventPutAttemptCount()J
+#getEventTakeAttemptCount()J
+#getEventPutSuccessCount()J
+#getEventTakeSuccessCount()J
+#getStartTime()J
+#getStopTime()J
+#getChannelCapacity()J
+#getType()Ljava/lang/String;
+#getChannelFillPercentage()D

+###org/apache/flume/channel/BasicTransactionSemantics$State
@1.2.0
+#values()[Lorg/apache/flume/channel/BasicTransactionSemantics$State;
+#valueOf(Ljava/lang/String;)Lorg/apache/flume/channel/BasicTransactionSemantics$State;

+###org/apache/flume/annotations/InterfaceStability$Stable
@1.3.0

+###org/apache/flume/conf/TransactionCapacitySupported
@1.9.0
+#getTransactionCapacity()J

+###org/apache/flume/interceptor/HostInterceptor$Constants
@1.2.0
+#<init>()V

+###org/apache/flume/interceptor/Interceptor$Builder
@1.2.0
+#build()Lorg/apache/flume/interceptor/Interceptor;

+###org/apache/flume/tools/TimestampRoundDownUtil
@1.2.0
+#<init>()V
+#roundDownTimeStampSeconds(JI)J
+#roundDownTimeStampMinutes(JI)J
+#roundDownTimeStampHours(JI)J
@1.7.0
+#roundDownTimeStampSeconds(JILjava/util/TimeZone;)J
+#roundDownTimeStampMinutes(JILjava/util/TimeZone;)J
+#roundDownTimeStampHours(JILjava/util/TimeZone;)J

+###org/apache/flume/serialization/EventDeserializerFactory
@1.4.0
+#<init>()V
+#getInstance(Ljava/lang/String;Lorg/apache/flume/Context;Lorg/apache/flume/serialization/ResettableInputStream;)Lorg/apache/flume/serialization/EventDeserializer;

+###org/apache/flume/serialization/AvroEventDeserializer
@1.4.0
+#readEvent()Lorg/apache/flume/Event;
+#readEvents(I)Ljava/util/List;
+#mark()V
+#reset()V
+#close()V

+###org/apache/flume/source/shaded/guava/Uninterruptibles
@1.9.0
+#awaitUninterruptibly(Ljava/util/concurrent/CountDownLatch;)V
+#awaitUninterruptibly(Ljava/util/concurrent/CountDownLatch;JLjava/util/concurrent/TimeUnit;)Z
+#joinUninterruptibly(Ljava/lang/Thread;)V
+#joinUninterruptibly(Ljava/lang/Thread;JLjava/util/concurrent/TimeUnit;)V
+#getUninterruptibly(Ljava/util/concurrent/Future;)Ljava/lang/Object;
+#getUninterruptibly(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#takeUninterruptibly(Ljava/util/concurrent/BlockingQueue;)Ljava/lang/Object;
+#putUninterruptibly(Ljava/util/concurrent/BlockingQueue;Ljava/lang/Object;)V
+#sleepUninterruptibly(JLjava/util/concurrent/TimeUnit;)V
+#tryAcquireUninterruptibly(Ljava/util/concurrent/Semaphore;JLjava/util/concurrent/TimeUnit;)Z
+#tryAcquireUninterruptibly(Ljava/util/concurrent/Semaphore;IJLjava/util/concurrent/TimeUnit;)Z

+###org/apache/flume/source/SyslogSourceConfigurationConstants
@1.2.0

+###org/apache/flume/source/AbstractEventDrivenSource
@1.4.0
+#<init>()V

+###org/apache/flume/source/SpoolDirectorySource
@1.3.0
+#<init>()V
+#start()V
+#stop()V
+#configure(Lorg/apache/flume/Context;)V
@1.5.0
+#toString()Ljava/lang/String;
@1.9.0
+#getBatchSize()J

+###org/apache/flume/lifecycle/LifecycleException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/flume/sink/AbstractSinkSelector
@1.2.0
+#<init>()V
+#configure(Lorg/apache/flume/Context;)V
+#start()V
+#stop()V
+#getLifecycleState()Lorg/apache/flume/lifecycle/LifecycleState;
+#setSinks(Ljava/util/List;)V
@1.3.0
+#informSinkFailed(Lorg/apache/flume/Sink;)V

+###org/apache/flume/instrumentation/SourceCounter
@1.2.0
+#<init>(Ljava/lang/String;)V
+#getEventReceivedCount()J
+#incrementEventReceivedCount()J
+#addToEventReceivedCount(J)J
+#getEventAcceptedCount()J
+#incrementEventAcceptedCount()J
+#addToEventAcceptedCount(J)J
+#getAppendReceivedCount()J
+#incrementAppendReceivedCount()J
+#getAppendAcceptedCount()J
+#incrementAppendAcceptedCount()J
+#getAppendBatchReceivedCount()J
+#incrementAppendBatchReceivedCount()J
+#getAppendBatchAcceptedCount()J
+#incrementAppendBatchAcceptedCount()J
@1.3.0
+#getOpenConnectionCount()J
+#setOpenConnectionCount(J)V
@1.6.0
+#<init>(Ljava/lang/String;[Ljava/lang/String;)V
@1.9.0
+#incrementEventReadFail()J
+#getEventReadFail()J
+#incrementChannelWriteFail()J
+#getChannelWriteFail()J
+#incrementGenericProcessingFail()J
+#getGenericProcessingFail()J
+#incrementEventReadOrChannelFail(Ljava/lang/Throwable;)J

+###org/apache/flume/instrumentation/kafka/KafkaSinkCounterMBean
@1.6.0
+#getKafkaEventSendTimer()J
+#getRollbackCount()J
+#getConnectionCreatedCount()J
+#getConnectionClosedCount()J
+#getConnectionFailedCount()J
+#getBatchEmptyCount()J
+#getBatchUnderflowCount()J
+#getBatchCompleteCount()J
+#getEventDrainAttemptCount()J
+#getEventDrainSuccessCount()J
+#getStartTime()J
+#getStopTime()J
+#getType()Ljava/lang/String;

+###org/apache/flume/channel/LoadBalancingChannelSelector
@1.10.0
+#<init>()V
+#getRequiredChannels(Lorg/apache/flume/Event;)Ljava/util/List;
+#getOptionalChannels(Lorg/apache/flume/Event;)Ljava/util/List;
+#configure(Lorg/apache/flume/Context;)V

+###org/apache/flume/annotations/InterfaceAudience$Private
@1.3.0

+###org/apache/flume/formatter/output/PathManagerFactory
@1.7.0
+#<init>()V
+#getInstance(Ljava/lang/String;Lorg/apache/flume/Context;)Lorg/apache/flume/formatter/output/PathManager;

+###org/apache/flume/interceptor/TimestampInterceptor
@1.2.0
+#initialize()V
+#intercept(Lorg/apache/flume/Event;)Lorg/apache/flume/Event;
+#intercept(Ljava/util/List;)Ljava/util/List;
+#close()V

+###org/apache/flume/interceptor/RegexExtractorInterceptorSerializer
@1.3.0
+#serialize(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/flume/tools/DirectMemoryUtils
@1.2.0
+#<init>()V
+#allocate(I)Ljava/nio/ByteBuffer;
+#clean(Ljava/nio/ByteBuffer;)V
+#getDirectMemorySize()J

+###org/apache/flume/serialization/AbstractAvroEventSerializer
@1.2.0
+#<init>()V
+#configure(Lorg/apache/flume/Context;)V
+#afterCreate()V
+#afterReopen()V
+#write(Lorg/apache/flume/Event;)V
+#flush()V
+#beforeClose()V
+#supportsReopen()Z

+###org/apache/flume/source/http/HTTPSource
@1.3.0
+#<init>()V
+#configure(Lorg/apache/flume/Context;)V
+#start()V
+#stop()V

+###org/apache/flume/source/StressSource
@1.2.0
+#<init>()V
+#configure(Lorg/apache/flume/Context;)V
+#process()Lorg/apache/flume/PollableSource$Status;
+#start()V
+#stop()V
@1.7.0
-#configure(Lorg/apache/flume/Context;)V
-#process()Lorg/apache/flume/PollableSource$Status;
-#start()V
-#stop()V
@1.9.0
+#getBatchSize()J

+###org/apache/flume/lifecycle/LifecycleSupervisor$SupervisorPolicy$AlwaysRestartPolicy
@1.0.0-incubating
+#<init>()V

+###org/apache/flume/sink/DefaultSinkFactory
@1.0.0-incubating
+#<init>()V
+#register(Ljava/lang/String;Ljava/lang/Class;)Z
+#unregister(Ljava/lang/String;)Z
+#getSinkNames()Ljava/util/Set;
+#create(Ljava/lang/String;)Lorg/apache/flume/Sink;
+#toString()Ljava/lang/String;
+#getSinkRegistry()Ljava/util/Map;
+#setSinkRegistry(Ljava/util/Map;)V
@1.2.0
+#unregister(Lorg/apache/flume/Sink;)Z
+#create(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/flume/Sink;
+#getRegistryClone()Ljava/util/Map;
-#register(Ljava/lang/String;Ljava/lang/Class;)Z
-#unregister(Ljava/lang/String;)Z
-#getSinkNames()Ljava/util/Set;
-#create(Ljava/lang/String;)Lorg/apache/flume/Sink;
-#toString()Ljava/lang/String;
-#getSinkRegistry()Ljava/util/Map;
-#setSinkRegistry(Ljava/util/Map;)V
@1.4.0
+#getClass(Ljava/lang/String;)Ljava/lang/Class;
-#unregister(Lorg/apache/flume/Sink;)Z
-#getRegistryClone()Ljava/util/Map;

+###org/apache/flume/sink/SinkGroup
@1.2.0
+#<init>(Ljava/util/List;)V
+#configure(Lorg/apache/flume/Context;)V
+#getProcessor()Lorg/apache/flume/SinkProcessor;
+#configure(Lorg/apache/flume/conf/ComponentConfiguration;)V

+###org/apache/flume/instrumentation/util/JMXPollUtil
@1.3.0
+#<init>()V
+#getAllMBeans()Ljava/util/Map;

+###org/apache/flume/instrumentation/MonitoredCounterGroup
@1.2.0
+#start()V
+#stop()V
+#getStartTime()J
+#getStopTime()J
+#toString()Ljava/lang/String;
@1.3.0
+#getType()Ljava/lang/String;

+###org/apache/flume/formatter/output/DefaultPathManager$Builder
@1.7.0
+#<init>()V
+#build(Lorg/apache/flume/Context;)Lorg/apache/flume/formatter/output/PathManager;

+###org/apache/flume/client/avro/AvroCLIClient
@1.0.0-incubating
+#<init>()V
+#main([Ljava/lang/String;)V

+###org/apache/flume/interceptor/SearchAndReplaceInterceptor
@1.6.0
+#initialize()V
+#close()V
+#intercept(Lorg/apache/flume/Event;)Lorg/apache/flume/Event;
+#intercept(Ljava/util/List;)Ljava/util/List;

+###org/apache/flume/ChannelFullException
@1.5.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/flume/serialization/HeaderAndBodyTextEventSerializer$Builder
@1.4.0
+#<init>()V
+#build(Lorg/apache/flume/Context;Ljava/io/OutputStream;)Lorg/apache/flume/serialization/EventSerializer;

+###org/apache/flume/serialization/PositionTracker
@1.4.0
+#storePosition(J)V
+#getPosition()J
+#getTarget()Ljava/lang/String;
+#close()V

+###org/apache/flume/serialization/LineDeserializer$Builder
@1.4.0
+#<init>()V
+#build(Lorg/apache/flume/Context;Lorg/apache/flume/serialization/ResettableInputStream;)Lorg/apache/flume/serialization/EventDeserializer;

+###org/apache/flume/serialization/DurablePositionTracker
@1.4.0
+#getInstance(Ljava/io/File;Ljava/lang/String;)Lorg/apache/flume/serialization/DurablePositionTracker;
+#storePosition(J)V
+#getPosition()J
+#getTarget()Ljava/lang/String;
+#close()V

+###org/apache/flume/source/SpoolDirectorySourceConfigurationConstants$ConsumeOrder
@1.5.0
+#values()[Lorg/apache/flume/source/SpoolDirectorySourceConfigurationConstants$ConsumeOrder;
+#valueOf(Ljava/lang/String;)Lorg/apache/flume/source/SpoolDirectorySourceConfigurationConstants$ConsumeOrder;

+###org/apache/flume/source/SyslogTcpSource
@1.2.0
+#<init>()V
+#start()V
+#stop()V
+#configure(Lorg/apache/flume/Context;)V
@1.5.0
+#getSourcePort()I
@1.7.0
-#getSourcePort()I

+###org/apache/flume/sink/RollingFileSink
@1.0.0-incubating
+#<init>()V
+#configure(Lorg/apache/flume/Context;)V
+#start()V
+#process()Lorg/apache/flume/PollableSink$Status;
+#stop()V
+#getDirectory()Ljava/io/File;
+#setDirectory(Ljava/io/File;)V
+#getRollInterval()J
+#setRollInterval(J)V
+#getFormatter()Lorg/apache/flume/formatter/output/EventFormatter;
+#setFormatter(Lorg/apache/flume/formatter/output/EventFormatter;)V
@1.2.0
+#process()Lorg/apache/flume/Sink$Status;
-#process()Lorg/apache/flume/PollableSink$Status;
-#getFormatter()Lorg/apache/flume/formatter/output/EventFormatter;
-#setFormatter(Lorg/apache/flume/formatter/output/EventFormatter;)V
@1.9.0
+#getBatchSize()J

+###org/apache/flume/Sink$Status
@1.2.0
+#values()[Lorg/apache/flume/Sink$Status;
+#valueOf(Ljava/lang/String;)Lorg/apache/flume/Sink$Status;

+###org/apache/flume/annotations/InterfaceAudience
@1.3.0

+###org/apache/flume/formatter/output/PathManager
@1.0.0-incubating
+#<init>()V
+#nextFile()Ljava/io/File;
+#getCurrentFile()Ljava/io/File;
+#rotate()V
+#getBaseDirectory()Ljava/io/File;
+#setBaseDirectory(Ljava/io/File;)V
+#getSeriesTimestamp()J
+#getFileIndex()Ljava/util/concurrent/atomic/AtomicInteger;
@1.7.0
-#<init>()V
-#getSeriesTimestamp()J
-#getFileIndex()Ljava/util/concurrent/atomic/AtomicInteger;

+###org/apache/flume/CounterGroup
@1.0.0-incubating
+#<init>()V
+#get(Ljava/lang/String;)Ljava/lang/Long;
+#incrementAndGet(Ljava/lang/String;)Ljava/lang/Long;
+#addAndGet(Ljava/lang/String;Ljava/lang/Long;)Ljava/lang/Long;
+#add(Lorg/apache/flume/CounterGroup;)V
+#set(Ljava/lang/String;Ljava/lang/Long;)V
+#getCounter(Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLong;
+#toString()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getCounters()Ljava/util/HashMap;
+#setCounters(Ljava/util/HashMap;)V

+###org/apache/flume/interceptor/InterceptorChain
@1.2.0
+#<init>()V
+#setInterceptors(Ljava/util/List;)V
+#intercept(Lorg/apache/flume/Event;)Lorg/apache/flume/Event;
+#intercept(Ljava/util/List;)Ljava/util/List;
+#initialize()V
+#close()V

+###org/apache/flume/SystemClock
@1.3.0
+#<init>()V
+#currentTimeMillis()J

+###org/apache/flume/serialization/ResettableInputStream
@1.4.0
+#<init>()V
+#read()I
+#read([BII)I
+#readChar()I
+#mark()V
+#reset()V
+#seek(J)V
+#tell()J
+#close()V

+###org/apache/flume/serialization/LengthMeasurable
@1.4.0
+#length()J

+###org/apache/flume/source/NetcatUdpSource$NetcatHandler
@1.8.0
+#<init>(Lorg/apache/flume/source/NetcatUdpSource;)V
+#messageReceived(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
@1.10.0
-#messageReceived(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V

+###org/apache/flume/source/http/BLOBHandler
@1.7.0
+#<init>()V
+#getEvents(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/List;
+#configure(Lorg/apache/flume/Context;)V

+###org/apache/flume/source/http/HTTPSourceConfigurationConstants
@1.3.0
+#<init>()V

+###org/apache/flume/source/MultiportSyslogTCPSource
@1.3.0
+#<init>()V
+#configure(Lorg/apache/flume/Context;)V
+#start()V
+#stop()V
+#toString()Ljava/lang/String;
@1.9.0
+#getBatchSize()J

+###org/apache/flume/lifecycle/LifecycleState
@1.0.0-incubating
+#values()[Lorg/apache/flume/lifecycle/LifecycleState;
+#valueOf(Ljava/lang/String;)Lorg/apache/flume/lifecycle/LifecycleState;

+###org/apache/flume/instrumentation/SourceCounterMBean
@1.2.0
+#getEventReceivedCount()J
+#getEventAcceptedCount()J
+#getAppendReceivedCount()J
+#getAppendAcceptedCount()J
+#getAppendBatchReceivedCount()J
+#getAppendBatchAcceptedCount()J
+#getStartTime()J
+#getStopTime()J
@1.3.0
+#getType()Ljava/lang/String;
+#getOpenConnectionCount()J
@1.9.0
+#getEventReadFail()J
+#getChannelWriteFail()J
+#getGenericProcessingFail()J

+###org/apache/flume/instrumentation/kafka/KafkaSourceCounter
@1.6.0
+#<init>(Ljava/lang/String;)V
+#addToKafkaEventGetTimer(J)J
+#addToKafkaCommitTimer(J)J
+#incrementKafkaEmptyCount()J
+#getKafkaCommitTimer()J
+#getKafkaEventGetTimer()J
+#getKafkaEmptyCount()J

+###org/apache/flume/instrumentation/kafka/KafkaSourceCounterMBean
@1.6.0
+#getKafkaEventGetTimer()J
+#getKafkaCommitTimer()J
+#getKafkaEmptyCount()J
+#getEventReceivedCount()J
+#getEventAcceptedCount()J
+#getAppendReceivedCount()J
+#getAppendAcceptedCount()J
+#getAppendBatchReceivedCount()J
+#getAppendBatchAcceptedCount()J
+#getStartTime()J
+#getStopTime()J
+#getType()Ljava/lang/String;
+#getOpenConnectionCount()J

+###org/apache/flume/annotations/InterfaceAudience$Public
@1.3.0

+###org/apache/flume/formatter/output/PathManagerType
@1.7.0
+#values()[Lorg/apache/flume/formatter/output/PathManagerType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flume/formatter/output/PathManagerType;
+#getBuilderClass()Ljava/lang/Class;

+###org/apache/flume/conf/ConfigurableComponent
@1.2.0
+#configure(Lorg/apache/flume/conf/ComponentConfiguration;)V

+###org/apache/flume/interceptor/RegexFilteringInterceptor
@1.3.0
+#initialize()V
+#intercept(Lorg/apache/flume/Event;)Lorg/apache/flume/Event;
+#intercept(Ljava/util/List;)Ljava/util/List;
+#close()V

+###org/apache/flume/interceptor/RegexExtractorInterceptor
@1.3.0
+#initialize()V
+#close()V
+#intercept(Lorg/apache/flume/Event;)Lorg/apache/flume/Event;
+#intercept(Ljava/util/List;)Ljava/util/List;

+###org/apache/flume/EventDrivenSource
@1.0.0-incubating

+###org/apache/flume/serialization/TransferStateFileMeta
@1.4.0
+#<init>()V
+#<init>(Ljava/lang/Long;)V
+#getSchema()Lorg/apache/avro/Schema;
+#get(I)Ljava/lang/Object;
+#put(ILjava/lang/Object;)V
+#getOffset()Ljava/lang/Long;
+#setOffset(Ljava/lang/Long;)V
+#newBuilder()Lorg/apache/flume/serialization/TransferStateFileMeta$Builder;
+#newBuilder(Lorg/apache/flume/serialization/TransferStateFileMeta$Builder;)Lorg/apache/flume/serialization/TransferStateFileMeta$Builder;
+#newBuilder(Lorg/apache/flume/serialization/TransferStateFileMeta;)Lorg/apache/flume/serialization/TransferStateFileMeta$Builder;
@1.6.0
+#getClassSchema()Lorg/apache/avro/Schema;
@1.10.0
+#getEncoder()Lorg/apache/avro/message/BinaryMessageEncoder;
+#getDecoder()Lorg/apache/avro/message/BinaryMessageDecoder;
+#createDecoder(Lorg/apache/avro/message/SchemaStore;)Lorg/apache/avro/message/BinaryMessageDecoder;
+#toByteBuffer()Ljava/nio/ByteBuffer;
+#fromByteBuffer(Ljava/nio/ByteBuffer;)Lorg/apache/flume/serialization/TransferStateFileMeta;
+#getSpecificData()Lorg/apache/avro/specific/SpecificData;
+#getOffset()J
+#setOffset(J)V
+#writeExternal(Ljava/io/ObjectOutput;)V
+#readExternal(Ljava/io/ObjectInput;)V
+#customEncode(Lorg/apache/avro/io/Encoder;)V
+#customDecode(Lorg/apache/avro/io/ResolvingDecoder;)V
-#getOffset()Ljava/lang/Long;
-#setOffset(Ljava/lang/Long;)V

+###org/apache/flume/lifecycle/LifecycleController
@1.0.0-incubating
+#<init>()V
+#waitForState(Lorg/apache/flume/lifecycle/LifecycleAware;Lorg/apache/flume/lifecycle/LifecycleState;)Z
+#waitForState(Lorg/apache/flume/lifecycle/LifecycleAware;Lorg/apache/flume/lifecycle/LifecycleState;J)Z
+#waitForOneOf(Lorg/apache/flume/lifecycle/LifecycleAware;[Lorg/apache/flume/lifecycle/LifecycleState;)Z
+#waitForOneOf(Lorg/apache/flume/lifecycle/LifecycleAware;[Lorg/apache/flume/lifecycle/LifecycleState;J)Z
+#stopAll(Ljava/util/List;)V

+###org/apache/flume/lifecycle/LifecycleSupervisor$MonitorRunnable
@1.0.0-incubating
+#<init>()V
+#run()V

+###org/apache/flume/sink/DefaultSinkProcessor
@1.2.0
+#<init>()V
+#start()V
+#stop()V
+#getLifecycleState()Lorg/apache/flume/lifecycle/LifecycleState;
+#configure(Lorg/apache/flume/Context;)V
+#process()Lorg/apache/flume/Sink$Status;
+#setSinks(Ljava/util/List;)V
+#configure(Lorg/apache/flume/conf/ComponentConfiguration;)V
@1.10.0
-#start()V
-#stop()V
-#getLifecycleState()Lorg/apache/flume/lifecycle/LifecycleState;
-#setSinks(Ljava/util/List;)V

+###org/apache/flume/instrumentation/ChannelCounter
@1.2.0
+#<init>(Ljava/lang/String;)V
+#getChannelSize()J
+#setChannelSize(J)V
+#getEventPutAttemptCount()J
+#incrementEventPutAttemptCount()J
+#getEventTakeAttemptCount()J
+#incrementEventTakeAttemptCount()J
+#getEventPutSuccessCount()J
+#addToEventPutSuccessCount(J)J
+#getEventTakeSuccessCount()J
+#addToEventTakeSuccessCount(J)J
@1.3.0
+#setChannelCapacity(J)V
+#getChannelCapacity()J
+#getChannelFillPercentage()D
@1.6.0
+#<init>(Ljava/lang/String;[Ljava/lang/String;)V

+###org/apache/flume/channel/BasicTransactionSemantics
@1.2.0
+#begin()V
+#commit()V
+#rollback()V
+#close()V
+#toString()Ljava/lang/String;

+###org/apache/flume/annotations/InterfaceStability$Evolving
@1.3.0

+###org/apache/flume/formatter/output/EventFormatter
@1.0.0-incubating
+#format(Lorg/apache/flume/Event;)[B

+###org/apache/flume/conf/Configurables
@1.0.0-incubating
+#<init>()V
+#configure(Ljava/lang/Object;Lorg/apache/flume/Context;)Z
+#ensureRequiredNonNull(Lorg/apache/flume/Context;[Ljava/lang/String;)V
+#ensureOptionalNonNull(Lorg/apache/flume/Context;[Ljava/lang/String;)V
@1.2.0
+#configure(Ljava/lang/Object;Lorg/apache/flume/conf/ComponentConfiguration;)Z

+###org/apache/flume/interceptor/RegexExtractorInterceptorMillisSerializer
@1.3.0
+#<init>()V
+#configure(Lorg/apache/flume/Context;)V
+#serialize(Ljava/lang/String;)Ljava/lang/String;
+#configure(Lorg/apache/flume/conf/ComponentConfiguration;)V

+###org/apache/flume/interceptor/StaticInterceptor$Builder
@1.3.0
+#<init>()V
+#configure(Lorg/apache/flume/Context;)V
+#build()Lorg/apache/flume/interceptor/Interceptor;

+###org/apache/flume/interceptor/RegexFilteringInterceptor$Builder
@1.3.0
+#<init>()V
+#configure(Lorg/apache/flume/Context;)V
+#build()Lorg/apache/flume/interceptor/Interceptor;

+###org/apache/flume/SinkProcessor
@1.2.0
+#process()Lorg/apache/flume/Sink$Status;
+#setSinks(Ljava/util/List;)V

+###org/apache/flume/serialization/EventSerDe
@1.4.0

+###org/apache/flume/serialization/FlumeEventAvroEventSerializer
@1.2.0

+###org/apache/flume/source/ThriftSource
@1.4.0
+#<init>()V
+#configure(Lorg/apache/flume/Context;)V
+#start()V
+#stop()V

+###org/apache/flume/source/NetcatSourceConfigurationConstants
@1.2.0
+#<init>()V

+###org/apache/flume/source/NetcatUdpSource
@1.8.0
+#<init>()V
+#start()V
+#stop()V
+#configure(Lorg/apache/flume/Context;)V
+#getSourcePort()I

+###org/apache/flume/source/SyslogUDPSource$SyslogUdpHandler
@1.10.0

+###org/apache/flume/SinkRunner$PollingRunner
@1.2.0
+#<init>()V
+#run()V

+###org/apache/flume/instrumentation/http/HTTPMetricsServer
@1.3.0
+#<init>()V
+#start()V
+#stop()V
+#configure(Lorg/apache/flume/Context;)V

+###org/apache/flume/instrumentation/kafka/KafkaSinkCounter
@1.6.0
+#<init>(Ljava/lang/String;)V
+#addToKafkaEventSendTimer(J)J
+#incrementRollbackCount()J
+#getKafkaEventSendTimer()J
+#getRollbackCount()J

+###org/apache/flume/channel/PseudoTxnMemoryChannel
@1.0.0-incubating
+#<init>()V
+#configure(Lorg/apache/flume/Context;)V
+#put(Lorg/apache/flume/Event;)V
+#take()Lorg/apache/flume/Event;
+#getTransaction()Lorg/apache/flume/Transaction;
+#shutdown()V
+#getName()Ljava/lang/String;
@1.2.0
-#shutdown()V
-#getName()Ljava/lang/String;
@1.3.0
+#start()V
+#stop()V

+###org/apache/flume/channel/ChannelUtils
@1.2.0
+#put(Lorg/apache/flume/Channel;Lorg/apache/flume/Event;)V
+#put(Lorg/apache/flume/Channel;Ljava/util/Collection;)V
+#take(Lorg/apache/flume/Channel;)Lorg/apache/flume/Event;
+#take(Lorg/apache/flume/Channel;I)Ljava/util/List;
+#transact(Lorg/apache/flume/Channel;Ljava/lang/Runnable;)V
+#transact(Lorg/apache/flume/Channel;Ljava/util/concurrent/Callable;)Ljava/lang/Object;

+###org/apache/flume/annotations/Disposable
@1.4.0

+###org/apache/flume/formatter/output/PathManager$Builder
@1.7.0
+#build(Lorg/apache/flume/Context;)Lorg/apache/flume/formatter/output/PathManager;

+###org/apache/flume/client/avro/ReliableSpoolingFileEventReader$TrackingPolicy
@1.9.0
+#values()[Lorg/apache/flume/client/avro/ReliableSpoolingFileEventReader$TrackingPolicy;
+#valueOf(Ljava/lang/String;)Lorg/apache/flume/client/avro/ReliableSpoolingFileEventReader$TrackingPolicy;

+###org/apache/flume/interceptor/RemoveHeaderInterceptor
@1.8.0
+#initialize()V
+#close()V
+#intercept(Ljava/util/List;)Ljava/util/List;
+#intercept(Lorg/apache/flume/Event;)Lorg/apache/flume/Event;

+###org/apache/flume/interceptor/RegexFilteringInterceptor$Constants
@1.3.0
+#<init>()V

+###org/apache/flume/interceptor/InterceptorType
@1.2.0
+#values()[Lorg/apache/flume/interceptor/InterceptorType;
+#valueOf(Ljava/lang/String;)Lorg/apache/flume/interceptor/InterceptorType;
+#getBuilderClass()Ljava/lang/Class;

+###org/apache/flume/source/SyslogTcpSource$syslogTcpHandler
@1.2.0
+#<init>(Lorg/apache/flume/source/SyslogTcpSource;)V
+#setEventSize(I)V
+#setFormater(Ljava/util/Map;)V
+#messageReceived(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
@1.5.0
+#setKeepFields(Z)V
@1.6.0
+#setKeepFields(Ljava/util/Set;)V
-#setKeepFields(Z)V
@1.9.0
+#setClientIPHeader(Ljava/lang/String;)V
+#setClientHostnameHeader(Ljava/lang/String;)V
@1.10.0
-###org/apache/flume/source/SyslogTcpSource$syslogTcpHandler

+###org/apache/flume/source/SyslogUDPSource$syslogHandler
@1.2.0
+#<init>(Lorg/apache/flume/source/SyslogUDPSource;)V
+#setFormater(Ljava/util/Map;)V
+#messageReceived(Lorg/jboss/netty/channel/ChannelHandlerContext;Lorg/jboss/netty/channel/MessageEvent;)V
@1.5.0
+#setKeepFields(Z)V
@1.6.0
+#setKeepFields(Ljava/util/Set;)V
-#setKeepFields(Z)V
@1.9.0
+#setClientIPHeader(Ljava/lang/String;)V
+#setClientHostnameHeader(Ljava/lang/String;)V
@1.10.0
-###org/apache/flume/source/SyslogUDPSource$syslogHandler

+###org/apache/flume/channel/FanoutChannel$wrapperTransaction
@1.0.0-incubating
+#<init>(Lorg/apache/flume/channel/FanoutChannel;)V
+#begin()V
+#commit()V
+#rollback()V
+#close()V
@1.2.0
-###org/apache/flume/channel/FanoutChannel$wrapperTransaction

+###org/apache/flume/channel/FanoutChannel
@1.0.0-incubating
+#<init>()V
+#addFanout(Lorg/apache/flume/Channel;)V
+#put(Lorg/apache/flume/Event;)V
+#take()Lorg/apache/flume/Event;
+#getTransaction()Lorg/apache/flume/Transaction;
+#shutdown()V
+#getName()Ljava/lang/String;
@1.2.0
-###org/apache/flume/channel/FanoutChannel

+###org/apache/flume/channel/MemoryChannel$MemTransaction
@1.0.0-incubating
+#<init>(Lorg/apache/flume/channel/MemoryChannel;)V
+#begin()V
+#commit()V
+#rollback()V
+#close()V
+#getState()Lorg/apache/flume/Transaction$TransactionState;
@1.2.0
-###org/apache/flume/channel/MemoryChannel$MemTransaction

+###org/apache/flume/Context
@1.0.0-incubating
+#<init>()V
+#getSubProperties(Ljava/lang/String;)Ljava/util/Map;
+#put(Ljava/lang/String;Ljava/lang/Object;)V
+#get(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#get(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#getString(Ljava/lang/String;)Ljava/lang/String;
+#getString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#toString()Ljava/lang/String;
+#getParameters()Ljava/util/Map;
+#setParameters(Ljava/util/Map;)V
+#clear()V
@1.2.0
-###org/apache/flume/Context

+###org/apache/flume/event/EventBuilder
@1.0.0-incubating
+#<init>()V
+#withBody([B)Lorg/apache/flume/Event;
+#withBody([BLjava/util/Map;)Lorg/apache/flume/Event;
@1.2.0
-###org/apache/flume/event/EventBuilder

+###org/apache/flume/event/SimpleEvent
@1.0.0-incubating
+#<init>()V
+#getHeaders()Ljava/util/Map;
+#setHeaders(Ljava/util/Map;)V
+#getBody()[B
+#setBody([B)V
+#toString()Ljava/lang/String;
@1.2.0
-###org/apache/flume/event/SimpleEvent

+###org/apache/flume/Event
@1.0.0-incubating
+#getHeaders()Ljava/util/Map;
+#setHeaders(Ljava/util/Map;)V
+#getBody()[B
+#setBody([B)V
@1.2.0
-###org/apache/flume/Event

+###org/apache/flume/EventDeliveryException
@1.0.0-incubating
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@1.2.0
-###org/apache/flume/EventDeliveryException

+###org/apache/flume/PollableSink$Status
@1.0.0-incubating
+#values()[Lorg/apache/flume/PollableSink$Status;
+#valueOf(Ljava/lang/String;)Lorg/apache/flume/PollableSink$Status;
@1.2.0
-###org/apache/flume/PollableSink$Status

+###org/apache/flume/PollableSink
@1.0.0-incubating
+#process()Lorg/apache/flume/PollableSink$Status;
@1.2.0
-###org/apache/flume/PollableSink

+###org/apache/flume/sink/FlumeFormatter
@1.0.0-incubating
+#getKeyClass()Ljava/lang/Class;
+#getValueClass()Ljava/lang/Class;
+#getKey(Lorg/apache/flume/Event;)Ljava/lang/Object;
+#getValue(Lorg/apache/flume/Event;)Ljava/lang/Object;
+#getBytes(Lorg/apache/flume/Event;)[B
@1.4.0
-###org/apache/flume/sink/FlumeFormatter

+###org/apache/flume/sink/PollableSinkRunner$PollingRunner
@1.0.0-incubating
+#<init>()V
+#run()V
@1.2.0
-###org/apache/flume/sink/PollableSinkRunner$PollingRunner

+###org/apache/flume/sink/PollableSinkRunner
@1.0.0-incubating
+#<init>()V
+#start()V
+#stop()V
+#toString()Ljava/lang/String;
+#getLifecycleState()Lorg/apache/flume/lifecycle/LifecycleState;
@1.2.0
-###org/apache/flume/sink/PollableSinkRunner

+###org/apache/flume/source/avro/AvroFlumeEvent$Builder
@1.0.0-incubating
+#getHeaders()Ljava/util/Map;
+#setHeaders(Ljava/util/Map;)Lorg/apache/flume/source/avro/AvroFlumeEvent$Builder;
+#hasHeaders()Z
+#clearHeaders()Lorg/apache/flume/source/avro/AvroFlumeEvent$Builder;
+#getBody()Ljava/nio/ByteBuffer;
+#setBody(Ljava/nio/ByteBuffer;)Lorg/apache/flume/source/avro/AvroFlumeEvent$Builder;
+#hasBody()Z
+#clearBody()Lorg/apache/flume/source/avro/AvroFlumeEvent$Builder;
+#build()Lorg/apache/flume/source/avro/AvroFlumeEvent;
+#build()Ljava/lang/Object;
@1.2.0
-###org/apache/flume/source/avro/AvroFlumeEvent$Builder

+###org/apache/flume/source/avro/AvroFlumeEvent
@1.0.0-incubating
+#<init>()V
+#getSchema()Lorg/apache/avro/Schema;
+#get(I)Ljava/lang/Object;
+#put(ILjava/lang/Object;)V
+#getHeaders()Ljava/util/Map;
+#setHeaders(Ljava/util/Map;)V
+#getBody()Ljava/nio/ByteBuffer;
+#setBody(Ljava/nio/ByteBuffer;)V
+#newBuilder()Lorg/apache/flume/source/avro/AvroFlumeEvent$Builder;
+#newBuilder(Lorg/apache/flume/source/avro/AvroFlumeEvent$Builder;)Lorg/apache/flume/source/avro/AvroFlumeEvent$Builder;
+#newBuilder(Lorg/apache/flume/source/avro/AvroFlumeEvent;)Lorg/apache/flume/source/avro/AvroFlumeEvent$Builder;
@1.2.0
-###org/apache/flume/source/avro/AvroFlumeEvent

+###org/apache/flume/source/avro/AvroSourceProtocol$Callback
@1.0.0-incubating
+#append(Lorg/apache/flume/source/avro/AvroFlumeEvent;Lorg/apache/avro/ipc/Callback;)V
+#appendBatch(Ljava/util/List;Lorg/apache/avro/ipc/Callback;)V
@1.2.0
-###org/apache/flume/source/avro/AvroSourceProtocol$Callback

+###org/apache/flume/source/avro/AvroSourceProtocol
@1.0.0-incubating
+#append(Lorg/apache/flume/source/avro/AvroFlumeEvent;)Lorg/apache/flume/source/avro/Status;
+#appendBatch(Ljava/util/List;)Lorg/apache/flume/source/avro/Status;
@1.2.0
-###org/apache/flume/source/avro/AvroSourceProtocol

+###org/apache/flume/source/avro/Status
@1.0.0-incubating
+#values()[Lorg/apache/flume/source/avro/Status;
+#valueOf(Ljava/lang/String;)Lorg/apache/flume/source/avro/Status;
@1.2.0
-###org/apache/flume/source/avro/Status

+###org/apache/flume/source/NetcatSource$AcceptHandler
@1.0.0-incubating
+#<init>()V
+#run()V
@1.2.0
-###org/apache/flume/source/NetcatSource$AcceptHandler

+###org/apache/flume/source/NetcatSource$NetcatSocketHandler
@1.0.0-incubating
+#<init>()V
+#run()V
@1.2.0
-###org/apache/flume/source/NetcatSource$NetcatSocketHandler

+###org/apache/flume/channel/MemoryChannel$MemoryTransaction
@1.2.0
+#<init>(Lorg/apache/flume/channel/MemoryChannel;ILorg/apache/flume/instrumentation/ChannelCounter;)V
@1.3.0
-###org/apache/flume/channel/MemoryChannel$MemoryTransaction

+###org/apache/flume/client/avro/BufferedLineReader
@1.3.0
+#<init>(Ljava/io/Reader;)V
+#readLine()Ljava/lang/String;
+#close()V
+#readLines(I)Ljava/util/List;
+#mark(I)V
+#reset()V
@1.4.0
-###org/apache/flume/client/avro/BufferedLineReader

+###org/apache/flume/client/avro/LineReader
@1.3.0
+#readLine()Ljava/lang/String;
+#readLines(I)Ljava/util/List;
+#close()V
@1.4.0
-###org/apache/flume/client/avro/LineReader

+###org/apache/flume/client/avro/SpoolingFileLineReader
@1.3.0
+#<init>(Ljava/io/File;Ljava/lang/String;II)V
+#getLastFileRead()Ljava/lang/String;
+#readLine()Ljava/lang/String;
+#commit()V
+#readLines(I)Ljava/util/List;
+#close()V
@1.4.0
-###org/apache/flume/client/avro/SpoolingFileLineReader
