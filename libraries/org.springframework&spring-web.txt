
+###org/springframework/web/bind/BindInitializer
@1.0-rc1
+#initBinder(Ljavax/servlet/ServletRequest;Lorg/springframework/web/bind/ServletRequestDataBinder;)V
@2.5
-###org/springframework/web/bind/BindInitializer

+###org/springframework/web/bind/BindUtils
@1.0-rc1
+#<init>()V
+#bind(Ljavax/servlet/ServletRequest;Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/validation/BindException;
+#bind(Ljavax/servlet/ServletRequest;Ljava/lang/Object;Ljava/lang/String;Lorg/springframework/web/bind/BindInitializer;)Lorg/springframework/validation/BindException;
+#bindAndValidate(Ljavax/servlet/ServletRequest;Ljava/lang/Object;Ljava/lang/String;Lorg/springframework/validation/Validator;)Lorg/springframework/validation/BindException;
+#bindAndValidate(Ljavax/servlet/ServletRequest;Ljava/lang/Object;Ljava/lang/String;Lorg/springframework/validation/Validator;Lorg/springframework/web/bind/BindInitializer;)Lorg/springframework/validation/BindException;
@2.5
-###org/springframework/web/bind/BindUtils

+###org/springframework/web/bind/EscapedErrors
@1.0-rc1
+#<init>(Lorg/springframework/validation/Errors;)V
+#getSource()Lorg/springframework/validation/Errors;
+#getObjectName()Ljava/lang/String;
+#reject(Ljava/lang/String;Ljava/lang/String;)V
+#reject(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/String;)V
+#rejectValue(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#rejectValue(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/String;)V
+#hasErrors()Z
+#getErrorCount()I
+#getAllErrors()Ljava/util/List;
+#hasGlobalErrors()Z
+#getGlobalErrorCount()I
+#getGlobalErrors()Ljava/util/List;
+#getGlobalError()Lorg/springframework/validation/ObjectError;
+#hasFieldErrors(Ljava/lang/String;)Z
+#getFieldErrorCount(Ljava/lang/String;)I
+#getFieldErrors(Ljava/lang/String;)Ljava/util/List;
+#getFieldError(Ljava/lang/String;)Lorg/springframework/validation/FieldError;
+#getFieldValue(Ljava/lang/String;)Ljava/lang/Object;
+#setNestedPath(Ljava/lang/String;)V
+#getCustomEditor(Ljava/lang/String;)Ljava/beans/PropertyEditor;
@1.0
+#getNestedPath()Ljava/lang/String;
-#getCustomEditor(Ljava/lang/String;)Ljava/beans/PropertyEditor;
@1.1-rc2
+#pushNestedPath(Ljava/lang/String;)V
+#popNestedPath()V
@1.1.5
+#reject(Ljava/lang/String;)V
+#rejectValue(Ljava/lang/String;Ljava/lang/String;)V
@1.2-rc1
+#addAllErrors(Lorg/springframework/validation/Errors;)V
@2.0-m3
+#hasFieldErrors()Z
+#getFieldErrorCount()I
+#getFieldErrors()Ljava/util/List;
+#getFieldError()Lorg/springframework/validation/FieldError;
@2.0-rc1
+#getFieldType(Ljava/lang/String;)Ljava/lang/Class;
@2.5.1
-###org/springframework/web/bind/EscapedErrors

+###org/springframework/web/bind/RequestUtils
@1.0-rc1
+#<init>()V
+#rejectRequestMethod(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)V
+#getIntParameter(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;I)I
+#getRequiredIntParameter(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)I
+#getLongParameter(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;J)J
+#getRequiredLongParameter(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)J
+#getDoubleParameter(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;D)D
+#getRequiredDoubleParameter(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)D
+#getBooleanParameter(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Z)Z
+#getRequiredBooleanParameter(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Z
+#getStringParameter(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getRequiredStringParameter(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;
@1.0
+#getFloatParameter(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;F)F
+#getRequiredFloatParameter(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)F
@1.1.2
+#getIntParameters(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)[I
+#getRequiredIntParameters(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)[I
+#getLongParameters(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)[J
+#getRequiredLongParameters(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)[J
+#getFloatParameters(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)[F
+#getRequiredFloatParameters(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)[F
+#getDoubleParameters(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)[D
+#getRequiredDoubleParameters(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)[D
+#getBooleanParameters(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)[Z
+#getRequiredBooleanParameters(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)[Z
+#getStringParameters(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)[Ljava/lang/String;
+#getRequiredStringParameters(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)[Ljava/lang/String;
@1.1.5
+#getIntParameter(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/Integer;
+#getLongParameter(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/Long;
+#getFloatParameter(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/Float;
+#getDoubleParameter(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/Double;
+#getBooleanParameter(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/Boolean;
+#getStringParameter(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;
@2.5.1
-###org/springframework/web/bind/RequestUtils

+###org/springframework/web/bind/ServletRequestBindingException
@1.0-rc1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@2.5.1
-###org/springframework/web/bind/ServletRequestBindingException

+###org/springframework/web/bind/ServletRequestDataBinder
@1.0-rc1
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#bind(Ljavax/servlet/ServletRequest;)V
+#closeNoCatch()V
@1.0
+#setBindEmptyMultipartFiles(Z)V
@1.1-rc1
+#setFieldMarkerPrefix(Ljava/lang/String;)V
@1.2-rc2
+#isBindEmptyMultipartFiles()Z
-#setFieldMarkerPrefix(Ljava/lang/String;)V
@1.2.6
+#<init>(Ljava/lang/Object;)V
@2.0-m2
-#setBindEmptyMultipartFiles(Z)V
-#isBindEmptyMultipartFiles()Z
@2.5.1
-###org/springframework/web/bind/ServletRequestDataBinder

+###org/springframework/web/bind/ServletRequestParameterPropertyValues
@1.0-rc1
+#<init>(Ljavax/servlet/ServletRequest;Ljava/lang/String;)V
+#<init>(Ljavax/servlet/ServletRequest;)V
+#<init>(Ljavax/servlet/ServletRequest;Ljava/lang/String;Ljava/lang/String;)V
+#getPropertyValues()[Lorg/springframework/beans/PropertyValue;
+#contains(Ljava/lang/String;)Z
+#getPropertyValue(Ljava/lang/String;)Lorg/springframework/beans/PropertyValue;
+#changesSince(Lorg/springframework/beans/PropertyValues;)Lorg/springframework/beans/PropertyValues;
@1.0
-#getPropertyValues()[Lorg/springframework/beans/PropertyValue;
-#contains(Ljava/lang/String;)Z
-#getPropertyValue(Ljava/lang/String;)Lorg/springframework/beans/PropertyValue;
-#changesSince(Lorg/springframework/beans/PropertyValues;)Lorg/springframework/beans/PropertyValues;
@2.5.1
-###org/springframework/web/bind/ServletRequestParameterPropertyValues

+###org/springframework/web/context/ConfigurableWebApplicationContext
@1.0-rc1
+#setServletContext(Ljavax/servlet/ServletContext;)V
+#setNamespace(Ljava/lang/String;)V
+#setConfigLocations([Ljava/lang/String;)V
@2.0-m1
+#setServletConfig(Ljavax/servlet/ServletConfig;)V
@2.0.3
+#getServletConfig()Ljavax/servlet/ServletConfig;
+#getNamespace()Ljava/lang/String;
+#getConfigLocations()[Ljava/lang/String;
@2.5.2
+#setConfigLocation(Ljava/lang/String;)V
@3.1.2.RELEASE
+#getEnvironment()Lorg/springframework/web/context/ConfigurableWebEnvironment;
@3.2.1.RELEASE
-#getEnvironment()Lorg/springframework/web/context/ConfigurableWebEnvironment;
@6.0.0
+#setServletContext(Ljakarta/servlet/ServletContext;)V
+#setServletConfig(Ljakarta/servlet/ServletConfig;)V
+#getServletConfig()Ljakarta/servlet/ServletConfig;
-#setServletContext(Ljavax/servlet/ServletContext;)V
-#setServletConfig(Ljavax/servlet/ServletConfig;)V
-#getServletConfig()Ljavax/servlet/ServletConfig;

+###org/springframework/web/context/ContextLoader
@1.0-rc1
+#<init>()V
+#initWebApplicationContext(Ljavax/servlet/ServletContext;)Lorg/springframework/web/context/WebApplicationContext;
+#closeWebApplicationContext(Ljavax/servlet/ServletContext;)V
@2.5.1
+#getCurrentWebApplicationContext()Lorg/springframework/web/context/WebApplicationContext;
@3.1.0.RELEASE
+#<init>(Lorg/springframework/web/context/WebApplicationContext;)V
@4.2.0.RELEASE
+#setContextInitializers([Lorg/springframework/context/ApplicationContextInitializer;)V
@6.0.0
+#initWebApplicationContext(Ljakarta/servlet/ServletContext;)Lorg/springframework/web/context/WebApplicationContext;
+#closeWebApplicationContext(Ljakarta/servlet/ServletContext;)V
-#initWebApplicationContext(Ljavax/servlet/ServletContext;)Lorg/springframework/web/context/WebApplicationContext;
-#closeWebApplicationContext(Ljavax/servlet/ServletContext;)V

+###org/springframework/web/context/ContextLoaderListener
@1.0-rc1
+#<init>()V
+#contextInitialized(Ljavax/servlet/ServletContextEvent;)V
+#contextDestroyed(Ljavax/servlet/ServletContextEvent;)V
@1.1-rc1
+#getContextLoader()Lorg/springframework/web/context/ContextLoader;
@3.0.0.RELEASE
*#getContextLoader()Lorg/springframework/web/context/ContextLoader;[deprecated]
@3.1.0.RELEASE
+#<init>(Lorg/springframework/web/context/WebApplicationContext;)V
@4.0.0.RELEASE
-#getContextLoader()Lorg/springframework/web/context/ContextLoader;[deprecated]
@6.0.0
+#contextInitialized(Ljakarta/servlet/ServletContextEvent;)V
+#contextDestroyed(Ljakarta/servlet/ServletContextEvent;)V
-#contextInitialized(Ljavax/servlet/ServletContextEvent;)V
-#contextDestroyed(Ljavax/servlet/ServletContextEvent;)V

+###org/springframework/web/context/ContextLoaderServlet
@1.0-rc1
+#<init>()V
+#init()V
+#destroy()V
+#doService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#getServletInfo()Ljava/lang/String;
@1.1-rc1
+#getContextLoader()Lorg/springframework/web/context/ContextLoader;
+#service(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#doService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@3.0.0.RELEASE
-###org/springframework/web/context/ContextLoaderServlet

+###org/springframework/web/context/ServletContextAware
@1.0
+#setServletContext(Ljavax/servlet/ServletContext;)V
@6.0.0
+#setServletContext(Ljakarta/servlet/ServletContext;)V
-#setServletContext(Ljavax/servlet/ServletContext;)V

+###org/springframework/web/context/WebApplicationContext
@1.0-rc1
+#getServletContext()Ljavax/servlet/ServletContext;
@6.0.0
+#getServletContext()Ljakarta/servlet/ServletContext;
-#getServletContext()Ljavax/servlet/ServletContext;

+###org/springframework/web/context/support/AbstractRefreshableWebApplicationContext
@1.1.3
+#<init>()V
+#setServletContext(Ljavax/servlet/ServletContext;)V
+#getServletContext()Ljavax/servlet/ServletContext;
+#setNamespace(Ljava/lang/String;)V
+#setConfigLocations([Ljava/lang/String;)V
+#refresh()V
+#getTheme(Ljava/lang/String;)Lorg/springframework/ui/context/Theme;
+#toString()Ljava/lang/String;
@2.0-m1
+#setServletConfig(Ljavax/servlet/ServletConfig;)V
+#getServletConfig()Ljavax/servlet/ServletConfig;
@2.0.3
+#getNamespace()Ljava/lang/String;
+#getConfigLocations()[Ljava/lang/String;
-#refresh()V
-#toString()Ljava/lang/String;
@2.5.2
-#setConfigLocations([Ljava/lang/String;)V
@3.1.2.RELEASE
+#getEnvironment()Lorg/springframework/web/context/ConfigurableWebEnvironment;
+#getEnvironment()Lorg/springframework/core/env/Environment;
+#getEnvironment()Lorg/springframework/core/env/ConfigurableEnvironment;
@3.2.0.RELEASE
+#getApplicationName()Ljava/lang/String;
@3.2.1.RELEASE
-#getEnvironment()Lorg/springframework/web/context/ConfigurableWebEnvironment;
-#getEnvironment()Lorg/springframework/core/env/ConfigurableEnvironment;
-#getEnvironment()Lorg/springframework/core/env/Environment;
@6.0.0
+#setServletContext(Ljakarta/servlet/ServletContext;)V
+#getServletContext()Ljakarta/servlet/ServletContext;
+#setServletConfig(Ljakarta/servlet/ServletConfig;)V
+#getServletConfig()Ljakarta/servlet/ServletConfig;
*#getTheme(Ljava/lang/String;)Lorg/springframework/ui/context/Theme;[deprecated]
-#setServletContext(Ljavax/servlet/ServletContext;)V
-#getServletContext()Ljavax/servlet/ServletContext;
-#setServletConfig(Ljavax/servlet/ServletConfig;)V
-#getServletConfig()Ljavax/servlet/ServletConfig;

+###org/springframework/web/context/support/PerformanceMonitorListener
@1.0-rc1
+#<init>()V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@3.0.0.RELEASE
-###org/springframework/web/context/support/PerformanceMonitorListener

+###org/springframework/web/context/support/RequestHandledEvent
@1.0-rc1
+#<init>(Ljava/lang/Object;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getURL()Ljava/lang/String;
+#getTimeMillis()J
+#getIpAddress()Ljava/lang/String;
+#getMethod()Ljava/lang/String;
+#getServletName()Ljava/lang/String;
+#wasFailure()Z
+#getFailureCause()Ljava/lang/Throwable;
+#toString()Ljava/lang/String;
@1.1-rc1
+#<init>(Ljava/lang/Object;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getRequestUrl()Ljava/lang/String;
+#getProcessingTimeMillis()J
+#getClientAddress()Ljava/lang/String;
+#getSessionId()Ljava/lang/String;
+#getUserName()Ljava/lang/String;
@1.2-rc1
-#getURL()Ljava/lang/String;
-#getTimeMillis()J
-#getIpAddress()Ljava/lang/String;
@2.0-m2
+#<init>(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;J)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;JLjava/lang/Throwable;)V
+#getShortDescription()Ljava/lang/String;
+#getDescription()Ljava/lang/String;
-#<init>(Ljava/lang/Object;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
-#<init>(Ljava/lang/Object;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
-#<init>(Ljava/lang/Object;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
-#<init>(Ljava/lang/Object;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
-#getRequestUrl()Ljava/lang/String;
-#getClientAddress()Ljava/lang/String;
-#getMethod()Ljava/lang/String;
-#getServletName()Ljava/lang/String;

+###org/springframework/web/context/support/ServletContextAwareProcessor
@1.0
+#<init>(Ljavax/servlet/ServletContext;)V
+#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
@2.0-m1
+#<init>(Ljavax/servlet/ServletConfig;)V
+#<init>(Ljavax/servlet/ServletContext;Ljavax/servlet/ServletConfig;)V
@6.0.0
+#<init>(Ljakarta/servlet/ServletContext;)V
+#<init>(Ljakarta/servlet/ServletConfig;)V
+#<init>(Ljakarta/servlet/ServletContext;Ljakarta/servlet/ServletConfig;)V
-#<init>(Ljavax/servlet/ServletContext;)V
-#<init>(Ljavax/servlet/ServletConfig;)V
-#<init>(Ljavax/servlet/ServletContext;Ljavax/servlet/ServletConfig;)V

+###org/springframework/web/context/support/ServletContextResource
@1.0-rc1
+#<init>(Ljavax/servlet/ServletContext;Ljava/lang/String;)V
+#getInputStream()Ljava/io/InputStream;
+#getFile()Ljava/io/File;
+#getDescription()Ljava/lang/String;
@1.0
+#getURL()Ljava/net/URL;
@1.1-rc2
+#createRelative(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
+#getFilename()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.2
+#getServletContext()Ljavax/servlet/ServletContext;
+#getPath()Ljava/lang/String;
@2.5
+#getPathWithinContext()Ljava/lang/String;
@2.5.2
+#exists()Z
@3.1.1.RELEASE
+#isReadable()Z
@5.0.0.RELEASE
+#isFile()Z
@6.0.0
+#<init>(Ljakarta/servlet/ServletContext;Ljava/lang/String;)V
+#getServletContext()Ljakarta/servlet/ServletContext;
-#<init>(Ljavax/servlet/ServletContext;Ljava/lang/String;)V
-#getServletContext()Ljavax/servlet/ServletContext;

+###org/springframework/web/context/support/ServletContextResourceLoader
@1.1-rc1
+#<init>(Ljavax/servlet/ServletContext;)V
@6.0.0
+#<init>(Ljakarta/servlet/ServletContext;)V
-#<init>(Ljavax/servlet/ServletContext;)V

+###org/springframework/web/context/support/ServletContextResourcePatternResolver
@1.1.2
+#<init>(Lorg/springframework/core/io/ResourceLoader;)V
@1.2
+#<init>(Ljavax/servlet/ServletContext;)V
@6.0.0
+#<init>(Ljakarta/servlet/ServletContext;)V
-#<init>(Ljavax/servlet/ServletContext;)V

+###org/springframework/web/context/support/StaticWebApplicationContext
@1.0-rc1
+#<init>()V
+#setServletContext(Ljavax/servlet/ServletContext;)V
+#getServletContext()Ljavax/servlet/ServletContext;
+#setNamespace(Ljava/lang/String;)V
+#setConfigLocations([Ljava/lang/String;)V
+#refresh()V
@1.0
+#getTheme(Ljava/lang/String;)Lorg/springframework/ui/context/Theme;
@1.1.3
-#refresh()V
@2.0-m1
+#setServletConfig(Ljavax/servlet/ServletConfig;)V
+#getServletConfig()Ljavax/servlet/ServletConfig;
@2.0.3
+#getNamespace()Ljava/lang/String;
+#getConfigLocations()[Ljava/lang/String;
@2.5.2
+#setConfigLocation(Ljava/lang/String;)V
@3.1.2.RELEASE
+#getEnvironment()Lorg/springframework/web/context/ConfigurableWebEnvironment;
+#getEnvironment()Lorg/springframework/core/env/Environment;
+#getEnvironment()Lorg/springframework/core/env/ConfigurableEnvironment;
@3.2.1.RELEASE
-#getEnvironment()Lorg/springframework/web/context/ConfigurableWebEnvironment;
-#getEnvironment()Lorg/springframework/core/env/ConfigurableEnvironment;
-#getEnvironment()Lorg/springframework/core/env/Environment;
@6.0.0
+#setServletContext(Ljakarta/servlet/ServletContext;)V
+#getServletContext()Ljakarta/servlet/ServletContext;
+#setServletConfig(Ljakarta/servlet/ServletConfig;)V
+#getServletConfig()Ljakarta/servlet/ServletConfig;
*#getTheme(Ljava/lang/String;)Lorg/springframework/ui/context/Theme;[deprecated]
-#setServletContext(Ljavax/servlet/ServletContext;)V
-#getServletContext()Ljavax/servlet/ServletContext;
-#setServletConfig(Ljavax/servlet/ServletConfig;)V
-#getServletConfig()Ljavax/servlet/ServletConfig;

+###org/springframework/web/context/support/WebApplicationContextUtils
@1.0-rc1
+#<init>()V
+#getWebApplicationContext(Ljavax/servlet/ServletContext;)Lorg/springframework/web/context/WebApplicationContext;
+#getRequiredWebApplicationContext(Ljavax/servlet/ServletContext;)Lorg/springframework/web/context/WebApplicationContext;
@2.5.4
+#getWebApplicationContext(Ljavax/servlet/ServletContext;Ljava/lang/String;)Lorg/springframework/web/context/WebApplicationContext;
+#registerWebApplicationScopes(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
@3.0.0.RELEASE
+#registerWebApplicationScopes(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;Ljavax/servlet/ServletContext;)V
+#registerEnvironmentBeans(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;Ljavax/servlet/ServletContext;)V
+#registerEnvironmentBeans(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;Ljavax/servlet/ServletContext;Ljavax/servlet/ServletConfig;)V
@3.1.0.RELEASE
+#initServletPropertySources(Lorg/springframework/core/env/MutablePropertySources;Ljavax/servlet/ServletContext;)V
+#initServletPropertySources(Lorg/springframework/core/env/MutablePropertySources;Ljavax/servlet/ServletContext;Ljavax/servlet/ServletConfig;)V
@4.2.0.RELEASE
+#findWebApplicationContext(Ljavax/servlet/ServletContext;)Lorg/springframework/web/context/WebApplicationContext;
@6.0.0
+#getRequiredWebApplicationContext(Ljakarta/servlet/ServletContext;)Lorg/springframework/web/context/WebApplicationContext;
+#getWebApplicationContext(Ljakarta/servlet/ServletContext;)Lorg/springframework/web/context/WebApplicationContext;
+#getWebApplicationContext(Ljakarta/servlet/ServletContext;Ljava/lang/String;)Lorg/springframework/web/context/WebApplicationContext;
+#findWebApplicationContext(Ljakarta/servlet/ServletContext;)Lorg/springframework/web/context/WebApplicationContext;
+#registerWebApplicationScopes(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;Ljakarta/servlet/ServletContext;)V
+#registerEnvironmentBeans(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;Ljakarta/servlet/ServletContext;)V
+#registerEnvironmentBeans(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;Ljakarta/servlet/ServletContext;Ljakarta/servlet/ServletConfig;)V
+#initServletPropertySources(Lorg/springframework/core/env/MutablePropertySources;Ljakarta/servlet/ServletContext;)V
+#initServletPropertySources(Lorg/springframework/core/env/MutablePropertySources;Ljakarta/servlet/ServletContext;Ljakarta/servlet/ServletConfig;)V
-#getRequiredWebApplicationContext(Ljavax/servlet/ServletContext;)Lorg/springframework/web/context/WebApplicationContext;
-#getWebApplicationContext(Ljavax/servlet/ServletContext;)Lorg/springframework/web/context/WebApplicationContext;
-#getWebApplicationContext(Ljavax/servlet/ServletContext;Ljava/lang/String;)Lorg/springframework/web/context/WebApplicationContext;
-#findWebApplicationContext(Ljavax/servlet/ServletContext;)Lorg/springframework/web/context/WebApplicationContext;
-#registerWebApplicationScopes(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;Ljavax/servlet/ServletContext;)V
-#registerEnvironmentBeans(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;Ljavax/servlet/ServletContext;)V
-#registerEnvironmentBeans(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;Ljavax/servlet/ServletContext;Ljavax/servlet/ServletConfig;)V
-#initServletPropertySources(Lorg/springframework/core/env/MutablePropertySources;Ljavax/servlet/ServletContext;)V
-#initServletPropertySources(Lorg/springframework/core/env/MutablePropertySources;Ljavax/servlet/ServletContext;Ljavax/servlet/ServletConfig;)V

+###org/springframework/web/context/support/WebApplicationObjectSupport
@1.0-rc1
+#<init>()V
@2.0-m1
+#setServletContext(Ljavax/servlet/ServletContext;)V
@6.0.0
+#setServletContext(Ljakarta/servlet/ServletContext;)V
-#setServletContext(Ljavax/servlet/ServletContext;)V

+###org/springframework/web/context/support/XmlWebApplicationContext
@1.0-rc1
+#<init>()V
+#setServletContext(Ljavax/servlet/ServletContext;)V
+#getServletContext()Ljavax/servlet/ServletContext;
+#setNamespace(Ljava/lang/String;)V
+#setConfigLocations([Ljava/lang/String;)V
+#refresh()V
+#toString()Ljava/lang/String;
@1.0
+#getTheme(Ljava/lang/String;)Lorg/springframework/ui/context/Theme;
@1.1.3
-#setServletContext(Ljavax/servlet/ServletContext;)V
-#getServletContext()Ljavax/servlet/ServletContext;
-#setNamespace(Ljava/lang/String;)V
-#setConfigLocations([Ljava/lang/String;)V
-#refresh()V
-#getTheme(Ljava/lang/String;)Lorg/springframework/ui/context/Theme;
-#toString()Ljava/lang/String;

+###org/springframework/web/filter/CharacterEncodingFilter
@1.0
+#<init>()V
+#setEncoding(Ljava/lang/String;)V
+#setForceEncoding(Z)V
@4.2.3.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Z)V
@4.3.0.RELEASE
+#<init>(Ljava/lang/String;ZZ)V
+#getEncoding()Ljava/lang/String;
+#setForceRequestEncoding(Z)V
+#isForceRequestEncoding()Z
+#setForceResponseEncoding(Z)V
+#isForceResponseEncoding()Z

+###org/springframework/web/filter/GenericFilterBean
@1.0-rc1
+#<init>()V
+#init(Ljavax/servlet/FilterConfig;)V
+#destroy()V
@1.1-rc1
+#setFilterConfig(Ljavax/servlet/FilterConfig;)V
+#getFilterConfig()Ljavax/servlet/FilterConfig;
@1.2.8
+#setBeanName(Ljava/lang/String;)V
+#setServletContext(Ljavax/servlet/ServletContext;)V
+#afterPropertiesSet()V
@2.0-m1
-#setBeanName(Ljava/lang/String;)V
-#setServletContext(Ljavax/servlet/ServletContext;)V
-#afterPropertiesSet()V
@2.0-m4
+#setBeanName(Ljava/lang/String;)V
+#setServletContext(Ljavax/servlet/ServletContext;)V
+#afterPropertiesSet()V
@2.5
-#setFilterConfig(Ljavax/servlet/FilterConfig;)V
@3.1.0.RELEASE
+#setEnvironment(Lorg/springframework/core/env/Environment;)V
@4.3.9.RELEASE
+#getEnvironment()Lorg/springframework/core/env/Environment;
@6.0.0
+#setServletContext(Ljakarta/servlet/ServletContext;)V
+#init(Ljakarta/servlet/FilterConfig;)V
+#getFilterConfig()Ljakarta/servlet/FilterConfig;
-#setServletContext(Ljavax/servlet/ServletContext;)V
-#init(Ljavax/servlet/FilterConfig;)V
-#getFilterConfig()Ljavax/servlet/FilterConfig;

+###org/springframework/web/filter/OncePerRequestFilter
@1.0-rc1
+#<init>()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
@6.0.0
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/springframework/web/jsf/DelegatingVariableResolver
@1.1.1
+#<init>(Ljavax/faces/el/VariableResolver;)V
+#resolveVariable(Ljavax/faces/context/FacesContext;Ljava/lang/String;)Ljava/lang/Object;
@4.0.0.RELEASE
-###org/springframework/web/jsf/DelegatingVariableResolver

+###org/springframework/web/jsf/FacesContextUtils
@1.1.1
+#<init>()V
+#getWebApplicationContext(Ljavax/faces/context/FacesContext;)Lorg/springframework/web/context/WebApplicationContext;
+#getRequiredWebApplicationContext(Ljavax/faces/context/FacesContext;)Lorg/springframework/web/context/WebApplicationContext;
@1.2.7
+#getSessionMutex(Ljavax/faces/context/FacesContext;)Ljava/lang/Object;
@2.0-m1
-#getSessionMutex(Ljavax/faces/context/FacesContext;)Ljava/lang/Object;
@2.0-m2
+#getSessionMutex(Ljavax/faces/context/FacesContext;)Ljava/lang/Object;
@6.0.0
+#getWebApplicationContext(Ljakarta/faces/context/FacesContext;)Lorg/springframework/web/context/WebApplicationContext;
+#getRequiredWebApplicationContext(Ljakarta/faces/context/FacesContext;)Lorg/springframework/web/context/WebApplicationContext;
+#getSessionMutex(Ljakarta/faces/context/FacesContext;)Ljava/lang/Object;
-#getWebApplicationContext(Ljavax/faces/context/FacesContext;)Lorg/springframework/web/context/WebApplicationContext;
-#getRequiredWebApplicationContext(Ljavax/faces/context/FacesContext;)Lorg/springframework/web/context/WebApplicationContext;
-#getSessionMutex(Ljavax/faces/context/FacesContext;)Ljava/lang/Object;

+###org/springframework/web/multipart/MaxUploadSizeExceededException
@1.0.1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(J)V
+#<init>(JLjava/lang/Throwable;)V
+#getMaxUploadSize()J
@1.2-rc1
-#<init>(Ljava/lang/String;)V
-#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@2.5.1
-###org/springframework/web/multipart/MaxUploadSizeExceededException

+###org/springframework/web/multipart/MultipartException
@1.0-rc1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@2.5.1
-###org/springframework/web/multipart/MultipartException

+###org/springframework/web/multipart/MultipartFile
@1.0-rc1
+#getName()Ljava/lang/String;
+#isEmpty()Z
+#getOriginalFilename()Ljava/lang/String;
+#getContentType()Ljava/lang/String;
+#getSize()J
+#getBytes()[B
+#getInputStream()Ljava/io/InputStream;
+#transferTo(Ljava/io/File;)V
@2.5.1
-###org/springframework/web/multipart/MultipartFile

+###org/springframework/web/multipart/MultipartHttpServletRequest
@1.0-rc1
+#getFileNames()Ljava/util/Iterator;
+#getFile(Ljava/lang/String;)Lorg/springframework/web/multipart/MultipartFile;
+#getFileMap()Ljava/util/Map;
@2.5.1
-###org/springframework/web/multipart/MultipartHttpServletRequest

+###org/springframework/web/multipart/MultipartResolver
@1.0-rc1
+#isMultipart(Ljavax/servlet/http/HttpServletRequest;)Z
+#resolveMultipart(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/multipart/MultipartHttpServletRequest;
+#cleanupMultipart(Lorg/springframework/web/multipart/MultipartHttpServletRequest;)V
@2.5.1
-###org/springframework/web/multipart/MultipartResolver

+###org/springframework/web/multipart/commons/CommonsMultipartFile
@1.0-rc1
+#getFileItem()Lorg/apache/commons/fileupload/FileItem;
+#getName()Ljava/lang/String;
+#isEmpty()Z
+#getOriginalFilename()Ljava/lang/String;
+#getContentType()Ljava/lang/String;
+#getSize()J
+#getBytes()[B
+#getInputStream()Ljava/io/InputStream;
+#transferTo(Ljava/io/File;)V
@1.2.9
+#<init>(Lorg/apache/commons/fileupload/FileItem;)V
+#getStorageDescription()Ljava/lang/String;
@2.0-m1
-#<init>(Lorg/apache/commons/fileupload/FileItem;)V
-#getStorageDescription()Ljava/lang/String;
@2.0-m2
+#<init>(Lorg/apache/commons/fileupload/FileItem;)V
+#getStorageDescription()Ljava/lang/String;
@2.5.1
-###org/springframework/web/multipart/commons/CommonsMultipartFile

+###org/springframework/web/multipart/commons/CommonsMultipartResolver
@1.0-rc1
+#<init>()V
+#<init>(Ljavax/servlet/ServletContext;)V
+#getFileUpload()Lorg/apache/commons/fileupload/DiskFileUpload;
+#setMaxUploadSize(J)V
+#setMaxInMemorySize(I)V
+#setHeaderEncoding(Ljava/lang/String;)V
+#setUploadTempDir(Lorg/springframework/core/io/Resource;)V
+#isMultipart(Ljavax/servlet/http/HttpServletRequest;)Z
+#resolveMultipart(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/multipart/MultipartHttpServletRequest;
+#cleanupMultipart(Lorg/springframework/web/multipart/MultipartHttpServletRequest;)V
@1.0
+#setDefaultEncoding(Ljava/lang/String;)V
+#setServletContext(Ljavax/servlet/ServletContext;)V
-#setHeaderEncoding(Ljava/lang/String;)V
@2.0-m2
-#getFileUpload()Lorg/apache/commons/fileupload/DiskFileUpload;
-#setMaxUploadSize(J)V
-#setMaxInMemorySize(I)V
-#setDefaultEncoding(Ljava/lang/String;)V
-#setUploadTempDir(Lorg/springframework/core/io/Resource;)V
@2.5
+#setResolveLazily(Z)V
@2.5.1
-###org/springframework/web/multipart/commons/CommonsMultipartResolver

+###org/springframework/web/multipart/cos/CosMultipartHttpServletRequest
@1.0-rc1
+#getMultipartRequest()Lcom/oreilly/servlet/MultipartRequest;
+#getParameterNames()Ljava/util/Enumeration;
+#getParameter(Ljava/lang/String;)Ljava/lang/String;
+#getParameterValues(Ljava/lang/String;)[Ljava/lang/String;
+#getParameterMap()Ljava/util/Map;
@2.5
-###org/springframework/web/multipart/cos/CosMultipartHttpServletRequest

+###org/springframework/web/multipart/cos/CosMultipartResolver
@1.0-rc1
+#<init>()V
+#<init>(Ljavax/servlet/ServletContext;)V
+#setMaxUploadSize(I)V
+#setHeaderEncoding(Ljava/lang/String;)V
+#setUploadTempDir(Lorg/springframework/core/io/Resource;)V
+#isMultipart(Ljavax/servlet/http/HttpServletRequest;)Z
+#resolveMultipart(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/multipart/MultipartHttpServletRequest;
+#cleanupMultipart(Lorg/springframework/web/multipart/MultipartHttpServletRequest;)V
@1.0
+#setDefaultEncoding(Ljava/lang/String;)V
+#setServletContext(Ljavax/servlet/ServletContext;)V
-#setHeaderEncoding(Ljava/lang/String;)V
@2.5
-###org/springframework/web/multipart/cos/CosMultipartResolver

+###org/springframework/web/multipart/support/AbstractMultipartHttpServletRequest
@1.0-rc1
+#getFileNames()Ljava/util/Iterator;
+#getFile(Ljava/lang/String;)Lorg/springframework/web/multipart/MultipartFile;
+#getFileMap()Ljava/util/Map;
@2.5.1
-###org/springframework/web/multipart/support/AbstractMultipartHttpServletRequest

+###org/springframework/web/multipart/support/ByteArrayMultipartFileEditor
@1.0-rc1
+#<init>()V
+#setValue(Ljava/lang/Object;)V
@1.2-rc2
+#getAsText()Ljava/lang/String;
@2.5.1
-###org/springframework/web/multipart/support/ByteArrayMultipartFileEditor

+###org/springframework/web/multipart/support/DefaultMultipartHttpServletRequest
@1.0-rc1
+#<init>(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;Ljava/util/Map;)V
+#getParameterNames()Ljava/util/Enumeration;
+#getParameter(Ljava/lang/String;)Ljava/lang/String;
+#getParameterValues(Ljava/lang/String;)[Ljava/lang/String;
+#getParameterMap()Ljava/util/Map;
@2.5
+#<init>(Ljavax/servlet/http/HttpServletRequest;)V
@2.5.1
-###org/springframework/web/multipart/support/DefaultMultipartHttpServletRequest

+###org/springframework/web/multipart/support/MultipartFilter
@1.0-rc1
+#<init>()V
+#setMultipartResolverBeanName(Ljava/lang/String;)V
@2.5.1
-###org/springframework/web/multipart/support/MultipartFilter

+###org/springframework/web/multipart/support/StringMultipartFileEditor
@1.0-rc1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#setValue(Ljava/lang/Object;)V
@1.2-rc2
+#setAsText(Ljava/lang/String;)V
@2.5.1
-###org/springframework/web/multipart/support/StringMultipartFileEditor

+###org/springframework/web/struts/ActionServletAwareProcessor
@1.0.1
+#<init>(Lorg/apache/struts/action/ActionServlet;)V
+#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#postProcessBeforeDestruction(Ljava/lang/Object;Ljava/lang/String;)V
@2.0-m5
-###org/springframework/web/struts/ActionServletAwareProcessor

+###org/springframework/web/struts/ActionSupport
@1.0.1
+#<init>()V
+#setServlet(Lorg/apache/struts/action/ActionServlet;)V
@2.0-m5
-###org/springframework/web/struts/ActionSupport

+###org/springframework/web/struts/ContextLoaderPlugIn
@1.0.1
+#<init>()V
+#setContextClassName(Ljava/lang/String;)V
+#setContextClass(Ljava/lang/Class;)V
+#getContextClass()Ljava/lang/Class;
+#setNamespace(Ljava/lang/String;)V
+#getNamespace()Ljava/lang/String;
+#setContextConfigLocation(Ljava/lang/String;)V
+#getContextConfigLocation()Ljava/lang/String;
+#init(Lorg/apache/struts/action/ActionServlet;Lorg/apache/struts/config/ModuleConfig;)V
+#getActionServlet()Lorg/apache/struts/action/ActionServlet;
+#getWebApplicationContext()Lorg/springframework/web/context/WebApplicationContext;
+#destroy()V
@1.1.3
+#getServletName()Ljava/lang/String;
+#getServletContext()Ljavax/servlet/ServletContext;
+#getModuleConfig()Lorg/apache/struts/config/ModuleConfig;
+#getModulePrefix()Ljava/lang/String;
@1.1.4
+#getServletContextAttributeName()Ljava/lang/String;
@2.0-m5
-###org/springframework/web/struts/ContextLoaderPlugIn

+###org/springframework/web/struts/DelegatingActionProxy
@1.0.1
+#<init>()V
+#setServlet(Lorg/apache/struts/action/ActionServlet;)V
+#execute(Lorg/apache/struts/action/ActionMapping;Lorg/apache/struts/action/ActionForm;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/apache/struts/action/ActionForward;
@1.1-rc1
-#setServlet(Lorg/apache/struts/action/ActionServlet;)V
@2.0-m5
-###org/springframework/web/struts/DelegatingActionProxy

+###org/springframework/web/struts/DelegatingActionUtils
@1.1-rc1
+#<init>()V
+#getRequiredWebApplicationContext(Lorg/apache/struts/action/ActionServlet;Lorg/apache/struts/config/ModuleConfig;)Lorg/springframework/web/context/WebApplicationContext;
+#determineActionBeanName(Lorg/apache/struts/action/ActionMapping;)Ljava/lang/String;
@1.2.6
+#getWebApplicationContext(Lorg/apache/struts/action/ActionServlet;Lorg/apache/struts/config/ModuleConfig;)Lorg/springframework/web/context/WebApplicationContext;
+#findRequiredWebApplicationContext(Lorg/apache/struts/action/ActionServlet;Lorg/apache/struts/config/ModuleConfig;)Lorg/springframework/web/context/WebApplicationContext;
@2.0-m4
+#getAutowireMode(Lorg/apache/struts/action/ActionServlet;)I
+#getDependencyCheck(Lorg/apache/struts/action/ActionServlet;)Z
@2.0-m5
-###org/springframework/web/struts/DelegatingActionUtils

+###org/springframework/web/struts/DelegatingRequestProcessor
@1.1-rc1
+#<init>()V
+#init(Lorg/apache/struts/action/ActionServlet;Lorg/apache/struts/config/ModuleConfig;)V
@2.0-m5
-###org/springframework/web/struts/DelegatingRequestProcessor

+###org/springframework/web/struts/DelegatingTilesRequestProcessor
@1.1-rc1
+#<init>()V
+#init(Lorg/apache/struts/action/ActionServlet;Lorg/apache/struts/config/ModuleConfig;)V
@2.0-m5
-###org/springframework/web/struts/DelegatingTilesRequestProcessor

+###org/springframework/web/struts/DispatchActionSupport
@1.0.1
+#<init>()V
+#setServlet(Lorg/apache/struts/action/ActionServlet;)V
@2.0-m5
-###org/springframework/web/struts/DispatchActionSupport

+###org/springframework/web/struts/LookupDispatchActionSupport
@1.1
+#<init>()V
+#setServlet(Lorg/apache/struts/action/ActionServlet;)V
@2.0-m5
-###org/springframework/web/struts/LookupDispatchActionSupport

+###org/springframework/web/struts/MappingDispatchActionSupport
@1.1.3
+#<init>()V
+#setServlet(Lorg/apache/struts/action/ActionServlet;)V
@2.0-m5
-###org/springframework/web/struts/MappingDispatchActionSupport

+###org/springframework/web/util/ExpressionEvaluationUtils
@1.0-rc1
+#<init>()V
+#isExpressionLanguage(Ljava/lang/String;)Z
+#evaluate(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljavax/servlet/jsp/PageContext;)Ljava/lang/Object;
+#evaluateString(Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/jsp/PageContext;)Ljava/lang/String;
+#evaluateInteger(Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/jsp/PageContext;)I
+#evaluateBoolean(Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/jsp/PageContext;)Z
@1.2.6
+#evaluate(Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/jsp/PageContext;)Ljava/lang/Object;
@2.5.6.SEC03
+#isSpringJspExpressionSupportActive(Ljavax/servlet/jsp/PageContext;)Z
@3.0.0.RELEASE
-#isSpringJspExpressionSupportActive(Ljavax/servlet/jsp/PageContext;)Z
@3.0.6.RELEASE
+#isSpringJspExpressionSupportActive(Ljavax/servlet/jsp/PageContext;)Z
@4.0.0.RELEASE
-###org/springframework/web/util/ExpressionEvaluationUtils

+###org/springframework/web/util/HtmlUtils
@1.0-rc1
+#<init>()V
+#htmlEscape(Ljava/lang/String;)Ljava/lang/String;
+#htmlUnescape(Ljava/lang/String;)Ljava/lang/String;
@1.2.1
+#htmlEscapeDecimal(Ljava/lang/String;)Ljava/lang/String;
+#htmlEscapeHex(Ljava/lang/String;)Ljava/lang/String;
@2.0.1
+#htmlEscapeQueryStringParameters(Ljava/lang/String;)Ljava/lang/String;
@2.0.5
-#htmlEscapeQueryStringParameters(Ljava/lang/String;)Ljava/lang/String;
@4.1.2.RELEASE
+#htmlEscape(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#htmlEscapeDecimal(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#htmlEscapeHex(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/web/util/IntrospectorCleanupListener
@1.1-rc1
+#<init>()V
+#contextInitialized(Ljavax/servlet/ServletContextEvent;)V
+#contextDestroyed(Ljavax/servlet/ServletContextEvent;)V
@6.0.0
+#contextInitialized(Ljakarta/servlet/ServletContextEvent;)V
+#contextDestroyed(Ljakarta/servlet/ServletContextEvent;)V
-#contextInitialized(Ljavax/servlet/ServletContextEvent;)V
-#contextDestroyed(Ljavax/servlet/ServletContextEvent;)V

+###org/springframework/web/util/JavaScriptUtils
@1.1.1
+#<init>()V
+#javaScriptEscape(Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/web/util/Log4jConfigListener
@1.0-rc1
+#<init>()V
+#contextInitialized(Ljavax/servlet/ServletContextEvent;)V
+#contextDestroyed(Ljavax/servlet/ServletContextEvent;)V
@5.0.0.RELEASE
-###org/springframework/web/util/Log4jConfigListener

+###org/springframework/web/util/Log4jConfigServlet
@1.0-rc1
+#<init>()V
+#init()V
+#destroy()V
+#doService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#getServletInfo()Ljava/lang/String;
@1.1-rc1
+#service(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#doService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@3.0.0.RELEASE
-###org/springframework/web/util/Log4jConfigServlet

+###org/springframework/web/util/Log4jWebConfigurer
@1.0-rc1
+#<init>()V
+#initLogging(Ljavax/servlet/ServletContext;)V
+#shutdownLogging(Ljavax/servlet/ServletContext;)V
@5.0.0.RELEASE
-###org/springframework/web/util/Log4jWebConfigurer

+###org/springframework/web/util/TagUtils
@1.0-rc1
+#<init>()V
+#getScope(Ljava/lang/String;)I
@2.0-m4
+#hasAncestorOfType(Ljavax/servlet/jsp/tagext/Tag;Ljava/lang/Class;)Z
@2.0
+#assertHasAncestorOfType(Ljavax/servlet/jsp/tagext/Tag;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V
@6.0.0
+#hasAncestorOfType(Ljakarta/servlet/jsp/tagext/Tag;Ljava/lang/Class;)Z
+#assertHasAncestorOfType(Ljakarta/servlet/jsp/tagext/Tag;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V
-#hasAncestorOfType(Ljavax/servlet/jsp/tagext/Tag;Ljava/lang/Class;)Z
-#assertHasAncestorOfType(Ljavax/servlet/jsp/tagext/Tag;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V

+###org/springframework/web/util/UrlPathHelper
@1.0-rc1
+#<init>()V
+#setAlwaysUseFullPath(Z)V
+#setUrlDecode(Z)V
+#getLookupPathForRequest(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#getPathWithinServletMapping(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#getPathWithinApplication(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#getServletPath(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#getContextPath(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#getRequestUri(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#decodeRequestString(Ljavax/servlet/ServletRequest;Ljava/lang/String;)Ljava/lang/String;
@1.0
+#setDefaultEncoding(Ljava/lang/String;)V
+#decodeRequestString(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;
-#decodeRequestString(Ljavax/servlet/ServletRequest;Ljava/lang/String;)Ljava/lang/String;
@2.0-m5
+#getOriginatingRequestUri(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
@2.0-rc2
+#getOriginatingContextPath(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#getOriginatingQueryString(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
@3.1.0.RELEASE
+#getOriginatingServletPath(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
@3.2.0.RELEASE
+#setRemoveSemicolonContent(Z)V
+#shouldRemoveSemicolonContent()Z
+#removeSemicolonContent(Ljava/lang/String;)Ljava/lang/String;
+#decodePathVariables(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/util/Map;
@3.2.1.RELEASE
+#decodeMatrixVariables(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/util/MultiValueMap;)Lorg/springframework/util/MultiValueMap;
@4.3.13.RELEASE
+#isUrlDecode()Z
@5.0.0.RELEASE
-#isUrlDecode()Z
@5.0.2.RELEASE
+#isUrlDecode()Z
@5.2.0.RELEASE
+#getLookupPathForRequest(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;
@5.3.0
+#resolveAndCacheLookupPath(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#getResolvedLookupPath(Ljavax/servlet/ServletRequest;)Ljava/lang/String;
*#getLookupPathForRequest(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;[deprecated]
@6.0.0
+#resolveAndCacheLookupPath(Ljakarta/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#getResolvedLookupPath(Ljakarta/servlet/ServletRequest;)Ljava/lang/String;
+#getLookupPathForRequest(Ljakarta/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;[deprecated]
+#getLookupPathForRequest(Ljakarta/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#getPathWithinServletMapping(Ljakarta/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#getPathWithinApplication(Ljakarta/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#getRequestUri(Ljakarta/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#getContextPath(Ljakarta/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#getServletPath(Ljakarta/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#getOriginatingRequestUri(Ljakarta/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#getOriginatingContextPath(Ljakarta/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#getOriginatingServletPath(Ljakarta/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#getOriginatingQueryString(Ljakarta/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#decodeRequestString(Ljakarta/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;
+#decodePathVariables(Ljakarta/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/util/Map;
+#decodeMatrixVariables(Ljakarta/servlet/http/HttpServletRequest;Lorg/springframework/util/MultiValueMap;)Lorg/springframework/util/MultiValueMap;
-#resolveAndCacheLookupPath(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
-#getResolvedLookupPath(Ljavax/servlet/ServletRequest;)Ljava/lang/String;
-#getLookupPathForRequest(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;[deprecated]
-#getLookupPathForRequest(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
-#getPathWithinServletMapping(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
-#getPathWithinApplication(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
-#getRequestUri(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
-#getContextPath(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
-#getServletPath(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
-#getOriginatingRequestUri(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
-#getOriginatingContextPath(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
-#getOriginatingServletPath(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
-#getOriginatingQueryString(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
-#decodeRequestString(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;
-#decodePathVariables(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/util/Map;
-#decodeMatrixVariables(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/util/MultiValueMap;)Lorg/springframework/util/MultiValueMap;

+###org/springframework/web/util/WebAppRootListener
@1.0-rc1
+#<init>()V
+#contextInitialized(Ljavax/servlet/ServletContextEvent;)V
+#contextDestroyed(Ljavax/servlet/ServletContextEvent;)V
@6.0.0
+#contextInitialized(Ljakarta/servlet/ServletContextEvent;)V
+#contextDestroyed(Ljakarta/servlet/ServletContextEvent;)V
-#contextInitialized(Ljavax/servlet/ServletContextEvent;)V
-#contextDestroyed(Ljavax/servlet/ServletContextEvent;)V

+###org/springframework/web/util/WebUtils
@1.0-rc1
+#<init>()V
+#setWebAppRootSystemProperty(Ljavax/servlet/ServletContext;)V
+#getTempDir(Ljavax/servlet/ServletContext;)Ljava/io/File;
+#getSessionAttribute(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/Object;
+#setSessionAttribute(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Ljava/lang/Object;)V
+#getOrCreateSessionAttribute(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#getCookie(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljavax/servlet/http/Cookie;
+#getParametersStartingWith(Ljavax/servlet/ServletRequest;Ljava/lang/String;)Ljava/util/Map;
+#hasSubmitParameter(Ljavax/servlet/ServletRequest;Ljava/lang/String;)Z
@1.0
+#getRequiredSessionAttribute(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/Object;
+#getOrCreateSessionAttribute(Ljavax/servlet/http/HttpSession;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
-#getOrCreateSessionAttribute(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
@1.1-rc1
+#isDefaultHtmlEscape(Ljavax/servlet/ServletContext;)Z
+#getSessionId(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
@1.1.4
+#removeWebAppRootSystemProperty(Ljavax/servlet/ServletContext;)V
+#exposeRequestAttributes(Ljavax/servlet/ServletRequest;Ljava/util/Map;)V
@1.1.5
+#getRealPath(Ljavax/servlet/ServletContext;Ljava/lang/String;)Ljava/lang/String;
@1.2.6
+#extractFilenameFromUrlPath(Ljava/lang/String;)Ljava/lang/String;
@1.2.7
+#getSessionMutex(Ljavax/servlet/http/HttpSession;)Ljava/lang/Object;
@1.2.8
+#isIncludeRequest(Ljavax/servlet/ServletRequest;)Z
@2.0-m1
-#getSessionMutex(Ljavax/servlet/http/HttpSession;)Ljava/lang/Object;
-#isIncludeRequest(Ljavax/servlet/ServletRequest;)Z
@2.0-m2
+#getSessionMutex(Ljavax/servlet/http/HttpSession;)Ljava/lang/Object;
@2.0-m4
+#isIncludeRequest(Ljavax/servlet/ServletRequest;)Z
@2.0-rc2
+#exposeForwardRequestAttributes(Ljavax/servlet/http/HttpServletRequest;)V
@2.5
+#getDefaultHtmlEscape(Ljavax/servlet/ServletContext;)Ljava/lang/Boolean;
+#getTargetPage(Ljavax/servlet/ServletRequest;Ljava/lang/String;I)I
@2.5.4
+#findParameterValue(Ljavax/servlet/ServletRequest;Ljava/lang/String;)Ljava/lang/String;
+#findParameterValue(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;
@2.5.5
+#exposeErrorRequestAttributes(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/Throwable;Ljava/lang/String;)V
@2.5.6
+#clearErrorRequestAttributes(Ljavax/servlet/http/HttpServletRequest;)V
@3.0.0.RELEASE
+#extractFullFilenameFromUrlPath(Ljava/lang/String;)Ljava/lang/String;
@3.0.6.RELEASE
+#getNativeRequest(Ljavax/servlet/ServletRequest;Ljava/lang/Class;)Ljava/lang/Object;
+#getNativeResponse(Ljavax/servlet/ServletResponse;Ljava/lang/Class;)Ljava/lang/Object;
@3.2.0.RELEASE
+#parseMatrixVariables(Ljava/lang/String;)Lorg/springframework/util/MultiValueMap;
@4.0.0.RELEASE
-#exposeForwardRequestAttributes(Ljavax/servlet/http/HttpServletRequest;)V
@4.1.2.RELEASE
*#isDefaultHtmlEscape(Ljavax/servlet/ServletContext;)Z[deprecated]
+#getResponseEncodedHtmlEscape(Ljavax/servlet/ServletContext;)Ljava/lang/Boolean;
@4.1.5.RELEASE
+#isValidOrigin(Lorg/springframework/http/HttpRequest;Ljava/util/Collection;)Z
@4.2.0.RELEASE
+#isSameOrigin(Lorg/springframework/http/HttpRequest;)Z
@4.3.2.RELEASE
*#getOrCreateSessionAttribute(Ljavax/servlet/http/HttpSession;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;[deprecated]
*#exposeRequestAttributes(Ljavax/servlet/ServletRequest;Ljava/util/Map;)V[deprecated]
*#getTargetPage(Ljavax/servlet/ServletRequest;Ljava/lang/String;I)I[deprecated]
*#extractFilenameFromUrlPath(Ljava/lang/String;)Ljava/lang/String;[deprecated]
*#extractFullFilenameFromUrlPath(Ljava/lang/String;)Ljava/lang/String;[deprecated]
@5.0.0.RELEASE
-#isDefaultHtmlEscape(Ljavax/servlet/ServletContext;)Z[deprecated]
-#getOrCreateSessionAttribute(Ljavax/servlet/http/HttpSession;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;[deprecated]
-#exposeRequestAttributes(Ljavax/servlet/ServletRequest;Ljava/util/Map;)V[deprecated]
-#getTargetPage(Ljavax/servlet/ServletRequest;Ljava/lang/String;I)I[deprecated]
-#extractFilenameFromUrlPath(Ljava/lang/String;)Ljava/lang/String;[deprecated]
-#extractFullFilenameFromUrlPath(Ljava/lang/String;)Ljava/lang/String;[deprecated]
@6.0.0
+#setWebAppRootSystemProperty(Ljakarta/servlet/ServletContext;)V
+#removeWebAppRootSystemProperty(Ljakarta/servlet/ServletContext;)V
+#getDefaultHtmlEscape(Ljakarta/servlet/ServletContext;)Ljava/lang/Boolean;
+#getResponseEncodedHtmlEscape(Ljakarta/servlet/ServletContext;)Ljava/lang/Boolean;
+#getTempDir(Ljakarta/servlet/ServletContext;)Ljava/io/File;
+#getRealPath(Ljakarta/servlet/ServletContext;Ljava/lang/String;)Ljava/lang/String;
+#getSessionId(Ljakarta/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#getSessionAttribute(Ljakarta/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/Object;
+#getRequiredSessionAttribute(Ljakarta/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/Object;
+#setSessionAttribute(Ljakarta/servlet/http/HttpServletRequest;Ljava/lang/String;Ljava/lang/Object;)V
+#getSessionMutex(Ljakarta/servlet/http/HttpSession;)Ljava/lang/Object;
+#getNativeRequest(Ljakarta/servlet/ServletRequest;Ljava/lang/Class;)Ljava/lang/Object;
+#getNativeResponse(Ljakarta/servlet/ServletResponse;Ljava/lang/Class;)Ljava/lang/Object;
+#isIncludeRequest(Ljakarta/servlet/ServletRequest;)Z
+#exposeErrorRequestAttributes(Ljakarta/servlet/http/HttpServletRequest;Ljava/lang/Throwable;Ljava/lang/String;)V
+#clearErrorRequestAttributes(Ljakarta/servlet/http/HttpServletRequest;)V
+#getCookie(Ljakarta/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljakarta/servlet/http/Cookie;
+#hasSubmitParameter(Ljakarta/servlet/ServletRequest;Ljava/lang/String;)Z
+#findParameterValue(Ljakarta/servlet/ServletRequest;Ljava/lang/String;)Ljava/lang/String;
+#getParametersStartingWith(Ljakarta/servlet/ServletRequest;Ljava/lang/String;)Ljava/util/Map;
-#setWebAppRootSystemProperty(Ljavax/servlet/ServletContext;)V
-#removeWebAppRootSystemProperty(Ljavax/servlet/ServletContext;)V
-#getDefaultHtmlEscape(Ljavax/servlet/ServletContext;)Ljava/lang/Boolean;
-#getResponseEncodedHtmlEscape(Ljavax/servlet/ServletContext;)Ljava/lang/Boolean;
-#getTempDir(Ljavax/servlet/ServletContext;)Ljava/io/File;
-#getRealPath(Ljavax/servlet/ServletContext;Ljava/lang/String;)Ljava/lang/String;
-#getSessionId(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
-#getSessionAttribute(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/Object;
-#getRequiredSessionAttribute(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/Object;
-#setSessionAttribute(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Ljava/lang/Object;)V
-#getSessionMutex(Ljavax/servlet/http/HttpSession;)Ljava/lang/Object;
-#getNativeRequest(Ljavax/servlet/ServletRequest;Ljava/lang/Class;)Ljava/lang/Object;
-#getNativeResponse(Ljavax/servlet/ServletResponse;Ljava/lang/Class;)Ljava/lang/Object;
-#isIncludeRequest(Ljavax/servlet/ServletRequest;)Z
-#exposeErrorRequestAttributes(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/Throwable;Ljava/lang/String;)V
-#clearErrorRequestAttributes(Ljavax/servlet/http/HttpServletRequest;)V
-#getCookie(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljavax/servlet/http/Cookie;
-#hasSubmitParameter(Ljavax/servlet/ServletRequest;Ljava/lang/String;)Z
-#findParameterValue(Ljavax/servlet/ServletRequest;Ljava/lang/String;)Ljava/lang/String;
-#getParametersStartingWith(Ljavax/servlet/ServletRequest;Ljava/lang/String;)Ljava/util/Map;

+###org/springframework/http/StreamingHttpOutputMessage
@4.0.0.RELEASE
+#setBody(Lorg/springframework/http/StreamingHttpOutputMessage$Body;)V

+###org/springframework/http/HttpHeaders
@3.0.0.RELEASE
+#<init>()V
+#setAccept(Ljava/util/List;)V
+#getAccept()Ljava/util/List;
+#setAcceptCharset(Ljava/util/List;)V
+#getAcceptCharset()Ljava/util/List;
+#setAllow(Ljava/util/Set;)V
+#getAllow()Ljava/util/Set;
+#setCacheControl(Ljava/lang/String;)V
+#getCacheControl()Ljava/lang/String;
+#setContentLength(J)V
+#getContentLength()J
+#setContentType(Lorg/springframework/http/MediaType;)V
+#getContentType()Lorg/springframework/http/MediaType;
+#setDate(J)V
+#getDate()J
+#setETag(Ljava/lang/String;)V
+#getETag()Ljava/lang/String;
+#setExpires(J)V
+#getExpires()J
+#setIfModifiedSince(J)V
+#getIfNotModifiedSince()J
+#setIfNoneMatch(Ljava/lang/String;)V
+#setIfNoneMatch(Ljava/util/List;)V
+#getIfNoneMatch()Ljava/util/List;
+#setLastModified(J)V
+#getLastModified()J
+#setLocation(Ljava/net/URI;)V
+#getLocation()Ljava/net/URI;
+#setPragma(Ljava/lang/String;)V
+#getPragma()Ljava/lang/String;
+#getFirst(Ljava/lang/String;)Ljava/lang/String;
+#add(Ljava/lang/String;Ljava/lang/String;)V
+#set(Ljava/lang/String;Ljava/lang/String;)V
+#setAll(Ljava/util/Map;)V
+#toSingleValueMap()Ljava/util/Map;
+#size()I
+#isEmpty()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/util/List;
+#put(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
+#remove(Ljava/lang/Object;)Ljava/util/List;
+#putAll(Ljava/util/Map;)V
+#clear()V
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#add(Ljava/lang/Object;Ljava/lang/Object;)V
+#set(Ljava/lang/Object;Ljava/lang/Object;)V
+#getFirst(Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@3.0.2.RELEASE
+#readOnlyHttpHeaders(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/HttpHeaders;
+#setContentDispositionFormData(Ljava/lang/String;Ljava/lang/String;)V
@3.2.4.RELEASE
*#getIfNotModifiedSince()J[deprecated]
+#getIfModifiedSince()J
+#getFirstDate(Ljava/lang/String;)J
+#setDate(Ljava/lang/String;J)V
@4.0.0.RELEASE
+#setConnection(Ljava/lang/String;)V
+#setConnection(Ljava/util/List;)V
+#getConnection()Ljava/util/List;
+#setOrigin(Ljava/lang/String;)V
+#getOrigin()Ljava/lang/String;
+#setUpgrade(Ljava/lang/String;)V
+#getUpgrade()Ljava/lang/String;
@4.2.0.RELEASE
+#setAccessControlAllowCredentials(Z)V
+#getAccessControlAllowCredentials()Z
+#setAccessControlAllowHeaders(Ljava/util/List;)V
+#getAccessControlAllowHeaders()Ljava/util/List;
+#setAccessControlAllowMethods(Ljava/util/List;)V
+#getAccessControlAllowMethods()Ljava/util/List;
+#setAccessControlAllowOrigin(Ljava/lang/String;)V
+#getAccessControlAllowOrigin()Ljava/lang/String;
+#setAccessControlExposeHeaders(Ljava/util/List;)V
+#getAccessControlExposeHeaders()Ljava/util/List;
+#setAccessControlMaxAge(J)V
+#getAccessControlMaxAge()J
+#setAccessControlRequestHeaders(Ljava/util/List;)V
+#getAccessControlRequestHeaders()Ljava/util/List;
+#setAccessControlRequestMethod(Lorg/springframework/http/HttpMethod;)V
+#getAccessControlRequestMethod()Lorg/springframework/http/HttpMethod;
+#setRange(Ljava/util/List;)V
+#getRange()Ljava/util/List;
-#getIfNotModifiedSince()J[deprecated]
@4.3.0.RELEASE
+#setIfMatch(Ljava/lang/String;)V
+#setIfMatch(Ljava/util/List;)V
+#getIfMatch()Ljava/util/List;
+#getValuesAsList(Ljava/lang/String;)Ljava/util/List;
+#setIfUnmodifiedSince(J)V
+#getIfUnmodifiedSince()J
+#setVary(Ljava/util/List;)V
+#getVary()Ljava/util/List;
@4.3.3.RELEASE
+#setContentDispositionFormData(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
@4.3.11.RELEASE
*#setContentDispositionFormData(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V[deprecated]
@5.0.0.RELEASE
+#setAcceptLanguage(Ljava/util/List;)V
+#getAcceptLanguage()Ljava/util/List;
+#setAcceptLanguageAsLocales(Ljava/util/List;)V
+#getAcceptLanguageAsLocales()Ljava/util/List;
+#setContentDisposition(Lorg/springframework/http/ContentDisposition;)V
+#getContentDisposition()Lorg/springframework/http/ContentDisposition;
+#setContentLanguage(Ljava/util/Locale;)V
+#getContentLanguage()Ljava/util/Locale;
+#setHost(Ljava/net/InetSocketAddress;)V
+#getHost()Ljava/net/InetSocketAddress;
+#setZonedDateTime(Ljava/lang/String;Ljava/time/ZonedDateTime;)V
+#getFirstZonedDateTime(Ljava/lang/String;)Ljava/time/ZonedDateTime;
+#addAll(Ljava/lang/String;Ljava/util/List;)V
+#addAll(Lorg/springframework/util/MultiValueMap;)V
+#addAll(Ljava/lang/Object;Ljava/util/List;)V
-#setContentDispositionFormData(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V[deprecated]
@5.0.5.RELEASE
+#setCacheControl(Lorg/springframework/http/CacheControl;)V
+#setExpires(Ljava/time/ZonedDateTime;)V
@5.1.0.RELEASE
+#setBasicAuth(Ljava/lang/String;Ljava/lang/String;)V
+#setBasicAuth(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
+#setBearerAuth(Ljava/lang/String;)V
@5.1.1.RELEASE
+#<init>(Lorg/springframework/util/MultiValueMap;)V
+#writableHttpHeaders(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/HttpHeaders;
@5.1.4.RELEASE
+#setIfModifiedSince(Ljava/time/ZonedDateTime;)V
+#setIfModifiedSince(Ljava/time/Instant;)V
+#setIfUnmodifiedSince(Ljava/time/ZonedDateTime;)V
+#setIfUnmodifiedSince(Ljava/time/Instant;)V
+#setLastModified(Ljava/time/ZonedDateTime;)V
+#setLastModified(Ljava/time/Instant;)V
+#setInstant(Ljava/lang/String;Ljava/time/Instant;)V
+#formatHeaders(Lorg/springframework/util/MultiValueMap;)Ljava/lang/String;
@5.2.0.RELEASE
+#getOrEmpty(Ljava/lang/Object;)Ljava/util/List;
+#setAccessControlMaxAge(Ljava/time/Duration;)V
+#setBasicAuth(Ljava/lang/String;)V
+#setDate(Ljava/time/ZonedDateTime;)V
+#setDate(Ljava/time/Instant;)V
+#setExpires(Ljava/time/Instant;)V
+#encodeBasicAuth(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
@5.2.3.RELEASE
+#clearContentHeaders()V
@5.3.0
+#readOnlyHttpHeaders(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/http/HttpHeaders;
@5.3.6
+#setAcceptPatch(Ljava/util/List;)V
+#getAcceptPatch()Ljava/util/List;

+###org/springframework/http/HttpRequest
@3.1.0.RELEASE
+#getMethod()Lorg/springframework/http/HttpMethod;
+#getURI()Ljava/net/URI;
@5.0.0.RELEASE
+#getMethodValue()Ljava/lang/String;
@6.0.0
*#getMethodValue()Ljava/lang/String;[deprecated]

+###org/springframework/http/RequestEntity$BodyBuilder
@4.1.0.RELEASE
+#contentLength(J)Lorg/springframework/http/RequestEntity$BodyBuilder;
+#contentType(Lorg/springframework/http/MediaType;)Lorg/springframework/http/RequestEntity$BodyBuilder;
+#body(Ljava/lang/Object;)Lorg/springframework/http/RequestEntity;
@4.3.0.RELEASE
+#body(Ljava/lang/Object;Ljava/lang/reflect/Type;)Lorg/springframework/http/RequestEntity;

+###org/springframework/http/ContentDisposition
@5.0.0.RELEASE
+#getType()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getFilename()Ljava/lang/String;
+#getCharset()Ljava/nio/charset/Charset;
+#getSize()Ljava/lang/Long;
+#getCreationDate()Ljava/time/ZonedDateTime;
+#getModificationDate()Ljava/time/ZonedDateTime;
+#getReadDate()Ljava/time/ZonedDateTime;
+#builder(Ljava/lang/String;)Lorg/springframework/http/ContentDisposition$Builder;
+#empty()Lorg/springframework/http/ContentDisposition;
+#parse(Ljava/lang/String;)Lorg/springframework/http/ContentDisposition;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@5.2.3.RELEASE
*#getSize()Ljava/lang/Long;[deprecated]
*#getCreationDate()Ljava/time/ZonedDateTime;[deprecated]
*#getModificationDate()Ljava/time/ZonedDateTime;[deprecated]
*#getReadDate()Ljava/time/ZonedDateTime;[deprecated]
@5.3.0
+#isAttachment()Z
+#isFormData()Z
+#isInline()Z
+#attachment()Lorg/springframework/http/ContentDisposition$Builder;
+#formData()Lorg/springframework/http/ContentDisposition$Builder;
+#inline()Lorg/springframework/http/ContentDisposition$Builder;

+###org/springframework/http/HttpEntity
@3.0.2.RELEASE
+#<init>(Ljava/lang/Object;)V
+#<init>(Lorg/springframework/util/MultiValueMap;)V
+#<init>(Ljava/lang/Object;Lorg/springframework/util/MultiValueMap;)V
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#getBody()Ljava/lang/Object;
+#hasBody()Z
@3.1.0.RELEASE
+#toString()Ljava/lang/String;
@3.2.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/http/HttpInputMessage
@3.0.0.RELEASE
+#getBody()Ljava/io/InputStream;

+###org/springframework/http/MediaTypeEditor
@3.0.0.RELEASE
+#<init>()V
+#setAsText(Ljava/lang/String;)V
+#getAsText()Ljava/lang/String;

+###org/springframework/http/client/ClientHttpRequestFactory
@3.0.0.RELEASE
+#createRequest(Ljava/net/URI;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/client/ClientHttpRequest;

+###org/springframework/http/client/ClientHttpResponse
@3.0.0.RELEASE
+#getStatusCode()Lorg/springframework/http/HttpStatus;
+#getStatusText()Ljava/lang/String;
+#close()V
@3.1.1.RELEASE
+#getRawStatusCode()I
@6.0.0
+#getStatusCode()Lorg/springframework/http/HttpStatusCode;
*#getRawStatusCode()I[deprecated]
-#getStatusCode()Lorg/springframework/http/HttpStatus;

+###org/springframework/http/client/AbstractClientHttpRequest
@3.0.0.RELEASE
+#<init>()V
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#getBody()Ljava/io/OutputStream;
+#execute()Lorg/springframework/http/client/ClientHttpResponse;

+###org/springframework/http/client/InterceptingAsyncClientHttpRequestFactory
@4.3.0.RELEASE
+#<init>(Lorg/springframework/http/client/AsyncClientHttpRequestFactory;Ljava/util/List;)V
+#createAsyncRequest(Ljava/net/URI;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/client/AsyncClientHttpRequest;
@6.0.0
-###org/springframework/http/client/InterceptingAsyncClientHttpRequestFactory

+###org/springframework/http/client/support/HttpAccessor
@3.0.0.RELEASE
+#<init>()V
+#setRequestFactory(Lorg/springframework/http/client/ClientHttpRequestFactory;)V
+#getRequestFactory()Lorg/springframework/http/client/ClientHttpRequestFactory;
@5.2.0.RELEASE
+#setClientHttpRequestInitializers(Ljava/util/List;)V
+#getClientHttpRequestInitializers()Ljava/util/List;

+###org/springframework/http/client/support/InterceptingHttpAccessor
@3.1.0.RELEASE
+#<init>()V
+#setInterceptors(Ljava/util/List;)V
+#getInterceptors()Ljava/util/List;
+#getRequestFactory()Lorg/springframework/http/client/ClientHttpRequestFactory;
@5.0.2.RELEASE
+#setRequestFactory(Lorg/springframework/http/client/ClientHttpRequestFactory;)V

+###org/springframework/http/client/support/AsyncHttpAccessor
@4.0.0.RELEASE
+#<init>()V
+#setAsyncRequestFactory(Lorg/springframework/http/client/AsyncClientHttpRequestFactory;)V
+#getAsyncRequestFactory()Lorg/springframework/http/client/AsyncClientHttpRequestFactory;
@6.0.0
-###org/springframework/http/client/support/AsyncHttpAccessor

+###org/springframework/http/client/support/HttpRequestWrapper
@3.1.0.RELEASE
+#<init>(Lorg/springframework/http/HttpRequest;)V
+#getRequest()Lorg/springframework/http/HttpRequest;
+#getMethod()Lorg/springframework/http/HttpMethod;
+#getURI()Ljava/net/URI;
+#getHeaders()Lorg/springframework/http/HttpHeaders;
@5.0.0.RELEASE
+#getMethodValue()Ljava/lang/String;
@6.0.0
-#getMethodValue()Ljava/lang/String;

+###org/springframework/http/client/support/ProxyFactoryBean
@3.0.4.RELEASE
+#<init>()V
+#setType(Ljava/net/Proxy$Type;)V
+#setHostname(Ljava/lang/String;)V
+#setPort(I)V
+#afterPropertiesSet()V
+#getObject()Ljava/net/Proxy;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#getObject()Ljava/lang/Object;

+###org/springframework/http/client/support/InterceptingAsyncHttpAccessor
@4.3.0.RELEASE
+#<init>()V
+#setInterceptors(Ljava/util/List;)V
+#getInterceptors()Ljava/util/List;
+#getAsyncRequestFactory()Lorg/springframework/http/client/AsyncClientHttpRequestFactory;
@6.0.0
-###org/springframework/http/client/support/InterceptingAsyncHttpAccessor

+###org/springframework/http/client/support/BasicAuthorizationInterceptor
@4.3.1.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#intercept(Lorg/springframework/http/HttpRequest;[BLorg/springframework/http/client/ClientHttpRequestExecution;)Lorg/springframework/http/client/ClientHttpResponse;
@6.0.0
-###org/springframework/http/client/support/BasicAuthorizationInterceptor

+###org/springframework/http/client/SimpleClientHttpRequestFactory
@3.0.0.RELEASE
+#<init>()V
+#createRequest(Ljava/net/URI;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/client/ClientHttpRequest;
@3.0.4.RELEASE
+#setProxy(Ljava/net/Proxy;)V
@3.0.6.RELEASE
+#setConnectTimeout(I)V
+#setReadTimeout(I)V
@3.1.0.RELEASE
+#setBufferRequestBody(Z)V
+#setChunkSize(I)V
@3.2.2.RELEASE
+#setOutputStreaming(Z)V
@4.0.0.RELEASE
+#setTaskExecutor(Lorg/springframework/core/task/AsyncListenableTaskExecutor;)V
+#createAsyncRequest(Ljava/net/URI;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/client/AsyncClientHttpRequest;
@6.0.0
-#setTaskExecutor(Lorg/springframework/core/task/AsyncListenableTaskExecutor;)V
-#createAsyncRequest(Ljava/net/URI;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/client/AsyncClientHttpRequest;

+###org/springframework/http/client/HttpComponentsClientHttpRequestFactory
@3.1.0.RELEASE
+#<init>()V
+#<init>(Lorg/apache/http/client/HttpClient;)V
+#setHttpClient(Lorg/apache/http/client/HttpClient;)V
+#getHttpClient()Lorg/apache/http/client/HttpClient;
+#setConnectTimeout(I)V
+#setReadTimeout(I)V
+#createRequest(Ljava/net/URI;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/client/ClientHttpRequest;
+#destroy()V
@4.0.0.RELEASE
+#setBufferRequestBody(Z)V
@4.1.4.RELEASE
+#setConnectionRequestTimeout(I)V
@5.2.7.RELEASE
+#setHttpContextFactory(Ljava/util/function/BiFunction;)V
@6.0.0
+#<init>(Lorg/apache/hc/client5/http/classic/HttpClient;)V
+#setHttpClient(Lorg/apache/hc/client5/http/classic/HttpClient;)V
+#getHttpClient()Lorg/apache/hc/client5/http/classic/HttpClient;
*#setReadTimeout(I)V[deprecated]
-#<init>(Lorg/apache/http/client/HttpClient;)V
-#setHttpClient(Lorg/apache/http/client/HttpClient;)V
-#getHttpClient()Lorg/apache/http/client/HttpClient;

+###org/springframework/http/client/AsyncClientHttpRequestInterceptor
@4.3.0.RELEASE
+#intercept(Lorg/springframework/http/HttpRequest;[BLorg/springframework/http/client/AsyncClientHttpRequestExecution;)Lorg/springframework/util/concurrent/ListenableFuture;
@6.0.0
-###org/springframework/http/client/AsyncClientHttpRequestInterceptor

+###org/springframework/http/client/ClientHttpRequestInterceptor
@3.1.0.RELEASE
+#intercept(Lorg/springframework/http/HttpRequest;[BLorg/springframework/http/client/ClientHttpRequestExecution;)Lorg/springframework/http/client/ClientHttpResponse;

+###org/springframework/http/client/MultipartBodyBuilder$PartBuilder
@5.0.2.RELEASE
+#header(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/http/client/MultipartBodyBuilder$PartBuilder;
@5.0.3.RELEASE
+#headers(Ljava/util/function/Consumer;)Lorg/springframework/http/client/MultipartBodyBuilder$PartBuilder;
@5.2.0.RELEASE
+#contentType(Lorg/springframework/http/MediaType;)Lorg/springframework/http/client/MultipartBodyBuilder$PartBuilder;
+#filename(Ljava/lang/String;)Lorg/springframework/http/client/MultipartBodyBuilder$PartBuilder;

+###org/springframework/http/client/ClientHttpRequestExecution
@3.1.0.RELEASE
+#execute(Lorg/springframework/http/HttpRequest;[B)Lorg/springframework/http/client/ClientHttpResponse;

+###org/springframework/http/client/MultipartBodyBuilder
@5.0.2.RELEASE
+#<init>()V
+#build()Lorg/springframework/util/MultiValueMap;
+#part(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/http/client/MultipartBodyBuilder$PartBuilder;
+#part(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/http/MediaType;)Lorg/springframework/http/client/MultipartBodyBuilder$PartBuilder;
@5.0.3.RELEASE
+#asyncPart(Ljava/lang/String;Lorg/reactivestreams/Publisher;Ljava/lang/Class;)Lorg/springframework/http/client/MultipartBodyBuilder$PartBuilder;
+#asyncPart(Ljava/lang/String;Lorg/reactivestreams/Publisher;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/http/client/MultipartBodyBuilder$PartBuilder;

+###org/springframework/http/client/OkHttp3ClientHttpRequestFactory
@4.3.0.RELEASE
+#<init>()V
+#<init>(Lokhttp3/OkHttpClient;)V
+#setReadTimeout(I)V
+#setWriteTimeout(I)V
+#setConnectTimeout(I)V
+#createRequest(Ljava/net/URI;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/client/ClientHttpRequest;
+#createAsyncRequest(Ljava/net/URI;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/client/AsyncClientHttpRequest;
+#destroy()V
@6.0.0
-#createAsyncRequest(Ljava/net/URI;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/client/AsyncClientHttpRequest;

+###org/springframework/http/client/Netty4ClientHttpRequestFactory
@4.1.2.RELEASE
+#<init>()V
+#<init>(Lio/netty/channel/EventLoopGroup;)V
+#setMaxRequestSize(I)V
+#setSslContext(Lio/netty/handler/ssl/SslContext;)V
+#afterPropertiesSet()V
+#createRequest(Ljava/net/URI;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/client/ClientHttpRequest;
+#createAsyncRequest(Ljava/net/URI;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/client/AsyncClientHttpRequest;
+#destroy()V
@4.1.5.RELEASE
*#setMaxRequestSize(I)V[deprecated]
+#setMaxResponseSize(I)V
@4.2.0.RELEASE
+#setConnectTimeout(I)V
+#setReadTimeout(I)V
-#setMaxRequestSize(I)V[deprecated]
@6.0.0
-###org/springframework/http/client/Netty4ClientHttpRequestFactory

+###org/springframework/http/client/AsyncClientHttpRequestExecution
@4.3.0.RELEASE
+#executeAsync(Lorg/springframework/http/HttpRequest;[B)Lorg/springframework/util/concurrent/ListenableFuture;
@6.0.0
-###org/springframework/http/client/AsyncClientHttpRequestExecution

+###org/springframework/http/client/MultipartBodyBuilder$PublisherEntity
@5.0.3.RELEASE
+#getResolvableType()Lorg/springframework/core/ResolvableType;
@5.1.8.RELEASE
-###org/springframework/http/client/MultipartBodyBuilder$PublisherEntity

+###org/springframework/http/client/AbstractClientHttpResponse
@3.1.1.RELEASE
+#<init>()V
+#getStatusCode()Lorg/springframework/http/HttpStatus;
@6.0.0
+#getStatusCode()Lorg/springframework/http/HttpStatusCode;
-#getStatusCode()Lorg/springframework/http/HttpStatus;

+###org/springframework/http/client/HttpComponentsAsyncClientHttpRequestFactory
@4.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;)V
+#<init>(Lorg/apache/http/impl/client/CloseableHttpClient;Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;)V
+#setHttpAsyncClient(Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;)V
+#getHttpAsyncClient()Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;
+#afterPropertiesSet()V
+#createAsyncRequest(Ljava/net/URI;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/client/AsyncClientHttpRequest;
+#destroy()V
@4.3.10.RELEASE
+#<init>(Lorg/apache/http/nio/client/HttpAsyncClient;)V
+#<init>(Lorg/apache/http/client/HttpClient;Lorg/apache/http/nio/client/HttpAsyncClient;)V
+#setAsyncClient(Lorg/apache/http/nio/client/HttpAsyncClient;)V
+#getAsyncClient()Lorg/apache/http/nio/client/HttpAsyncClient;
*#setHttpAsyncClient(Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;)V[deprecated]
*#getHttpAsyncClient()Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;[deprecated]
@6.0.0
-###org/springframework/http/client/HttpComponentsAsyncClientHttpRequestFactory

+###org/springframework/http/client/BufferingClientHttpRequestFactory
@3.1.0.RELEASE
+#<init>(Lorg/springframework/http/client/ClientHttpRequestFactory;)V

+###org/springframework/http/client/reactive/ClientHttpResponse
@5.0.0.RELEASE
+#getStatusCode()Lorg/springframework/http/HttpStatus;
+#getCookies()Lorg/springframework/util/MultiValueMap;
@5.0.6.RELEASE
+#getRawStatusCode()I
@5.3.5
+#getId()Ljava/lang/String;
@6.0.0
+#getStatusCode()Lorg/springframework/http/HttpStatusCode;
*#getRawStatusCode()I[deprecated]
-#getStatusCode()Lorg/springframework/http/HttpStatus;

+###org/springframework/http/client/reactive/AbstractClientHttpRequest
@5.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/http/HttpHeaders;)V
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#getCookies()Lorg/springframework/util/MultiValueMap;
+#beforeCommit(Ljava/util/function/Supplier;)V
+#isCommitted()Z

+###org/springframework/http/client/reactive/ReactorClientHttpConnector
@5.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/function/Consumer;)V
+#connect(Lorg/springframework/http/HttpMethod;Ljava/net/URI;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
@5.1.0.RELEASE
+#<init>(Lorg/springframework/http/client/reactive/ReactorResourceFactory;Ljava/util/function/Function;)V
+#<init>(Lreactor/netty/http/client/HttpClient;)V
-#<init>(Ljava/util/function/Consumer;)V

+###org/springframework/http/client/reactive/ClientHttpResponseDecorator
@5.0.0.RELEASE
+#<init>(Lorg/springframework/http/client/reactive/ClientHttpResponse;)V
+#getDelegate()Lorg/springframework/http/client/reactive/ClientHttpResponse;
+#getStatusCode()Lorg/springframework/http/HttpStatus;
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#getCookies()Lorg/springframework/util/MultiValueMap;
+#getBody()Lreactor/core/publisher/Flux;
+#toString()Ljava/lang/String;
@5.0.6.RELEASE
+#getRawStatusCode()I
@5.3.5
+#getId()Ljava/lang/String;
@6.0.0
+#getStatusCode()Lorg/springframework/http/HttpStatusCode;
-#getStatusCode()Lorg/springframework/http/HttpStatus;
-#getRawStatusCode()I

+###org/springframework/http/client/reactive/ClientHttpConnector
@5.0.0.RELEASE
+#connect(Lorg/springframework/http/HttpMethod;Ljava/net/URI;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;

+###org/springframework/http/client/reactive/ClientHttpRequest
@5.0.0.RELEASE
+#getMethod()Lorg/springframework/http/HttpMethod;
+#getURI()Ljava/net/URI;
+#getCookies()Lorg/springframework/util/MultiValueMap;
@5.3.0
+#getNativeRequest()Ljava/lang/Object;

+###org/springframework/http/client/reactive/ClientHttpRequestDecorator
@5.0.0.RELEASE
+#<init>(Lorg/springframework/http/client/reactive/ClientHttpRequest;)V
+#getDelegate()Lorg/springframework/http/client/reactive/ClientHttpRequest;
+#getMethod()Lorg/springframework/http/HttpMethod;
+#getURI()Ljava/net/URI;
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#getCookies()Lorg/springframework/util/MultiValueMap;
+#bufferFactory()Lorg/springframework/core/io/buffer/DataBufferFactory;
+#beforeCommit(Ljava/util/function/Supplier;)V
+#isCommitted()Z
+#writeWith(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#writeAndFlushWith(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#setComplete()Lreactor/core/publisher/Mono;
+#toString()Ljava/lang/String;
@5.3.0
+#getNativeRequest()Ljava/lang/Object;

+###org/springframework/http/client/AsyncClientHttpRequestFactory
@4.0.0.RELEASE
+#createAsyncRequest(Ljava/net/URI;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/client/AsyncClientHttpRequest;
@6.0.0
-###org/springframework/http/client/AsyncClientHttpRequestFactory

+###org/springframework/http/client/ClientHttpRequest
@3.0.0.RELEASE
+#getMethod()Lorg/springframework/http/HttpMethod;
+#execute()Lorg/springframework/http/client/ClientHttpResponse;
@3.0.3.RELEASE
+#getURI()Ljava/net/URI;
@3.1.0.RELEASE
-#getMethod()Lorg/springframework/http/HttpMethod;
-#getURI()Ljava/net/URI;

+###org/springframework/http/client/AsyncClientHttpRequest
@4.0.0.RELEASE
+#executeAsync()Lorg/springframework/util/concurrent/ListenableFuture;
@6.0.0
-###org/springframework/http/client/AsyncClientHttpRequest

+###org/springframework/http/client/AbstractClientHttpRequestFactoryWrapper
@3.1.0.RELEASE
+#createRequest(Ljava/net/URI;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/client/ClientHttpRequest;

+###org/springframework/http/client/InterceptingClientHttpRequestFactory
@3.1.0.RELEASE
+#<init>(Lorg/springframework/http/client/ClientHttpRequestFactory;Ljava/util/List;)V

+###org/springframework/http/InvalidMediaTypeException
@3.2.2.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getMediaType()Ljava/lang/String;

+###org/springframework/http/codec/HttpMessageReader
@5.0.0.RELEASE
+#getReadableMediaTypes()Ljava/util/List;
+#canRead(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;)Z
+#read(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/ReactiveHttpInputMessage;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#readMono(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/ReactiveHttpInputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
+#read(Lorg/springframework/core/ResolvableType;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/server/reactive/ServerHttpRequest;Lorg/springframework/http/server/reactive/ServerHttpResponse;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#readMono(Lorg/springframework/core/ResolvableType;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/server/reactive/ServerHttpRequest;Lorg/springframework/http/server/reactive/ServerHttpResponse;Ljava/util/Map;)Lreactor/core/publisher/Mono;
@5.3.4
+#getReadableMediaTypes(Lorg/springframework/core/ResolvableType;)Ljava/util/List;

+###org/springframework/http/codec/ServerSentEventHttpMessageWriter
@5.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/core/codec/Encoder;)V
+#getEncoder()Lorg/springframework/core/codec/Encoder;
+#getWritableMediaTypes()Ljava/util/List;
+#canWrite(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;)Z
+#write(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;Lorg/springframework/http/ReactiveHttpOutputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
+#write(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;Lorg/springframework/http/server/reactive/ServerHttpRequest;Lorg/springframework/http/server/reactive/ServerHttpResponse;Ljava/util/Map;)Lreactor/core/publisher/Mono;

+###org/springframework/http/codec/CodecConfigurer$DefaultCodecs
@5.0.0.RELEASE
+#jackson2JsonDecoder(Lorg/springframework/http/codec/json/Jackson2JsonDecoder;)V
+#jackson2JsonEncoder(Lorg/springframework/http/codec/json/Jackson2JsonEncoder;)V
@5.0.1.RELEASE
+#jackson2JsonDecoder(Lorg/springframework/core/codec/Decoder;)V
+#jackson2JsonEncoder(Lorg/springframework/core/codec/Encoder;)V
-#jackson2JsonDecoder(Lorg/springframework/http/codec/json/Jackson2JsonDecoder;)V
-#jackson2JsonEncoder(Lorg/springframework/http/codec/json/Jackson2JsonEncoder;)V
@5.1.0.RELEASE
+#protobufDecoder(Lorg/springframework/core/codec/Decoder;)V
+#protobufEncoder(Lorg/springframework/core/codec/Encoder;)V
+#enableLoggingRequestDetails(Z)V
@5.1.3.RELEASE
+#jaxb2Decoder(Lorg/springframework/core/codec/Decoder;)V
+#jaxb2Encoder(Lorg/springframework/core/codec/Encoder;)V
@5.1.11.RELEASE
+#maxInMemorySize(I)V
@5.2.0.RELEASE
-#maxInMemorySize(I)V
@5.2.1.RELEASE
+#maxInMemorySize(I)V
@5.2.4.RELEASE
+#jackson2SmileDecoder(Lorg/springframework/core/codec/Decoder;)V
+#jackson2SmileEncoder(Lorg/springframework/core/codec/Encoder;)V
@5.3.0
+#kotlinSerializationJsonDecoder(Lorg/springframework/core/codec/Decoder;)V
+#kotlinSerializationJsonEncoder(Lorg/springframework/core/codec/Encoder;)V
@5.3.4
+#configureDefaultCodec(Ljava/util/function/Consumer;)V
@6.0.0
+#kotlinSerializationCborDecoder(Lorg/springframework/core/codec/Decoder;)V
+#kotlinSerializationCborEncoder(Lorg/springframework/core/codec/Encoder;)V
+#kotlinSerializationProtobufDecoder(Lorg/springframework/core/codec/Decoder;)V
+#kotlinSerializationProtobufEncoder(Lorg/springframework/core/codec/Encoder;)V
@6.0.3
+#multipartCodecs()Lorg/springframework/http/codec/CodecConfigurer$MultipartCodecs;
+#multipartReader(Lorg/springframework/http/codec/HttpMessageReader;)V

+###org/springframework/http/codec/multipart/MultipartHttpMessageReader
@5.0.0.RELEASE
+#<init>(Lorg/springframework/http/codec/HttpMessageReader;)V
+#getReadableMediaTypes()Ljava/util/List;
+#canRead(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;)Z
+#read(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/ReactiveHttpInputMessage;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#readMono(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/ReactiveHttpInputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
@5.1.11.RELEASE
+#getPartReader()Lorg/springframework/http/codec/HttpMessageReader;
@5.2.0.RELEASE
-#getPartReader()Lorg/springframework/http/codec/HttpMessageReader;
@5.2.1.RELEASE
+#getPartReader()Lorg/springframework/http/codec/HttpMessageReader;

+###org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader
@5.0.0.RELEASE
+#<init>()V
+#getReadableMediaTypes()Ljava/util/List;
+#canRead(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;)Z
+#read(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/ReactiveHttpInputMessage;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#readMono(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/ReactiveHttpInputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
@5.1.11.RELEASE
+#setMaxInMemorySize(I)V
+#getMaxInMemorySize()I
+#setMaxDiskUsagePerPart(J)V
+#getMaxDiskUsagePerPart()J
+#setMaxParts(I)V
+#getMaxParts()I
@5.2.0.RELEASE
-#setMaxInMemorySize(I)V
-#getMaxInMemorySize()I
-#setMaxDiskUsagePerPart(J)V
-#getMaxDiskUsagePerPart()J
-#setMaxParts(I)V
-#getMaxParts()I
@5.2.1.RELEASE
+#setMaxInMemorySize(I)V
+#getMaxInMemorySize()I
+#setMaxDiskUsagePerPart(J)V
+#getMaxDiskUsagePerPart()J
+#setMaxParts(I)V
+#getMaxParts()I
@5.3.7
+#setFileStorageDirectory(Ljava/nio/file/Path;)V
@6.0.0
-###org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader

+###org/springframework/http/codec/multipart/MultipartHttpMessageWriter
@5.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/List;)V
+#setCharset(Ljava/nio/charset/Charset;)V
+#getCharset()Ljava/nio/charset/Charset;
+#getWritableMediaTypes()Ljava/util/List;
+#canWrite(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;)Z
+#write(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;Lorg/springframework/http/ReactiveHttpOutputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
@5.0.2.RELEASE
+#<init>(Ljava/util/List;Lorg/springframework/http/codec/HttpMessageWriter;)V
@5.0.7.RELEASE
+#getPartWriters()Ljava/util/List;
@5.1.13.RELEASE
+#getFormWriter()Lorg/springframework/http/codec/HttpMessageWriter;
@5.2.0.RELEASE
-#getFormWriter()Lorg/springframework/http/codec/HttpMessageWriter;
@5.2.3.RELEASE
+#getFormWriter()Lorg/springframework/http/codec/HttpMessageWriter;
@5.3.0
-#getCharset()Ljava/nio/charset/Charset;
-#getWritableMediaTypes()Ljava/util/List;
-#canWrite(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;)Z
@5.3.2
-#setCharset(Ljava/nio/charset/Charset;)V
@6.0.3
+#<init>(Ljava/util/function/Supplier;Lorg/springframework/http/codec/HttpMessageWriter;)V
+#canWrite(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;)Z

+###org/springframework/http/codec/multipart/FilePart
@5.0.0.RELEASE
+#filename()Ljava/lang/String;
+#transferTo(Ljava/io/File;)Lreactor/core/publisher/Mono;
@5.1.0.RELEASE
+#transferTo(Ljava/nio/file/Path;)Lreactor/core/publisher/Mono;

+###org/springframework/http/codec/multipart/FormFieldPart
@5.0.0.RELEASE
+#value()Ljava/lang/String;

+###org/springframework/http/codec/multipart/Part
@5.0.0.RELEASE
+#name()Ljava/lang/String;
+#headers()Lorg/springframework/http/HttpHeaders;
+#content()Lreactor/core/publisher/Flux;
@5.3.13
+#delete()Lreactor/core/publisher/Mono;

+###org/springframework/http/codec/support/DefaultClientCodecConfigurer
@5.0.1.RELEASE
+#<init>()V
+#defaultCodecs()Lorg/springframework/http/codec/ClientCodecConfigurer$ClientDefaultCodecs;
+#getWriters()Ljava/util/List;
+#getReaders()Ljava/util/List;
+#customCodecs()Lorg/springframework/http/codec/CodecConfigurer$CustomCodecs;
+#registerDefaults(Z)V
+#defaultCodecs()Lorg/springframework/http/codec/CodecConfigurer$DefaultCodecs;
@5.1.12.RELEASE
+#clone()Lorg/springframework/http/codec/support/DefaultClientCodecConfigurer;
+#clone()Lorg/springframework/http/codec/CodecConfigurer;
+#clone()Ljava/lang/Object;
+#clone()Lorg/springframework/http/codec/ClientCodecConfigurer;
@5.2.0.RELEASE
-#clone()Lorg/springframework/http/codec/support/DefaultClientCodecConfigurer;
-#clone()Lorg/springframework/http/codec/CodecConfigurer;
-#clone()Ljava/lang/Object;
-#clone()Lorg/springframework/http/codec/ClientCodecConfigurer;
@5.2.2.RELEASE
+#clone()Lorg/springframework/http/codec/support/DefaultClientCodecConfigurer;
+#clone()Lorg/springframework/http/codec/CodecConfigurer;
+#clone()Ljava/lang/Object;
+#clone()Lorg/springframework/http/codec/ClientCodecConfigurer;

+###org/springframework/http/codec/support/DefaultServerCodecConfigurer
@5.0.1.RELEASE
+#<init>()V
+#defaultCodecs()Lorg/springframework/http/codec/ServerCodecConfigurer$ServerDefaultCodecs;
+#getWriters()Ljava/util/List;
+#getReaders()Ljava/util/List;
+#customCodecs()Lorg/springframework/http/codec/CodecConfigurer$CustomCodecs;
+#registerDefaults(Z)V
+#defaultCodecs()Lorg/springframework/http/codec/CodecConfigurer$DefaultCodecs;
@5.1.12.RELEASE
+#clone()Lorg/springframework/http/codec/support/DefaultServerCodecConfigurer;
+#clone()Lorg/springframework/http/codec/CodecConfigurer;
+#clone()Ljava/lang/Object;
+#clone()Lorg/springframework/http/codec/ServerCodecConfigurer;
@5.2.0.RELEASE
-#clone()Lorg/springframework/http/codec/support/DefaultServerCodecConfigurer;
-#clone()Lorg/springframework/http/codec/CodecConfigurer;
-#clone()Ljava/lang/Object;
-#clone()Lorg/springframework/http/codec/ServerCodecConfigurer;
@5.2.2.RELEASE
+#clone()Lorg/springframework/http/codec/support/DefaultServerCodecConfigurer;
+#clone()Lorg/springframework/http/codec/CodecConfigurer;
+#clone()Ljava/lang/Object;
+#clone()Lorg/springframework/http/codec/ServerCodecConfigurer;

+###org/springframework/http/codec/ServerSentEvent$Builder
@5.0.0.RELEASE
+#id(Ljava/lang/String;)Lorg/springframework/http/codec/ServerSentEvent$Builder;
+#event(Ljava/lang/String;)Lorg/springframework/http/codec/ServerSentEvent$Builder;
+#retry(Ljava/time/Duration;)Lorg/springframework/http/codec/ServerSentEvent$Builder;
+#comment(Ljava/lang/String;)Lorg/springframework/http/codec/ServerSentEvent$Builder;
+#data(Ljava/lang/Object;)Lorg/springframework/http/codec/ServerSentEvent$Builder;
+#build()Lorg/springframework/http/codec/ServerSentEvent;

+###org/springframework/http/codec/ClientCodecConfigurer$MultipartCodecs
@5.0.0.RELEASE
+#encoder(Lorg/springframework/core/codec/Encoder;)Lorg/springframework/http/codec/ClientCodecConfigurer$MultipartCodecs;
+#writer(Lorg/springframework/http/codec/HttpMessageWriter;)Lorg/springframework/http/codec/ClientCodecConfigurer$MultipartCodecs;
@6.0.3
-###org/springframework/http/codec/ClientCodecConfigurer$MultipartCodecs

+###org/springframework/http/codec/ClientCodecConfigurer
@5.0.0.RELEASE
+#defaultCodecs()Lorg/springframework/http/codec/ClientCodecConfigurer$ClientDefaultCodecs;
+#create()Lorg/springframework/http/codec/ClientCodecConfigurer;
+#defaultCodecs()Lorg/springframework/http/codec/CodecConfigurer$DefaultCodecs;
@5.1.12.RELEASE
+#clone()Lorg/springframework/http/codec/ClientCodecConfigurer;
+#clone()Lorg/springframework/http/codec/CodecConfigurer;
@5.2.0.RELEASE
-#clone()Lorg/springframework/http/codec/ClientCodecConfigurer;
-#clone()Lorg/springframework/http/codec/CodecConfigurer;
@5.2.2.RELEASE
+#clone()Lorg/springframework/http/codec/ClientCodecConfigurer;
+#clone()Lorg/springframework/http/codec/CodecConfigurer;

+###org/springframework/http/codec/CodecConfigurer
@5.0.0.RELEASE
+#defaultCodecs()Lorg/springframework/http/codec/CodecConfigurer$DefaultCodecs;
+#registerDefaults(Z)V
+#customCodecs()Lorg/springframework/http/codec/CodecConfigurer$CustomCodecs;
+#getReaders()Ljava/util/List;
+#getWriters()Ljava/util/List;
@5.1.12.RELEASE
+#clone()Lorg/springframework/http/codec/CodecConfigurer;
@5.2.0.RELEASE
-#clone()Lorg/springframework/http/codec/CodecConfigurer;
@5.2.2.RELEASE
+#clone()Lorg/springframework/http/codec/CodecConfigurer;

+###org/springframework/http/codec/HttpMessageWriter
@5.0.0.RELEASE
+#getWritableMediaTypes()Ljava/util/List;
+#canWrite(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;)Z
+#write(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;Lorg/springframework/http/ReactiveHttpOutputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
+#write(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;Lorg/springframework/http/server/reactive/ServerHttpRequest;Lorg/springframework/http/server/reactive/ServerHttpResponse;Ljava/util/Map;)Lreactor/core/publisher/Mono;
@5.3.4
+#getWritableMediaTypes(Lorg/springframework/core/ResolvableType;)Ljava/util/List;

+###org/springframework/http/codec/ServerSentEventHttpMessageReader
@5.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/core/codec/Decoder;)V
+#getDecoder()Lorg/springframework/core/codec/Decoder;
+#getReadableMediaTypes()Ljava/util/List;
+#canRead(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;)Z
+#read(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/ReactiveHttpInputMessage;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#readMono(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/ReactiveHttpInputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
@5.2.3.RELEASE
+#setMaxInMemorySize(I)V
+#getMaxInMemorySize()I

+###org/springframework/http/codec/EncoderHttpMessageWriter
@5.0.0.RELEASE
+#<init>(Lorg/springframework/core/codec/Encoder;)V
+#getEncoder()Lorg/springframework/core/codec/Encoder;
+#getWritableMediaTypes()Ljava/util/List;
+#canWrite(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;)Z
+#write(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;Lorg/springframework/http/ReactiveHttpOutputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
+#write(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;Lorg/springframework/http/server/reactive/ServerHttpRequest;Lorg/springframework/http/server/reactive/ServerHttpResponse;Ljava/util/Map;)Lreactor/core/publisher/Mono;
@5.3.4
+#getWritableMediaTypes(Lorg/springframework/core/ResolvableType;)Ljava/util/List;

+###org/springframework/http/codec/ServerCodecConfigurer
@5.0.0.RELEASE
+#defaultCodecs()Lorg/springframework/http/codec/ServerCodecConfigurer$ServerDefaultCodecs;
+#create()Lorg/springframework/http/codec/ServerCodecConfigurer;
+#defaultCodecs()Lorg/springframework/http/codec/CodecConfigurer$DefaultCodecs;
@5.1.12.RELEASE
+#clone()Lorg/springframework/http/codec/ServerCodecConfigurer;
+#clone()Lorg/springframework/http/codec/CodecConfigurer;
@5.2.0.RELEASE
-#clone()Lorg/springframework/http/codec/ServerCodecConfigurer;
-#clone()Lorg/springframework/http/codec/CodecConfigurer;
@5.2.2.RELEASE
+#clone()Lorg/springframework/http/codec/ServerCodecConfigurer;
+#clone()Lorg/springframework/http/codec/CodecConfigurer;

+###org/springframework/http/codec/json/Jackson2SmileDecoder
@5.0.0.RELEASE
+#<init>()V
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;[Lorg/springframework/util/MimeType;)V
+#getDecodableMimeTypes()Ljava/util/List;
@5.0.4.RELEASE
-#getDecodableMimeTypes()Ljava/util/List;

+###org/springframework/http/codec/json/AbstractJackson2Decoder
@5.0.0.RELEASE
+#canDecode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#decode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#decodeToMono(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Mono;
+#getDecodeHints(Lorg/springframework/core/ResolvableType;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/server/reactive/ServerHttpRequest;Lorg/springframework/http/server/reactive/ServerHttpResponse;)Ljava/util/Map;
@5.0.4.RELEASE
+#getDecodableMimeTypes()Ljava/util/List;
@5.1.11.RELEASE
+#setMaxInMemorySize(I)V
+#getMaxInMemorySize()I
@5.2.0.RELEASE
+#decode(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Ljava/lang/Object;
-#setMaxInMemorySize(I)V
-#getMaxInMemorySize()I
@5.2.1.RELEASE
+#setMaxInMemorySize(I)V
+#getMaxInMemorySize()I
@5.3.4
+#getDecodableMimeTypes(Lorg/springframework/core/ResolvableType;)Ljava/util/List;

+###org/springframework/http/codec/json/Jackson2CodecSupport
@5.0.0.RELEASE
+#getObjectMapper()Lcom/fasterxml/jackson/databind/ObjectMapper;
@5.3.4
+#setObjectMapper(Lcom/fasterxml/jackson/databind/ObjectMapper;)V
+#registerObjectMappersForType(Ljava/lang/Class;Ljava/util/function/Consumer;)V
+#getObjectMappersForType(Ljava/lang/Class;)Ljava/util/Map;

+###org/springframework/http/codec/json/AbstractJackson2Encoder
@5.0.0.RELEASE
+#setStreamingMediaTypes(Ljava/util/List;)V
+#canEncode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#encode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#getStreamingMediaTypes()Ljava/util/List;
+#getEncodeHints(Lorg/springframework/core/ResolvableType;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;Lorg/springframework/http/server/reactive/ServerHttpRequest;Lorg/springframework/http/server/reactive/ServerHttpResponse;)Ljava/util/Map;
@5.0.4.RELEASE
+#getEncodableMimeTypes()Ljava/util/List;
@5.1.14.RELEASE
+#encodeValue(Ljava/lang/Object;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;
@5.3.4
+#getEncodableMimeTypes(Lorg/springframework/core/ResolvableType;)Ljava/util/List;

+###org/springframework/http/codec/json/Jackson2JsonEncoder
@5.0.0.RELEASE
+#<init>()V
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;[Lorg/springframework/util/MimeType;)V
+#getEncodableMimeTypes()Ljava/util/List;
@5.0.4.RELEASE
-#getEncodableMimeTypes()Ljava/util/List;

+###org/springframework/http/codec/json/Jackson2JsonDecoder
@5.0.0.RELEASE
+#<init>()V
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;[Lorg/springframework/util/MimeType;)V
+#getDecodableMimeTypes()Ljava/util/List;
@5.0.4.RELEASE
-#getDecodableMimeTypes()Ljava/util/List;

+###org/springframework/http/codec/json/Jackson2SmileEncoder
@5.0.0.RELEASE
+#<init>()V
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;[Lorg/springframework/util/MimeType;)V
+#getEncodableMimeTypes()Ljava/util/List;
@5.0.4.RELEASE
-#getEncodableMimeTypes()Ljava/util/List;

+###org/springframework/http/codec/ServerSentEvent
@5.0.0.RELEASE
+#id()Ljava/lang/String;
+#event()Ljava/lang/String;
+#retry()Ljava/time/Duration;
+#comment()Ljava/lang/String;
+#data()Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#builder()Lorg/springframework/http/codec/ServerSentEvent$Builder;
+#builder(Ljava/lang/Object;)Lorg/springframework/http/codec/ServerSentEvent$Builder;

+###org/springframework/http/codec/HttpMessageDecoder
@5.0.0.RELEASE
+#getDecodeHints(Lorg/springframework/core/ResolvableType;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/server/reactive/ServerHttpRequest;Lorg/springframework/http/server/reactive/ServerHttpResponse;)Ljava/util/Map;

+###org/springframework/http/codec/DecoderHttpMessageReader
@5.0.0.RELEASE
+#<init>(Lorg/springframework/core/codec/Decoder;)V
+#getDecoder()Lorg/springframework/core/codec/Decoder;
+#getReadableMediaTypes()Ljava/util/List;
+#canRead(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;)Z
+#read(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/ReactiveHttpInputMessage;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#readMono(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/ReactiveHttpInputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
+#read(Lorg/springframework/core/ResolvableType;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/server/reactive/ServerHttpRequest;Lorg/springframework/http/server/reactive/ServerHttpResponse;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#readMono(Lorg/springframework/core/ResolvableType;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/server/reactive/ServerHttpRequest;Lorg/springframework/http/server/reactive/ServerHttpResponse;Ljava/util/Map;)Lreactor/core/publisher/Mono;
@5.3.4
+#getReadableMediaTypes(Lorg/springframework/core/ResolvableType;)Ljava/util/List;

+###org/springframework/http/codec/ResourceHttpMessageWriter
@5.0.0.RELEASE
+#<init>()V
+#<init>(I)V
+#canWrite(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;)Z
+#getWritableMediaTypes()Ljava/util/List;
+#write(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;Lorg/springframework/http/ReactiveHttpOutputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
+#write(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;Lorg/springframework/http/server/reactive/ServerHttpRequest;Lorg/springframework/http/server/reactive/ServerHttpResponse;Ljava/util/Map;)Lreactor/core/publisher/Mono;
@6.0.0
+#addHeaders(Lorg/springframework/http/ReactiveHttpOutputMessage;Lorg/springframework/core/io/Resource;Lorg/springframework/http/MediaType;Ljava/util/Map;)V

+###org/springframework/http/codec/ServerCodecConfigurer$ServerDefaultCodecs
@5.0.0.RELEASE
+#serverSentEventEncoder(Lorg/springframework/core/codec/Encoder;)V
@5.1.11.RELEASE
+#multipartReader(Lorg/springframework/http/codec/HttpMessageReader;)V
@5.2.0.RELEASE
-#multipartReader(Lorg/springframework/http/codec/HttpMessageReader;)V
@5.2.1.RELEASE
+#multipartReader(Lorg/springframework/http/codec/HttpMessageReader;)V
@6.0.3
-#multipartReader(Lorg/springframework/http/codec/HttpMessageReader;)V

+###org/springframework/http/codec/CodecConfigurer$CustomCodecs
@5.0.0.RELEASE
+#decoder(Lorg/springframework/core/codec/Decoder;)V
+#encoder(Lorg/springframework/core/codec/Encoder;)V
+#reader(Lorg/springframework/http/codec/HttpMessageReader;)V
+#writer(Lorg/springframework/http/codec/HttpMessageWriter;)V
@5.1.12.RELEASE
+#withDefaultCodecConfig(Ljava/util/function/Consumer;)V
@5.1.13.RELEASE
+#register(Ljava/lang/Object;)V
+#registerWithDefaultConfig(Ljava/lang/Object;)V
+#registerWithDefaultConfig(Ljava/lang/Object;Ljava/util/function/Consumer;)V
*#decoder(Lorg/springframework/core/codec/Decoder;)V[deprecated]
*#encoder(Lorg/springframework/core/codec/Encoder;)V[deprecated]
*#reader(Lorg/springframework/http/codec/HttpMessageReader;)V[deprecated]
*#writer(Lorg/springframework/http/codec/HttpMessageWriter;)V[deprecated]
*#withDefaultCodecConfig(Ljava/util/function/Consumer;)V[deprecated]
@5.2.0.RELEASE
-#register(Ljava/lang/Object;)V
-#registerWithDefaultConfig(Ljava/lang/Object;)V
-#registerWithDefaultConfig(Ljava/lang/Object;Ljava/util/function/Consumer;)V
-#withDefaultCodecConfig(Ljava/util/function/Consumer;)V[deprecated]
@5.2.2.RELEASE
+#withDefaultCodecConfig(Ljava/util/function/Consumer;)V
@5.2.3.RELEASE
+#register(Ljava/lang/Object;)V
+#registerWithDefaultConfig(Ljava/lang/Object;)V
+#registerWithDefaultConfig(Ljava/lang/Object;Ljava/util/function/Consumer;)V
*#decoder(Lorg/springframework/core/codec/Decoder;)V[deprecated]
*#encoder(Lorg/springframework/core/codec/Encoder;)V[deprecated]
*#reader(Lorg/springframework/http/codec/HttpMessageReader;)V[deprecated]
*#writer(Lorg/springframework/http/codec/HttpMessageWriter;)V[deprecated]
*#withDefaultCodecConfig(Ljava/util/function/Consumer;)V[deprecated]

+###org/springframework/http/codec/FormHttpMessageReader
@5.0.0.RELEASE
+#<init>()V
+#setDefaultCharset(Ljava/nio/charset/Charset;)V
+#getDefaultCharset()Ljava/nio/charset/Charset;
+#canRead(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;)Z
+#read(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/ReactiveHttpInputMessage;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#readMono(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/ReactiveHttpInputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
+#getReadableMediaTypes()Ljava/util/List;
@5.1.11.RELEASE
+#setMaxInMemorySize(I)V
+#getMaxInMemorySize()I
@5.2.0.RELEASE
-#setMaxInMemorySize(I)V
-#getMaxInMemorySize()I
@5.2.1.RELEASE
+#setMaxInMemorySize(I)V
+#getMaxInMemorySize()I

+###org/springframework/http/codec/ClientCodecConfigurer$ClientDefaultCodecs
@5.0.0.RELEASE
+#multipartCodecs()Lorg/springframework/http/codec/ClientCodecConfigurer$MultipartCodecs;
+#serverSentEventDecoder(Lorg/springframework/core/codec/Decoder;)V
@6.0.3
-#multipartCodecs()Lorg/springframework/http/codec/ClientCodecConfigurer$MultipartCodecs;

+###org/springframework/http/codec/xml/XmlEventDecoder
@5.0.0.RELEASE
+#<init>()V
+#decode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
@5.1.11.RELEASE
+#setMaxInMemorySize(I)V
+#getMaxInMemorySize()I
@5.2.0.RELEASE
-#setMaxInMemorySize(I)V
-#getMaxInMemorySize()I
@5.2.1.RELEASE
+#setMaxInMemorySize(I)V
+#getMaxInMemorySize()I

+###org/springframework/http/codec/xml/Jaxb2XmlDecoder
@5.0.0.RELEASE
+#<init>()V
+#canDecode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#decode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
@5.0.6.RELEASE
+#decodeToMono(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Mono;
@5.1.3.RELEASE
+#setUnmarshallerProcessor(Ljava/util/function/Function;)V
+#getUnmarshallerProcessor()Ljava/util/function/Function;
@5.1.9.RELEASE
+#<init>([Lorg/springframework/util/MimeType;)V
@5.1.11.RELEASE
+#setMaxInMemorySize(I)V
+#getMaxInMemorySize()I
@5.2.0.RELEASE
+#decode(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Ljava/lang/Object;
-#setMaxInMemorySize(I)V
-#getMaxInMemorySize()I
@5.2.1.RELEASE
+#setMaxInMemorySize(I)V
+#getMaxInMemorySize()I

+###org/springframework/http/codec/xml/Jaxb2XmlEncoder
@5.0.0.RELEASE
+#<init>()V
+#canEncode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
@5.1.3.RELEASE
+#setMarshallerProcessor(Ljava/util/function/Function;)V
+#getMarshallerProcessor()Ljava/util/function/Function;
@5.2.0.RELEASE
+#encodeValue(Ljava/lang/Object;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;

+###org/springframework/http/codec/HttpMessageEncoder
@5.0.0.RELEASE
+#getStreamingMediaTypes()Ljava/util/List;
+#getEncodeHints(Lorg/springframework/core/ResolvableType;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;Lorg/springframework/http/server/reactive/ServerHttpRequest;Lorg/springframework/http/server/reactive/ServerHttpResponse;)Ljava/util/Map;

+###org/springframework/http/codec/FormHttpMessageWriter
@5.0.0.RELEASE
+#<init>()V
+#setDefaultCharset(Ljava/nio/charset/Charset;)V
+#getDefaultCharset()Ljava/nio/charset/Charset;
+#canWrite(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;)Z
+#write(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;Lorg/springframework/http/ReactiveHttpOutputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
+#getWritableMediaTypes()Ljava/util/List;

+###org/springframework/http/ReactiveHttpOutputMessage
@5.0.0.RELEASE
+#bufferFactory()Lorg/springframework/core/io/buffer/DataBufferFactory;
+#beforeCommit(Ljava/util/function/Supplier;)V
+#isCommitted()Z
+#writeWith(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#writeAndFlushWith(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#setComplete()Lreactor/core/publisher/Mono;

+###org/springframework/http/HttpStatus
@3.0.0.RELEASE
+#value()I
+#series()Lorg/springframework/http/HttpStatus$Series;
+#toString()Ljava/lang/String;
+#valueOf(I)Lorg/springframework/http/HttpStatus;
+#values()[Lorg/springframework/http/HttpStatus;
+#valueOf(Ljava/lang/String;)Lorg/springframework/http/HttpStatus;
@3.1.0.RELEASE
+#getReasonPhrase()Ljava/lang/String;
@4.0.3.RELEASE
+#is1xxInformational()Z
+#is2xxSuccessful()Z
+#is3xxRedirection()Z
+#is4xxClientError()Z
+#is5xxServerError()Z
@5.0.0.RELEASE
+#isError()Z
+#resolve(I)Lorg/springframework/http/HttpStatus;

+###org/springframework/http/ResponseEntity
@3.0.2.RELEASE
+#<init>(Ljava/lang/Object;Lorg/springframework/http/HttpStatus;)V
+#<init>(Lorg/springframework/util/MultiValueMap;Lorg/springframework/http/HttpStatus;)V
+#<init>(Ljava/lang/Object;Lorg/springframework/util/MultiValueMap;Lorg/springframework/http/HttpStatus;)V
+#getStatusCode()Lorg/springframework/http/HttpStatus;
@3.0.5.RELEASE
+#<init>(Lorg/springframework/http/HttpStatus;)V
@3.1.0.RELEASE
+#toString()Ljava/lang/String;
@3.2.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@4.1.0.RELEASE
+#status(Lorg/springframework/http/HttpStatus;)Lorg/springframework/http/ResponseEntity$BodyBuilder;
+#status(I)Lorg/springframework/http/ResponseEntity$BodyBuilder;
+#ok()Lorg/springframework/http/ResponseEntity$BodyBuilder;
+#ok(Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#created(Ljava/net/URI;)Lorg/springframework/http/ResponseEntity$BodyBuilder;
+#accepted()Lorg/springframework/http/ResponseEntity$BodyBuilder;
+#noContent()Lorg/springframework/http/ResponseEntity$HeadersBuilder;
+#badRequest()Lorg/springframework/http/ResponseEntity$BodyBuilder;
+#notFound()Lorg/springframework/http/ResponseEntity$HeadersBuilder;
@4.1.3.RELEASE
+#unprocessableEntity()Lorg/springframework/http/ResponseEntity$BodyBuilder;
@4.3.0.RELEASE
+#getStatusCodeValue()I
@5.1.0.RELEASE
+#of(Ljava/util/Optional;)Lorg/springframework/http/ResponseEntity;
@5.3.2
+#<init>(Ljava/lang/Object;Lorg/springframework/util/MultiValueMap;I)V
@5.3.8
+#internalServerError()Lorg/springframework/http/ResponseEntity$BodyBuilder;
@6.0.0
+#<init>(Lorg/springframework/http/HttpStatusCode;)V
+#<init>(Ljava/lang/Object;Lorg/springframework/http/HttpStatusCode;)V
+#<init>(Lorg/springframework/util/MultiValueMap;Lorg/springframework/http/HttpStatusCode;)V
+#<init>(Ljava/lang/Object;Lorg/springframework/util/MultiValueMap;Lorg/springframework/http/HttpStatusCode;)V
+#getStatusCode()Lorg/springframework/http/HttpStatusCode;
*#getStatusCodeValue()I[deprecated]
+#status(Lorg/springframework/http/HttpStatusCode;)Lorg/springframework/http/ResponseEntity$BodyBuilder;
+#of(Lorg/springframework/http/ProblemDetail;)Lorg/springframework/http/ResponseEntity$HeadersBuilder;
-#<init>(Lorg/springframework/http/HttpStatus;)V
-#<init>(Ljava/lang/Object;Lorg/springframework/http/HttpStatus;)V
-#<init>(Lorg/springframework/util/MultiValueMap;Lorg/springframework/http/HttpStatus;)V
-#<init>(Ljava/lang/Object;Lorg/springframework/util/MultiValueMap;Lorg/springframework/http/HttpStatus;)V
-#getStatusCode()Lorg/springframework/http/HttpStatus;
-#status(Lorg/springframework/http/HttpStatus;)Lorg/springframework/http/ResponseEntity$BodyBuilder;
@6.0.5
+#ofNullable(Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;

+###org/springframework/http/CacheControl
@4.2.0.RELEASE
+#empty()Lorg/springframework/http/CacheControl;
+#maxAge(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/http/CacheControl;
+#noCache()Lorg/springframework/http/CacheControl;
+#noStore()Lorg/springframework/http/CacheControl;
+#mustRevalidate()Lorg/springframework/http/CacheControl;
+#noTransform()Lorg/springframework/http/CacheControl;
+#cachePublic()Lorg/springframework/http/CacheControl;
+#cachePrivate()Lorg/springframework/http/CacheControl;
+#proxyRevalidate()Lorg/springframework/http/CacheControl;
+#sMaxAge(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/http/CacheControl;
+#getHeaderValue()Ljava/lang/String;
@4.3.0.RELEASE
+#staleWhileRevalidate(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/http/CacheControl;
+#staleIfError(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/http/CacheControl;
@5.1.0.RELEASE
+#toString()Ljava/lang/String;
@5.2.0.RELEASE
+#maxAge(Ljava/time/Duration;)Lorg/springframework/http/CacheControl;
+#sMaxAge(Ljava/time/Duration;)Lorg/springframework/http/CacheControl;
+#staleWhileRevalidate(Ljava/time/Duration;)Lorg/springframework/http/CacheControl;
+#staleIfError(Ljava/time/Duration;)Lorg/springframework/http/CacheControl;
@6.0.5
+#immutable()Lorg/springframework/http/CacheControl;

+###org/springframework/http/HttpStatus$Series
@3.0.0.RELEASE
+#value()I
+#values()[Lorg/springframework/http/HttpStatus$Series;
+#valueOf(Ljava/lang/String;)Lorg/springframework/http/HttpStatus$Series;
@3.2.0.RELEASE
+#valueOf(I)Lorg/springframework/http/HttpStatus$Series;
+#valueOf(Lorg/springframework/http/HttpStatus;)Lorg/springframework/http/HttpStatus$Series;
@5.1.3.RELEASE
+#resolve(I)Lorg/springframework/http/HttpStatus$Series;
@5.3.0
*#valueOf(Lorg/springframework/http/HttpStatus;)Lorg/springframework/http/HttpStatus$Series;[deprecated]

+###org/springframework/http/HttpCookie
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getValue()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/springframework/http/HttpMessage
@3.0.0.RELEASE
+#getHeaders()Lorg/springframework/http/HttpHeaders;

+###org/springframework/http/ResponseEntity$BodyBuilder
@4.1.0.RELEASE
+#contentLength(J)Lorg/springframework/http/ResponseEntity$BodyBuilder;
+#contentType(Lorg/springframework/http/MediaType;)Lorg/springframework/http/ResponseEntity$BodyBuilder;
+#body(Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;

+###org/springframework/http/ZeroCopyHttpOutputMessage
@5.0.0.RELEASE
+#writeWith(Ljava/io/File;JJ)Lreactor/core/publisher/Mono;
@5.1.0.RELEASE
+#writeWith(Ljava/nio/file/Path;JJ)Lreactor/core/publisher/Mono;

+###org/springframework/http/ReactiveHttpInputMessage
@5.0.0.RELEASE
+#getBody()Lreactor/core/publisher/Flux;

+###org/springframework/http/HttpRange
@4.2.0.RELEASE
+#<init>()V
+#getRangeStart(J)J
+#getRangeEnd(J)J
+#createByteRange(J)Lorg/springframework/http/HttpRange;
+#createByteRange(JJ)Lorg/springframework/http/HttpRange;
+#createSuffixRange(J)Lorg/springframework/http/HttpRange;
+#parseRanges(Ljava/lang/String;)Ljava/util/List;
+#toString(Ljava/util/Collection;)Ljava/lang/String;
@4.3.0.RELEASE
+#toResourceRegion(Lorg/springframework/core/io/Resource;)Lorg/springframework/core/io/support/ResourceRegion;
+#toResourceRegions(Ljava/util/List;Lorg/springframework/core/io/Resource;)Ljava/util/List;

+###org/springframework/http/StreamingHttpOutputMessage$Body
@4.0.0.RELEASE
+#writeTo(Ljava/io/OutputStream;)V

+###org/springframework/http/HttpMethod
@3.0.0.RELEASE
+#values()[Lorg/springframework/http/HttpMethod;
+#valueOf(Ljava/lang/String;)Lorg/springframework/http/HttpMethod;
@4.2.4.RELEASE
+#resolve(Ljava/lang/String;)Lorg/springframework/http/HttpMethod;
+#matches(Ljava/lang/String;)Z
@6.0.0
*#resolve(Ljava/lang/String;)Lorg/springframework/http/HttpMethod;[deprecated]
+#name()Ljava/lang/String;
+#compareTo(Lorg/springframework/http/HttpMethod;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I

+###org/springframework/http/ContentDisposition$Builder
@5.0.0.RELEASE
+#name(Ljava/lang/String;)Lorg/springframework/http/ContentDisposition$Builder;
+#filename(Ljava/lang/String;)Lorg/springframework/http/ContentDisposition$Builder;
+#filename(Ljava/lang/String;Ljava/nio/charset/Charset;)Lorg/springframework/http/ContentDisposition$Builder;
+#size(Ljava/lang/Long;)Lorg/springframework/http/ContentDisposition$Builder;
+#creationDate(Ljava/time/ZonedDateTime;)Lorg/springframework/http/ContentDisposition$Builder;
+#modificationDate(Ljava/time/ZonedDateTime;)Lorg/springframework/http/ContentDisposition$Builder;
+#readDate(Ljava/time/ZonedDateTime;)Lorg/springframework/http/ContentDisposition$Builder;
+#build()Lorg/springframework/http/ContentDisposition;
@5.2.3.RELEASE
*#size(Ljava/lang/Long;)Lorg/springframework/http/ContentDisposition$Builder;[deprecated]
*#creationDate(Ljava/time/ZonedDateTime;)Lorg/springframework/http/ContentDisposition$Builder;[deprecated]
*#modificationDate(Ljava/time/ZonedDateTime;)Lorg/springframework/http/ContentDisposition$Builder;[deprecated]
*#readDate(Ljava/time/ZonedDateTime;)Lorg/springframework/http/ContentDisposition$Builder;[deprecated]

+###org/springframework/http/server/ServerHttpResponse
@3.0.0.RELEASE
+#setStatusCode(Lorg/springframework/http/HttpStatus;)V
+#close()V
@4.0.0.RELEASE
+#flush()V
@6.0.0
+#setStatusCode(Lorg/springframework/http/HttpStatusCode;)V
-#setStatusCode(Lorg/springframework/http/HttpStatus;)V

+###org/springframework/http/server/PathContainer$Element
@5.0.0.RELEASE
+#value()Ljava/lang/String;

+###org/springframework/http/server/PathContainer$PathSegment
@5.0.0.RELEASE
+#valueToMatch()Ljava/lang/String;
+#valueToMatchAsChars()[C
+#parameters()Lorg/springframework/util/MultiValueMap;

+###org/springframework/http/server/ServletServerHttpAsyncRequestControl
@4.0.0.RELEASE
+#<init>(Lorg/springframework/http/server/ServletServerHttpRequest;Lorg/springframework/http/server/ServletServerHttpResponse;)V
+#isStarted()Z
+#isCompleted()Z
+#start()V
+#start(J)V
+#complete()V
+#onComplete(Ljavax/servlet/AsyncEvent;)V
+#onStartAsync(Ljavax/servlet/AsyncEvent;)V
+#onError(Ljavax/servlet/AsyncEvent;)V
+#onTimeout(Ljavax/servlet/AsyncEvent;)V
@6.0.0
+#onComplete(Ljakarta/servlet/AsyncEvent;)V
+#onStartAsync(Ljakarta/servlet/AsyncEvent;)V
+#onError(Ljakarta/servlet/AsyncEvent;)V
+#onTimeout(Ljakarta/servlet/AsyncEvent;)V
-#onComplete(Ljavax/servlet/AsyncEvent;)V
-#onStartAsync(Ljavax/servlet/AsyncEvent;)V
-#onError(Ljavax/servlet/AsyncEvent;)V
-#onTimeout(Ljavax/servlet/AsyncEvent;)V

+###org/springframework/http/server/PathContainer$Separator
@5.0.0.RELEASE

+###org/springframework/http/server/ServerHttpAsyncRequestControl
@4.0.0.RELEASE
+#start()V
+#start(J)V
+#isStarted()Z
+#complete()V
+#isCompleted()Z

+###org/springframework/http/server/reactive/ServerHttpResponse
@5.0.0.RELEASE
+#setStatusCode(Lorg/springframework/http/HttpStatus;)Z
+#getStatusCode()Lorg/springframework/http/HttpStatus;
+#getCookies()Lorg/springframework/util/MultiValueMap;
+#addCookie(Lorg/springframework/http/ResponseCookie;)V
@5.2.4.RELEASE
+#setRawStatusCode(Ljava/lang/Integer;)Z
+#getRawStatusCode()Ljava/lang/Integer;
@6.0.0
+#setStatusCode(Lorg/springframework/http/HttpStatusCode;)Z
+#getStatusCode()Lorg/springframework/http/HttpStatusCode;
*#getRawStatusCode()Ljava/lang/Integer;[deprecated]
-#setStatusCode(Lorg/springframework/http/HttpStatus;)Z
-#getStatusCode()Lorg/springframework/http/HttpStatus;

+###org/springframework/http/server/reactive/AbstractListenerReadPublisher
@5.0.0.RELEASE
+#<init>()V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#onDataAvailable()V
+#onAllDataRead()V
+#onError(Ljava/lang/Throwable;)V
@5.1.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#getLogPrefix()Ljava/lang/String;

+###org/springframework/http/server/reactive/HttpHandler
@5.0.0.RELEASE
+#handle(Lorg/springframework/http/server/reactive/ServerHttpRequest;Lorg/springframework/http/server/reactive/ServerHttpResponse;)Lreactor/core/publisher/Mono;

+###org/springframework/http/server/reactive/ChannelSendOperator
@5.0.0.RELEASE
+#<init>(Lorg/reactivestreams/Publisher;Ljava/util/function/Function;)V
+#scanUnsafe(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
+#subscribe(Lreactor/core/CoreSubscriber;)V

+###org/springframework/http/server/reactive/ContextPathCompositeHandler
@5.0.0.RELEASE
+#<init>(Ljava/util/Map;)V
+#handle(Lorg/springframework/http/server/reactive/ServerHttpRequest;Lorg/springframework/http/server/reactive/ServerHttpResponse;)Lreactor/core/publisher/Mono;

+###org/springframework/http/server/reactive/AbstractServerHttpResponse
@5.0.0.RELEASE
+#<init>(Lorg/springframework/core/io/buffer/DataBufferFactory;)V
+#bufferFactory()Lorg/springframework/core/io/buffer/DataBufferFactory;
+#setStatusCode(Lorg/springframework/http/HttpStatus;)Z
+#getStatusCode()Lorg/springframework/http/HttpStatus;
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#getCookies()Lorg/springframework/util/MultiValueMap;
+#addCookie(Lorg/springframework/http/ResponseCookie;)V
+#beforeCommit(Ljava/util/function/Supplier;)V
+#isCommitted()Z
+#writeWith(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#writeAndFlushWith(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#setComplete()Lreactor/core/publisher/Mono;
@5.0.1.RELEASE
+#setStatusCodeValue(Ljava/lang/Integer;)V
+#getStatusCodeValue()Ljava/lang/Integer;
+#getNativeResponse()Ljava/lang/Object;
@5.1.1.RELEASE
+#<init>(Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/http/HttpHeaders;)V
@5.2.4.RELEASE
+#setRawStatusCode(Ljava/lang/Integer;)Z
+#getRawStatusCode()Ljava/lang/Integer;
*#setStatusCodeValue(Ljava/lang/Integer;)V[deprecated]
*#getStatusCodeValue()Ljava/lang/Integer;[deprecated]
@6.0.0
+#setStatusCode(Lorg/springframework/http/HttpStatusCode;)Z
+#getStatusCode()Lorg/springframework/http/HttpStatusCode;
*#getRawStatusCode()Ljava/lang/Integer;[deprecated]
-#setStatusCode(Lorg/springframework/http/HttpStatus;)Z
-#getStatusCode()Lorg/springframework/http/HttpStatus;
-#setStatusCodeValue(Ljava/lang/Integer;)V[deprecated]
-#getStatusCodeValue()Ljava/lang/Integer;[deprecated]

+###org/springframework/http/server/reactive/JettyHttpHandlerAdapter
@5.0.0.RELEASE
+#<init>(Lorg/springframework/http/server/reactive/HttpHandler;)V

+###org/springframework/http/server/reactive/ServerHttpRequest$Builder
@5.0.0.RELEASE
+#method(Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/server/reactive/ServerHttpRequest$Builder;
+#uri(Ljava/net/URI;)Lorg/springframework/http/server/reactive/ServerHttpRequest$Builder;
+#path(Ljava/lang/String;)Lorg/springframework/http/server/reactive/ServerHttpRequest$Builder;
+#contextPath(Ljava/lang/String;)Lorg/springframework/http/server/reactive/ServerHttpRequest$Builder;
+#header(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/http/server/reactive/ServerHttpRequest$Builder;
+#headers(Ljava/util/function/Consumer;)Lorg/springframework/http/server/reactive/ServerHttpRequest$Builder;
+#build()Lorg/springframework/http/server/reactive/ServerHttpRequest;
@5.0.7.RELEASE
+#sslInfo(Lorg/springframework/http/server/reactive/SslInfo;)Lorg/springframework/http/server/reactive/ServerHttpRequest$Builder;
@5.1.9.RELEASE
*#header(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/http/server/reactive/ServerHttpRequest$Builder;[deprecated]
+#header(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/http/server/reactive/ServerHttpRequest$Builder;
@5.2.0.RELEASE
-#header(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/http/server/reactive/ServerHttpRequest$Builder;[deprecated]
@5.3.0
+#remoteAddress(Ljava/net/InetSocketAddress;)Lorg/springframework/http/server/reactive/ServerHttpRequest$Builder;

+###org/springframework/http/server/reactive/ServerHttpResponseDecorator
@5.0.0.RELEASE
+#<init>(Lorg/springframework/http/server/reactive/ServerHttpResponse;)V
+#getDelegate()Lorg/springframework/http/server/reactive/ServerHttpResponse;
+#setStatusCode(Lorg/springframework/http/HttpStatus;)Z
+#getStatusCode()Lorg/springframework/http/HttpStatus;
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#getCookies()Lorg/springframework/util/MultiValueMap;
+#addCookie(Lorg/springframework/http/ResponseCookie;)V
+#bufferFactory()Lorg/springframework/core/io/buffer/DataBufferFactory;
+#beforeCommit(Ljava/util/function/Supplier;)V
+#isCommitted()Z
+#writeWith(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#writeAndFlushWith(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#setComplete()Lreactor/core/publisher/Mono;
+#toString()Ljava/lang/String;
@5.3.3
+#getNativeResponse(Lorg/springframework/http/server/reactive/ServerHttpResponse;)Ljava/lang/Object;
@5.3.15
+#setRawStatusCode(Ljava/lang/Integer;)Z
+#getRawStatusCode()Ljava/lang/Integer;
@6.0.0
+#setStatusCode(Lorg/springframework/http/HttpStatusCode;)Z
+#getStatusCode()Lorg/springframework/http/HttpStatusCode;
*#getRawStatusCode()Ljava/lang/Integer;[deprecated]
-#setStatusCode(Lorg/springframework/http/HttpStatus;)Z
-#getStatusCode()Lorg/springframework/http/HttpStatus;

+###org/springframework/http/server/reactive/HttpHeadResponseDecorator
@5.0.0.RELEASE
+#<init>(Lorg/springframework/http/server/reactive/ServerHttpResponse;)V
+#writeWith(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#writeAndFlushWith(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;

+###org/springframework/http/server/reactive/ServletHttpHandlerAdapter
@5.0.0.RELEASE
+#<init>(Lorg/springframework/http/server/reactive/HttpHandler;)V
+#setBufferSize(I)V
+#getBufferSize()I
+#setDataBufferFactory(Lorg/springframework/core/io/buffer/DataBufferFactory;)V
+#getDataBufferFactory()Lorg/springframework/core/io/buffer/DataBufferFactory;
+#service(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
+#init(Ljavax/servlet/ServletConfig;)V
+#getServletConfig()Ljavax/servlet/ServletConfig;
+#getServletInfo()Ljava/lang/String;
+#destroy()V
@5.0.2.RELEASE
+#getServletPath()Ljava/lang/String;
@6.0.0
+#init(Ljakarta/servlet/ServletConfig;)V
+#service(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;)V
+#getServletConfig()Ljakarta/servlet/ServletConfig;
-#init(Ljavax/servlet/ServletConfig;)V
-#service(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
-#getServletConfig()Ljavax/servlet/ServletConfig;

+###org/springframework/http/server/reactive/SslInfo
@5.0.2.RELEASE
+#getSessionId()Ljava/lang/String;
+#getPeerCertificates()[Ljava/security/cert/X509Certificate;

+###org/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor
@5.0.0.RELEASE
+#<init>()V
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Lorg/reactivestreams/Publisher;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#onNext(Ljava/lang/Object;)V
@5.1.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#getLogPrefix()Ljava/lang/String;

+###org/springframework/http/server/reactive/ReactorHttpHandlerAdapter
@5.0.0.RELEASE
+#<init>(Lorg/springframework/http/server/reactive/HttpHandler;)V
+#apply(Lreactor/ipc/netty/http/server/HttpServerRequest;Lreactor/ipc/netty/http/server/HttpServerResponse;)Lreactor/core/publisher/Mono;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@5.1.0.RELEASE
+#apply(Lreactor/netty/http/server/HttpServerRequest;Lreactor/netty/http/server/HttpServerResponse;)Lreactor/core/publisher/Mono;
-#apply(Lreactor/ipc/netty/http/server/HttpServerRequest;Lreactor/ipc/netty/http/server/HttpServerResponse;)Lreactor/core/publisher/Mono;

+###org/springframework/http/server/reactive/TomcatHttpHandlerAdapter
@5.0.0.RELEASE
+#<init>(Lorg/springframework/http/server/reactive/HttpHandler;)V

+###org/springframework/http/server/reactive/AbstractListenerWriteProcessor
@5.0.0.RELEASE
+#<init>()V
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Object;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#subscribe(Lorg/reactivestreams/Subscriber;)V
+#onWritePossible()V
+#cancel()V
@5.1.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#getLogPrefix()Ljava/lang/String;

+###org/springframework/http/server/reactive/AbstractServerHttpRequest
@5.0.0.RELEASE
+#<init>(Ljava/net/URI;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;)V
+#getURI()Ljava/net/URI;
+#getPath()Lorg/springframework/http/server/RequestPath;
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#getQueryParams()Lorg/springframework/util/MultiValueMap;
+#getCookies()Lorg/springframework/util/MultiValueMap;
@5.0.1.RELEASE
+#getNativeRequest()Ljava/lang/Object;
@5.0.2.RELEASE
+#getSslInfo()Lorg/springframework/http/server/reactive/SslInfo;
@5.1.0.RELEASE
+#getId()Ljava/lang/String;
@5.3.0
+#<init>(Ljava/net/URI;Ljava/lang/String;Lorg/springframework/util/MultiValueMap;)V
-#<init>(Ljava/net/URI;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;)V
@5.3.2
+#<init>(Ljava/net/URI;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;)V

+###org/springframework/http/server/reactive/ServerHttpRequestDecorator
@5.0.0.RELEASE
+#<init>(Lorg/springframework/http/server/reactive/ServerHttpRequest;)V
+#getDelegate()Lorg/springframework/http/server/reactive/ServerHttpRequest;
+#getMethod()Lorg/springframework/http/HttpMethod;
+#getMethodValue()Ljava/lang/String;
+#getURI()Ljava/net/URI;
+#getPath()Lorg/springframework/http/server/RequestPath;
+#getQueryParams()Lorg/springframework/util/MultiValueMap;
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#getCookies()Lorg/springframework/util/MultiValueMap;
+#getRemoteAddress()Ljava/net/InetSocketAddress;
+#getBody()Lreactor/core/publisher/Flux;
+#toString()Ljava/lang/String;
@5.0.2.RELEASE
+#getSslInfo()Lorg/springframework/http/server/reactive/SslInfo;
@5.1.0.RELEASE
+#getId()Ljava/lang/String;
@5.2.3.RELEASE
+#getLocalAddress()Ljava/net/InetSocketAddress;
@5.3.3
+#getNativeRequest(Lorg/springframework/http/server/reactive/ServerHttpRequest;)Ljava/lang/Object;
@6.0.0
-#getMethodValue()Ljava/lang/String;

+###org/springframework/http/server/reactive/ServerHttpRequest
@5.0.0.RELEASE
+#getPath()Lorg/springframework/http/server/RequestPath;
+#getQueryParams()Lorg/springframework/util/MultiValueMap;
+#getCookies()Lorg/springframework/util/MultiValueMap;
+#getRemoteAddress()Ljava/net/InetSocketAddress;
+#mutate()Lorg/springframework/http/server/reactive/ServerHttpRequest$Builder;
@5.0.2.RELEASE
+#getSslInfo()Lorg/springframework/http/server/reactive/SslInfo;
@5.1.0.RELEASE
+#getId()Ljava/lang/String;
@5.2.3.RELEASE
+#getLocalAddress()Ljava/net/InetSocketAddress;

+###org/springframework/http/server/reactive/UndertowHttpHandlerAdapter
@5.0.0.RELEASE
+#<init>(Lorg/springframework/http/server/reactive/HttpHandler;)V
+#setDataBufferFactory(Lorg/springframework/core/io/buffer/DataBufferFactory;)V
+#getDataBufferFactory()Lorg/springframework/core/io/buffer/DataBufferFactory;
+#handleRequest(Lio/undertow/server/HttpServerExchange;)V

+###org/springframework/http/server/reactive/AbstractListenerServerHttpResponse
@5.0.0.RELEASE
+#<init>(Lorg/springframework/core/io/buffer/DataBufferFactory;)V
@5.1.1.RELEASE
+#<init>(Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/http/HttpHeaders;)V

+###org/springframework/http/server/RequestPath
@5.0.0.RELEASE
+#contextPath()Lorg/springframework/http/server/PathContainer;
+#pathWithinApplication()Lorg/springframework/http/server/PathContainer;
+#modifyContextPath(Ljava/lang/String;)Lorg/springframework/http/server/RequestPath;
+#parse(Ljava/net/URI;Ljava/lang/String;)Lorg/springframework/http/server/RequestPath;
@5.3.0
+#parse(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/http/server/RequestPath;

+###org/springframework/http/server/ServletServerHttpResponse
@3.0.0.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletResponse;)V
+#setStatusCode(Lorg/springframework/http/HttpStatus;)V
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#getBody()Ljava/io/OutputStream;
+#close()V
@3.0.6.RELEASE
+#getServletResponse()Ljavax/servlet/http/HttpServletResponse;
@4.0.0.RELEASE
+#flush()V
@6.0.0
+#<init>(Ljakarta/servlet/http/HttpServletResponse;)V
+#getServletResponse()Ljakarta/servlet/http/HttpServletResponse;
+#setStatusCode(Lorg/springframework/http/HttpStatusCode;)V
-#<init>(Ljavax/servlet/http/HttpServletResponse;)V
-#getServletResponse()Ljavax/servlet/http/HttpServletResponse;
-#setStatusCode(Lorg/springframework/http/HttpStatus;)V

+###org/springframework/http/server/PathContainer
@5.0.0.RELEASE
+#value()Ljava/lang/String;
+#elements()Ljava/util/List;
+#subPath(I)Lorg/springframework/http/server/PathContainer;
+#subPath(II)Lorg/springframework/http/server/PathContainer;
+#parsePath(Ljava/lang/String;)Lorg/springframework/http/server/PathContainer;
@5.2.0.RELEASE
+#parsePath(Ljava/lang/String;Lorg/springframework/http/server/PathContainer$Options;)Lorg/springframework/http/server/PathContainer;

+###org/springframework/http/server/ServerHttpRequest
@3.0.0.RELEASE
+#getMethod()Lorg/springframework/http/HttpMethod;
@3.0.3.RELEASE
+#getURI()Ljava/net/URI;
@3.1.0.RELEASE
-#getMethod()Lorg/springframework/http/HttpMethod;
-#getURI()Ljava/net/URI;
@4.0.0.RELEASE
+#getPrincipal()Ljava/security/Principal;
+#getLocalAddress()Ljava/net/InetSocketAddress;
+#getRemoteAddress()Ljava/net/InetSocketAddress;
+#getAsyncRequestControl(Lorg/springframework/http/server/ServerHttpResponse;)Lorg/springframework/http/server/ServerHttpAsyncRequestControl;

+###org/springframework/http/server/ServletServerHttpRequest
@3.0.0.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletRequest;)V
+#getMethod()Lorg/springframework/http/HttpMethod;
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#getBody()Ljava/io/InputStream;
@3.0.3.RELEASE
+#getURI()Ljava/net/URI;
@3.0.6.RELEASE
+#getServletRequest()Ljavax/servlet/http/HttpServletRequest;
@4.0.0.RELEASE
+#getPrincipal()Ljava/security/Principal;
+#getLocalAddress()Ljava/net/InetSocketAddress;
+#getRemoteAddress()Ljava/net/InetSocketAddress;
+#getAsyncRequestControl(Lorg/springframework/http/server/ServerHttpResponse;)Lorg/springframework/http/server/ServerHttpAsyncRequestControl;
@5.0.0.RELEASE
+#getMethodValue()Ljava/lang/String;
-#getMethod()Lorg/springframework/http/HttpMethod;
@5.0.4.RELEASE
+#getMethod()Lorg/springframework/http/HttpMethod;
@6.0.0
+#<init>(Ljakarta/servlet/http/HttpServletRequest;)V
+#getServletRequest()Ljakarta/servlet/http/HttpServletRequest;
-#<init>(Ljavax/servlet/http/HttpServletRequest;)V
-#getServletRequest()Ljavax/servlet/http/HttpServletRequest;
-#getMethodValue()Ljava/lang/String;

+###org/springframework/http/MediaTypeFactory
@5.0.0.RELEASE
+#<init>()V
+#getMediaType(Lorg/springframework/core/io/Resource;)Ljava/util/Optional;
+#getMediaType(Ljava/lang/String;)Ljava/util/Optional;
+#getMediaTypes(Ljava/lang/String;)Ljava/util/List;
@5.1.0.RELEASE
-#<init>()V

+###org/springframework/http/HttpOutputMessage
@3.0.0.RELEASE
+#getBody()Ljava/io/OutputStream;

+###org/springframework/http/ResponseCookie
@5.0.0.RELEASE
+#getMaxAge()Ljava/time/Duration;
+#getDomain()Ljava/lang/String;
+#getPath()Ljava/lang/String;
+#isSecure()Z
+#isHttpOnly()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#from(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/http/ResponseCookie$ResponseCookieBuilder;
@5.1.0.RELEASE
+#getSameSite()Ljava/lang/String;
@5.2.5.RELEASE
+#fromClientResponse(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/http/ResponseCookie$ResponseCookieBuilder;
@6.0.0
+#mutate()Lorg/springframework/http/ResponseCookie$ResponseCookieBuilder;
+#from(Ljava/lang/String;)Lorg/springframework/http/ResponseCookie$ResponseCookieBuilder;

+###org/springframework/http/RequestEntity$HeadersBuilder
@4.1.0.RELEASE
+#header(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/http/RequestEntity$HeadersBuilder;
+#accept([Lorg/springframework/http/MediaType;)Lorg/springframework/http/RequestEntity$HeadersBuilder;
+#acceptCharset([Ljava/nio/charset/Charset;)Lorg/springframework/http/RequestEntity$HeadersBuilder;
+#ifModifiedSince(J)Lorg/springframework/http/RequestEntity$HeadersBuilder;
+#ifNoneMatch([Ljava/lang/String;)Lorg/springframework/http/RequestEntity$HeadersBuilder;
+#build()Lorg/springframework/http/RequestEntity;
@5.1.4.RELEASE
+#ifModifiedSince(Ljava/time/ZonedDateTime;)Lorg/springframework/http/RequestEntity$HeadersBuilder;
+#ifModifiedSince(Ljava/time/Instant;)Lorg/springframework/http/RequestEntity$HeadersBuilder;
@5.2.0.RELEASE
+#headers(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/RequestEntity$HeadersBuilder;
+#headers(Ljava/util/function/Consumer;)Lorg/springframework/http/RequestEntity$HeadersBuilder;

+###org/springframework/http/RequestEntity
@4.1.0.RELEASE
+#<init>(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)V
+#<init>(Ljava/lang/Object;Lorg/springframework/http/HttpMethod;Ljava/net/URI;)V
+#<init>(Lorg/springframework/util/MultiValueMap;Lorg/springframework/http/HttpMethod;Ljava/net/URI;)V
+#<init>(Ljava/lang/Object;Lorg/springframework/util/MultiValueMap;Lorg/springframework/http/HttpMethod;Ljava/net/URI;)V
+#getMethod()Lorg/springframework/http/HttpMethod;
+#getUrl()Ljava/net/URI;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#method(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)Lorg/springframework/http/RequestEntity$BodyBuilder;
+#get(Ljava/net/URI;)Lorg/springframework/http/RequestEntity$HeadersBuilder;
+#head(Ljava/net/URI;)Lorg/springframework/http/RequestEntity$HeadersBuilder;
+#post(Ljava/net/URI;)Lorg/springframework/http/RequestEntity$BodyBuilder;
+#put(Ljava/net/URI;)Lorg/springframework/http/RequestEntity$BodyBuilder;
+#patch(Ljava/net/URI;)Lorg/springframework/http/RequestEntity$BodyBuilder;
+#delete(Ljava/net/URI;)Lorg/springframework/http/RequestEntity$HeadersBuilder;
+#options(Ljava/net/URI;)Lorg/springframework/http/RequestEntity$HeadersBuilder;
@4.3.0.RELEASE
+#<init>(Ljava/lang/Object;Lorg/springframework/http/HttpMethod;Ljava/net/URI;Ljava/lang/reflect/Type;)V
+#<init>(Ljava/lang/Object;Lorg/springframework/util/MultiValueMap;Lorg/springframework/http/HttpMethod;Ljava/net/URI;Ljava/lang/reflect/Type;)V
+#getType()Ljava/lang/reflect/Type;
@5.3.0
+#method(Lorg/springframework/http/HttpMethod;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/http/RequestEntity$BodyBuilder;
+#method(Lorg/springframework/http/HttpMethod;Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/http/RequestEntity$BodyBuilder;
+#get(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/http/RequestEntity$HeadersBuilder;
+#head(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/http/RequestEntity$HeadersBuilder;
+#post(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/http/RequestEntity$BodyBuilder;
+#put(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/http/RequestEntity$BodyBuilder;
+#patch(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/http/RequestEntity$BodyBuilder;
+#delete(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/http/RequestEntity$HeadersBuilder;
+#options(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/http/RequestEntity$HeadersBuilder;

+###org/springframework/http/ResponseCookie$ResponseCookieBuilder
@5.0.0.RELEASE
+#maxAge(Ljava/time/Duration;)Lorg/springframework/http/ResponseCookie$ResponseCookieBuilder;
+#maxAge(J)Lorg/springframework/http/ResponseCookie$ResponseCookieBuilder;
+#path(Ljava/lang/String;)Lorg/springframework/http/ResponseCookie$ResponseCookieBuilder;
+#domain(Ljava/lang/String;)Lorg/springframework/http/ResponseCookie$ResponseCookieBuilder;
+#secure(Z)Lorg/springframework/http/ResponseCookie$ResponseCookieBuilder;
+#httpOnly(Z)Lorg/springframework/http/ResponseCookie$ResponseCookieBuilder;
+#build()Lorg/springframework/http/ResponseCookie;
@5.1.0.RELEASE
+#sameSite(Ljava/lang/String;)Lorg/springframework/http/ResponseCookie$ResponseCookieBuilder;
@6.0.0
+#value(Ljava/lang/String;)Lorg/springframework/http/ResponseCookie$ResponseCookieBuilder;

+###org/springframework/http/MediaType
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#getType()Ljava/lang/String;
+#isWildcardType()Z
+#getSubtype()Ljava/lang/String;
+#isWildcardSubtype()Z
+#getCharSet()Ljava/nio/charset/Charset;
+#getQualityValue()D
+#getParameter(Ljava/lang/String;)Ljava/lang/String;
+#includes(Lorg/springframework/http/MediaType;)Z
+#compareTo(Lorg/springframework/http/MediaType;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#parseMediaType(Ljava/lang/String;)Lorg/springframework/http/MediaType;
+#parseMediaTypes(Ljava/lang/String;)Ljava/util/List;
+#toString(Ljava/util/Collection;)Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@3.0.1.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;D)V
+#sortBySpecificity(Ljava/util/List;)V
@3.0.2.RELEASE
+#<init>(Lorg/springframework/http/MediaType;Ljava/util/Map;)V
+#isCompatibleWith(Lorg/springframework/http/MediaType;)Z
+#sortByQualityValue(Ljava/util/List;)V
@3.0.3.RELEASE
+#valueOf(Ljava/lang/String;)Lorg/springframework/http/MediaType;
@3.0.6.RELEASE
+#isConcrete()Z
@3.1.1.RELEASE
+#getParameters()Ljava/util/Map;
@3.1.2.RELEASE
+#copyQualityValue(Lorg/springframework/http/MediaType;)Lorg/springframework/http/MediaType;
+#removeQualityValue()Lorg/springframework/http/MediaType;
+#sortBySpecificityAndQuality(Ljava/util/List;)V
@4.0.0.RELEASE
-#getType()Ljava/lang/String;
-#isWildcardType()Z
-#getSubtype()Ljava/lang/String;
-#isWildcardSubtype()Z
-#isConcrete()Z
-#getCharSet()Ljava/nio/charset/Charset;
-#getParameter(Ljava/lang/String;)Ljava/lang/String;
-#getParameters()Ljava/util/Map;
-#compareTo(Lorg/springframework/http/MediaType;)I
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#toString()Ljava/lang/String;
-#compareTo(Ljava/lang/Object;)I
@4.3.0.RELEASE
+#<init>(Lorg/springframework/http/MediaType;Ljava/nio/charset/Charset;)V
@4.3.2.RELEASE
+#parseMediaTypes(Ljava/util/List;)Ljava/util/List;
@5.0.0.RELEASE
+#asMediaTypes(Ljava/util/List;)Ljava/util/List;
+#asMediaType(Lorg/springframework/util/MimeType;)Lorg/springframework/http/MediaType;
@5.3.0
+#<init>(Lorg/springframework/util/MimeType;)V
@6.0.0
+#isMoreSpecific(Lorg/springframework/util/MimeType;)Z
+#isLessSpecific(Lorg/springframework/util/MimeType;)Z
*#sortBySpecificity(Ljava/util/List;)V[deprecated]
*#sortByQualityValue(Ljava/util/List;)V[deprecated]
*#sortBySpecificityAndQuality(Ljava/util/List;)V[deprecated]

+###org/springframework/http/ResponseEntity$HeadersBuilder
@4.1.0.RELEASE
+#header(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/http/ResponseEntity$HeadersBuilder;
+#allow([Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/ResponseEntity$HeadersBuilder;
+#eTag(Ljava/lang/String;)Lorg/springframework/http/ResponseEntity$HeadersBuilder;
+#lastModified(J)Lorg/springframework/http/ResponseEntity$HeadersBuilder;
+#location(Ljava/net/URI;)Lorg/springframework/http/ResponseEntity$HeadersBuilder;
+#build()Lorg/springframework/http/ResponseEntity;
@4.1.2.RELEASE
+#headers(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/ResponseEntity$HeadersBuilder;
@4.2.0.RELEASE
+#cacheControl(Lorg/springframework/http/CacheControl;)Lorg/springframework/http/ResponseEntity$HeadersBuilder;
@4.3.0.RELEASE
+#varyBy([Ljava/lang/String;)Lorg/springframework/http/ResponseEntity$HeadersBuilder;
@5.1.4.RELEASE
+#lastModified(Ljava/time/ZonedDateTime;)Lorg/springframework/http/ResponseEntity$HeadersBuilder;
+#lastModified(Ljava/time/Instant;)Lorg/springframework/http/ResponseEntity$HeadersBuilder;
@5.2.0.RELEASE
+#headers(Ljava/util/function/Consumer;)Lorg/springframework/http/ResponseEntity$HeadersBuilder;

+###org/springframework/http/converter/HttpMessageNotWritableException
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/http/converter/StringHttpMessageConverter
@3.0.0.RELEASE
+#<init>()V
+#supports(Ljava/lang/Class;)Z
+#readInternal(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/String;
+#readInternal(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;
@3.0.1.RELEASE
-#readInternal(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/String;
-#readInternal(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;
@3.0.2.RELEASE
+#setWriteAcceptCharset(Z)V
@3.1.2.RELEASE
+#<init>(Ljava/nio/charset/Charset;)V

+###org/springframework/http/converter/support/AllEncompassingFormHttpMessageConverter
@3.2.0.RELEASE
+#<init>()V

+###org/springframework/http/converter/AbstractHttpMessageConverter
@3.0.0.RELEASE
+#setSupportedMediaTypes(Ljava/util/List;)V
+#getSupportedMediaTypes()Ljava/util/List;
+#canRead(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#canWrite(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#read(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;
+#write(Ljava/lang/Object;Lorg/springframework/http/MediaType;Lorg/springframework/http/HttpOutputMessage;)V
@4.3.0.RELEASE
+#setDefaultCharset(Ljava/nio/charset/Charset;)V
+#getDefaultCharset()Ljava/nio/charset/Charset;

+###org/springframework/http/converter/ResourceRegionHttpMessageConverter
@4.3.0.RELEASE
+#<init>()V
+#canRead(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#read(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;
+#canWrite(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#canWrite(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
@4.3.8.RELEASE
+#canRead(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z

+###org/springframework/http/converter/ResourceHttpMessageConverter
@3.0.2.RELEASE
+#<init>()V
+#canRead(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#canWrite(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#getSupportedMediaTypes()Ljava/util/List;
+#read(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Lorg/springframework/core/io/Resource;
+#write(Lorg/springframework/core/io/Resource;Lorg/springframework/http/MediaType;Lorg/springframework/http/HttpOutputMessage;)V
+#read(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;
+#write(Ljava/lang/Object;Lorg/springframework/http/MediaType;Lorg/springframework/http/HttpOutputMessage;)V
@3.1.0.RELEASE
-#canRead(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
-#canWrite(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
-#getSupportedMediaTypes()Ljava/util/List;
-#read(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Lorg/springframework/core/io/Resource;
-#write(Lorg/springframework/core/io/Resource;Lorg/springframework/http/MediaType;Lorg/springframework/http/HttpOutputMessage;)V
-#read(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;
-#write(Ljava/lang/Object;Lorg/springframework/http/MediaType;Lorg/springframework/http/HttpOutputMessage;)V
@5.0.0.RELEASE
+#<init>(Z)V
@6.0.0
+#addDefaultHeaders(Lorg/springframework/http/HttpOutputMessage;Lorg/springframework/core/io/Resource;Lorg/springframework/http/MediaType;)V

+###org/springframework/http/converter/protobuf/ProtobufHttpMessageConverter
@4.1.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/http/converter/protobuf/ExtensionRegistryInitializer;)V
@5.1.0.RELEASE
*#<init>(Lorg/springframework/http/converter/protobuf/ExtensionRegistryInitializer;)V[deprecated]
+#<init>(Lcom/google/protobuf/ExtensionRegistry;)V
@6.0.0
-#<init>(Lorg/springframework/http/converter/protobuf/ExtensionRegistryInitializer;)V[deprecated]

+###org/springframework/http/converter/protobuf/ProtobufJsonFormatHttpMessageConverter
@5.0.0.RELEASE
+#<init>()V
+#<init>(Lcom/google/protobuf/util/JsonFormat$Parser;Lcom/google/protobuf/util/JsonFormat$Printer;)V
+#<init>(Lcom/google/protobuf/util/JsonFormat$Parser;Lcom/google/protobuf/util/JsonFormat$Printer;Lorg/springframework/http/converter/protobuf/ExtensionRegistryInitializer;)V
@5.1.0.RELEASE
+#<init>(Lcom/google/protobuf/util/JsonFormat$Parser;Lcom/google/protobuf/util/JsonFormat$Printer;Lcom/google/protobuf/ExtensionRegistry;)V
*#<init>(Lcom/google/protobuf/util/JsonFormat$Parser;Lcom/google/protobuf/util/JsonFormat$Printer;Lorg/springframework/http/converter/protobuf/ExtensionRegistryInitializer;)V[deprecated]
@6.0.0
-#<init>(Lcom/google/protobuf/util/JsonFormat$Parser;Lcom/google/protobuf/util/JsonFormat$Printer;Lorg/springframework/http/converter/protobuf/ExtensionRegistryInitializer;)V[deprecated]

+###org/springframework/http/converter/protobuf/ExtensionRegistryInitializer
@4.1.0.RELEASE
+#initializeExtensionRegistry(Lcom/google/protobuf/ExtensionRegistry;)V
@6.0.0
-###org/springframework/http/converter/protobuf/ExtensionRegistryInitializer

+###org/springframework/http/converter/FormHttpMessageConverter
@3.0.0.RELEASE
+#<init>()V
+#supports(Ljava/lang/Class;)Z
+#readInternal(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Lorg/springframework/util/MultiValueMap;
+#readInternal(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;
@3.0.2.RELEASE
+#setPartConverters(Ljava/util/List;)V
+#setCharset(Ljava/nio/charset/Charset;)V
+#canRead(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#canWrite(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#getSupportedMediaTypes()Ljava/util/List;
+#read(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Lorg/springframework/util/MultiValueMap;
+#write(Lorg/springframework/util/MultiValueMap;Lorg/springframework/http/MediaType;Lorg/springframework/http/HttpOutputMessage;)V
+#read(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;
+#write(Ljava/lang/Object;Lorg/springframework/http/MediaType;Lorg/springframework/http/HttpOutputMessage;)V
-#supports(Ljava/lang/Class;)Z
-#readInternal(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Lorg/springframework/util/MultiValueMap;
-#readInternal(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;
@3.0.3.RELEASE
+#addPartConverter(Lorg/springframework/http/converter/HttpMessageConverter;)V
@3.0.6.RELEASE
+#setSupportedMediaTypes(Ljava/util/List;)V
@4.1.1.RELEASE
+#setMultipartCharset(Ljava/nio/charset/Charset;)V
@5.2.0.RELEASE
+#addSupportedMediaTypes([Lorg/springframework/http/MediaType;)V
@5.3.0
+#getPartConverters()Ljava/util/List;

+###org/springframework/http/converter/json/Jackson2ObjectMapperFactoryBean
@3.2.0.RELEASE
+#<init>()V
+#setObjectMapper(Lcom/fasterxml/jackson/databind/ObjectMapper;)V
+#setDateFormat(Ljava/text/DateFormat;)V
+#setSimpleDateFormat(Ljava/lang/String;)V
+#setAnnotationIntrospector(Lcom/fasterxml/jackson/databind/AnnotationIntrospector;)V
+#setSerializers([Lcom/fasterxml/jackson/databind/JsonSerializer;)V
+#setSerializersByType(Ljava/util/Map;)V
+#setDeserializersByType(Ljava/util/Map;)V
+#setAutoDetectFields(Z)V
+#setAutoDetectGettersSetters(Z)V
+#setFailOnEmptyBeans(Z)V
+#setIndentOutput(Z)V
+#setFeaturesToEnable([Ljava/lang/Object;)V
+#setFeaturesToDisable([Ljava/lang/Object;)V
+#afterPropertiesSet()V
+#getObject()Lcom/fasterxml/jackson/databind/ObjectMapper;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#getObject()Ljava/lang/Object;
@4.0.0.RELEASE
+#setSerializationInclusion(Lcom/fasterxml/jackson/annotation/JsonInclude$Include;)V
+#setModules(Ljava/util/List;)V
@4.0.1.RELEASE
+#setModulesToInstall([Ljava/lang/Class;)V
+#setFindModulesViaServiceLoader(Z)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
@4.0.2.RELEASE
+#setPropertyNamingStrategy(Lcom/fasterxml/jackson/databind/PropertyNamingStrategy;)V
@4.1.0.RELEASE
+#setDefaultViewInclusion(Z)V
@4.1.1.RELEASE
+#setCreateXmlMapper(Z)V
+#setFailOnUnknownProperties(Z)V
@4.1.2.RELEASE
+#setMixIns(Ljava/util/Map;)V
@4.1.3.RELEASE
+#setHandlerInstantiator(Lcom/fasterxml/jackson/databind/cfg/HandlerInstantiator;)V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
@4.1.5.RELEASE
+#setLocale(Ljava/util/Locale;)V
+#setTimeZone(Ljava/util/TimeZone;)V
@4.2.0.RELEASE
+#setFilters(Lcom/fasterxml/jackson/databind/ser/FilterProvider;)V
@4.2.2.RELEASE
+#setDefaultTyping(Lcom/fasterxml/jackson/databind/jsontype/TypeResolverBuilder;)V
@4.3.0.RELEASE
+#setDeserializers([Lcom/fasterxml/jackson/databind/JsonDeserializer;)V
+#setDefaultUseWrapper(Z)V
@5.0.0.RELEASE
+#setFactory(Lcom/fasterxml/jackson/core/JsonFactory;)V

+###org/springframework/http/converter/json/SpringHandlerInstantiator
@4.1.3.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/AutowireCapableBeanFactory;)V
+#serializerInstance(Lcom/fasterxml/jackson/databind/SerializationConfig;Lcom/fasterxml/jackson/databind/introspect/Annotated;Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/JsonSerializer;
+#deserializerInstance(Lcom/fasterxml/jackson/databind/DeserializationConfig;Lcom/fasterxml/jackson/databind/introspect/Annotated;Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/JsonDeserializer;
+#keyDeserializerInstance(Lcom/fasterxml/jackson/databind/DeserializationConfig;Lcom/fasterxml/jackson/databind/introspect/Annotated;Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/KeyDeserializer;
+#typeResolverBuilderInstance(Lcom/fasterxml/jackson/databind/cfg/MapperConfig;Lcom/fasterxml/jackson/databind/introspect/Annotated;Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/jsontype/TypeResolverBuilder;
+#typeIdResolverInstance(Lcom/fasterxml/jackson/databind/cfg/MapperConfig;Lcom/fasterxml/jackson/databind/introspect/Annotated;Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/jsontype/TypeIdResolver;
@4.3.0.RELEASE
+#valueInstantiatorInstance(Lcom/fasterxml/jackson/databind/cfg/MapperConfig;Lcom/fasterxml/jackson/databind/introspect/Annotated;Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/deser/ValueInstantiator;
+#objectIdGeneratorInstance(Lcom/fasterxml/jackson/databind/cfg/MapperConfig;Lcom/fasterxml/jackson/databind/introspect/Annotated;Ljava/lang/Class;)Lcom/fasterxml/jackson/annotation/ObjectIdGenerator;
+#resolverIdGeneratorInstance(Lcom/fasterxml/jackson/databind/cfg/MapperConfig;Lcom/fasterxml/jackson/databind/introspect/Annotated;Ljava/lang/Class;)Lcom/fasterxml/jackson/annotation/ObjectIdResolver;
+#namingStrategyInstance(Lcom/fasterxml/jackson/databind/cfg/MapperConfig;Lcom/fasterxml/jackson/databind/introspect/Annotated;Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/PropertyNamingStrategy;
+#converterInstance(Lcom/fasterxml/jackson/databind/cfg/MapperConfig;Lcom/fasterxml/jackson/databind/introspect/Annotated;Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/util/Converter;
+#virtualPropertyWriterInstance(Lcom/fasterxml/jackson/databind/cfg/MapperConfig;Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/ser/VirtualBeanPropertyWriter;

+###org/springframework/http/converter/json/MappingJacksonInputMessage
@4.2.0.RELEASE
+#<init>(Ljava/io/InputStream;Lorg/springframework/http/HttpHeaders;)V
+#<init>(Ljava/io/InputStream;Lorg/springframework/http/HttpHeaders;Ljava/lang/Class;)V
+#getBody()Ljava/io/InputStream;
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#setDeserializationView(Ljava/lang/Class;)V
+#getDeserializationView()Ljava/lang/Class;

+###org/springframework/http/converter/json/MappingJackson2HttpMessageConverter
@3.1.2.RELEASE
+#<init>()V
+#setObjectMapper(Lcom/fasterxml/jackson/databind/ObjectMapper;)V
+#getObjectMapper()Lcom/fasterxml/jackson/databind/ObjectMapper;
+#setPrefixJson(Z)V
+#canRead(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#canWrite(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
@3.2.0.RELEASE
+#setPrettyPrint(Z)V
+#canRead(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#read(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;
@3.2.4.RELEASE
+#setJsonPrefix(Ljava/lang/String;)V
@4.1.0.RELEASE
-#setObjectMapper(Lcom/fasterxml/jackson/databind/ObjectMapper;)V
-#getObjectMapper()Lcom/fasterxml/jackson/databind/ObjectMapper;
-#setPrettyPrint(Z)V
-#canRead(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
-#canRead(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
-#canWrite(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
-#read(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;
@4.1.1.RELEASE
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;)V

+###org/springframework/http/converter/json/MappingJacksonValue
@4.1.0.RELEASE
+#<init>(Ljava/lang/Object;)V
+#setValue(Ljava/lang/Object;)V
+#getValue()Ljava/lang/Object;
+#setSerializationView(Ljava/lang/Class;)V
+#getSerializationView()Ljava/lang/Class;
+#setJsonpFunction(Ljava/lang/String;)V
+#getJsonpFunction()Ljava/lang/String;
@4.2.0.RELEASE
+#setFilters(Lcom/fasterxml/jackson/databind/ser/FilterProvider;)V
+#getFilters()Lcom/fasterxml/jackson/databind/ser/FilterProvider;
@4.3.18.RELEASE
*#setJsonpFunction(Ljava/lang/String;)V[deprecated]
*#getJsonpFunction()Ljava/lang/String;[deprecated]
@5.0.7.RELEASE
*#setJsonpFunction(Ljava/lang/String;)V[deprecated]
*#getJsonpFunction()Ljava/lang/String;[deprecated]
@5.1.0.RELEASE
-#setJsonpFunction(Ljava/lang/String;)V[deprecated]
-#getJsonpFunction()Ljava/lang/String;[deprecated]

+###org/springframework/http/converter/json/GsonFactoryBean
@4.1.0.RELEASE
+#<init>()V
+#setBase64EncodeByteArrays(Z)V
+#setSerializeNulls(Z)V
+#setPrettyPrinting(Z)V
+#setDisableHtmlEscaping(Z)V
+#setDateFormatPattern(Ljava/lang/String;)V
+#afterPropertiesSet()V
+#getObject()Lcom/google/gson/Gson;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#getObject()Ljava/lang/Object;

+###org/springframework/http/converter/json/AbstractJackson2HttpMessageConverter
@4.1.0.RELEASE
+#setObjectMapper(Lcom/fasterxml/jackson/databind/ObjectMapper;)V
+#getObjectMapper()Lcom/fasterxml/jackson/databind/ObjectMapper;
+#setPrettyPrint(Z)V
+#canRead(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#canRead(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#canWrite(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#read(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;
@5.3.4
+#registerObjectMappersForType(Ljava/lang/Class;Ljava/util/function/Consumer;)V
+#getObjectMappersForType(Ljava/lang/Class;)Ljava/util/Map;
+#getSupportedMediaTypes(Ljava/lang/Class;)Ljava/util/List;
@6.0.0
+#setSupportedMediaTypes(Ljava/util/List;)V

+###org/springframework/http/converter/json/JsonbHttpMessageConverter
@5.0.0.RELEASE
+#<init>()V
+#<init>(Ljavax/json/bind/JsonbConfig;)V
+#<init>(Ljavax/json/bind/Jsonb;)V
+#setJsonb(Ljavax/json/bind/Jsonb;)V
+#getJsonb()Ljavax/json/bind/Jsonb;
@6.0.0
+#<init>(Ljakarta/json/bind/JsonbConfig;)V
+#<init>(Ljakarta/json/bind/Jsonb;)V
+#setJsonb(Ljakarta/json/bind/Jsonb;)V
+#getJsonb()Ljakarta/json/bind/Jsonb;
-#<init>(Ljavax/json/bind/JsonbConfig;)V
-#<init>(Ljavax/json/bind/Jsonb;)V
-#setJsonb(Ljavax/json/bind/Jsonb;)V
-#getJsonb()Ljavax/json/bind/Jsonb;

+###org/springframework/http/converter/json/GsonHttpMessageConverter
@4.1.0.RELEASE
+#<init>()V
+#setGson(Lcom/google/gson/Gson;)V
+#getGson()Lcom/google/gson/Gson;
+#setJsonPrefix(Ljava/lang/String;)V
+#setPrefixJson(Z)V
+#canRead(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#canRead(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#canWrite(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#read(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;
@4.2.0.RELEASE
-#canRead(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
@4.3.8.RELEASE
-#canRead(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
-#canWrite(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
@5.0.0.RELEASE
+#<init>(Lcom/google/gson/Gson;)V
-#setJsonPrefix(Ljava/lang/String;)V
-#setPrefixJson(Z)V
-#read(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;

+###org/springframework/http/converter/json/Jackson2ObjectMapperBuilder
@4.1.1.RELEASE
+#<init>()V
+#createXmlMapper(Z)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#dateFormat(Ljava/text/DateFormat;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#simpleDateFormat(Ljava/lang/String;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#annotationIntrospector(Lcom/fasterxml/jackson/databind/AnnotationIntrospector;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#propertyNamingStrategy(Lcom/fasterxml/jackson/databind/PropertyNamingStrategy;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#serializationInclusion(Lcom/fasterxml/jackson/annotation/JsonInclude$Include;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#serializers([Lcom/fasterxml/jackson/databind/JsonSerializer;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#serializersByType(Ljava/util/Map;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#deserializersByType(Ljava/util/Map;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#autoDetectFields(Z)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#autoDetectGettersSetters(Z)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#defaultViewInclusion(Z)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#failOnUnknownProperties(Z)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#failOnEmptyBeans(Z)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#indentOutput(Z)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#featuresToEnable([Ljava/lang/Object;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#featuresToDisable([Ljava/lang/Object;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#modules(Ljava/util/List;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#modulesToInstall([Ljava/lang/Class;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#findModulesViaServiceLoader(Z)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#moduleClassLoader(Ljava/lang/ClassLoader;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#build()Lcom/fasterxml/jackson/databind/ObjectMapper;
+#configure(Lcom/fasterxml/jackson/databind/ObjectMapper;)V
+#json()Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#xml()Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
@4.1.2.RELEASE
+#serializerByType(Ljava/lang/Class;Lcom/fasterxml/jackson/databind/JsonSerializer;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#deserializerByType(Ljava/lang/Class;Lcom/fasterxml/jackson/databind/JsonDeserializer;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#mixIn(Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#mixIns(Ljava/util/Map;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
@4.1.3.RELEASE
+#handlerInstantiator(Lcom/fasterxml/jackson/databind/cfg/HandlerInstantiator;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#applicationContext(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
@4.1.5.RELEASE
+#locale(Ljava/util/Locale;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#locale(Ljava/lang/String;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#timeZone(Ljava/util/TimeZone;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#timeZone(Ljava/lang/String;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#modules([Lcom/fasterxml/jackson/databind/Module;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#modulesToInstall([Lcom/fasterxml/jackson/databind/Module;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
@4.2.0.RELEASE
+#filters(Lcom/fasterxml/jackson/databind/ser/FilterProvider;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
@4.2.2.RELEASE
+#defaultTyping(Lcom/fasterxml/jackson/databind/jsontype/TypeResolverBuilder;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
@4.3.0.RELEASE
+#deserializers([Lcom/fasterxml/jackson/databind/JsonDeserializer;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#defaultUseWrapper(Z)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
@5.0.0.RELEASE
+#factory(Lcom/fasterxml/jackson/core/JsonFactory;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#smile()Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#cbor()Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
@5.1.0.RELEASE
+#visibility(Lcom/fasterxml/jackson/annotation/PropertyAccessor;Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
@5.2.4.RELEASE
+#annotationIntrospector(Ljava/util/function/Function;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
@5.3.0
+#serializationInclusion(Lcom/fasterxml/jackson/annotation/JsonInclude$Value;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#postConfigurer(Ljava/util/function/Consumer;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
@5.3.22
+#modules(Ljava/util/function/Consumer;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;
+#modulesToInstall(Ljava/util/function/Consumer;)Lorg/springframework/http/converter/json/Jackson2ObjectMapperBuilder;

+###org/springframework/http/converter/json/GsonBuilderUtils
@4.1.0.RELEASE
+#<init>()V
+#gsonBuilderWithBase64EncodedByteArrays()Lcom/google/gson/GsonBuilder;

+###org/springframework/http/converter/json/AbstractJsonHttpMessageConverter
@5.0.0.RELEASE
+#<init>()V
+#setJsonPrefix(Ljava/lang/String;)V
+#setPrefixJson(Z)V
+#read(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;

+###org/springframework/http/converter/feed/AbstractWireFeedHttpMessageConverter
@3.0.2.RELEASE

+###org/springframework/http/converter/feed/RssChannelHttpMessageConverter
@3.0.2.RELEASE
+#<init>()V

+###org/springframework/http/converter/feed/AtomFeedHttpMessageConverter
@3.0.2.RELEASE
+#<init>()V

+###org/springframework/http/converter/smile/MappingJackson2SmileHttpMessageConverter
@5.0.0.RELEASE
+#<init>()V
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;)V
+#setObjectMapper(Lcom/fasterxml/jackson/databind/ObjectMapper;)V

+###org/springframework/http/converter/BufferedImageHttpMessageConverter
@3.0.0.RELEASE
+#<init>()V
+#getDefaultContentType()Lorg/springframework/http/MediaType;
+#setDefaultContentType(Lorg/springframework/http/MediaType;)V
+#setCacheDir(Ljava/io/File;)V
+#canRead(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#canWrite(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#getSupportedMediaTypes()Ljava/util/List;
+#read(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/awt/image/BufferedImage;
+#write(Ljava/awt/image/BufferedImage;Lorg/springframework/http/MediaType;Lorg/springframework/http/HttpOutputMessage;)V
+#read(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;
+#write(Ljava/lang/Object;Lorg/springframework/http/MediaType;Lorg/springframework/http/HttpOutputMessage;)V

+###org/springframework/http/converter/HttpMessageConversionException
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/http/converter/ByteArrayHttpMessageConverter
@3.0.0.RELEASE
+#<init>()V
+#supports(Ljava/lang/Class;)Z
+#readInternal(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)[B
+#readInternal(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;

+###org/springframework/http/converter/AbstractGenericHttpMessageConverter
@4.2.0.RELEASE
+#canRead(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#canWrite(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#write(Ljava/lang/Object;Ljava/lang/reflect/Type;Lorg/springframework/http/MediaType;Lorg/springframework/http/HttpOutputMessage;)V

+###org/springframework/http/converter/ObjectToStringHttpMessageConverter
@3.2.0.RELEASE
+#<init>(Lorg/springframework/core/convert/ConversionService;)V
+#<init>(Lorg/springframework/core/convert/ConversionService;Ljava/nio/charset/Charset;)V
+#setWriteAcceptCharset(Z)V
+#canRead(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#canWrite(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z

+###org/springframework/http/converter/HttpMessageConverter
@3.0.0.RELEASE
+#canRead(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#canWrite(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#getSupportedMediaTypes()Ljava/util/List;
+#read(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;
+#write(Ljava/lang/Object;Lorg/springframework/http/MediaType;Lorg/springframework/http/HttpOutputMessage;)V
@5.3.4
+#getSupportedMediaTypes(Ljava/lang/Class;)Ljava/util/List;

+###org/springframework/http/converter/GenericHttpMessageConverter
@3.2.0.RELEASE
+#canRead(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#read(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;
@4.2.0.RELEASE
+#canWrite(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#write(Ljava/lang/Object;Ljava/lang/reflect/Type;Lorg/springframework/http/MediaType;Lorg/springframework/http/HttpOutputMessage;)V

+###org/springframework/http/converter/cbor/MappingJackson2CborHttpMessageConverter
@5.0.0.RELEASE
+#<init>()V
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;)V
+#setObjectMapper(Lcom/fasterxml/jackson/databind/ObjectMapper;)V

+###org/springframework/http/converter/HttpMessageNotReadableException
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@5.1.0.RELEASE
*#<init>(Ljava/lang/String;)V[deprecated]
*#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V[deprecated]
+#<init>(Ljava/lang/String;Lorg/springframework/http/HttpInputMessage;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;Lorg/springframework/http/HttpInputMessage;)V
+#getHttpInputMessage()Lorg/springframework/http/HttpInputMessage;

+###org/springframework/http/converter/xml/Jaxb2RootElementHttpMessageConverter
@3.0.0.RELEASE
+#<init>()V
+#canRead(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#canWrite(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
@3.2.8.RELEASE
+#setProcessExternalEntities(Z)V
@3.2.9.RELEASE
+#isProcessExternalEntities()Z
@3.2.14.RELEASE
+#setSupportDtd(Z)V
+#isSupportDtd()Z
@4.0.0.RELEASE
-#setSupportDtd(Z)V
-#isSupportDtd()Z
-#setProcessExternalEntities(Z)V
-#isProcessExternalEntities()Z
@4.0.2.RELEASE
+#setProcessExternalEntities(Z)V
@4.0.5.RELEASE
+#isProcessExternalEntities()Z
@4.1.7.RELEASE
+#setSupportDtd(Z)V
+#isSupportDtd()Z

+###org/springframework/http/converter/xml/Jaxb2CollectionHttpMessageConverter
@3.2.0.RELEASE
+#<init>()V
+#canRead(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#canRead(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#canWrite(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#read(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/util/Collection;
+#read(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;
@4.2.0.RELEASE
+#canWrite(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#write(Ljava/util/Collection;Ljava/lang/reflect/Type;Lorg/springframework/http/MediaType;Lorg/springframework/http/HttpOutputMessage;)V
+#write(Ljava/lang/Object;Ljava/lang/reflect/Type;Lorg/springframework/http/MediaType;Lorg/springframework/http/HttpOutputMessage;)V

+###org/springframework/http/converter/xml/MarshallingHttpMessageConverter
@3.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/oxm/Marshaller;)V
+#<init>(Lorg/springframework/oxm/Marshaller;Lorg/springframework/oxm/Unmarshaller;)V
+#setMarshaller(Lorg/springframework/oxm/Marshaller;)V
+#setUnmarshaller(Lorg/springframework/oxm/Unmarshaller;)V
+#supports(Ljava/lang/Class;)Z
@4.0.0.RELEASE
+#canRead(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#canWrite(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
-#supports(Ljava/lang/Class;)Z

+###org/springframework/http/converter/xml/SourceHttpMessageConverter
@3.0.0.RELEASE
+#<init>()V
+#supports(Ljava/lang/Class;)Z
@3.2.5.RELEASE
+#setProcessExternalEntities(Z)V
@3.2.8.RELEASE
+#isProcessExternalEntities()Z
@3.2.14.RELEASE
+#setSupportDtd(Z)V
+#isSupportDtd()Z
@4.0.0.RELEASE
-#setSupportDtd(Z)V
-#isSupportDtd()Z
-#isProcessExternalEntities()Z
@4.0.2.RELEASE
+#isProcessExternalEntities()Z
@4.1.7.RELEASE
+#setSupportDtd(Z)V
+#isSupportDtd()Z

+###org/springframework/http/converter/xml/AbstractJaxb2HttpMessageConverter
@3.0.0.RELEASE
+#<init>()V

+###org/springframework/http/converter/xml/AbstractXmlHttpMessageConverter
@3.0.0.RELEASE
+#readInternal(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;

+###org/springframework/http/converter/xml/MappingJackson2XmlHttpMessageConverter
@4.1.0.RELEASE
+#<init>()V
@4.1.1.RELEASE
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;)V
+#setObjectMapper(Lcom/fasterxml/jackson/databind/ObjectMapper;)V

+###org/springframework/remoting/caucho/HessianExporter
@2.5.1
+#<init>()V
+#setSerializerFactory(Lcom/caucho/hessian/io/SerializerFactory;)V
+#setSendCollectionType(Z)V
+#setDebug(Z)V
+#afterPropertiesSet()V
+#prepare()V
+#invoke(Ljava/io/InputStream;Ljava/io/OutputStream;)V
@4.0.0.RELEASE
+#setAllowNonSerializable(Z)V
+#setRemoteResolver(Lcom/caucho/hessian/io/HessianRemoteResolver;)V
@6.0.0
-###org/springframework/remoting/caucho/HessianExporter

+###org/springframework/remoting/caucho/HessianProxyFactoryBean
@2.5
+#<init>()V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#afterPropertiesSet()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@2.5.2
-#setBeanClassLoader(Ljava/lang/ClassLoader;)V
@6.0.0
-###org/springframework/remoting/caucho/HessianProxyFactoryBean

+###org/springframework/remoting/caucho/SimpleHessianServiceExporter
@2.5.1
+#<init>()V
+#handle(Lcom/sun/net/httpserver/HttpExchange;)V
@6.0.0
-###org/springframework/remoting/caucho/SimpleHessianServiceExporter

+###org/springframework/remoting/caucho/HessianServiceExporter
@2.5
+#<init>()V
+#setSerializerFactory(Lcom/caucho/hessian/io/SerializerFactory;)V
+#setSendCollectionType(Z)V
+#afterPropertiesSet()V
+#prepare()V
+#handleRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@2.5.1
-#setSerializerFactory(Lcom/caucho/hessian/io/SerializerFactory;)V
-#setSendCollectionType(Z)V
-#afterPropertiesSet()V
-#prepare()V
@6.0.0
-###org/springframework/remoting/caucho/HessianServiceExporter

+###org/springframework/remoting/caucho/HessianClientInterceptor
@2.5
+#<init>()V
+#setProxyFactory(Lcom/caucho/hessian/client/HessianProxyFactory;)V
+#setSerializerFactory(Lcom/caucho/hessian/io/SerializerFactory;)V
+#setSendCollectionType(Z)V
+#setUsername(Ljava/lang/String;)V
+#setPassword(Ljava/lang/String;)V
+#setOverloadEnabled(Z)V
+#afterPropertiesSet()V
+#prepare()V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
@2.5.1
+#setDebug(Z)V
+#setChunkedPost(Z)V
+#setReadTimeout(J)V
+#setHessian2(Z)V
+#setHessian2Request(Z)V
+#setHessian2Reply(Z)V
@4.0.0.RELEASE
+#setAllowNonSerializable(Z)V
+#setConnectionFactory(Lcom/caucho/hessian/client/HessianConnectionFactory;)V
+#setConnectTimeout(J)V
@6.0.0
-###org/springframework/remoting/caucho/HessianClientInterceptor

+###org/springframework/remoting/httpinvoker/SimpleHttpInvokerRequestExecutor
@2.5
+#<init>()V
@3.0.6.RELEASE
+#setConnectTimeout(I)V
+#setReadTimeout(I)V
@6.0.0
-###org/springframework/remoting/httpinvoker/SimpleHttpInvokerRequestExecutor

+###org/springframework/remoting/httpinvoker/HttpInvokerRequestExecutor
@2.5
+#executeRequest(Lorg/springframework/remoting/httpinvoker/HttpInvokerClientConfiguration;Lorg/springframework/remoting/support/RemoteInvocation;)Lorg/springframework/remoting/support/RemoteInvocationResult;
@6.0.0
-###org/springframework/remoting/httpinvoker/HttpInvokerRequestExecutor

+###org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter
@2.5
+#<init>()V
+#setContentType(Ljava/lang/String;)V
+#getContentType()Ljava/lang/String;
+#afterPropertiesSet()V
+#prepare()V
+#handleRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@2.5.1
-#setContentType(Ljava/lang/String;)V
-#getContentType()Ljava/lang/String;
-#afterPropertiesSet()V
-#prepare()V
@6.0.0
-###org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter

+###org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor
@2.5
+#<init>()V
+#setContentType(Ljava/lang/String;)V
+#getContentType()Ljava/lang/String;
+#setAcceptGzipEncoding(Z)V
+#isAcceptGzipEncoding()Z
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#executeRequest(Lorg/springframework/remoting/httpinvoker/HttpInvokerClientConfiguration;Lorg/springframework/remoting/support/RemoteInvocation;)Lorg/springframework/remoting/support/RemoteInvocationResult;
@6.0.0
-###org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor

+###org/springframework/remoting/httpinvoker/HttpComponentsHttpInvokerRequestExecutor
@3.1.0.RELEASE
+#<init>()V
+#<init>(Lorg/apache/http/client/HttpClient;)V
+#setHttpClient(Lorg/apache/http/client/HttpClient;)V
+#getHttpClient()Lorg/apache/http/client/HttpClient;
+#setConnectTimeout(I)V
+#setReadTimeout(I)V
@4.1.4.RELEASE
+#setConnectionRequestTimeout(I)V
@6.0.0
-###org/springframework/remoting/httpinvoker/HttpComponentsHttpInvokerRequestExecutor

+###org/springframework/remoting/httpinvoker/HttpInvokerClientInterceptor
@2.5
+#<init>()V
+#setCodebaseUrl(Ljava/lang/String;)V
+#getCodebaseUrl()Ljava/lang/String;
+#setHttpInvokerRequestExecutor(Lorg/springframework/remoting/httpinvoker/HttpInvokerRequestExecutor;)V
+#getHttpInvokerRequestExecutor()Lorg/springframework/remoting/httpinvoker/HttpInvokerRequestExecutor;
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#afterPropertiesSet()V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
@2.5.2
-#setBeanClassLoader(Ljava/lang/ClassLoader;)V
@6.0.0
-###org/springframework/remoting/httpinvoker/HttpInvokerClientInterceptor

+###org/springframework/remoting/httpinvoker/HttpInvokerClientConfiguration
@2.5
+#getServiceUrl()Ljava/lang/String;
+#getCodebaseUrl()Ljava/lang/String;
@6.0.0
-###org/springframework/remoting/httpinvoker/HttpInvokerClientConfiguration

+###org/springframework/remoting/httpinvoker/HttpInvokerProxyFactoryBean
@2.5
+#<init>()V
+#afterPropertiesSet()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@6.0.0
-###org/springframework/remoting/httpinvoker/HttpInvokerProxyFactoryBean

+###org/springframework/remoting/httpinvoker/SimpleHttpInvokerServiceExporter
@2.5.1
+#<init>()V
+#handle(Lcom/sun/net/httpserver/HttpExchange;)V
@6.0.0
-###org/springframework/remoting/httpinvoker/SimpleHttpInvokerServiceExporter

+###org/springframework/remoting/jaxws/AbstractJaxWsServiceExporter
@2.5.5
+#<init>()V
+#setEndpointProperties(Ljava/util/Map;)V
+#setExecutor(Ljava/util/concurrent/Executor;)V
+#setTaskExecutor(Lorg/springframework/core/task/TaskExecutor;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#afterPropertiesSet()V
+#publishEndpoints()V
+#destroy()V
@3.0.0.RELEASE
-#setTaskExecutor(Lorg/springframework/core/task/TaskExecutor;)V
@3.0.4.RELEASE
+#setBindingType(Ljava/lang/String;)V
+#setWebServiceFeatures([Ljava/lang/Object;)V
@4.0.0.RELEASE
+#setEndpointFeatures([Ljavax/xml/ws/WebServiceFeature;)V
*#setWebServiceFeatures([Ljava/lang/Object;)V[deprecated]
@5.0.0.RELEASE
-#setWebServiceFeatures([Ljava/lang/Object;)V[deprecated]
@6.0.0
-###org/springframework/remoting/jaxws/AbstractJaxWsServiceExporter

+###org/springframework/remoting/jaxws/JaxWsSoapFaultException
@2.5
+#<init>(Ljavax/xml/ws/soap/SOAPFaultException;)V
+#getFault()Ljavax/xml/soap/SOAPFault;
+#getFaultCode()Ljava/lang/String;
+#getFaultCodeAsQName()Ljavax/xml/namespace/QName;
+#getFaultString()Ljava/lang/String;
+#getFaultActor()Ljava/lang/String;
@6.0.0
-###org/springframework/remoting/jaxws/JaxWsSoapFaultException

+###org/springframework/remoting/jaxws/LocalJaxWsServiceFactoryBean
@2.5
+#<init>()V
+#afterPropertiesSet()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@3.0.0.RELEASE
+#getObject()Ljavax/xml/ws/Service;
@6.0.0
-###org/springframework/remoting/jaxws/LocalJaxWsServiceFactoryBean

+###org/springframework/remoting/jaxws/JaxWsPortProxyFactoryBean
@2.5
+#<init>()V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#afterPropertiesSet()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@3.0.3.RELEASE
-#setBeanClassLoader(Ljava/lang/ClassLoader;)V
@6.0.0
-###org/springframework/remoting/jaxws/JaxWsPortProxyFactoryBean

+###org/springframework/remoting/jaxws/LocalJaxWsServiceFactory
@2.5
+#<init>()V
+#setWsdlDocumentUrl(Ljava/net/URL;)V
+#getWsdlDocumentUrl()Ljava/net/URL;
+#setNamespaceUri(Ljava/lang/String;)V
+#getNamespaceUri()Ljava/lang/String;
+#setServiceName(Ljava/lang/String;)V
+#getServiceName()Ljava/lang/String;
+#setExecutor(Ljava/util/concurrent/Executor;)V
+#setTaskExecutor(Lorg/springframework/core/task/TaskExecutor;)V
+#setHandlerResolver(Ljavax/xml/ws/handler/HandlerResolver;)V
+#createJaxWsService()Ljavax/xml/ws/Service;
@3.0.0.RELEASE
-#setTaskExecutor(Lorg/springframework/core/task/TaskExecutor;)V
@3.2.0.RELEASE
+#setWsdlDocumentResource(Lorg/springframework/core/io/Resource;)V
@4.0.0.RELEASE
+#setServiceFeatures([Ljavax/xml/ws/WebServiceFeature;)V
@6.0.0
-###org/springframework/remoting/jaxws/LocalJaxWsServiceFactory

+###org/springframework/remoting/jaxws/SimpleJaxWsServiceExporter
@2.5
+#<init>()V
+#setBaseAddress(Ljava/lang/String;)V
+#setExecutor(Ljava/util/concurrent/Executor;)V
+#setTaskExecutor(Lorg/springframework/core/task/TaskExecutor;)V
+#setEndpointProperties(Ljava/util/Map;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#destroy()V
@2.5.5
-#setExecutor(Ljava/util/concurrent/Executor;)V
-#setTaskExecutor(Lorg/springframework/core/task/TaskExecutor;)V
-#setEndpointProperties(Ljava/util/Map;)V
-#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
-#destroy()V
@6.0.0
-###org/springframework/remoting/jaxws/SimpleJaxWsServiceExporter

+###org/springframework/remoting/jaxws/JaxWsPortClientInterceptor
@2.5
+#<init>()V
+#setJaxWsService(Ljavax/xml/ws/Service;)V
+#getJaxWsService()Ljavax/xml/ws/Service;
+#setPortName(Ljava/lang/String;)V
+#getPortName()Ljava/lang/String;
+#setServiceInterface(Ljava/lang/Class;)V
+#getServiceInterface()Ljava/lang/Class;
+#setLookupServiceOnStartup(Z)V
+#afterPropertiesSet()V
+#prepare()V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
@2.5.5
+#setUsername(Ljava/lang/String;)V
+#getUsername()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setEndpointAddress(Ljava/lang/String;)V
+#getEndpointAddress()Ljava/lang/String;
+#setMaintainSession(Z)V
+#isMaintainSession()Z
+#setUseSoapAction(Z)V
+#isUseSoapAction()Z
+#setSoapActionUri(Ljava/lang/String;)V
+#getSoapActionUri()Ljava/lang/String;
+#setCustomProperties(Ljava/util/Map;)V
+#getCustomProperties()Ljava/util/Map;
+#addCustomProperty(Ljava/lang/String;Ljava/lang/Object;)V
@3.0.3.RELEASE
+#setWebServiceFeatures([Ljava/lang/Object;)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
@4.0.0.RELEASE
+#setPortFeatures([Ljavax/xml/ws/WebServiceFeature;)V
*#setWebServiceFeatures([Ljava/lang/Object;)V[deprecated]
@5.0.0.RELEASE
-#setWebServiceFeatures([Ljava/lang/Object;)V[deprecated]
@6.0.0
-###org/springframework/remoting/jaxws/JaxWsPortClientInterceptor

+###org/springframework/remoting/jaxws/SimpleHttpServerJaxWsServiceExporter
@2.5.5
+#<init>()V
+#setServer(Lcom/sun/net/httpserver/HttpServer;)V
+#setPort(I)V
+#setHostname(Ljava/lang/String;)V
+#setBacklog(I)V
+#setShutdownDelay(I)V
+#setBasePath(Ljava/lang/String;)V
+#setFilters(Ljava/util/List;)V
+#setAuthenticator(Lcom/sun/net/httpserver/Authenticator;)V
+#afterPropertiesSet()V
+#destroy()V
@6.0.0
-###org/springframework/remoting/jaxws/SimpleHttpServerJaxWsServiceExporter

+###org/springframework/web/HttpMediaTypeException
@3.0.0.RELEASE
+#getSupportedMediaTypes()Ljava/util/List;
@6.0.0
+#getBody()Lorg/springframework/http/ProblemDetail;
+#getDetailMessageCode()Ljava/lang/String;
+#getDetailMessageArguments()[Ljava/lang/Object;

+###org/springframework/web/HttpMediaTypeNotAcceptableException
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/util/List;)V
@6.0.0
+#getStatusCode()Lorg/springframework/http/HttpStatusCode;
+#getHeaders()Lorg/springframework/http/HttpHeaders;

+###org/springframework/web/jsf/DelegatingPhaseListenerMulticaster
@1.2.7
+#<init>()V
+#getPhaseId()Ljavax/faces/event/PhaseId;
+#beforePhase(Ljavax/faces/event/PhaseEvent;)V
+#afterPhase(Ljavax/faces/event/PhaseEvent;)V
@2.0-m1
-###org/springframework/web/jsf/DelegatingPhaseListenerMulticaster

+###org/springframework/web/jsf/el/WebApplicationContextFacesELResolver
@2.5
+#<init>()V
+#getValue(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getType(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Class;
+#setValue(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#isReadOnly(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Z
+#getFeatureDescriptors(Ljavax/el/ELContext;Ljava/lang/Object;)Ljava/util/Iterator;
+#getCommonPropertyType(Ljavax/el/ELContext;Ljava/lang/Object;)Ljava/lang/Class;
@6.0.0
+#getValue(Ljakarta/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getType(Ljakarta/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Class;
+#setValue(Ljakarta/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#isReadOnly(Ljakarta/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Z
+#getFeatureDescriptors(Ljakarta/el/ELContext;Ljava/lang/Object;)Ljava/util/Iterator;
+#getCommonPropertyType(Ljakarta/el/ELContext;Ljava/lang/Object;)Ljava/lang/Class;
-#getValue(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#getType(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Class;
-#setValue(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
-#isReadOnly(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Z
-#getFeatureDescriptors(Ljavax/el/ELContext;Ljava/lang/Object;)Ljava/util/Iterator;
-#getCommonPropertyType(Ljavax/el/ELContext;Ljava/lang/Object;)Ljava/lang/Class;

+###org/springframework/web/jsf/el/SpringBeanFacesELResolver
@2.5
+#<init>()V
+#getValue(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getType(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Class;
+#setValue(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#isReadOnly(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Z
+#getFeatureDescriptors(Ljavax/el/ELContext;Ljava/lang/Object;)Ljava/util/Iterator;
+#getCommonPropertyType(Ljavax/el/ELContext;Ljava/lang/Object;)Ljava/lang/Class;
@2.5.2
-#getValue(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#getType(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Class;
-#setValue(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
-#isReadOnly(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Z
-#getFeatureDescriptors(Ljavax/el/ELContext;Ljava/lang/Object;)Ljava/util/Iterator;
-#getCommonPropertyType(Ljavax/el/ELContext;Ljava/lang/Object;)Ljava/lang/Class;
@5.0.0.RELEASE
+#getValue(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getType(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Class;
+#setValue(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#isReadOnly(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Z
+#getFeatureDescriptors(Ljavax/el/ELContext;Ljava/lang/Object;)Ljava/util/Iterator;
+#getCommonPropertyType(Ljavax/el/ELContext;Ljava/lang/Object;)Ljava/lang/Class;
@6.0.0
+#getValue(Ljakarta/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getType(Ljakarta/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Class;
+#setValue(Ljakarta/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#isReadOnly(Ljakarta/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Z
+#getFeatureDescriptors(Ljakarta/el/ELContext;Ljava/lang/Object;)Ljava/util/Iterator;
+#getCommonPropertyType(Ljakarta/el/ELContext;Ljava/lang/Object;)Ljava/lang/Class;
-#getValue(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#getType(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Class;
-#setValue(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
-#isReadOnly(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Z
-#getFeatureDescriptors(Ljavax/el/ELContext;Ljava/lang/Object;)Ljava/util/Iterator;
-#getCommonPropertyType(Ljavax/el/ELContext;Ljava/lang/Object;)Ljava/lang/Class;

+###org/springframework/web/jsf/DelegatingNavigationHandlerProxy
@1.2.7
+#<init>()V
+#<init>(Ljavax/faces/application/NavigationHandler;)V
+#handleNavigation(Ljavax/faces/context/FacesContext;Ljava/lang/String;Ljava/lang/String;)V
@2.0-m1
-###org/springframework/web/jsf/DelegatingNavigationHandlerProxy

+###org/springframework/web/jsf/DecoratingNavigationHandler
@1.2.7
+#getDecoratedNavigationHandler()Ljavax/faces/application/NavigationHandler;
+#handleNavigation(Ljavax/faces/context/FacesContext;Ljava/lang/String;Ljava/lang/String;)V
+#handleNavigation(Ljavax/faces/context/FacesContext;Ljava/lang/String;Ljava/lang/String;Ljavax/faces/application/NavigationHandler;)V
@2.0-m1
-###org/springframework/web/jsf/DecoratingNavigationHandler

+###org/springframework/web/multipart/support/StandardServletMultipartResolver
@3.1.0.RELEASE
+#<init>()V
+#isMultipart(Ljavax/servlet/http/HttpServletRequest;)Z
+#resolveMultipart(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/multipart/MultipartHttpServletRequest;
+#cleanupMultipart(Lorg/springframework/web/multipart/MultipartHttpServletRequest;)V
@3.2.9.RELEASE
+#setResolveLazily(Z)V
@4.0.0.RELEASE
-#setResolveLazily(Z)V
@4.0.5.RELEASE
+#setResolveLazily(Z)V
@5.3.9
+#setStrictServletCompliance(Z)V
@6.0.0
+#isMultipart(Ljakarta/servlet/http/HttpServletRequest;)Z
+#resolveMultipart(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/web/multipart/MultipartHttpServletRequest;
-#isMultipart(Ljavax/servlet/http/HttpServletRequest;)Z
-#resolveMultipart(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/multipart/MultipartHttpServletRequest;

+###org/springframework/web/multipart/support/MissingServletRequestPartException
@3.1.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#getRequestPartName()Ljava/lang/String;
@6.0.0
+#getStatusCode()Lorg/springframework/http/HttpStatusCode;
+#getBody()Lorg/springframework/http/ProblemDetail;
+#getDetailMessageArguments()[Ljava/lang/Object;

+###org/springframework/web/multipart/support/StandardMultipartHttpServletRequest
@3.1.0.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletRequest;)V
+#getMultipartContentType(Ljava/lang/String;)Ljava/lang/String;
+#getMultipartHeaders(Ljava/lang/String;)Lorg/springframework/http/HttpHeaders;
@3.2.9.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletRequest;Z)V
+#getParameterNames()Ljava/util/Enumeration;
+#getParameterMap()Ljava/util/Map;
@4.0.0.RELEASE
-#<init>(Ljavax/servlet/http/HttpServletRequest;Z)V
-#getParameterNames()Ljava/util/Enumeration;
-#getParameterMap()Ljava/util/Map;
@4.0.5.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletRequest;Z)V
+#getParameterNames()Ljava/util/Enumeration;
+#getParameterMap()Ljava/util/Map;
@6.0.0
+#<init>(Ljakarta/servlet/http/HttpServletRequest;)V
+#<init>(Ljakarta/servlet/http/HttpServletRequest;Z)V
-#<init>(Ljavax/servlet/http/HttpServletRequest;)V
-#<init>(Ljavax/servlet/http/HttpServletRequest;Z)V

+###org/springframework/web/multipart/support/MultipartResolutionDelegate
@4.3.0.RELEASE
+#<init>()V
+#isMultipartRequest(Ljavax/servlet/http/HttpServletRequest;)Z
+#isMultipartArgument(Lorg/springframework/core/MethodParameter;)Z
+#resolveMultipartArgument(Ljava/lang/String;Lorg/springframework/core/MethodParameter;Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/Object;
@5.1.2.RELEASE
+#resolveMultipartRequest(Lorg/springframework/web/context/request/NativeWebRequest;)Lorg/springframework/web/multipart/MultipartRequest;
@5.2.0.RELEASE
-#<init>()V
@6.0.0
+#isMultipartRequest(Ljakarta/servlet/http/HttpServletRequest;)Z
+#resolveMultipartArgument(Ljava/lang/String;Lorg/springframework/core/MethodParameter;Ljakarta/servlet/http/HttpServletRequest;)Ljava/lang/Object;
-#isMultipartRequest(Ljavax/servlet/http/HttpServletRequest;)Z
-#resolveMultipartArgument(Ljava/lang/String;Lorg/springframework/core/MethodParameter;Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/Object;

+###org/springframework/web/multipart/support/RequestPartServletServerHttpRequest
@3.1.0.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)V
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#getBody()Ljava/io/InputStream;
@6.0.0
+#<init>(Ljakarta/servlet/http/HttpServletRequest;Ljava/lang/String;)V
-#<init>(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)V

+###org/springframework/web/multipart/commons/CommonsFileUploadSupport
@2.0-m2
+#<init>()V
+#getFileItemFactory()Lorg/apache/commons/fileupload/disk/DiskFileItemFactory;
+#getFileUpload()Lorg/apache/commons/fileupload/FileUpload;
+#setMaxUploadSize(J)V
+#setMaxInMemorySize(I)V
+#setDefaultEncoding(Ljava/lang/String;)V
+#setUploadTempDir(Lorg/springframework/core/io/Resource;)V
@2.5.1
-###org/springframework/web/multipart/commons/CommonsFileUploadSupport

+###org/springframework/web/multipart/commons/CommonsFileUploadSupport$MultipartParsingResult
@2.0-m2
+#<init>(Ljava/util/Map;Ljava/util/Map;)V
+#getMultipartFiles()Ljava/util/Map;
+#getMultipartParameters()Ljava/util/Map;
@2.5.1
-###org/springframework/web/multipart/commons/CommonsFileUploadSupport$MultipartParsingResult

+###org/springframework/web/multipart/MultipartRequest
@3.0.0.RELEASE
+#getFileNames()Ljava/util/Iterator;
+#getFile(Ljava/lang/String;)Lorg/springframework/web/multipart/MultipartFile;
+#getFiles(Ljava/lang/String;)Ljava/util/List;
+#getFileMap()Ljava/util/Map;
+#getMultiFileMap()Lorg/springframework/util/MultiValueMap;
@3.1.0.RELEASE
+#getMultipartContentType(Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/web/HttpMediaTypeNotSupportedException
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/http/MediaType;Ljava/util/List;)V
+#<init>(Lorg/springframework/http/MediaType;Ljava/util/List;Ljava/lang/String;)V
+#getContentType()Lorg/springframework/http/MediaType;
@6.0.0
+#<init>(Lorg/springframework/http/MediaType;Ljava/util/List;Lorg/springframework/http/HttpMethod;)V
+#<init>(Lorg/springframework/http/MediaType;Ljava/util/List;Lorg/springframework/http/HttpMethod;Ljava/lang/String;)V
+#getStatusCode()Lorg/springframework/http/HttpStatusCode;
+#getHeaders()Lorg/springframework/http/HttpHeaders;
-#<init>(Lorg/springframework/http/MediaType;Ljava/util/List;Ljava/lang/String;)V
@6.0.5
+#<init>(Ljava/lang/String;Ljava/util/List;)V

+###org/springframework/web/accept/PathExtensionContentNegotiationStrategy
@3.2.0.RELEASE
+#<init>(Ljava/util/Map;)V
+#<init>()V
+#setUseJaf(Z)V
@4.1.0.RELEASE
+#setIgnoreUnknownExtensions(Z)V
@4.2.8.RELEASE
+#setUrlPathHelper(Lorg/springframework/web/util/UrlPathHelper;)V
@4.3.0.RELEASE
+#getMediaTypeForResource(Lorg/springframework/core/io/Resource;)Lorg/springframework/http/MediaType;
-#setUrlPathHelper(Lorg/springframework/web/util/UrlPathHelper;)V
@4.3.2.RELEASE
+#setUrlPathHelper(Lorg/springframework/web/util/UrlPathHelper;)V
@5.0.0.RELEASE
*#setUseJaf(Z)V[deprecated]
-#setIgnoreUnknownExtensions(Z)V

+###org/springframework/web/accept/MappingMediaTypeFileExtensionResolver
@3.2.0.RELEASE
+#<init>(Ljava/util/Map;)V
+#resolveFileExtensions(Lorg/springframework/http/MediaType;)Ljava/util/List;
+#getAllFileExtensions()Ljava/util/List;
@4.3.3.RELEASE
+#getMediaTypes()Ljava/util/Map;

+###org/springframework/web/accept/ContentNegotiationManagerFactoryBean
@3.2.0.RELEASE
+#<init>()V
+#setFavorPathExtension(Z)V
+#setMediaTypes(Ljava/util/Properties;)V
+#getMediaTypes()Ljava/util/Properties;
+#setUseJaf(Z)V
+#setFavorParameter(Z)V
+#setParameterName(Ljava/lang/String;)V
+#setIgnoreAcceptHeader(Z)V
+#setDefaultContentType(Lorg/springframework/http/MediaType;)V
+#setServletContext(Ljavax/servlet/ServletContext;)V
+#afterPropertiesSet()V
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#getObject()Lorg/springframework/web/accept/ContentNegotiationManager;
+#getObject()Ljava/lang/Object;
@3.2.1.RELEASE
+#addMediaType(Ljava/lang/String;Lorg/springframework/http/MediaType;)V
+#addMediaTypes(Ljava/util/Map;)V
-#getMediaTypes()Ljava/util/Properties;
@4.1.0.RELEASE
+#setIgnoreUnknownPathExtensions(Z)V
@4.1.2.RELEASE
+#setDefaultContentTypeStrategy(Lorg/springframework/web/accept/ContentNegotiationStrategy;)V
@5.0.0.RELEASE
+#setStrategies(Ljava/util/List;)V
*#setUseJaf(Z)V[deprecated]
+#setUseRegisteredExtensionsOnly(Z)V
+#setDefaultContentTypes(Ljava/util/List;)V
+#build()Lorg/springframework/web/accept/ContentNegotiationManager;
@5.2.4.RELEASE
*#setFavorPathExtension(Z)V[deprecated]
*#setIgnoreUnknownPathExtensions(Z)V[deprecated]
@6.0.0
+#setServletContext(Ljakarta/servlet/ServletContext;)V
-#setServletContext(Ljavax/servlet/ServletContext;)V

+###org/springframework/web/accept/AbstractMappingContentNegotiationStrategy
@3.2.0.RELEASE
+#<init>(Ljava/util/Map;)V
+#resolveMediaTypes(Lorg/springframework/web/context/request/NativeWebRequest;)Ljava/util/List;
@4.1.9.RELEASE
+#resolveMediaTypeKey(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/lang/String;)Ljava/util/List;
@4.2.0.RELEASE
-#resolveMediaTypeKey(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/lang/String;)Ljava/util/List;
@4.2.3.RELEASE
+#resolveMediaTypeKey(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/lang/String;)Ljava/util/List;
@5.0.0.RELEASE
+#setUseRegisteredExtensionsOnly(Z)V
+#isUseRegisteredExtensionsOnly()Z
+#setIgnoreUnknownExtensions(Z)V
+#isIgnoreUnknownExtensions()Z

+###org/springframework/web/accept/ServletPathExtensionContentNegotiationStrategy
@3.2.0.RELEASE
+#<init>(Ljavax/servlet/ServletContext;Ljava/util/Map;)V
+#<init>(Ljavax/servlet/ServletContext;)V
@4.3.0.RELEASE
+#getMediaTypeForResource(Lorg/springframework/core/io/Resource;)Lorg/springframework/http/MediaType;
@6.0.0
+#<init>(Ljakarta/servlet/ServletContext;)V
+#<init>(Ljakarta/servlet/ServletContext;Ljava/util/Map;)V
-#<init>(Ljavax/servlet/ServletContext;)V
-#<init>(Ljavax/servlet/ServletContext;Ljava/util/Map;)V

+###org/springframework/web/accept/ContentNegotiationManager
@3.2.0.RELEASE
+#<init>([Lorg/springframework/web/accept/ContentNegotiationStrategy;)V
+#<init>()V
+#addFileExtensionResolvers([Lorg/springframework/web/accept/MediaTypeFileExtensionResolver;)V
+#resolveMediaTypes(Lorg/springframework/web/context/request/NativeWebRequest;)Ljava/util/List;
+#resolveFileExtensions(Lorg/springframework/http/MediaType;)Ljava/util/List;
+#getAllFileExtensions()Ljava/util/List;
@3.2.2.RELEASE
+#<init>(Ljava/util/Collection;)V
@4.1.9.RELEASE
+#getStrategies()Ljava/util/List;
@4.2.0.RELEASE
-#getStrategies()Ljava/util/List;
@4.2.3.RELEASE
+#getStrategies()Ljava/util/List;
@4.3.0.RELEASE
+#getStrategy(Ljava/lang/Class;)Lorg/springframework/web/accept/ContentNegotiationStrategy;
@5.2.4.RELEASE
+#getMediaTypeMappings()Ljava/util/Map;

+###org/springframework/web/accept/ParameterContentNegotiationStrategy
@3.2.0.RELEASE
+#<init>(Ljava/util/Map;)V
+#setParameterName(Ljava/lang/String;)V
@4.2.2.RELEASE
+#getParameterName()Ljava/lang/String;

+###org/springframework/web/accept/HeaderContentNegotiationStrategy
@3.2.0.RELEASE
+#<init>()V
+#resolveMediaTypes(Lorg/springframework/web/context/request/NativeWebRequest;)Ljava/util/List;

+###org/springframework/web/accept/FixedContentNegotiationStrategy
@3.2.0.RELEASE
+#<init>(Lorg/springframework/http/MediaType;)V
+#resolveMediaTypes(Lorg/springframework/web/context/request/NativeWebRequest;)Ljava/util/List;
@5.0.0.RELEASE
+#<init>(Ljava/util/List;)V
+#getContentTypes()Ljava/util/List;

+###org/springframework/web/accept/ContentNegotiationStrategy
@3.2.0.RELEASE
+#resolveMediaTypes(Lorg/springframework/web/context/request/NativeWebRequest;)Ljava/util/List;

+###org/springframework/web/accept/MediaTypeFileExtensionResolver
@3.2.0.RELEASE
+#resolveFileExtensions(Lorg/springframework/http/MediaType;)Ljava/util/List;
+#getAllFileExtensions()Ljava/util/List;

+###org/springframework/web/client/ResponseErrorHandler
@3.0.0.RELEASE
+#hasError(Lorg/springframework/http/client/ClientHttpResponse;)Z
+#handleError(Lorg/springframework/http/client/ClientHttpResponse;)V
@5.0.0.RELEASE
+#handleError(Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/client/ClientHttpResponse;)V

+###org/springframework/web/client/DefaultResponseErrorHandler
@3.0.0.RELEASE
+#<init>()V
+#hasError(Lorg/springframework/http/client/ClientHttpResponse;)Z
+#handleError(Lorg/springframework/http/client/ClientHttpResponse;)V

+###org/springframework/web/client/UnknownHttpStatusCodeException
@3.2.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)V
+#getRawStatusCode()I
+#getStatusText()Ljava/lang/String;
+#getResponseHeaders()Lorg/springframework/http/HttpHeaders;
+#getResponseBodyAsByteArray()[B
+#getResponseBodyAsString()Ljava/lang/String;
@4.3.0.RELEASE
-#getRawStatusCode()I
-#getStatusText()Ljava/lang/String;
-#getResponseHeaders()Lorg/springframework/http/HttpHeaders;
-#getResponseBodyAsByteArray()[B
-#getResponseBodyAsString()Ljava/lang/String;
@5.2.2.RELEASE
+#<init>(Ljava/lang/String;ILjava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)V

+###org/springframework/web/client/ResourceAccessException
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/io/IOException;)V

+###org/springframework/web/client/support/RestGatewaySupport
@3.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/http/client/ClientHttpRequestFactory;)V
+#setRestTemplate(Lorg/springframework/web/client/RestTemplate;)V
+#getRestTemplate()Lorg/springframework/web/client/RestTemplate;

+###org/springframework/web/client/ExtractingResponseErrorHandler
@5.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/List;)V
+#setMessageConverters(Ljava/util/List;)V
+#setStatusMapping(Ljava/util/Map;)V
+#setSeriesMapping(Ljava/util/Map;)V
+#handleError(Lorg/springframework/http/client/ClientHttpResponse;Lorg/springframework/http/HttpStatus;)V
@6.0.0
+#handleError(Lorg/springframework/http/client/ClientHttpResponse;Lorg/springframework/http/HttpStatusCode;)V
-#handleError(Lorg/springframework/http/client/ClientHttpResponse;Lorg/springframework/http/HttpStatus;)V

+###org/springframework/web/client/HttpServerErrorException
@3.0.0.RELEASE
+#<init>(Lorg/springframework/http/HttpStatus;)V
+#<init>(Lorg/springframework/http/HttpStatus;Ljava/lang/String;)V
@3.0.5.RELEASE
+#<init>(Lorg/springframework/http/HttpStatus;Ljava/lang/String;[BLjava/nio/charset/Charset;)V
@3.1.2.RELEASE
+#<init>(Lorg/springframework/http/HttpStatus;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)V
@5.1.0.RELEASE
+#create(Lorg/springframework/http/HttpStatus;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)Lorg/springframework/web/client/HttpServerErrorException;
@5.2.2.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/http/HttpStatus;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)V
+#create(Ljava/lang/String;Lorg/springframework/http/HttpStatus;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)Lorg/springframework/web/client/HttpServerErrorException;
@6.0.0
+#<init>(Lorg/springframework/http/HttpStatusCode;)V
+#<init>(Lorg/springframework/http/HttpStatusCode;Ljava/lang/String;)V
+#<init>(Lorg/springframework/http/HttpStatusCode;Ljava/lang/String;[BLjava/nio/charset/Charset;)V
+#<init>(Lorg/springframework/http/HttpStatusCode;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)V
+#<init>(Ljava/lang/String;Lorg/springframework/http/HttpStatusCode;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)V
+#create(Lorg/springframework/http/HttpStatusCode;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)Lorg/springframework/web/client/HttpServerErrorException;
+#create(Ljava/lang/String;Lorg/springframework/http/HttpStatusCode;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)Lorg/springframework/web/client/HttpServerErrorException;
-#<init>(Lorg/springframework/http/HttpStatus;)V
-#<init>(Lorg/springframework/http/HttpStatus;Ljava/lang/String;)V
-#<init>(Lorg/springframework/http/HttpStatus;Ljava/lang/String;[BLjava/nio/charset/Charset;)V
-#<init>(Lorg/springframework/http/HttpStatus;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)V
-#<init>(Ljava/lang/String;Lorg/springframework/http/HttpStatus;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)V
-#create(Lorg/springframework/http/HttpStatus;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)Lorg/springframework/web/client/HttpServerErrorException;
-#create(Ljava/lang/String;Lorg/springframework/http/HttpStatus;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)Lorg/springframework/web/client/HttpServerErrorException;

+###org/springframework/web/client/AsyncRestOperations
@4.0.0.RELEASE
+#getRestOperations()Lorg/springframework/web/client/RestOperations;
+#getForEntity(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
+#getForEntity(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/util/concurrent/ListenableFuture;
+#getForEntity(Ljava/net/URI;Ljava/lang/Class;)Lorg/springframework/util/concurrent/ListenableFuture;
+#headForHeaders(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
+#headForHeaders(Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/util/concurrent/ListenableFuture;
+#headForHeaders(Ljava/net/URI;)Lorg/springframework/util/concurrent/ListenableFuture;
+#postForLocation(Ljava/lang/String;Lorg/springframework/http/HttpEntity;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
+#postForLocation(Ljava/lang/String;Lorg/springframework/http/HttpEntity;Ljava/util/Map;)Lorg/springframework/util/concurrent/ListenableFuture;
+#postForLocation(Ljava/net/URI;Lorg/springframework/http/HttpEntity;)Lorg/springframework/util/concurrent/ListenableFuture;
+#postForEntity(Ljava/lang/String;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
+#postForEntity(Ljava/lang/String;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/util/concurrent/ListenableFuture;
+#postForEntity(Ljava/net/URI;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;)Lorg/springframework/util/concurrent/ListenableFuture;
+#put(Ljava/lang/String;Lorg/springframework/http/HttpEntity;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
+#put(Ljava/lang/String;Lorg/springframework/http/HttpEntity;Ljava/util/Map;)Lorg/springframework/util/concurrent/ListenableFuture;
+#put(Ljava/net/URI;Lorg/springframework/http/HttpEntity;)Lorg/springframework/util/concurrent/ListenableFuture;
+#delete(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
+#delete(Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/util/concurrent/ListenableFuture;
+#delete(Ljava/net/URI;)Lorg/springframework/util/concurrent/ListenableFuture;
+#optionsForAllow(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
+#optionsForAllow(Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/util/concurrent/ListenableFuture;
+#optionsForAllow(Ljava/net/URI;)Lorg/springframework/util/concurrent/ListenableFuture;
+#exchange(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
+#exchange(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/util/concurrent/ListenableFuture;
+#exchange(Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;)Lorg/springframework/util/concurrent/ListenableFuture;
+#exchange(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Lorg/springframework/core/ParameterizedTypeReference;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
+#exchange(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Lorg/springframework/core/ParameterizedTypeReference;Ljava/util/Map;)Lorg/springframework/util/concurrent/ListenableFuture;
+#exchange(Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/util/concurrent/ListenableFuture;
+#execute(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/web/client/AsyncRequestCallback;Lorg/springframework/web/client/ResponseExtractor;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
+#execute(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/web/client/AsyncRequestCallback;Lorg/springframework/web/client/ResponseExtractor;Ljava/util/Map;)Lorg/springframework/util/concurrent/ListenableFuture;
+#execute(Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/web/client/AsyncRequestCallback;Lorg/springframework/web/client/ResponseExtractor;)Lorg/springframework/util/concurrent/ListenableFuture;
@6.0.0
-###org/springframework/web/client/AsyncRestOperations

+###org/springframework/web/client/HttpClientErrorException
@3.0.0.RELEASE
+#<init>(Lorg/springframework/http/HttpStatus;)V
+#<init>(Lorg/springframework/http/HttpStatus;Ljava/lang/String;)V
@3.0.5.RELEASE
+#<init>(Lorg/springframework/http/HttpStatus;Ljava/lang/String;[BLjava/nio/charset/Charset;)V
@3.1.2.RELEASE
+#<init>(Lorg/springframework/http/HttpStatus;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)V
@5.1.0.RELEASE
+#create(Lorg/springframework/http/HttpStatus;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)Lorg/springframework/web/client/HttpClientErrorException;
@5.2.2.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/http/HttpStatus;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)V
+#create(Ljava/lang/String;Lorg/springframework/http/HttpStatus;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)Lorg/springframework/web/client/HttpClientErrorException;
@6.0.0
+#<init>(Lorg/springframework/http/HttpStatusCode;)V
+#<init>(Lorg/springframework/http/HttpStatusCode;Ljava/lang/String;)V
+#<init>(Lorg/springframework/http/HttpStatusCode;Ljava/lang/String;[BLjava/nio/charset/Charset;)V
+#<init>(Lorg/springframework/http/HttpStatusCode;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)V
+#<init>(Ljava/lang/String;Lorg/springframework/http/HttpStatusCode;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)V
+#create(Lorg/springframework/http/HttpStatusCode;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)Lorg/springframework/web/client/HttpClientErrorException;
+#create(Ljava/lang/String;Lorg/springframework/http/HttpStatusCode;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)Lorg/springframework/web/client/HttpClientErrorException;
-#<init>(Lorg/springframework/http/HttpStatus;)V
-#<init>(Lorg/springframework/http/HttpStatus;Ljava/lang/String;)V
-#<init>(Lorg/springframework/http/HttpStatus;Ljava/lang/String;[BLjava/nio/charset/Charset;)V
-#<init>(Lorg/springframework/http/HttpStatus;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)V
-#<init>(Ljava/lang/String;Lorg/springframework/http/HttpStatus;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)V
-#create(Lorg/springframework/http/HttpStatus;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)Lorg/springframework/web/client/HttpClientErrorException;
-#create(Ljava/lang/String;Lorg/springframework/http/HttpStatus;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)Lorg/springframework/web/client/HttpClientErrorException;

+###org/springframework/web/client/HttpStatusCodeException
@3.0.0.RELEASE
+#getStatusCode()Lorg/springframework/http/HttpStatus;
+#getStatusText()Ljava/lang/String;
@3.0.5.RELEASE
+#getResponseBodyAsByteArray()[B
+#getResponseBodyAsString()Ljava/lang/String;
@3.1.2.RELEASE
+#getResponseHeaders()Lorg/springframework/http/HttpHeaders;
@4.3.0.RELEASE
-#getStatusText()Ljava/lang/String;
-#getResponseHeaders()Lorg/springframework/http/HttpHeaders;
-#getResponseBodyAsByteArray()[B
-#getResponseBodyAsString()Ljava/lang/String;
@6.0.0
-#getStatusCode()Lorg/springframework/http/HttpStatus;

+###org/springframework/web/client/RequestCallback
@3.0.0.RELEASE
+#doWithRequest(Lorg/springframework/http/client/ClientHttpRequest;)V

+###org/springframework/web/client/AsyncRequestCallback
@4.0.0.RELEASE
+#doWithRequest(Lorg/springframework/http/client/AsyncClientHttpRequest;)V
@6.0.0
-###org/springframework/web/client/AsyncRequestCallback

+###org/springframework/web/client/RestTemplate
@3.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/http/client/ClientHttpRequestFactory;)V
+#setMessageConverters(Ljava/util/List;)V
+#getMessageConverters()Ljava/util/List;
+#setErrorHandler(Lorg/springframework/web/client/ResponseErrorHandler;)V
+#getErrorHandler()Lorg/springframework/web/client/ResponseErrorHandler;
+#getForObject(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#getForObject(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/Object;
+#getForObject(Ljava/net/URI;Ljava/lang/Class;)Ljava/lang/Object;
+#headForHeaders(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/http/HttpHeaders;
+#headForHeaders(Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/http/HttpHeaders;
+#headForHeaders(Ljava/net/URI;)Lorg/springframework/http/HttpHeaders;
+#postForLocation(Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/net/URI;
+#postForLocation(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)Ljava/net/URI;
+#postForLocation(Ljava/net/URI;Ljava/lang/Object;)Ljava/net/URI;
+#postForObject(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#postForObject(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/Object;
+#postForObject(Ljava/net/URI;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#put(Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;)V
+#put(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)V
+#put(Ljava/net/URI;Ljava/lang/Object;)V
+#delete(Ljava/lang/String;[Ljava/lang/Object;)V
+#delete(Ljava/lang/String;Ljava/util/Map;)V
+#delete(Ljava/net/URI;)V
+#optionsForAllow(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Set;
+#optionsForAllow(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Set;
+#optionsForAllow(Ljava/net/URI;)Ljava/util/Set;
+#execute(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/web/client/RequestCallback;Lorg/springframework/web/client/ResponseExtractor;[Ljava/lang/Object;)Ljava/lang/Object;
+#execute(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/web/client/RequestCallback;Lorg/springframework/web/client/ResponseExtractor;Ljava/util/Map;)Ljava/lang/Object;
+#execute(Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/web/client/RequestCallback;Lorg/springframework/web/client/ResponseExtractor;)Ljava/lang/Object;
@3.0.2.RELEASE
+#getForEntity(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#getForEntity(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;
+#getForEntity(Ljava/net/URI;Ljava/lang/Class;)Lorg/springframework/http/ResponseEntity;
+#postForEntity(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#postForEntity(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/http/HttpEntity;
+#postForEntity(Ljava/net/URI;Ljava/lang/Object;Ljava/lang/Class;)Lorg/springframework/http/ResponseEntity;
+#exchange(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#exchange(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;
+#exchange(Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;)Lorg/springframework/http/ResponseEntity;
@3.0.4.RELEASE
+#postForEntity(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;
-#postForEntity(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/http/HttpEntity;
@3.2.0.RELEASE
+#exchange(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Lorg/springframework/core/ParameterizedTypeReference;[Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#exchange(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Lorg/springframework/core/ParameterizedTypeReference;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;
+#exchange(Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/http/ResponseEntity;
@3.2.7.RELEASE
+#<init>(Ljava/util/List;)V
@4.0.0.RELEASE
-#<init>(Ljava/util/List;)V
@4.0.1.RELEASE
+#<init>(Ljava/util/List;)V
@4.1.0.RELEASE
+#exchange(Lorg/springframework/http/RequestEntity;Ljava/lang/Class;)Lorg/springframework/http/ResponseEntity;
+#exchange(Lorg/springframework/http/RequestEntity;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/http/ResponseEntity;
@4.2.0.RELEASE
+#setUriTemplateHandler(Lorg/springframework/web/util/UriTemplateHandler;)V
+#getUriTemplateHandler()Lorg/springframework/web/util/UriTemplateHandler;
@4.3.0.RELEASE
+#setDefaultUriVariables(Ljava/util/Map;)V
@4.3.5.RELEASE
+#patchForObject(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#patchForObject(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/Object;
+#patchForObject(Ljava/net/URI;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
@5.1.0.RELEASE
+#acceptHeaderRequestCallback(Ljava/lang/Class;)Lorg/springframework/web/client/RequestCallback;
+#httpEntityCallback(Ljava/lang/Object;)Lorg/springframework/web/client/RequestCallback;
+#httpEntityCallback(Ljava/lang/Object;Ljava/lang/reflect/Type;)Lorg/springframework/web/client/RequestCallback;
+#responseEntityExtractor(Ljava/lang/reflect/Type;)Lorg/springframework/web/client/ResponseExtractor;
@6.0.0
+#setObservationRegistry(Lio/micrometer/observation/ObservationRegistry;)V
+#setObservationConvention(Lorg/springframework/http/client/observation/ClientRequestObservationConvention;)V

+###org/springframework/web/client/RestClientResponseException
@4.3.0.RELEASE
+#<init>(Ljava/lang/String;ILjava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)V
+#getRawStatusCode()I
+#getStatusText()Ljava/lang/String;
+#getResponseHeaders()Lorg/springframework/http/HttpHeaders;
+#getResponseBodyAsByteArray()[B
+#getResponseBodyAsString()Ljava/lang/String;
@5.1.11.RELEASE
+#getResponseBodyAsString(Ljava/nio/charset/Charset;)Ljava/lang/String;
@5.2.0.RELEASE
-#getResponseBodyAsString(Ljava/nio/charset/Charset;)Ljava/lang/String;
@5.2.1.RELEASE
+#getResponseBodyAsString(Ljava/nio/charset/Charset;)Ljava/lang/String;
@6.0.0
+#<init>(Ljava/lang/String;Lorg/springframework/http/HttpStatusCode;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)V
+#getStatusCode()Lorg/springframework/http/HttpStatusCode;
*#getRawStatusCode()I[deprecated]
+#getResponseBodyAs(Ljava/lang/Class;)Ljava/lang/Object;
+#getResponseBodyAs(Lorg/springframework/core/ParameterizedTypeReference;)Ljava/lang/Object;
+#setBodyConvertFunction(Ljava/util/function/Function;)V

+###org/springframework/web/client/ResponseExtractor
@3.0.0.RELEASE
+#extractData(Lorg/springframework/http/client/ClientHttpResponse;)Ljava/lang/Object;

+###org/springframework/web/client/HttpMessageConverterExtractor
@3.0.0.RELEASE
+#<init>(Ljava/lang/Class;Ljava/util/List;)V
+#extractData(Lorg/springframework/http/client/ClientHttpResponse;)Ljava/lang/Object;
@3.2.0.RELEASE
+#<init>(Ljava/lang/reflect/Type;Ljava/util/List;)V

+###org/springframework/web/client/RestClientException
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/web/client/RestOperations
@3.0.0.RELEASE
+#getForObject(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#getForObject(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/Object;
+#getForObject(Ljava/net/URI;Ljava/lang/Class;)Ljava/lang/Object;
+#headForHeaders(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/http/HttpHeaders;
+#headForHeaders(Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/http/HttpHeaders;
+#headForHeaders(Ljava/net/URI;)Lorg/springframework/http/HttpHeaders;
+#postForLocation(Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/net/URI;
+#postForLocation(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)Ljava/net/URI;
+#postForLocation(Ljava/net/URI;Ljava/lang/Object;)Ljava/net/URI;
+#postForObject(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#postForObject(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/Object;
+#postForObject(Ljava/net/URI;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#put(Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;)V
+#put(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)V
+#put(Ljava/net/URI;Ljava/lang/Object;)V
+#delete(Ljava/lang/String;[Ljava/lang/Object;)V
+#delete(Ljava/lang/String;Ljava/util/Map;)V
+#delete(Ljava/net/URI;)V
+#optionsForAllow(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Set;
+#optionsForAllow(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Set;
+#optionsForAllow(Ljava/net/URI;)Ljava/util/Set;
+#execute(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/web/client/RequestCallback;Lorg/springframework/web/client/ResponseExtractor;[Ljava/lang/Object;)Ljava/lang/Object;
+#execute(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/web/client/RequestCallback;Lorg/springframework/web/client/ResponseExtractor;Ljava/util/Map;)Ljava/lang/Object;
+#execute(Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/web/client/RequestCallback;Lorg/springframework/web/client/ResponseExtractor;)Ljava/lang/Object;
@3.0.2.RELEASE
+#getForEntity(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#getForEntity(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;
+#getForEntity(Ljava/net/URI;Ljava/lang/Class;)Lorg/springframework/http/ResponseEntity;
+#postForEntity(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#postForEntity(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/http/HttpEntity;
+#postForEntity(Ljava/net/URI;Ljava/lang/Object;Ljava/lang/Class;)Lorg/springframework/http/ResponseEntity;
+#exchange(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#exchange(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;
+#exchange(Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;)Lorg/springframework/http/ResponseEntity;
@3.0.4.RELEASE
+#postForEntity(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;
-#postForEntity(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/http/HttpEntity;
@3.2.0.RELEASE
+#exchange(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Lorg/springframework/core/ParameterizedTypeReference;[Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#exchange(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Lorg/springframework/core/ParameterizedTypeReference;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;
+#exchange(Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/http/ResponseEntity;
@4.1.0.RELEASE
+#exchange(Lorg/springframework/http/RequestEntity;Ljava/lang/Class;)Lorg/springframework/http/ResponseEntity;
+#exchange(Lorg/springframework/http/RequestEntity;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/http/ResponseEntity;
@4.3.5.RELEASE
+#patchForObject(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#patchForObject(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/Object;
+#patchForObject(Ljava/net/URI;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;

+###org/springframework/web/client/AsyncRestTemplate
@4.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/core/task/AsyncListenableTaskExecutor;)V
+#<init>(Lorg/springframework/http/client/AsyncClientHttpRequestFactory;)V
+#<init>(Lorg/springframework/http/client/AsyncClientHttpRequestFactory;Lorg/springframework/http/client/ClientHttpRequestFactory;)V
+#<init>(Lorg/springframework/http/client/AsyncClientHttpRequestFactory;Lorg/springframework/web/client/RestTemplate;)V
+#setErrorHandler(Lorg/springframework/web/client/ResponseErrorHandler;)V
+#getErrorHandler()Lorg/springframework/web/client/ResponseErrorHandler;
+#getRestOperations()Lorg/springframework/web/client/RestOperations;
+#setMessageConverters(Ljava/util/List;)V
+#getMessageConverters()Ljava/util/List;
+#getForEntity(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
+#getForEntity(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/util/concurrent/ListenableFuture;
+#getForEntity(Ljava/net/URI;Ljava/lang/Class;)Lorg/springframework/util/concurrent/ListenableFuture;
+#headForHeaders(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
+#headForHeaders(Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/util/concurrent/ListenableFuture;
+#headForHeaders(Ljava/net/URI;)Lorg/springframework/util/concurrent/ListenableFuture;
+#postForLocation(Ljava/lang/String;Lorg/springframework/http/HttpEntity;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
+#postForLocation(Ljava/lang/String;Lorg/springframework/http/HttpEntity;Ljava/util/Map;)Lorg/springframework/util/concurrent/ListenableFuture;
+#postForLocation(Ljava/net/URI;Lorg/springframework/http/HttpEntity;)Lorg/springframework/util/concurrent/ListenableFuture;
+#postForEntity(Ljava/lang/String;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
+#postForEntity(Ljava/lang/String;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/util/concurrent/ListenableFuture;
+#postForEntity(Ljava/net/URI;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;)Lorg/springframework/util/concurrent/ListenableFuture;
+#put(Ljava/lang/String;Lorg/springframework/http/HttpEntity;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
+#put(Ljava/lang/String;Lorg/springframework/http/HttpEntity;Ljava/util/Map;)Lorg/springframework/util/concurrent/ListenableFuture;
+#put(Ljava/net/URI;Lorg/springframework/http/HttpEntity;)Lorg/springframework/util/concurrent/ListenableFuture;
+#delete(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
+#delete(Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/util/concurrent/ListenableFuture;
+#delete(Ljava/net/URI;)Lorg/springframework/util/concurrent/ListenableFuture;
+#optionsForAllow(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
+#optionsForAllow(Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/util/concurrent/ListenableFuture;
+#optionsForAllow(Ljava/net/URI;)Lorg/springframework/util/concurrent/ListenableFuture;
+#exchange(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
+#exchange(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/util/concurrent/ListenableFuture;
+#exchange(Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;)Lorg/springframework/util/concurrent/ListenableFuture;
+#exchange(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Lorg/springframework/core/ParameterizedTypeReference;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
+#exchange(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Lorg/springframework/core/ParameterizedTypeReference;Ljava/util/Map;)Lorg/springframework/util/concurrent/ListenableFuture;
+#exchange(Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/util/concurrent/ListenableFuture;
+#execute(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/web/client/AsyncRequestCallback;Lorg/springframework/web/client/ResponseExtractor;[Ljava/lang/Object;)Lorg/springframework/util/concurrent/ListenableFuture;
+#execute(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/web/client/AsyncRequestCallback;Lorg/springframework/web/client/ResponseExtractor;Ljava/util/Map;)Lorg/springframework/util/concurrent/ListenableFuture;
+#execute(Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/web/client/AsyncRequestCallback;Lorg/springframework/web/client/ResponseExtractor;)Lorg/springframework/util/concurrent/ListenableFuture;
@4.2.0.RELEASE
+#setUriTemplateHandler(Lorg/springframework/web/util/UriTemplateHandler;)V
+#getUriTemplateHandler()Lorg/springframework/web/util/UriTemplateHandler;
@4.3.0.RELEASE
+#setDefaultUriVariables(Ljava/util/Map;)V
@6.0.0
-###org/springframework/web/client/AsyncRestTemplate

+###org/springframework/web/bind/MissingPathVariableException
@4.2.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/core/MethodParameter;)V
+#getMessage()Ljava/lang/String;
+#getVariableName()Ljava/lang/String;
+#getParameter()Lorg/springframework/core/MethodParameter;
@5.3.6
+#<init>(Ljava/lang/String;Lorg/springframework/core/MethodParameter;Z)V
@6.0.0
+#getStatusCode()Lorg/springframework/http/HttpStatusCode;

+###org/springframework/web/bind/support/WebDataBinderFactory
@3.1.0.RELEASE
+#createBinder(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/web/bind/WebDataBinder;

+###org/springframework/web/bind/support/DefaultDataBinderFactory
@3.1.0.RELEASE
+#<init>(Lorg/springframework/web/bind/support/WebBindingInitializer;)V
+#createBinder(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/web/bind/WebDataBinder;

+###org/springframework/web/bind/support/SessionAttributeStore
@2.5
+#storeAttribute(Lorg/springframework/web/context/request/WebRequest;Ljava/lang/String;Ljava/lang/Object;)V
+#retrieveAttribute(Lorg/springframework/web/context/request/WebRequest;Ljava/lang/String;)Ljava/lang/Object;
+#cleanupAttribute(Lorg/springframework/web/context/request/WebRequest;Ljava/lang/String;)V
@2.5.1
-###org/springframework/web/bind/support/SessionAttributeStore

+###org/springframework/web/bind/support/SpringWebConstraintValidatorFactory
@4.2.1.RELEASE
+#<init>()V
+#getInstance(Ljava/lang/Class;)Ljavax/validation/ConstraintValidator;
+#releaseInstance(Ljavax/validation/ConstraintValidator;)V
@6.0.0
+#getInstance(Ljava/lang/Class;)Ljakarta/validation/ConstraintValidator;
+#releaseInstance(Ljakarta/validation/ConstraintValidator;)V
-#getInstance(Ljava/lang/Class;)Ljavax/validation/ConstraintValidator;
-#releaseInstance(Ljavax/validation/ConstraintValidator;)V

+###org/springframework/web/bind/support/WebExchangeDataBinder
@5.0.0.RELEASE
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#bind(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#extractValuesToBind(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
@5.3.0
+#getValuesToBind(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/bind/support/WebRequestDataBinder
@3.0.0.RELEASE
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#bind(Lorg/springframework/web/context/request/WebRequest;)V
+#closeNoCatch()V

+###org/springframework/web/bind/support/WebExchangeBindException
@5.0.0.RELEASE
+#<init>(Lorg/springframework/core/MethodParameter;Lorg/springframework/validation/BindingResult;)V
+#getBindingResult()Lorg/springframework/validation/BindingResult;
+#getObjectName()Ljava/lang/String;
+#setNestedPath(Ljava/lang/String;)V
+#getNestedPath()Ljava/lang/String;
+#pushNestedPath(Ljava/lang/String;)V
+#popNestedPath()V
+#reject(Ljava/lang/String;)V
+#reject(Ljava/lang/String;Ljava/lang/String;)V
+#reject(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/String;)V
+#rejectValue(Ljava/lang/String;Ljava/lang/String;)V
+#rejectValue(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#rejectValue(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/String;)V
+#addAllErrors(Lorg/springframework/validation/Errors;)V
+#hasErrors()Z
+#getErrorCount()I
+#getAllErrors()Ljava/util/List;
+#hasGlobalErrors()Z
+#getGlobalErrorCount()I
+#getGlobalErrors()Ljava/util/List;
+#getGlobalError()Lorg/springframework/validation/ObjectError;
+#hasFieldErrors()Z
+#getFieldErrorCount()I
+#getFieldErrors()Ljava/util/List;
+#getFieldError()Lorg/springframework/validation/FieldError;
+#hasFieldErrors(Ljava/lang/String;)Z
+#getFieldErrorCount(Ljava/lang/String;)I
+#getFieldErrors(Ljava/lang/String;)Ljava/util/List;
+#getFieldError(Ljava/lang/String;)Lorg/springframework/validation/FieldError;
+#getFieldValue(Ljava/lang/String;)Ljava/lang/Object;
+#getFieldType(Ljava/lang/String;)Ljava/lang/Class;
+#getTarget()Ljava/lang/Object;
+#getModel()Ljava/util/Map;
+#getRawFieldValue(Ljava/lang/String;)Ljava/lang/Object;
+#findEditor(Ljava/lang/String;Ljava/lang/Class;)Ljava/beans/PropertyEditor;
+#getPropertyEditorRegistry()Lorg/springframework/beans/PropertyEditorRegistry;
+#addError(Lorg/springframework/validation/ObjectError;)V
+#resolveMessageCodes(Ljava/lang/String;)[Ljava/lang/String;
+#resolveMessageCodes(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#recordSuppressedField(Ljava/lang/String;)V
+#getSuppressedFields()[Ljava/lang/String;
+#getMessage()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.4.RELEASE
+#recordFieldValue(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)V
@6.0.0
+#getDetailMessageArguments(Lorg/springframework/context/MessageSource;Ljava/util/Locale;)[Ljava/lang/Object;
@6.0.3
+#resolveErrorMessages(Lorg/springframework/context/MessageSource;Ljava/util/Locale;)Ljava/util/Map;

+###org/springframework/web/bind/support/SessionStatus
@2.5
+#setComplete()V
+#isComplete()Z
@2.5.1
-###org/springframework/web/bind/support/SessionStatus

+###org/springframework/web/bind/support/WebBindingInitializer
@2.5
+#initBinder(Lorg/springframework/web/bind/WebDataBinder;Lorg/springframework/web/context/request/WebRequest;)V
@2.5.1
-###org/springframework/web/bind/support/WebBindingInitializer

+###org/springframework/web/bind/support/SimpleSessionStatus
@2.5
+#<init>()V
+#setComplete()V
+#isComplete()Z
@2.5.1
-###org/springframework/web/bind/support/SimpleSessionStatus

+###org/springframework/web/bind/support/ConfigurableWebBindingInitializer
@2.5
+#<init>()V
+#setDirectFieldAccess(Z)V
+#setMessageCodesResolver(Lorg/springframework/validation/MessageCodesResolver;)V
+#getMessageCodesResolver()Lorg/springframework/validation/MessageCodesResolver;
+#setBindingErrorProcessor(Lorg/springframework/validation/BindingErrorProcessor;)V
+#getBindingErrorProcessor()Lorg/springframework/validation/BindingErrorProcessor;
+#setPropertyEditorRegistrar(Lorg/springframework/beans/PropertyEditorRegistrar;)V
+#setPropertyEditorRegistrars([Lorg/springframework/beans/PropertyEditorRegistrar;)V
+#getPropertyEditorRegistrars()[Lorg/springframework/beans/PropertyEditorRegistrar;
+#initBinder(Lorg/springframework/web/bind/WebDataBinder;Lorg/springframework/web/context/request/WebRequest;)V
@2.5.1
-###org/springframework/web/bind/support/ConfigurableWebBindingInitializer

+###org/springframework/web/bind/support/DefaultSessionAttributeStore
@2.5
+#<init>()V
+#setAttributeNamePrefix(Ljava/lang/String;)V
+#storeAttribute(Lorg/springframework/web/context/request/WebRequest;Ljava/lang/String;Ljava/lang/Object;)V
+#retrieveAttribute(Lorg/springframework/web/context/request/WebRequest;Ljava/lang/String;)Ljava/lang/Object;
+#cleanupAttribute(Lorg/springframework/web/context/request/WebRequest;Ljava/lang/String;)V
@2.5.1
-###org/springframework/web/bind/support/DefaultSessionAttributeStore

+###org/springframework/web/bind/support/WebArgumentResolver
@3.0.0.RELEASE
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/context/request/NativeWebRequest;)Ljava/lang/Object;

+###org/springframework/web/bind/annotation/CrossOrigin
@4.2.0.RELEASE
+#value()[Ljava/lang/String;
+#origins()[Ljava/lang/String;
+#allowedHeaders()[Ljava/lang/String;
+#exposedHeaders()[Ljava/lang/String;
+#methods()[Lorg/springframework/web/bind/annotation/RequestMethod;
+#allowCredentials()Ljava/lang/String;
+#maxAge()J
@5.3.0
+#originPatterns()[Ljava/lang/String;

+###org/springframework/web/bind/annotation/RequestHeader
@3.0.0.RELEASE
+#value()Ljava/lang/String;
+#required()Z
+#defaultValue()Ljava/lang/String;
@4.2.0.RELEASE
+#name()Ljava/lang/String;

+###org/springframework/web/bind/annotation/RequestParam
@2.5
+#value()Ljava/lang/String;
+#required()Z
@2.5.1
-###org/springframework/web/bind/annotation/RequestParam

+###org/springframework/web/bind/annotation/ResponseStatus
@3.0.0.RELEASE
+#value()Lorg/springframework/http/HttpStatus;
+#reason()Ljava/lang/String;
@4.2.0.RELEASE
+#code()Lorg/springframework/http/HttpStatus;

+###org/springframework/web/bind/annotation/MatrixVariable
@3.2.0.RELEASE
+#value()Ljava/lang/String;
+#pathVar()Ljava/lang/String;
+#required()Z
+#defaultValue()Ljava/lang/String;
@4.2.0.RELEASE
+#name()Ljava/lang/String;

+###org/springframework/web/bind/annotation/ModelAttribute
@2.5
+#value()Ljava/lang/String;
@2.5.1
-###org/springframework/web/bind/annotation/ModelAttribute

+###org/springframework/web/bind/annotation/ExceptionHandler
@3.0.0.RELEASE
+#value()[Ljava/lang/Class;

+###org/springframework/web/bind/annotation/CookieValue
@3.0.0.RELEASE
+#value()Ljava/lang/String;
+#required()Z
+#defaultValue()Ljava/lang/String;
@4.2.0.RELEASE
+#name()Ljava/lang/String;

+###org/springframework/web/bind/annotation/PostMapping
@4.3.0.RELEASE
+#name()Ljava/lang/String;
+#value()[Ljava/lang/String;
+#path()[Ljava/lang/String;
+#params()[Ljava/lang/String;
+#headers()[Ljava/lang/String;
+#consumes()[Ljava/lang/String;
+#produces()[Ljava/lang/String;

+###org/springframework/web/bind/annotation/RequestPart
@3.1.0.RELEASE
+#value()Ljava/lang/String;
+#required()Z
@4.2.0.RELEASE
+#name()Ljava/lang/String;

+###org/springframework/web/bind/annotation/RequestMapping
@2.5
+#value()[Ljava/lang/String;
+#method()[Lorg/springframework/web/bind/annotation/RequestMethod;
+#params()[Ljava/lang/String;
@2.5.1
-###org/springframework/web/bind/annotation/RequestMapping

+###org/springframework/web/bind/annotation/GetMapping
@4.3.0.RELEASE
+#name()Ljava/lang/String;
+#value()[Ljava/lang/String;
+#path()[Ljava/lang/String;
+#params()[Ljava/lang/String;
+#headers()[Ljava/lang/String;
+#produces()[Ljava/lang/String;
@4.3.5.RELEASE
+#consumes()[Ljava/lang/String;

+###org/springframework/web/bind/annotation/RequestBody
@3.0.0.RELEASE
@3.2.0.RELEASE
+#required()Z

+###org/springframework/web/bind/annotation/InitBinder
@2.5
+#value()[Ljava/lang/String;
@2.5.1
-###org/springframework/web/bind/annotation/InitBinder

+###org/springframework/web/bind/annotation/PatchMapping
@4.3.0.RELEASE
+#name()Ljava/lang/String;
+#value()[Ljava/lang/String;
+#path()[Ljava/lang/String;
+#params()[Ljava/lang/String;
+#headers()[Ljava/lang/String;
+#consumes()[Ljava/lang/String;
+#produces()[Ljava/lang/String;

+###org/springframework/web/bind/annotation/Mapping
@3.0.0.RELEASE

+###org/springframework/web/bind/annotation/SessionAttribute
@4.3.0.RELEASE
+#value()Ljava/lang/String;
+#name()Ljava/lang/String;
+#required()Z

+###org/springframework/web/bind/annotation/RestController
@4.0.0.RELEASE
@4.0.1.RELEASE
+#value()Ljava/lang/String;

+###org/springframework/web/bind/annotation/ControllerAdvice
@3.2.0.RELEASE
@4.0.0.RELEASE
+#value()[Ljava/lang/String;
+#basePackages()[Ljava/lang/String;
+#basePackageClasses()[Ljava/lang/Class;
+#assignableTypes()[Ljava/lang/Class;
+#annotations()[Ljava/lang/Class;

+###org/springframework/web/bind/annotation/SessionAttributes
@2.5
+#value()[Ljava/lang/String;
+#types()[Ljava/lang/Class;
@2.5.1
-###org/springframework/web/bind/annotation/SessionAttributes

+###org/springframework/web/bind/annotation/ResponseBody
@3.0.0.RELEASE

+###org/springframework/web/bind/annotation/RestControllerAdvice
@4.3.0.RELEASE
+#value()[Ljava/lang/String;
+#basePackages()[Ljava/lang/String;
+#basePackageClasses()[Ljava/lang/Class;
+#assignableTypes()[Ljava/lang/Class;
+#annotations()[Ljava/lang/Class;

+###org/springframework/web/bind/annotation/ValueConstants
@3.0.1.RELEASE

+###org/springframework/web/bind/annotation/RequestAttribute
@4.3.0.RELEASE
+#value()Ljava/lang/String;
+#name()Ljava/lang/String;
+#required()Z

+###org/springframework/web/bind/annotation/DeleteMapping
@4.3.0.RELEASE
+#name()Ljava/lang/String;
+#value()[Ljava/lang/String;
+#path()[Ljava/lang/String;
+#params()[Ljava/lang/String;
+#headers()[Ljava/lang/String;
+#consumes()[Ljava/lang/String;
+#produces()[Ljava/lang/String;

+###org/springframework/web/bind/annotation/PutMapping
@4.3.0.RELEASE
+#name()Ljava/lang/String;
+#value()[Ljava/lang/String;
+#path()[Ljava/lang/String;
+#params()[Ljava/lang/String;
+#headers()[Ljava/lang/String;
+#consumes()[Ljava/lang/String;
+#produces()[Ljava/lang/String;

+###org/springframework/web/bind/annotation/PathVariable
@3.0.0.RELEASE
+#value()Ljava/lang/String;
@4.3.3.RELEASE
+#name()Ljava/lang/String;
+#required()Z

+###org/springframework/web/bind/annotation/RequestMethod
@2.5
+#values()[Lorg/springframework/web/bind/annotation/RequestMethod;
+#valueOf(Ljava/lang/String;)Lorg/springframework/web/bind/annotation/RequestMethod;
@2.5.1
-###org/springframework/web/bind/annotation/RequestMethod

+###org/springframework/web/bind/MissingServletRequestParameterException
@2.0.2
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getMessage()Ljava/lang/String;
+#getParameterName()Ljava/lang/String;
+#getParameterType()Ljava/lang/String;
@2.5.1
-###org/springframework/web/bind/MissingServletRequestParameterException

+###org/springframework/web/bind/MethodArgumentNotValidException
@3.1.0.RELEASE
+#<init>(Lorg/springframework/core/MethodParameter;Lorg/springframework/validation/BindingResult;)V
+#getParameter()Lorg/springframework/core/MethodParameter;
+#getBindingResult()Lorg/springframework/validation/BindingResult;
+#getMessage()Ljava/lang/String;
@5.3.0
-#getBindingResult()Lorg/springframework/validation/BindingResult;
@6.0.0
+#getStatusCode()Lorg/springframework/http/HttpStatusCode;
+#getBody()Lorg/springframework/http/ProblemDetail;
+#getDetailMessageArguments()[Ljava/lang/Object;
+#getDetailMessageArguments(Lorg/springframework/context/MessageSource;Ljava/util/Locale;)[Ljava/lang/Object;
+#errorsToStringList(Ljava/util/List;)Ljava/util/List;
+#errorsToStringList(Ljava/util/List;Lorg/springframework/context/MessageSource;Ljava/util/Locale;)Ljava/util/List;
@6.0.3
+#resolveErrorMessages(Lorg/springframework/context/MessageSource;Ljava/util/Locale;)Ljava/util/Map;
@6.0.5
+#<init>(Ljava/lang/reflect/Executable;Lorg/springframework/validation/BindingResult;)V

+###org/springframework/web/bind/ServletRequestUtils
@2.0-m2
+#<init>()V
+#getIntParameter(Ljavax/servlet/ServletRequest;Ljava/lang/String;)Ljava/lang/Integer;
+#getIntParameter(Ljavax/servlet/ServletRequest;Ljava/lang/String;I)I
+#getIntParameters(Ljavax/servlet/ServletRequest;Ljava/lang/String;)[I
+#getRequiredIntParameter(Ljavax/servlet/ServletRequest;Ljava/lang/String;)I
+#getRequiredIntParameters(Ljavax/servlet/ServletRequest;Ljava/lang/String;)[I
+#getLongParameter(Ljavax/servlet/ServletRequest;Ljava/lang/String;)Ljava/lang/Long;
+#getLongParameter(Ljavax/servlet/ServletRequest;Ljava/lang/String;J)J
+#getLongParameters(Ljavax/servlet/ServletRequest;Ljava/lang/String;)[J
+#getRequiredLongParameter(Ljavax/servlet/ServletRequest;Ljava/lang/String;)J
+#getRequiredLongParameters(Ljavax/servlet/ServletRequest;Ljava/lang/String;)[J
+#getFloatParameter(Ljavax/servlet/ServletRequest;Ljava/lang/String;)Ljava/lang/Float;
+#getFloatParameter(Ljavax/servlet/ServletRequest;Ljava/lang/String;F)F
+#getFloatParameters(Ljavax/servlet/ServletRequest;Ljava/lang/String;)[F
+#getRequiredFloatParameter(Ljavax/servlet/ServletRequest;Ljava/lang/String;)F
+#getRequiredFloatParameters(Ljavax/servlet/ServletRequest;Ljava/lang/String;)[F
+#getDoubleParameter(Ljavax/servlet/ServletRequest;Ljava/lang/String;)Ljava/lang/Double;
+#getDoubleParameter(Ljavax/servlet/ServletRequest;Ljava/lang/String;D)D
+#getDoubleParameters(Ljavax/servlet/ServletRequest;Ljava/lang/String;)[D
+#getRequiredDoubleParameter(Ljavax/servlet/ServletRequest;Ljava/lang/String;)D
+#getRequiredDoubleParameters(Ljavax/servlet/ServletRequest;Ljava/lang/String;)[D
+#getBooleanParameter(Ljavax/servlet/ServletRequest;Ljava/lang/String;)Ljava/lang/Boolean;
+#getBooleanParameter(Ljavax/servlet/ServletRequest;Ljava/lang/String;Z)Z
+#getBooleanParameters(Ljavax/servlet/ServletRequest;Ljava/lang/String;)[Z
+#getRequiredBooleanParameter(Ljavax/servlet/ServletRequest;Ljava/lang/String;)Z
+#getRequiredBooleanParameters(Ljavax/servlet/ServletRequest;Ljava/lang/String;)[Z
+#getStringParameter(Ljavax/servlet/ServletRequest;Ljava/lang/String;)Ljava/lang/String;
+#getStringParameter(Ljavax/servlet/ServletRequest;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getStringParameters(Ljavax/servlet/ServletRequest;Ljava/lang/String;)[Ljava/lang/String;
+#getRequiredStringParameter(Ljavax/servlet/ServletRequest;Ljava/lang/String;)Ljava/lang/String;
+#getRequiredStringParameters(Ljavax/servlet/ServletRequest;Ljava/lang/String;)[Ljava/lang/String;
@2.5.1
-###org/springframework/web/bind/ServletRequestUtils

+###org/springframework/web/bind/WebDataBinder
@1.2-rc2
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#setFieldMarkerPrefix(Ljava/lang/String;)V
+#getFieldMarkerPrefix()Ljava/lang/String;
@1.2.6
+#<init>(Ljava/lang/Object;)V
@2.0-m2
+#setBindEmptyMultipartFiles(Z)V
+#isBindEmptyMultipartFiles()Z
@2.5.1
-###org/springframework/web/bind/WebDataBinder

+###org/springframework/web/bind/UnsatisfiedServletRequestParameterException
@3.0.0.RELEASE
+#<init>([Ljava/lang/String;Ljava/util/Map;)V
+#getMessage()Ljava/lang/String;
+#getParamConditions()[Ljava/lang/String;
+#getActualParams()Ljava/util/Map;
@4.2.0.RELEASE
+#<init>(Ljava/util/List;Ljava/util/Map;)V
+#getParamConditionGroups()Ljava/util/List;

+###org/springframework/web/HttpRequestMethodNotSupportedException
@2.0-m5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getMethod()Ljava/lang/String;
@2.5.3
+#<init>(Ljava/lang/String;[Ljava/lang/String;)V
+#<init>(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V
+#getSupportedMethods()[Ljava/lang/String;
@3.1.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/Collection;)V
@3.2.0.RELEASE
+#getSupportedHttpMethods()Ljava/util/Set;
@6.0.0
*#<init>(Ljava/lang/String;Ljava/lang/String;)V[deprecated]
*#<init>(Ljava/lang/String;[Ljava/lang/String;)V[deprecated]
*#<init>(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V[deprecated]
+#getStatusCode()Lorg/springframework/http/HttpStatusCode;
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#getBody()Lorg/springframework/http/ProblemDetail;
+#getDetailMessageArguments()[Ljava/lang/Object;

+###org/springframework/web/HttpSessionRequiredException
@2.0-m5
+#<init>(Ljava/lang/String;)V
@4.3.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getExpectedAttribute()Ljava/lang/String;

+###org/springframework/web/context/request/FacesRequestAttributes
@2.5.2
+#<init>(Ljavax/faces/context/FacesContext;)V
+#getAttribute(Ljava/lang/String;I)Ljava/lang/Object;
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;I)V
+#removeAttribute(Ljava/lang/String;I)V
+#getAttributeNames(I)[Ljava/lang/String;
+#registerDestructionCallback(Ljava/lang/String;Ljava/lang/Runnable;I)V
+#getSessionId()Ljava/lang/String;
+#getSessionMutex()Ljava/lang/Object;
@3.0.0.RELEASE
+#resolveReference(Ljava/lang/String;)Ljava/lang/Object;
@6.0.0
+#<init>(Ljakarta/faces/context/FacesContext;)V
-#<init>(Ljavax/faces/context/FacesContext;)V

+###org/springframework/web/context/request/async/WebAsyncTask
@3.2.0.RELEASE
+#<init>(Ljava/util/concurrent/Callable;)V
+#<init>(JLjava/util/concurrent/Callable;)V
+#<init>(Ljava/lang/Long;Ljava/lang/String;Ljava/util/concurrent/Callable;)V
+#<init>(Ljava/lang/Long;Lorg/springframework/core/task/AsyncTaskExecutor;Ljava/util/concurrent/Callable;)V
+#getCallable()Ljava/util/concurrent/Callable;
+#getTimeout()Ljava/lang/Long;
+#getExecutor()Lorg/springframework/core/task/AsyncTaskExecutor;
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#onTimeout(Ljava/util/concurrent/Callable;)V
+#onCompletion(Ljava/lang/Runnable;)V
@5.0.0.RELEASE
+#onError(Ljava/util/concurrent/Callable;)V

+###org/springframework/web/context/request/async/WebAsyncUtils
@3.2.0.RELEASE
+#<init>()V
+#getAsyncManager(Ljavax/servlet/ServletRequest;)Lorg/springframework/web/context/request/async/WebAsyncManager;
+#getAsyncManager(Lorg/springframework/web/context/request/WebRequest;)Lorg/springframework/web/context/request/async/WebAsyncManager;
+#createAsyncWebRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/web/context/request/async/AsyncWebRequest;
@6.0.0
+#getAsyncManager(Ljakarta/servlet/ServletRequest;)Lorg/springframework/web/context/request/async/WebAsyncManager;
+#createAsyncWebRequest(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)Lorg/springframework/web/context/request/async/AsyncWebRequest;
-#getAsyncManager(Ljavax/servlet/ServletRequest;)Lorg/springframework/web/context/request/async/WebAsyncManager;
-#createAsyncWebRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/web/context/request/async/AsyncWebRequest;

+###org/springframework/web/context/request/async/WebAsyncManager
@3.2.0.RELEASE
+#setAsyncWebRequest(Lorg/springframework/web/context/request/async/AsyncWebRequest;)V
+#setTaskExecutor(Lorg/springframework/core/task/AsyncTaskExecutor;)V
+#isConcurrentHandlingStarted()Z
+#hasConcurrentResult()Z
+#getConcurrentResult()Ljava/lang/Object;
+#getConcurrentResultContext()[Ljava/lang/Object;
+#getCallableInterceptor(Ljava/lang/Object;)Lorg/springframework/web/context/request/async/CallableProcessingInterceptor;
+#getDeferredResultInterceptor(Ljava/lang/Object;)Lorg/springframework/web/context/request/async/DeferredResultProcessingInterceptor;
+#registerCallableInterceptor(Ljava/lang/Object;Lorg/springframework/web/context/request/async/CallableProcessingInterceptor;)V
+#registerCallableInterceptors([Lorg/springframework/web/context/request/async/CallableProcessingInterceptor;)V
+#registerDeferredResultInterceptor(Ljava/lang/Object;Lorg/springframework/web/context/request/async/DeferredResultProcessingInterceptor;)V
+#registerDeferredResultInterceptors([Lorg/springframework/web/context/request/async/DeferredResultProcessingInterceptor;)V
+#clearConcurrentResult()V
+#startCallableProcessing(Ljava/util/concurrent/Callable;[Ljava/lang/Object;)V
+#startCallableProcessing(Lorg/springframework/web/context/request/async/WebAsyncTask;[Ljava/lang/Object;)V
+#startDeferredResultProcessing(Lorg/springframework/web/context/request/async/DeferredResult;[Ljava/lang/Object;)V

+###org/springframework/web/context/request/async/DeferredResult
@3.2.0.RELEASE
+#<init>()V
+#<init>(J)V
+#<init>(Ljava/lang/Long;Ljava/lang/Object;)V
+#isSetOrExpired()Z
+#onTimeout(Ljava/lang/Runnable;)V
+#onCompletion(Ljava/lang/Runnable;)V
+#setResultHandler(Lorg/springframework/web/context/request/async/DeferredResult$DeferredResultHandler;)V
+#setResult(Ljava/lang/Object;)Z
+#setErrorResult(Ljava/lang/Object;)Z
@4.0.0.RELEASE
+#hasResult()Z
+#getResult()Ljava/lang/Object;
@4.2.0.RELEASE
+#<init>(Ljava/lang/Long;)V
-#<init>(J)V
@5.0.0.RELEASE
+#onError(Ljava/util/function/Consumer;)V
@5.1.1.RELEASE
+#<init>(Ljava/lang/Long;Ljava/util/function/Supplier;)V

+###org/springframework/web/context/request/async/CallableProcessingInterceptorAdapter
@3.2.0.RELEASE
+#<init>()V
+#beforeConcurrentHandling(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/util/concurrent/Callable;)V
+#preProcess(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/util/concurrent/Callable;)V
+#postProcess(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/util/concurrent/Callable;Ljava/lang/Object;)V
+#handleTimeout(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#afterCompletion(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/util/concurrent/Callable;)V
@5.0.0.RELEASE
+#handleError(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/util/concurrent/Callable;Ljava/lang/Throwable;)Ljava/lang/Object;
@6.0.0
-###org/springframework/web/context/request/async/CallableProcessingInterceptorAdapter

+###org/springframework/web/context/request/async/AsyncWebRequest
@3.2.0.RELEASE
+#setTimeout(Ljava/lang/Long;)V
+#addTimeoutHandler(Ljava/lang/Runnable;)V
+#addCompletionHandler(Ljava/lang/Runnable;)V
+#startAsync()V
+#isAsyncStarted()Z
+#dispatch()V
+#isAsyncComplete()Z
@5.0.0.RELEASE
+#addErrorHandler(Ljava/util/function/Consumer;)V

+###org/springframework/web/context/request/async/TimeoutDeferredResultProcessingInterceptor
@3.2.0.RELEASE
+#<init>()V
+#handleTimeout(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/context/request/async/DeferredResult;)Z

+###org/springframework/web/context/request/async/CallableProcessingInterceptor
@3.2.0.RELEASE
+#beforeConcurrentHandling(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/util/concurrent/Callable;)V
+#preProcess(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/util/concurrent/Callable;)V
+#postProcess(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/util/concurrent/Callable;Ljava/lang/Object;)V
+#handleTimeout(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#afterCompletion(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/util/concurrent/Callable;)V
@5.0.0.RELEASE
+#handleError(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/util/concurrent/Callable;Ljava/lang/Throwable;)Ljava/lang/Object;

+###org/springframework/web/context/request/async/DeferredResult$DeferredResultHandler
@3.2.0.RELEASE
+#handleResult(Ljava/lang/Object;)V

+###org/springframework/web/context/request/async/DeferredResultProcessingInterceptorAdapter
@3.2.0.RELEASE
+#<init>()V
+#beforeConcurrentHandling(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/context/request/async/DeferredResult;)V
+#preProcess(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/context/request/async/DeferredResult;)V
+#postProcess(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/context/request/async/DeferredResult;Ljava/lang/Object;)V
+#handleTimeout(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/context/request/async/DeferredResult;)Z
+#afterCompletion(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/context/request/async/DeferredResult;)V
@5.0.0.RELEASE
+#handleError(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/context/request/async/DeferredResult;Ljava/lang/Throwable;)Z
@6.0.0
-###org/springframework/web/context/request/async/DeferredResultProcessingInterceptorAdapter

+###org/springframework/web/context/request/async/StandardServletAsyncWebRequest
@3.2.0.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#setTimeout(Ljava/lang/Long;)V
+#addTimeoutHandler(Ljava/lang/Runnable;)V
+#addCompletionHandler(Ljava/lang/Runnable;)V
+#isAsyncStarted()Z
+#isAsyncComplete()Z
+#startAsync()V
+#dispatch()V
+#onStartAsync(Ljavax/servlet/AsyncEvent;)V
+#onError(Ljavax/servlet/AsyncEvent;)V
+#onTimeout(Ljavax/servlet/AsyncEvent;)V
+#onComplete(Ljavax/servlet/AsyncEvent;)V
@5.0.0.RELEASE
+#addErrorHandler(Ljava/util/function/Consumer;)V
@6.0.0
+#<init>(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
+#onStartAsync(Ljakarta/servlet/AsyncEvent;)V
+#onError(Ljakarta/servlet/AsyncEvent;)V
+#onTimeout(Ljakarta/servlet/AsyncEvent;)V
+#onComplete(Ljakarta/servlet/AsyncEvent;)V
-#<init>(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#onStartAsync(Ljavax/servlet/AsyncEvent;)V
-#onError(Ljavax/servlet/AsyncEvent;)V
-#onTimeout(Ljavax/servlet/AsyncEvent;)V
-#onComplete(Ljavax/servlet/AsyncEvent;)V

+###org/springframework/web/context/request/async/DeferredResultProcessingInterceptor
@3.2.0.RELEASE
+#beforeConcurrentHandling(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/context/request/async/DeferredResult;)V
+#preProcess(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/context/request/async/DeferredResult;)V
+#postProcess(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/context/request/async/DeferredResult;Ljava/lang/Object;)V
+#handleTimeout(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/context/request/async/DeferredResult;)Z
+#afterCompletion(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/context/request/async/DeferredResult;)V
@5.0.0.RELEASE
+#handleError(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/context/request/async/DeferredResult;Ljava/lang/Throwable;)Z

+###org/springframework/web/context/request/async/AsyncRequestTimeoutException
@4.2.8.RELEASE
+#<init>()V
@4.3.0.RELEASE
-###org/springframework/web/context/request/async/AsyncRequestTimeoutException

+###org/springframework/web/context/request/async/TimeoutCallableProcessingInterceptor
@3.2.0.RELEASE
+#<init>()V
+#handleTimeout(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/util/concurrent/Callable;)Ljava/lang/Object;

+###org/springframework/web/context/request/AbstractRequestAttributes
@2.0
+#<init>()V
+#requestCompleted()V

+###org/springframework/web/context/request/WebRequestInterceptor
@2.0
+#preHandle(Lorg/springframework/web/context/request/WebRequest;)V
+#postHandle(Lorg/springframework/web/context/request/WebRequest;Lorg/springframework/ui/ModelMap;)V
+#afterCompletion(Lorg/springframework/web/context/request/WebRequest;Ljava/lang/Exception;)V

+###org/springframework/web/context/request/RequestContextListener
@2.0
+#<init>()V
+#requestInitialized(Ljavax/servlet/ServletRequestEvent;)V
+#requestDestroyed(Ljavax/servlet/ServletRequestEvent;)V
@6.0.0
+#requestInitialized(Ljakarta/servlet/ServletRequestEvent;)V
+#requestDestroyed(Ljakarta/servlet/ServletRequestEvent;)V
-#requestInitialized(Ljavax/servlet/ServletRequestEvent;)V
-#requestDestroyed(Ljavax/servlet/ServletRequestEvent;)V

+###org/springframework/web/context/request/ServletWebRequest
@2.0
+#<init>(Ljavax/servlet/http/HttpServletRequest;)V
+#getParameter(Ljava/lang/String;)Ljava/lang/String;
+#getParameterValues(Ljava/lang/String;)[Ljava/lang/String;
+#getParameterMap()Ljava/util/Map;
+#getLocale()Ljava/util/Locale;
@2.0.4
+#getContextPath()Ljava/lang/String;
+#getRemoteUser()Ljava/lang/String;
+#getUserPrincipal()Ljava/security/Principal;
+#isUserInRole(Ljava/lang/String;)Z
+#isSecure()Z
@2.5
+#getDescription(Z)Ljava/lang/String;
+#toString()Ljava/lang/String;
@2.5.1
+#<init>(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#checkNotModified(J)Z
+#isNotModified()Z
@2.5.2
+#getResponse()Ljavax/servlet/http/HttpServletResponse;
+#getNativeRequest()Ljava/lang/Object;
+#getNativeResponse()Ljava/lang/Object;
@3.0.0.RELEASE
+#getHeader(Ljava/lang/String;)Ljava/lang/String;
+#getHeaderValues(Ljava/lang/String;)[Ljava/lang/String;
+#getHeaderNames()Ljava/util/Iterator;
+#getParameterNames()Ljava/util/Iterator;
@3.0.2.RELEASE
+#getNativeRequest(Ljava/lang/Class;)Ljava/lang/Object;
+#getNativeResponse(Ljava/lang/Class;)Ljava/lang/Object;
@3.1.0.RELEASE
+#checkNotModified(Ljava/lang/String;)Z
@4.0.2.RELEASE
+#getHttpMethod()Lorg/springframework/http/HttpMethod;
@4.1.0.RELEASE
-#getResponse()Ljavax/servlet/http/HttpServletResponse;
@4.2.0.RELEASE
+#checkNotModified(Ljava/lang/String;J)Z
@6.0.0
+#<init>(Ljakarta/servlet/http/HttpServletRequest;)V
+#<init>(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#<init>(Ljavax/servlet/http/HttpServletRequest;)V
-#<init>(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/web/context/request/SessionScope
@2.0
+#<init>()V
+#<init>(Z)V
+#getConversationId()Ljava/lang/String;
+#get(Ljava/lang/String;Lorg/springframework/beans/factory/ObjectFactory;)Ljava/lang/Object;
+#remove(Ljava/lang/String;)Ljava/lang/Object;
@5.0.0.RELEASE
-#<init>(Z)V

+###org/springframework/web/context/request/ServletRequestAttributes
@2.0
+#<init>(Ljavax/servlet/http/HttpServletRequest;)V
+#getAttribute(Ljava/lang/String;I)Ljava/lang/Object;
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;I)V
+#removeAttribute(Ljava/lang/String;I)V
+#registerDestructionCallback(Ljava/lang/String;Ljava/lang/Runnable;I)V
+#getSessionId()Ljava/lang/String;
+#getSessionMutex()Ljava/lang/Object;
@2.0.4
+#getRequest()Ljavax/servlet/http/HttpServletRequest;
@2.5
+#getAttributeNames(I)[Ljava/lang/String;
@2.5.2
+#toString()Ljava/lang/String;
@3.0.0.RELEASE
+#resolveReference(Ljava/lang/String;)Ljava/lang/Object;
@4.1.0.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#getResponse()Ljavax/servlet/http/HttpServletResponse;
@6.0.0
+#<init>(Ljakarta/servlet/http/HttpServletRequest;)V
+#<init>(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
+#getRequest()Ljakarta/servlet/http/HttpServletRequest;
+#getResponse()Ljakarta/servlet/http/HttpServletResponse;
-#<init>(Ljavax/servlet/http/HttpServletRequest;)V
-#<init>(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#getRequest()Ljavax/servlet/http/HttpServletRequest;
-#getResponse()Ljavax/servlet/http/HttpServletResponse;

+###org/springframework/web/context/request/AsyncWebRequestInterceptor
@3.2.0.RELEASE
+#afterConcurrentHandlingStarted(Lorg/springframework/web/context/request/WebRequest;)V

+###org/springframework/web/context/request/RequestScope
@2.0
+#<init>()V
+#getConversationId()Ljava/lang/String;

+###org/springframework/web/context/request/DestructionCallbackBindingListener
@3.0.0.RELEASE
+#<init>(Ljava/lang/Runnable;)V
+#valueBound(Ljavax/servlet/http/HttpSessionBindingEvent;)V
+#valueUnbound(Ljavax/servlet/http/HttpSessionBindingEvent;)V
@6.0.0
+#valueBound(Ljakarta/servlet/http/HttpSessionBindingEvent;)V
+#valueUnbound(Ljakarta/servlet/http/HttpSessionBindingEvent;)V
-#valueBound(Ljavax/servlet/http/HttpSessionBindingEvent;)V
-#valueUnbound(Ljavax/servlet/http/HttpSessionBindingEvent;)V

+###org/springframework/web/context/request/RequestContextHolder
@2.0
+#<init>()V
+#setRequestAttributes(Lorg/springframework/web/context/request/RequestAttributes;)V
+#getRequestAttributes()Lorg/springframework/web/context/request/RequestAttributes;
+#currentRequestAttributes()Lorg/springframework/web/context/request/RequestAttributes;
@2.0.1
+#resetRequestAttributes()V
+#setRequestAttributes(Lorg/springframework/web/context/request/RequestAttributes;Z)V

+###org/springframework/web/context/request/NativeWebRequest
@2.5.2
+#getNativeRequest()Ljava/lang/Object;
+#getNativeResponse()Ljava/lang/Object;
@3.0.2.RELEASE
+#getNativeRequest(Ljava/lang/Class;)Ljava/lang/Object;
+#getNativeResponse(Ljava/lang/Class;)Ljava/lang/Object;

+###org/springframework/web/context/request/FacesWebRequest
@2.5.2
+#<init>(Ljavax/faces/context/FacesContext;)V
+#getNativeRequest()Ljava/lang/Object;
+#getNativeResponse()Ljava/lang/Object;
+#getParameter(Ljava/lang/String;)Ljava/lang/String;
+#getParameterValues(Ljava/lang/String;)[Ljava/lang/String;
+#getParameterMap()Ljava/util/Map;
+#getLocale()Ljava/util/Locale;
+#getContextPath()Ljava/lang/String;
+#getRemoteUser()Ljava/lang/String;
+#getUserPrincipal()Ljava/security/Principal;
+#isUserInRole(Ljava/lang/String;)Z
+#isSecure()Z
+#checkNotModified(J)Z
+#getDescription(Z)Ljava/lang/String;
+#toString()Ljava/lang/String;
@3.0.0.RELEASE
+#getHeader(Ljava/lang/String;)Ljava/lang/String;
+#getHeaderValues(Ljava/lang/String;)[Ljava/lang/String;
+#getHeaderNames()Ljava/util/Iterator;
+#getParameterNames()Ljava/util/Iterator;
@3.0.2.RELEASE
+#getNativeRequest(Ljava/lang/Class;)Ljava/lang/Object;
+#getNativeResponse(Ljava/lang/Class;)Ljava/lang/Object;
@3.1.0.RELEASE
+#checkNotModified(Ljava/lang/String;)Z
@4.2.0.RELEASE
+#checkNotModified(Ljava/lang/String;J)Z
@6.0.0
+#<init>(Ljakarta/faces/context/FacesContext;)V
-#<init>(Ljavax/faces/context/FacesContext;)V

+###org/springframework/web/context/request/AbstractRequestAttributesScope
@2.0
+#<init>()V
+#get(Ljava/lang/String;Lorg/springframework/beans/factory/ObjectFactory;)Ljava/lang/Object;
+#remove(Ljava/lang/String;)Ljava/lang/Object;
+#registerDestructionCallback(Ljava/lang/String;Ljava/lang/Runnable;)V
@3.0.0.RELEASE
+#resolveContextualObject(Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/web/context/request/WebRequest
@2.0
+#getParameter(Ljava/lang/String;)Ljava/lang/String;
+#getParameterValues(Ljava/lang/String;)[Ljava/lang/String;
+#getParameterMap()Ljava/util/Map;
+#getLocale()Ljava/util/Locale;
@2.0.4
+#getContextPath()Ljava/lang/String;
+#getRemoteUser()Ljava/lang/String;
+#getUserPrincipal()Ljava/security/Principal;
+#isUserInRole(Ljava/lang/String;)Z
+#isSecure()Z
@2.5
+#getDescription(Z)Ljava/lang/String;
@2.5.1
+#checkNotModified(J)Z
@3.0.0.RELEASE
+#getHeader(Ljava/lang/String;)Ljava/lang/String;
+#getHeaderValues(Ljava/lang/String;)[Ljava/lang/String;
+#getHeaderNames()Ljava/util/Iterator;
+#getParameterNames()Ljava/util/Iterator;
@3.1.0.RELEASE
+#checkNotModified(Ljava/lang/String;)Z
@4.2.0.RELEASE
+#checkNotModified(Ljava/lang/String;J)Z

+###org/springframework/web/context/request/RequestAttributes
@2.0
+#getAttribute(Ljava/lang/String;I)Ljava/lang/Object;
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;I)V
+#removeAttribute(Ljava/lang/String;I)V
+#registerDestructionCallback(Ljava/lang/String;Ljava/lang/Runnable;I)V
+#getSessionId()Ljava/lang/String;
+#getSessionMutex()Ljava/lang/Object;
@2.5
+#getAttributeNames(I)[Ljava/lang/String;
@3.0.0.RELEASE
+#resolveReference(Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/web/context/support/GenericWebApplicationContext
@1.2
+#<init>()V
+#<init>(Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;)V
+#setServletContext(Ljavax/servlet/ServletContext;)V
+#getServletContext()Ljavax/servlet/ServletContext;
+#getTheme(Ljava/lang/String;)Lorg/springframework/ui/context/Theme;
@3.0.0.RELEASE
+#<init>(Ljavax/servlet/ServletContext;)V
+#<init>(Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;Ljavax/servlet/ServletContext;)V
@3.1.0.RELEASE
+#setServletConfig(Ljavax/servlet/ServletConfig;)V
+#getServletConfig()Ljavax/servlet/ServletConfig;
+#setNamespace(Ljava/lang/String;)V
+#getNamespace()Ljava/lang/String;
+#setConfigLocation(Ljava/lang/String;)V
+#setConfigLocations([Ljava/lang/String;)V
+#getConfigLocations()[Ljava/lang/String;
@3.1.2.RELEASE
+#getEnvironment()Lorg/springframework/web/context/ConfigurableWebEnvironment;
+#getEnvironment()Lorg/springframework/core/env/Environment;
+#getEnvironment()Lorg/springframework/core/env/ConfigurableEnvironment;
@3.2.0.RELEASE
+#getApplicationName()Ljava/lang/String;
@3.2.1.RELEASE
-#getEnvironment()Lorg/springframework/web/context/ConfigurableWebEnvironment;
-#getEnvironment()Lorg/springframework/core/env/ConfigurableEnvironment;
-#getEnvironment()Lorg/springframework/core/env/Environment;
@6.0.0
+#<init>(Ljakarta/servlet/ServletContext;)V
+#<init>(Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;Ljakarta/servlet/ServletContext;)V
+#setServletContext(Ljakarta/servlet/ServletContext;)V
+#getServletContext()Ljakarta/servlet/ServletContext;
*#getTheme(Ljava/lang/String;)Lorg/springframework/ui/context/Theme;[deprecated]
+#setServletConfig(Ljakarta/servlet/ServletConfig;)V
+#getServletConfig()Ljakarta/servlet/ServletConfig;
-#<init>(Ljavax/servlet/ServletContext;)V
-#<init>(Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;Ljavax/servlet/ServletContext;)V
-#setServletContext(Ljavax/servlet/ServletContext;)V
-#getServletContext()Ljavax/servlet/ServletContext;
-#setServletConfig(Ljavax/servlet/ServletConfig;)V
-#getServletConfig()Ljavax/servlet/ServletConfig;

+###org/springframework/web/context/support/HttpRequestHandlerServlet
@2.0-m5
+#<init>()V
+#init()V

+###org/springframework/web/context/support/SpringBeanAutowiringSupport
@2.5.1
+#<init>()V
+#processInjectionBasedOnCurrentContext(Ljava/lang/Object;)V
@3.0.0.RELEASE
+#processInjectionBasedOnServletContext(Ljava/lang/Object;Ljavax/servlet/ServletContext;)V
@6.0.0
+#processInjectionBasedOnServletContext(Ljava/lang/Object;Ljakarta/servlet/ServletContext;)V
-#processInjectionBasedOnServletContext(Ljava/lang/Object;Ljavax/servlet/ServletContext;)V

+###org/springframework/web/context/support/AnnotationConfigWebApplicationContext
@3.0.0.RELEASE
+#<init>()V
@3.1.0.RELEASE
+#setConfigLocation(Ljava/lang/String;)V
+#setConfigLocations([Ljava/lang/String;)V
+#register([Ljava/lang/Class;)V
+#scan([Ljava/lang/String;)V
+#setBeanNameGenerator(Lorg/springframework/beans/factory/support/BeanNameGenerator;)V
+#setScopeMetadataResolver(Lorg/springframework/context/annotation/ScopeMetadataResolver;)V
@3.2.5.RELEASE
-#setConfigLocation(Ljava/lang/String;)V
-#setConfigLocations([Ljava/lang/String;)V

+###org/springframework/web/context/support/ServletContextAttributeExporter
@1.1.4
+#<init>()V
+#setAttributes(Ljava/util/Map;)V
+#setServletContext(Ljavax/servlet/ServletContext;)V
@6.0.0
+#setServletContext(Ljakarta/servlet/ServletContext;)V
-#setServletContext(Ljavax/servlet/ServletContext;)V

+###org/springframework/web/context/support/GroovyWebApplicationContext
@4.1.0.RELEASE
+#<init>()V
+#setMetaClass(Lgroovy/lang/MetaClass;)V
+#getMetaClass()Lgroovy/lang/MetaClass;
+#invokeMethod(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#setProperty(Ljava/lang/String;Ljava/lang/Object;)V
+#getProperty(Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/web/context/support/ServletRequestHandledEvent
@2.0-m2
+#<init>(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/Throwable;)V
+#getRequestUrl()Ljava/lang/String;
+#getClientAddress()Ljava/lang/String;
+#getMethod()Ljava/lang/String;
+#getServletName()Ljava/lang/String;
+#getShortDescription()Ljava/lang/String;
+#getDescription()Ljava/lang/String;
+#toString()Ljava/lang/String;
@4.1.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/Throwable;I)V
+#getStatusCode()I

+###org/springframework/web/context/support/ServletContextAttributeFactoryBean
@1.1.4
+#<init>()V
+#setAttributeName(Ljava/lang/String;)V
+#setServletContext(Ljavax/servlet/ServletContext;)V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@6.0.0
+#setServletContext(Ljakarta/servlet/ServletContext;)V
-#setServletContext(Ljavax/servlet/ServletContext;)V

+###org/springframework/web/context/support/ServletConfigPropertySource
@3.1.0.RELEASE
+#<init>(Ljava/lang/String;Ljavax/servlet/ServletConfig;)V
+#getPropertyNames()[Ljava/lang/String;
+#getProperty(Ljava/lang/String;)Ljava/lang/String;
+#getProperty(Ljava/lang/String;)Ljava/lang/Object;
@6.0.0
+#<init>(Ljava/lang/String;Ljakarta/servlet/ServletConfig;)V
-#<init>(Ljava/lang/String;Ljavax/servlet/ServletConfig;)V

+###org/springframework/web/context/support/ServletContextScope
@3.0.0.RELEASE
+#<init>(Ljavax/servlet/ServletContext;)V
+#get(Ljava/lang/String;Lorg/springframework/beans/factory/ObjectFactory;)Ljava/lang/Object;
+#remove(Ljava/lang/String;)Ljava/lang/Object;
+#registerDestructionCallback(Ljava/lang/String;Ljava/lang/Runnable;)V
+#resolveContextualObject(Ljava/lang/String;)Ljava/lang/Object;
+#getConversationId()Ljava/lang/String;
+#destroy()V
@6.0.0
+#<init>(Ljakarta/servlet/ServletContext;)V
-#<init>(Ljavax/servlet/ServletContext;)V

+###org/springframework/web/context/support/LiveBeansViewServlet
@3.2.0.RELEASE
+#<init>()V
+#init()V
@6.0.0
-###org/springframework/web/context/support/LiveBeansViewServlet

+###org/springframework/web/context/support/StandardServletEnvironment
@3.1.0.RELEASE
+#<init>()V
@3.1.2.RELEASE
+#initPropertySources(Ljavax/servlet/ServletContext;Ljavax/servlet/ServletConfig;)V
@6.0.0
+#initPropertySources(Ljakarta/servlet/ServletContext;Ljakarta/servlet/ServletConfig;)V
-#initPropertySources(Ljavax/servlet/ServletContext;Ljavax/servlet/ServletConfig;)V

+###org/springframework/web/context/support/ServletContextLiveBeansView
@3.2.0.RELEASE
+#<init>(Ljavax/servlet/ServletContext;)V
@6.0.0
-###org/springframework/web/context/support/ServletContextLiveBeansView

+###org/springframework/web/context/support/ServletContextPropertySource
@3.1.0.RELEASE
+#<init>(Ljava/lang/String;Ljavax/servlet/ServletContext;)V
+#getPropertyNames()[Ljava/lang/String;
+#getProperty(Ljava/lang/String;)Ljava/lang/String;
+#getProperty(Ljava/lang/String;)Ljava/lang/Object;
@6.0.0
+#<init>(Ljava/lang/String;Ljakarta/servlet/ServletContext;)V
-#<init>(Ljava/lang/String;Ljavax/servlet/ServletContext;)V

+###org/springframework/web/context/support/ServletContextParameterFactoryBean
@1.2.4
+#<init>()V
+#setInitParamName(Ljava/lang/String;)V
+#setServletContext(Ljavax/servlet/ServletContext;)V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@3.0.0.RELEASE
+#getObject()Ljava/lang/String;
@6.0.0
+#setServletContext(Ljakarta/servlet/ServletContext;)V
-#setServletContext(Ljavax/servlet/ServletContext;)V

+###org/springframework/web/context/support/ContextExposingHttpServletRequest
@2.5
+#<init>(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/web/context/WebApplicationContext;)V
+#getWebApplicationContext()Lorg/springframework/web/context/WebApplicationContext;
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
@2.5.3
+#<init>(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/web/context/WebApplicationContext;Ljava/util/Set;)V
@6.0.0
+#<init>(Ljakarta/servlet/http/HttpServletRequest;Lorg/springframework/web/context/WebApplicationContext;)V
+#<init>(Ljakarta/servlet/http/HttpServletRequest;Lorg/springframework/web/context/WebApplicationContext;Ljava/util/Set;)V
-#<init>(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/web/context/WebApplicationContext;)V
-#<init>(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/web/context/WebApplicationContext;Ljava/util/Set;)V

+###org/springframework/web/context/annotation/SessionScope
@4.3.0.RELEASE
+#proxyMode()Lorg/springframework/context/annotation/ScopedProxyMode;

+###org/springframework/web/context/annotation/RequestScope
@4.3.0.RELEASE
+#proxyMode()Lorg/springframework/context/annotation/ScopedProxyMode;

+###org/springframework/web/context/annotation/ApplicationScope
@4.3.0.RELEASE
+#proxyMode()Lorg/springframework/context/annotation/ScopedProxyMode;

+###org/springframework/web/context/AbstractContextLoaderInitializer
@3.2.0.RELEASE
+#<init>()V
+#onStartup(Ljavax/servlet/ServletContext;)V
@6.0.0
+#onStartup(Ljakarta/servlet/ServletContext;)V
-#onStartup(Ljavax/servlet/ServletContext;)V

+###org/springframework/web/context/ServletConfigAware
@2.0-m1
+#setServletConfig(Ljavax/servlet/ServletConfig;)V
@6.0.0
+#setServletConfig(Ljakarta/servlet/ServletConfig;)V
-#setServletConfig(Ljavax/servlet/ServletConfig;)V

+###org/springframework/web/context/ConfigurableWebEnvironment
@3.1.2.RELEASE
+#initPropertySources(Ljavax/servlet/ServletContext;Ljavax/servlet/ServletConfig;)V
@6.0.0
+#initPropertySources(Ljakarta/servlet/ServletContext;Ljakarta/servlet/ServletConfig;)V
-#initPropertySources(Ljavax/servlet/ServletContext;Ljavax/servlet/ServletConfig;)V

+###org/springframework/web/context/ContextCleanupListener
@3.0.0.RELEASE
+#<init>()V
+#contextInitialized(Ljavax/servlet/ServletContextEvent;)V
+#contextDestroyed(Ljavax/servlet/ServletContextEvent;)V
@6.0.0
+#contextInitialized(Ljakarta/servlet/ServletContextEvent;)V
+#contextDestroyed(Ljakarta/servlet/ServletContextEvent;)V
-#contextInitialized(Ljavax/servlet/ServletContextEvent;)V
-#contextDestroyed(Ljavax/servlet/ServletContextEvent;)V

+###org/springframework/web/HttpRequestHandler
@2.0-m5
+#handleRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@6.0.0
+#handleRequest(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#handleRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/web/method/support/HandlerMethodReturnValueHandlerComposite
@3.1.0.RELEASE
+#<init>()V
+#getHandlers()Ljava/util/List;
+#supportsReturnType(Lorg/springframework/core/MethodParameter;)Z
+#handleReturnValue(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/web/method/support/ModelAndViewContainer;Lorg/springframework/web/context/request/NativeWebRequest;)V
+#addHandler(Lorg/springframework/web/method/support/HandlerMethodReturnValueHandler;)Lorg/springframework/web/method/support/HandlerMethodReturnValueHandlerComposite;
+#addHandlers(Ljava/util/List;)Lorg/springframework/web/method/support/HandlerMethodReturnValueHandlerComposite;
@4.2.0.RELEASE
+#isAsyncReturnValue(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;)Z
@5.0.0.RELEASE
-#isAsyncReturnValue(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;)Z

+###org/springframework/web/method/support/InvocableHandlerMethod
@3.1.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Class;)V
+#setDataBinderFactory(Lorg/springframework/web/bind/support/WebDataBinderFactory;)V
+#setHandlerMethodArgumentResolvers(Lorg/springframework/web/method/support/HandlerMethodArgumentResolverComposite;)V
+#setParameterNameDiscoverer(Lorg/springframework/core/ParameterNameDiscoverer;)V
+#invokeForRequest(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/method/support/ModelAndViewContainer;[Ljava/lang/Object;)Ljava/lang/Object;
@3.1.3.RELEASE
+#<init>(Lorg/springframework/web/method/HandlerMethod;)V

+###org/springframework/web/method/support/HandlerMethodArgumentResolverComposite
@3.1.0.RELEASE
+#<init>()V
+#getResolvers()Ljava/util/List;
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/method/support/ModelAndViewContainer;Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/bind/support/WebDataBinderFactory;)Ljava/lang/Object;
+#addResolver(Lorg/springframework/web/method/support/HandlerMethodArgumentResolver;)Lorg/springframework/web/method/support/HandlerMethodArgumentResolverComposite;
+#addResolvers(Ljava/util/List;)Lorg/springframework/web/method/support/HandlerMethodArgumentResolverComposite;
@4.3.0.RELEASE
+#addResolvers([Lorg/springframework/web/method/support/HandlerMethodArgumentResolver;)Lorg/springframework/web/method/support/HandlerMethodArgumentResolverComposite;
+#clear()V

+###org/springframework/web/method/support/HandlerMethodArgumentResolver
@3.1.0.RELEASE
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/method/support/ModelAndViewContainer;Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/bind/support/WebDataBinderFactory;)Ljava/lang/Object;

+###org/springframework/web/method/support/CompositeUriComponentsContributor
@4.0.0.RELEASE
+#<init>(Ljava/util/Collection;)V
+#<init>(Ljava/util/Collection;Lorg/springframework/core/convert/ConversionService;)V
+#hasContributors()Z
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#contributeMethodArgument(Lorg/springframework/core/MethodParameter;Ljava/lang/Object;Lorg/springframework/web/util/UriComponentsBuilder;Ljava/util/Map;Lorg/springframework/core/convert/ConversionService;)V
+#contributeMethodArgument(Lorg/springframework/core/MethodParameter;Ljava/lang/Object;Lorg/springframework/web/util/UriComponentsBuilder;Ljava/util/Map;)V
@4.0.1.RELEASE
+#<init>([Lorg/springframework/web/method/support/UriComponentsContributor;)V

+###org/springframework/web/method/support/ModelAndViewContainer
@3.1.0.RELEASE
+#<init>()V
+#setViewName(Ljava/lang/String;)V
+#getViewName()Ljava/lang/String;
+#setView(Ljava/lang/Object;)V
+#getView()Ljava/lang/Object;
+#isViewReference()Z
+#setRequestHandled(Z)V
+#isRequestHandled()Z
+#getModel()Lorg/springframework/ui/ModelMap;
+#setRedirectModel(Lorg/springframework/ui/ModelMap;)V
+#setRedirectModelScenario(Z)V
+#setIgnoreDefaultModelOnRedirect(Z)V
+#getSessionStatus()Lorg/springframework/web/bind/support/SessionStatus;
+#addAttribute(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/web/method/support/ModelAndViewContainer;
+#addAttribute(Ljava/lang/Object;)Lorg/springframework/web/method/support/ModelAndViewContainer;
+#addAllAttributes(Ljava/util/Map;)Lorg/springframework/web/method/support/ModelAndViewContainer;
+#mergeAttributes(Ljava/util/Map;)Lorg/springframework/web/method/support/ModelAndViewContainer;
+#containsAttribute(Ljava/lang/String;)Z
+#toString()Ljava/lang/String;
@3.1.3.RELEASE
+#removeAttributes(Ljava/util/Map;)Lorg/springframework/web/method/support/ModelAndViewContainer;
@4.1.4.RELEASE
+#getDefaultModel()Lorg/springframework/ui/ModelMap;
@4.3.0.RELEASE
+#setBindingDisabled(Ljava/lang/String;)V
+#isBindingDisabled(Ljava/lang/String;)Z
+#setStatus(Lorg/springframework/http/HttpStatus;)V
+#getStatus()Lorg/springframework/http/HttpStatus;
@4.3.13.RELEASE
+#setBinding(Ljava/lang/String;Z)V
@5.0.0.RELEASE
-#setBinding(Ljava/lang/String;Z)V
@5.0.1.RELEASE
+#setBinding(Ljava/lang/String;Z)V
@6.0.0
*#setIgnoreDefaultModelOnRedirect(Z)V[deprecated]
+#setStatus(Lorg/springframework/http/HttpStatusCode;)V
+#getStatus()Lorg/springframework/http/HttpStatusCode;
-#setStatus(Lorg/springframework/http/HttpStatus;)V
-#getStatus()Lorg/springframework/http/HttpStatus;

+###org/springframework/web/method/support/AsyncHandlerMethodReturnValueHandler
@4.2.0.RELEASE
+#isAsyncReturnValue(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;)Z

+###org/springframework/web/method/support/UriComponentsContributor
@4.0.0.RELEASE
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#contributeMethodArgument(Lorg/springframework/core/MethodParameter;Ljava/lang/Object;Lorg/springframework/web/util/UriComponentsBuilder;Ljava/util/Map;Lorg/springframework/core/convert/ConversionService;)V

+###org/springframework/web/method/support/HandlerMethodReturnValueHandler
@3.1.0.RELEASE
+#supportsReturnType(Lorg/springframework/core/MethodParameter;)Z
+#handleReturnValue(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/web/method/support/ModelAndViewContainer;Lorg/springframework/web/context/request/NativeWebRequest;)V

+###org/springframework/web/method/annotation/SessionStatusMethodArgumentResolver
@3.1.0.RELEASE
+#<init>()V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/method/support/ModelAndViewContainer;Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/bind/support/WebDataBinderFactory;)Ljava/lang/Object;

+###org/springframework/web/method/annotation/MethodArgumentConversionNotSupportedException
@4.2.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Lorg/springframework/core/MethodParameter;Ljava/lang/Throwable;)V
+#getName()Ljava/lang/String;
+#getParameter()Lorg/springframework/core/MethodParameter;

+###org/springframework/web/method/annotation/SessionAttributesHandler
@3.1.0.RELEASE
+#<init>(Ljava/lang/Class;Lorg/springframework/web/bind/support/SessionAttributeStore;)V
+#hasSessionAttributes()Z
+#isHandlerSessionAttribute(Ljava/lang/String;Ljava/lang/Class;)Z
+#storeAttributes(Lorg/springframework/web/context/request/WebRequest;Ljava/util/Map;)V
+#retrieveAttributes(Lorg/springframework/web/context/request/WebRequest;)Ljava/util/Map;
+#cleanupAttributes(Lorg/springframework/web/context/request/WebRequest;)V

+###org/springframework/web/method/annotation/ExpressionValueMethodArgumentResolver
@3.1.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z

+###org/springframework/web/method/annotation/MapMethodProcessor
@3.1.0.RELEASE
+#<init>()V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/method/support/ModelAndViewContainer;Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/bind/support/WebDataBinderFactory;)Ljava/lang/Object;
+#supportsReturnType(Lorg/springframework/core/MethodParameter;)Z
+#handleReturnValue(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/web/method/support/ModelAndViewContainer;Lorg/springframework/web/context/request/NativeWebRequest;)V

+###org/springframework/web/method/annotation/ModelFactory
@3.1.0.RELEASE
+#<init>(Ljava/util/List;Lorg/springframework/web/bind/support/WebDataBinderFactory;Lorg/springframework/web/method/annotation/SessionAttributesHandler;)V
+#initModel(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/method/support/ModelAndViewContainer;Lorg/springframework/web/method/HandlerMethod;)V
+#getNameForReturnValue(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;)Ljava/lang/String;
+#getNameForParameter(Lorg/springframework/core/MethodParameter;)Ljava/lang/String;
+#updateModel(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/method/support/ModelAndViewContainer;)V

+###org/springframework/web/method/annotation/AbstractCookieValueMethodArgumentResolver
@3.1.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z

+###org/springframework/web/method/annotation/InitBinderDataBinderFactory
@3.1.0.RELEASE
+#<init>(Ljava/util/List;Lorg/springframework/web/bind/support/WebBindingInitializer;)V
+#initBinder(Lorg/springframework/web/bind/WebDataBinder;Lorg/springframework/web/context/request/NativeWebRequest;)V

+###org/springframework/web/method/annotation/MethodArgumentTypeMismatchException
@4.2.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Lorg/springframework/core/MethodParameter;Ljava/lang/Throwable;)V
+#getName()Ljava/lang/String;
+#getParameter()Lorg/springframework/core/MethodParameter;

+###org/springframework/web/method/annotation/AbstractNamedValueMethodArgumentResolver
@3.1.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;)V
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/method/support/ModelAndViewContainer;Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/bind/support/WebDataBinderFactory;)Ljava/lang/Object;
@4.0.1.RELEASE
+#<init>()V

+###org/springframework/web/method/annotation/RequestHeaderMapMethodArgumentResolver
@3.1.0.RELEASE
+#<init>()V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/method/support/ModelAndViewContainer;Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/bind/support/WebDataBinderFactory;)Ljava/lang/Object;

+###org/springframework/web/method/annotation/ExceptionHandlerMethodResolver
@3.1.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#resolveMethod(Ljava/lang/Exception;)Ljava/lang/reflect/Method;
@3.2.0.RELEASE
+#hasExceptionMappings()Z
@3.2.8.RELEASE
+#resolveMethodByExceptionType(Ljava/lang/Class;)Ljava/lang/reflect/Method;
@5.0.0.RELEASE
+#resolveMethodByThrowable(Ljava/lang/Throwable;)Ljava/lang/reflect/Method;

+###org/springframework/web/method/annotation/ModelMethodProcessor
@3.1.0.RELEASE
+#<init>()V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/method/support/ModelAndViewContainer;Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/bind/support/WebDataBinderFactory;)Ljava/lang/Object;
+#supportsReturnType(Lorg/springframework/core/MethodParameter;)Z
+#handleReturnValue(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/web/method/support/ModelAndViewContainer;Lorg/springframework/web/context/request/NativeWebRequest;)V

+###org/springframework/web/method/annotation/RequestHeaderMethodArgumentResolver
@3.1.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z

+###org/springframework/web/method/annotation/AbstractWebArgumentResolverAdapter
@3.1.0.RELEASE
+#<init>(Lorg/springframework/web/bind/support/WebArgumentResolver;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/method/support/ModelAndViewContainer;Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/bind/support/WebDataBinderFactory;)Ljava/lang/Object;

+###org/springframework/web/method/annotation/ModelAttributeMethodProcessor
@3.1.0.RELEASE
+#<init>(Z)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/method/support/ModelAndViewContainer;Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/bind/support/WebDataBinderFactory;)Ljava/lang/Object;
+#supportsReturnType(Lorg/springframework/core/MethodParameter;)Z
+#handleReturnValue(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/web/method/support/ModelAndViewContainer;Lorg/springframework/web/context/request/NativeWebRequest;)V
@5.3.0
+#resolveConstructorArgument(Ljava/lang/String;Ljava/lang/Class;Lorg/springframework/web/context/request/NativeWebRequest;)Ljava/lang/Object;

+###org/springframework/web/method/annotation/RequestParamMethodArgumentResolver
@3.1.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;Z)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
@4.0.0.RELEASE
+#contributeMethodArgument(Lorg/springframework/core/MethodParameter;Ljava/lang/Object;Lorg/springframework/web/util/UriComponentsBuilder;Ljava/util/Map;Lorg/springframework/core/convert/ConversionService;)V
@4.0.1.RELEASE
+#<init>(Z)V

+###org/springframework/web/method/annotation/ErrorsMethodArgumentResolver
@3.1.0.RELEASE
+#<init>()V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/method/support/ModelAndViewContainer;Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/bind/support/WebDataBinderFactory;)Ljava/lang/Object;

+###org/springframework/web/method/annotation/RequestParamMapMethodArgumentResolver
@3.1.0.RELEASE
+#<init>()V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/method/support/ModelAndViewContainer;Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/bind/support/WebDataBinderFactory;)Ljava/lang/Object;

+###org/springframework/web/method/annotation/AbstractNamedValueMethodArgumentResolver$NamedValueInfo
@3.1.0.RELEASE
@4.0.1.RELEASE
+#<init>(Ljava/lang/String;ZLjava/lang/String;)V

+###org/springframework/web/method/ControllerAdviceBean
@3.2.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/beans/factory/BeanFactory;)V
+#<init>(Ljava/lang/Object;)V
+#findAnnotatedBeans(Lorg/springframework/context/ApplicationContext;)Ljava/util/List;
+#getOrder()I
+#getBeanType()Ljava/lang/Class;
+#resolveBean()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@4.0.0.RELEASE
+#isApplicableToBeanType(Ljava/lang/Class;)Z
@5.2.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/beans/factory/BeanFactory;Lorg/springframework/web/bind/annotation/ControllerAdvice;)V

+###org/springframework/web/method/HandlerMethod$HandlerMethodParameter
@4.1.2.RELEASE
+#<init>(Lorg/springframework/web/method/HandlerMethod;I)V
+#getContainingClass()Ljava/lang/Class;
+#getMethodAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
@4.3.0.RELEASE
+#hasMethodAnnotation(Ljava/lang/Class;)Z
+#clone()Lorg/springframework/web/method/HandlerMethod$HandlerMethodParameter;
+#clone()Lorg/springframework/core/annotation/SynthesizingMethodParameter;
+#clone()Lorg/springframework/core/MethodParameter;
+#clone()Ljava/lang/Object;
@5.1.0.RELEASE
+#getParameterAnnotations()[Ljava/lang/annotation/Annotation;
@5.3.0
+#getMethod()Ljava/lang/reflect/Method;

+###org/springframework/web/method/HandlerMethod
@3.1.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Class;)V
+#<init>(Ljava/lang/String;Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/reflect/Method;)V
+#getBean()Ljava/lang/Object;
+#getMethod()Ljava/lang/reflect/Method;
+#getBeanType()Ljava/lang/Class;
+#getMethodParameters()[Lorg/springframework/core/MethodParameter;
+#getReturnType()Lorg/springframework/core/MethodParameter;
+#isVoid()Z
+#getMethodAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#createWithResolvedBean()Lorg/springframework/web/method/HandlerMethod;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.1.3.RELEASE
+#getReturnValueType(Ljava/lang/Object;)Lorg/springframework/core/MethodParameter;
@4.2.0.RELEASE
+#getResolvedFromHandlerMethod()Lorg/springframework/web/method/HandlerMethod;
@4.3.0.RELEASE
+#hasMethodAnnotation(Ljava/lang/Class;)Z
+#getShortLogMessage()Ljava/lang/String;
@5.3.9
+#<init>(Ljava/lang/String;Lorg/springframework/beans/factory/BeanFactory;Lorg/springframework/context/MessageSource;Ljava/lang/reflect/Method;)V

+###org/springframework/web/cors/CorsConfigurationSource
@4.2.0.RELEASE
+#getCorsConfiguration(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/cors/CorsConfiguration;
@6.0.0
+#getCorsConfiguration(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/web/cors/CorsConfiguration;
-#getCorsConfiguration(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/cors/CorsConfiguration;

+###org/springframework/web/cors/CorsProcessor
@4.2.0.RELEASE
+#processRequest(Lorg/springframework/web/cors/CorsConfiguration;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Z
@6.0.0
+#processRequest(Lorg/springframework/web/cors/CorsConfiguration;Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)Z
-#processRequest(Lorg/springframework/web/cors/CorsConfiguration;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Z

+###org/springframework/web/cors/CorsConfiguration
@4.2.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/web/cors/CorsConfiguration;)V
+#combine(Lorg/springframework/web/cors/CorsConfiguration;)Lorg/springframework/web/cors/CorsConfiguration;
+#setAllowedOrigins(Ljava/util/List;)V
+#getAllowedOrigins()Ljava/util/List;
+#addAllowedOrigin(Ljava/lang/String;)V
+#setAllowedMethods(Ljava/util/List;)V
+#getAllowedMethods()Ljava/util/List;
+#addAllowedMethod(Lorg/springframework/http/HttpMethod;)V
+#addAllowedMethod(Ljava/lang/String;)V
+#setAllowedHeaders(Ljava/util/List;)V
+#getAllowedHeaders()Ljava/util/List;
+#addAllowedHeader(Ljava/lang/String;)V
+#setExposedHeaders(Ljava/util/List;)V
+#getExposedHeaders()Ljava/util/List;
+#addExposedHeader(Ljava/lang/String;)V
+#setAllowCredentials(Ljava/lang/Boolean;)V
+#getAllowCredentials()Ljava/lang/Boolean;
+#setMaxAge(Ljava/lang/Long;)V
+#getMaxAge()Ljava/lang/Long;
+#checkOrigin(Ljava/lang/String;)Ljava/lang/String;
+#checkHttpMethod(Lorg/springframework/http/HttpMethod;)Ljava/util/List;
+#checkHeaders(Ljava/util/List;)Ljava/util/List;
@4.3.4.RELEASE
+#applyPermitDefaultValues()Lorg/springframework/web/cors/CorsConfiguration;
@5.2.0.RELEASE
+#setMaxAge(Ljava/time/Duration;)V
@5.3.0
+#setAllowedOriginPatterns(Ljava/util/List;)Lorg/springframework/web/cors/CorsConfiguration;
+#getAllowedOriginPatterns()Ljava/util/List;
+#addAllowedOriginPattern(Ljava/lang/String;)V
+#validateAllowCredentials()V

+###org/springframework/web/cors/CorsUtils
@4.2.0.RELEASE
+#<init>()V
+#isCorsRequest(Ljavax/servlet/http/HttpServletRequest;)Z
+#isPreFlightRequest(Ljavax/servlet/http/HttpServletRequest;)Z
@6.0.0
+#isCorsRequest(Ljakarta/servlet/http/HttpServletRequest;)Z
+#isPreFlightRequest(Ljakarta/servlet/http/HttpServletRequest;)Z
-#isCorsRequest(Ljavax/servlet/http/HttpServletRequest;)Z
-#isPreFlightRequest(Ljavax/servlet/http/HttpServletRequest;)Z

+###org/springframework/web/cors/DefaultCorsProcessor
@4.2.0.RELEASE
+#<init>()V
+#processRequest(Lorg/springframework/web/cors/CorsConfiguration;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Z
@6.0.0
+#processRequest(Lorg/springframework/web/cors/CorsConfiguration;Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)Z
-#processRequest(Lorg/springframework/web/cors/CorsConfiguration;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Z

+###org/springframework/web/cors/reactive/CorsConfigurationSource
@5.0.0.RELEASE
+#getCorsConfiguration(Lorg/springframework/web/server/ServerWebExchange;)Lorg/springframework/web/cors/CorsConfiguration;

+###org/springframework/web/cors/reactive/CorsProcessor
@5.0.0.RELEASE
+#process(Lorg/springframework/web/cors/CorsConfiguration;Lorg/springframework/web/server/ServerWebExchange;)Z

+###org/springframework/web/cors/reactive/CorsWebFilter
@5.0.0.RELEASE
+#<init>(Lorg/springframework/web/cors/reactive/CorsConfigurationSource;)V
+#<init>(Lorg/springframework/web/cors/reactive/CorsConfigurationSource;Lorg/springframework/web/cors/reactive/CorsProcessor;)V
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;

+###org/springframework/web/cors/reactive/CorsUtils
@5.0.0.RELEASE
+#<init>()V
+#isCorsRequest(Lorg/springframework/http/server/reactive/ServerHttpRequest;)Z
+#isPreFlightRequest(Lorg/springframework/http/server/reactive/ServerHttpRequest;)Z
+#isSameOrigin(Lorg/springframework/http/server/reactive/ServerHttpRequest;)Z
@5.2.0.RELEASE
*#isSameOrigin(Lorg/springframework/http/server/reactive/ServerHttpRequest;)Z[deprecated]

+###org/springframework/web/cors/reactive/DefaultCorsProcessor
@5.0.0.RELEASE
+#<init>()V
+#process(Lorg/springframework/web/cors/CorsConfiguration;Lorg/springframework/web/server/ServerWebExchange;)Z

+###org/springframework/web/cors/reactive/UrlBasedCorsConfigurationSource
@5.0.0.RELEASE
+#<init>(Lorg/springframework/web/util/pattern/PathPatternParser;)V
+#setCorsConfigurations(Ljava/util/Map;)V
+#registerCorsConfiguration(Ljava/lang/String;Lorg/springframework/web/cors/CorsConfiguration;)V
+#getCorsConfiguration(Lorg/springframework/web/server/ServerWebExchange;)Lorg/springframework/web/cors/CorsConfiguration;
@5.0.6.RELEASE
+#<init>()V

+###org/springframework/web/cors/UrlBasedCorsConfigurationSource
@4.2.0.RELEASE
+#<init>()V
+#setPathMatcher(Lorg/springframework/util/PathMatcher;)V
+#setAlwaysUseFullPath(Z)V
+#setUrlDecode(Z)V
+#setRemoveSemicolonContent(Z)V
+#setUrlPathHelper(Lorg/springframework/web/util/UrlPathHelper;)V
+#setCorsConfigurations(Ljava/util/Map;)V
+#getCorsConfigurations()Ljava/util/Map;
+#registerCorsConfiguration(Ljava/lang/String;Lorg/springframework/web/cors/CorsConfiguration;)V
+#getCorsConfiguration(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/cors/CorsConfiguration;
@5.2.0.RELEASE
+#setLookupPathAttributeName(Ljava/lang/String;)V
@5.3.0
+#<init>(Lorg/springframework/web/util/pattern/PathPatternParser;)V
*#setAlwaysUseFullPath(Z)V[deprecated]
*#setUrlDecode(Z)V[deprecated]
*#setRemoveSemicolonContent(Z)V[deprecated]
+#setAllowInitLookupPath(Z)V
*#setLookupPathAttributeName(Ljava/lang/String;)V[deprecated]
@6.0.0
+#getCorsConfiguration(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/web/cors/CorsConfiguration;
-#getCorsConfiguration(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/cors/CorsConfiguration;

+###org/springframework/web/WebApplicationInitializer
@3.1.0.RELEASE
+#onStartup(Ljavax/servlet/ServletContext;)V
@6.0.0
+#onStartup(Ljakarta/servlet/ServletContext;)V
-#onStartup(Ljavax/servlet/ServletContext;)V

+###org/springframework/web/filter/RelativeRedirectFilter
@4.3.10.RELEASE
+#<init>()V
+#setRedirectStatus(Lorg/springframework/http/HttpStatus;)V
+#getRedirectStatus()Lorg/springframework/http/HttpStatus;
@6.0.0
+#setRedirectStatus(Lorg/springframework/http/HttpStatusCode;)V
+#getRedirectStatus()Lorg/springframework/http/HttpStatusCode;
-#setRedirectStatus(Lorg/springframework/http/HttpStatus;)V
-#getRedirectStatus()Lorg/springframework/http/HttpStatus;

+###org/springframework/web/filter/DelegatingFilterProxy
@1.2
+#<init>()V
+#setTargetBeanName(Ljava/lang/String;)V
+#setTargetFilterLifecycle(Z)V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#destroy()V
@2.5.4
+#setContextAttribute(Ljava/lang/String;)V
+#getContextAttribute()Ljava/lang/String;
@3.1.0.RELEASE
+#<init>(Ljavax/servlet/Filter;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/springframework/web/context/WebApplicationContext;)V
@6.0.0
+#<init>(Ljakarta/servlet/Filter;)V
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
-#<init>(Ljavax/servlet/Filter;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/springframework/web/filter/ServletContextRequestLoggingFilter
@1.2.5
+#<init>()V

+###org/springframework/web/filter/AbstractRequestLoggingFilter
@1.2.5
+#<init>()V
+#setIncludeQueryString(Z)V
+#setBeforeMessagePrefix(Ljava/lang/String;)V
+#setBeforeMessageSuffix(Ljava/lang/String;)V
+#setAfterMessagePrefix(Ljava/lang/String;)V
+#setAfterMessageSuffix(Ljava/lang/String;)V
@2.5
+#setIncludeClientInfo(Z)V
@3.0.0.RELEASE
+#setIncludePayload(Z)V
+#setMaxPayloadLength(I)V
@4.3.0.RELEASE
+#setIncludeHeaders(Z)V
+#isIncludeHeaders()Z
@4.3.26.RELEASE
-#isIncludeHeaders()Z
@5.0.0.RELEASE
+#isIncludeHeaders()Z
@5.0.7.RELEASE
-#isIncludeHeaders()Z
@5.2.0.RELEASE
+#setHeaderPredicate(Ljava/util/function/Predicate;)V
+#getHeaderPredicate()Ljava/util/function/Predicate;
@5.2.2.RELEASE
-#getHeaderPredicate()Ljava/util/function/Predicate;

+###org/springframework/web/filter/ForwardedHeaderFilter
@4.3.0.RELEASE
+#<init>()V
@4.3.9.RELEASE
+#setRemoveOnly(Z)V
@4.3.10.RELEASE
+#setRelativeRedirects(Z)V

+###org/springframework/web/filter/HiddenHttpMethodFilter
@3.0.0.RELEASE
+#<init>()V
+#setMethodParam(Ljava/lang/String;)V

+###org/springframework/web/filter/CommonsRequestLoggingFilter
@1.2.5
+#<init>()V

+###org/springframework/web/filter/HttpPutFormContentFilter
@3.1.0.RELEASE
+#<init>()V
+#setCharset(Ljava/nio/charset/Charset;)V
@4.3.6.RELEASE
+#setFormConverter(Lorg/springframework/http/converter/FormHttpMessageConverter;)V
+#getFormConverter()Lorg/springframework/http/converter/FormHttpMessageConverter;
@6.0.0
-###org/springframework/web/filter/HttpPutFormContentFilter

+###org/springframework/web/filter/CorsFilter
@4.2.0.RELEASE
+#<init>(Lorg/springframework/web/cors/CorsConfigurationSource;)V
+#setCorsProcessor(Lorg/springframework/web/cors/CorsProcessor;)V

+###org/springframework/web/filter/RequestContextFilter
@2.0-m1
+#<init>()V
@2.5.3
+#setThreadContextInheritable(Z)V

+###org/springframework/web/filter/reactive/ForwardedHeaderFilter
@5.0.0.RELEASE
+#<init>()V
+#setRemoveOnly(Z)V
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;
@5.1.0.RELEASE
-#setRemoveOnly(Z)V
@6.0.0
-###org/springframework/web/filter/reactive/ForwardedHeaderFilter

+###org/springframework/web/filter/reactive/HiddenHttpMethodFilter
@5.0.0.RELEASE
+#<init>()V
+#setMethodParamName(Ljava/lang/String;)V
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;

+###org/springframework/web/filter/ShallowEtagHeaderFilter
@3.0.0.RELEASE
+#<init>()V
@4.2.0.RELEASE
+#disableContentCaching(Ljavax/servlet/ServletRequest;)V
@4.3.0.RELEASE
+#isWriteWeakETag()Z
+#setWriteWeakETag(Z)V
@6.0.0
+#disableContentCaching(Ljakarta/servlet/ServletRequest;)V
-#disableContentCaching(Ljavax/servlet/ServletRequest;)V

+###org/springframework/web/filter/CompositeFilter
@3.1.0.RELEASE
+#<init>()V
+#setFilters(Ljava/util/List;)V
+#destroy()V
+#init(Ljavax/servlet/FilterConfig;)V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
@6.0.0
+#init(Ljakarta/servlet/FilterConfig;)V
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
-#init(Ljavax/servlet/FilterConfig;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/springframework/web/server/ResponseStatusException
@5.0.0.RELEASE
+#<init>(Lorg/springframework/http/HttpStatus;)V
+#<init>(Lorg/springframework/http/HttpStatus;Ljava/lang/String;)V
+#<init>(Lorg/springframework/http/HttpStatus;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getStatus()Lorg/springframework/http/HttpStatus;
+#getReason()Ljava/lang/String;
+#getMessage()Ljava/lang/String;
@5.1.11.RELEASE
+#getHeaders()Ljava/util/Map;
@5.1.13.RELEASE
*#getHeaders()Ljava/util/Map;[deprecated]
+#getResponseHeaders()Lorg/springframework/http/HttpHeaders;
@5.2.0.RELEASE
-#getHeaders()Ljava/util/Map;[deprecated]
-#getResponseHeaders()Lorg/springframework/http/HttpHeaders;
@5.2.1.RELEASE
+#getHeaders()Ljava/util/Map;
@5.2.3.RELEASE
*#getHeaders()Ljava/util/Map;[deprecated]
+#getResponseHeaders()Lorg/springframework/http/HttpHeaders;
@5.3.0
+#<init>(ILjava/lang/String;Ljava/lang/Throwable;)V
+#getRawStatusCode()I
@6.0.0
+#<init>(Lorg/springframework/http/HttpStatusCode;)V
+#<init>(Lorg/springframework/http/HttpStatusCode;Ljava/lang/String;)V
+#<init>(Lorg/springframework/http/HttpStatusCode;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getHeaders()Lorg/springframework/http/HttpHeaders;
*#getResponseHeaders()Lorg/springframework/http/HttpHeaders;[deprecated]
-#<init>(Lorg/springframework/http/HttpStatus;)V
-#<init>(Lorg/springframework/http/HttpStatus;Ljava/lang/String;)V
-#<init>(Lorg/springframework/http/HttpStatus;Ljava/lang/String;Ljava/lang/Throwable;)V
-#getStatus()Lorg/springframework/http/HttpStatus;
-#getRawStatusCode()I
-#getHeaders()Ljava/util/Map;[deprecated]

+###org/springframework/web/server/MethodNotAllowedException
@5.0.0.RELEASE
+#<init>(Lorg/springframework/http/HttpMethod;Ljava/util/Collection;)V
+#<init>(Ljava/lang/String;Ljava/util/Collection;)V
+#getHttpMethod()Ljava/lang/String;
+#getSupportedMethods()Ljava/util/Set;
@5.1.11.RELEASE
+#getHeaders()Ljava/util/Map;
@5.1.13.RELEASE
+#getResponseHeaders()Lorg/springframework/http/HttpHeaders;
@5.2.0.RELEASE
-#getHeaders()Ljava/util/Map;
-#getResponseHeaders()Lorg/springframework/http/HttpHeaders;
@5.2.1.RELEASE
+#getHeaders()Ljava/util/Map;
@5.2.3.RELEASE
+#getResponseHeaders()Lorg/springframework/http/HttpHeaders;
@6.0.0
+#getHeaders()Lorg/springframework/http/HttpHeaders;
*#getResponseHeaders()Lorg/springframework/http/HttpHeaders;[deprecated]
-#getHeaders()Ljava/util/Map;

+###org/springframework/web/server/ServerWebExchange$Builder
@5.0.0.RELEASE
+#request(Ljava/util/function/Consumer;)Lorg/springframework/web/server/ServerWebExchange$Builder;
+#request(Lorg/springframework/http/server/reactive/ServerHttpRequest;)Lorg/springframework/web/server/ServerWebExchange$Builder;
+#response(Lorg/springframework/http/server/reactive/ServerHttpResponse;)Lorg/springframework/web/server/ServerWebExchange$Builder;
+#principal(Lreactor/core/publisher/Mono;)Lorg/springframework/web/server/ServerWebExchange$Builder;
+#build()Lorg/springframework/web/server/ServerWebExchange;

+###org/springframework/web/server/adapter/WebHttpHandlerBuilder
@5.0.0.RELEASE
+#webHandler(Lorg/springframework/web/server/WebHandler;)Lorg/springframework/web/server/adapter/WebHttpHandlerBuilder;
+#applicationContext(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/web/server/adapter/WebHttpHandlerBuilder;
+#filter([Lorg/springframework/web/server/WebFilter;)Lorg/springframework/web/server/adapter/WebHttpHandlerBuilder;
+#filters(Ljava/util/function/Consumer;)Lorg/springframework/web/server/adapter/WebHttpHandlerBuilder;
+#exceptionHandler([Lorg/springframework/web/server/WebExceptionHandler;)Lorg/springframework/web/server/adapter/WebHttpHandlerBuilder;
+#exceptionHandlers(Ljava/util/function/Consumer;)Lorg/springframework/web/server/adapter/WebHttpHandlerBuilder;
+#sessionManager(Lorg/springframework/web/server/session/WebSessionManager;)Lorg/springframework/web/server/adapter/WebHttpHandlerBuilder;
+#codecConfigurer(Lorg/springframework/http/codec/ServerCodecConfigurer;)Lorg/springframework/web/server/adapter/WebHttpHandlerBuilder;
+#localeContextResolver(Lorg/springframework/web/server/i18n/LocaleContextResolver;)Lorg/springframework/web/server/adapter/WebHttpHandlerBuilder;
+#build()Lorg/springframework/http/server/reactive/HttpHandler;
+#clone()Lorg/springframework/web/server/adapter/WebHttpHandlerBuilder;
+#clone()Ljava/lang/Object;
@5.0.9.RELEASE
+#hasSessionManager()Z
+#hasCodecConfigurer()Z
+#hasLocaleContextResolver()Z
@5.1.0.RELEASE
+#forwardedHeaderTransformer(Lorg/springframework/web/server/adapter/ForwardedHeaderTransformer;)Lorg/springframework/web/server/adapter/WebHttpHandlerBuilder;
+#hasForwardedHeaderTransformer()Z
@5.3.0
+#httpHandlerDecorator(Ljava/util/function/Function;)Lorg/springframework/web/server/adapter/WebHttpHandlerBuilder;
+#hasHttpHandlerDecorator()Z

+###org/springframework/web/server/adapter/DefaultServerWebExchange
@5.0.0.RELEASE
+#<init>(Lorg/springframework/http/server/reactive/ServerHttpRequest;Lorg/springframework/http/server/reactive/ServerHttpResponse;Lorg/springframework/web/server/session/WebSessionManager;Lorg/springframework/http/codec/ServerCodecConfigurer;Lorg/springframework/web/server/i18n/LocaleContextResolver;)V
+#getRequest()Lorg/springframework/http/server/reactive/ServerHttpRequest;
+#getResponse()Lorg/springframework/http/server/reactive/ServerHttpResponse;
+#getAttributes()Ljava/util/Map;
+#getSession()Lreactor/core/publisher/Mono;
+#getPrincipal()Lreactor/core/publisher/Mono;
+#getLocaleContext()Lorg/springframework/context/i18n/LocaleContext;
+#getFormData()Lreactor/core/publisher/Mono;
+#getMultipartData()Lreactor/core/publisher/Mono;
+#isNotModified()Z
+#checkNotModified(Ljava/time/Instant;)Z
+#checkNotModified(Ljava/lang/String;)Z
+#checkNotModified(Ljava/lang/String;Ljava/time/Instant;)Z
+#transformUrl(Ljava/lang/String;)Ljava/lang/String;
+#addUrlTransformer(Ljava/util/function/Function;)V
@5.0.3.RELEASE
+#getApplicationContext()Lorg/springframework/context/ApplicationContext;
@5.1.0.RELEASE
+#getLogPrefix()Ljava/lang/String;

+###org/springframework/web/server/adapter/HttpWebHandlerAdapter
@5.0.0.RELEASE
+#<init>(Lorg/springframework/web/server/WebHandler;)V
+#setSessionManager(Lorg/springframework/web/server/session/WebSessionManager;)V
+#getSessionManager()Lorg/springframework/web/server/session/WebSessionManager;
+#setCodecConfigurer(Lorg/springframework/http/codec/ServerCodecConfigurer;)V
+#setLocaleContextResolver(Lorg/springframework/web/server/i18n/LocaleContextResolver;)V
+#getCodecConfigurer()Lorg/springframework/http/codec/ServerCodecConfigurer;
+#getLocaleContextResolver()Lorg/springframework/web/server/i18n/LocaleContextResolver;
+#handle(Lorg/springframework/http/server/reactive/ServerHttpRequest;Lorg/springframework/http/server/reactive/ServerHttpResponse;)Lreactor/core/publisher/Mono;
@5.0.3.RELEASE
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#getApplicationContext()Lorg/springframework/context/ApplicationContext;
@5.1.0.RELEASE
+#setForwardedHeaderTransformer(Lorg/springframework/web/server/adapter/ForwardedHeaderTransformer;)V
+#getForwardedHeaderTransformer()Lorg/springframework/web/server/adapter/ForwardedHeaderTransformer;
+#afterPropertiesSet()V

+###org/springframework/web/server/adapter/AbstractReactiveWebInitializer
@5.0.2.RELEASE
+#<init>()V
+#onStartup(Ljavax/servlet/ServletContext;)V
@6.0.0
+#onStartup(Ljakarta/servlet/ServletContext;)V
-#onStartup(Ljavax/servlet/ServletContext;)V

+###org/springframework/web/server/ServerErrorException
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/springframework/core/MethodParameter;)V
+#<init>(Ljava/lang/String;Lorg/springframework/core/MethodParameter;Ljava/lang/Throwable;)V
+#getMethodParameter()Lorg/springframework/core/MethodParameter;
@5.0.5.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/reflect/Method;Ljava/lang/Throwable;)V
*#<init>(Ljava/lang/String;Lorg/springframework/core/MethodParameter;)V[deprecated]
*#<init>(Ljava/lang/String;)V[deprecated]
+#getHandlerMethod()Ljava/lang/reflect/Method;
@6.0.0
-#<init>(Ljava/lang/String;Lorg/springframework/core/MethodParameter;)V[deprecated]
-#<init>(Ljava/lang/String;)V[deprecated]

+###org/springframework/web/server/i18n/AcceptHeaderLocaleContextResolver
@5.0.0.RELEASE
+#<init>()V
+#setSupportedLocales(Ljava/util/List;)V
+#getSupportedLocales()Ljava/util/List;
+#setDefaultLocale(Ljava/util/Locale;)V
+#getDefaultLocale()Ljava/util/Locale;
+#resolveLocaleContext(Lorg/springframework/web/server/ServerWebExchange;)Lorg/springframework/context/i18n/LocaleContext;
+#setLocaleContext(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/context/i18n/LocaleContext;)V

+###org/springframework/web/server/i18n/FixedLocaleContextResolver
@5.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/Locale;)V
+#<init>(Ljava/util/Locale;Ljava/util/TimeZone;)V
+#resolveLocaleContext(Lorg/springframework/web/server/ServerWebExchange;)Lorg/springframework/context/i18n/LocaleContext;
+#setLocaleContext(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/context/i18n/LocaleContext;)V

+###org/springframework/web/server/i18n/LocaleContextResolver
@5.0.0.RELEASE
+#resolveLocaleContext(Lorg/springframework/web/server/ServerWebExchange;)Lorg/springframework/context/i18n/LocaleContext;
+#setLocaleContext(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/context/i18n/LocaleContext;)V

+###org/springframework/web/server/ServerWebExchange
@5.0.0.RELEASE
+#getRequest()Lorg/springframework/http/server/reactive/ServerHttpRequest;
+#getResponse()Lorg/springframework/http/server/reactive/ServerHttpResponse;
+#getAttributes()Ljava/util/Map;
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#getRequiredAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#getAttributeOrDefault(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#getSession()Lreactor/core/publisher/Mono;
+#getPrincipal()Lreactor/core/publisher/Mono;
+#getFormData()Lreactor/core/publisher/Mono;
+#getMultipartData()Lreactor/core/publisher/Mono;
+#getLocaleContext()Lorg/springframework/context/i18n/LocaleContext;
+#isNotModified()Z
+#checkNotModified(Ljava/time/Instant;)Z
+#checkNotModified(Ljava/lang/String;)Z
+#checkNotModified(Ljava/lang/String;Ljava/time/Instant;)Z
+#transformUrl(Ljava/lang/String;)Ljava/lang/String;
+#addUrlTransformer(Ljava/util/function/Function;)V
+#mutate()Lorg/springframework/web/server/ServerWebExchange$Builder;
@5.0.3.RELEASE
+#getApplicationContext()Lorg/springframework/context/ApplicationContext;
@5.1.0.RELEASE
+#getLogPrefix()Ljava/lang/String;

+###org/springframework/web/server/MediaTypeNotSupportedStatusException
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/util/List;)V
+#getSupportedMediaTypes()Ljava/util/List;
@6.0.0
-###org/springframework/web/server/MediaTypeNotSupportedStatusException

+###org/springframework/web/server/WebExceptionHandler
@5.0.0.RELEASE
+#handle(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;

+###org/springframework/web/server/WebSession
@5.0.0.RELEASE
+#getId()Ljava/lang/String;
+#getAttributes()Ljava/util/Map;
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#getRequiredAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#getAttributeOrDefault(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#start()V
+#isStarted()Z
+#changeSessionId()Lreactor/core/publisher/Mono;
+#invalidate()Lreactor/core/publisher/Mono;
+#save()Lreactor/core/publisher/Mono;
+#isExpired()Z
+#getCreationTime()Ljava/time/Instant;
+#getLastAccessTime()Ljava/time/Instant;
+#setMaxIdleTime(Ljava/time/Duration;)V
+#getMaxIdleTime()Ljava/time/Duration;

+###org/springframework/web/server/WebFilterChain
@5.0.0.RELEASE
+#filter(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/server/ServerWebInputException
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/springframework/core/MethodParameter;)V
+#<init>(Ljava/lang/String;Lorg/springframework/core/MethodParameter;Ljava/lang/Throwable;)V
+#getMethodParameter()Lorg/springframework/core/MethodParameter;

+###org/springframework/web/server/WebFilter
@5.0.0.RELEASE
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;

+###org/springframework/web/server/handler/DefaultWebFilterChain
@5.0.0.RELEASE
+#<init>(Lorg/springframework/web/server/WebHandler;[Lorg/springframework/web/server/WebFilter;)V
+#getFilters()Ljava/util/List;
+#getHandler()Lorg/springframework/web/server/WebHandler;
+#filter(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
@5.1.1.RELEASE
+#<init>(Lorg/springframework/web/server/WebHandler;Ljava/util/List;)V
*#<init>(Lorg/springframework/web/server/WebHandler;[Lorg/springframework/web/server/WebFilter;)V[deprecated]
@6.0.0
-#<init>(Lorg/springframework/web/server/WebHandler;[Lorg/springframework/web/server/WebFilter;)V[deprecated]

+###org/springframework/web/server/handler/FilteringWebHandler
@5.0.0.RELEASE
+#<init>(Lorg/springframework/web/server/WebHandler;Ljava/util/List;)V
+#getFilters()Ljava/util/List;
+#handle(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/server/handler/ExceptionHandlingWebHandler
@5.0.0.RELEASE
+#<init>(Lorg/springframework/web/server/WebHandler;Ljava/util/List;)V
+#getExceptionHandlers()Ljava/util/List;
+#handle(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/server/handler/ResponseStatusExceptionHandler
@5.0.0.RELEASE
+#<init>()V
+#handle(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
@5.1.0.RELEASE
+#setWarnLogCategory(Ljava/lang/String;)V

+###org/springframework/web/server/handler/WebHandlerDecorator
@5.0.0.RELEASE
+#<init>(Lorg/springframework/web/server/WebHandler;)V
+#getDelegate()Lorg/springframework/web/server/WebHandler;
+#handle(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#toString()Ljava/lang/String;

+###org/springframework/web/server/UnsupportedMediaTypeStatusException
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/http/MediaType;Ljava/util/List;)V
+#getContentType()Lorg/springframework/http/MediaType;
+#getSupportedMediaTypes()Ljava/util/List;
@5.1.0.RELEASE
+#<init>(Lorg/springframework/http/MediaType;Ljava/util/List;Lorg/springframework/core/ResolvableType;)V
+#getBodyType()Lorg/springframework/core/ResolvableType;
@5.3.6
+#<init>(Lorg/springframework/http/MediaType;Ljava/util/List;Lorg/springframework/http/HttpMethod;)V
+#<init>(Lorg/springframework/http/MediaType;Ljava/util/List;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/HttpMethod;)V
+#getResponseHeaders()Lorg/springframework/http/HttpHeaders;
@6.0.0
+#getHeaders()Lorg/springframework/http/HttpHeaders;
*#getResponseHeaders()Lorg/springframework/http/HttpHeaders;[deprecated]
@6.0.5
+#<init>(Ljava/lang/String;Ljava/util/List;)V

+###org/springframework/web/server/ServerWebExchangeDecorator
@5.0.0.RELEASE
+#getDelegate()Lorg/springframework/web/server/ServerWebExchange;
+#getRequest()Lorg/springframework/http/server/reactive/ServerHttpRequest;
+#getResponse()Lorg/springframework/http/server/reactive/ServerHttpResponse;
+#getAttributes()Ljava/util/Map;
+#getSession()Lreactor/core/publisher/Mono;
+#getPrincipal()Lreactor/core/publisher/Mono;
+#getLocaleContext()Lorg/springframework/context/i18n/LocaleContext;
+#getFormData()Lreactor/core/publisher/Mono;
+#getMultipartData()Lreactor/core/publisher/Mono;
+#isNotModified()Z
+#checkNotModified(Ljava/time/Instant;)Z
+#checkNotModified(Ljava/lang/String;)Z
+#checkNotModified(Ljava/lang/String;Ljava/time/Instant;)Z
+#transformUrl(Ljava/lang/String;)Ljava/lang/String;
+#addUrlTransformer(Ljava/util/function/Function;)V
+#toString()Ljava/lang/String;
@5.0.3.RELEASE
+#getApplicationContext()Lorg/springframework/context/ApplicationContext;
@5.1.0.RELEASE
+#getLogPrefix()Ljava/lang/String;

+###org/springframework/web/server/WebHandler
@5.0.0.RELEASE
+#handle(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/server/NotAcceptableStatusException
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/util/List;)V
+#getSupportedMediaTypes()Ljava/util/List;
@5.1.11.RELEASE
+#getHeaders()Ljava/util/Map;
@5.1.13.RELEASE
+#getResponseHeaders()Lorg/springframework/http/HttpHeaders;
@5.2.0.RELEASE
-#getHeaders()Ljava/util/Map;
-#getResponseHeaders()Lorg/springframework/http/HttpHeaders;
@5.2.1.RELEASE
+#getHeaders()Ljava/util/Map;
@5.2.3.RELEASE
+#getResponseHeaders()Lorg/springframework/http/HttpHeaders;
@6.0.0
+#getHeaders()Lorg/springframework/http/HttpHeaders;
*#getResponseHeaders()Lorg/springframework/http/HttpHeaders;[deprecated]
-#getHeaders()Ljava/util/Map;

+###org/springframework/web/server/session/WebSessionManager
@5.0.0.RELEASE
+#getSession(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/server/session/CookieWebSessionIdResolver
@5.0.0.RELEASE
+#<init>()V
+#setCookieName(Ljava/lang/String;)V
+#getCookieName()Ljava/lang/String;
+#setCookieMaxAge(Ljava/time/Duration;)V
+#getCookieMaxAge()Ljava/time/Duration;
+#resolveSessionIds(Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/List;
+#setSessionId(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/String;)V
+#expireSession(Lorg/springframework/web/server/ServerWebExchange;)V
@5.1.0.RELEASE
+#addCookieInitializer(Ljava/util/function/Consumer;)V

+###org/springframework/web/server/session/WebSessionIdResolver
@5.0.0.RELEASE
+#resolveSessionIds(Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/List;
+#setSessionId(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/String;)V
+#expireSession(Lorg/springframework/web/server/ServerWebExchange;)V

+###org/springframework/web/server/session/DefaultWebSessionManager
@5.0.0.RELEASE
+#<init>()V
+#setSessionIdResolver(Lorg/springframework/web/server/session/WebSessionIdResolver;)V
+#getSessionIdResolver()Lorg/springframework/web/server/session/WebSessionIdResolver;
+#setSessionStore(Lorg/springframework/web/server/session/WebSessionStore;)V
+#getSessionStore()Lorg/springframework/web/server/session/WebSessionStore;
+#getSession(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/server/session/WebSessionStore
@5.0.0.RELEASE
+#createWebSession()Lreactor/core/publisher/Mono;
+#retrieveSession(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#removeSession(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#updateLastAccessTime(Lorg/springframework/web/server/WebSession;)Lreactor/core/publisher/Mono;

+###org/springframework/web/server/session/InMemoryWebSessionStore
@5.0.0.RELEASE
+#<init>()V
+#setClock(Ljava/time/Clock;)V
+#getClock()Ljava/time/Clock;
+#createWebSession()Lreactor/core/publisher/Mono;
+#retrieveSession(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#removeSession(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#updateLastAccessTime(Lorg/springframework/web/server/WebSession;)Lreactor/core/publisher/Mono;
@5.0.8.RELEASE
+#setMaxSessions(I)V
+#getMaxSessions()I
+#getSessions()Ljava/util/Map;
+#removeExpiredSessions()V

+###org/springframework/web/server/session/HeaderWebSessionIdResolver
@5.0.0.RELEASE
+#<init>()V
+#setHeaderName(Ljava/lang/String;)V
+#getHeaderName()Ljava/lang/String;
+#resolveSessionIds(Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/List;
+#setSessionId(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/String;)V
+#expireSession(Lorg/springframework/web/server/ServerWebExchange;)V

+###org/springframework/web/SpringServletContainerInitializer
@3.1.0.RELEASE
+#<init>()V
+#onStartup(Ljava/util/Set;Ljavax/servlet/ServletContext;)V
@6.0.0
+#onStartup(Ljava/util/Set;Ljakarta/servlet/ServletContext;)V
-#onStartup(Ljava/util/Set;Ljavax/servlet/ServletContext;)V

+###org/springframework/web/util/NestedServletException
@1.2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#getCause()Ljava/lang/Throwable;
+#getMessage()Ljava/lang/String;
+#printStackTrace(Ljava/io/PrintStream;)V
+#printStackTrace(Ljava/io/PrintWriter;)V
@1.2.8
-#getCause()Ljava/lang/Throwable;
@2.0-m1
+#getCause()Ljava/lang/Throwable;
@2.0-m5
-#getCause()Ljava/lang/Throwable;
@2.5
-#printStackTrace(Ljava/io/PrintStream;)V
-#printStackTrace(Ljava/io/PrintWriter;)V
@6.0.0
-#getMessage()Ljava/lang/String;

+###org/springframework/web/util/HttpSessionMutexListener
@1.2.7
+#<init>()V
+#sessionCreated(Ljavax/servlet/http/HttpSessionEvent;)V
+#sessionDestroyed(Ljavax/servlet/http/HttpSessionEvent;)V
@2.0-m1
-###org/springframework/web/util/HttpSessionMutexListener

+###org/springframework/web/util/DefaultUriBuilderFactory$EncodingMode
@5.0.0.RELEASE
+#values()[Lorg/springframework/web/util/DefaultUriBuilderFactory$EncodingMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/web/util/DefaultUriBuilderFactory$EncodingMode;

+###org/springframework/web/util/ServletContextPropertyUtils
@3.2.2.RELEASE
+#<init>()V
+#resolvePlaceholders(Ljava/lang/String;Ljavax/servlet/ServletContext;)Ljava/lang/String;
+#resolvePlaceholders(Ljava/lang/String;Ljavax/servlet/ServletContext;Z)Ljava/lang/String;
@6.0.0
+#resolvePlaceholders(Ljava/lang/String;Ljakarta/servlet/ServletContext;)Ljava/lang/String;
+#resolvePlaceholders(Ljava/lang/String;Ljakarta/servlet/ServletContext;Z)Ljava/lang/String;
-#resolvePlaceholders(Ljava/lang/String;Ljavax/servlet/ServletContext;)Ljava/lang/String;
-#resolvePlaceholders(Ljava/lang/String;Ljavax/servlet/ServletContext;Z)Ljava/lang/String;

+###org/springframework/web/util/UriTemplate
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#getVariableNames()Ljava/util/List;
+#expand(Ljava/util/Map;)Ljava/net/URI;
+#expand([Ljava/lang/Object;)Ljava/net/URI;
+#matches(Ljava/lang/String;)Z
+#match(Ljava/lang/String;)Ljava/util/Map;
+#toString()Ljava/lang/String;

+###org/springframework/web/util/DefaultUriBuilderFactory
@5.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/web/util/UriComponentsBuilder;)V
+#setDefaultUriVariables(Ljava/util/Map;)V
+#getDefaultUriVariables()Ljava/util/Map;
+#setEncodingMode(Lorg/springframework/web/util/DefaultUriBuilderFactory$EncodingMode;)V
+#getEncodingMode()Lorg/springframework/web/util/DefaultUriBuilderFactory$EncodingMode;
+#setParsePath(Z)V
+#shouldParsePath()Z
+#expand(Ljava/lang/String;Ljava/util/Map;)Ljava/net/URI;
+#expand(Ljava/lang/String;[Ljava/lang/Object;)Ljava/net/URI;
+#uriString(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
+#builder()Lorg/springframework/web/util/UriBuilder;

+###org/springframework/web/util/DefaultUriTemplateHandler
@4.2.0.RELEASE
+#<init>()V
+#setBaseUrl(Ljava/lang/String;)V
+#getBaseUrl()Ljava/lang/String;
+#setParsePath(Z)V
+#shouldParsePath()Z
+#expand(Ljava/lang/String;Ljava/util/Map;)Ljava/net/URI;
+#expand(Ljava/lang/String;[Ljava/lang/Object;)Ljava/net/URI;
@4.3.0.RELEASE
+#setStrictEncoding(Z)V
+#isStrictEncoding()Z
-#setBaseUrl(Ljava/lang/String;)V
-#getBaseUrl()Ljava/lang/String;
-#expand(Ljava/lang/String;Ljava/util/Map;)Ljava/net/URI;
-#expand(Ljava/lang/String;[Ljava/lang/Object;)Ljava/net/URI;
@6.0.0
-###org/springframework/web/util/DefaultUriTemplateHandler

+###org/springframework/web/util/UriBuilder
@5.0.0.RELEASE
+#scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
+#userInfo(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
+#host(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
+#port(I)Lorg/springframework/web/util/UriBuilder;
+#port(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
+#path(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
+#replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
+#pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
+#query(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
+#replaceQuery(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
+#queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriBuilder;
+#queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriBuilder;
+#replaceQueryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriBuilder;
+#replaceQueryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriBuilder;
+#fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
+#build([Ljava/lang/Object;)Ljava/net/URI;
+#build(Ljava/util/Map;)Ljava/net/URI;
@5.2.0.RELEASE
+#queryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriBuilder;
+#replaceQueryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriBuilder;
@5.3.0
+#queryParamIfPresent(Ljava/lang/String;Ljava/util/Optional;)Lorg/springframework/web/util/UriBuilder;

+###org/springframework/web/util/ContentCachingResponseWrapper
@4.1.3.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletResponse;)V
+#setStatus(I)V
+#setStatus(ILjava/lang/String;)V
+#sendError(I)V
+#sendError(ILjava/lang/String;)V
+#sendRedirect(Ljava/lang/String;)V
+#getOutputStream()Ljavax/servlet/ServletOutputStream;
+#getWriter()Ljava/io/PrintWriter;
+#setContentLength(I)V
+#setContentLengthLong(J)V
+#setBufferSize(I)V
+#resetBuffer()V
+#reset()V
+#getStatusCode()I
+#getContentAsByteArray()[B
@4.2.0.RELEASE
+#getContentInputStream()Ljava/io/InputStream;
+#getContentSize()I
+#copyBodyToResponse()V
@4.2.4.RELEASE
+#flushBuffer()V
@5.2.0.RELEASE
*#getStatusCode()I[deprecated]
-#setStatus(I)V
-#setStatus(ILjava/lang/String;)V
@6.0.0
+#<init>(Ljakarta/servlet/http/HttpServletResponse;)V
+#getOutputStream()Ljakarta/servlet/ServletOutputStream;
-#<init>(Ljavax/servlet/http/HttpServletResponse;)V
-#getOutputStream()Ljavax/servlet/ServletOutputStream;
-#getStatusCode()I[deprecated]

+###org/springframework/web/util/ContentCachingRequestWrapper
@4.1.3.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletRequest;)V
+#getInputStream()Ljavax/servlet/ServletInputStream;
+#getCharacterEncoding()Ljava/lang/String;
+#getReader()Ljava/io/BufferedReader;
+#getContentAsByteArray()[B
@4.1.6.RELEASE
+#getParameter(Ljava/lang/String;)Ljava/lang/String;
+#getParameterMap()Ljava/util/Map;
+#getParameterNames()Ljava/util/Enumeration;
+#getParameterValues(Ljava/lang/String;)[Ljava/lang/String;
@4.3.6.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletRequest;I)V
@6.0.0
+#<init>(Ljakarta/servlet/http/HttpServletRequest;)V
+#<init>(Ljakarta/servlet/http/HttpServletRequest;I)V
+#getInputStream()Ljakarta/servlet/ServletInputStream;
-#<init>(Ljavax/servlet/http/HttpServletRequest;)V
-#<init>(Ljavax/servlet/http/HttpServletRequest;I)V
-#getInputStream()Ljavax/servlet/ServletInputStream;

+###org/springframework/web/util/UriComponentsBuilder
@3.1.0.RELEASE
+#newInstance()Lorg/springframework/web/util/UriComponentsBuilder;
+#fromPath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
+#fromUri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
+#fromUriString(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
+#fromHttpUrl(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
+#build()Lorg/springframework/web/util/UriComponents;
+#build(Z)Lorg/springframework/web/util/UriComponents;
+#buildAndExpand(Ljava/util/Map;)Lorg/springframework/web/util/UriComponents;
+#buildAndExpand([Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
+#uri(Ljava/net/URI;)Lorg/springframework/web/util/UriComponentsBuilder;
+#scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
+#userInfo(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
+#host(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
+#port(I)Lorg/springframework/web/util/UriComponentsBuilder;
+#path(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
+#replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
+#pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
+#query(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
+#replaceQuery(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
+#queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
+#replaceQueryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriComponentsBuilder;
+#fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
@3.1.3.RELEASE
+#schemeSpecificPart(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
@4.0.0.RELEASE
+#uriComponents(Lorg/springframework/web/util/UriComponents;)Lorg/springframework/web/util/UriComponentsBuilder;
+#queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriComponentsBuilder;
@4.1.0.RELEASE
+#toUriString()Ljava/lang/String;
+#port(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
@4.1.5.RELEASE
+#fromHttpRequest(Lorg/springframework/http/HttpRequest;)Lorg/springframework/web/util/UriComponentsBuilder;
@4.1.7.RELEASE
+#fromOriginHeader(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
@4.2.0.RELEASE
+#replaceQueryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriComponentsBuilder;
+#clone()Ljava/lang/Object;
@4.2.7.RELEASE
+#cloneBuilder()Lorg/springframework/web/util/UriComponentsBuilder;
@5.0.0.RELEASE
+#build([Ljava/lang/Object;)Ljava/net/URI;
+#build(Ljava/util/Map;)Ljava/net/URI;
+#fragment(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
+#replaceQueryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriBuilder;
+#replaceQueryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriBuilder;
+#queryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/util/UriBuilder;
+#queryParam(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/util/UriBuilder;
+#replaceQuery(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
+#query(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
+#pathSegment([Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
+#replacePath(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
+#path(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
+#port(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
+#port(I)Lorg/springframework/web/util/UriBuilder;
+#host(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
+#userInfo(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
+#scheme(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
@5.0.8.RELEASE
+#encode()Lorg/springframework/web/util/UriComponentsBuilder;
+#encode(Ljava/nio/charset/Charset;)Lorg/springframework/web/util/UriComponentsBuilder;
+#uriVariables(Ljava/util/Map;)Lorg/springframework/web/util/UriComponentsBuilder;
@5.2.0.RELEASE
+#queryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriComponentsBuilder;
+#replaceQueryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriComponentsBuilder;
+#replaceQueryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriBuilder;
+#queryParam(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/web/util/UriBuilder;
@5.3.0
+#parseForwardedFor(Lorg/springframework/http/HttpRequest;Ljava/net/InetSocketAddress;)Ljava/net/InetSocketAddress;
+#queryParamIfPresent(Ljava/lang/String;Ljava/util/Optional;)Lorg/springframework/web/util/UriComponentsBuilder;
+#queryParamIfPresent(Ljava/lang/String;Ljava/util/Optional;)Lorg/springframework/web/util/UriBuilder;

+###org/springframework/web/util/UriComponents$UriTemplateVariables
@4.0.0.RELEASE
+#getValue(Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/web/util/UriBuilderFactory
@5.0.0.RELEASE
+#uriString(Ljava/lang/String;)Lorg/springframework/web/util/UriBuilder;
+#builder()Lorg/springframework/web/util/UriBuilder;

+###org/springframework/web/util/UriComponents
@3.1.0.RELEASE
+#getScheme()Ljava/lang/String;
+#getUserInfo()Ljava/lang/String;
+#getHost()Ljava/lang/String;
+#getPort()I
+#getPath()Ljava/lang/String;
+#getPathSegments()Ljava/util/List;
+#getQuery()Ljava/lang/String;
+#getQueryParams()Lorg/springframework/util/MultiValueMap;
+#getFragment()Ljava/lang/String;
+#encode()Lorg/springframework/web/util/UriComponents;
+#encode(Ljava/lang/String;)Lorg/springframework/web/util/UriComponents;
+#expand(Ljava/util/Map;)Lorg/springframework/web/util/UriComponents;
+#expand([Ljava/lang/Object;)Lorg/springframework/web/util/UriComponents;
+#toUriString()Ljava/lang/String;
+#toUri()Ljava/net/URI;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.1.1.RELEASE
+#normalize()Lorg/springframework/web/util/UriComponents;
@3.1.3.RELEASE
+#getSchemeSpecificPart()Ljava/lang/String;
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@4.0.0.RELEASE
+#expand(Lorg/springframework/web/util/UriComponents$UriTemplateVariables;)Lorg/springframework/web/util/UriComponents;
@5.0.0.RELEASE
+#encode(Ljava/nio/charset/Charset;)Lorg/springframework/web/util/UriComponents;
-#encode(Ljava/lang/String;)Lorg/springframework/web/util/UriComponents;

+###org/springframework/web/util/UriUtils
@3.0.0.RELEASE
+#<init>()V
+#encodeUri(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#encodeScheme(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#encodeUserInfo(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#encodeHost(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#encodePort(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#encodePath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#encodePathSegment(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#encodeQuery(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#encodeQueryParam(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#encodeFragment(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#decode(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@3.0.2.RELEASE
+#encodeHttpUrl(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#encodeUriComponents(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@3.1.0.RELEASE
+#encodeAuthority(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@3.1.3.RELEASE
*#encodeUri(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;[deprecated]
*#encodeHttpUrl(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;[deprecated]
*#encodeUriComponents(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;[deprecated]
@4.2.0.RELEASE
+#encode(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
-#encodeUri(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;[deprecated]
-#encodeHttpUrl(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;[deprecated]
-#encodeUriComponents(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;[deprecated]
@4.3.2.RELEASE
+#extractFileExtension(Ljava/lang/String;)Ljava/lang/String;
@5.0.0.RELEASE
+#encodeScheme(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
+#encodeAuthority(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
+#encodeUserInfo(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
+#encodeHost(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
+#encodePort(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
+#encodePath(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
+#encodePathSegment(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
+#encodeQuery(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
+#encodeQueryParam(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
+#encodeFragment(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
+#encode(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
+#decode(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
@5.0.2.RELEASE
+#encodeUriVariables(Ljava/util/Map;)Ljava/util/Map;
+#encodeUriVariables([Ljava/lang/Object;)[Ljava/lang/Object;
@5.2.3.RELEASE
+#encodeQueryParams(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/util/MultiValueMap;

+###org/springframework/web/util/AbstractUriTemplateHandler
@4.3.0.RELEASE
+#<init>()V
+#setBaseUrl(Ljava/lang/String;)V
+#getBaseUrl()Ljava/lang/String;
+#setDefaultUriVariables(Ljava/util/Map;)V
+#getDefaultUriVariables()Ljava/util/Map;
+#expand(Ljava/lang/String;Ljava/util/Map;)Ljava/net/URI;
+#expand(Ljava/lang/String;[Ljava/lang/Object;)Ljava/net/URI;
@6.0.0
-###org/springframework/web/util/AbstractUriTemplateHandler

+###org/springframework/web/util/UriTemplateHandler
@4.2.0.RELEASE
+#expand(Ljava/lang/String;Ljava/util/Map;)Ljava/net/URI;
+#expand(Ljava/lang/String;[Ljava/lang/Object;)Ljava/net/URI;

+###org/springframework/web/util/pattern/PathPattern$PathRemainingMatchInfo
@5.0.0.RELEASE
+#getPathRemaining()Lorg/springframework/http/server/PathContainer;
+#getUriVariables()Ljava/util/Map;
+#getMatrixVariables()Ljava/util/Map;
@5.3.0
+#getPathMatched()Lorg/springframework/http/server/PathContainer;

+###org/springframework/web/util/pattern/PathPattern
@5.0.0.RELEASE
+#getPatternString()Ljava/lang/String;
+#matches(Lorg/springframework/http/server/PathContainer;)Z
+#matchAndExtract(Lorg/springframework/http/server/PathContainer;)Lorg/springframework/web/util/pattern/PathPattern$PathMatchInfo;
+#matchStartOfPath(Lorg/springframework/http/server/PathContainer;)Lorg/springframework/web/util/pattern/PathPattern$PathRemainingMatchInfo;
+#extractPathWithinPattern(Lorg/springframework/http/server/PathContainer;)Lorg/springframework/http/server/PathContainer;
+#compareTo(Lorg/springframework/web/util/pattern/PathPattern;)I
+#combine(Lorg/springframework/web/util/pattern/PathPattern;)Lorg/springframework/web/util/pattern/PathPattern;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@5.2.0.RELEASE
+#hasPatternSyntax()Z

+###org/springframework/web/util/pattern/PatternParseException$PatternMessage
@5.0.0.RELEASE
+#values()[Lorg/springframework/web/util/pattern/PatternParseException$PatternMessage;
+#valueOf(Ljava/lang/String;)Lorg/springframework/web/util/pattern/PatternParseException$PatternMessage;
+#formatMessage([Ljava/lang/Object;)Ljava/lang/String;

+###org/springframework/web/util/pattern/PathPatternParser
@5.0.0.RELEASE
+#<init>()V
+#setMatchOptionalTrailingSeparator(Z)V
+#isMatchOptionalTrailingSeparator()Z
+#setCaseSensitive(Z)V
+#isCaseSensitive()Z
+#parse(Ljava/lang/String;)Lorg/springframework/web/util/pattern/PathPattern;
@5.2.0.RELEASE
+#setPathOptions(Lorg/springframework/http/server/PathContainer$Options;)V
+#getPathOptions()Lorg/springframework/http/server/PathContainer$Options;
@6.0.0
*#setMatchOptionalTrailingSeparator(Z)V[deprecated]
*#isMatchOptionalTrailingSeparator()Z[deprecated]

+###org/springframework/web/util/pattern/PathPattern$PathMatchInfo
@5.0.0.RELEASE
+#getUriVariables()Ljava/util/Map;
+#getMatrixVariables()Ljava/util/Map;
+#toString()Ljava/lang/String;

+###org/springframework/web/util/pattern/PatternParseException
@5.0.0.RELEASE
+#getMessage()Ljava/lang/String;
+#toDetailedString()Ljava/lang/String;
+#getPosition()I
+#getMessageType()Lorg/springframework/web/util/pattern/PatternParseException$PatternMessage;
+#getInserts()[Ljava/lang/Object;

+###org/springframework/web/util/CookieGenerator
@1.1.4
+#<init>()V
+#setCookieName(Ljava/lang/String;)V
+#getCookieName()Ljava/lang/String;
+#setCookieDomain(Ljava/lang/String;)V
+#getCookieDomain()Ljava/lang/String;
+#setCookiePath(Ljava/lang/String;)V
+#getCookiePath()Ljava/lang/String;
+#setCookieMaxAge(I)V
+#getCookieMaxAge()I
+#addCookie(Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;)V
+#removeCookie(Ljavax/servlet/http/HttpServletResponse;)V
@1.2.9
+#setCookieSecure(Z)V
+#isCookieSecure()Z
@2.0-m1
-#setCookieSecure(Z)V
-#isCookieSecure()Z
@2.0-m3
+#setCookieSecure(Z)V
+#isCookieSecure()Z
@3.0.0.RELEASE
+#setCookieMaxAge(Ljava/lang/Integer;)V
+#getCookieMaxAge()Ljava/lang/Integer;
-#setCookieMaxAge(I)V
-#getCookieMaxAge()I
@3.1.3.RELEASE
+#setCookieHttpOnly(Z)V
+#isCookieHttpOnly()Z
@6.0.0
+#addCookie(Ljakarta/servlet/http/HttpServletResponse;Ljava/lang/String;)V
+#removeCookie(Ljakarta/servlet/http/HttpServletResponse;)V
-#addCookie(Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;)V
-#removeCookie(Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/web/client/RestOperationsExtensionsKt$exchange$4
@5.0.0.RELEASE
+#<init>()V

+###org/springframework/web/client/RestOperationsExtensionsKt
@5.0.0.RELEASE
@5.2.0.RELEASE
+#getForObject(Lorg/springframework/web/client/RestOperations;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#getForObject(Lorg/springframework/web/client/RestOperations;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;
+#getForObject(Lorg/springframework/web/client/RestOperations;Ljava/net/URI;)Ljava/lang/Object;
+#getForEntity(Lorg/springframework/web/client/RestOperations;Ljava/net/URI;)Lorg/springframework/http/ResponseEntity;
+#getForEntity(Lorg/springframework/web/client/RestOperations;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#getForEntity(Lorg/springframework/web/client/RestOperations;Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;
+#patchForObject(Lorg/springframework/web/client/RestOperations;Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#patchForObject$default(Lorg/springframework/web/client/RestOperations;Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;
+#patchForObject(Lorg/springframework/web/client/RestOperations;Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Object;
+#patchForObject$default(Lorg/springframework/web/client/RestOperations;Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;ILjava/lang/Object;)Ljava/lang/Object;
+#patchForObject(Lorg/springframework/web/client/RestOperations;Ljava/net/URI;Ljava/lang/Object;)Ljava/lang/Object;
+#patchForObject$default(Lorg/springframework/web/client/RestOperations;Ljava/net/URI;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;
+#postForObject(Lorg/springframework/web/client/RestOperations;Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#postForObject$default(Lorg/springframework/web/client/RestOperations;Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;
+#postForObject(Lorg/springframework/web/client/RestOperations;Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Object;
+#postForObject$default(Lorg/springframework/web/client/RestOperations;Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;ILjava/lang/Object;)Ljava/lang/Object;
+#postForObject(Lorg/springframework/web/client/RestOperations;Ljava/net/URI;Ljava/lang/Object;)Ljava/lang/Object;
+#postForObject$default(Lorg/springframework/web/client/RestOperations;Ljava/net/URI;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;
+#postForEntity(Lorg/springframework/web/client/RestOperations;Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#postForEntity$default(Lorg/springframework/web/client/RestOperations;Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;ILjava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#postForEntity(Lorg/springframework/web/client/RestOperations;Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;
+#postForEntity$default(Lorg/springframework/web/client/RestOperations;Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;ILjava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#postForEntity(Lorg/springframework/web/client/RestOperations;Ljava/net/URI;Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#postForEntity$default(Lorg/springframework/web/client/RestOperations;Ljava/net/URI;Ljava/lang/Object;ILjava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#exchange(Lorg/springframework/web/client/RestOperations;Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;[Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#exchange$default(Lorg/springframework/web/client/RestOperations;Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;[Ljava/lang/Object;ILjava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#exchange(Lorg/springframework/web/client/RestOperations;Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;
+#exchange$default(Lorg/springframework/web/client/RestOperations;Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Ljava/util/Map;ILjava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#exchange(Lorg/springframework/web/client/RestOperations;Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;)Lorg/springframework/http/ResponseEntity;
+#exchange$default(Lorg/springframework/web/client/RestOperations;Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;ILjava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#exchange(Lorg/springframework/web/client/RestOperations;Lorg/springframework/http/RequestEntity;)Lorg/springframework/http/ResponseEntity;

+###org/springframework/web/client/RestOperationsExtensionsKt$exchange$1
@5.0.0.RELEASE
+#<init>()V

+###org/springframework/web/client/RestOperationsExtensionsKt$exchange$2
@5.0.0.RELEASE
+#<init>()V

+###org/springframework/web/client/RestOperationsExtensionsKt$exchange$3
@5.0.0.RELEASE
+#<init>()V

+###org/springframework/http/client/reactive/ReactorClientHttpResponse
@5.0.0.RELEASE
+#<init>(Lreactor/ipc/netty/http/client/HttpClientResponse;)V
+#getBody()Lreactor/core/publisher/Flux;
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#getStatusCode()Lorg/springframework/http/HttpStatus;
+#getCookies()Lorg/springframework/util/MultiValueMap;
+#toString()Ljava/lang/String;
@5.0.1.RELEASE
-###org/springframework/http/client/reactive/ReactorClientHttpResponse

+###org/springframework/http/client/reactive/ReactorClientHttpRequest
@5.0.0.RELEASE
+#<init>(Lorg/springframework/http/HttpMethod;Ljava/net/URI;Lreactor/ipc/netty/http/client/HttpClientRequest;)V
+#bufferFactory()Lorg/springframework/core/io/buffer/DataBufferFactory;
+#getMethod()Lorg/springframework/http/HttpMethod;
+#getURI()Ljava/net/URI;
+#writeWith(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#writeAndFlushWith(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#writeWith(Ljava/io/File;JJ)Lreactor/core/publisher/Mono;
+#setComplete()Lreactor/core/publisher/Mono;
@5.0.1.RELEASE
-###org/springframework/http/client/reactive/ReactorClientHttpRequest

+###org/springframework/http/codec/AbstractCodecConfigurer$DefaultCustomCodecs
@5.0.0.RELEASE
+#decoder(Lorg/springframework/core/codec/Decoder;)V
+#encoder(Lorg/springframework/core/codec/Encoder;)V
+#reader(Lorg/springframework/http/codec/HttpMessageReader;)V
+#writer(Lorg/springframework/http/codec/HttpMessageWriter;)V
+#getTypedReaders()Ljava/util/List;
+#getTypedWriters()Ljava/util/List;
+#getObjectReaders()Ljava/util/List;
+#getObjectWriters()Ljava/util/List;
@5.0.1.RELEASE
-###org/springframework/http/codec/AbstractCodecConfigurer$DefaultCustomCodecs

+###org/springframework/http/codec/AbstractCodecConfigurer$AbstractDefaultCodecs
@5.0.0.RELEASE
+#setRegisterDefaults(Z)V
+#shouldRegisterDefaults()Z
+#setCustomCodecs(Lorg/springframework/http/codec/AbstractCodecConfigurer$DefaultCustomCodecs;)V
+#getCustomCodecs()Lorg/springframework/http/codec/AbstractCodecConfigurer$DefaultCustomCodecs;
+#jackson2JsonDecoder(Lorg/springframework/http/codec/json/Jackson2JsonDecoder;)V
+#jackson2JsonEncoder(Lorg/springframework/http/codec/json/Jackson2JsonEncoder;)V
+#getTypedReaders()Ljava/util/List;
+#getObjectReaders()Ljava/util/List;
+#getCatchAllReaders()Ljava/util/List;
+#getTypedWriters()Ljava/util/List;
+#getObjectWriters()Ljava/util/List;
+#getCatchAllWriters()Ljava/util/List;
@5.0.1.RELEASE
-###org/springframework/http/codec/AbstractCodecConfigurer$AbstractDefaultCodecs

+###org/springframework/http/server/reactive/ReactorServerHttpResponse
@5.0.0.RELEASE
+#<init>(Lreactor/ipc/netty/http/server/HttpServerResponse;Lorg/springframework/core/io/buffer/DataBufferFactory;)V
+#getReactorResponse()Lreactor/ipc/netty/http/server/HttpServerResponse;
+#writeWith(Ljava/io/File;JJ)Lreactor/core/publisher/Mono;
@5.0.1.RELEASE
-###org/springframework/http/server/reactive/ReactorServerHttpResponse

+###org/springframework/http/server/reactive/ReactorServerHttpRequest
@5.0.0.RELEASE
+#<init>(Lreactor/ipc/netty/http/server/HttpServerRequest;Lorg/springframework/core/io/buffer/NettyDataBufferFactory;)V
+#getReactorRequest()Lreactor/ipc/netty/http/server/HttpServerRequest;
+#getMethodValue()Ljava/lang/String;
+#getRemoteAddress()Ljava/net/InetSocketAddress;
+#getBody()Lreactor/core/publisher/Flux;
@5.0.1.RELEASE
-###org/springframework/http/server/reactive/ReactorServerHttpRequest

+###org/springframework/http/server/reactive/UndertowServerHttpRequest
@5.0.0.RELEASE
+#<init>(Lio/undertow/server/HttpServerExchange;Lorg/springframework/core/io/buffer/DataBufferFactory;)V
+#getUndertowExchange()Lio/undertow/server/HttpServerExchange;
+#getMethodValue()Ljava/lang/String;
+#getRemoteAddress()Ljava/net/InetSocketAddress;
+#getBody()Lreactor/core/publisher/Flux;
@5.0.1.RELEASE
-###org/springframework/http/server/reactive/UndertowServerHttpRequest

+###org/springframework/http/server/reactive/ServletServerHttpResponse
@5.0.0.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/AsyncContext;Lorg/springframework/core/io/buffer/DataBufferFactory;I)V
+#getServletResponse()Ljavax/servlet/http/HttpServletResponse;
@5.0.1.RELEASE
-###org/springframework/http/server/reactive/ServletServerHttpResponse

+###org/springframework/http/server/reactive/ServletServerHttpRequest
@5.0.0.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/AsyncContext;Lorg/springframework/core/io/buffer/DataBufferFactory;I)V
+#getServletRequest()Ljavax/servlet/http/HttpServletRequest;
+#getMethodValue()Ljava/lang/String;
+#getRemoteAddress()Ljava/net/InetSocketAddress;
+#getBody()Lreactor/core/publisher/Flux;
@5.0.1.RELEASE
-###org/springframework/http/server/reactive/ServletServerHttpRequest

+###org/springframework/http/server/reactive/UndertowServerHttpResponse
@5.0.0.RELEASE
+#<init>(Lio/undertow/server/HttpServerExchange;Lorg/springframework/core/io/buffer/DataBufferFactory;)V
+#getUndertowExchange()Lio/undertow/server/HttpServerExchange;
+#writeWith(Ljava/io/File;JJ)Lreactor/core/publisher/Mono;
@5.0.1.RELEASE
-###org/springframework/http/server/reactive/UndertowServerHttpResponse

+###org/springframework/web/context/request/async/ErrorDeferredResultProcessingInterceptor
@5.0.0.RELEASE
+#<init>()V
+#handleError(Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/context/request/async/DeferredResult;Ljava/lang/Throwable;)Z
@5.0.2.RELEASE
-###org/springframework/web/context/request/async/ErrorDeferredResultProcessingInterceptor

+###org/springframework/http/converter/json/KotlinSerializationJsonHttpMessageConverter
@5.3.0
+#<init>()V
+#<init>(Lkotlinx/serialization/json/Json;)V
+#read(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;
@5.3.2
+#canRead(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#canWrite(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
@6.0.0
-#canRead(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
-#canWrite(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
-#read(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;

+###org/springframework/http/client/ClientHttpRequestInitializer
@5.2.0.RELEASE
+#initialize(Lorg/springframework/http/client/ClientHttpRequest;)V

+###org/springframework/http/client/support/BasicAuthenticationInterceptor
@5.1.1.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
+#intercept(Lorg/springframework/http/HttpRequest;[BLorg/springframework/http/client/ClientHttpRequestExecution;)Lorg/springframework/http/client/ClientHttpResponse;

+###org/springframework/http/client/reactive/JettyClientHttpConnector
@5.1.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/http/client/reactive/JettyResourceFactory;Ljava/util/function/Consumer;)V
+#<init>(Lorg/eclipse/jetty/client/HttpClient;)V
+#setBufferFactory(Lorg/springframework/core/io/buffer/DataBufferFactory;)V
+#connect(Lorg/springframework/http/HttpMethod;Ljava/net/URI;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
@5.2.0.RELEASE
+#<init>(Lorg/eclipse/jetty/client/HttpClient;Lorg/springframework/http/client/reactive/JettyResourceFactory;)V
*#<init>(Lorg/springframework/http/client/reactive/JettyResourceFactory;Ljava/util/function/Consumer;)V[deprecated]

+###org/springframework/http/client/reactive/ReactorResourceFactory
@5.1.0.RELEASE
+#<init>()V
+#setUseGlobalResources(Z)V
+#isUseGlobalResources()Z
+#addGlobalResourcesConsumer(Ljava/util/function/Consumer;)V
+#setConnectionProviderSupplier(Ljava/util/function/Supplier;)V
+#setLoopResourcesSupplier(Ljava/util/function/Supplier;)V
+#setConnectionProvider(Lreactor/netty/resources/ConnectionProvider;)V
+#getConnectionProvider()Lreactor/netty/resources/ConnectionProvider;
+#setLoopResources(Lreactor/netty/resources/LoopResources;)V
+#getLoopResources()Lreactor/netty/resources/LoopResources;
+#afterPropertiesSet()V
+#destroy()V
@5.2.4.RELEASE
+#setShutdownQuietPeriod(Ljava/time/Duration;)V
+#setShutdownTimeout(Ljava/time/Duration;)V

+###org/springframework/http/client/reactive/HttpComponentsClientHttpConnector
@5.3.0
+#<init>()V
+#<init>(Lorg/apache/hc/client5/http/impl/async/CloseableHttpAsyncClient;)V
+#<init>(Lorg/apache/hc/client5/http/impl/async/CloseableHttpAsyncClient;Ljava/util/function/BiFunction;)V
+#setBufferFactory(Lorg/springframework/core/io/buffer/DataBufferFactory;)V
+#connect(Lorg/springframework/http/HttpMethod;Ljava/net/URI;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
@5.3.8
+#close()V

+###org/springframework/http/client/reactive/JettyResourceFactory
@5.1.0.RELEASE
+#<init>()V
+#setExecutor(Ljava/util/concurrent/Executor;)V
+#setByteBufferPool(Lorg/eclipse/jetty/io/ByteBufferPool;)V
+#setScheduler(Lorg/eclipse/jetty/util/thread/Scheduler;)V
+#setThreadPrefix(Ljava/lang/String;)V
+#getExecutor()Ljava/util/concurrent/Executor;
+#getByteBufferPool()Lorg/eclipse/jetty/io/ByteBufferPool;
+#getScheduler()Lorg/eclipse/jetty/util/thread/Scheduler;
+#afterPropertiesSet()V
+#destroy()V

+###org/springframework/http/codec/protobuf/ProtobufDecoder
@5.1.0.RELEASE
+#<init>()V
+#<init>(Lcom/google/protobuf/ExtensionRegistry;)V
+#setMaxMessageSize(I)V
+#canDecode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#decode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#decodeToMono(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Mono;
+#getDecodableMimeTypes()Ljava/util/List;
@5.1.11.RELEASE
+#getMaxMessageSize()I
@5.2.0.RELEASE
+#decode(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lcom/google/protobuf/Message;
+#decode(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Ljava/lang/Object;
-#getMaxMessageSize()I
@5.2.1.RELEASE
+#getMaxMessageSize()I

+###org/springframework/http/codec/protobuf/ProtobufCodecSupport
@5.1.0.RELEASE
+#<init>()V

+###org/springframework/http/codec/protobuf/ProtobufEncoder
@5.1.0.RELEASE
+#<init>()V
+#canEncode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#encode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#getStreamingMediaTypes()Ljava/util/List;
+#getEncodableMimeTypes()Ljava/util/List;
@5.2.0.RELEASE
+#encodeValue(Lcom/google/protobuf/Message;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;
+#encodeValue(Ljava/lang/Object;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;

+###org/springframework/http/codec/protobuf/ProtobufHttpMessageWriter
@5.1.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/core/codec/Encoder;)V
+#write(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;Lorg/springframework/http/ReactiveHttpOutputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;

+###org/springframework/http/codec/CodecConfigurer$DefaultCodecConfig
@5.1.12.RELEASE
+#maxInMemorySize()Ljava/lang/Integer;
+#isEnableLoggingRequestDetails()Z
@5.1.13.RELEASE
+#isEnableLoggingRequestDetails()Ljava/lang/Boolean;
-#isEnableLoggingRequestDetails()Z
@5.2.0.RELEASE
-###org/springframework/http/codec/CodecConfigurer$DefaultCodecConfig

+###org/springframework/http/codec/LoggingCodecSupport
@5.1.0.RELEASE
+#<init>()V
+#setEnableLoggingRequestDetails(Z)V
+#isEnableLoggingRequestDetails()Z

+###org/springframework/http/codec/multipart/MultipartParser$BodyToken
@5.3.0
+#<init>(Lorg/springframework/core/io/buffer/DataBuffer;)V
+#headers()Lorg/springframework/http/HttpHeaders;
+#buffer()Lorg/springframework/core/io/buffer/DataBuffer;
@6.0.0
+#<init>(Lorg/springframework/core/io/buffer/DataBuffer;Z)V
+#isLast()Z
-#<init>(Lorg/springframework/core/io/buffer/DataBuffer;)V

+###org/springframework/http/codec/multipart/PartHttpMessageWriter
@5.3.0
+#<init>()V
+#write(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;Lorg/springframework/http/ReactiveHttpOutputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
@6.0.3
+#canWrite(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;)Z

+###org/springframework/http/codec/multipart/MultipartWriterSupport
@5.3.0
+#getCharset()Ljava/nio/charset/Charset;
+#getWritableMediaTypes()Ljava/util/List;
+#canWrite(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;)Z
@5.3.2
+#setCharset(Ljava/nio/charset/Charset;)V
@6.0.3
-#canWrite(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;)Z

+###org/springframework/http/codec/multipart/MultipartParser$HeadersToken
@5.3.0
+#<init>(Lorg/springframework/http/HttpHeaders;)V
+#headers()Lorg/springframework/http/HttpHeaders;
+#buffer()Lorg/springframework/core/io/buffer/DataBuffer;
@6.0.0
+#isLast()Z

+###org/springframework/http/codec/multipart/MultipartParser$Token
@5.3.0
+#<init>()V
+#headers()Lorg/springframework/http/HttpHeaders;
+#buffer()Lorg/springframework/core/io/buffer/DataBuffer;
@6.0.0
+#isLast()Z

+###org/springframework/http/codec/multipart/DefaultPartHttpMessageReader
@5.3.0
+#<init>()V
+#setMaxHeadersSize(I)V
+#getMaxInMemorySize()I
+#setMaxInMemorySize(I)V
+#setMaxDiskUsagePerPart(J)V
+#setMaxParts(I)V
+#setFileStorageDirectory(Ljava/nio/file/Path;)V
+#setBlockingOperationScheduler(Lreactor/core/scheduler/Scheduler;)V
+#setStreaming(Z)V
+#getReadableMediaTypes()Ljava/util/List;
+#canRead(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;)Z
+#readMono(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/ReactiveHttpInputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
+#read(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/ReactiveHttpInputMessage;Ljava/util/Map;)Lreactor/core/publisher/Flux;
@5.3.6
+#setHeadersCharset(Ljava/nio/charset/Charset;)V
@6.0.0
*#setStreaming(Z)V[deprecated]

+###org/springframework/http/codec/ResourceHttpMessageReader
@5.2.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/core/codec/ResourceDecoder;)V

+###org/springframework/http/codec/cbor/Jackson2CborEncoder
@5.2.0.RELEASE
+#<init>()V
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;[Lorg/springframework/util/MimeType;)V
+#encode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;

+###org/springframework/http/codec/cbor/Jackson2CborDecoder
@5.2.0.RELEASE
+#<init>()V
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;[Lorg/springframework/util/MimeType;)V
+#decode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;

+###org/springframework/http/codec/json/KotlinSerializationJsonDecoder
@5.3.0
+#<init>()V
+#<init>(Lkotlinx/serialization/json/Json;)V
+#canDecode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#decode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#decodeToMono(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Mono;
@5.3.2
+#setMaxInMemorySize(I)V
+#getMaxInMemorySize()I
@6.0.0
-#setMaxInMemorySize(I)V
-#getMaxInMemorySize()I
-#canDecode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
-#decode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
-#decodeToMono(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Mono;

+###org/springframework/http/codec/json/KotlinSerializationJsonEncoder
@5.3.0
+#<init>()V
+#<init>(Lkotlinx/serialization/json/Json;)V
+#canEncode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#encode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#encodeValue(Ljava/lang/Object;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;
@6.0.0
-#canEncode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
-#encode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
-#encodeValue(Ljava/lang/Object;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;

+###org/springframework/http/codec/support/BaseCodecConfigurer$DefaultCustomCodecs
@5.1.12.RELEASE
+#decoder(Lorg/springframework/core/codec/Decoder;)V
+#encoder(Lorg/springframework/core/codec/Encoder;)V
+#reader(Lorg/springframework/http/codec/HttpMessageReader;)V
+#writer(Lorg/springframework/http/codec/HttpMessageWriter;)V
+#withDefaultCodecConfig(Ljava/util/function/Consumer;)V
@5.1.13.RELEASE
+#register(Ljava/lang/Object;)V
+#registerWithDefaultConfig(Ljava/lang/Object;)V
+#registerWithDefaultConfig(Ljava/lang/Object;Ljava/util/function/Consumer;)V
@5.2.0.RELEASE
-###org/springframework/http/codec/support/BaseCodecConfigurer$DefaultCustomCodecs

+###org/springframework/http/HttpLogging
@5.1.0.RELEASE
+#<init>()V
+#forLogName(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
+#forLog(Lorg/apache/commons/logging/Log;)Lorg/apache/commons/logging/Log;

+###org/springframework/http/server/DelegatingServerHttpResponse
@5.3.2
+#<init>(Lorg/springframework/http/server/ServerHttpResponse;)V
+#getDelegate()Lorg/springframework/http/server/ServerHttpResponse;
+#setStatusCode(Lorg/springframework/http/HttpStatus;)V
+#flush()V
+#close()V
+#getBody()Ljava/io/OutputStream;
+#getHeaders()Lorg/springframework/http/HttpHeaders;
@6.0.0
+#setStatusCode(Lorg/springframework/http/HttpStatusCode;)V
-#setStatusCode(Lorg/springframework/http/HttpStatus;)V

+###org/springframework/http/server/PathContainer$Options
@5.2.0.RELEASE
+#separator()C
+#shouldDecodeAndParseSegments()Z
+#create(CZ)Lorg/springframework/http/server/PathContainer$Options;

+###org/springframework/http/server/reactive/HttpHandlerDecoratorFactory
@5.3.4

+###org/springframework/http/RequestEntity$UriTemplateRequestEntity
@5.3.0
+#getUriTemplate()Ljava/lang/String;
+#getVars()[Ljava/lang/Object;
+#getVarsMap()Ljava/util/Map;
+#toString()Ljava/lang/String;
@5.3.11
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/web/cors/reactive/PreFlightRequestHandler
@5.3.4
+#handlePreFlight(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/bind/MissingMatrixVariableException
@5.1.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/core/MethodParameter;)V
+#getMessage()Ljava/lang/String;
+#getVariableName()Ljava/lang/String;
+#getParameter()Lorg/springframework/core/MethodParameter;
@5.3.6
+#<init>(Ljava/lang/String;Lorg/springframework/core/MethodParameter;Z)V

+###org/springframework/web/bind/MissingRequestCookieException
@5.1.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/core/MethodParameter;)V
+#getMessage()Ljava/lang/String;
+#getCookieName()Ljava/lang/String;
+#getParameter()Lorg/springframework/core/MethodParameter;
@5.3.6
+#<init>(Ljava/lang/String;Lorg/springframework/core/MethodParameter;Z)V

+###org/springframework/web/bind/MissingRequestHeaderException
@5.1.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/core/MethodParameter;)V
+#getMessage()Ljava/lang/String;
+#getHeaderName()Ljava/lang/String;
+#getParameter()Lorg/springframework/core/MethodParameter;
@5.3.6
+#<init>(Ljava/lang/String;Lorg/springframework/core/MethodParameter;Z)V

+###org/springframework/web/filter/FormContentFilter
@5.1.0.RELEASE
+#<init>()V
+#setFormConverter(Lorg/springframework/http/converter/FormHttpMessageConverter;)V
+#setCharset(Ljava/nio/charset/Charset;)V

+###org/springframework/web/filter/ServletRequestPathFilter
@5.3.0
+#<init>()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
@6.0.0
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/springframework/web/filter/reactive/ServerWebExchangeContextFilter
@5.2.0.RELEASE
+#<init>()V
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;
+#get(Lreactor/util/context/Context;)Ljava/util/Optional;
@6.0.6
+#getExchange(Lreactor/util/context/ContextView;)Ljava/util/Optional;
*#get(Lreactor/util/context/Context;)Ljava/util/Optional;[deprecated]

+###org/springframework/web/multipart/support/StandardServletPartUtils
@5.3.0
+#<init>()V
+#getParts(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/util/MultiValueMap;
+#getParts(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/util/List;
+#bindParts(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/beans/MutablePropertyValues;Z)V
@6.0.0
+#getParts(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/util/MultiValueMap;
+#getParts(Ljakarta/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/util/List;
+#bindParts(Ljakarta/servlet/http/HttpServletRequest;Lorg/springframework/beans/MutablePropertyValues;Z)V
-#getParts(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/util/MultiValueMap;
-#getParts(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/util/List;
-#bindParts(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/beans/MutablePropertyValues;Z)V

+###org/springframework/web/method/HandlerTypePredicate
@5.1.0.RELEASE
+#test(Ljava/lang/Class;)Z
+#forAnyHandlerType()Lorg/springframework/web/method/HandlerTypePredicate;
+#forBasePackage([Ljava/lang/String;)Lorg/springframework/web/method/HandlerTypePredicate;
+#forBasePackageClass([Ljava/lang/Class;)Lorg/springframework/web/method/HandlerTypePredicate;
+#forAssignableType([Ljava/lang/Class;)Lorg/springframework/web/method/HandlerTypePredicate;
+#forAnnotation([Ljava/lang/Class;)Lorg/springframework/web/method/HandlerTypePredicate;
+#builder()Lorg/springframework/web/method/HandlerTypePredicate$Builder;
+#test(Ljava/lang/Object;)Z

+###org/springframework/web/method/HandlerTypePredicate$Builder
@5.1.0.RELEASE
+#<init>()V
+#basePackage([Ljava/lang/String;)Lorg/springframework/web/method/HandlerTypePredicate$Builder;
+#basePackageClass([Ljava/lang/Class;)Lorg/springframework/web/method/HandlerTypePredicate$Builder;
+#assignableType([Ljava/lang/Class;)Lorg/springframework/web/method/HandlerTypePredicate$Builder;
+#annotation([Ljava/lang/Class;)Lorg/springframework/web/method/HandlerTypePredicate$Builder;
+#build()Lorg/springframework/web/method/HandlerTypePredicate;

+###org/springframework/web/util/pattern/PathPatternRouteMatcher
@5.2.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/web/util/pattern/PathPatternParser;)V
+#parseRoute(Ljava/lang/String;)Lorg/springframework/util/RouteMatcher$Route;
+#isPattern(Ljava/lang/String;)Z
+#combine(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#match(Ljava/lang/String;Lorg/springframework/util/RouteMatcher$Route;)Z
+#matchAndExtract(Ljava/lang/String;Lorg/springframework/util/RouteMatcher$Route;)Ljava/util/Map;
+#getPatternComparator(Lorg/springframework/util/RouteMatcher$Route;)Ljava/util/Comparator;

+###org/springframework/web/util/ServletRequestPathUtils
@5.3.0
+#<init>()V
+#parseAndCache(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/http/server/RequestPath;
+#getParsedRequestPath(Ljavax/servlet/ServletRequest;)Lorg/springframework/http/server/RequestPath;
+#hasParsedRequestPath(Ljavax/servlet/ServletRequest;)Z
+#clearParsedRequestPath(Ljavax/servlet/ServletRequest;)V
+#getCachedPath(Ljavax/servlet/ServletRequest;)Ljava/lang/Object;
+#getCachedPathValue(Ljavax/servlet/ServletRequest;)Ljava/lang/String;
+#hasCachedPath(Ljavax/servlet/ServletRequest;)Z
@5.3.3
+#setParsedRequestPath(Lorg/springframework/http/server/RequestPath;Ljavax/servlet/ServletRequest;)V
@6.0.0
+#parseAndCache(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/http/server/RequestPath;
+#getParsedRequestPath(Ljakarta/servlet/ServletRequest;)Lorg/springframework/http/server/RequestPath;
+#setParsedRequestPath(Lorg/springframework/http/server/RequestPath;Ljakarta/servlet/ServletRequest;)V
+#hasParsedRequestPath(Ljakarta/servlet/ServletRequest;)Z
+#clearParsedRequestPath(Ljakarta/servlet/ServletRequest;)V
+#getCachedPath(Ljakarta/servlet/ServletRequest;)Ljava/lang/Object;
+#getCachedPathValue(Ljakarta/servlet/ServletRequest;)Ljava/lang/String;
+#hasCachedPath(Ljakarta/servlet/ServletRequest;)Z
-#parseAndCache(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/http/server/RequestPath;
-#getParsedRequestPath(Ljavax/servlet/ServletRequest;)Lorg/springframework/http/server/RequestPath;
-#setParsedRequestPath(Lorg/springframework/http/server/RequestPath;Ljavax/servlet/ServletRequest;)V
-#hasParsedRequestPath(Ljavax/servlet/ServletRequest;)Z
-#clearParsedRequestPath(Ljavax/servlet/ServletRequest;)V
-#getCachedPath(Ljavax/servlet/ServletRequest;)Ljava/lang/Object;
-#getCachedPathValue(Ljavax/servlet/ServletRequest;)Ljava/lang/String;
-#hasCachedPath(Ljavax/servlet/ServletRequest;)Z

+###org/springframework/web/client/HttpClientErrorException$BadRequest
@5.1.0.RELEASE

+###org/springframework/web/client/UnknownContentTypeException
@5.2.7.RELEASE
+#<init>(Ljava/lang/reflect/Type;Lorg/springframework/http/MediaType;ILjava/lang/String;Lorg/springframework/http/HttpHeaders;[B)V
+#getTargetType()Ljava/lang/reflect/Type;
+#getContentType()Lorg/springframework/http/MediaType;
+#getRawStatusCode()I
+#getStatusText()Ljava/lang/String;
+#getResponseHeaders()Lorg/springframework/http/HttpHeaders;
+#getResponseBody()[B
+#getResponseBodyAsString()Ljava/lang/String;
@6.0.0
+#<init>(Ljava/lang/reflect/Type;Lorg/springframework/http/MediaType;Lorg/springframework/http/HttpStatusCode;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[B)V
+#getStatusCode()Lorg/springframework/http/HttpStatusCode;
*#getRawStatusCode()I[deprecated]

+###org/springframework/web/client/HttpClientErrorException$Forbidden
@5.1.0.RELEASE

+###org/springframework/web/client/HttpClientErrorException$TooManyRequests
@5.1.0.RELEASE

+###org/springframework/web/client/HttpClientErrorException$NotAcceptable
@5.1.0.RELEASE

+###org/springframework/web/client/HttpClientErrorException$Unauthorized
@5.1.0.RELEASE

+###org/springframework/web/client/HttpServerErrorException$InternalServerError
@5.1.0.RELEASE

+###org/springframework/web/client/HttpClientErrorException$UnsupportedMediaType
@5.1.0.RELEASE

+###org/springframework/web/client/HttpServerErrorException$NotImplemented
@5.1.0.RELEASE

+###org/springframework/web/client/HttpClientErrorException$Conflict
@5.1.0.RELEASE

+###org/springframework/web/client/HttpClientErrorException$UnprocessableEntity
@5.1.0.RELEASE

+###org/springframework/web/client/HttpServerErrorException$GatewayTimeout
@5.1.0.RELEASE

+###org/springframework/web/client/HttpClientErrorException$MethodNotAllowed
@5.1.0.RELEASE

+###org/springframework/web/client/HttpServerErrorException$BadGateway
@5.1.0.RELEASE

+###org/springframework/web/client/HttpServerErrorException$ServiceUnavailable
@5.1.0.RELEASE

+###org/springframework/web/client/HttpClientErrorException$NotFound
@5.1.0.RELEASE

+###org/springframework/web/client/HttpClientErrorException$Gone
@5.1.0.RELEASE

+###org/springframework/web/server/adapter/ForwardedHeaderTransformer
@5.1.0.RELEASE
+#<init>()V
+#setRemoveOnly(Z)V
+#isRemoveOnly()Z
+#apply(Lorg/springframework/http/server/reactive/ServerHttpRequest;)Lorg/springframework/http/server/reactive/ServerHttpRequest;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/http/converter/xml/XmlAwareFormHttpMessageConverter
@3.0.3.RELEASE
+#<init>()V
@5.0.0.RELEASE
-###org/springframework/http/converter/xml/XmlAwareFormHttpMessageConverter

+###org/springframework/http/converter/json/JacksonObjectMapperFactoryBean
@3.2.0.RELEASE
+#<init>()V
+#setObjectMapper(Lorg/codehaus/jackson/map/ObjectMapper;)V
+#setDateFormat(Ljava/text/DateFormat;)V
+#setSimpleDateFormat(Ljava/lang/String;)V
+#setAnnotationIntrospector(Lorg/codehaus/jackson/map/AnnotationIntrospector;)V
+#setAutoDetectFields(Z)V
+#setAutoDetectGettersSetters(Z)V
+#setFailOnEmptyBeans(Z)V
+#setIndentOutput(Z)V
+#setFeaturesToEnable([Ljava/lang/Object;)V
+#setFeaturesToDisable([Ljava/lang/Object;)V
+#afterPropertiesSet()V
+#getObject()Lorg/codehaus/jackson/map/ObjectMapper;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#getObject()Ljava/lang/Object;
@4.1.0.RELEASE
-###org/springframework/http/converter/json/JacksonObjectMapperFactoryBean

+###org/springframework/http/converter/json/MappingJacksonHttpMessageConverter
@3.0.0.RELEASE
+#<init>()V
+#setObjectMapper(Lorg/codehaus/jackson/map/ObjectMapper;)V
+#setPrefixJson(Z)V
+#canRead(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#canWrite(Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
@3.0.7.RELEASE
+#getObjectMapper()Lorg/codehaus/jackson/map/ObjectMapper;
@3.2.0.RELEASE
+#setPrettyPrint(Z)V
+#canRead(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#read(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;
@3.2.4.RELEASE
+#setJsonPrefix(Ljava/lang/String;)V
@4.1.0.RELEASE
-###org/springframework/http/converter/json/MappingJacksonHttpMessageConverter

+###org/springframework/web/filter/Log4jNestedDiagnosticContextFilter
@1.2.5
+#<init>()V
@5.0.0.RELEASE
-###org/springframework/web/filter/Log4jNestedDiagnosticContextFilter

+###org/springframework/web/bind/annotation/support/HandlerMethodInvoker
@3.0.0.RELEASE
+#<init>(Lorg/springframework/web/bind/annotation/support/HandlerMethodResolver;)V
+#<init>(Lorg/springframework/web/bind/annotation/support/HandlerMethodResolver;Lorg/springframework/web/bind/support/WebBindingInitializer;)V
+#<init>(Lorg/springframework/web/bind/annotation/support/HandlerMethodResolver;Lorg/springframework/web/bind/support/WebBindingInitializer;Lorg/springframework/web/bind/support/SessionAttributeStore;Lorg/springframework/core/ParameterNameDiscoverer;[Lorg/springframework/web/bind/support/WebArgumentResolver;[Lorg/springframework/http/converter/HttpMessageConverter;)V
+#invokeHandlerMethod(Ljava/lang/reflect/Method;Ljava/lang/Object;Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/ui/ExtendedModelMap;)Ljava/lang/Object;
+#updateModelAttributes(Ljava/lang/Object;Ljava/util/Map;Lorg/springframework/ui/ExtendedModelMap;Lorg/springframework/web/context/request/NativeWebRequest;)V
@5.0.0.RELEASE
-###org/springframework/web/bind/annotation/support/HandlerMethodInvoker

+###org/springframework/web/bind/annotation/support/HandlerMethodInvocationException
@3.0.0.RELEASE
+#<init>(Ljava/lang/reflect/Method;Ljava/lang/Throwable;)V
@5.0.0.RELEASE
-###org/springframework/web/bind/annotation/support/HandlerMethodInvocationException

+###org/springframework/web/bind/annotation/support/HandlerMethodResolver
@3.0.0.RELEASE
+#<init>()V
+#init(Ljava/lang/Class;)V
+#hasHandlerMethods()Z
+#getHandlerMethods()Ljava/util/Set;
+#getInitBinderMethods()Ljava/util/Set;
+#getModelAttributeMethods()Ljava/util/Set;
+#hasTypeLevelMapping()Z
+#getTypeLevelMapping()Lorg/springframework/web/bind/annotation/RequestMapping;
+#hasSessionAttributes()Z
+#isSessionAttribute(Ljava/lang/String;Ljava/lang/Class;)Z
+#getActualSessionAttributeNames()Ljava/util/Set;
@5.0.0.RELEASE
-###org/springframework/web/bind/annotation/support/HandlerMethodResolver

+###org/springframework/web/context/request/Log4jNestedDiagnosticContextInterceptor
@2.5
+#<init>()V
+#setIncludeClientInfo(Z)V
+#preHandle(Lorg/springframework/web/context/request/WebRequest;)V
+#postHandle(Lorg/springframework/web/context/request/WebRequest;Lorg/springframework/ui/ModelMap;)V
+#afterCompletion(Lorg/springframework/web/context/request/WebRequest;Ljava/lang/Exception;)V
@3.2.0.RELEASE
+#afterConcurrentHandlingStarted(Lorg/springframework/web/context/request/WebRequest;)V
@5.0.0.RELEASE
-###org/springframework/web/context/request/Log4jNestedDiagnosticContextInterceptor

+###org/springframework/web/context/request/async/NoSupportAsyncWebRequest
@3.2.0.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#addCompletionHandler(Ljava/lang/Runnable;)V
+#setTimeout(Ljava/lang/Long;)V
+#addTimeoutHandler(Ljava/lang/Runnable;)V
+#isAsyncStarted()Z
+#startAsync()V
+#isAsyncComplete()Z
+#dispatch()V
@5.0.0.RELEASE
-###org/springframework/web/context/request/async/NoSupportAsyncWebRequest

+###org/springframework/web/context/support/ServletContextPropertyPlaceholderConfigurer
@1.1.4
+#<init>()V
+#setServletContext(Ljavax/servlet/ServletContext;)V
@1.1.5
+#setContextOverride(Z)V
+#setSearchContextAttributes(Z)V
@4.2.0.RELEASE
-###org/springframework/web/context/support/ServletContextPropertyPlaceholderConfigurer

+###org/springframework/web/method/HandlerMethodSelector
@3.1.0.RELEASE
+#<init>()V
+#selectMethods(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$MethodFilter;)Ljava/util/Set;
@5.0.0.RELEASE
-###org/springframework/web/method/HandlerMethodSelector

+###org/springframework/remoting/caucho/BurlapProxyFactoryBean
@2.5
+#<init>()V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#afterPropertiesSet()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@2.5.2
-#setBeanClassLoader(Ljava/lang/ClassLoader;)V
@5.0.0.RELEASE
-###org/springframework/remoting/caucho/BurlapProxyFactoryBean

+###org/springframework/remoting/caucho/SimpleBurlapServiceExporter
@2.5.1
+#<init>()V
+#handle(Lcom/sun/net/httpserver/HttpExchange;)V
@5.0.0.RELEASE
-###org/springframework/remoting/caucho/SimpleBurlapServiceExporter

+###org/springframework/remoting/caucho/BurlapClientInterceptor
@2.5
+#<init>()V
+#setProxyFactory(Lcom/caucho/burlap/client/BurlapProxyFactory;)V
+#setUsername(Ljava/lang/String;)V
+#setPassword(Ljava/lang/String;)V
+#setOverloadEnabled(Z)V
+#afterPropertiesSet()V
+#prepare()V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
@5.0.0.RELEASE
-###org/springframework/remoting/caucho/BurlapClientInterceptor

+###org/springframework/remoting/caucho/BurlapExporter
@2.5.1
+#<init>()V
+#afterPropertiesSet()V
+#prepare()V
+#invoke(Ljava/io/InputStream;Ljava/io/OutputStream;)V
@5.0.0.RELEASE
-###org/springframework/remoting/caucho/BurlapExporter

+###org/springframework/remoting/caucho/BurlapServiceExporter
@2.5
+#<init>()V
+#afterPropertiesSet()V
+#prepare()V
+#handleRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@2.5.1
-#afterPropertiesSet()V
-#prepare()V
@5.0.0.RELEASE
-###org/springframework/remoting/caucho/BurlapServiceExporter

+###org/springframework/http/client/OkHttpClientHttpRequestFactory
@4.2.0.RELEASE
+#<init>()V
+#<init>(Lcom/squareup/okhttp/OkHttpClient;)V
+#setReadTimeout(I)V
+#setWriteTimeout(I)V
+#setConnectTimeout(I)V
+#createRequest(Ljava/net/URI;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/client/ClientHttpRequest;
+#createAsyncRequest(Ljava/net/URI;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/client/AsyncClientHttpRequest;
+#destroy()V
@5.0.0.RELEASE
-###org/springframework/http/client/OkHttpClientHttpRequestFactory

+###org/springframework/web/context/scope/RequestAttributes
@2.0-m2
+#getAttribute(Ljava/lang/String;I)Ljava/lang/Object;
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;I)V
+#removeAttribute(Ljava/lang/String;I)V
@2.0-m5
+#getSessionMutex()Ljava/lang/Object;
@2.0
-###org/springframework/web/context/scope/RequestAttributes

+###org/springframework/web/context/scope/RequestContextHolder
@2.0-m1
+#<init>()V
+#setRequest(Ljavax/servlet/http/HttpServletRequest;)V
+#getRequest()Ljavax/servlet/http/HttpServletRequest;
+#currentRequest()Ljavax/servlet/http/HttpServletRequest;
+#currentSession()Ljavax/servlet/http/HttpSession;
@2.0-m2
+#setRequestAttributes(Lorg/springframework/web/context/scope/RequestAttributes;)V
+#getRequestAttributes()Lorg/springframework/web/context/scope/RequestAttributes;
+#currentRequestAttributes()Lorg/springframework/web/context/scope/RequestAttributes;
-#setRequest(Ljavax/servlet/http/HttpServletRequest;)V
-#getRequest()Ljavax/servlet/http/HttpServletRequest;
-#currentRequest()Ljavax/servlet/http/HttpServletRequest;
-#currentSession()Ljavax/servlet/http/HttpSession;
@2.0
-###org/springframework/web/context/scope/RequestContextHolder

+###org/springframework/web/context/scope/RequestContextListener
@2.0-m1
+#<init>()V
+#requestInitialized(Ljavax/servlet/ServletRequestEvent;)V
+#requestDestroyed(Ljavax/servlet/ServletRequestEvent;)V
@2.0
-###org/springframework/web/context/scope/RequestContextListener

+###org/springframework/web/context/scope/RequestScopeMap
@2.0-m1
+#<init>()V
+#isPersistent()Z
+#get(Ljava/lang/String;)Ljava/lang/Object;
+#put(Ljava/lang/String;Ljava/lang/Object;)V
+#remove(Ljava/lang/String;)V
@2.0-m5
-###org/springframework/web/context/scope/RequestScopeMap

+###org/springframework/web/context/scope/ServletRequestAttributes
@2.0-m2
+#<init>(Ljavax/servlet/http/HttpServletRequest;)V
+#getAttribute(Ljava/lang/String;I)Ljava/lang/Object;
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;I)V
+#removeAttribute(Ljava/lang/String;I)V
@2.0-m5
+#getSessionMutex()Ljava/lang/Object;
+#updateAccessedAttributes()V
@2.0
-###org/springframework/web/context/scope/ServletRequestAttributes

+###org/springframework/web/context/scope/SessionScopeMap
@2.0-m1
+#<init>()V
+#setSynchronizeOnSession(Z)V
+#isPersistent()Z
+#get(Ljava/lang/String;)Ljava/lang/Object;
+#put(Ljava/lang/String;Ljava/lang/Object;)V
+#remove(Ljava/lang/String;)V
@2.0-m2
+#setGlobalSession(Z)V
-#setSynchronizeOnSession(Z)V
@2.0-m5
-###org/springframework/web/context/scope/SessionScopeMap

+###org/springframework/web/context/support/ServletContextFactoryBean
@1.1.4
+#<init>()V
+#setServletContext(Ljavax/servlet/ServletContext;)V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@3.0.0.RELEASE
+#getObject()Ljavax/servlet/ServletContext;
@4.0.0.RELEASE
-###org/springframework/web/context/support/ServletContextFactoryBean

+###org/springframework/web/jsf/WebApplicationContextVariableResolver
@1.2.5
+#<init>(Ljavax/faces/el/VariableResolver;)V
+#resolveVariable(Ljavax/faces/context/FacesContext;Ljava/lang/String;)Ljava/lang/Object;
@4.0.0.RELEASE
-###org/springframework/web/jsf/WebApplicationContextVariableResolver

+###org/springframework/web/struts/SpringBindingActionForm
@1.2.2
+#<init>()V
+#expose(Lorg/springframework/validation/Errors;Ljavax/servlet/http/HttpServletRequest;)V
@2.0-m5
-###org/springframework/web/struts/SpringBindingActionForm

+###org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor
@2.5
+#<init>()V
+#<init>(Lorg/apache/commons/httpclient/HttpClient;)V
+#setHttpClient(Lorg/apache/commons/httpclient/HttpClient;)V
+#getHttpClient()Lorg/apache/commons/httpclient/HttpClient;
+#setReadTimeout(I)V
@3.0.6.RELEASE
+#setConnectTimeout(I)V
@4.0.0.RELEASE
-###org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor

+###org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor
@2.5
+#<init>()V
+#setJaxRpcService(Ljavax/xml/rpc/Service;)V
+#getJaxRpcService()Ljavax/xml/rpc/Service;
+#setPortName(Ljava/lang/String;)V
+#getPortName()Ljava/lang/String;
+#setUsername(Ljava/lang/String;)V
+#getUsername()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setEndpointAddress(Ljava/lang/String;)V
+#getEndpointAddress()Ljava/lang/String;
+#setMaintainSession(Z)V
+#isMaintainSession()Z
+#setCustomProperties(Ljava/util/Properties;)V
+#setCustomPropertyMap(Ljava/util/Map;)V
+#getCustomPropertyMap()Ljava/util/Map;
+#addCustomProperty(Ljava/lang/String;Ljava/lang/Object;)V
+#setServiceInterface(Ljava/lang/Class;)V
+#getServiceInterface()Ljava/lang/Class;
+#setPortInterface(Ljava/lang/Class;)V
+#getPortInterface()Ljava/lang/Class;
+#setLookupServiceOnStartup(Z)V
+#setRefreshServiceAfterConnectFailure(Z)V
+#afterPropertiesSet()V
+#prepare()V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
@4.0.0.RELEASE
-###org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor

+###org/springframework/remoting/jaxrpc/JaxRpcPortProxyFactoryBean
@2.5
+#<init>()V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#afterPropertiesSet()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@4.0.0.RELEASE
-###org/springframework/remoting/jaxrpc/JaxRpcPortProxyFactoryBean

+###org/springframework/remoting/jaxrpc/JaxRpcServicePostProcessor
@2.5
+#postProcessJaxRpcService(Ljavax/xml/rpc/Service;)V
@4.0.0.RELEASE
-###org/springframework/remoting/jaxrpc/JaxRpcServicePostProcessor

+###org/springframework/remoting/jaxrpc/JaxRpcSoapFaultException
@2.5
+#<init>(Ljavax/xml/rpc/soap/SOAPFaultException;)V
+#getOriginalException()Ljavax/xml/rpc/soap/SOAPFaultException;
+#getFaultCode()Ljava/lang/String;
+#getFaultCodeAsQName()Ljavax/xml/namespace/QName;
+#getFaultString()Ljava/lang/String;
+#getFaultActor()Ljava/lang/String;
@4.0.0.RELEASE
-###org/springframework/remoting/jaxrpc/JaxRpcSoapFaultException

+###org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactory
@2.5
+#<init>()V
+#setServiceFactory(Ljavax/xml/rpc/ServiceFactory;)V
+#getServiceFactory()Ljavax/xml/rpc/ServiceFactory;
+#setServiceFactoryClass(Ljava/lang/Class;)V
+#getServiceFactoryClass()Ljava/lang/Class;
+#setWsdlDocumentUrl(Ljava/net/URL;)V
+#getWsdlDocumentUrl()Ljava/net/URL;
+#setNamespaceUri(Ljava/lang/String;)V
+#getNamespaceUri()Ljava/lang/String;
+#setServiceName(Ljava/lang/String;)V
+#getServiceName()Ljava/lang/String;
+#setJaxRpcServiceInterface(Ljava/lang/Class;)V
+#getJaxRpcServiceInterface()Ljava/lang/Class;
+#setJaxRpcServiceProperties(Ljava/util/Properties;)V
+#getJaxRpcServiceProperties()Ljava/util/Properties;
+#setServicePostProcessors([Lorg/springframework/remoting/jaxrpc/JaxRpcServicePostProcessor;)V
+#getServicePostProcessors()[Lorg/springframework/remoting/jaxrpc/JaxRpcServicePostProcessor;
+#createJaxRpcService()Ljavax/xml/rpc/Service;
@4.0.0.RELEASE
-###org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactory

+###org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactoryBean
@2.5
+#<init>()V
+#afterPropertiesSet()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@3.0.0.RELEASE
+#getObject()Ljavax/xml/rpc/Service;
@4.0.0.RELEASE
-###org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactoryBean

+###org/springframework/remoting/jaxrpc/ServletEndpointSupport
@2.5
+#<init>()V
+#init(Ljava/lang/Object;)V
+#destroy()V
@4.0.0.RELEASE
-###org/springframework/remoting/jaxrpc/ServletEndpointSupport

+###org/springframework/remoting/jaxrpc/support/AxisBeanMappingServicePostProcessor
@2.5
+#<init>()V
+#setEncodingStyleUri(Ljava/lang/String;)V
+#setTypeNamespaceUri(Ljava/lang/String;)V
+#setBeanMappings(Ljava/util/Properties;)V
+#setBeanClasses([Ljava/lang/Class;)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#postProcessJaxRpcService(Ljavax/xml/rpc/Service;)V
@3.0.0.RELEASE
-###org/springframework/remoting/jaxrpc/support/AxisBeanMappingServicePostProcessor

+###org/springframework/web/jsf/SpringBeanVariableResolver
@2.5
+#<init>(Ljavax/faces/el/VariableResolver;)V
+#resolveVariable(Ljavax/faces/context/FacesContext;Ljava/lang/String;)Ljava/lang/Object;
@4.0.0.RELEASE
-###org/springframework/web/jsf/SpringBeanVariableResolver

+###org/springframework/http/client/CommonsClientHttpRequestFactory
@3.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/apache/commons/httpclient/HttpClient;)V
+#setHttpClient(Lorg/apache/commons/httpclient/HttpClient;)V
+#getHttpClient()Lorg/apache/commons/httpclient/HttpClient;
+#setReadTimeout(I)V
+#createRequest(Ljava/net/URI;Lorg/springframework/http/HttpMethod;)Lorg/springframework/http/client/ClientHttpRequest;
+#destroy()V
@3.0.6.RELEASE
+#setConnectTimeout(I)V
@4.0.0.RELEASE
-###org/springframework/http/client/CommonsClientHttpRequestFactory

+###org/springframework/web/server/UnsatisfiedRequestParameterException
@6.0.0
+#<init>(Ljava/util/List;Lorg/springframework/util/MultiValueMap;)V
+#getConditions()Ljava/util/List;
+#getRequestParams()Lorg/springframework/util/MultiValueMap;

+###org/springframework/web/server/MissingRequestValueException
@6.0.0
+#<init>(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Lorg/springframework/core/MethodParameter;)V
+#getName()Ljava/lang/String;
+#getType()Ljava/lang/Class;
+#getLabel()Ljava/lang/String;

+###org/springframework/web/server/adapter/WebHttpHandlerBuilder$SpringWebBlockHoundIntegration
@5.3.6
+#<init>()V
+#applyTo(Lreactor/blockhound/BlockHound$Builder;)V

+###org/springframework/web/bind/MissingRequestValueException
@5.3.6
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Z)V
+#isMissingAfterConversion()Z

+###org/springframework/web/ErrorResponse$Builder
@6.0.0
+#header(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/web/ErrorResponse$Builder;
+#headers(Ljava/util/function/Consumer;)Lorg/springframework/web/ErrorResponse$Builder;
+#detail(Ljava/lang/String;)Lorg/springframework/web/ErrorResponse$Builder;
+#detailMessageCode(Ljava/lang/String;)Lorg/springframework/web/ErrorResponse$Builder;
+#detailMessageArguments([Ljava/lang/Object;)Lorg/springframework/web/ErrorResponse$Builder;
+#type(Ljava/net/URI;)Lorg/springframework/web/ErrorResponse$Builder;
+#title(Ljava/lang/String;)Lorg/springframework/web/ErrorResponse$Builder;
+#titleMessageCode(Ljava/lang/String;)Lorg/springframework/web/ErrorResponse$Builder;
+#instance(Ljava/net/URI;)Lorg/springframework/web/ErrorResponse$Builder;
+#property(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/web/ErrorResponse$Builder;
+#build()Lorg/springframework/web/ErrorResponse;
@6.0.3
+#build(Lorg/springframework/context/MessageSource;Ljava/util/Locale;)Lorg/springframework/web/ErrorResponse;

+###org/springframework/web/filter/ServerHttpObservationFilter
@6.0.0
+#<init>(Lio/micrometer/observation/ObservationRegistry;)V
+#<init>(Lio/micrometer/observation/ObservationRegistry;Lorg/springframework/http/server/observation/ServerRequestObservationConvention;)V
+#findObservationContext(Ljakarta/servlet/http/HttpServletRequest;)Ljava/util/Optional;

+###org/springframework/web/filter/reactive/ServerHttpObservationFilter
@6.0.0
+#<init>(Lio/micrometer/observation/ObservationRegistry;)V
+#<init>(Lio/micrometer/observation/ObservationRegistry;Lorg/springframework/http/server/reactive/observation/ServerRequestObservationConvention;)V
+#findObservationContext(Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/Optional;
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;

+###org/springframework/web/service/annotation/PostExchange
@6.0.0
+#value()Ljava/lang/String;
+#url()Ljava/lang/String;
+#contentType()Ljava/lang/String;
+#accept()[Ljava/lang/String;

+###org/springframework/web/service/annotation/GetExchange
@6.0.0
+#value()Ljava/lang/String;
+#url()Ljava/lang/String;
+#accept()[Ljava/lang/String;

+###org/springframework/web/service/annotation/PatchExchange
@6.0.0
+#value()Ljava/lang/String;
+#url()Ljava/lang/String;
+#contentType()Ljava/lang/String;
+#accept()[Ljava/lang/String;

+###org/springframework/web/service/annotation/PutExchange
@6.0.0
+#value()Ljava/lang/String;
+#url()Ljava/lang/String;
+#contentType()Ljava/lang/String;
+#accept()[Ljava/lang/String;

+###org/springframework/web/service/annotation/DeleteExchange
@6.0.0
+#value()Ljava/lang/String;
+#url()Ljava/lang/String;
+#contentType()Ljava/lang/String;
+#accept()[Ljava/lang/String;

+###org/springframework/web/service/annotation/HttpExchange
@6.0.0
+#value()Ljava/lang/String;
+#url()Ljava/lang/String;
+#method()Ljava/lang/String;
+#contentType()Ljava/lang/String;
+#accept()[Ljava/lang/String;

+###org/springframework/web/service/invoker/AbstractNamedValueArgumentResolver$NamedValueInfo
@6.0.0
+#<init>(Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;Z)V
+#update(Ljava/lang/String;ZLjava/lang/String;)Lorg/springframework/web/service/invoker/AbstractNamedValueArgumentResolver$NamedValueInfo;

+###org/springframework/web/service/invoker/HttpMethodArgumentResolver
@6.0.0
+#<init>()V
+#resolve(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/web/service/invoker/HttpRequestValues$Builder;)Z

+###org/springframework/web/service/invoker/HttpServiceProxyFactory
@6.0.0
+#createClient(Ljava/lang/Class;)Ljava/lang/Object;
+#builder(Lorg/springframework/web/service/invoker/HttpClientAdapter;)Lorg/springframework/web/service/invoker/HttpServiceProxyFactory$Builder;
+#builder()Lorg/springframework/web/service/invoker/HttpServiceProxyFactory$Builder;

+###org/springframework/web/service/invoker/RequestParamArgumentResolver
@6.0.0
+#<init>(Lorg/springframework/core/convert/ConversionService;)V

+###org/springframework/web/service/invoker/RequestHeaderArgumentResolver
@6.0.0
+#<init>(Lorg/springframework/core/convert/ConversionService;)V

+###org/springframework/web/service/invoker/RequestAttributeArgumentResolver
@6.0.0
+#<init>()V

+###org/springframework/web/service/invoker/HttpClientAdapter
@6.0.0
+#requestToVoid(Lorg/springframework/web/service/invoker/HttpRequestValues;)Lreactor/core/publisher/Mono;
+#requestToHeaders(Lorg/springframework/web/service/invoker/HttpRequestValues;)Lreactor/core/publisher/Mono;
+#requestToBody(Lorg/springframework/web/service/invoker/HttpRequestValues;Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;
+#requestToBodyFlux(Lorg/springframework/web/service/invoker/HttpRequestValues;Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Flux;
+#requestToBodilessEntity(Lorg/springframework/web/service/invoker/HttpRequestValues;)Lreactor/core/publisher/Mono;
+#requestToEntity(Lorg/springframework/web/service/invoker/HttpRequestValues;Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;
+#requestToEntityFlux(Lorg/springframework/web/service/invoker/HttpRequestValues;Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;

+###org/springframework/web/service/invoker/CookieValueArgumentResolver
@6.0.0
+#<init>(Lorg/springframework/core/convert/ConversionService;)V

+###org/springframework/web/service/invoker/PathVariableArgumentResolver
@6.0.0
+#<init>(Lorg/springframework/core/convert/ConversionService;)V

+###org/springframework/web/service/invoker/RequestPartArgumentResolver
@6.0.0
+#<init>(Lorg/springframework/core/ReactiveAdapterRegistry;)V

+###org/springframework/web/service/invoker/HttpServiceArgumentResolver
@6.0.0
+#resolve(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/web/service/invoker/HttpRequestValues$Builder;)Z

+###org/springframework/web/service/invoker/HttpServiceProxyFactory$Builder
@6.0.0
+#clientAdapter(Lorg/springframework/web/service/invoker/HttpClientAdapter;)Lorg/springframework/web/service/invoker/HttpServiceProxyFactory$Builder;
+#customArgumentResolver(Lorg/springframework/web/service/invoker/HttpServiceArgumentResolver;)Lorg/springframework/web/service/invoker/HttpServiceProxyFactory$Builder;
+#conversionService(Lorg/springframework/core/convert/ConversionService;)Lorg/springframework/web/service/invoker/HttpServiceProxyFactory$Builder;
+#embeddedValueResolver(Lorg/springframework/util/StringValueResolver;)Lorg/springframework/web/service/invoker/HttpServiceProxyFactory$Builder;
+#reactiveAdapterRegistry(Lorg/springframework/core/ReactiveAdapterRegistry;)Lorg/springframework/web/service/invoker/HttpServiceProxyFactory$Builder;
+#blockTimeout(Ljava/time/Duration;)Lorg/springframework/web/service/invoker/HttpServiceProxyFactory$Builder;
+#build()Lorg/springframework/web/service/invoker/HttpServiceProxyFactory;

+###org/springframework/web/service/invoker/RequestBodyArgumentResolver
@6.0.0
+#<init>(Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#resolve(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/web/service/invoker/HttpRequestValues$Builder;)Z

+###org/springframework/web/service/invoker/UrlArgumentResolver
@6.0.0
+#<init>()V
+#resolve(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/web/service/invoker/HttpRequestValues$Builder;)Z

+###org/springframework/web/service/invoker/HttpRequestValues$Builder
@6.0.0
+#<init>()V
+#setHttpMethod(Lorg/springframework/http/HttpMethod;)Lorg/springframework/web/service/invoker/HttpRequestValues$Builder;
+#setUri(Ljava/net/URI;)Lorg/springframework/web/service/invoker/HttpRequestValues$Builder;
+#setUriTemplate(Ljava/lang/String;)Lorg/springframework/web/service/invoker/HttpRequestValues$Builder;
+#setUriVariable(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/web/service/invoker/HttpRequestValues$Builder;
+#setAccept(Ljava/util/List;)Lorg/springframework/web/service/invoker/HttpRequestValues$Builder;
+#setContentType(Lorg/springframework/http/MediaType;)Lorg/springframework/web/service/invoker/HttpRequestValues$Builder;
+#addHeader(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/web/service/invoker/HttpRequestValues$Builder;
+#addCookie(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/web/service/invoker/HttpRequestValues$Builder;
+#addRequestParameter(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/web/service/invoker/HttpRequestValues$Builder;
+#addRequestPart(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/web/service/invoker/HttpRequestValues$Builder;
+#addRequestPart(Ljava/lang/String;Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;)Lorg/springframework/web/service/invoker/HttpRequestValues$Builder;
+#addAttribute(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/web/service/invoker/HttpRequestValues$Builder;
+#setBodyValue(Ljava/lang/Object;)V
+#setBody(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ParameterizedTypeReference;)V
+#build()Lorg/springframework/web/service/invoker/HttpRequestValues;

+###org/springframework/web/service/invoker/AbstractNamedValueArgumentResolver
@6.0.0
+#resolve(Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/web/service/invoker/HttpRequestValues$Builder;)Z

+###org/springframework/web/service/invoker/HttpRequestValues
@6.0.0
+#getHttpMethod()Lorg/springframework/http/HttpMethod;
+#getUri()Ljava/net/URI;
+#getUriTemplate()Ljava/lang/String;
+#getUriVariables()Ljava/util/Map;
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#getCookies()Lorg/springframework/util/MultiValueMap;
+#getAttributes()Ljava/util/Map;
+#getBodyValue()Ljava/lang/Object;
+#getBody()Lorg/reactivestreams/Publisher;
+#getBodyElementType()Lorg/springframework/core/ParameterizedTypeReference;
+#builder()Lorg/springframework/web/service/invoker/HttpRequestValues$Builder;

+###org/springframework/web/ErrorResponseException
@6.0.0
+#<init>(Lorg/springframework/http/HttpStatusCode;)V
+#<init>(Lorg/springframework/http/HttpStatusCode;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/http/HttpStatusCode;Lorg/springframework/http/ProblemDetail;Ljava/lang/Throwable;)V
+#<init>(Lorg/springframework/http/HttpStatusCode;Lorg/springframework/http/ProblemDetail;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
+#getStatusCode()Lorg/springframework/http/HttpStatusCode;
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#setType(Ljava/net/URI;)V
+#setTitle(Ljava/lang/String;)V
+#setDetail(Ljava/lang/String;)V
+#setInstance(Ljava/net/URI;)V
+#getBody()Lorg/springframework/http/ProblemDetail;
+#getDetailMessageCode()Ljava/lang/String;
+#getDetailMessageArguments()[Ljava/lang/Object;
+#getMessage()Ljava/lang/String;

+###org/springframework/web/ErrorResponse
@6.0.0
+#getStatusCode()Lorg/springframework/http/HttpStatusCode;
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#getBody()Lorg/springframework/http/ProblemDetail;
+#getDetailMessageCode()Ljava/lang/String;
+#getDetailMessageArguments()[Ljava/lang/Object;
+#getDetailMessageArguments(Lorg/springframework/context/MessageSource;Ljava/util/Locale;)[Ljava/lang/Object;
+#getTitleMessageCode()Ljava/lang/String;
+#updateAndGetBody(Lorg/springframework/context/MessageSource;Ljava/util/Locale;)Lorg/springframework/http/ProblemDetail;
+#getDefaultDetailMessageCode(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;
+#getDefaultTitleMessageCode(Ljava/lang/Class;)Ljava/lang/String;
+#create(Ljava/lang/Throwable;Lorg/springframework/http/HttpStatusCode;Ljava/lang/String;)Lorg/springframework/web/ErrorResponse;
+#builder(Ljava/lang/Throwable;Lorg/springframework/http/HttpStatusCode;Ljava/lang/String;)Lorg/springframework/web/ErrorResponse$Builder;

+###org/springframework/web/cors/reactive/PreFlightRequestWebFilter
@5.3.7
+#<init>(Lorg/springframework/web/cors/reactive/PreFlightRequestHandler;)V
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;

+###org/springframework/http/client/observation/ClientHttpObservationDocumentation$HighCardinalityKeyNames
@6.0.0
+#values()[Lorg/springframework/http/client/observation/ClientHttpObservationDocumentation$HighCardinalityKeyNames;
+#valueOf(Ljava/lang/String;)Lorg/springframework/http/client/observation/ClientHttpObservationDocumentation$HighCardinalityKeyNames;

+###org/springframework/http/client/observation/ClientHttpObservationDocumentation$LowCardinalityKeyNames
@6.0.0
+#values()[Lorg/springframework/http/client/observation/ClientHttpObservationDocumentation$LowCardinalityKeyNames;
+#valueOf(Ljava/lang/String;)Lorg/springframework/http/client/observation/ClientHttpObservationDocumentation$LowCardinalityKeyNames;

+###org/springframework/http/client/observation/ClientRequestObservationContext
@6.0.0
+#<init>(Lorg/springframework/http/client/ClientHttpRequest;)V
+#getUriTemplate()Ljava/lang/String;
+#setUriTemplate(Ljava/lang/String;)V

+###org/springframework/http/client/observation/ClientRequestObservationConvention
@6.0.0
+#supportsContext(Lio/micrometer/observation/Observation$Context;)Z

+###org/springframework/http/client/observation/DefaultClientRequestObservationConvention
@6.0.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getContextualName(Lorg/springframework/http/client/observation/ClientRequestObservationContext;)Ljava/lang/String;
+#getLowCardinalityKeyValues(Lorg/springframework/http/client/observation/ClientRequestObservationContext;)Lio/micrometer/common/KeyValues;
+#getHighCardinalityKeyValues(Lorg/springframework/http/client/observation/ClientRequestObservationContext;)Lio/micrometer/common/KeyValues;
+#getContextualName(Lio/micrometer/observation/Observation$Context;)Ljava/lang/String;
+#getHighCardinalityKeyValues(Lio/micrometer/observation/Observation$Context;)Lio/micrometer/common/KeyValues;
+#getLowCardinalityKeyValues(Lio/micrometer/observation/Observation$Context;)Lio/micrometer/common/KeyValues;

+###org/springframework/http/client/observation/ClientHttpObservationDocumentation
@6.0.0
+#values()[Lorg/springframework/http/client/observation/ClientHttpObservationDocumentation;
+#valueOf(Ljava/lang/String;)Lorg/springframework/http/client/observation/ClientHttpObservationDocumentation;

+###org/springframework/http/client/reactive/JdkClientHttpConnector
@6.0.0
+#<init>()V
+#<init>(Ljava/net/http/HttpClient;)V
+#<init>(Ljava/net/http/HttpClient$Builder;Lorg/springframework/http/client/reactive/JdkHttpClientResourceFactory;)V
+#setBufferFactory(Lorg/springframework/core/io/buffer/DataBufferFactory;)V
+#connect(Lorg/springframework/http/HttpMethod;Ljava/net/URI;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;

+###org/springframework/http/client/reactive/ReactorNetty2ResourceFactory
@6.0.0
+#<init>()V
+#setUseGlobalResources(Z)V
+#isUseGlobalResources()Z
+#addGlobalResourcesConsumer(Ljava/util/function/Consumer;)V
+#setConnectionProviderSupplier(Ljava/util/function/Supplier;)V
+#setConnectionProvider(Lreactor/netty5/resources/ConnectionProvider;)V
+#getConnectionProvider()Lreactor/netty5/resources/ConnectionProvider;
+#setLoopResourcesSupplier(Ljava/util/function/Supplier;)V
+#setLoopResources(Lreactor/netty5/resources/LoopResources;)V
+#getLoopResources()Lreactor/netty5/resources/LoopResources;
+#setShutdownQuietPeriod(Ljava/time/Duration;)V
+#setShutdownTimeout(Ljava/time/Duration;)V
+#afterPropertiesSet()V
+#destroy()V

+###org/springframework/http/client/reactive/JdkHttpClientResourceFactory
@6.0.0
+#<init>()V
+#setExecutor(Ljava/util/concurrent/Executor;)V
+#getExecutor()Ljava/util/concurrent/Executor;
+#setThreadPrefix(Ljava/lang/String;)V
+#afterPropertiesSet()V
+#destroy()V

+###org/springframework/http/client/reactive/ReactorNetty2ClientHttpConnector
@6.0.0
+#<init>()V
+#<init>(Lorg/springframework/http/client/reactive/ReactorNetty2ResourceFactory;Ljava/util/function/Function;)V
+#<init>(Lreactor/netty5/http/client/HttpClient;)V
+#connect(Lorg/springframework/http/HttpMethod;Ljava/net/URI;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;

+###org/springframework/http/codec/KotlinSerializationStringEncoder
@6.0.0
+#canEncode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#getEncodableMimeTypes()Ljava/util/List;
+#getEncodableMimeTypes(Lorg/springframework/core/ResolvableType;)Ljava/util/List;
+#encode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#encodeValue(Ljava/lang/Object;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;

+###org/springframework/http/codec/KotlinSerializationStringDecoder
@6.0.0
+#<init>(Lkotlinx/serialization/StringFormat;[Lorg/springframework/util/MimeType;)V
+#setMaxInMemorySize(I)V
+#getMaxInMemorySize()I
+#canDecode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#getDecodableMimeTypes()Ljava/util/List;
+#getDecodableMimeTypes(Lorg/springframework/core/ResolvableType;)Ljava/util/List;
+#decode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#decodeToMono(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Mono;

+###org/springframework/http/codec/KotlinSerializationBinaryDecoder
@6.0.0
+#<init>(Lkotlinx/serialization/BinaryFormat;[Lorg/springframework/util/MimeType;)V
+#setMaxInMemorySize(I)V
+#getMaxInMemorySize()I
+#canDecode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#getDecodableMimeTypes()Ljava/util/List;
+#getDecodableMimeTypes(Lorg/springframework/core/ResolvableType;)Ljava/util/List;
+#decode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#decodeToMono(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Mono;

+###org/springframework/http/codec/CodecConfigurer$MultipartCodecs
@6.0.3
+#encoder(Lorg/springframework/core/codec/Encoder;)Lorg/springframework/http/codec/CodecConfigurer$MultipartCodecs;
+#writer(Lorg/springframework/http/codec/HttpMessageWriter;)Lorg/springframework/http/codec/CodecConfigurer$MultipartCodecs;

+###org/springframework/http/codec/support/BaseDefaultCodecs$DefaultMultipartCodecs
@6.0.3
+#encoder(Lorg/springframework/core/codec/Encoder;)Lorg/springframework/http/codec/CodecConfigurer$MultipartCodecs;
+#writer(Lorg/springframework/http/codec/HttpMessageWriter;)Lorg/springframework/http/codec/CodecConfigurer$MultipartCodecs;

+###org/springframework/http/codec/cbor/KotlinSerializationCborDecoder
@6.0.0
+#<init>()V
+#<init>(Lkotlinx/serialization/cbor/Cbor;)V

+###org/springframework/http/codec/cbor/KotlinSerializationCborEncoder
@6.0.0
+#<init>()V
+#<init>(Lkotlinx/serialization/cbor/Cbor;)V

+###org/springframework/http/codec/KotlinSerializationSupport
@6.0.0

+###org/springframework/http/codec/multipart/FilePartEvent
@6.0.0
+#filename()Ljava/lang/String;
+#create(Ljava/lang/String;Lorg/springframework/core/io/Resource;)Lreactor/core/publisher/Flux;
+#create(Ljava/lang/String;Lorg/springframework/core/io/Resource;Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
+#create(Ljava/lang/String;Ljava/nio/file/Path;)Lreactor/core/publisher/Flux;
+#create(Ljava/lang/String;Ljava/nio/file/Path;Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
+#create(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/http/MediaType;Lreactor/core/publisher/Flux;)Lreactor/core/publisher/Flux;
+#create(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/http/MediaType;Lreactor/core/publisher/Flux;Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;

+###org/springframework/http/codec/multipart/FormPartEvent
@6.0.0
+#value()Ljava/lang/String;
+#create(Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#create(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;

+###org/springframework/http/codec/multipart/PartEvent
@6.0.0
+#name()Ljava/lang/String;
+#headers()Lorg/springframework/http/HttpHeaders;
+#content()Lorg/springframework/core/io/buffer/DataBuffer;
+#isLast()Z

+###org/springframework/http/codec/multipart/PartEventHttpMessageWriter
@6.0.0
+#<init>()V
+#canWrite(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;)Z
+#write(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;Lorg/springframework/http/ReactiveHttpOutputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;

+###org/springframework/http/codec/multipart/PartEventHttpMessageReader
@6.0.0
+#<init>()V
+#getMaxInMemorySize()I
+#setMaxInMemorySize(I)V
+#setMaxHeadersSize(I)V
+#setHeadersCharset(Ljava/nio/charset/Charset;)V
+#getReadableMediaTypes()Ljava/util/List;
+#canRead(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/MediaType;)Z
+#readMono(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/ReactiveHttpInputMessage;Ljava/util/Map;)Lreactor/core/publisher/Mono;
+#read(Lorg/springframework/core/ResolvableType;Lorg/springframework/http/ReactiveHttpInputMessage;Ljava/util/Map;)Lreactor/core/publisher/Flux;

+###org/springframework/http/codec/KotlinSerializationBinaryEncoder
@6.0.0
+#canEncode(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
+#getEncodableMimeTypes()Ljava/util/List;
+#getEncodableMimeTypes(Lorg/springframework/core/ResolvableType;)Ljava/util/List;
+#encode(Lorg/reactivestreams/Publisher;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
+#encodeValue(Ljava/lang/Object;Lorg/springframework/core/io/buffer/DataBufferFactory;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lorg/springframework/core/io/buffer/DataBuffer;

+###org/springframework/http/codec/protobuf/KotlinSerializationProtobufEncoder
@6.0.0
+#<init>()V
+#<init>(Lkotlinx/serialization/protobuf/ProtoBuf;)V

+###org/springframework/http/codec/protobuf/KotlinSerializationProtobufDecoder
@6.0.0
+#<init>()V
+#<init>(Lkotlinx/serialization/protobuf/ProtoBuf;)V

+###org/springframework/http/ProblemDetail
@6.0.0
+#setType(Ljava/net/URI;)V
+#setTitle(Ljava/lang/String;)V
+#setStatus(Lorg/springframework/http/HttpStatus;)V
+#setStatus(I)V
+#setDetail(Ljava/lang/String;)V
+#setInstance(Ljava/net/URI;)V
+#setProperty(Ljava/lang/String;Ljava/lang/Object;)V
+#getType()Ljava/net/URI;
+#getTitle()Ljava/lang/String;
+#getStatus()I
+#getDetail()Ljava/lang/String;
+#getInstance()Ljava/net/URI;
+#getProperties()Ljava/util/Map;
+#toString()Ljava/lang/String;
+#forStatus(Lorg/springframework/http/HttpStatusCode;)Lorg/springframework/http/ProblemDetail;
+#forStatus(I)Lorg/springframework/http/ProblemDetail;
+#forStatusAndDetail(Lorg/springframework/http/HttpStatusCode;Ljava/lang/String;)Lorg/springframework/http/ProblemDetail;
@6.0.3
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/http/server/observation/ServerHttpObservationDocumentation$HighCardinalityKeyNames
@6.0.0
+#values()[Lorg/springframework/http/server/observation/ServerHttpObservationDocumentation$HighCardinalityKeyNames;
+#valueOf(Ljava/lang/String;)Lorg/springframework/http/server/observation/ServerHttpObservationDocumentation$HighCardinalityKeyNames;

+###org/springframework/http/server/observation/ServerRequestObservationConvention
@6.0.0
+#supportsContext(Lio/micrometer/observation/Observation$Context;)Z

+###org/springframework/http/server/observation/DefaultServerRequestObservationConvention
@6.0.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getContextualName(Lorg/springframework/http/server/observation/ServerRequestObservationContext;)Ljava/lang/String;
+#getLowCardinalityKeyValues(Lorg/springframework/http/server/observation/ServerRequestObservationContext;)Lio/micrometer/common/KeyValues;
+#getHighCardinalityKeyValues(Lorg/springframework/http/server/observation/ServerRequestObservationContext;)Lio/micrometer/common/KeyValues;
+#getContextualName(Lio/micrometer/observation/Observation$Context;)Ljava/lang/String;
+#getHighCardinalityKeyValues(Lio/micrometer/observation/Observation$Context;)Lio/micrometer/common/KeyValues;
+#getLowCardinalityKeyValues(Lio/micrometer/observation/Observation$Context;)Lio/micrometer/common/KeyValues;

+###org/springframework/http/server/observation/ServerHttpObservationDocumentation$LowCardinalityKeyNames
@6.0.0
+#values()[Lorg/springframework/http/server/observation/ServerHttpObservationDocumentation$LowCardinalityKeyNames;
+#valueOf(Ljava/lang/String;)Lorg/springframework/http/server/observation/ServerHttpObservationDocumentation$LowCardinalityKeyNames;

+###org/springframework/http/server/observation/ServerRequestObservationContext
@6.0.0
+#<init>(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
+#getPathPattern()Ljava/lang/String;
+#setPathPattern(Ljava/lang/String;)V

+###org/springframework/http/server/observation/ServerHttpObservationDocumentation
@6.0.0
+#values()[Lorg/springframework/http/server/observation/ServerHttpObservationDocumentation;
+#valueOf(Ljava/lang/String;)Lorg/springframework/http/server/observation/ServerHttpObservationDocumentation;

+###org/springframework/http/server/reactive/ReactorNetty2HttpHandlerAdapter
@6.0.0
+#<init>(Lorg/springframework/http/server/reactive/HttpHandler;)V
+#apply(Lreactor/netty5/http/server/HttpServerRequest;Lreactor/netty5/http/server/HttpServerResponse;)Lreactor/core/publisher/Mono;
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/http/server/reactive/observation/ServerHttpObservationDocumentation$HighCardinalityKeyNames
@6.0.0
+#values()[Lorg/springframework/http/server/reactive/observation/ServerHttpObservationDocumentation$HighCardinalityKeyNames;
+#valueOf(Ljava/lang/String;)Lorg/springframework/http/server/reactive/observation/ServerHttpObservationDocumentation$HighCardinalityKeyNames;

+###org/springframework/http/server/reactive/observation/ServerRequestObservationConvention
@6.0.0
+#supportsContext(Lio/micrometer/observation/Observation$Context;)Z

+###org/springframework/http/server/reactive/observation/DefaultServerRequestObservationConvention
@6.0.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getContextualName(Lorg/springframework/http/server/reactive/observation/ServerRequestObservationContext;)Ljava/lang/String;
+#getLowCardinalityKeyValues(Lorg/springframework/http/server/reactive/observation/ServerRequestObservationContext;)Lio/micrometer/common/KeyValues;
+#getHighCardinalityKeyValues(Lorg/springframework/http/server/reactive/observation/ServerRequestObservationContext;)Lio/micrometer/common/KeyValues;
+#getContextualName(Lio/micrometer/observation/Observation$Context;)Ljava/lang/String;
+#getHighCardinalityKeyValues(Lio/micrometer/observation/Observation$Context;)Lio/micrometer/common/KeyValues;
+#getLowCardinalityKeyValues(Lio/micrometer/observation/Observation$Context;)Lio/micrometer/common/KeyValues;

+###org/springframework/http/server/reactive/observation/ServerHttpObservationDocumentation$LowCardinalityKeyNames
@6.0.0
+#values()[Lorg/springframework/http/server/reactive/observation/ServerHttpObservationDocumentation$LowCardinalityKeyNames;
+#valueOf(Ljava/lang/String;)Lorg/springframework/http/server/reactive/observation/ServerHttpObservationDocumentation$LowCardinalityKeyNames;

+###org/springframework/http/server/reactive/observation/ServerRequestObservationContext
@6.0.0
+#<init>(Lorg/springframework/http/server/reactive/ServerHttpRequest;Lorg/springframework/http/server/reactive/ServerHttpResponse;Ljava/util/Map;)V
+#getAttributes()Ljava/util/Map;
+#getPathPattern()Ljava/lang/String;
+#setPathPattern(Ljava/lang/String;)V
+#isConnectionAborted()Z
+#setConnectionAborted(Z)V

+###org/springframework/http/server/reactive/observation/ServerHttpObservationDocumentation
@6.0.0
+#values()[Lorg/springframework/http/server/reactive/observation/ServerHttpObservationDocumentation;
+#valueOf(Ljava/lang/String;)Lorg/springframework/http/server/reactive/observation/ServerHttpObservationDocumentation;

+###org/springframework/http/converter/KotlinSerializationBinaryHttpMessageConverter
@6.0.0

+###org/springframework/http/converter/json/ProblemDetailJacksonXmlMixin
@6.0.5
+#getType()Ljava/net/URI;
+#getTitle()Ljava/lang/String;
+#getStatus()I
+#getDetail()Ljava/lang/String;
+#getInstance()Ljava/net/URI;
+#setProperty(Ljava/lang/String;Ljava/lang/Object;)V
+#getProperties()Ljava/util/Map;

+###org/springframework/http/converter/json/ProblemDetailJacksonMixin
@6.0.0
+#setProperty(Ljava/lang/String;Ljava/lang/Object;)V
+#getProperties()Ljava/util/Map;

+###org/springframework/http/converter/cbor/KotlinSerializationCborHttpMessageConverter
@6.0.0
+#<init>()V
+#<init>(Lkotlinx/serialization/cbor/Cbor;)V

+###org/springframework/http/converter/AbstractKotlinSerializationHttpMessageConverter
@6.0.0
+#canRead(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#canWrite(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/MediaType;)Z
+#read(Ljava/lang/reflect/Type;Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;

+###org/springframework/http/converter/KotlinSerializationStringHttpMessageConverter
@6.0.0

+###org/springframework/http/converter/protobuf/KotlinSerializationProtobufHttpMessageConverter
@6.0.0
+#<init>()V
+#<init>(Lkotlinx/serialization/protobuf/ProtoBuf;)V

+###org/springframework/http/HttpStatusCode
@6.0.0
+#value()I
+#is1xxInformational()Z
+#is2xxSuccessful()Z
+#is3xxRedirection()Z
+#is4xxClientError()Z
+#is5xxServerError()Z
+#isError()Z
+#valueOf(I)Lorg/springframework/http/HttpStatusCode;
@6.0.5
+#isSameCodeAs(Lorg/springframework/http/HttpStatusCode;)Z

+###org/springframework/web/server/CoWebFilter
@6.0.5
+#<init>()V
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;

+###org/springframework/web/server/CoWebFilterChain
@6.0.5
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;

+###org/springframework/web/server/CoWebFilter$filter$1$1
@6.0.5
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;

+###org/springframework/web/context/scope/AbstractRequestAttributesScope
@2.0-m5
+#<init>()V
+#get(Ljava/lang/String;Lorg/springframework/beans/factory/ObjectFactory;)Ljava/lang/Object;
+#remove(Ljava/lang/String;)Ljava/lang/Object;
@2.0
-###org/springframework/web/context/scope/AbstractRequestAttributesScope

+###org/springframework/web/context/scope/RequestScope
@2.0-m5
+#<init>()V
@2.0
-###org/springframework/web/context/scope/RequestScope

+###org/springframework/web/context/scope/SessionScope
@2.0-m5
+#<init>()V
+#<init>(Z)V
+#get(Ljava/lang/String;Lorg/springframework/beans/factory/ObjectFactory;)Ljava/lang/Object;
+#remove(Ljava/lang/String;)Ljava/lang/Object;
@2.0
-###org/springframework/web/context/scope/SessionScope

+###org/springframework/web/util/RequestHolder
@1.2.4
+#<init>()V
+#bind(Ljavax/servlet/http/HttpServletRequest;)V
+#clear()V
+#currentRequest()Ljavax/servlet/http/HttpServletRequest;
+#currentSession()Ljavax/servlet/http/HttpSession;
@1.2.5
-###org/springframework/web/util/RequestHolder

+###org/springframework/web/struts/AutowiringRequestProcessor
@2.0-m4
+#<init>()V
+#init(Lorg/apache/struts/action/ActionServlet;Lorg/apache/struts/config/ModuleConfig;)V
@2.0-m5
-###org/springframework/web/struts/AutowiringRequestProcessor

+###org/springframework/web/struts/AutowiringTilesRequestProcessor
@2.0-m4
+#<init>()V
+#init(Lorg/apache/struts/action/ActionServlet;Lorg/apache/struts/config/ModuleConfig;)V
@2.0-m5
-###org/springframework/web/struts/AutowiringTilesRequestProcessor

+###org/springframework/web/service/invoker/HttpServiceProxyFactoryExtensionsKt
@6.0.6
+#createClient(Lorg/springframework/web/service/invoker/HttpServiceProxyFactory;)Ljava/lang/Object;
