
+###org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore
@1.10
+#<init>(Ljava/io/File;)V
+#getInputStream()Ljava/io/InputStream;
+#closeForWriting()V
+#writeOut([BII)V
+#close()V
@1.22
+#<init>(Ljava/nio/file/Path;)V

+###org/apache/commons/compress/utils/CRC32VerifyingInputStream
@1.6
+#<init>(Ljava/io/InputStream;JI)V
+#read()I
+#read([B)I
+#read([BII)I
+#skip(J)J
+#close()V
@1.7
+#<init>(Ljava/io/InputStream;JJ)V
-#read()I
-#read([B)I
-#read([BII)I
-#skip(J)J
-#close()V

+###org/apache/commons/compress/utils/CharsetNames
@1.4
+#<init>()V

+###org/apache/commons/compress/utils/ServiceLoaderIterator
@1.13
+#<init>(Ljava/lang/Class;)V
+#<init>(Ljava/lang/Class;Ljava/lang/ClassLoader;)V
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V

+###org/apache/commons/compress/utils/ArchiveUtils
@1.0
+#toString(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Ljava/lang/String;
+#matchAsciiBuffer(Ljava/lang/String;[BII)Z
+#matchAsciiBuffer(Ljava/lang/String;[B)Z
+#toAsciiBytes(Ljava/lang/String;)[B
+#toAsciiString([B)Ljava/lang/String;
+#isEqual([BII[BIIZ)Z
+#isEqual([BII[BII)Z
+#isEqual([B[B)Z
+#isEqual([B[BZ)Z
+#isEqualWithNull([BII[BII)Z
@1.1
+#toAsciiString([BII)Ljava/lang/String;
@1.6
+#isArrayZero([BI)Z
@1.12
+#sanitize(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/commons/compress/parallel/ScatterGatherBackingStore
@1.10
+#getInputStream()Ljava/io/InputStream;
+#writeOut([BII)V
+#closeForWriting()V

+###org/apache/commons/compress/utils/BitInputStream
@1.10
+#<init>(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V
+#close()V
+#clearBitCache()V
+#readBits(I)J
@1.16
+#bitsCached()I
+#bitsAvailable()J
+#alignWithByteBoundary()V
@1.17
+#getBytesRead()J

+###org/apache/commons/compress/utils/ByteUtils$ByteSupplier
@1.14
+#getAsByte()I

+###org/apache/commons/compress/utils/SkipShieldingInputStream
@1.17
+#<init>(Ljava/io/InputStream;)V
+#skip(J)J

+###org/apache/commons/compress/changes/ChangeSetResults
@1.0
+#<init>()V
+#getAddedFromChangeSet()Ljava/util/List;
+#getAddedFromStream()Ljava/util/List;
+#getDeleted()Ljava/util/List;

+###org/apache/commons/compress/changes/ChangeSetPerformer
@1.0
+#<init>(Lorg/apache/commons/compress/changes/ChangeSet;)V
+#perform(Lorg/apache/commons/compress/archivers/ArchiveInputStream;Lorg/apache/commons/compress/archivers/ArchiveOutputStream;)Lorg/apache/commons/compress/changes/ChangeSetResults;
@1.5
+#perform(Lorg/apache/commons/compress/archivers/zip/ZipFile;Lorg/apache/commons/compress/archivers/ArchiveOutputStream;)Lorg/apache/commons/compress/changes/ChangeSetResults;

+###org/apache/commons/compress/archivers/dump/DumpArchiveSummary
@1.3
+#getDumpDate()Ljava/util/Date;
+#setDumpDate(Ljava/util/Date;)V
+#getPreviousDumpDate()Ljava/util/Date;
+#setPreviousDumpDate(Ljava/util/Date;)V
+#getVolume()I
+#setVolume(I)V
+#getLevel()I
+#setLevel(I)V
+#getLabel()Ljava/lang/String;
+#setLabel(Ljava/lang/String;)V
+#getFilesystem()Ljava/lang/String;
+#setFilesystem(Ljava/lang/String;)V
+#getDevname()Ljava/lang/String;
+#setDevname(Ljava/lang/String;)V
+#getHostname()Ljava/lang/String;
+#setHostname(Ljava/lang/String;)V
+#getFlags()I
+#setFlags(I)V
+#getFirstRecord()I
+#setFirstRecord(I)V
+#getNTRec()I
+#setNTRec(I)V
+#isNewHeader()Z
+#isNewInode()Z
+#isCompressed()Z
+#isMetaDataOnly()Z
+#isExtendedAttributes()Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/apache/commons/compress/archivers/dump/DumpArchiveEntry$PERMISSION
@1.3
+#values()[Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry$PERMISSION;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry$PERMISSION;
+#find(I)Ljava/util/Set;

+###org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE
@1.3
+#values()[Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;
+#find(I)Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;

+###org/apache/commons/compress/archivers/dump/DumpArchiveEntry
@1.3
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getSimpleName()Ljava/lang/String;
+#getIno()I
+#getNlink()I
+#setNlink(I)V
+#getCreationTime()Ljava/util/Date;
+#setCreationTime(Ljava/util/Date;)V
+#getGeneration()I
+#setGeneration(I)V
+#isDeleted()Z
+#setDeleted(Z)V
+#getOffset()J
+#setOffset(J)V
+#getVolume()I
+#setVolume(I)V
+#getHeaderType()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;
+#getHeaderCount()I
+#getHeaderHoles()I
+#isSparseRecord(I)Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#getLastModifiedDate()Ljava/util/Date;
+#isDirectory()Z
+#isFile()Z
+#isSocket()Z
+#isChrDev()Z
+#isBlkDev()Z
+#isFifo()Z
+#getType()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry$TYPE;
+#setType(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry$TYPE;)V
+#getMode()I
+#setMode(I)V
+#getPermissions()Ljava/util/Set;
+#getSize()J
+#setSize(J)V
+#setLastModifiedDate(Ljava/util/Date;)V
+#getAccessTime()Ljava/util/Date;
+#setAccessTime(Ljava/util/Date;)V
+#getUserId()I
+#setUserId(I)V
+#getGroupId()I
+#setGroupId(I)V

+###org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier
@1.13
+#get()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;

+###org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp
@1.5
+#<init>()V
+#getHeaderId()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getLocalFileDataLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getCentralDirectoryLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getLocalFileDataData()[B
+#getCentralDirectoryData()[B
+#parseFromLocalFileData([BII)V
+#parseFromCentralDirectoryData([BII)V
+#setFlags(B)V
+#getFlags()B
+#isBit0_modifyTimePresent()Z
+#isBit1_accessTimePresent()Z
+#isBit2_createTimePresent()Z
+#getModifyTime()Lorg/apache/commons/compress/archivers/zip/ZipLong;
+#getAccessTime()Lorg/apache/commons/compress/archivers/zip/ZipLong;
+#getCreateTime()Lorg/apache/commons/compress/archivers/zip/ZipLong;
+#getModifyJavaTime()Ljava/util/Date;
+#getAccessJavaTime()Ljava/util/Date;
+#getCreateJavaTime()Ljava/util/Date;
+#setModifyTime(Lorg/apache/commons/compress/archivers/zip/ZipLong;)V
+#setAccessTime(Lorg/apache/commons/compress/archivers/zip/ZipLong;)V
+#setCreateTime(Lorg/apache/commons/compress/archivers/zip/ZipLong;)V
+#setModifyJavaTime(Ljava/util/Date;)V
+#setAccessJavaTime(Ljava/util/Date;)V
+#setCreateJavaTime(Ljava/util/Date;)V
+#toString()Ljava/lang/String;
+#clone()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature
@1.1
+#toString()Ljava/lang/String;

+###org/apache/commons/compress/archivers/zip/ZipUtil
@1.0
+#<init>()V
+#toDosTime(Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipLong;
+#toDosTime(J)[B
+#adjustToLong(I)J
+#fromDosTime(Lorg/apache/commons/compress/archivers/zip/ZipLong;)Ljava/util/Date;
+#dosToJavaTime(J)J
@1.5
+#reverse([B)[B
+#signedByteToUnsignedInt(B)I
+#unsignedIntToSignedByte(I)B
@1.10
+#toDosTime(J[BI)V

+###org/apache/commons/compress/archivers/zip/ZipEncoding
@1.4
+#canEncode(Ljava/lang/String;)Z
+#encode(Ljava/lang/String;)Ljava/nio/ByteBuffer;
+#decode([B)Ljava/lang/String;

+###org/apache/commons/compress/archivers/zip/ZipLong
@1.0
+#<init>(J)V
+#<init>([B)V
+#<init>([BI)V
+#getBytes()[B
+#getValue()J
+#getBytes(J)[B
+#getValue([BI)J
+#getValue([B)J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#clone()Ljava/lang/Object;
@1.2
+#toString()Ljava/lang/String;
@1.10
+#putLong(J[BI)V
+#putLong([BI)V
@1.15
+#<init>(I)V
+#getIntValue()I

+###org/apache/commons/compress/archivers/zip/CharsetAccessor
@1.15
+#getCharset()Ljava/nio/charset/Charset;

+###org/apache/commons/compress/archivers/zip/PKWareExtraHeader
@1.11
+#getHeaderId()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#setLocalFileDataData([B)V
+#getLocalFileDataLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getLocalFileDataData()[B
+#setCentralDirectoryData([B)V
+#getCentralDirectoryLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getCentralDirectoryData()[B
+#parseFromLocalFileData([BII)V
+#parseFromCentralDirectoryData([BII)V

+###org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator
@1.10
+#<init>()V
+#<init>(Ljava/util/concurrent/ExecutorService;)V
+#<init>(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)V
+#addArchiveEntry(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)V
+#submit(Ljava/util/concurrent/Callable;)V
+#createCallable(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable;
+#writeTo(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V
+#getStatisticsMessage()Lorg/apache/commons/compress/archivers/zip/ScatterStatistics;
@1.13
+#addArchiveEntry(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)V
+#createCallable(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;
@1.19
+#submitStreamAwareCallable(Ljava/util/concurrent/Callable;)V
@1.21
+#<init>(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;I)V

+###org/apache/commons/compress/archivers/zip/ZipShort
@1.0
+#<init>(I)V
+#<init>([B)V
+#<init>([BI)V
+#getBytes()[B
+#getValue()I
+#getBytes(I)[B
+#getValue([BI)I
+#getValue([B)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#clone()Ljava/lang/Object;
@1.2
+#toString()Ljava/lang/String;
@1.10
+#putShort(I[BI)V

+###org/apache/commons/compress/archivers/zip/UnrecognizedExtraField
@1.0
+#<init>()V
+#setHeaderId(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V
+#getHeaderId()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#setLocalFileDataData([B)V
+#getLocalFileDataLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getLocalFileDataData()[B
+#setCentralDirectoryData([B)V
+#getCentralDirectoryLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getCentralDirectoryData()[B
+#parseFromLocalFileData([BII)V
+#parseFromCentralDirectoryData([BII)V

+###org/apache/commons/compress/archivers/zip/ScatterStatistics
@1.10
+#getCompressionElapsed()J
+#getMergingElapsed()J
+#toString()Ljava/lang/String;

+###org/apache/commons/compress/archivers/zip/ZipExtraField
@1.0
+#getHeaderId()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getLocalFileDataLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getCentralDirectoryLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getLocalFileDataData()[B
+#getCentralDirectoryData()[B
+#parseFromLocalFileData([BII)V
+#parseFromCentralDirectoryData([BII)V

+###org/apache/commons/compress/archivers/zip/ScatterZipOutputStream
@1.10
+#<init>(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;Lorg/apache/commons/compress/archivers/zip/StreamCompressor;)V
+#addArchiveEntry(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)V
+#writeTo(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V
+#close()V
+#fileBased(Ljava/io/File;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;
+#fileBased(Ljava/io/File;I)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;
@1.19
+#zipEntryWriter()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;
@1.22
+#pathBased(Ljava/nio/file/Path;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;
+#pathBased(Ljava/nio/file/Path;I)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;

+###org/apache/commons/compress/archivers/sevenz/SevenZFileOptions
@1.19
+#builder()Lorg/apache/commons/compress/archivers/sevenz/SevenZFileOptions$Builder;
+#getMaxMemoryLimitInKb()I
+#getUseDefaultNameForUnnamedEntries()Z
@1.21
+#getTryToRecoverBrokenArchives()Z

+###org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream
@1.0
+#<init>(Ljava/io/OutputStream;S)V
+#<init>(Ljava/io/OutputStream;)V
+#putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
+#closeArchiveEntry()V
+#write([BII)V
+#finish()V
+#close()V
+#createArchiveEntry(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;
@1.1
+#<init>(Ljava/io/OutputStream;SI)V
@1.6
+#<init>(Ljava/io/OutputStream;SILjava/lang/String;)V
+#<init>(Ljava/io/OutputStream;Ljava/lang/String;)V
@1.21
+#createArchiveEntry(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Lorg/apache/commons/compress/archivers/ArchiveEntry;

+###org/apache/commons/compress/archivers/EntryStreamOffsets
@1.14
+#getDataOffset()J
+#isStreamContiguous()Z

+###org/apache/commons/compress/archivers/tar/TarArchiveEntry
@1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;B)V
+#<init>(Ljava/io/File;)V
+#<init>(Ljava/io/File;Ljava/lang/String;)V
+#<init>([B)V
+#equals(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#isDescendent(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Z
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#setMode(I)V
+#getLinkName()Ljava/lang/String;
+#getUserId()I
+#setUserId(I)V
+#getGroupId()I
+#setGroupId(I)V
+#getUserName()Ljava/lang/String;
+#setUserName(Ljava/lang/String;)V
+#getGroupName()Ljava/lang/String;
+#setGroupName(Ljava/lang/String;)V
+#setIds(II)V
+#setNames(Ljava/lang/String;Ljava/lang/String;)V
+#setModTime(J)V
+#setModTime(Ljava/util/Date;)V
+#getModTime()Ljava/util/Date;
+#getFile()Ljava/io/File;
+#getMode()I
+#getSize()J
+#setSize(J)V
+#isGNULongNameEntry()Z
+#isDirectory()Z
+#getDirectoryEntries()[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
+#writeEntryHeader([B)V
+#parseTarHeader([B)V
@1.1
+#<init>(Ljava/lang/String;Z)V
+#setLinkName(Ljava/lang/String;)V
+#getLastModifiedDate()Ljava/util/Date;
+#isPaxHeader()Z
+#isGlobalPaxHeader()Z
@1.2
+#isExtended()Z
+#getRealSize()J
+#isGNUSparse()Z
+#isFile()Z
+#isSymbolicLink()Z
+#isLink()Z
+#isCharacterDevice()Z
+#isBlockDevice()Z
+#isFIFO()Z
@1.4
+#<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
+#getDevMajor()I
+#setDevMajor(I)V
+#getDevMinor()I
+#setDevMinor(I)V
+#writeEntryHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
+#parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V
@1.5
+#<init>(Ljava/lang/String;BZ)V
+#isCheckSumOK()Z
@1.6
+#isGNULongLinkEntry()Z
@1.10
*#getUserId()I[deprecated]
+#getLongUserId()J
+#setUserId(J)V
*#getGroupId()I[deprecated]
+#getLongGroupId()J
+#setGroupId(J)V
@1.11
+#isOldGNUSparse()Z
+#isPaxGNUSparse()Z
+#isStarSparse()Z
+#isSparse()Z
@1.15
+#getExtraPaxHeaders()Ljava/util/Map;
+#clearExtraPaxHeaders()V
+#addPaxHeader(Ljava/lang/String;Ljava/lang/String;)V
+#getExtraPaxHeader(Ljava/lang/String;)Ljava/lang/String;
@1.19
+#<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
@1.20
+#setSparseHeaders(Ljava/util/List;)V
+#getSparseHeaders()Ljava/util/List;
+#isPaxGNU1XSparse()Z
@1.21
+#<init>(Ljava/nio/file/Path;)V
+#<init>(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V
+#<init>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;ZJ)V
+#setModTime(Ljava/nio/file/attribute/FileTime;)V
+#getPath()Ljava/nio/file/Path;
+#getOrderedSparseHeaders()Ljava/util/List;
+#getDataOffset()J
+#setDataOffset(J)V
+#isStreamContiguous()Z
@1.22
+#<init>(Ljava/util/Map;[BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V
+#<init>(Ljava/util/Map;[BLorg/apache/commons/compress/archivers/zip/ZipEncoding;ZJ)V
+#getCreationTime()Ljava/nio/file/attribute/FileTime;
+#getLastAccessTime()Ljava/nio/file/attribute/FileTime;
+#getLastModifiedTime()Ljava/nio/file/attribute/FileTime;
+#getStatusChangeTime()Ljava/nio/file/attribute/FileTime;
+#setCreationTime(Ljava/nio/file/attribute/FileTime;)V
+#setLastAccessTime(Ljava/nio/file/attribute/FileTime;)V
+#setLastModifiedTime(Ljava/nio/file/attribute/FileTime;)V
+#setStatusChangeTime(Ljava/nio/file/attribute/FileTime;)V

+###org/apache/commons/compress/archivers/ar/ArArchiveOutputStream
@1.0
+#<init>(Ljava/io/OutputStream;)V
+#closeArchiveEntry()V
+#putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
+#write([BII)V
+#close()V
+#createArchiveEntry(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;
+#finish()V
@1.3
+#setLongFileMode(I)V
@1.21
+#createArchiveEntry(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Lorg/apache/commons/compress/archivers/ArchiveEntry;

+###org/apache/commons/compress/compressors/CompressorStreamFactory
@1.0
+#<init>()V
+#createCompressorInputStream(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/compressors/CompressorInputStream;
+#createCompressorOutputStream(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/compressors/CompressorOutputStream;
@1.1
+#createCompressorInputStream(Ljava/io/InputStream;)Lorg/apache/commons/compress/compressors/CompressorInputStream;
@1.5
+#setDecompressConcatenated(Z)V
@1.10
+#<init>(Z)V
*#setDecompressConcatenated(Z)V[deprecated]
@1.13
+#findAvailableCompressorInputStreamProviders()Ljava/util/SortedMap;
+#findAvailableCompressorOutputStreamProviders()Ljava/util/SortedMap;
+#getBzip2()Ljava/lang/String;
+#getDeflate()Ljava/lang/String;
+#getGzip()Ljava/lang/String;
+#getLzma()Ljava/lang/String;
+#getPack200()Ljava/lang/String;
+#getSingleton()Lorg/apache/commons/compress/compressors/CompressorStreamFactory;
+#getSnappyFramed()Ljava/lang/String;
+#getSnappyRaw()Ljava/lang/String;
+#getXz()Ljava/lang/String;
+#getZ()Ljava/lang/String;
+#createCompressorInputStream(Ljava/lang/String;Ljava/io/InputStream;Z)Lorg/apache/commons/compress/compressors/CompressorInputStream;
+#getCompressorInputStreamProviders()Ljava/util/SortedMap;
+#getCompressorOutputStreamProviders()Ljava/util/SortedMap;
+#getDecompressUntilEOF()Ljava/lang/Boolean;
+#getInputStreamCompressorNames()Ljava/util/Set;
+#getOutputStreamCompressorNames()Ljava/util/Set;
@1.14
+#getBrotli()Ljava/lang/String;
+#getLZ4Framed()Ljava/lang/String;
+#getLZ4Block()Ljava/lang/String;
+#<init>(ZI)V
+#detect(Ljava/io/InputStream;)Ljava/lang/String;
@1.16
+#getDeflate64()Ljava/lang/String;
+#getZstandard()Ljava/lang/String;

+###org/apache/commons/compress/compressors/lz4/XXHash32
@1.14
+#<init>()V
+#<init>(I)V
+#reset()V
+#update(I)V
+#update([BII)V
+#getValue()J

+###org/apache/commons/compress/compressors/CompressorOutputStream
@1.0
+#<init>()V

+###org/apache/commons/compress/compressors/xz/XZUtils
@1.4
+#isCompressedFilename(Ljava/lang/String;)Z
+#getUncompressedFilename(Ljava/lang/String;)Ljava/lang/String;
+#getCompressedFilename(Ljava/lang/String;)Ljava/lang/String;
@1.5
+#isXZCompressionAvailable()Z
@1.9
+#matches([BI)Z
+#setCacheXZAvailablity(Z)V

+###org/apache/commons/compress/compressors/gzip/GzipParameters
@1.7
+#<init>()V
+#getCompressionLevel()I
+#setCompressionLevel(I)V
+#getModificationTime()J
+#setModificationTime(J)V
+#getFilename()Ljava/lang/String;
+#setFilename(Ljava/lang/String;)V
+#getComment()Ljava/lang/String;
+#setComment(Ljava/lang/String;)V
+#getOperatingSystem()I
+#setOperatingSystem(I)V
@1.21
+#getBufferSize()I
+#setBufferSize(I)V

+###org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream
@1.14
+#<init>(Ljava/io/InputStream;)V
+#available()I
+#close()V
+#read([B)I
+#skip(J)J
+#mark(I)V
+#markSupported()Z
+#read()I
+#read([BII)I
+#toString()Ljava/lang/String;
+#reset()V
@1.17
+#getCompressedCount()J

+###org/apache/commons/compress/compressors/lzma/LZMACompressorOutputStream
@1.13
+#<init>(Ljava/io/OutputStream;)V
+#write(I)V
+#write([BII)V
+#flush()V
+#finish()V
+#close()V

+###org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream
@1.6
+#<init>(Ljava/io/InputStream;)V
+#read()I
+#read([BII)I
+#skip(J)J
+#available()I
+#close()V
@1.10
+#matches([BI)Z
@1.14
+#<init>(Ljava/io/InputStream;I)V
@1.17
+#getCompressedCount()J

+###org/apache/commons/compress/compressors/lzma/LZMAUtils
@1.10
+#matches([BI)Z
+#isLZMACompressionAvailable()Z
+#isCompressedFilename(Ljava/lang/String;)Z
+#getUncompressedFilename(Ljava/lang/String;)Ljava/lang/String;
+#getCompressedFilename(Ljava/lang/String;)Ljava/lang/String;
+#setCacheLZMAAvailablity(Z)V

+###org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference
@1.14
+#<init>(II)V
+#getOffset()I
+#getLength()I
+#toString()Ljava/lang/String;
@1.16
+#getType()Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType;

+###org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream
@1.14
+#<init>(Ljava/io/InputStream;I)V
+#read()I
+#close()V
+#available()I
+#getSize()I
+#prefill([B)V
@1.17
+#getCompressedCount()J

+###org/apache/commons/compress/compressors/pack200/Pack200Utils
@1.3
+#normalize(Ljava/io/File;)V
+#normalize(Ljava/io/File;Ljava/util/Map;)V
+#normalize(Ljava/io/File;Ljava/io/File;)V
+#normalize(Ljava/io/File;Ljava/io/File;Ljava/util/Map;)V

+###org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream
@1.14
+#<init>(Ljava/io/OutputStream;J)V
+#<init>(Ljava/io/OutputStream;JI)V
+#<init>(Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V
+#write(I)V
+#write([BII)V
+#close()V
+#finish()V
+#createParameterBuilder(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;

+###org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream
@1.9
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V
+#read()I
+#read([BII)I
+#skip(J)J
+#available()I
+#close()V
@1.10
+#matches([BI)Z
@1.17
+#getCompressedCount()J

+###org/apache/commons/compress/compressors/CompressorException
@1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/commons/compress/compressors/zstandard/ZstdUtils
@1.16
+#isZstdCompressionAvailable()Z
+#setCacheZstdAvailablity(Z)V
+#matches([BI)Z

+###org/apache/commons/compress/parallel/InputStreamSupplier
@1.10
+#get()Ljava/io/InputStream;

+###org/apache/commons/compress/utils/InputStreamStatistics
@1.17
+#getCompressedCount()J
+#getUncompressedCount()J

+###org/apache/commons/compress/utils/MultiReadOnlySeekableByteChannel
@1.19
+#<init>(Ljava/util/List;)V
+#read(Ljava/nio/ByteBuffer;)I
+#close()V
+#isOpen()Z
+#position()J
+#size()J
+#truncate(J)Ljava/nio/channels/SeekableByteChannel;
+#write(Ljava/nio/ByteBuffer;)I
+#position(J)Ljava/nio/channels/SeekableByteChannel;
+#forSeekableByteChannels([Ljava/nio/channels/SeekableByteChannel;)Ljava/nio/channels/SeekableByteChannel;
+#forFiles([Ljava/io/File;)Ljava/nio/channels/SeekableByteChannel;
@1.20
+#position(JJ)Ljava/nio/channels/SeekableByteChannel;
@1.22
+#forPaths([Ljava/nio/file/Path;)Ljava/nio/channels/SeekableByteChannel;

+###org/apache/commons/compress/utils/Lists
@1.13
+#newArrayList()Ljava/util/ArrayList;
+#newArrayList(Ljava/util/Iterator;)Ljava/util/ArrayList;

+###org/apache/commons/compress/MemoryLimitException
@1.14
+#<init>(JI)V
+#<init>(JILjava/lang/Exception;)V
+#getMemoryNeededInKb()J
+#getMemoryLimitInKb()I

+###org/apache/commons/compress/archivers/dump/DumpArchiveException
@1.3
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException
@1.3
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/commons/compress/archivers/ArchiveOutputStream
@1.0
+#<init>()V
+#putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
+#closeArchiveEntry()V
+#finish()V
+#createArchiveEntry(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;
+#write(I)V
+#getCount()I
@1.1
+#getBytesWritten()J
+#canWriteEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
@1.3
*#getCount()I[deprecated]
@1.21
+#createArchiveEntry(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Lorg/apache/commons/compress/archivers/ArchiveEntry;

+###org/apache/commons/compress/archivers/ArchiveStreamFactory
@1.0
+#<init>()V
+#createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
+#createArchiveOutputStream(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;
+#createArchiveInputStream(Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
@1.5
+#getEntryEncoding()Ljava/lang/String;
+#setEntryEncoding(Ljava/lang/String;)V
@1.10
+#<init>(Ljava/lang/String;)V
*#setEntryEncoding(Ljava/lang/String;)V[deprecated]
@1.13
+#findAvailableArchiveInputStreamProviders()Ljava/util/SortedMap;
+#findAvailableArchiveOutputStreamProviders()Ljava/util/SortedMap;
+#createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
+#createArchiveOutputStream(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;
+#getArchiveInputStreamProviders()Ljava/util/SortedMap;
+#getArchiveOutputStreamProviders()Ljava/util/SortedMap;
+#getInputStreamArchiveNames()Ljava/util/Set;
+#getOutputStreamArchiveNames()Ljava/util/Set;
@1.14
+#detect(Ljava/io/InputStream;)Ljava/lang/String;

+###org/apache/commons/compress/archivers/zip/Zip64Mode
@1.3
+#values()[Lorg/apache/commons/compress/archivers/zip/Zip64Mode;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/Zip64Mode;

+###org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter
@1.19
+#<init>(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)V
+#close()V
+#writeNextZipEntry(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V

+###org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData
@1.1
+#<init>()V
+#getHeaderId()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getLocalFileDataLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getCentralDirectoryLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getLocalFileDataData()[B
+#getCentralDirectoryData()[B
+#parseFromLocalFileData([BII)V
+#parseFromCentralDirectoryData([BII)V

+###org/apache/commons/compress/archivers/zip/UnparseableExtraFieldBehavior
@1.19
+#onUnparseableExtraField([BIIZI)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;

+###org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader
@1.11
+#<init>()V
+#getRecordCount()J
+#getHashAlgorithm()Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;
+#getEncryptionAlgorithm()Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;
+#parseCentralDirectoryFormat([BII)V
+#parseFileFormat([BII)V
+#parseFromLocalFileData([BII)V
+#parseFromCentralDirectoryData([BII)V

+###org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy
@1.0
+#toString()Ljava/lang/String;

+###org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException
@1.1
+#<init>(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V
+#getFeature()Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;
+#getEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
@1.5
+#<init>(Lorg/apache/commons/compress/archivers/zip/ZipMethod;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V
+#<init>(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)V

+###org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier
@1.10
+#get()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;

+###org/apache/commons/compress/utils/FixedLengthBlockOutputStream
@1.15
+#<init>(Ljava/io/OutputStream;I)V
+#<init>(Ljava/nio/channels/WritableByteChannel;I)V
+#write(I)V
+#write([BII)V
+#write(Ljava/nio/ByteBuffer;)I
+#isOpen()Z
+#flushBlock()V
+#close()V

+###org/apache/commons/compress/utils/Sets
@1.13
+#newHashSet([Ljava/lang/Object;)Ljava/util/HashSet;

+###org/apache/commons/compress/utils/CountingInputStream
@1.3
+#<init>(Ljava/io/InputStream;)V
+#read()I
+#read([B)I
+#read([BII)I
+#getBytesRead()J

+###org/apache/commons/compress/archivers/dump/UnrecognizedFormatException
@1.3
+#<init>()V

+###org/apache/commons/compress/archivers/dump/DumpArchiveConstants
@1.3

+###org/apache/commons/compress/archivers/dump/ShortFileException
@1.3
+#<init>()V

+###org/apache/commons/compress/archivers/dump/DumpArchiveEntry$TYPE
@1.3
+#values()[Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry$TYPE;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry$TYPE;
+#find(I)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry$TYPE;

+###org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE
@1.3
+#values()[Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE;
+#find(I)Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE;

+###org/apache/commons/compress/archivers/ArchiveStreamProvider
@1.13
+#createArchiveInputStream(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;
+#createArchiveOutputStream(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;
+#getInputStreamArchiveNames()Ljava/util/Set;
+#getOutputStreamArchiveNames()Ljava/util/Set;

+###org/apache/commons/compress/archivers/examples/CloseableConsumer
@1.19
+#accept(Ljava/io/Closeable;)V

+###org/apache/commons/compress/archivers/examples/Archiver
@1.17
+#<init>()V
+#create(Ljava/lang/String;Ljava/io/File;Ljava/io/File;)V
+#create(Ljava/lang/String;Ljava/io/OutputStream;Ljava/io/File;)V
+#create(Ljava/lang/String;Ljava/nio/channels/SeekableByteChannel;Ljava/io/File;)V
+#create(Lorg/apache/commons/compress/archivers/ArchiveOutputStream;Ljava/io/File;)V
+#create(Lorg/apache/commons/compress/archivers/sevenz/SevenZOutputFile;Ljava/io/File;)V
@1.19
*#create(Ljava/lang/String;Ljava/io/OutputStream;Ljava/io/File;)V[deprecated]
+#create(Ljava/lang/String;Ljava/io/OutputStream;Ljava/io/File;Lorg/apache/commons/compress/archivers/examples/CloseableConsumer;)V
*#create(Ljava/lang/String;Ljava/nio/channels/SeekableByteChannel;Ljava/io/File;)V[deprecated]
+#create(Ljava/lang/String;Ljava/nio/channels/SeekableByteChannel;Ljava/io/File;Lorg/apache/commons/compress/archivers/examples/CloseableConsumer;)V
@1.21
+#create(Lorg/apache/commons/compress/archivers/ArchiveOutputStream;Ljava/nio/file/Path;Ljava/util/EnumSet;[Ljava/nio/file/LinkOption;)V
+#create(Lorg/apache/commons/compress/archivers/ArchiveOutputStream;Ljava/nio/file/Path;)V
+#create(Lorg/apache/commons/compress/archivers/sevenz/SevenZOutputFile;Ljava/nio/file/Path;)V
+#create(Ljava/lang/String;Ljava/nio/file/Path;Ljava/nio/file/Path;)V
+#create(Ljava/lang/String;Ljava/nio/channels/SeekableByteChannel;Ljava/nio/file/Path;)V

+###org/apache/commons/compress/archivers/zip/ZipArchiveEntry
@1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/util/zip/ZipEntry;)V
+#<init>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V
+#<init>(Ljava/io/File;Ljava/lang/String;)V
+#clone()Ljava/lang/Object;
+#getInternalAttributes()I
+#setInternalAttributes(I)V
+#getExternalAttributes()J
+#setExternalAttributes(J)V
+#setUnixMode(I)V
+#getUnixMode()I
+#getPlatform()I
+#setExtraFields([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V
+#getExtraFields()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;
+#addExtraField(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V
+#addAsFirstExtraField(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V
+#removeExtraField(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V
+#getExtraField(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;
+#setExtra([B)V
+#setCentralDirectoryExtra([B)V
+#getLocalFileDataExtra()[B
+#getCentralDirectoryExtra()[B
+#getName()Ljava/lang/String;
+#isDirectory()Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.1
+#getMethod()I
+#setMethod(I)V
+#getExtraFields(Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;
+#removeUnparseableExtraFieldData()V
+#getUnparseableExtraFieldData()Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;
+#getGeneralPurposeBit()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;
+#setGeneralPurposeBit(Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V
+#getLastModifiedDate()Ljava/util/Date;
@1.2
+#getRawName()[B
@1.3
+#getSize()J
+#setSize(J)V
@1.5
+#isUnixSymlink()Z
@1.11
+#setVersionMadeBy(I)V
+#setVersionRequired(I)V
+#getVersionRequired()I
+#getVersionMadeBy()I
+#getRawFlag()I
+#setRawFlag(I)V
@1.14
+#setAlignment(I)V
+#getDataOffset()J
+#isStreamContiguous()Z
@1.16
+#getNameSource()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;
+#setNameSource(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;)V
+#getCommentSource()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;
+#setCommentSource(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;)V
@1.19
+#getExtraFields(Lorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;
@1.20
+#getDiskNumberStart()J
+#setDiskNumberStart(J)V
@1.21
+#<init>(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V
+#setTime(Ljava/nio/file/attribute/FileTime;)V

+###org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField
@1.2
+#<init>()V
+#<init>(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V
+#<init>(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V
+#getHeaderId()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getLocalFileDataLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getCentralDirectoryLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getLocalFileDataData()[B
+#getCentralDirectoryData()[B
+#parseFromLocalFileData([BII)V
+#parseFromCentralDirectoryData([BII)V
+#getSize()Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
+#getCompressedSize()Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
+#getRelativeHeaderOffset()Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
+#getDiskStartNumber()Lorg/apache/commons/compress/archivers/zip/ZipLong;
@1.3
+#reparseCentralDirectoryData(ZZZZ)V
+#setSize(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V
+#setCompressedSize(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V
+#setRelativeHeaderOffset(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V
+#setDiskStartNumber(Lorg/apache/commons/compress/archivers/zip/ZipLong;)V

+###org/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior
@1.19
+#createExtraField(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;
+#fill(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;[BIIZ)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;

+###org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode
@1.19
+#values()[Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;
+#onUnparseableExtraField([BIIZI)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;
+#createExtraField(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;
+#fill(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;[BIIZ)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;

+###org/apache/commons/compress/archivers/zip/StreamCompressor
@1.10
+#create(ILorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
+#create(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
+#getCrc32()J
+#getBytesRead()J
+#getBytesWrittenForLastEntry()J
+#getTotalBytesWritten()J
+#deflate(Ljava/io/InputStream;I)V
+#close()V
+#writeCounted([B)V
+#writeCounted([BII)V

+###org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField
@1.0
+#getNameCRC32()J
+#setNameCRC32(J)V
+#getUnicodeName()[B
+#setUnicodeName([B)V
+#getCentralDirectoryData()[B
+#getCentralDirectoryLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getLocalFileDataData()[B
+#getLocalFileDataLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#parseFromLocalFileData([BII)V
+#parseFromCentralDirectoryData([BII)V

+###org/apache/commons/compress/archivers/zip/AsiExtraField
@1.0
+#<init>()V
+#getHeaderId()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getLocalFileDataLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getCentralDirectoryLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getLocalFileDataData()[B
+#getCentralDirectoryData()[B
+#setUserId(I)V
+#getUserId()I
+#setGroupId(I)V
+#getGroupId()I
+#setLinkedFile(Ljava/lang/String;)V
+#getLinkedFile()Ljava/lang/String;
+#isLink()Z
+#setMode(I)V
+#getMode()I
+#setDirectory(Z)V
+#isDirectory()Z
+#parseFromLocalFileData([BII)V
+#parseFromCentralDirectoryData([BII)V
+#clone()Ljava/lang/Object;

+###org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField
@1.14
+#<init>()V
+#<init>(I)V
+#<init>(IZ)V
+#<init>(IZI)V
+#getAlignment()S
+#allowMethodChange()Z
+#getHeaderId()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getLocalFileDataLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getCentralDirectoryLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getLocalFileDataData()[B
+#getCentralDirectoryData()[B
+#parseFromLocalFileData([BII)V
+#parseFromCentralDirectoryData([BII)V

+###org/apache/commons/compress/archivers/zip/X0014_X509Certificates
@1.11
+#<init>()V

+###org/apache/commons/compress/archivers/zip/X000A_NTFS
@1.11
+#<init>()V
+#getHeaderId()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getLocalFileDataLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getCentralDirectoryLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getLocalFileDataData()[B
+#getCentralDirectoryData()[B
+#parseFromLocalFileData([BII)V
+#parseFromCentralDirectoryData([BII)V
+#getModifyTime()Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
+#getAccessTime()Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
+#getCreateTime()Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
+#getModifyJavaTime()Ljava/util/Date;
+#getAccessJavaTime()Ljava/util/Date;
+#getCreateJavaTime()Ljava/util/Date;
+#setModifyTime(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V
+#setAccessTime(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V
+#setCreateTime(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V
+#setModifyJavaTime(Ljava/util/Date;)V
+#setAccessJavaTime(Ljava/util/Date;)V
+#setCreateJavaTime(Ljava/util/Date;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/commons/compress/archivers/zip/ZipArchiveInputStream
@1.0
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;Ljava/lang/String;Z)V
+#getNextZipEntry()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
+#getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
+#read([BII)I
+#close()V
+#skip(J)J
+#matches([BI)Z
@1.1
+#<init>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V
+#canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
@1.5
+#<init>(Ljava/io/InputStream;Ljava/lang/String;)V
@1.17
+#getCompressedCount()J
+#getUncompressedCount()J
@1.20
+#<init>(Ljava/io/InputStream;Ljava/lang/String;ZZZ)V

+###org/apache/commons/compress/archivers/jar/JarArchiveEntry
@1.0
+#<init>(Ljava/util/zip/ZipEntry;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V
+#<init>(Ljava/util/jar/JarEntry;)V
+#getManifestAttributes()Ljava/util/jar/Attributes;
+#getCertificates()[Ljava/security/cert/Certificate;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.2
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@1.3
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.5
*#getManifestAttributes()Ljava/util/jar/Attributes;[deprecated]
*#getCertificates()[Ljava/security/cert/Certificate;[deprecated]
@1.7
-#equals(Ljava/lang/Object;)Z
-#hashCode()I

+###org/apache/commons/compress/archivers/sevenz/SevenZFile
@1.6
+#<init>(Ljava/io/File;[B)V
+#<init>(Ljava/io/File;)V
+#close()V
+#getNextEntry()Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;
+#read()I
+#read([B)I
+#read([BII)I
@1.8
+#matches([BI)Z
@1.11
+#getEntries()Ljava/lang/Iterable;
+#toString()Ljava/lang/String;
@1.13
+#<init>(Ljava/nio/channels/SeekableByteChannel;)V
+#<init>(Ljava/nio/channels/SeekableByteChannel;[B)V
+#<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[B)V
@1.17
+#<init>(Ljava/io/File;[C)V
+#<init>(Ljava/nio/channels/SeekableByteChannel;[C)V
+#<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[C)V
+#<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;)V
+#getStatisticsForCurrentEntry()Lorg/apache/commons/compress/utils/InputStreamStatistics;
@1.19
+#<init>(Ljava/io/File;[CLorg/apache/commons/compress/archivers/sevenz/SevenZFileOptions;)V
+#<init>(Ljava/nio/channels/SeekableByteChannel;Lorg/apache/commons/compress/archivers/sevenz/SevenZFileOptions;)V
+#<init>(Ljava/nio/channels/SeekableByteChannel;[CLorg/apache/commons/compress/archivers/sevenz/SevenZFileOptions;)V
+#<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[CLorg/apache/commons/compress/archivers/sevenz/SevenZFileOptions;)V
+#<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;Lorg/apache/commons/compress/archivers/sevenz/SevenZFileOptions;)V
+#<init>(Ljava/io/File;Lorg/apache/commons/compress/archivers/sevenz/SevenZFileOptions;)V
+#getDefaultName()Ljava/lang/String;
@1.20
*#<init>(Ljava/io/File;[B)V[deprecated]
*#<init>(Ljava/nio/channels/SeekableByteChannel;[B)V[deprecated]
*#<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;[B)V[deprecated]
+#getInputStream(Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;)Ljava/io/InputStream;

+###org/apache/commons/compress/archivers/sevenz/SevenZFileOptions$Builder
@1.19
+#<init>()V
+#withMaxMemoryLimitInKb(I)Lorg/apache/commons/compress/archivers/sevenz/SevenZFileOptions$Builder;
+#withUseDefaultNameForUnnamedEntries(Z)Lorg/apache/commons/compress/archivers/sevenz/SevenZFileOptions$Builder;
+#build()Lorg/apache/commons/compress/archivers/sevenz/SevenZFileOptions;
@1.21
+#withTryToRecoverBrokenArchives(Z)Lorg/apache/commons/compress/archivers/sevenz/SevenZFileOptions$Builder;

+###org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream
@1.0
+#<init>(Ljava/io/InputStream;)V
+#available()I
+#close()V
+#getNextCPIOEntry()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;
+#read([BII)I
+#skip(J)J
+#getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
+#matches([BI)Z
@1.5
+#<init>(Ljava/io/InputStream;I)V
@1.6
+#<init>(Ljava/io/InputStream;Ljava/lang/String;)V
+#<init>(Ljava/io/InputStream;ILjava/lang/String;)V

+###org/apache/commons/compress/archivers/tar/TarArchiveInputStream
@1.0
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;I)V
+#<init>(Ljava/io/InputStream;II)V
+#close()V
+#getRecordSize()I
+#available()I
+#skip(J)J
+#reset()V
+#getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
+#getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
+#read([BII)I
+#matches([BI)Z
@1.2
+#canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
@1.4
+#<init>(Ljava/io/InputStream;Ljava/lang/String;)V
+#<init>(Ljava/io/InputStream;ILjava/lang/String;)V
+#<init>(Ljava/io/InputStream;IILjava/lang/String;)V
@1.6
+#getCurrentEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;
@1.9
+#markSupported()Z
+#mark(I)V
@1.19
+#<init>(Ljava/io/InputStream;Z)V
+#<init>(Ljava/io/InputStream;IILjava/lang/String;Z)V

+###org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry
@1.2
+#<init>([B)V
+#isExtended()Z
@1.20
+#getSparseHeaders()Ljava/util/List;

+###org/apache/commons/compress/archivers/tar/TarUtils
@1.0
+#parseOctal([BII)J
+#parseName([BII)Ljava/lang/String;
+#formatNameBytes(Ljava/lang/String;[BII)I
+#formatUnsignedOctalString(J[BII)V
+#formatOctalBytes(J[BII)I
+#formatLongOctalBytes(J[BII)I
+#formatCheckSumOctalBytes(J[BII)I
+#computeCheckSum([B)J
@1.2
+#parseBoolean([BI)Z
@1.4
+#parseOctalOrBinary([BII)J
+#parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;
+#formatNameBytes(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I
+#formatLongOctalOrBinaryBytes(J[BII)I
@1.5
+#verifyCheckSum([B)Z
@1.20
+#parseSparse([BI)Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;

+###org/apache/commons/compress/archivers/ar/ArArchiveEntry
@1.0
+#<init>(Ljava/lang/String;J)V
+#<init>(Ljava/lang/String;JIIIJ)V
+#<init>(Ljava/io/File;Ljava/lang/String;)V
+#getSize()J
+#getName()Ljava/lang/String;
+#getUserId()I
+#getGroupId()I
+#getMode()I
+#getLastModified()J
+#getLength()J
+#isDirectory()Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.1
+#getLastModifiedDate()Ljava/util/Date;
@1.21
+#<init>(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V

+###org/apache/commons/compress/archivers/Lister
@1.1
+#<init>()V
+#main([Ljava/lang/String;)V

+###org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream
@1.14
+#<init>(Ljava/io/OutputStream;)V
+#<init>(Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream$Parameters;)V
+#write(I)V
+#write([BII)V
+#close()V
+#finish()V

+###org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream
@1.14
+#<init>(Ljava/io/OutputStream;)V
+#<init>(Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/lz77support/Parameters;)V
+#write(I)V
+#write([BII)V
+#close()V
+#finish()V
+#prefill([BII)V
+#createParameterBuilder()Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;

+###org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream
@1.14
+#<init>(Ljava/io/InputStream;)V
+#read([BII)I

+###org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream$Parameters
@1.14
+#<init>(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream$BlockSize;)V
+#<init>(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream$BlockSize;Lorg/apache/commons/compress/compressors/lz77support/Parameters;)V
+#<init>(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream$BlockSize;ZZZ)V
+#<init>(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream$BlockSize;ZZZLorg/apache/commons/compress/compressors/lz77support/Parameters;)V
+#toString()Ljava/lang/String;

+###org/apache/commons/compress/compressors/xz/XZCompressorInputStream
@1.4
+#matches([BI)Z
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;Z)V
+#read()I
+#read([BII)I
+#skip(J)J
+#available()I
+#close()V
@1.14
+#<init>(Ljava/io/InputStream;ZI)V
@1.17
+#getCompressedCount()J

+###org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream
@1.0
+#<init>(Ljava/io/InputStream;)V
+#read()I
@1.1
+#read([B)I
+#read([BII)I
+#matches([BI)Z
@1.2
+#close()V
@1.4
+#<init>(Ljava/io/InputStream;Z)V
-#read([B)I
@1.8
+#getMetaData()Lorg/apache/commons/compress/compressors/gzip/GzipParameters;
@1.17
+#getCompressedCount()J

+###org/apache/commons/compress/compressors/CompressorStreamProvider
@1.13
+#createCompressorInputStream(Ljava/lang/String;Ljava/io/InputStream;Z)Lorg/apache/commons/compress/compressors/CompressorInputStream;
+#createCompressorOutputStream(Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/compressors/CompressorOutputStream;
+#getInputStreamCompressorNames()Ljava/util/Set;
+#getOutputStreamCompressorNames()Ljava/util/Set;

+###org/apache/commons/compress/compressors/bzip2/BZip2Utils
@1.1
+#isCompressedFilename(Ljava/lang/String;)Z
+#getUncompressedFilename(Ljava/lang/String;)Ljava/lang/String;
+#getCompressedFilename(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream
@1.0
+#chooseBlockSize(J)I
+#<init>(Ljava/io/OutputStream;)V
+#<init>(Ljava/io/OutputStream;I)V
+#write(I)V
+#finish()V
+#close()V
+#flush()V
+#getBlockSize()I
+#write([BII)V

+###org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock
@1.14
+#<init>([BII)V
+#getData()[B
+#getOffset()I
+#getLength()I
+#toString()Ljava/lang/String;
@1.16
+#getType()Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType;

+###org/apache/commons/compress/compressors/lz77support/LZ77Compressor$EOD
@1.14
+#<init>()V
@1.16
+#getType()Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType;

+###org/apache/commons/compress/compressors/lz77support/Parameters
@1.14
+#builder(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;
+#getWindowSize()I
+#getMinBackReferenceLength()I
+#getMaxBackReferenceLength()I
+#getMaxOffset()I
+#getMaxLiteralLength()I
+#getNiceBackReferenceLength()I
+#getMaxCandidates()I
+#getLazyMatching()Z
+#getLazyMatchingThreshold()I

+###org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType
@1.16
+#values()[Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType;

+###org/apache/commons/compress/compressors/pack200/Pack200CompressorInputStream
@1.3
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/pack200/Pack200Strategy;)V
+#<init>(Ljava/io/InputStream;Ljava/util/Map;)V
+#<init>(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/pack200/Pack200Strategy;Ljava/util/Map;)V
+#<init>(Ljava/io/File;)V
+#<init>(Ljava/io/File;Lorg/apache/commons/compress/compressors/pack200/Pack200Strategy;)V
+#<init>(Ljava/io/File;Ljava/util/Map;)V
+#<init>(Ljava/io/File;Lorg/apache/commons/compress/compressors/pack200/Pack200Strategy;Ljava/util/Map;)V
+#read()I
+#read([B)I
+#read([BII)I
+#available()I
+#markSupported()Z
+#mark(I)V
+#reset()V
+#skip(J)J
+#close()V
+#matches([BI)Z

+###org/apache/commons/compress/compressors/lzw/LZWInputStream
@1.10
+#close()V
+#read()I
+#read([BII)I
@1.17
+#getCompressedCount()J

+###org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream
@1.7
+#<init>(Ljava/io/InputStream;)V
+#read()I
+#close()V
+#read([BII)I
+#available()I
+#matches([BI)Z
@1.12
+#<init>(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V
@1.14
+#<init>(Ljava/io/InputStream;ILorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V
@1.17
+#getCompressedCount()J

+###org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream
@1.16
+#<init>(Ljava/io/InputStream;)V
+#available()I
+#close()V
+#read([B)I
+#skip(J)J
+#mark(I)V
+#markSupported()Z
+#read()I
+#read([BII)I
+#toString()Ljava/lang/String;
+#reset()V
@1.17
+#getCompressedCount()J
@1.21
+#<init>(Ljava/io/InputStream;Lcom/github/luben/zstd/BufferPool;)V

+###org/apache/commons/compress/utils/CountingOutputStream
@1.3
+#<init>(Ljava/io/OutputStream;)V
+#write(I)V
+#write([B)V
+#write([BII)V
+#getBytesWritten()J

+###org/apache/commons/compress/utils/ByteUtils$ByteConsumer
@1.14
+#accept(I)V

+###org/apache/commons/compress/utils/ChecksumVerifyingInputStream
@1.7
+#<init>(Ljava/util/zip/Checksum;Ljava/io/InputStream;JJ)V
+#read()I
+#read([B)I
+#read([BII)I
+#skip(J)J
+#close()V
@1.21
+#getBytesRemaining()J

+###org/apache/commons/compress/utils/ChecksumCalculatingInputStream
@1.14
+#<init>(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V
+#read()I
+#read([B)I
+#read([BII)I
+#skip(J)J
+#getValue()J

+###org/apache/commons/compress/changes/ChangeSet
@1.0
+#<init>()V
+#delete(Ljava/lang/String;)V
+#deleteDir(Ljava/lang/String;)V
+#add(Lorg/apache/commons/compress/archivers/ArchiveEntry;Ljava/io/InputStream;)V
+#add(Lorg/apache/commons/compress/archivers/ArchiveEntry;Ljava/io/InputStream;Z)V

+###org/apache/commons/compress/utils/ByteUtils$InputStreamByteSupplier
@1.14
+#<init>(Ljava/io/InputStream;)V
+#getAsByte()I

+###org/apache/commons/compress/utils/Iterators
@1.13
+#addAll(Ljava/util/Collection;Ljava/util/Iterator;)Z

+###org/apache/commons/compress/utils/BoundedInputStream
@1.6
+#<init>(Ljava/io/InputStream;J)V
+#read()I
+#read([BII)I
+#close()V
@1.20
+#skip(J)J
@1.21
+#getBytesRemaining()J

+###org/apache/commons/compress/utils/SeekableInMemoryByteChannel
@1.13
+#<init>([B)V
+#<init>()V
+#<init>(I)V
+#position()J
+#position(J)Ljava/nio/channels/SeekableByteChannel;
+#size()J
+#truncate(J)Ljava/nio/channels/SeekableByteChannel;
+#read(Ljava/nio/ByteBuffer;)I
+#close()V
+#isOpen()Z
+#write(Ljava/nio/ByteBuffer;)I
+#array()[B

+###org/apache/commons/compress/archivers/zip/UnixStat
@1.0

+###org/apache/commons/compress/archivers/zip/ZipFile
@1.0
+#<init>(Ljava/io/File;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/io/File;Ljava/lang/String;)V
+#<init>(Ljava/io/File;Ljava/lang/String;Z)V
+#getEncoding()Ljava/lang/String;
+#close()V
+#closeQuietly(Lorg/apache/commons/compress/archivers/zip/ZipFile;)V
+#getEntries()Ljava/util/Enumeration;
+#getEntry(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
+#getInputStream(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Ljava/io/InputStream;
@1.1
+#getEntriesInPhysicalOrder()Ljava/util/Enumeration;
+#canReadEntryData(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z
@1.5
+#getUnixSymlink(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Ljava/lang/String;
@1.6
+#getEntries(Ljava/lang/String;)Ljava/lang/Iterable;
+#getEntriesInPhysicalOrder(Ljava/lang/String;)Ljava/lang/Iterable;
@1.10
+#copyRawEntries(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryPredicate;)V
@1.11
+#getRawInputStream(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Ljava/io/InputStream;
@1.13
+#<init>(Ljava/nio/channels/SeekableByteChannel;)V
+#<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;)V
+#<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;Ljava/lang/String;Z)V
@1.19
+#<init>(Ljava/io/File;Ljava/lang/String;ZZ)V
+#<init>(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/String;Ljava/lang/String;ZZ)V
@1.22
+#<init>(Ljava/nio/file/Path;)V
+#<init>(Ljava/nio/file/Path;Ljava/lang/String;)V
+#<init>(Ljava/nio/file/Path;Ljava/lang/String;Z)V
+#<init>(Ljava/nio/file/Path;Ljava/lang/String;ZZ)V

+###org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile
@1.11
+#<init>()V
+#getRecordCount()I
+#getHashAlgorithm()Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;
+#parseFromCentralDirectoryData([BII)V

+###org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream
@1.0
+#<init>(Ljava/io/OutputStream;)V
+#<init>(Ljava/io/File;)V
+#isSeekable()Z
+#setEncoding(Ljava/lang/String;)V
+#getEncoding()Ljava/lang/String;
+#setUseLanguageEncodingFlag(Z)V
+#setCreateUnicodeExtraFields(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$UnicodeExtraFieldPolicy;)V
+#setFallbackToUTF8(Z)V
+#finish()V
+#closeArchiveEntry()V
+#putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
+#setComment(Ljava/lang/String;)V
+#setLevel(I)V
+#setMethod(I)V
+#write([BII)V
+#close()V
+#flush()V
+#createArchiveEntry(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;
@1.1
+#canWriteEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
@1.3
+#setUseZip64(Lorg/apache/commons/compress/archivers/zip/Zip64Mode;)V
@1.10
+#addRawArchiveEntry(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V
@1.13
+#<init>(Ljava/nio/channels/SeekableByteChannel;)V
@1.20
+#<init>(Ljava/io/File;J)V
@1.21
+#<init>(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)V
+#writePreamble([B)V
+#writePreamble([BII)V
+#createArchiveEntry(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Lorg/apache/commons/compress/archivers/ArchiveEntry;
@1.22
+#<init>(Ljava/nio/file/Path;J)V
+#getBytesWritten()J

+###org/apache/commons/compress/archivers/zip/ZipEightByteInteger
@1.2
+#<init>(J)V
+#<init>(Ljava/math/BigInteger;)V
+#<init>([B)V
+#<init>([BI)V
+#getBytes()[B
+#getLongValue()J
+#getValue()Ljava/math/BigInteger;
+#getBytes(J)[B
+#getBytes(Ljava/math/BigInteger;)[B
+#getLongValue([BI)J
+#getValue([BI)Ljava/math/BigInteger;
+#getLongValue([B)J
+#getValue([B)Ljava/math/BigInteger;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/commons/compress/archivers/ArchiveInputStream
@1.0
+#<init>()V
+#getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
+#read()I
+#getCount()I
@1.1
+#getBytesRead()J
+#canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
@1.3
*#getCount()I[deprecated]

+###org/apache/commons/compress/archivers/arj/ArjArchiveEntry
@1.6
+#<init>()V
+#getName()Ljava/lang/String;
+#getSize()J
+#isDirectory()Z
+#getLastModifiedDate()Ljava/util/Date;
+#getMode()I
+#getUnixMode()I
+#getHostOs()I
+#isHostOsUnix()Z
@1.19
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/apache/commons/compress/archivers/arj/ArjArchiveEntry$HostOs
@1.6
+#<init>()V

+###org/apache/commons/compress/archivers/StreamingNotSupportedException
@1.8
+#<init>(Ljava/lang/String;)V
+#getFormat()Ljava/lang/String;

+###org/apache/commons/compress/archivers/jar/JarArchiveInputStream
@1.0
+#<init>(Ljava/io/InputStream;)V
+#getNextJarEntry()Lorg/apache/commons/compress/archivers/jar/JarArchiveEntry;
+#getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
+#matches([BI)Z
@1.10
+#<init>(Ljava/io/InputStream;Ljava/lang/String;)V

+###org/apache/commons/compress/archivers/jar/JarArchiveOutputStream
@1.0
+#<init>(Ljava/io/OutputStream;)V
+#putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
@1.10
+#<init>(Ljava/io/OutputStream;Ljava/lang/String;)V

+###org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream
@1.0
+#<init>(Ljava/io/InputStream;)V
+#read()I
+#read([BII)I
+#close()V
@1.1
+#matches([BI)Z
@1.4
+#<init>(Ljava/io/InputStream;Z)V
@1.17
+#getCompressedCount()J

+###org/apache/commons/compress/compressors/z/ZCompressorInputStream
@1.7
+#<init>(Ljava/io/InputStream;)V
@1.8.1
+#matches([BI)Z
@1.14
+#<init>(Ljava/io/InputStream;I)V

+###org/apache/commons/compress/compressors/lz77support/Parameters$Builder
@1.14
+#withMinBackReferenceLength(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;
+#withMaxBackReferenceLength(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;
+#withMaxOffset(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;
+#withMaxLiteralLength(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;
+#withNiceBackReferenceLength(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;
+#withMaxNumberOfCandidates(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;
+#withLazyMatching(Z)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;
+#withLazyThreshold(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;
+#tunedForSpeed()Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;
+#tunedForCompressionRatio()Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;
+#build()Lorg/apache/commons/compress/compressors/lz77support/Parameters;

+###org/apache/commons/compress/compressors/pack200/Pack200Strategy
@1.3
+#values()[Lorg/apache/commons/compress/compressors/pack200/Pack200Strategy;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/compress/compressors/pack200/Pack200Strategy;

+###org/apache/commons/compress/compressors/CompressorInputStream
@1.0
+#<init>()V
+#getCount()I
@1.1
+#getBytesRead()J
@1.3
*#getCount()I[deprecated]
@1.17
+#getUncompressedCount()J

+###org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream
@1.7
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;I)V
+#read()I
+#close()V
+#available()I
+#read([BII)I
+#getSize()I
@1.14
-#read()I
-#close()V
-#available()I

+###org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer
@1.14
+#<init>(Ljava/io/OutputStream;)V
+#accept(I)V

+###org/apache/commons/compress/utils/FlushShieldFilterOutputStream
@1.13
+#<init>(Ljava/io/OutputStream;)V
+#flush()V

+###org/apache/commons/compress/utils/ByteUtils
@1.14
+#fromLittleEndian([B)J
+#fromLittleEndian([BII)J
+#fromLittleEndian(Ljava/io/InputStream;I)J
+#fromLittleEndian(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J
+#fromLittleEndian(Ljava/io/DataInput;I)J
+#toLittleEndian([BJII)V
+#toLittleEndian(Ljava/io/OutputStream;JI)V
+#toLittleEndian(Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V
+#toLittleEndian(Ljava/io/DataOutput;JI)V

+###org/apache/commons/compress/archivers/dump/InvalidFormatException
@1.3
+#<init>()V
+#<init>(J)V
+#getOffset()J

+###org/apache/commons/compress/archivers/dump/DumpArchiveInputStream
@1.3
+#<init>(Ljava/io/InputStream;)V
+#getCount()I[deprecated]
+#getBytesRead()J
+#getSummary()Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;
+#getNextDumpEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
+#getNextEntry()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;
+#read([BII)I
+#close()V
+#matches([BI)Z
+#getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
@1.6
+#<init>(Ljava/io/InputStream;Ljava/lang/String;)V

+###org/apache/commons/compress/archivers/examples/Expander
@1.17
+#<init>()V
+#expand(Ljava/io/File;Ljava/io/File;)V
+#expand(Ljava/lang/String;Ljava/io/File;Ljava/io/File;)V
+#expand(Ljava/io/InputStream;Ljava/io/File;)V
+#expand(Ljava/lang/String;Ljava/io/InputStream;Ljava/io/File;)V
+#expand(Ljava/lang/String;Ljava/nio/channels/SeekableByteChannel;Ljava/io/File;)V
+#expand(Lorg/apache/commons/compress/archivers/ArchiveInputStream;Ljava/io/File;)V
+#expand(Lorg/apache/commons/compress/archivers/zip/ZipFile;Ljava/io/File;)V
+#expand(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;Ljava/io/File;)V
@1.19
*#expand(Ljava/io/InputStream;Ljava/io/File;)V[deprecated]
+#expand(Ljava/io/InputStream;Ljava/io/File;Lorg/apache/commons/compress/archivers/examples/CloseableConsumer;)V
*#expand(Ljava/lang/String;Ljava/io/InputStream;Ljava/io/File;)V[deprecated]
+#expand(Ljava/lang/String;Ljava/io/InputStream;Ljava/io/File;Lorg/apache/commons/compress/archivers/examples/CloseableConsumer;)V
*#expand(Ljava/lang/String;Ljava/nio/channels/SeekableByteChannel;Ljava/io/File;)V[deprecated]
+#expand(Ljava/lang/String;Ljava/nio/channels/SeekableByteChannel;Ljava/io/File;Lorg/apache/commons/compress/archivers/examples/CloseableConsumer;)V
@1.21
+#expand(Lorg/apache/commons/compress/archivers/tar/TarFile;Ljava/io/File;)V
@1.22
+#expand(Lorg/apache/commons/compress/archivers/ArchiveInputStream;Ljava/nio/file/Path;)V
+#expand(Ljava/nio/file/Path;Ljava/nio/file/Path;)V
+#expand(Lorg/apache/commons/compress/archivers/sevenz/SevenZFile;Ljava/nio/file/Path;)V
+#expand(Ljava/lang/String;Ljava/io/InputStream;Ljava/nio/file/Path;Lorg/apache/commons/compress/archivers/examples/CloseableConsumer;)V
+#expand(Ljava/lang/String;Ljava/nio/file/Path;Ljava/nio/file/Path;)V
+#expand(Ljava/lang/String;Ljava/nio/channels/SeekableByteChannel;Ljava/nio/file/Path;Lorg/apache/commons/compress/archivers/examples/CloseableConsumer;)V
+#expand(Lorg/apache/commons/compress/archivers/tar/TarFile;Ljava/nio/file/Path;)V
+#expand(Lorg/apache/commons/compress/archivers/zip/ZipFile;Ljava/nio/file/Path;)V

+###org/apache/commons/compress/archivers/zip/ZipArchiveEntryPredicate
@1.10
+#test(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Z

+###org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm
@1.11
+#values()[Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;
+#getCode()I
+#getAlgorithmByCode(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;

+###org/apache/commons/compress/archivers/zip/ZipEncodingHelper
@1.4
+#<init>()V
+#getZipEncoding(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;

+###org/apache/commons/compress/archivers/zip/ExtraFieldUtils
@1.0
+#<init>()V
+#register(Ljava/lang/Class;)V
+#createExtraField(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;
+#parse([B)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;
+#parse([BZ)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;
+#mergeLocalFileDataData([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B
+#mergeCentralDirectoryData([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B
@1.1
+#parse([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;
@1.19
+#createExtraFieldNoDefault(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;
+#parse([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;
+#fillExtraField(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;[BIIZ)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;

+###org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField
@1.1
+#getKey()I
@1.19
+#onUnparseableExtraField([BIIZI)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;

+###org/apache/commons/compress/archivers/zip/JarMarker
@1.0
+#<init>()V
+#getInstance()Lorg/apache/commons/compress/archivers/zip/JarMarker;
+#getHeaderId()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getLocalFileDataLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getCentralDirectoryLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getLocalFileDataData()[B
+#getCentralDirectoryData()[B
+#parseFromLocalFileData([BII)V
+#parseFromCentralDirectoryData([BII)V

+###org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm
@1.11
+#values()[Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;
+#getCode()I
+#getAlgorithmByCode(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;

+###org/apache/commons/compress/archivers/zip/Zip64RequiredException
@1.3
+#<init>(Ljava/lang/String;)V

+###org/apache/commons/compress/archivers/zip/X7875_NewUnix
@1.5
+#<init>()V
+#getHeaderId()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getUID()J
+#getGID()J
+#setUID(J)V
+#setGID(J)V
+#getLocalFileDataLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getCentralDirectoryLength()Lorg/apache/commons/compress/archivers/zip/ZipShort;
+#getLocalFileDataData()[B
+#getCentralDirectoryData()[B
+#parseFromLocalFileData([BII)V
+#parseFromCentralDirectoryData([BII)V
+#toString()Ljava/lang/String;
+#clone()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList
@1.11
+#<init>()V

+###org/apache/commons/compress/archivers/zip/UnicodePathExtraField
@1.0
+#<init>()V
+#<init>(Ljava/lang/String;[BII)V
+#<init>(Ljava/lang/String;[B)V
+#getHeaderId()Lorg/apache/commons/compress/archivers/zip/ZipShort;

+###org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource
@1.16
+#values()[Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;

+###org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest
@1.10
+#createZipArchiveEntryRequest(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;
+#getPayloadStream()Ljava/io/InputStream;
+#getMethod()I

+###org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource
@1.16
+#values()[Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;

+###org/apache/commons/compress/archivers/zip/ZipMethod
@1.5
+#values()[Lorg/apache/commons/compress/archivers/zip/ZipMethod;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipMethod;
+#getCode()I
+#getMethodByCode(I)Lorg/apache/commons/compress/archivers/zip/ZipMethod;

+###org/apache/commons/compress/archivers/zip/UnicodeCommentExtraField
@1.0
+#<init>()V
+#<init>(Ljava/lang/String;[BII)V
+#<init>(Ljava/lang/String;[B)V
+#getHeaderId()Lorg/apache/commons/compress/archivers/zip/ZipShort;

+###org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory
@1.11
+#<init>()V
+#getRecordCount()I
+#getHashAlgorithm()Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;
+#parseFromCentralDirectoryData([BII)V

+###org/apache/commons/compress/archivers/zip/GeneralPurposeBit
@1.1
+#<init>()V
+#usesUTF8ForNames()Z
+#useUTF8ForNames(Z)V
+#usesDataDescriptor()Z
+#useDataDescriptor(Z)V
+#usesEncryption()Z
+#useEncryption(Z)V
+#usesStrongEncryption()Z
+#useStrongEncryption(Z)V
+#encode()[B
+#parse([BI)Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.10
+#encode([BI)V
+#clone()Ljava/lang/Object;

+###org/apache/commons/compress/archivers/arj/ArjArchiveInputStream
@1.6
+#<init>(Ljava/io/InputStream;Ljava/lang/String;)V
+#<init>(Ljava/io/InputStream;)V
+#close()V
+#matches([BI)Z
+#getArchiveName()Ljava/lang/String;
+#getArchiveComment()Ljava/lang/String;
+#getNextEntry()Lorg/apache/commons/compress/archivers/arj/ArjArchiveEntry;
+#canReadEntryData(Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z
+#read([BII)I
+#getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;

+###org/apache/commons/compress/archivers/ArchiveEntry
@1.0
+#getName()Ljava/lang/String;
+#getSize()J
+#isDirectory()Z
@1.1
+#getLastModifiedDate()Ljava/util/Date;

+###org/apache/commons/compress/archivers/sevenz/CLI
@1.9
+#<init>()V
+#main([Ljava/lang/String;)V

+###org/apache/commons/compress/utils/CloseShieldFilterInputStream
@1.14
+#<init>(Ljava/io/InputStream;)V
+#close()V

+###org/apache/commons/compress/utils/Charsets
@1.4
+#<init>()V
+#toCharset(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;
+#toCharset(Ljava/lang/String;)Ljava/nio/charset/Charset;

+###org/apache/commons/compress/utils/IOUtils
@1.0
+#copy(Ljava/io/InputStream;Ljava/io/OutputStream;)J
+#copy(Ljava/io/InputStream;Ljava/io/OutputStream;I)J
@1.5
+#toByteArray(Ljava/io/InputStream;)[B
@1.6
+#skip(Ljava/io/InputStream;J)J
+#readFully(Ljava/io/InputStream;[B)I
+#readFully(Ljava/io/InputStream;[BII)I
@1.7
+#closeQuietly(Ljava/io/Closeable;)V
@1.13
+#readFully(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V
@1.20
+#read(Ljava/io/File;[B)I
@1.21
+#copy(Ljava/io/File;Ljava/io/OutputStream;)V
+#copyRange(Ljava/io/InputStream;JLjava/io/OutputStream;)J
+#copyRange(Ljava/io/InputStream;JLjava/io/OutputStream;I)J
+#readRange(Ljava/io/InputStream;I)[B
+#readRange(Ljava/nio/channels/ReadableByteChannel;I)[B

+###org/apache/commons/compress/PasswordRequiredException
@1.10
+#<init>(Ljava/lang/String;)V

+###org/apache/commons/compress/archivers/sevenz/SevenZOutputFile
@1.6
+#<init>(Ljava/io/File;)V
+#setContentCompression(Lorg/apache/commons/compress/archivers/sevenz/SevenZMethod;)V
+#close()V
+#createArchiveEntry(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;
+#putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
+#closeArchiveEntry()V
+#write(I)V
+#write([B)V
+#write([BII)V
+#finish()V
@1.8
+#setContentMethods(Ljava/lang/Iterable;)V
@1.13
+#<init>(Ljava/nio/channels/SeekableByteChannel;)V
@1.21
+#createArchiveEntry(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Lorg/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry;
+#write(Ljava/io/InputStream;)V
+#write(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)V

+###org/apache/commons/compress/archivers/sevenz/SevenZMethod
@1.6
+#values()[Lorg/apache/commons/compress/archivers/sevenz/SevenZMethod;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/sevenz/SevenZMethod;

+###org/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry
@1.6
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#hasStream()Z
+#setHasStream(Z)V
+#isDirectory()Z
+#setDirectory(Z)V
+#isAntiItem()Z
+#setAntiItem(Z)V
+#getHasCreationDate()Z
+#setHasCreationDate(Z)V
+#getCreationDate()Ljava/util/Date;
+#setCreationDate(J)V
+#setCreationDate(Ljava/util/Date;)V
+#getHasLastModifiedDate()Z
+#setHasLastModifiedDate(Z)V
+#getLastModifiedDate()Ljava/util/Date;
+#setLastModifiedDate(J)V
+#setLastModifiedDate(Ljava/util/Date;)V
+#getHasAccessDate()Z
+#setHasAccessDate(Z)V
+#getAccessDate()Ljava/util/Date;
+#setAccessDate(J)V
+#setAccessDate(Ljava/util/Date;)V
+#getHasWindowsAttributes()Z
+#setHasWindowsAttributes(Z)V
+#getWindowsAttributes()I
+#setWindowsAttributes(I)V
+#getHasCrc()Z
+#setHasCrc(Z)V
+#getCrc()I
+#setCrc(I)V
+#getSize()J
+#setSize(J)V
+#ntfsTimeToJavaTime(J)Ljava/util/Date;
+#javaTimeToNtfsTime(Ljava/util/Date;)J
@1.7
*#getCrc()I[deprecated]
*#setCrc(I)V[deprecated]
+#getCrcValue()J
+#setCrcValue(J)V
@1.8
+#setContentMethods(Ljava/lang/Iterable;)V
+#getContentMethods()Ljava/lang/Iterable;
@1.19
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.22
+#setContentMethods([Lorg/apache/commons/compress/archivers/sevenz/SevenZMethodConfiguration;)V

+###org/apache/commons/compress/archivers/sevenz/SevenZMethodConfiguration
@1.8
+#<init>(Lorg/apache/commons/compress/archivers/sevenz/SevenZMethod;)V
+#<init>(Lorg/apache/commons/compress/archivers/sevenz/SevenZMethod;Ljava/lang/Object;)V
+#getMethod()Lorg/apache/commons/compress/archivers/sevenz/SevenZMethod;
+#getOptions()Ljava/lang/Object;
@1.19
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/apache/commons/compress/archivers/cpio/CpioArchiveEntry
@1.0
+#<init>(S)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;J)V
+#<init>(Ljava/io/File;Ljava/lang/String;)V
+#getChksum()J
+#getDevice()J
+#getDeviceMaj()J
+#getDeviceMin()J
+#getSize()J
+#getFormat()S
+#getGID()J
+#getHeaderSize()I
+#getAlignmentBoundary()I
+#getHeaderPadCount()I
+#getDataPadCount()I
+#getInode()J
+#getMode()J
+#getName()Ljava/lang/String;
+#getNumberOfLinks()J
+#getRemoteDevice()J
+#getRemoteDeviceMaj()J
+#getRemoteDeviceMin()J
+#getTime()J
+#getUID()J
+#isBlockDevice()Z
+#isCharacterDevice()Z
+#isDirectory()Z
+#isNetwork()Z
+#isPipe()Z
+#isRegularFile()Z
+#isSocket()Z
+#isSymbolicLink()Z
+#setChksum(J)V
+#setDevice(J)V
+#setDeviceMaj(J)V
+#setDeviceMin(J)V
+#setSize(J)V
+#setGID(J)V
+#setInode(J)V
+#setMode(J)V
+#setName(Ljava/lang/String;)V
+#setNumberOfLinks(J)V
+#setRemoteDevice(J)V
+#setRemoteDeviceMaj(J)V
+#setRemoteDeviceMin(J)V
+#setTime(J)V
+#setUID(J)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.1
+#<init>(SLjava/lang/String;)V
+#<init>(SLjava/lang/String;J)V
+#<init>(SLjava/io/File;Ljava/lang/String;)V
+#getLastModifiedDate()Ljava/util/Date;
@1.18
*#getHeaderPadCount()I[deprecated]
+#getHeaderPadCount(Ljava/nio/charset/Charset;)I
+#getHeaderPadCount(J)I
@1.21
+#<init>(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V
+#<init>(SLjava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V
+#setTime(Ljava/nio/file/attribute/FileTime;)V

+###org/apache/commons/compress/archivers/cpio/CpioConstants
@1.0

+###org/apache/commons/compress/archivers/tar/TarArchiveOutputStream
@1.0
+#<init>(Ljava/io/OutputStream;)V
+#<init>(Ljava/io/OutputStream;I)V
+#<init>(Ljava/io/OutputStream;II)V
+#setLongFileMode(I)V
+#finish()V
+#close()V
+#getRecordSize()I
+#putArchiveEntry(Lorg/apache/commons/compress/archivers/ArchiveEntry;)V
+#closeArchiveEntry()V
+#write([BII)V
+#flush()V
+#createArchiveEntry(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;
@1.3
+#getCount()I[deprecated]
+#getBytesWritten()J
@1.4
+#<init>(Ljava/io/OutputStream;Ljava/lang/String;)V
+#<init>(Ljava/io/OutputStream;ILjava/lang/String;)V
+#<init>(Ljava/io/OutputStream;IILjava/lang/String;)V
+#setBigNumberMode(I)V
+#setAddPaxHeadersForNonAsciiNames(Z)V
@1.15
*#<init>(Ljava/io/OutputStream;II)V[deprecated]
*#<init>(Ljava/io/OutputStream;IILjava/lang/String;)V[deprecated]
*#getRecordSize()I[deprecated]
@1.21
+#createArchiveEntry(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Lorg/apache/commons/compress/archivers/ArchiveEntry;

+###org/apache/commons/compress/archivers/tar/TarConstants
@1.0

+###org/apache/commons/compress/archivers/ar/ArArchiveInputStream
@1.0
+#<init>(Ljava/io/InputStream;)V
+#getNextArEntry()Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;
+#getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;
+#close()V
+#read([BII)I
+#matches([BI)Z

+###org/apache/commons/compress/archivers/ArchiveException
@1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Exception;)V

+###org/apache/commons/compress/compressors/FileNameUtil
@1.4
+#<init>(Ljava/util/Map;Ljava/lang/String;)V
+#isCompressedFilename(Ljava/lang/String;)Z
+#getUncompressedFilename(Ljava/lang/String;)Ljava/lang/String;
+#getCompressedFilename(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream
@1.14
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;Z)V
+#read()I
+#close()V
+#read([BII)I
+#matches([BI)Z
@1.17
+#getCompressedCount()J

+###org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream$BlockSize
@1.14
+#values()[Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream$BlockSize;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream$BlockSize;

+###org/apache/commons/compress/compressors/xz/XZCompressorOutputStream
@1.4
+#<init>(Ljava/io/OutputStream;)V
+#<init>(Ljava/io/OutputStream;I)V
+#write(I)V
+#write([BII)V
+#flush()V
+#finish()V
+#close()V

+###org/apache/commons/compress/compressors/gzip/GzipUtils
@1.0
+#isCompressedFilename(Ljava/lang/String;)Z
+#getUncompressedFilename(Ljava/lang/String;)Ljava/lang/String;
+#getCompressedFilename(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream
@1.0
+#<init>(Ljava/io/OutputStream;)V
+#write(I)V
+#close()V
@1.1
+#write([B)V
+#write([BII)V
@1.7
+#<init>(Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/gzip/GzipParameters;)V
+#finish()V
+#flush()V

+###org/apache/commons/compress/compressors/brotli/BrotliUtils
@1.14
+#isBrotliCompressionAvailable()Z
+#setCacheBrotliAvailablity(Z)V

+###org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block
@1.14
+#<init>()V
@1.16
+#getType()Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType;

+###org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback
@1.14
+#accept(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V

+###org/apache/commons/compress/compressors/lz77support/LZ77Compressor
@1.14
+#<init>(Lorg/apache/commons/compress/compressors/lz77support/Parameters;Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;)V
+#compress([B)V
+#compress([BII)V
+#finish()V
+#prefill([B)V

+###org/apache/commons/compress/compressors/pack200/Pack200CompressorOutputStream
@1.3
+#<init>(Ljava/io/OutputStream;)V
+#<init>(Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/pack200/Pack200Strategy;)V
+#<init>(Ljava/io/OutputStream;Ljava/util/Map;)V
+#<init>(Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/pack200/Pack200Strategy;Ljava/util/Map;)V
+#write(I)V
+#write([B)V
+#write([BII)V
+#close()V
+#finish()V

+###org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream
@1.16
+#<init>(Ljava/io/InputStream;)V
+#read()I
+#read([BII)I
+#available()I
+#close()V
@1.17
+#getCompressedCount()J

+###org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream
@1.14
+#<init>(Ljava/io/OutputStream;)V
+#<init>(Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/lz77support/Parameters;)V
+#write(I)V
+#write([BII)V
+#close()V
+#finish()V

+###org/apache/commons/compress/compressors/snappy/FramedSnappyDialect
@1.12
+#values()[Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;
+#valueOf(Ljava/lang/String;)Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;

+###org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream
@1.9
+#<init>(Ljava/io/OutputStream;)V
+#<init>(Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V
+#write(I)V
+#write([BII)V
+#flush()V
+#finish()V
+#close()V

+###org/apache/commons/compress/compressors/deflate/DeflateParameters
@1.9
+#<init>()V
+#withZlibHeader()Z
+#setWithZlibHeader(Z)V
+#getCompressionLevel()I
+#setCompressionLevel(I)V

+###org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream
@1.16
+#<init>(Ljava/io/OutputStream;)V
+#close()V
+#write(I)V
+#write([BII)V
+#toString()Ljava/lang/String;
+#flush()V
@1.18
+#<init>(Ljava/io/OutputStream;IZZ)V
+#<init>(Ljava/io/OutputStream;IZ)V
+#<init>(Ljava/io/OutputStream;I)V

+###org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel
@1.20
+#<init>(Ljava/util/List;)V
+#forOrderedSeekableByteChannels([Ljava/nio/channels/SeekableByteChannel;)Ljava/nio/channels/SeekableByteChannel;
+#forOrderedSeekableByteChannels(Ljava/nio/channels/SeekableByteChannel;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;
+#buildFromLastSplitSegment(Ljava/io/File;)Ljava/nio/channels/SeekableByteChannel;
+#forFiles([Ljava/io/File;)Ljava/nio/channels/SeekableByteChannel;
+#forFiles(Ljava/io/File;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;
@1.22
+#buildFromLastSplitSegment(Ljava/nio/file/Path;)Ljava/nio/channels/SeekableByteChannel;
+#forPaths([Ljava/nio/file/Path;)Ljava/nio/channels/SeekableByteChannel;
+#forPaths(Ljava/nio/file/Path;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;

+###org/apache/commons/compress/utils/FileNameUtils
@1.20
+#<init>()V
+#getExtension(Ljava/lang/String;)Ljava/lang/String;
+#getBaseName(Ljava/lang/String;)Ljava/lang/String;
@1.22
+#getBaseName(Ljava/nio/file/Path;)Ljava/lang/String;
+#getExtension(Ljava/nio/file/Path;)Ljava/lang/String;

+###org/apache/commons/compress/archivers/tar/TarArchiveStructSparse
@1.20
+#<init>(JJ)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#getOffset()J
+#getNumbytes()J

+###org/apache/commons/compress/archivers/tar/TarFile
@1.21
+#<init>([B)V
+#<init>([BLjava/lang/String;)V
+#<init>([BZ)V
+#<init>(Ljava/io/File;)V
+#<init>(Ljava/io/File;Ljava/lang/String;)V
+#<init>(Ljava/io/File;Z)V
+#<init>(Ljava/nio/file/Path;)V
+#<init>(Ljava/nio/file/Path;Ljava/lang/String;)V
+#<init>(Ljava/nio/file/Path;Z)V
+#<init>(Ljava/nio/channels/SeekableByteChannel;)V
+#<init>(Ljava/nio/channels/SeekableByteChannel;IILjava/lang/String;Z)V
+#getEntries()Ljava/util/List;
+#getInputStream(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Ljava/io/InputStream;
+#close()V

+###org/apache/commons/compress/harmony/archive/internal/nls/Messages
@1.21
+#<init>()V
+#getString(Ljava/lang/String;)Ljava/lang/String;
+#getString(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
+#getString(Ljava/lang/String;I)Ljava/lang/String;
+#getString(Ljava/lang/String;C)Ljava/lang/String;
+#getString(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
+#getString(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
+#format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
+#setLocale(Ljava/util/Locale;Ljava/lang/String;)Ljava/util/ResourceBundle;

+###org/apache/commons/compress/harmony/pack200/Archive
@1.21
+#<init>(Ljava/util/jar/JarInputStream;Ljava/io/OutputStream;Lorg/apache/commons/compress/harmony/pack200/PackingOptions;)V
+#<init>(Ljava/util/jar/JarFile;Ljava/io/OutputStream;Lorg/apache/commons/compress/harmony/pack200/PackingOptions;)V
+#pack()V

+###org/apache/commons/compress/harmony/pack200/AttributeDefinitionBands$AttributeDefinition
@1.21
+#<init>(IILorg/apache/commons/compress/harmony/pack200/CPUTF8;Lorg/apache/commons/compress/harmony/pack200/CPUTF8;)V

+###org/apache/commons/compress/harmony/pack200/AttributeDefinitionBands
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/pack200/Segment;I[Lorg/objectweb/asm/Attribute;)V
+#finaliseBands()V
+#pack(Ljava/io/OutputStream;)V
+#getClassAttributeLayouts()Ljava/util/List;
+#getMethodAttributeLayouts()Ljava/util/List;
+#getFieldAttributeLayouts()Ljava/util/List;
+#getCodeAttributeLayouts()Ljava/util/List;

+###org/apache/commons/compress/harmony/pack200/BHSDCodec
@1.21
+#<init>(II)V
+#<init>(III)V
+#<init>(IIII)V
+#cardinality()J
+#decode(Ljava/io/InputStream;)I
+#decode(Ljava/io/InputStream;J)I
+#decodeInts(ILjava/io/InputStream;)[I
+#decodeInts(ILjava/io/InputStream;I)[I
+#encodes(J)Z
+#encode(II)[B
+#encode(I)[B
+#isDelta()Z
+#isSigned()Z
+#largest()J
+#smallest()J
+#toString()Ljava/lang/String;
+#getB()I
+#getH()I
+#getS()I
+#getL()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/commons/compress/harmony/pack200/BandSet$BandAnalysisResults
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/pack200/BandSet;)V

+###org/apache/commons/compress/harmony/pack200/BandSet$BandData
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/pack200/BandSet;[I)V
+#mainlySmallDeltas()Z
+#wellCorrelated()Z
+#mainlyPositiveDeltas()Z
+#anyNegatives()Z
+#numDistinctValues()I

+###org/apache/commons/compress/harmony/pack200/BandSet
@1.21
+#<init>(ILorg/apache/commons/compress/harmony/pack200/SegmentHeader;)V
+#pack(Ljava/io/OutputStream;)V
+#encodeScalar([ILorg/apache/commons/compress/harmony/pack200/BHSDCodec;)[B
+#encodeScalar(ILorg/apache/commons/compress/harmony/pack200/BHSDCodec;)[B
+#encodeBandInt(Ljava/lang/String;[ILorg/apache/commons/compress/harmony/pack200/BHSDCodec;)[B

+###org/apache/commons/compress/harmony/pack200/BcBands
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/pack200/CpBands;Lorg/apache/commons/compress/harmony/pack200/Segment;I)V
+#setCurrentClass(Ljava/lang/String;Ljava/lang/String;)V
+#finaliseBands()V
+#pack(Ljava/io/OutputStream;)V
+#visitEnd()V
+#visitLabel(Lorg/objectweb/asm/Label;)V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitIincInsn(II)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitJumpInsn(ILorg/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitLookupSwitchInsn(Lorg/objectweb/asm/Label;[I[Lorg/objectweb/asm/Label;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitTableSwitchInsn(IILorg/objectweb/asm/Label;[Lorg/objectweb/asm/Label;)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitVarInsn(II)V

+###org/apache/commons/compress/harmony/pack200/CPClass
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/pack200/CPUTF8;)V
+#compareTo(Ljava/lang/Object;)I
+#toString()Ljava/lang/String;
+#getIndexInCpUtf8()I
+#isInnerClass()Z
@1.22
+#compareTo(Lorg/apache/commons/compress/harmony/pack200/CPClass;)I

+###org/apache/commons/compress/harmony/pack200/CPConstant
@1.21
+#<init>()V

+###org/apache/commons/compress/harmony/pack200/CPDouble
@1.21
+#<init>(D)V
+#compareTo(Ljava/lang/Object;)I
+#getDouble()D
@1.22
+#compareTo(Lorg/apache/commons/compress/harmony/pack200/CPDouble;)I

+###org/apache/commons/compress/harmony/pack200/CPFloat
@1.21
+#<init>(F)V
+#compareTo(Ljava/lang/Object;)I
+#getFloat()F
@1.22
+#compareTo(Lorg/apache/commons/compress/harmony/pack200/CPFloat;)I

+###org/apache/commons/compress/harmony/pack200/CPInt
@1.21
+#<init>(I)V
+#compareTo(Ljava/lang/Object;)I
+#getInt()I
@1.22
+#compareTo(Lorg/apache/commons/compress/harmony/pack200/CPInt;)I

+###org/apache/commons/compress/harmony/pack200/CPLong
@1.21
+#<init>(J)V
+#compareTo(Ljava/lang/Object;)I
+#getLong()J
+#toString()Ljava/lang/String;
@1.22
+#compareTo(Lorg/apache/commons/compress/harmony/pack200/CPLong;)I

+###org/apache/commons/compress/harmony/pack200/CPMethodOrField
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/pack200/CPClass;Lorg/apache/commons/compress/harmony/pack200/CPNameAndType;)V
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
+#getClassIndex()I
+#getClassName()Lorg/apache/commons/compress/harmony/pack200/CPClass;
+#getDescIndex()I
+#getDesc()Lorg/apache/commons/compress/harmony/pack200/CPNameAndType;
+#getIndexInClass()I
+#setIndexInClass(I)V
+#getIndexInClassForConstructor()I
+#setIndexInClassForConstructor(I)V

+###org/apache/commons/compress/harmony/pack200/CPNameAndType
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/pack200/CPUTF8;Lorg/apache/commons/compress/harmony/pack200/CPSignature;)V
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
+#getNameIndex()I
+#getName()Ljava/lang/String;
+#getTypeIndex()I

+###org/apache/commons/compress/harmony/pack200/CPSignature
@1.21
+#<init>(Ljava/lang/String;Lorg/apache/commons/compress/harmony/pack200/CPUTF8;Ljava/util/List;)V
+#compareTo(Ljava/lang/Object;)I
+#getIndexInCpUtf8()I
+#getClasses()Ljava/util/List;
+#toString()Ljava/lang/String;
+#getUnderlyingString()Ljava/lang/String;
+#getSignatureForm()Lorg/apache/commons/compress/harmony/pack200/CPUTF8;

+###org/apache/commons/compress/harmony/pack200/CPString
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/pack200/CPUTF8;)V
+#compareTo(Ljava/lang/Object;)I
+#toString()Ljava/lang/String;
+#getIndexInCpUtf8()I
@1.22
+#compareTo(Lorg/apache/commons/compress/harmony/pack200/CPString;)I

+###org/apache/commons/compress/harmony/pack200/CPUTF8
@1.21
+#<init>(Ljava/lang/String;)V
+#compareTo(Ljava/lang/Object;)I
+#toString()Ljava/lang/String;
+#getUnderlyingString()Ljava/lang/String;

+###org/apache/commons/compress/harmony/pack200/CanonicalCodecFamilies
@1.21
+#<init>()V

+###org/apache/commons/compress/harmony/pack200/ClassBands
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/pack200/Segment;IIZ)V
+#addClass(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#currentClassReferencesInnerClass(Lorg/apache/commons/compress/harmony/pack200/CPClass;)V
+#addField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
+#finaliseBands()V
+#pack(Ljava/io/OutputStream;)V
+#addMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#endOfMethod()V
+#endOfClass()V
+#addSourceFile(Ljava/lang/String;)V
+#addEnclosingMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#addClassAttribute(Lorg/apache/commons/compress/harmony/pack200/NewAttribute;)V
+#addFieldAttribute(Lorg/apache/commons/compress/harmony/pack200/NewAttribute;)V
+#addMethodAttribute(Lorg/apache/commons/compress/harmony/pack200/NewAttribute;)V
+#addCodeAttribute(Lorg/apache/commons/compress/harmony/pack200/NewAttribute;)V
+#addMaxStack(II)V
+#addCode()V
+#addHandler(Lorg/objectweb/asm/Label;Lorg/objectweb/asm/Label;Lorg/objectweb/asm/Label;Ljava/lang/String;)V
+#addLineNumber(ILorg/objectweb/asm/Label;)V
+#addLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/objectweb/asm/Label;Lorg/objectweb/asm/Label;I)V
+#doBciRenumbering(Lorg/apache/commons/compress/harmony/pack200/IntList;Ljava/util/Map;)V
+#isAnySyntheticClasses()Z
+#isAnySyntheticFields()Z
+#isAnySyntheticMethods()Z
+#addParameterAnnotation(ILjava/lang/String;ZLjava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
+#addAnnotation(ILjava/lang/String;ZLjava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
+#addAnnotationDefault(Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
+#removeCurrentClass()V
+#numClassesProcessed()I

+###org/apache/commons/compress/harmony/pack200/Codec
@1.21
+#<init>()V
+#decode(Ljava/io/InputStream;)I
+#encode(II)[B
+#encode(I)[B
+#decode(Ljava/io/InputStream;J)I
+#decodeInts(ILjava/io/InputStream;)[I
+#decodeInts(ILjava/io/InputStream;I)[I
+#encode([I)[B

+###org/apache/commons/compress/harmony/pack200/CodecEncoding
@1.21
+#<init>()V
+#getCodec(ILjava/io/InputStream;Lorg/apache/commons/compress/harmony/pack200/Codec;)Lorg/apache/commons/compress/harmony/pack200/Codec;
+#getSpecifierForDefaultCodec(Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;)I
+#getSpecifier(Lorg/apache/commons/compress/harmony/pack200/Codec;Lorg/apache/commons/compress/harmony/pack200/Codec;)[I
+#getCanonicalCodec(I)Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;

+###org/apache/commons/compress/harmony/pack200/ConstantPoolEntry
@1.21
+#<init>()V
+#getIndex()I
+#setIndex(I)V

+###org/apache/commons/compress/harmony/pack200/CpBands
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/pack200/Segment;I)V
+#pack(Ljava/io/OutputStream;)V
+#finaliseBands()V
+#getCPUtf8(Ljava/lang/String;)Lorg/apache/commons/compress/harmony/pack200/CPUTF8;
+#getCPSignature(Ljava/lang/String;)Lorg/apache/commons/compress/harmony/pack200/CPSignature;
+#getCPClass(Ljava/lang/String;)Lorg/apache/commons/compress/harmony/pack200/CPClass;
+#addCPClass(Ljava/lang/String;)V
+#getCPNameAndType(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/compress/harmony/pack200/CPNameAndType;
+#getCPField(Lorg/apache/commons/compress/harmony/pack200/CPClass;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/compress/harmony/pack200/CPMethodOrField;
+#getConstant(Ljava/lang/Object;)Lorg/apache/commons/compress/harmony/pack200/CPConstant;
+#getCPMethod(Lorg/apache/commons/compress/harmony/pack200/CPClass;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/compress/harmony/pack200/CPMethodOrField;
+#getCPIMethod(Lorg/apache/commons/compress/harmony/pack200/CPClass;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/compress/harmony/pack200/CPMethodOrField;
+#getCPField(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/compress/harmony/pack200/CPMethodOrField;
+#getCPMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/compress/harmony/pack200/CPMethodOrField;
+#getCPIMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/compress/harmony/pack200/CPMethodOrField;
+#existsCpClass(Ljava/lang/String;)Z

+###org/apache/commons/compress/harmony/pack200/FileBands
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/pack200/CpBands;Lorg/apache/commons/compress/harmony/pack200/SegmentHeader;Lorg/apache/commons/compress/harmony/pack200/PackingOptions;Lorg/apache/commons/compress/harmony/pack200/Archive$SegmentUnit;I)V
+#finaliseBands()V
+#pack(Ljava/io/OutputStream;)V

+###org/apache/commons/compress/harmony/pack200/IcBands
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/pack200/SegmentHeader;Lorg/apache/commons/compress/harmony/pack200/CpBands;I)V
+#finaliseBands()V
+#pack(Ljava/io/OutputStream;)V
+#addInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#getInnerClassesForOuter(Ljava/lang/String;)Ljava/util/List;
+#getIcTuple(Lorg/apache/commons/compress/harmony/pack200/CPClass;)Lorg/apache/commons/compress/harmony/pack200/IcBands$IcTuple;

+###org/apache/commons/compress/harmony/pack200/IntList
@1.21
+#<init>()V
+#<init>(I)V
+#add(I)Z
+#add(II)V
+#clear()V
+#get(I)I
+#increment(I)V
+#isEmpty()Z
+#remove(I)I
+#size()I
+#toArray()[I
+#addAll(Lorg/apache/commons/compress/harmony/pack200/IntList;)V

+###org/apache/commons/compress/harmony/pack200/MetadataBandGroup
@1.21
+#<init>(Ljava/lang/String;ILorg/apache/commons/compress/harmony/pack200/CpBands;Lorg/apache/commons/compress/harmony/pack200/SegmentHeader;I)V
+#pack(Ljava/io/OutputStream;)V
+#addParameterAnnotation(I[ILorg/apache/commons/compress/harmony/pack200/IntList;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
+#addAnnotation(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
+#hasContent()Z
+#numBackwardsCalls()I
+#incrementAnnoN()V
+#newEntryInAnnoN()V
+#removeLatest()V

+###org/apache/commons/compress/harmony/pack200/NewAttribute$ErrorAttribute
@1.21
+#<init>(Ljava/lang/String;I)V

+###org/apache/commons/compress/harmony/pack200/NewAttribute$PassAttribute
@1.21
+#<init>(Ljava/lang/String;I)V

+###org/apache/commons/compress/harmony/pack200/NewAttribute$StripAttribute
@1.21
+#<init>(Ljava/lang/String;I)V

+###org/apache/commons/compress/harmony/pack200/NewAttribute
@1.21
+#<init>(Ljava/lang/String;Ljava/lang/String;I)V
+#<init>(Lorg/objectweb/asm/ClassReader;Ljava/lang/String;Ljava/lang/String;[B[CI[Lorg/objectweb/asm/Label;)V
+#addContext(I)V
+#isContextClass()Z
+#isContextMethod()Z
+#isContextField()Z
+#isContextCode()Z
+#getLayout()Ljava/lang/String;
+#isUnknown()Z
+#isCodeAttribute()Z
+#isUnknown(I)Z
+#readUTF8(I)Ljava/lang/String;
+#readClass(I)Ljava/lang/String;
+#readConst(I)Ljava/lang/Object;
+#getBytes()[B
+#getLabel(I)Lorg/objectweb/asm/Label;

+###org/apache/commons/compress/harmony/pack200/NewAttributeBands$AttributeLayoutElement
@1.21
+#addAttributeToBand(Lorg/apache/commons/compress/harmony/pack200/NewAttribute;Ljava/io/InputStream;)V
+#pack(Ljava/io/OutputStream;)V
+#renumberBci(Lorg/apache/commons/compress/harmony/pack200/IntList;Ljava/util/Map;)V

+###org/apache/commons/compress/harmony/pack200/NewAttributeBands$Call
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/pack200/NewAttributeBands;I)V
+#setCallable(Lorg/apache/commons/compress/harmony/pack200/NewAttributeBands$Callable;)V
+#addAttributeToBand(Lorg/apache/commons/compress/harmony/pack200/NewAttribute;Ljava/io/InputStream;)V
+#pack(Ljava/io/OutputStream;)V
+#renumberBci(Lorg/apache/commons/compress/harmony/pack200/IntList;Ljava/util/Map;)V
+#getCallableIndex()I
+#getCallable()Lorg/apache/commons/compress/harmony/pack200/NewAttributeBands$Callable;

+###org/apache/commons/compress/harmony/pack200/NewAttributeBands$Callable
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/pack200/NewAttributeBands;Ljava/util/List;)V
+#setBackwardsCallableIndex(I)V
+#addBackwardsCall()V
+#isBackwardsCallable()Z
+#setBackwardsCallable()V
+#addAttributeToBand(Lorg/apache/commons/compress/harmony/pack200/NewAttribute;Ljava/io/InputStream;)V
+#pack(Ljava/io/OutputStream;)V
+#renumberBci(Lorg/apache/commons/compress/harmony/pack200/IntList;Ljava/util/Map;)V
+#getBody()Ljava/util/List;

+###org/apache/commons/compress/harmony/pack200/NewAttributeBands$Integral
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/pack200/NewAttributeBands;Ljava/lang/String;)V
+#<init>(Lorg/apache/commons/compress/harmony/pack200/NewAttributeBands;Ljava/lang/String;Lorg/apache/commons/compress/harmony/pack200/NewAttributeBands$Integral;)V
+#getTag()Ljava/lang/String;
+#addAttributeToBand(Lorg/apache/commons/compress/harmony/pack200/NewAttribute;Ljava/io/InputStream;)V
+#pack(Ljava/io/OutputStream;)V
+#latestValue()I
+#renumberBci(Lorg/apache/commons/compress/harmony/pack200/IntList;Ljava/util/Map;)V

+###org/apache/commons/compress/harmony/pack200/NewAttributeBands$LayoutElement
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/pack200/NewAttributeBands;)V

+###org/apache/commons/compress/harmony/pack200/NewAttributeBands$Reference
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/pack200/NewAttributeBands;Ljava/lang/String;)V
+#addAttributeToBand(Lorg/apache/commons/compress/harmony/pack200/NewAttribute;Ljava/io/InputStream;)V
+#getTag()Ljava/lang/String;
+#pack(Ljava/io/OutputStream;)V
+#renumberBci(Lorg/apache/commons/compress/harmony/pack200/IntList;Ljava/util/Map;)V

+###org/apache/commons/compress/harmony/pack200/NewAttributeBands$Replication
@1.21
+#getCountElement()Lorg/apache/commons/compress/harmony/pack200/NewAttributeBands$Integral;
+#getLayoutElements()Ljava/util/List;
+#<init>(Lorg/apache/commons/compress/harmony/pack200/NewAttributeBands;Ljava/lang/String;Ljava/lang/String;)V
+#addAttributeToBand(Lorg/apache/commons/compress/harmony/pack200/NewAttribute;Ljava/io/InputStream;)V
+#pack(Ljava/io/OutputStream;)V
+#renumberBci(Lorg/apache/commons/compress/harmony/pack200/IntList;Ljava/util/Map;)V

+###org/apache/commons/compress/harmony/pack200/NewAttributeBands$Union
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/pack200/NewAttributeBands;Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V
+#addAttributeToBand(Lorg/apache/commons/compress/harmony/pack200/NewAttribute;Ljava/io/InputStream;)V
+#pack(Ljava/io/OutputStream;)V
+#renumberBci(Lorg/apache/commons/compress/harmony/pack200/IntList;Ljava/util/Map;)V
+#getUnionTag()Lorg/apache/commons/compress/harmony/pack200/NewAttributeBands$Integral;
+#getUnionCases()Ljava/util/List;
+#getDefaultCaseBody()Ljava/util/List;

+###org/apache/commons/compress/harmony/pack200/NewAttributeBands$UnionCase
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/pack200/NewAttributeBands;Ljava/util/List;)V
+#hasTag(J)Z
+#<init>(Lorg/apache/commons/compress/harmony/pack200/NewAttributeBands;Ljava/util/List;Ljava/util/List;)V
+#addAttributeToBand(Lorg/apache/commons/compress/harmony/pack200/NewAttribute;Ljava/io/InputStream;)V
+#pack(Ljava/io/OutputStream;)V
+#renumberBci(Lorg/apache/commons/compress/harmony/pack200/IntList;Ljava/util/Map;)V
+#getBody()Ljava/util/List;

+###org/apache/commons/compress/harmony/pack200/NewAttributeBands
@1.21
+#<init>(ILorg/apache/commons/compress/harmony/pack200/CpBands;Lorg/apache/commons/compress/harmony/pack200/SegmentHeader;Lorg/apache/commons/compress/harmony/pack200/AttributeDefinitionBands$AttributeDefinition;)V
+#addAttribute(Lorg/apache/commons/compress/harmony/pack200/NewAttribute;)V
+#pack(Ljava/io/OutputStream;)V
+#getAttributeName()Ljava/lang/String;
+#getFlagIndex()I
+#numBackwardsCalls()[I
+#isUsedAtLeastOnce()Z
+#renumberBci(Lorg/apache/commons/compress/harmony/pack200/IntList;Ljava/util/Map;)V

+###org/apache/commons/compress/harmony/pack200/Pack200Adapter
@1.21
+#<init>()V
+#properties()Ljava/util/SortedMap;
+#addPropertyChangeListener(Ljava/beans/PropertyChangeListener;)V
+#removePropertyChangeListener(Ljava/beans/PropertyChangeListener;)V

+###org/apache/commons/compress/harmony/pack200/Pack200ClassReader
@1.21
+#<init>([B)V
+#readUnsignedShort(I)I
+#readConst(I[C)Ljava/lang/Object;
+#readUTF8(I[C)Ljava/lang/String;
+#lastConstantHadWideIndex()Z
+#hasSyntheticAttributes()Z
+#setFileName(Ljava/lang/String;)V
+#getFileName()Ljava/lang/String;

+###org/apache/commons/compress/harmony/pack200/Pack200Exception
@1.21
+#<init>(Ljava/lang/String;)V

+###org/apache/commons/compress/harmony/pack200/Pack200PackerAdapter
@1.21
+#<init>()V
+#pack(Ljava/util/jar/JarFile;Ljava/io/OutputStream;)V
+#pack(Ljava/util/jar/JarInputStream;Ljava/io/OutputStream;)V

+###org/apache/commons/compress/harmony/pack200/PackingOptions
@1.21
+#<init>()V
+#isGzip()Z
+#setGzip(Z)V
+#isStripDebug()Z
+#setStripDebug(Z)V
+#isKeepFileOrder()Z
+#setKeepFileOrder(Z)V
+#getSegmentLimit()J
+#setSegmentLimit(J)V
+#getEffort()I
+#setEffort(I)V
+#getDeflateHint()Ljava/lang/String;
+#isKeepDeflateHint()Z
+#setDeflateHint(Ljava/lang/String;)V
+#getModificationTime()Ljava/lang/String;
+#setModificationTime(Ljava/lang/String;)V
+#isPassFile(Ljava/lang/String;)Z
+#addPassFile(Ljava/lang/String;)V
+#removePassFile(Ljava/lang/String;)V
+#getUnknownAttributeAction()Ljava/lang/String;
+#setUnknownAttributeAction(Ljava/lang/String;)V
+#addClassAttributeAction(Ljava/lang/String;Ljava/lang/String;)V
+#addFieldAttributeAction(Ljava/lang/String;Ljava/lang/String;)V
+#addMethodAttributeAction(Ljava/lang/String;Ljava/lang/String;)V
+#addCodeAttributeAction(Ljava/lang/String;Ljava/lang/String;)V
+#isVerbose()Z
+#setVerbose(Z)V
+#setQuiet(Z)V
+#getLogFile()Ljava/lang/String;
+#setLogFile(Ljava/lang/String;)V
+#getUnknownAttributePrototypes()[Lorg/objectweb/asm/Attribute;
+#getUnknownClassAttributeAction(Ljava/lang/String;)Ljava/lang/String;
+#getUnknownMethodAttributeAction(Ljava/lang/String;)Ljava/lang/String;
+#getUnknownFieldAttributeAction(Ljava/lang/String;)Ljava/lang/String;
+#getUnknownCodeAttributeAction(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/commons/compress/harmony/pack200/PackingUtils
@1.21
+#<init>()V
+#config(Lorg/apache/commons/compress/harmony/pack200/PackingOptions;)V
+#log(Ljava/lang/String;)V
+#copyThroughJar(Ljava/util/jar/JarInputStream;Ljava/io/OutputStream;)V
+#copyThroughJar(Ljava/util/jar/JarFile;Ljava/io/OutputStream;)V
+#getPackingFileListFromJar(Ljava/util/jar/JarInputStream;Z)Ljava/util/List;
+#getPackingFileListFromJar(Ljava/util/jar/JarFile;Z)Ljava/util/List;

+###org/apache/commons/compress/harmony/pack200/PopulationCodec
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/pack200/Codec;Lorg/apache/commons/compress/harmony/pack200/Codec;Lorg/apache/commons/compress/harmony/pack200/Codec;)V
+#<init>(Lorg/apache/commons/compress/harmony/pack200/Codec;ILorg/apache/commons/compress/harmony/pack200/Codec;)V
+#decode(Ljava/io/InputStream;)I
+#decode(Ljava/io/InputStream;J)I
+#decodeInts(ILjava/io/InputStream;)[I
+#getFavoured()[I
+#getFavouredCodec()Lorg/apache/commons/compress/harmony/pack200/Codec;
+#getUnfavouredCodec()Lorg/apache/commons/compress/harmony/pack200/Codec;
+#encode(II)[B
+#encode(I)[B
+#encode([I[I[I)[B
+#getTokenCodec()Lorg/apache/commons/compress/harmony/pack200/Codec;

+###org/apache/commons/compress/harmony/pack200/RunCodec
@1.21
+#<init>(ILorg/apache/commons/compress/harmony/pack200/Codec;Lorg/apache/commons/compress/harmony/pack200/Codec;)V
+#decode(Ljava/io/InputStream;)I
+#decode(Ljava/io/InputStream;J)I
+#decodeInts(ILjava/io/InputStream;)[I
+#toString()Ljava/lang/String;
+#encode(II)[B
+#encode(I)[B
+#getK()I
+#getACodec()Lorg/apache/commons/compress/harmony/pack200/Codec;
+#getBCodec()Lorg/apache/commons/compress/harmony/pack200/Codec;

+###org/apache/commons/compress/harmony/pack200/Segment$ArrayVisitor
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/pack200/Segment;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/objectweb/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/objectweb/asm/AnnotationVisitor;
+#visitEnd()V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/commons/compress/harmony/pack200/Segment$PassException
@1.21
+#<init>()V

+###org/apache/commons/compress/harmony/pack200/Segment$SegmentAnnotationVisitor
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/pack200/Segment;ILjava/lang/String;Z)V
+#<init>(Lorg/apache/commons/compress/harmony/pack200/Segment;I)V
+#<init>(Lorg/apache/commons/compress/harmony/pack200/Segment;IILjava/lang/String;Z)V
+#visit(Ljava/lang/String;Ljava/lang/Object;)V
+#visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/objectweb/asm/AnnotationVisitor;
+#visitArray(Ljava/lang/String;)Lorg/objectweb/asm/AnnotationVisitor;
+#visitEnd()V
+#visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/commons/compress/harmony/pack200/Segment$SegmentFieldVisitor
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/pack200/Segment;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/objectweb/asm/Attribute;)V
+#visitEnd()V

+###org/apache/commons/compress/harmony/pack200/Segment$SegmentMethodVisitor
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/pack200/Segment;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/objectweb/asm/AnnotationVisitor;
+#visitAnnotationDefault()Lorg/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/objectweb/asm/Attribute;)V
+#visitCode()V
+#visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
+#visitLabel(Lorg/objectweb/asm/Label;)V
+#visitLineNumber(ILorg/objectweb/asm/Label;)V
+#visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/objectweb/asm/Label;Lorg/objectweb/asm/Label;I)V
+#visitMaxs(II)V
+#visitParameterAnnotation(ILjava/lang/String;Z)Lorg/objectweb/asm/AnnotationVisitor;
+#visitTryCatchBlock(Lorg/objectweb/asm/Label;Lorg/objectweb/asm/Label;Lorg/objectweb/asm/Label;Ljava/lang/String;)V
+#visitEnd()V
+#visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitIincInsn(II)V
+#visitInsn(I)V
+#visitIntInsn(II)V
+#visitJumpInsn(ILorg/objectweb/asm/Label;)V
+#visitLdcInsn(Ljava/lang/Object;)V
+#visitLookupSwitchInsn(Lorg/objectweb/asm/Label;[I[Lorg/objectweb/asm/Label;)V
+#visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitMultiANewArrayInsn(Ljava/lang/String;I)V
+#visitTableSwitchInsn(IILorg/objectweb/asm/Label;[Lorg/objectweb/asm/Label;)V
+#visitTypeInsn(ILjava/lang/String;)V
+#visitVarInsn(II)V

+###org/apache/commons/compress/harmony/pack200/Segment
@1.21
+#<init>()V
+#pack(Lorg/apache/commons/compress/harmony/pack200/Archive$SegmentUnit;Ljava/io/OutputStream;Lorg/apache/commons/compress/harmony/pack200/PackingOptions;)V
+#visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#visitSource(Ljava/lang/String;Ljava/lang/String;)V
+#visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#visitAnnotation(Ljava/lang/String;Z)Lorg/objectweb/asm/AnnotationVisitor;
+#visitAttribute(Lorg/objectweb/asm/Attribute;)V
+#visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
+#visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/objectweb/asm/FieldVisitor;
+#visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/objectweb/asm/MethodVisitor;
+#visitEnd()V
+#getClassBands()Lorg/apache/commons/compress/harmony/pack200/ClassBands;
+#lastConstantHadWideIndex()Z
+#getCpBands()Lorg/apache/commons/compress/harmony/pack200/CpBands;
+#getSegmentHeader()Lorg/apache/commons/compress/harmony/pack200/SegmentHeader;
+#getAttrBands()Lorg/apache/commons/compress/harmony/pack200/AttributeDefinitionBands;
+#getIcBands()Lorg/apache/commons/compress/harmony/pack200/IcBands;
+#getCurrentClassReader()Lorg/apache/commons/compress/harmony/pack200/Pack200ClassReader;

+###org/apache/commons/compress/harmony/pack200/SegmentHeader
@1.21
+#<init>()V
+#pack(Ljava/io/OutputStream;)V
+#setCp_Utf8_count(I)V
+#setCp_Int_count(I)V
+#setCp_Float_count(I)V
+#setCp_Long_count(I)V
+#setCp_Double_count(I)V
+#setCp_String_count(I)V
+#setCp_Class_count(I)V
+#setCp_Signature_count(I)V
+#setCp_Descr_count(I)V
+#setCp_Field_count(I)V
+#setCp_Method_count(I)V
+#setCp_Imethod_count(I)V
+#setAttribute_definition_count(I)V
+#setHave_all_code_flags(Z)V
+#getArchive_modtime()I
+#setFile_count(I)V
+#setDeflate_hint(Z)V
+#setHave_class_flags_hi(Z)V
+#setHave_field_flags_hi(Z)V
+#setHave_method_flags_hi(Z)V
+#setHave_code_flags_hi(Z)V
+#have_class_flags_hi()Z
+#have_field_flags_hi()Z
+#have_method_flags_hi()Z
+#have_code_flags_hi()Z
+#setIc_count(I)V
+#setClass_count(I)V
+#addMajorVersion(I)V
+#getDefaultMajorVersion()I
+#have_file_size_hi()Z
+#have_file_modtime()Z
+#have_file_options()Z
+#have_all_code_flags()Z
+#appendBandCodingSpecifier(I)V

+###org/apache/commons/compress/harmony/unpack200/Archive
@1.21
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/io/InputStream;Ljava/util/jar/JarOutputStream;)V
+#unpack()V
+#setRemovePackFile(Z)V
+#setVerbose(Z)V
+#setQuiet(Z)V
+#setLogFile(Ljava/lang/String;)V
+#setLogFile(Ljava/lang/String;Z)V
+#setDeflateHint(Z)V

+###org/apache/commons/compress/harmony/unpack200/AttrDefinitionBands
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/Segment;)V
+#read(Ljava/io/InputStream;)V
+#unpack()V
+#getAttributeDefinitionMap()Lorg/apache/commons/compress/harmony/unpack200/AttributeLayoutMap;

+###org/apache/commons/compress/harmony/unpack200/AttributeLayout
@1.21
+#<init>(Ljava/lang/String;ILjava/lang/String;I)V
+#<init>(Ljava/lang/String;ILjava/lang/String;IZ)V
+#getCodec()Lorg/apache/commons/compress/harmony/pack200/Codec;
+#getLayout()Ljava/lang/String;
+#getValue(JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;
+#getValue(JLjava/lang/String;Lorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;
+#hashCode()I
+#matches(J)Z
+#toString()Ljava/lang/String;
+#getContext()I
+#getIndex()I
+#getName()Ljava/lang/String;
+#numBackwardsCallables()I
+#isDefaultLayout()Z
+#setBackwardsCallCount(I)V

+###org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap
@1.21
+#<init>()V
+#add(Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;)V
+#add(Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;Lorg/apache/commons/compress/harmony/unpack200/NewAttributeBands;)V
+#getAttributeLayout(Ljava/lang/String;I)Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;
+#getAttributeLayout(II)Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;
+#checkMap()V
+#getAttributeBands(Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;)Lorg/apache/commons/compress/harmony/unpack200/NewAttributeBands;

+###org/apache/commons/compress/harmony/unpack200/BandSet
@1.21
+#read(Ljava/io/InputStream;)V
+#unpack()V
+#unpack(Ljava/io/InputStream;)V
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/Segment;)V
+#decodeBandInt(Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;I)[I
+#decodeBandInt(Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;[I)[[I
+#parseFlags(Ljava/lang/String;Ljava/io/InputStream;ILorg/apache/commons/compress/harmony/pack200/BHSDCodec;Z)[J
+#parseFlags(Ljava/lang/String;Ljava/io/InputStream;[ILorg/apache/commons/compress/harmony/pack200/BHSDCodec;Z)[[J
+#parseFlags(Ljava/lang/String;Ljava/io/InputStream;ILorg/apache/commons/compress/harmony/pack200/BHSDCodec;Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;)[J
+#parseFlags(Ljava/lang/String;Ljava/io/InputStream;[ILorg/apache/commons/compress/harmony/pack200/BHSDCodec;Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;)[[J
+#parseReferences(Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;I[Ljava/lang/String;)[Ljava/lang/String;
+#parseReferences(Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;[I[Ljava/lang/String;)[[Ljava/lang/String;
+#parseCPIntReferences(Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;I)[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPInteger;
+#parseCPDoubleReferences(Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;I)[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPDouble;
+#parseCPFloatReferences(Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;I)[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPFloat;
+#parseCPLongReferences(Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;I)[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPLong;
+#parseCPUTF8References(Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;I)[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;
+#parseCPUTF8References(Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;[I)[[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;
+#parseCPStringReferences(Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;I)[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPString;
+#parseCPInterfaceMethodRefReferences(Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;I)[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPInterfaceMethodRef;
+#parseCPMethodRefReferences(Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;I)[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPMethodRef;
+#parseCPFieldRefReferences(Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;I)[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPFieldRef;
+#parseCPDescriptorReferences(Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;I)[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;
+#parseCPSignatureReferences(Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;I)[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;
+#parseCPClassReferences(Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;I)[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;

+###org/apache/commons/compress/harmony/unpack200/BcBands
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/Segment;)V
+#read(Ljava/io/InputStream;)V
+#unpack()V
+#getMethodByteCodePacked()[[[B
+#getBcCaseCount()[I
+#getBcCaseValue()[I
+#getBcByte()[I
+#getBcClassRef()[I
+#getBcDoubleRef()[I
+#getBcFieldRef()[I
+#getBcFloatRef()[I
+#getBcIMethodRef()[I
+#getBcInitRef()[I
+#getBcIntRef()[I
+#getBcLabel()[I
+#getBcLocal()[I
+#getBcLongRef()[I
+#getBcMethodRef()[I
+#getBcShort()[I
+#getBcStringRef()[I
+#getBcSuperField()[I
+#getBcSuperMethod()[I
+#getBcThisField()[I
+#getBcThisMethod()[I

+###org/apache/commons/compress/harmony/unpack200/ClassBands
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/Segment;)V
+#read(Ljava/io/InputStream;)V
+#unpack()V
+#getClassAttributes()[Ljava/util/ArrayList;
+#getClassFieldCount()[I
+#getRawClassFlags()[J
+#getClassFlags()[J
+#getClassInterfacesInts()[[I
+#getClassMethodCount()[I
+#getClassSuperInts()[I
+#getClassThisInts()[I
+#getCodeMaxNALocals()[I
+#getCodeMaxStack()[I
+#getFieldAttributes()[[Ljava/util/ArrayList;
+#getFieldDescrInts()[[I
+#getMethodDescrInts()[[I
+#getFieldFlags()[[J
+#getOrderedCodeAttributes()Ljava/util/ArrayList;
+#getMethodAttributes()[[Ljava/util/ArrayList;
+#getMethodDescr()[[Ljava/lang/String;
+#getMethodFlags()[[J
+#getClassVersionMajor()[I
+#getClassVersionMinor()[I
+#getCodeHandlerCount()[I
+#getCodeHandlerCatchPO()[[I
+#getCodeHandlerClassRCN()[[I
+#getCodeHandlerEndPO()[[I
+#getCodeHandlerStartP()[[I
+#getIcLocal()[[Lorg/apache/commons/compress/harmony/unpack200/IcTuple;
+#getCodeHasAttributes()[Z

+###org/apache/commons/compress/harmony/unpack200/CpBands
@1.21
+#getConstantPool()Lorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/Segment;)V
+#read(Ljava/io/InputStream;)V
+#unpack()V
+#getCpClass()[Ljava/lang/String;
+#getCpDescriptor()[Ljava/lang/String;
+#getCpFieldClass()[Ljava/lang/String;
+#getCpIMethodClass()[Ljava/lang/String;
+#getCpInt()[I
+#getCpLong()[J
+#getCpMethodClass()[Ljava/lang/String;
+#getCpMethodDescriptor()[Ljava/lang/String;
+#getCpSignature()[Ljava/lang/String;
+#getCpUTF8()[Ljava/lang/String;
+#cpUTF8Value(I)Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;
+#cpUTF8Value(Ljava/lang/String;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;
+#cpUTF8Value(Ljava/lang/String;Z)Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;
+#cpStringValue(I)Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPString;
+#cpLongValue(I)Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPLong;
+#cpIntegerValue(I)Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPInteger;
+#cpFloatValue(I)Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPFloat;
+#cpClassValue(I)Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;
+#cpClassValue(Ljava/lang/String;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;
+#cpDoubleValue(I)Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPDouble;
+#cpNameAndTypeValue(I)Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;
+#cpIMethodValue(I)Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPInterfaceMethodRef;
+#cpMethodValue(I)Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPMethodRef;
+#cpFieldValue(I)Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPFieldRef;
+#cpSignatureValue(I)Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;
+#cpNameAndTypeValue(Ljava/lang/String;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;
+#getCpDescriptorNameInts()[I
+#getCpDescriptorTypeInts()[I

+###org/apache/commons/compress/harmony/unpack200/FileBands
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/Segment;)V
+#read(Ljava/io/InputStream;)V
+#processFileBits()V
+#unpack()V
+#getFileBits()[[B
+#getFileModtime()[I
+#getFileName()[Ljava/lang/String;
+#getFileOptions()[I
+#getFileSize()[J

+###org/apache/commons/compress/harmony/unpack200/IMatcher
@1.21
+#matches(J)Z

+###org/apache/commons/compress/harmony/unpack200/IcBands
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/Segment;)V
+#read(Ljava/io/InputStream;)V
+#unpack()V
+#getIcTuples()[Lorg/apache/commons/compress/harmony/unpack200/IcTuple;
+#getRelevantIcTuples(Ljava/lang/String;Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)[Lorg/apache/commons/compress/harmony/unpack200/IcTuple;

+###org/apache/commons/compress/harmony/unpack200/IcTuple
@1.21
+#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;IIII)V
+#predicted()Z
+#nestedExplicitFlagSet()Z
+#innerBreakAtDollar(Ljava/lang/String;)[Ljava/lang/String;
+#outerClassString()Ljava/lang/String;
+#simpleClassName()Ljava/lang/String;
+#thisClassString()Ljava/lang/String;
+#isMember()Z
+#isAnonymous()Z
+#outerIsAnonymous()Z
+#toString()Ljava/lang/String;
+#nullSafeEquals(Ljava/lang/String;Ljava/lang/String;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getC()Ljava/lang/String;
+#getF()I
+#getC2()Ljava/lang/String;
+#getN()Ljava/lang/String;
+#getTupleIndex()I
+#thisClassIndex()I
+#outerClassIndex()I
+#simpleClassNameIndex()I

+###org/apache/commons/compress/harmony/unpack200/MetadataBandGroup
@1.21
+#setRvaAttributeName(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V
+#setRiaAttributeName(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V
+#setRvpaAttributeName(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V
+#setRipaAttributeName(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V
+#<init>(Ljava/lang/String;Lorg/apache/commons/compress/harmony/unpack200/CpBands;)V
+#getAttributes()Ljava/util/List;

+###org/apache/commons/compress/harmony/unpack200/NewAttributeBands$Call
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/NewAttributeBands;I)V
+#setCallable(Lorg/apache/commons/compress/harmony/unpack200/NewAttributeBands$Callable;)V
+#readBands(Ljava/io/InputStream;I)V
+#addToAttribute(ILorg/apache/commons/compress/harmony/unpack200/bytecode/NewAttribute;)V
+#getCallableIndex()I
+#getCallable()Lorg/apache/commons/compress/harmony/unpack200/NewAttributeBands$Callable;

+###org/apache/commons/compress/harmony/unpack200/NewAttributeBands$Callable
@1.21
+#<init>(Ljava/util/List;)V
+#addNextToAttribute(Lorg/apache/commons/compress/harmony/unpack200/bytecode/NewAttribute;)V
+#addCount(I)V
+#readBands(Ljava/io/InputStream;I)V
+#addToAttribute(ILorg/apache/commons/compress/harmony/unpack200/bytecode/NewAttribute;)V
+#isBackwardsCallable()Z
+#setBackwardsCallable()V
+#setFirstCallable(Z)V
+#getBody()Ljava/util/List;

+###org/apache/commons/compress/harmony/unpack200/NewAttributeBands$Integral
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/NewAttributeBands;Ljava/lang/String;)V
+#readBands(Ljava/io/InputStream;I)V
+#addToAttribute(ILorg/apache/commons/compress/harmony/unpack200/bytecode/NewAttribute;)V
+#getTag()Ljava/lang/String;

+###org/apache/commons/compress/harmony/unpack200/NewAttributeBands$Reference
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/NewAttributeBands;Ljava/lang/String;)V
+#readBands(Ljava/io/InputStream;I)V
+#addToAttribute(ILorg/apache/commons/compress/harmony/unpack200/bytecode/NewAttribute;)V
+#getTag()Ljava/lang/String;

+###org/apache/commons/compress/harmony/unpack200/NewAttributeBands$Replication
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/NewAttributeBands;Ljava/lang/String;Ljava/lang/String;)V
+#readBands(Ljava/io/InputStream;I)V
+#addToAttribute(ILorg/apache/commons/compress/harmony/unpack200/bytecode/NewAttribute;)V
+#getCountElement()Lorg/apache/commons/compress/harmony/unpack200/NewAttributeBands$Integral;
+#getLayoutElements()Ljava/util/List;

+###org/apache/commons/compress/harmony/unpack200/NewAttributeBands$Union
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/NewAttributeBands;Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V
+#readBands(Ljava/io/InputStream;I)V
+#addToAttribute(ILorg/apache/commons/compress/harmony/unpack200/bytecode/NewAttribute;)V
+#getUnionTag()Lorg/apache/commons/compress/harmony/unpack200/NewAttributeBands$Integral;
+#getUnionCases()Ljava/util/List;
+#getDefaultCaseBody()Ljava/util/List;

+###org/apache/commons/compress/harmony/unpack200/NewAttributeBands$UnionCase
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/NewAttributeBands;Ljava/util/List;)V
+#hasTag(J)Z
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/NewAttributeBands;Ljava/util/List;Ljava/util/List;)V
+#readBands(Ljava/io/InputStream;I)V
+#addToAttribute(ILorg/apache/commons/compress/harmony/unpack200/bytecode/NewAttribute;)V
+#getBody()Ljava/util/List;
@1.22
+#hasTag(I)Z

+###org/apache/commons/compress/harmony/unpack200/NewAttributeBands
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/Segment;Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;)V
+#read(Ljava/io/InputStream;)V
+#parseAttributes(Ljava/io/InputStream;I)Ljava/util/List;
+#getCodec(Ljava/lang/String;)Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;
+#getBackwardsCallCount()I
+#setBackwardsCalls([I)V
+#unpack()V

+###org/apache/commons/compress/harmony/unpack200/Pack200UnpackerAdapter
@1.21
+#<init>()V
+#unpack(Ljava/io/InputStream;Ljava/util/jar/JarOutputStream;)V
+#unpack(Ljava/io/File;Ljava/util/jar/JarOutputStream;)V

+###org/apache/commons/compress/harmony/unpack200/Segment
@1.21
+#<init>()V
+#unpack(Ljava/io/InputStream;Ljava/util/jar/JarOutputStream;)V
+#writeJar(Ljava/util/jar/JarOutputStream;)V
+#getConstantPool()Lorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;
+#getSegmentHeader()Lorg/apache/commons/compress/harmony/unpack200/SegmentHeader;
+#setPreRead(Z)V
+#setLogLevel(I)V
+#setLogStream(Ljava/io/OutputStream;)V
+#log(ILjava/lang/String;)V
+#overrideDeflateHint(Z)V

+###org/apache/commons/compress/harmony/unpack200/SegmentConstantPool
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/CpBands;)V
+#getValue(IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;
+#getClassSpecificPoolEntry(IJLjava/lang/String;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ConstantPoolEntry;
+#getClassPoolEntry(Ljava/lang/String;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ConstantPoolEntry;
+#getInitMethodPoolEntry(IJLjava/lang/String;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ConstantPoolEntry;
+#getConstantPoolEntry(IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ConstantPoolEntry;

+###org/apache/commons/compress/harmony/unpack200/SegmentConstantPoolArrayCache$CachedArray
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/SegmentConstantPoolArrayCache;[Ljava/lang/String;)V
+#lastKnownSize()I
+#indexesForKey(Ljava/lang/String;)Ljava/util/List;

+###org/apache/commons/compress/harmony/unpack200/SegmentConstantPoolArrayCache
@1.21
+#<init>()V
+#indexesForArrayKey([Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;

+###org/apache/commons/compress/harmony/unpack200/SegmentHeader
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/Segment;)V
+#getArchiveSizeOffset()I
+#read(Ljava/io/InputStream;)V
+#unpack()V
+#getArchiveModtime()J
+#getAttributeDefinitionCount()I
+#getClassCount()I
+#getCpClassCount()I
+#getCpDescriptorCount()I
+#getCpDoubleCount()I
+#getCpFieldCount()I
+#getCpFloatCount()I
+#getCpIMethodCount()I
+#getCpIntCount()I
+#getCpLongCount()I
+#getCpMethodCount()I
+#getCpSignatureCount()I
+#getCpStringCount()I
+#getCpUTF8Count()I
+#getDefaultClassMajorVersion()I
+#getDefaultClassMinorVersion()I
+#getInnerClassCount()I
+#getArchiveSize()J
+#getBandHeadersInputStream()Ljava/io/InputStream;
+#getNumberOfFiles()I
+#getSegmentsRemaining()I
+#getOptions()Lorg/apache/commons/compress/harmony/unpack200/SegmentOptions;
+#setArchiveModtime(J)V
+#setArchiveSize(J)V
+#setSegmentsRemaining(J)V
+#getBandHeadersSize()I

+###org/apache/commons/compress/harmony/unpack200/SegmentOptions
@1.21
+#<init>(I)V
+#hasAllCodeFlags()Z
+#hasArchiveFileCounts()Z
+#hasClassFlagsHi()Z
+#hasCodeFlagsHi()Z
+#hasCPNumberCounts()Z
+#hasFieldFlagsHi()Z
+#hasFileModtime()Z
+#hasFileOptions()Z
+#hasFileSizeHi()Z
+#hasMethodFlagsHi()Z
+#hasSpecialFormats()Z
+#shouldDeflate()Z

+###org/apache/commons/compress/harmony/unpack200/SegmentUtils
@1.21
+#<init>()V
+#countArgs(Ljava/lang/String;)I
+#countInvokeInterfaceArgs(Ljava/lang/String;)I
+#countMatches([JLorg/apache/commons/compress/harmony/unpack200/IMatcher;)I
+#countBit16([I)I
+#countBit16([J)I
+#countBit16([[J)I
+#countMatches([[JLorg/apache/commons/compress/harmony/unpack200/IMatcher;)I

+###org/apache/commons/compress/harmony/unpack200/bytecode/AnnotationDefaultAttribute
@1.21
+#setAttributeName(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/bytecode/AnnotationsAttribute$ElementValue;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z

+###org/apache/commons/compress/harmony/unpack200/bytecode/AnnotationsAttribute$Annotation
@1.21
+#<init>(ILorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;[Lorg/apache/commons/compress/harmony/unpack200/bytecode/AnnotationsAttribute$ElementValue;)V
+#getLength()I
+#resolve(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V
+#writeBody(Ljava/io/DataOutputStream;)V
+#getClassFileEntries()Ljava/util/List;

+###org/apache/commons/compress/harmony/unpack200/bytecode/AnnotationsAttribute$ElementValue
@1.21
+#<init>(ILjava/lang/Object;)V
+#getClassFileEntries()Ljava/util/List;
+#resolve(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V
+#writeBody(Ljava/io/DataOutputStream;)V
+#getLength()I

+###org/apache/commons/compress/harmony/unpack200/bytecode/AnnotationsAttribute
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/Attribute
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V
+#equals(Ljava/lang/Object;)Z
+#hasBCIRenumbering()Z
+#isSourceFileAttribute()Z
+#hashCode()I

+###org/apache/commons/compress/harmony/unpack200/bytecode/BCIRenumberedAttribute
@1.21
+#hasBCIRenumbering()Z
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V
+#toString()Ljava/lang/String;
+#renumber(Ljava/util/List;)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/ByteCode
@1.21
+#getByteCode(I)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ByteCode;
+#equals(Ljava/lang/Object;)Z
+#extractOperands(Lorg/apache/commons/compress/harmony/unpack200/bytecode/OperandManager;Lorg/apache/commons/compress/harmony/unpack200/Segment;I)V
+#getLength()I
+#getName()Ljava/lang/String;
+#getNestedClassFileEntries()[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;
+#getOpcode()I
+#hashCode()I
+#setOperandBytes([I)V
+#setOperand2Bytes(II)V
+#setOperandSigned2Bytes(II)V
+#setOperandByte(II)V
+#toString()Ljava/lang/String;
+#setNested([Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)V
+#setNestedPositions([[I)V
+#getNestedPositions()[[I
+#getNestedPosition(I)[I
+#hasMultipleByteCodes()Z
+#setByteCodeIndex(I)V
+#getByteCodeIndex()I
+#setByteCodeTargets([I)V
+#getByteCodeTargets()[I
+#applyByteCodeTargetFixup(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CodeAttribute;)V
+#setRewrite([I)V
+#getRewrite()[I
+#nestedMustStartClassPool()Z

+###org/apache/commons/compress/harmony/unpack200/bytecode/CPClass
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;I)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#getName()Ljava/lang/String;

+###org/apache/commons/compress/harmony/unpack200/bytecode/CPConstant
@1.21
+#<init>(BLjava/lang/Object;I)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/commons/compress/harmony/unpack200/bytecode/CPConstantNumber
@1.21
+#<init>(BLjava/lang/Object;I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/CPDouble
@1.21
+#<init>(Ljava/lang/Double;I)V
+#toString()Ljava/lang/String;

+###org/apache/commons/compress/harmony/unpack200/bytecode/CPField
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;JLjava/util/List;)V
+#toString()Ljava/lang/String;

+###org/apache/commons/compress/harmony/unpack200/bytecode/CPFieldRef
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;I)V
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/apache/commons/compress/harmony/unpack200/bytecode/CPFloat
@1.21
+#<init>(Ljava/lang/Float;I)V
+#toString()Ljava/lang/String;

+###org/apache/commons/compress/harmony/unpack200/bytecode/CPInteger
@1.21
+#<init>(Ljava/lang/Integer;I)V
+#toString()Ljava/lang/String;

+###org/apache/commons/compress/harmony/unpack200/bytecode/CPInterfaceMethodRef
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;I)V
+#invokeInterfaceCount()I
+#hashCode()I

+###org/apache/commons/compress/harmony/unpack200/bytecode/CPLong
@1.21
+#<init>(Ljava/lang/Long;I)V
+#toString()Ljava/lang/String;

+###org/apache/commons/compress/harmony/unpack200/bytecode/CPMember
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;JLjava/util/List;)V
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z

+###org/apache/commons/compress/harmony/unpack200/bytecode/CPMethod
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;JLjava/util/List;)V
+#toString()Ljava/lang/String;
+#hashCode()I

+###org/apache/commons/compress/harmony/unpack200/bytecode/CPMethodRef
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;I)V
+#hashCode()I

+###org/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;I)V
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#invokeInterfaceCount()I

+###org/apache/commons/compress/harmony/unpack200/bytecode/CPRef
@1.21
+#<init>(BLorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;I)V
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/commons/compress/harmony/unpack200/bytecode/CPString
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;I)V
+#toString()Ljava/lang/String;
+#hashCode()I

+###org/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8
@1.21
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#underlyingString()Ljava/lang/String;
+#setGlobalIndex(I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool
@1.21
+#<init>()V
+#add(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;
+#addNestedEntries()V
+#indexOf(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I
+#size()I
+#get(I)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;
+#resolve(Lorg/apache/commons/compress/harmony/unpack200/Segment;)V
+#entries()Ljava/util/List;
+#addWithNestedEntries(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;

+###org/apache/commons/compress/harmony/unpack200/bytecode/ClassFile
@1.21
+#<init>()V
+#write(Ljava/io/DataOutputStream;)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry
@1.21
+#<init>()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutputStream;)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/CodeAttribute
@1.21
+#<init>(II[BLorg/apache/commons/compress/harmony/unpack200/Segment;Lorg/apache/commons/compress/harmony/unpack200/bytecode/OperandManager;Ljava/util/List;)V
+#toString()Ljava/lang/String;
+#addAttribute(Lorg/apache/commons/compress/harmony/unpack200/bytecode/Attribute;)V
+#renumber(Ljava/util/List;)V
+#setAttributeName(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/ConstantPoolEntry
@1.21
+#equals(Ljava/lang/Object;)Z
+#getTag()B
+#hashCode()I
+#doWrite(Ljava/io/DataOutputStream;)V
+#getGlobalIndex()I

+###org/apache/commons/compress/harmony/unpack200/bytecode/ConstantValueAttribute
@1.21
+#setAttributeName(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/commons/compress/harmony/unpack200/bytecode/DeprecatedAttribute
@1.21
+#setAttributeName(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V
+#<init>()V
+#toString()Ljava/lang/String;

+###org/apache/commons/compress/harmony/unpack200/bytecode/EnclosingMethodAttribute
@1.21
+#setAttributeName(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;)V
+#toString()Ljava/lang/String;

+###org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionTableEntry
@1.21
+#<init>(IIILorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;)V
+#write(Ljava/io/DataOutputStream;)V
+#renumber(Ljava/util/List;)V
+#getCatchType()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;
+#resolve(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute
@1.21
+#<init>([Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#setAttributeName(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/InnerClassesAttribute
@1.21
+#setAttributeName(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V
+#<init>(Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#addInnerClassesEntry(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute
@1.21
+#setAttributeName(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V
+#<init>(I[I[I)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z

+###org/apache/commons/compress/harmony/unpack200/bytecode/LocalVariableTableAttribute
@1.21
+#setAttributeName(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V
+#<init>(I[I[I[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;[I)V
+#setCodeLength(I)V
+#toString()Ljava/lang/String;
+#renumber(Ljava/util/List;)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/LocalVariableTypeTableAttribute
@1.21
+#setAttributeName(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V
+#<init>(I[I[I[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;[I)V
+#setCodeLength(I)V
+#renumber(Ljava/util/List;)V
+#toString()Ljava/lang/String;

+###org/apache/commons/compress/harmony/unpack200/bytecode/NewAttribute
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;I)V
+#getLayoutIndex()I
+#toString()Ljava/lang/String;
+#addInteger(IJ)V
+#addBCOffset(II)V
+#addBCIndex(II)V
+#addBCLength(II)V
+#addToBody(ILjava/lang/Object;)V
+#renumber(Ljava/util/List;)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager
@1.21
+#<init>([I[I[I[I[I[I[I[I[I[I[I[I[I[I[I[I[I[I[I[I[I)V
+#nextCaseCount()I
+#nextCaseValues()I
+#nextByte()I
+#nextShort()I
+#nextLocal()I
+#nextLabel()I
+#nextIntRef()I
+#nextFloatRef()I
+#nextLongRef()I
+#nextDoubleRef()I
+#nextStringRef()I
+#nextClassRef()I
+#nextFieldRef()I
+#nextMethodRef()I
+#nextIMethodRef()I
+#nextThisFieldRef()I
+#nextSuperFieldRef()I
+#nextThisMethodRef()I
+#nextSuperMethodRef()I
+#nextInitRef()I
+#nextWideByteCode()I
+#setSegment(Lorg/apache/commons/compress/harmony/unpack200/Segment;)V
+#globalConstantPool()Lorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;
+#setCurrentClass(Ljava/lang/String;)V
+#setSuperClass(Ljava/lang/String;)V
+#setNewClass(Ljava/lang/String;)V
+#getCurrentClass()Ljava/lang/String;
+#getSuperClass()Ljava/lang/String;
+#getNewClass()Ljava/lang/String;

+###org/apache/commons/compress/harmony/unpack200/bytecode/RuntimeVisibleorInvisibleAnnotationsAttribute
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;[Lorg/apache/commons/compress/harmony/unpack200/bytecode/AnnotationsAttribute$Annotation;)V
+#toString()Ljava/lang/String;

+###org/apache/commons/compress/harmony/unpack200/bytecode/RuntimeVisibleorInvisibleParameterAnnotationsAttribute$ParameterAnnotation
@1.21
+#<init>([Lorg/apache/commons/compress/harmony/unpack200/bytecode/AnnotationsAttribute$Annotation;)V
+#writeBody(Ljava/io/DataOutputStream;)V
+#resolve(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V
+#getLength()I
+#getClassFileEntries()Ljava/util/List;

+###org/apache/commons/compress/harmony/unpack200/bytecode/RuntimeVisibleorInvisibleParameterAnnotationsAttribute
@1.21
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;[Lorg/apache/commons/compress/harmony/unpack200/bytecode/RuntimeVisibleorInvisibleParameterAnnotationsAttribute$ParameterAnnotation;)V
+#toString()Ljava/lang/String;

+###org/apache/commons/compress/harmony/unpack200/bytecode/SignatureAttribute
@1.21
+#setAttributeName(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V
+#toString()Ljava/lang/String;

+###org/apache/commons/compress/harmony/unpack200/bytecode/SourceFileAttribute
@1.21
+#setAttributeName(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V
+#<init>(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V
+#equals(Ljava/lang/Object;)Z
+#isSourceFileAttribute()Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/ByteCodeForm
@1.21
+#<init>(ILjava/lang/String;)V
+#<init>(ILjava/lang/String;[I)V
+#get(I)Lorg/apache/commons/compress/harmony/unpack200/bytecode/forms/ByteCodeForm;
+#toString()Ljava/lang/String;
+#getOpcode()I
+#getName()Ljava/lang/String;
+#getRewrite()[I
+#getRewriteCopy()[I
+#firstOperandIndex()I
+#operandLength()I
+#hasNoOperand()Z
+#hasMultipleByteCodes()Z
+#setByteCodeOperands(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ByteCode;Lorg/apache/commons/compress/harmony/unpack200/bytecode/OperandManager;I)V
+#fixUpByteCodeTargets(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ByteCode;Lorg/apache/commons/compress/harmony/unpack200/bytecode/CodeAttribute;)V
+#nestedMustStartClassPool()Z

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/ByteForm
@1.21
+#<init>(ILjava/lang/String;[I)V
+#setByteCodeOperands(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ByteCode;Lorg/apache/commons/compress/harmony/unpack200/bytecode/OperandManager;I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/ClassRefForm
@1.21
+#<init>(ILjava/lang/String;[I)V
+#<init>(ILjava/lang/String;[IZ)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/ClassSpecificReferenceForm
@1.21
+#<init>(ILjava/lang/String;[I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/DoubleForm
@1.21
+#<init>(ILjava/lang/String;[I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/FieldRefForm
@1.21
+#<init>(ILjava/lang/String;[I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/FloatRefForm
@1.21
+#<init>(ILjava/lang/String;[I)V
+#<init>(ILjava/lang/String;[IZ)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/IMethodRefForm
@1.21
+#<init>(ILjava/lang/String;[I)V
+#setByteCodeOperands(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ByteCode;Lorg/apache/commons/compress/harmony/unpack200/bytecode/OperandManager;I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/IincForm
@1.21
+#<init>(ILjava/lang/String;[I)V
+#setByteCodeOperands(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ByteCode;Lorg/apache/commons/compress/harmony/unpack200/bytecode/OperandManager;I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/InitMethodReferenceForm
@1.21
+#<init>(ILjava/lang/String;[I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/IntRefForm
@1.21
+#<init>(ILjava/lang/String;[I)V
+#<init>(ILjava/lang/String;[IZ)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/LabelForm
@1.21
+#<init>(ILjava/lang/String;[I)V
+#<init>(ILjava/lang/String;[IZ)V
+#fixUpByteCodeTargets(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ByteCode;Lorg/apache/commons/compress/harmony/unpack200/bytecode/CodeAttribute;)V
+#setByteCodeOperands(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ByteCode;Lorg/apache/commons/compress/harmony/unpack200/bytecode/OperandManager;I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/LocalForm
@1.21
+#<init>(ILjava/lang/String;[I)V
+#setByteCodeOperands(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ByteCode;Lorg/apache/commons/compress/harmony/unpack200/bytecode/OperandManager;I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/LongForm
@1.21
+#<init>(ILjava/lang/String;[I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/LookupSwitchForm
@1.21
+#<init>(ILjava/lang/String;)V
+#setByteCodeOperands(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ByteCode;Lorg/apache/commons/compress/harmony/unpack200/bytecode/OperandManager;I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/MethodRefForm
@1.21
+#<init>(ILjava/lang/String;[I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/MultiANewArrayForm
@1.21
+#<init>(ILjava/lang/String;[I)V
+#setByteCodeOperands(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ByteCode;Lorg/apache/commons/compress/harmony/unpack200/bytecode/OperandManager;I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/NarrowClassRefForm
@1.21
+#<init>(ILjava/lang/String;[I)V
+#<init>(ILjava/lang/String;[IZ)V
+#nestedMustStartClassPool()Z

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/NewClassRefForm
@1.21
+#<init>(ILjava/lang/String;[I)V
+#setByteCodeOperands(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ByteCode;Lorg/apache/commons/compress/harmony/unpack200/bytecode/OperandManager;I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/NewInitMethodRefForm
@1.21
+#<init>(ILjava/lang/String;[I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/NoArgumentForm
@1.21
+#<init>(ILjava/lang/String;)V
+#setByteCodeOperands(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ByteCode;Lorg/apache/commons/compress/harmony/unpack200/bytecode/OperandManager;I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/ReferenceForm
@1.21
+#<init>(ILjava/lang/String;[I)V
+#setByteCodeOperands(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ByteCode;Lorg/apache/commons/compress/harmony/unpack200/bytecode/OperandManager;I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/ShortForm
@1.21
+#<init>(ILjava/lang/String;[I)V
+#setByteCodeOperands(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ByteCode;Lorg/apache/commons/compress/harmony/unpack200/bytecode/OperandManager;I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/SingleByteReferenceForm
@1.21
+#<init>(ILjava/lang/String;[I)V
+#nestedMustStartClassPool()Z

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/StringRefForm
@1.21
+#<init>(ILjava/lang/String;[I)V
+#<init>(ILjava/lang/String;[IZ)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/SuperFieldRefForm
@1.21
+#<init>(ILjava/lang/String;[I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/SuperInitMethodRefForm
@1.21
+#<init>(ILjava/lang/String;[I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/SuperMethodRefForm
@1.21
+#<init>(ILjava/lang/String;[I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/SwitchForm
@1.21
+#<init>(ILjava/lang/String;)V
+#fixUpByteCodeTargets(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ByteCode;Lorg/apache/commons/compress/harmony/unpack200/bytecode/CodeAttribute;)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/TableSwitchForm
@1.21
+#<init>(ILjava/lang/String;)V
+#setByteCodeOperands(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ByteCode;Lorg/apache/commons/compress/harmony/unpack200/bytecode/OperandManager;I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/ThisFieldRefForm
@1.21
+#<init>(ILjava/lang/String;[I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/ThisInitMethodRefForm
@1.21
+#<init>(ILjava/lang/String;[I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/ThisMethodRefForm
@1.21
+#<init>(ILjava/lang/String;[I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/VariableInstructionForm
@1.21
+#<init>(ILjava/lang/String;)V
+#setRewrite4Bytes(I[I)V
+#setRewrite4Bytes(II[I)V
+#setRewrite2Bytes(II[I)V

+###org/apache/commons/compress/harmony/unpack200/bytecode/forms/WideForm
@1.21
+#<init>(ILjava/lang/String;)V
+#setByteCodeOperands(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ByteCode;Lorg/apache/commons/compress/harmony/unpack200/bytecode/OperandManager;I)V

+###org/apache/commons/compress/java/util/jar/Pack200$Packer
@1.21
+#properties()Ljava/util/SortedMap;
+#pack(Ljava/util/jar/JarFile;Ljava/io/OutputStream;)V
+#pack(Ljava/util/jar/JarInputStream;Ljava/io/OutputStream;)V
+#addPropertyChangeListener(Ljava/beans/PropertyChangeListener;)V
+#removePropertyChangeListener(Ljava/beans/PropertyChangeListener;)V

+###org/apache/commons/compress/java/util/jar/Pack200$Unpacker
@1.21
+#properties()Ljava/util/SortedMap;
+#unpack(Ljava/io/InputStream;Ljava/util/jar/JarOutputStream;)V
+#unpack(Ljava/io/File;Ljava/util/jar/JarOutputStream;)V
+#addPropertyChangeListener(Ljava/beans/PropertyChangeListener;)V
+#removePropertyChangeListener(Ljava/beans/PropertyChangeListener;)V

+###org/apache/commons/compress/java/util/jar/Pack200
@1.21
+#newPacker()Lorg/apache/commons/compress/java/util/jar/Pack200$Packer;
+#newUnpacker()Lorg/apache/commons/compress/java/util/jar/Pack200$Unpacker;

+###org/apache/commons/compress/utils/BoundedArchiveInputStream
@1.21
+#<init>(JJ)V
+#read()I
+#read([BII)I

+###org/apache/commons/compress/utils/BoundedSeekableByteChannelInputStream
@1.21
+#<init>(JJLjava/nio/channels/SeekableByteChannel;)V

+###org/apache/commons/compress/utils/ExactMath
@1.22
+#add(IJ)I

+###org/apache/commons/compress/utils/OsgiUtils
@1.21
+#<init>()V
+#isRunningInOsgiEnvironment()Z

+###org/apache/commons/compress/compressors/z/_internal_/InternalLZWInputStream
@1.7
+#close()V
+#read()I
+#read([BII)I
@1.10
-###org/apache/commons/compress/compressors/z/_internal_/InternalLZWInputStream
