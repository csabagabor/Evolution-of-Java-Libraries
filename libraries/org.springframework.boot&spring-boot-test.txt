
+###org/springframework/boot/test/IntegrationTest
@1.4.0.RELEASE
+#value()[Ljava/lang/String;
@1.5.0.RELEASE
-###org/springframework/boot/test/IntegrationTest

+###org/springframework/boot/test/TestRestTemplate$CustomHttpComponentsClientHttpRequestFactory
@1.4.0.RELEASE
+#<init>([Lorg/springframework/boot/test/TestRestTemplate$HttpClientOption;)V
@1.5.0.RELEASE
-###org/springframework/boot/test/TestRestTemplate$CustomHttpComponentsClientHttpRequestFactory

+###org/springframework/boot/test/context/SpringBootContextLoader
@1.4.0.RELEASE
+#<init>()V
+#loadContext(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ApplicationContext;
+#processContextConfiguration(Lorg/springframework/test/context/ContextConfigurationAttributes;)V
+#loadContext([Ljava/lang/String;)Lorg/springframework/context/ApplicationContext;
@3.0.0
+#loadContextForAotProcessing(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ApplicationContext;
+#loadContextForAotRuntime(Lorg/springframework/test/context/MergedContextConfiguration;Lorg/springframework/context/ApplicationContextInitializer;)Lorg/springframework/context/ApplicationContext;
-#loadContext([Ljava/lang/String;)Lorg/springframework/context/ApplicationContext;

+###org/springframework/boot/test/context/TestComponent
@1.4.0.RELEASE
+#value()Ljava/lang/String;

+###org/springframework/boot/test/context/TestConfiguration
@1.4.0.RELEASE
+#value()Ljava/lang/String;
@2.2.1.RELEASE
+#proxyBeanMethods()Z

+###org/springframework/boot/test/context/DefaultTestExecutionListenersPostProcessor
@1.4.1.RELEASE
+#postProcessDefaultTestExecutionListeners(Ljava/util/Set;)Ljava/util/Set;
@3.0.0
+#postProcessDefaultTestExecutionListeners(Ljava/util/List;)Ljava/util/List;
-#postProcessDefaultTestExecutionListeners(Ljava/util/Set;)Ljava/util/Set;

+###org/springframework/boot/test/context/SpringBootTest
@1.4.0.RELEASE
+#value()[Ljava/lang/String;
+#properties()[Ljava/lang/String;
+#classes()[Ljava/lang/Class;
+#webEnvironment()Lorg/springframework/boot/test/context/SpringBootTest$WebEnvironment;
@2.2.0.RELEASE
+#args()[Ljava/lang/String;
@3.0.0
+#useMainMethod()Lorg/springframework/boot/test/context/SpringBootTest$UseMainMethod;

+###org/springframework/boot/test/context/SpringBootTest$WebEnvironment
@1.4.0.RELEASE
+#values()[Lorg/springframework/boot/test/context/SpringBootTest$WebEnvironment;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/test/context/SpringBootTest$WebEnvironment;
+#isEmbedded()Z

+###org/springframework/boot/test/context/SpringBootTestContextCustomizer$TestRestTemplateFactory
@1.4.0.RELEASE
+#<init>()V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#isSingleton()Z
+#getObjectType()Ljava/lang/Class;
+#getObject()Lorg/springframework/boot/test/web/client/TestRestTemplate;
+#getObject()Ljava/lang/Object;
@2.0.0.RELEASE
-###org/springframework/boot/test/context/SpringBootTestContextCustomizer$TestRestTemplateFactory

+###org/springframework/boot/test/context/SpringBootTestContextBootstrapper
@1.4.0.RELEASE
+#<init>()V
+#buildTestContext()Lorg/springframework/test/context/TestContext;

+###org/springframework/boot/test/context/ConfigFileApplicationContextInitializer
@1.4.0.RELEASE
+#<init>()V
+#initialize(Lorg/springframework/context/ConfigurableApplicationContext;)V
@2.6.0
-###org/springframework/boot/test/context/ConfigFileApplicationContextInitializer

+###org/springframework/boot/test/IntegrationTestPropertiesListener
@1.4.0.RELEASE
+#<init>()V
+#prepareTestInstance(Lorg/springframework/test/context/TestContext;)V
+#getOrder()I
@1.5.0.RELEASE
-###org/springframework/boot/test/IntegrationTestPropertiesListener

+###org/springframework/boot/test/TestRestTemplate
@1.4.0.RELEASE
+#<init>([Lorg/springframework/boot/test/TestRestTemplate$HttpClientOption;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;[Lorg/springframework/boot/test/TestRestTemplate$HttpClientOption;)V
@1.5.0.RELEASE
-###org/springframework/boot/test/TestRestTemplate

+###org/springframework/boot/test/TestRestTemplate$HttpClientOption
@1.4.0.RELEASE
+#values()[Lorg/springframework/boot/test/TestRestTemplate$HttpClientOption;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/test/TestRestTemplate$HttpClientOption;
@1.5.0.RELEASE
-###org/springframework/boot/test/TestRestTemplate$HttpClientOption

+###org/springframework/boot/test/json/JacksonTester
@1.4.0.RELEASE
+#<init>(Ljava/lang/Class;Lorg/springframework/core/ResolvableType;Lcom/fasterxml/jackson/databind/ObjectMapper;)V
+#initFields(Ljava/lang/Object;Lcom/fasterxml/jackson/databind/ObjectMapper;)V
+#initFields(Ljava/lang/Object;Lorg/springframework/beans/factory/ObjectFactory;)V
@1.5.3.RELEASE
+#<init>(Ljava/lang/Class;Lorg/springframework/core/ResolvableType;Lcom/fasterxml/jackson/databind/ObjectMapper;Ljava/lang/Class;)V
+#forView(Ljava/lang/Class;)Lorg/springframework/boot/test/json/JacksonTester;

+###org/springframework/boot/test/json/AbstractJsonMarshalTester$FieldInitializer
@1.4.0.RELEASE
+#initFields(Ljava/lang/Object;Ljava/lang/Object;)V
+#initFields(Ljava/lang/Object;Lorg/springframework/beans/factory/ObjectFactory;)V

+###org/springframework/boot/test/json/ObjectContentAssert
@1.4.0.RELEASE
+#asArray()Lorg/assertj/core/api/AbstractObjectArrayAssert;
+#asMap()Lorg/assertj/core/api/AbstractMapAssert;

+###org/springframework/boot/test/json/AbstractJsonMarshalTester
@1.4.0.RELEASE
+#<init>(Ljava/lang/Class;Lorg/springframework/core/ResolvableType;)V
+#write(Ljava/lang/Object;)Lorg/springframework/boot/test/json/JsonContent;
+#parseObject([B)Ljava/lang/Object;
+#parse([B)Lorg/springframework/boot/test/json/ObjectContent;
+#parseObject(Ljava/lang/String;)Ljava/lang/Object;
+#parse(Ljava/lang/String;)Lorg/springframework/boot/test/json/ObjectContent;
+#readObject(Ljava/lang/String;)Ljava/lang/Object;
+#read(Ljava/lang/String;)Lorg/springframework/boot/test/json/ObjectContent;
+#readObject(Ljava/io/File;)Ljava/lang/Object;
+#read(Ljava/io/File;)Lorg/springframework/boot/test/json/ObjectContent;
+#readObject(Ljava/io/InputStream;)Ljava/lang/Object;
+#read(Ljava/io/InputStream;)Lorg/springframework/boot/test/json/ObjectContent;
+#readObject(Lorg/springframework/core/io/Resource;)Ljava/lang/Object;
+#read(Lorg/springframework/core/io/Resource;)Lorg/springframework/boot/test/json/ObjectContent;
+#readObject(Ljava/io/Reader;)Ljava/lang/Object;
+#read(Ljava/io/Reader;)Lorg/springframework/boot/test/json/ObjectContent;

+###org/springframework/boot/test/json/BasicJsonTester
@1.4.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#from(Ljava/lang/CharSequence;)Lorg/springframework/boot/test/json/JsonContent;
+#from(Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/boot/test/json/JsonContent;
+#from([B)Lorg/springframework/boot/test/json/JsonContent;
+#from(Ljava/io/File;)Lorg/springframework/boot/test/json/JsonContent;
+#from(Ljava/io/InputStream;)Lorg/springframework/boot/test/json/JsonContent;
+#from(Lorg/springframework/core/io/Resource;)Lorg/springframework/boot/test/json/JsonContent;
@1.4.1.RELEASE
+#<init>(Ljava/lang/Class;Ljava/nio/charset/Charset;)V

+###org/springframework/boot/test/json/JsonContentAssert
@1.4.0.RELEASE
+#<init>(Ljava/lang/Class;Ljava/lang/CharSequence;)V
+#isEqualTo(Ljava/lang/Object;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isEqualToJson(Ljava/lang/CharSequence;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isEqualToJson(Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isEqualToJson([B)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isEqualToJson(Ljava/io/File;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isEqualToJson(Ljava/io/InputStream;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isEqualToJson(Lorg/springframework/core/io/Resource;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isStrictlyEqualToJson(Ljava/lang/CharSequence;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isStrictlyEqualToJson(Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isStrictlyEqualToJson([B)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isStrictlyEqualToJson(Ljava/io/File;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isStrictlyEqualToJson(Ljava/io/InputStream;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isStrictlyEqualToJson(Lorg/springframework/core/io/Resource;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isEqualToJson(Ljava/lang/CharSequence;Lorg/skyscreamer/jsonassert/JSONCompareMode;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isEqualToJson(Ljava/lang/String;Ljava/lang/Class;Lorg/skyscreamer/jsonassert/JSONCompareMode;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isEqualToJson([BLorg/skyscreamer/jsonassert/JSONCompareMode;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isEqualToJson(Ljava/io/File;Lorg/skyscreamer/jsonassert/JSONCompareMode;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isEqualToJson(Ljava/io/InputStream;Lorg/skyscreamer/jsonassert/JSONCompareMode;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isEqualToJson(Lorg/springframework/core/io/Resource;Lorg/skyscreamer/jsonassert/JSONCompareMode;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isEqualToJson(Ljava/lang/CharSequence;Lorg/skyscreamer/jsonassert/comparator/JSONComparator;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isEqualToJson(Ljava/lang/String;Ljava/lang/Class;Lorg/skyscreamer/jsonassert/comparator/JSONComparator;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isEqualToJson([BLorg/skyscreamer/jsonassert/comparator/JSONComparator;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isEqualToJson(Ljava/io/File;Lorg/skyscreamer/jsonassert/comparator/JSONComparator;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isEqualToJson(Ljava/io/InputStream;Lorg/skyscreamer/jsonassert/comparator/JSONComparator;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isEqualToJson(Lorg/springframework/core/io/Resource;Lorg/skyscreamer/jsonassert/comparator/JSONComparator;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotEqualTo(Ljava/lang/Object;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotEqualToJson(Ljava/lang/CharSequence;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotEqualToJson(Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotEqualToJson([B)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotEqualToJson(Ljava/io/File;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotEqualToJson(Ljava/io/InputStream;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotEqualToJson(Lorg/springframework/core/io/Resource;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotStrictlyEqualToJson(Ljava/lang/CharSequence;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotStrictlyEqualToJson(Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotStrictlyEqualToJson([B)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotStrictlyEqualToJson(Ljava/io/File;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotStrictlyEqualToJson(Ljava/io/InputStream;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotStrictlyEqualToJson(Lorg/springframework/core/io/Resource;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotEqualToJson(Ljava/lang/CharSequence;Lorg/skyscreamer/jsonassert/JSONCompareMode;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotEqualToJson(Ljava/lang/String;Ljava/lang/Class;Lorg/skyscreamer/jsonassert/JSONCompareMode;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotEqualToJson([BLorg/skyscreamer/jsonassert/JSONCompareMode;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotEqualToJson(Ljava/io/File;Lorg/skyscreamer/jsonassert/JSONCompareMode;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotEqualToJson(Ljava/io/InputStream;Lorg/skyscreamer/jsonassert/JSONCompareMode;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotEqualToJson(Lorg/springframework/core/io/Resource;Lorg/skyscreamer/jsonassert/JSONCompareMode;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotEqualToJson(Ljava/lang/CharSequence;Lorg/skyscreamer/jsonassert/comparator/JSONComparator;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotEqualToJson(Ljava/lang/String;Ljava/lang/Class;Lorg/skyscreamer/jsonassert/comparator/JSONComparator;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotEqualToJson([BLorg/skyscreamer/jsonassert/comparator/JSONComparator;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotEqualToJson(Ljava/io/File;Lorg/skyscreamer/jsonassert/comparator/JSONComparator;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotEqualToJson(Ljava/io/InputStream;Lorg/skyscreamer/jsonassert/comparator/JSONComparator;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#isNotEqualToJson(Lorg/springframework/core/io/Resource;Lorg/skyscreamer/jsonassert/comparator/JSONComparator;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#hasJsonPathValue(Ljava/lang/CharSequence;[Ljava/lang/Object;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#hasJsonPathStringValue(Ljava/lang/CharSequence;[Ljava/lang/Object;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#hasJsonPathNumberValue(Ljava/lang/CharSequence;[Ljava/lang/Object;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#hasJsonPathBooleanValue(Ljava/lang/CharSequence;[Ljava/lang/Object;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#hasJsonPathArrayValue(Ljava/lang/CharSequence;[Ljava/lang/Object;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#hasJsonPathMapValue(Ljava/lang/CharSequence;[Ljava/lang/Object;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#hasEmptyJsonPathValue(Ljava/lang/CharSequence;[Ljava/lang/Object;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#doesNotHaveJsonPathValue(Ljava/lang/CharSequence;[Ljava/lang/Object;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#doesNotHaveEmptyJsonPathValue(Ljava/lang/CharSequence;[Ljava/lang/Object;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#extractingJsonPathValue(Ljava/lang/CharSequence;[Ljava/lang/Object;)Lorg/assertj/core/api/AbstractObjectAssert;
+#extractingJsonPathStringValue(Ljava/lang/CharSequence;[Ljava/lang/Object;)Lorg/assertj/core/api/AbstractCharSequenceAssert;
+#extractingJsonPathNumberValue(Ljava/lang/CharSequence;[Ljava/lang/Object;)Lorg/assertj/core/api/AbstractObjectAssert;
+#extractingJsonPathBooleanValue(Ljava/lang/CharSequence;[Ljava/lang/Object;)Lorg/assertj/core/api/AbstractBooleanAssert;
+#extractingJsonPathArrayValue(Ljava/lang/CharSequence;[Ljava/lang/Object;)Lorg/assertj/core/api/AbstractListAssert;
+#extractingJsonPathMapValue(Ljava/lang/CharSequence;[Ljava/lang/Object;)Lorg/assertj/core/api/AbstractMapAssert;
+#isNotEqualTo(Ljava/lang/Object;)Lorg/assertj/core/api/AbstractAssert;
+#isEqualTo(Ljava/lang/Object;)Lorg/assertj/core/api/AbstractAssert;
+#isNotEqualTo(Ljava/lang/Object;)Lorg/assertj/core/api/Assert;
+#isEqualTo(Ljava/lang/Object;)Lorg/assertj/core/api/Assert;
@1.4.1.RELEASE
+#<init>(Ljava/lang/Class;Ljava/nio/charset/Charset;Ljava/lang/CharSequence;)V
@1.5.5.RELEASE
+#extractingJsonPathArrayValue(Ljava/lang/CharSequence;[Ljava/lang/Object;)Lorg/assertj/core/api/ListAssert;
+#extractingJsonPathMapValue(Ljava/lang/CharSequence;[Ljava/lang/Object;)Lorg/assertj/core/api/MapAssert;
-#extractingJsonPathArrayValue(Ljava/lang/CharSequence;[Ljava/lang/Object;)Lorg/assertj/core/api/AbstractListAssert;
-#extractingJsonPathMapValue(Ljava/lang/CharSequence;[Ljava/lang/Object;)Lorg/assertj/core/api/AbstractMapAssert;
@2.2.0.RELEASE
+#hasJsonPath(Ljava/lang/CharSequence;[Ljava/lang/Object;)Lorg/springframework/boot/test/json/JsonContentAssert;
+#doesNotHaveJsonPath(Ljava/lang/CharSequence;[Ljava/lang/Object;)Lorg/springframework/boot/test/json/JsonContentAssert;

+###org/springframework/boot/test/json/ObjectContent
@1.4.0.RELEASE
+#<init>(Lorg/springframework/core/ResolvableType;Ljava/lang/Object;)V
+#assertThat()Lorg/springframework/boot/test/json/ObjectContentAssert;
+#getObject()Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#assertThat()Ljava/lang/Object;

+###org/springframework/boot/test/json/JsonContent
@1.4.0.RELEASE
+#<init>(Ljava/lang/Class;Lorg/springframework/core/ResolvableType;Ljava/lang/String;)V
+#assertThat()Lorg/springframework/boot/test/json/JsonContentAssert;
+#getJson()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#assertThat()Ljava/lang/Object;
@1.5.7.RELEASE
*#assertThat()Lorg/springframework/boot/test/json/JsonContentAssert;[deprecated]
*#assertThat()Ljava/lang/Object;[deprecated]

+###org/springframework/boot/test/json/GsonTester
@1.4.0.RELEASE
+#<init>(Ljava/lang/Class;Lorg/springframework/core/ResolvableType;Lcom/google/gson/Gson;)V
+#initFields(Ljava/lang/Object;Lcom/google/gson/Gson;)V
+#initFields(Ljava/lang/Object;Lorg/springframework/beans/factory/ObjectFactory;)V

+###org/springframework/boot/test/WebIntegrationTest
@1.4.0.RELEASE
+#value()[Ljava/lang/String;
+#randomPort()Z
@1.5.0.RELEASE
-###org/springframework/boot/test/WebIntegrationTest

+###org/springframework/boot/test/EnvironmentTestUtils
@1.4.0.RELEASE
+#<init>()V
+#addEnvironment(Lorg/springframework/context/ConfigurableApplicationContext;[Ljava/lang/String;)V
+#addEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;[Ljava/lang/String;)V
+#addEnvironment(Ljava/lang/String;Lorg/springframework/core/env/ConfigurableEnvironment;[Ljava/lang/String;)V
@1.5.0.RELEASE
-###org/springframework/boot/test/EnvironmentTestUtils

+###org/springframework/boot/test/web/client/TestRestTemplate$CustomHttpComponentsClientHttpRequestFactory
@1.4.0.RELEASE
+#<init>([Lorg/springframework/boot/test/web/client/TestRestTemplate$HttpClientOption;)V
@3.0.0
+#<init>([Lorg/springframework/boot/test/web/client/TestRestTemplate$HttpClientOption;Lorg/springframework/boot/web/client/ClientHttpRequestFactorySettings;)V
-#<init>([Lorg/springframework/boot/test/web/client/TestRestTemplate$HttpClientOption;)V

+###org/springframework/boot/test/web/client/MockServerRestTemplateCustomizer
@1.4.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/Class;)V
+#setDetectRootUri(Z)V
+#customize(Lorg/springframework/web/client/RestTemplate;)V
+#getServer()Lorg/springframework/test/web/client/MockRestServiceServer;
+#getExpectationManagers()Ljava/util/Map;
+#getServer(Lorg/springframework/web/client/RestTemplate;)Lorg/springframework/test/web/client/MockRestServiceServer;
+#getServers()Ljava/util/Map;
@3.0.0
+#<init>(Ljava/util/function/Supplier;)V

+###org/springframework/boot/test/web/client/RootUriRequestExpectationManager
@1.4.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/test/web/client/RequestExpectationManager;)V
+#expectRequest(Lorg/springframework/test/web/client/ExpectedCount;Lorg/springframework/test/web/client/RequestMatcher;)Lorg/springframework/test/web/client/ResponseActions;
+#validateRequest(Lorg/springframework/http/client/ClientHttpRequest;)Lorg/springframework/http/client/ClientHttpResponse;
+#verify()V
+#reset()V
+#bindTo(Lorg/springframework/web/client/RestTemplate;)Lorg/springframework/test/web/client/MockRestServiceServer;
+#bindTo(Lorg/springframework/web/client/RestTemplate;Lorg/springframework/test/web/client/RequestExpectationManager;)Lorg/springframework/test/web/client/MockRestServiceServer;
+#forRestTemplate(Lorg/springframework/web/client/RestTemplate;Lorg/springframework/test/web/client/RequestExpectationManager;)Lorg/springframework/test/web/client/RequestExpectationManager;
@2.4.3
+#verify(Ljava/time/Duration;)V

+###org/springframework/boot/test/web/client/LocalHostUriTemplateHandler
@1.4.0.RELEASE
+#<init>(Lorg/springframework/core/env/Environment;)V
+#getRootUri()Ljava/lang/String;
@1.4.1.RELEASE
+#<init>(Lorg/springframework/core/env/Environment;Ljava/lang/String;)V
@2.0.3.RELEASE
+#<init>(Lorg/springframework/core/env/Environment;Ljava/lang/String;Lorg/springframework/web/util/UriTemplateHandler;)V

+###org/springframework/boot/test/web/client/TestRestTemplate
@1.4.0.RELEASE
+#<init>([Lorg/springframework/boot/test/web/client/TestRestTemplate$HttpClientOption;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;[Lorg/springframework/boot/test/web/client/TestRestTemplate$HttpClientOption;)V
+#<init>(Lorg/springframework/web/client/RestTemplate;)V
+#<init>(Lorg/springframework/web/client/RestTemplate;Ljava/lang/String;Ljava/lang/String;[Lorg/springframework/boot/test/web/client/TestRestTemplate$HttpClientOption;)V
+#setUriTemplateHandler(Lorg/springframework/web/util/UriTemplateHandler;)V
+#getForObject(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#getForObject(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/Object;
+#getForObject(Ljava/net/URI;Ljava/lang/Class;)Ljava/lang/Object;
+#getForEntity(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#getForEntity(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;
+#getForEntity(Ljava/net/URI;Ljava/lang/Class;)Lorg/springframework/http/ResponseEntity;
+#headForHeaders(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/http/HttpHeaders;
+#headForHeaders(Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/http/HttpHeaders;
+#headForHeaders(Ljava/net/URI;)Lorg/springframework/http/HttpHeaders;
+#postForLocation(Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/net/URI;
+#postForLocation(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)Ljava/net/URI;
+#postForLocation(Ljava/net/URI;Ljava/lang/Object;)Ljava/net/URI;
+#postForObject(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#postForObject(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/Object;
+#postForObject(Ljava/net/URI;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#postForEntity(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#postForEntity(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;
+#postForEntity(Ljava/net/URI;Ljava/lang/Object;Ljava/lang/Class;)Lorg/springframework/http/ResponseEntity;
+#put(Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;)V
+#put(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)V
+#put(Ljava/net/URI;Ljava/lang/Object;)V
+#delete(Ljava/lang/String;[Ljava/lang/Object;)V
+#delete(Ljava/lang/String;Ljava/util/Map;)V
+#delete(Ljava/net/URI;)V
+#optionsForAllow(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Set;
+#optionsForAllow(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Set;
+#optionsForAllow(Ljava/net/URI;)Ljava/util/Set;
+#exchange(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#exchange(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;
+#exchange(Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Ljava/lang/Class;)Lorg/springframework/http/ResponseEntity;
+#exchange(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Lorg/springframework/core/ParameterizedTypeReference;[Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#exchange(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Lorg/springframework/core/ParameterizedTypeReference;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;
+#exchange(Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/http/ResponseEntity;
+#exchange(Lorg/springframework/http/RequestEntity;Ljava/lang/Class;)Lorg/springframework/http/ResponseEntity;
+#exchange(Lorg/springframework/http/RequestEntity;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/http/ResponseEntity;
+#execute(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/web/client/RequestCallback;Lorg/springframework/web/client/ResponseExtractor;[Ljava/lang/Object;)Ljava/lang/Object;
+#execute(Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/web/client/RequestCallback;Lorg/springframework/web/client/ResponseExtractor;Ljava/util/Map;)Ljava/lang/Object;
+#execute(Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/web/client/RequestCallback;Lorg/springframework/web/client/ResponseExtractor;)Ljava/lang/Object;
+#getRestTemplate()Lorg/springframework/web/client/RestTemplate;
@1.4.1.RELEASE
+#<init>(Lorg/springframework/boot/web/client/RestTemplateBuilder;)V
+#withBasicAuth(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/boot/test/web/client/TestRestTemplate;
@1.4.4.RELEASE
+#patchForObject(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#patchForObject(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/Object;
+#patchForObject(Ljava/net/URI;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
@2.0.0.RELEASE
+#<init>(Lorg/springframework/boot/web/client/RestTemplateBuilder;Ljava/lang/String;Ljava/lang/String;[Lorg/springframework/boot/test/web/client/TestRestTemplate$HttpClientOption;)V
+#getRootUri()Ljava/lang/String;
-#<init>(Lorg/springframework/web/client/RestTemplate;)V
-#<init>(Lorg/springframework/web/client/RestTemplate;Ljava/lang/String;Ljava/lang/String;[Lorg/springframework/boot/test/web/client/TestRestTemplate$HttpClientOption;)V

+###org/springframework/boot/test/web/client/TestRestTemplate$HttpClientOption
@1.4.0.RELEASE
+#values()[Lorg/springframework/boot/test/web/client/TestRestTemplate$HttpClientOption;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/test/web/client/TestRestTemplate$HttpClientOption;

+###org/springframework/boot/test/web/htmlunit/webdriver/LocalHostWebConnectionHtmlUnitDriver
@1.4.0.RELEASE
+#<init>(Lorg/springframework/core/env/Environment;)V
+#<init>(Lorg/springframework/core/env/Environment;Z)V
+#<init>(Lorg/springframework/core/env/Environment;Lcom/gargoylesoftware/htmlunit/BrowserVersion;)V
+#<init>(Lorg/springframework/core/env/Environment;Lorg/openqa/selenium/Capabilities;)V
+#get(Ljava/lang/String;)V

+###org/springframework/boot/test/web/htmlunit/LocalHostWebClient
@1.4.0.RELEASE
+#<init>(Lorg/springframework/core/env/Environment;)V
+#getPage(Ljava/lang/String;)Lcom/gargoylesoftware/htmlunit/Page;

+###org/springframework/boot/test/SpringBootMockServletContext
@1.4.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/springframework/core/io/ResourceLoader;)V
@1.5.0.RELEASE
-###org/springframework/boot/test/SpringBootMockServletContext

+###org/springframework/boot/test/SpringApplicationConfiguration
@1.4.0.RELEASE
+#value()[Ljava/lang/Class;
+#locations()[Ljava/lang/String;
+#classes()[Ljava/lang/Class;
+#initializers()[Ljava/lang/Class;
+#inheritLocations()Z
+#inheritInitializers()Z
+#name()Ljava/lang/String;
@1.5.0.RELEASE
-###org/springframework/boot/test/SpringApplicationConfiguration

+###org/springframework/boot/test/OutputCapture
@1.4.0.RELEASE
+#<init>()V
@1.5.0.RELEASE
-###org/springframework/boot/test/OutputCapture

+###org/springframework/boot/test/rule/OutputCapture
@1.4.0.RELEASE
+#<init>()V
+#apply(Lorg/junit/runners/model/Statement;Lorg/junit/runner/Description;)Lorg/junit/runners/model/Statement;
+#flush()V
+#toString()Ljava/lang/String;
+#expect(Lorg/hamcrest/Matcher;)V
@1.5.3.RELEASE
+#reset()V
@2.3.0.RELEASE
-###org/springframework/boot/test/rule/OutputCapture

+###org/springframework/boot/test/ConfigFileApplicationContextInitializer
@1.4.0.RELEASE
+#<init>()V
@1.5.0.RELEASE
-###org/springframework/boot/test/ConfigFileApplicationContextInitializer

+###org/springframework/boot/test/mock/web/SpringBootMockServletContext
@1.4.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/springframework/core/io/ResourceLoader;)V
+#getResource(Ljava/lang/String;)Ljava/net/URL;

+###org/springframework/boot/test/mock/mockito/ResetMocksTestExecutionListener
@1.4.0.RELEASE
+#<init>()V
+#beforeTestMethod(Lorg/springframework/test/context/TestContext;)V
+#afterTestMethod(Lorg/springframework/test/context/TestContext;)V
@2.0.0.RELEASE
+#getOrder()I

+###org/springframework/boot/test/mock/mockito/MockitoTestExecutionListener
@1.4.2.RELEASE
+#<init>()V
+#prepareTestInstance(Lorg/springframework/test/context/TestContext;)V
@1.5.11.RELEASE
+#beforeTestMethod(Lorg/springframework/test/context/TestContext;)V
+#getOrder()I
@2.4.0
+#afterTestMethod(Lorg/springframework/test/context/TestContext;)V

+###org/springframework/boot/test/mock/mockito/MockitoPostProcessor
@1.4.0.RELEASE
+#<init>(Ljava/util/Set;)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
+#postProcessPropertyValues(Lorg/springframework/beans/PropertyValues;[Ljava/beans/PropertyDescriptor;Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/beans/PropertyValues;
+#getOrder()I
+#register(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
+#register(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Ljava/util/Set;)V
+#register(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Ljava/lang/Class;Ljava/util/Set;)V
@2.4.0
+#postProcessProperties(Lorg/springframework/beans/PropertyValues;Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/beans/PropertyValues;
-#postProcessPropertyValues(Lorg/springframework/beans/PropertyValues;[Ljava/beans/PropertyDescriptor;Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/beans/PropertyValues;

+###org/springframework/boot/test/mock/mockito/SpyBean
@1.4.0.RELEASE
+#name()Ljava/lang/String;
+#value()[Ljava/lang/Class;
+#classes()[Ljava/lang/Class;
+#reset()Lorg/springframework/boot/test/mock/mockito/MockReset;
+#proxyTargetAware()Z

+###org/springframework/boot/test/mock/mockito/MockBean
@1.4.0.RELEASE
+#name()Ljava/lang/String;
+#value()[Ljava/lang/Class;
+#classes()[Ljava/lang/Class;
+#extraInterfaces()[Ljava/lang/Class;
+#answer()Lorg/mockito/Answers;
+#serializable()Z
+#reset()Lorg/springframework/boot/test/mock/mockito/MockReset;
+#proxyTargetAware()Z
@1.4.1.RELEASE
-#proxyTargetAware()Z

+###org/springframework/boot/test/mock/mockito/MockBeans
@1.4.0.RELEASE
+#value()[Lorg/springframework/boot/test/mock/mockito/MockBean;

+###org/springframework/boot/test/mock/mockito/SpyBeans
@1.4.0.RELEASE
+#value()[Lorg/springframework/boot/test/mock/mockito/SpyBean;

+###org/springframework/boot/test/mock/mockito/MockReset
@1.4.0.RELEASE
+#values()[Lorg/springframework/boot/test/mock/mockito/MockReset;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/test/mock/mockito/MockReset;
+#before()Lorg/mockito/MockSettings;
+#after()Lorg/mockito/MockSettings;
+#withSettings(Lorg/springframework/boot/test/mock/mockito/MockReset;)Lorg/mockito/MockSettings;
+#apply(Lorg/springframework/boot/test/mock/mockito/MockReset;Lorg/mockito/MockSettings;)Lorg/mockito/MockSettings;

+###org/springframework/boot/test/util/ApplicationContextTestUtils
@1.4.0.RELEASE
+#<init>()V
+#closeAll(Lorg/springframework/context/ApplicationContext;)V

+###org/springframework/boot/test/util/EnvironmentTestUtils
@1.4.0.RELEASE
+#<init>()V
+#addEnvironment(Lorg/springframework/context/ConfigurableApplicationContext;[Ljava/lang/String;)V
+#addEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;[Ljava/lang/String;)V
+#addEnvironment(Ljava/lang/String;Lorg/springframework/core/env/ConfigurableEnvironment;[Ljava/lang/String;)V
@2.1.0.RELEASE
-###org/springframework/boot/test/util/EnvironmentTestUtils

+###org/springframework/boot/test/SpringApplicationContextLoader
@1.4.0.RELEASE
+#<init>()V
+#loadContext(Lorg/springframework/test/context/MergedContextConfiguration;)Lorg/springframework/context/ApplicationContext;
+#processContextConfiguration(Lorg/springframework/test/context/ContextConfigurationAttributes;)V
+#loadContext([Ljava/lang/String;)Lorg/springframework/context/ApplicationContext;
@1.5.0.RELEASE
-###org/springframework/boot/test/SpringApplicationContextLoader

+###org/springframework/boot/test/context/runner/AbstractApplicationContextRunner$BeanRegistration
@2.2.0.RELEASE
+#<init>(Lorg/springframework/boot/test/context/runner/AbstractApplicationContextRunner;Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)V
+#<init>(Lorg/springframework/boot/test/context/runner/AbstractApplicationContextRunner;Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Supplier;[Lorg/springframework/beans/factory/config/BeanDefinitionCustomizer;)V
+#apply(Lorg/springframework/context/ConfigurableApplicationContext;)V
@2.6.0
+#<init>(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Supplier;[Lorg/springframework/beans/factory/config/BeanDefinitionCustomizer;)V
-#<init>(Lorg/springframework/boot/test/context/runner/AbstractApplicationContextRunner;Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)V
-#<init>(Lorg/springframework/boot/test/context/runner/AbstractApplicationContextRunner;Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Supplier;[Lorg/springframework/beans/factory/config/BeanDefinitionCustomizer;)V

+###org/springframework/boot/test/context/assertj/ApplicationContextAssert
@2.0.0.RELEASE
+#hasBean(Ljava/lang/String;)Lorg/springframework/boot/test/context/assertj/ApplicationContextAssert;
+#hasSingleBean(Ljava/lang/Class;)Lorg/springframework/boot/test/context/assertj/ApplicationContextAssert;
+#hasSingleBean(Ljava/lang/Class;Lorg/springframework/boot/test/context/assertj/ApplicationContextAssert$Scope;)Lorg/springframework/boot/test/context/assertj/ApplicationContextAssert;
+#doesNotHaveBean(Ljava/lang/Class;)Lorg/springframework/boot/test/context/assertj/ApplicationContextAssert;
+#doesNotHaveBean(Ljava/lang/Class;Lorg/springframework/boot/test/context/assertj/ApplicationContextAssert$Scope;)Lorg/springframework/boot/test/context/assertj/ApplicationContextAssert;
+#doesNotHaveBean(Ljava/lang/String;)Lorg/springframework/boot/test/context/assertj/ApplicationContextAssert;
+#getBeanNames(Ljava/lang/Class;)Lorg/assertj/core/api/AbstractObjectArrayAssert;
+#getBean(Ljava/lang/Class;)Lorg/assertj/core/api/AbstractObjectAssert;
+#getBean(Ljava/lang/Class;Lorg/springframework/boot/test/context/assertj/ApplicationContextAssert$Scope;)Lorg/assertj/core/api/AbstractObjectAssert;
+#getBean(Ljava/lang/String;)Lorg/assertj/core/api/AbstractObjectAssert;
+#getBean(Ljava/lang/String;Ljava/lang/Class;)Lorg/assertj/core/api/AbstractObjectAssert;
+#getBeans(Ljava/lang/Class;)Lorg/assertj/core/api/MapAssert;
+#getBeans(Ljava/lang/Class;Lorg/springframework/boot/test/context/assertj/ApplicationContextAssert$Scope;)Lorg/assertj/core/api/MapAssert;
+#getFailure()Lorg/assertj/core/api/AbstractThrowableAssert;
+#hasFailed()Lorg/springframework/boot/test/context/assertj/ApplicationContextAssert;
+#hasNotFailed()Lorg/springframework/boot/test/context/assertj/ApplicationContextAssert;

+###org/springframework/boot/test/context/assertj/ApplicationContextAssert$Scope
@2.0.0.RELEASE
+#values()[Lorg/springframework/boot/test/context/assertj/ApplicationContextAssert$Scope;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/test/context/assertj/ApplicationContextAssert$Scope;

+###org/springframework/boot/test/context/runner/AbstractApplicationContextRunner
@2.0.0.RELEASE
+#withInitializer(Lorg/springframework/context/ApplicationContextInitializer;)Lorg/springframework/boot/test/context/runner/AbstractApplicationContextRunner;
+#withPropertyValues([Ljava/lang/String;)Lorg/springframework/boot/test/context/runner/AbstractApplicationContextRunner;
+#withSystemProperties([Ljava/lang/String;)Lorg/springframework/boot/test/context/runner/AbstractApplicationContextRunner;
+#withClassLoader(Ljava/lang/ClassLoader;)Lorg/springframework/boot/test/context/runner/AbstractApplicationContextRunner;
+#withParent(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/boot/test/context/runner/AbstractApplicationContextRunner;
+#withUserConfiguration([Ljava/lang/Class;)Lorg/springframework/boot/test/context/runner/AbstractApplicationContextRunner;
+#withConfiguration(Lorg/springframework/boot/context/annotation/Configurations;)Lorg/springframework/boot/test/context/runner/AbstractApplicationContextRunner;
+#with(Ljava/util/function/Function;)Lorg/springframework/boot/test/context/runner/AbstractApplicationContextRunner;
+#run(Lorg/springframework/boot/test/context/runner/ContextConsumer;)Lorg/springframework/boot/test/context/runner/AbstractApplicationContextRunner;
@2.2.0.RELEASE
+#withBean(Ljava/lang/Class;[Ljava/lang/Object;)Lorg/springframework/boot/test/context/runner/AbstractApplicationContextRunner;
+#withBean(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/springframework/boot/test/context/runner/AbstractApplicationContextRunner;
+#withBean(Ljava/lang/Class;Ljava/util/function/Supplier;[Lorg/springframework/beans/factory/config/BeanDefinitionCustomizer;)Lorg/springframework/boot/test/context/runner/AbstractApplicationContextRunner;
+#withBean(Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Supplier;[Lorg/springframework/beans/factory/config/BeanDefinitionCustomizer;)Lorg/springframework/boot/test/context/runner/AbstractApplicationContextRunner;
@2.3.0.RELEASE
+#withAllowBeanDefinitionOverriding(Z)Lorg/springframework/boot/test/context/runner/AbstractApplicationContextRunner;
@2.6.0
+#withAllowCircularReferences(Z)Lorg/springframework/boot/test/context/runner/AbstractApplicationContextRunner;
@3.0.0
+#prepare(Lorg/springframework/boot/test/context/runner/ContextConsumer;)Lorg/springframework/boot/test/context/runner/AbstractApplicationContextRunner;

+###org/springframework/boot/test/json/JsonbTester
@2.0.0.RELEASE
+#<init>(Ljava/lang/Class;Lorg/springframework/core/ResolvableType;Ljavax/json/bind/Jsonb;)V
+#initFields(Ljava/lang/Object;Ljavax/json/bind/Jsonb;)V
+#initFields(Ljava/lang/Object;Lorg/springframework/beans/factory/ObjectFactory;)V
@3.0.0
+#<init>(Ljava/lang/Class;Lorg/springframework/core/ResolvableType;Ljakarta/json/bind/Jsonb;)V
+#initFields(Ljava/lang/Object;Ljakarta/json/bind/Jsonb;)V
-#<init>(Ljava/lang/Class;Lorg/springframework/core/ResolvableType;Ljavax/json/bind/Jsonb;)V
-#initFields(Ljava/lang/Object;Ljavax/json/bind/Jsonb;)V

+###org/springframework/boot/test/web/reactive/server/WebTestClientBuilderCustomizer
@2.2.0.RELEASE
+#customize(Lorg/springframework/test/web/reactive/server/WebTestClient$Builder;)V

+###org/springframework/boot/test/web/client/TestRestTemplateExtensionsKt
@2.0.0.RELEASE
@2.2.0.RELEASE
+#getForObject(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#getForObject(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;
+#getForObject(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/net/URI;)Ljava/lang/Object;
+#getForEntity(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/net/URI;)Lorg/springframework/http/ResponseEntity;
+#getForEntity(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#getForEntity(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;
+#patchForObject(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#patchForObject$default(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;
+#patchForObject(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Object;
+#patchForObject$default(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;ILjava/lang/Object;)Ljava/lang/Object;
+#patchForObject(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/net/URI;Ljava/lang/Object;)Ljava/lang/Object;
+#patchForObject$default(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/net/URI;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;
+#postForObject(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+#postForObject$default(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;
+#postForObject(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Object;
+#postForObject$default(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;ILjava/lang/Object;)Ljava/lang/Object;
+#postForObject(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/net/URI;Ljava/lang/Object;)Ljava/lang/Object;
+#postForObject$default(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/net/URI;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;
+#postForEntity(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#postForEntity$default(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;ILjava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#postForEntity(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;
+#postForEntity$default(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;ILjava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#postForEntity(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/net/URI;Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#postForEntity$default(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/net/URI;Ljava/lang/Object;ILjava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#exchange(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;[Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#exchange$default(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;[Ljava/lang/Object;ILjava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#exchange(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Ljava/util/Map;)Lorg/springframework/http/ResponseEntity;
+#exchange$default(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/lang/String;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;Ljava/util/Map;ILjava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#exchange(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;)Lorg/springframework/http/ResponseEntity;
+#exchange$default(Lorg/springframework/boot/test/web/client/TestRestTemplate;Ljava/net/URI;Lorg/springframework/http/HttpMethod;Lorg/springframework/http/HttpEntity;ILjava/lang/Object;)Lorg/springframework/http/ResponseEntity;
+#exchange(Lorg/springframework/boot/test/web/client/TestRestTemplate;Lorg/springframework/http/RequestEntity;)Lorg/springframework/http/ResponseEntity;

+###org/springframework/boot/test/system/OutputCaptureExtension
@2.2.0.RELEASE
+#beforeAll(Lorg/junit/jupiter/api/extension/ExtensionContext;)V
+#afterAll(Lorg/junit/jupiter/api/extension/ExtensionContext;)V
+#beforeEach(Lorg/junit/jupiter/api/extension/ExtensionContext;)V
+#afterEach(Lorg/junit/jupiter/api/extension/ExtensionContext;)V
+#supportsParameter(Lorg/junit/jupiter/api/extension/ParameterContext;Lorg/junit/jupiter/api/extension/ExtensionContext;)Z
+#resolveParameter(Lorg/junit/jupiter/api/extension/ParameterContext;Lorg/junit/jupiter/api/extension/ExtensionContext;)Ljava/lang/Object;

+###org/springframework/boot/test/system/OutputCaptureRule
@2.2.0.RELEASE
+#<init>()V
+#apply(Lorg/junit/runners/model/Statement;Lorg/junit/runner/Description;)Lorg/junit/runners/model/Statement;
+#reset()V[deprecated]
+#getAll()Ljava/lang/String;
+#getOut()Ljava/lang/String;
+#getErr()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#expect(Lorg/hamcrest/Matcher;)V
@2.3.0.RELEASE
-#reset()V[deprecated]

+###org/springframework/boot/test/util/TestPropertyValues$Type
@2.0.0.RELEASE
+#values()[Lorg/springframework/boot/test/util/TestPropertyValues$Type;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/test/util/TestPropertyValues$Type;
+#getSourceClass()Ljava/lang/Class;

+###org/springframework/boot/test/web/reactive/server/WebTestClientContextCustomizer$WebTestClientFactory
@2.0.0.RELEASE
+#<init>()V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#isSingleton()Z
+#getObjectType()Ljava/lang/Class;
+#getObject()Lorg/springframework/test/web/reactive/server/WebTestClient;
+#getObject()Ljava/lang/Object;

+###org/springframework/boot/test/web/client/TestRestTemplateExtensionsKt$exchange$1
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/boot/test/web/client/TestRestTemplateExtensionsKt$exchange$3
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/boot/test/web/client/TestRestTemplateExtensionsKt$exchange$2
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/boot/test/context/runner/ContextConsumer
@2.0.0.RELEASE
+#accept(Lorg/springframework/context/ApplicationContext;)V
@2.6.0
+#andThen(Lorg/springframework/boot/test/context/runner/ContextConsumer;)Lorg/springframework/boot/test/context/runner/ContextConsumer;

+###org/springframework/boot/test/context/runner/ReactiveWebApplicationContextRunner
@2.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/function/Supplier;)V

+###org/springframework/boot/test/context/assertj/AssertableReactiveWebApplicationContext
@2.0.0.RELEASE
+#get(Ljava/util/function/Supplier;)Lorg/springframework/boot/test/context/assertj/AssertableReactiveWebApplicationContext;

+###org/springframework/boot/test/web/client/TestRestTemplateExtensionsKt$exchange$4
@2.0.0.RELEASE
+#<init>()V

+###org/springframework/boot/test/web/client/TestRestTemplateContextCustomizer$TestRestTemplateFactory
@2.0.0.RELEASE
+#<init>()V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#isSingleton()Z
+#getObjectType()Ljava/lang/Class;
+#getObject()Lorg/springframework/boot/test/web/client/TestRestTemplate;
+#getObject()Ljava/lang/Object;

+###org/springframework/boot/test/context/FilteredClassLoader$PackageFilter
@2.0.0.RELEASE
+#test(Ljava/lang/String;)Z
+#of([Ljava/lang/String;)Lorg/springframework/boot/test/context/FilteredClassLoader$PackageFilter;
+#test(Ljava/lang/Object;)Z

+###org/springframework/boot/test/context/ReactiveWebMergedContextConfiguration
@2.0.0.RELEASE
+#<init>(Lorg/springframework/test/context/MergedContextConfiguration;)V

+###org/springframework/boot/test/context/runner/ApplicationContextRunner
@2.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/function/Supplier;)V

+###org/springframework/boot/test/context/assertj/ApplicationContextAssertProvider
@2.0.0.RELEASE
+#assertThat()Lorg/springframework/boot/test/context/assertj/ApplicationContextAssert;[deprecated]
+#getSourceApplicationContext()Lorg/springframework/context/ApplicationContext;
+#getSourceApplicationContext(Ljava/lang/Class;)Lorg/springframework/context/ApplicationContext;
+#getStartupFailure()Ljava/lang/Throwable;
+#close()V
+#get(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/springframework/boot/test/context/assertj/ApplicationContextAssertProvider;
+#assertThat()Ljava/lang/Object;[deprecated]

+###org/springframework/boot/test/system/CapturedOutput
@2.2.0.RELEASE
+#length()I
+#charAt(I)C
+#subSequence(II)Ljava/lang/CharSequence;
+#getAll()Ljava/lang/String;
+#getOut()Ljava/lang/String;
+#getErr()Ljava/lang/String;

+###org/springframework/boot/test/context/assertj/AssertableApplicationContext
@2.0.0.RELEASE
+#get(Ljava/util/function/Supplier;)Lorg/springframework/boot/test/context/assertj/AssertableApplicationContext;

+###org/springframework/boot/test/context/FilteredClassLoader$ClassFilter
@2.0.0.RELEASE
+#test(Ljava/lang/String;)Z
+#of([Ljava/lang/Class;)Lorg/springframework/boot/test/context/FilteredClassLoader$ClassFilter;
+#test(Ljava/lang/Object;)Z

+###org/springframework/boot/test/context/FilteredClassLoader
@2.0.0.RELEASE
+#<init>([Ljava/lang/Class;)V
+#<init>([Ljava/lang/String;)V
+#<init>([Ljava/util/function/Predicate;)V
@2.1.0.RELEASE
+#<init>([Lorg/springframework/core/io/ClassPathResource;)V
+#getResource(Ljava/lang/String;)Ljava/net/URL;
@2.1.4.RELEASE
+#getResources(Ljava/lang/String;)Ljava/util/Enumeration;
+#getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;
@2.5.7
+#publicDefineClass(Ljava/lang/String;[BLjava/security/ProtectionDomain;)Ljava/lang/Class;

+###org/springframework/boot/test/context/AnnotatedClassFinder
@2.1.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#findFromClass(Ljava/lang/Class;)Ljava/lang/Class;
+#findFromPackage(Ljava/lang/String;)Ljava/lang/Class;

+###org/springframework/boot/test/util/TestPropertyValues$Pair
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#addTo(Ljava/util/Map;)V
+#parse(Ljava/lang/String;)Lorg/springframework/boot/test/util/TestPropertyValues$Pair;
@2.4.0
*#<init>(Ljava/lang/String;Ljava/lang/String;)V[deprecated]
+#fromMapEntry(Ljava/util/Map$Entry;)Lorg/springframework/boot/test/util/TestPropertyValues$Pair;
+#of(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/boot/test/util/TestPropertyValues$Pair;
@2.6.0
-#<init>(Ljava/lang/String;Ljava/lang/String;)V[deprecated]

+###org/springframework/boot/test/context/runner/WebApplicationContextRunner
@2.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/function/Supplier;)V
+#withMockServletContext(Ljava/util/function/Supplier;)Ljava/util/function/Supplier;

+###org/springframework/boot/test/context/FilteredClassLoader$ClassPathResourceFilter
@2.1.0.RELEASE
+#test(Ljava/lang/String;)Z
+#of([Lorg/springframework/core/io/ClassPathResource;)Lorg/springframework/boot/test/context/FilteredClassLoader$ClassPathResourceFilter;
+#test(Ljava/lang/Object;)Z

+###org/springframework/boot/test/context/assertj/AssertableWebApplicationContext
@2.0.0.RELEASE
+#get(Ljava/util/function/Supplier;)Lorg/springframework/boot/test/context/assertj/AssertableWebApplicationContext;

+###org/springframework/boot/test/util/TestPropertyValues
@2.0.0.RELEASE
+#and([Ljava/lang/String;)Lorg/springframework/boot/test/util/TestPropertyValues;
+#applyTo(Lorg/springframework/context/ConfigurableApplicationContext;)V
+#applyTo(Lorg/springframework/core/env/ConfigurableEnvironment;)V
+#applyTo(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/test/util/TestPropertyValues$Type;)V
+#applyTo(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/test/util/TestPropertyValues$Type;Ljava/lang/String;)V
+#applyToSystemProperties(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#of([Ljava/lang/String;)Lorg/springframework/boot/test/util/TestPropertyValues;
+#of(Ljava/lang/Iterable;)Lorg/springframework/boot/test/util/TestPropertyValues;
+#of(Ljava/util/stream/Stream;)Lorg/springframework/boot/test/util/TestPropertyValues;
+#empty()Lorg/springframework/boot/test/util/TestPropertyValues;
@2.4.0
+#and(Ljava/lang/Iterable;)Lorg/springframework/boot/test/util/TestPropertyValues;
+#and(Ljava/util/stream/Stream;)Lorg/springframework/boot/test/util/TestPropertyValues;
+#and(Ljava/util/Map;)Lorg/springframework/boot/test/util/TestPropertyValues;
+#and(Ljava/util/stream/Stream;Ljava/util/function/Function;)Lorg/springframework/boot/test/util/TestPropertyValues;
+#of(Ljava/util/Map;)Lorg/springframework/boot/test/util/TestPropertyValues;
+#of(Ljava/util/stream/Stream;Ljava/util/function/Function;)Lorg/springframework/boot/test/util/TestPropertyValues;
@3.0.0
+#applyToSystemProperties(Ljava/lang/Runnable;)V

+###org/springframework/boot/test/context/ConfigDataApplicationContextInitializer
@2.4.0
+#<init>()V
+#initialize(Lorg/springframework/context/ConfigurableApplicationContext;)V

+###org/springframework/boot/test/mock/mockito/SpringBootMockResolver
@2.4.0
+#<init>()V
+#resolve(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/boot/test/context/runner/AbstractApplicationContextRunner$RunnerConfiguration
@2.6.0

+###org/springframework/boot/test/context/SpringBootTest$UseMainMethod
@3.0.0
+#values()[Lorg/springframework/boot/test/context/SpringBootTest$UseMainMethod;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/test/context/SpringBootTest$UseMainMethod;

+###org/springframework/boot/test/context/SpringBootTestAotProcessor
@3.0.0
+#<init>(Ljava/util/Set;Lorg/springframework/context/aot/AbstractAotProcessor$Settings;)V
+#main([Ljava/lang/String;)V

+###org/springframework/boot/test/graphql/tester/HttpGraphQlTesterContextCustomizer$HttpGraphQlTesterFactory
@2.7.0
+#<init>()V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#isSingleton()Z
+#getObjectType()Ljava/lang/Class;
+#getObject()Lorg/springframework/graphql/test/tester/HttpGraphQlTester;
+#getObject()Ljava/lang/Object;

+###org/springframework/boot/test/rsocket/server/LocalRSocketServerPort
@2.7.0

+###org/springframework/boot/test/web/server/LocalServerPort
@2.7.0

+###org/springframework/boot/test/web/server/LocalManagementPort
@2.7.0
