
+###org/codehaus/jackson/Base64Variant
@0.9.6
+#<init>(Ljava/lang/String;Ljava/lang/String;ZCI)V
+#<init>(Lorg/codehaus/jackson/Base64Variant;Ljava/lang/String;I)V
+#<init>(Lorg/codehaus/jackson/Base64Variant;Ljava/lang/String;ZCI)V
+#getName()Ljava/lang/String;
+#usesPadding()Z
+#usesPaddingChar(C)Z
+#getPaddingChar()C
+#getPaddingByte()B
+#getMaxLineLength()I
+#decodeBase64Char(C)I
+#decodeBase64Byte(B)I
+#encodeBase64BitsAsChar(I)C
+#encodeBase64Chunk(I[CI)I
+#encodeBase64Partial(II[CI)I
+#encodeBase64BitsAsByte(I)B
+#encodeBase64Chunk(I[BI)I
+#encodeBase64Partial(II[BI)I
+#toString()Ljava/lang/String;
@0.9.7
+#usesPaddingChar(I)Z
+#decodeBase64Char(I)I
+#encodeBase64Chunk(Ljava/lang/StringBuilder;I)V
+#encodeBase64Partial(Ljava/lang/StringBuilder;II)V
@1.5.6
+#encode([B)Ljava/lang/String;
+#encode([BZ)Ljava/lang/String;

+###org/codehaus/jackson/Base64Variants
@0.9.6
+#<init>()V
+#getDefaultVariant()Lorg/codehaus/jackson/Base64Variant;

+###org/codehaus/jackson/JsonEncoding
@0.9.6
+#values()[Lorg/codehaus/jackson/JsonEncoding;
+#valueOf(Ljava/lang/String;)Lorg/codehaus/jackson/JsonEncoding;
+#getJavaName()Ljava/lang/String;
+#isBigEndian()Z

+###org/codehaus/jackson/JsonFactory
@0.9.6
+#<init>()V
+#enableParserFeature(Lorg/codehaus/jackson/JsonParser$Feature;)V
+#disableParserFeature(Lorg/codehaus/jackson/JsonParser$Feature;)V
+#setParserFeature(Lorg/codehaus/jackson/JsonParser$Feature;Z)V
+#isParserFeatureEnabled(Lorg/codehaus/jackson/JsonParser$Feature;)Z
+#enableGeneratorFeature(Lorg/codehaus/jackson/JsonGenerator$Feature;)V
+#disableGeneratorFeature(Lorg/codehaus/jackson/JsonGenerator$Feature;)V
+#setGeneratorFeature(Lorg/codehaus/jackson/JsonGenerator$Feature;Z)V
+#isGeneratorFeatureEnabled(Lorg/codehaus/jackson/JsonGenerator$Feature;)Z
+#createJsonParser(Ljava/io/File;)Lorg/codehaus/jackson/JsonParser;
+#createJsonParser(Ljava/net/URL;)Lorg/codehaus/jackson/JsonParser;
+#createJsonParser(Ljava/io/InputStream;)Lorg/codehaus/jackson/JsonParser;
+#createJsonParser(Ljava/io/Reader;)Lorg/codehaus/jackson/JsonParser;
+#createJsonParser([B)Lorg/codehaus/jackson/JsonParser;
+#createJsonParser([BII)Lorg/codehaus/jackson/JsonParser;
+#createJsonParser(Ljava/lang/String;)Lorg/codehaus/jackson/JsonParser;
+#createJsonGenerator(Ljava/io/OutputStream;Lorg/codehaus/jackson/JsonEncoding;)Lorg/codehaus/jackson/JsonGenerator;
+#createJsonGenerator(Ljava/io/Writer;)Lorg/codehaus/jackson/JsonGenerator;
+#createJsonGenerator(Ljava/io/File;Lorg/codehaus/jackson/JsonEncoding;)Lorg/codehaus/jackson/JsonGenerator;
@0.9.8
+#<init>(Lorg/codehaus/jackson/ObjectCodec;)V
+#setCodec(Lorg/codehaus/jackson/ObjectCodec;)V
+#getCodec()Lorg/codehaus/jackson/ObjectCodec;
@1.2.0
+#configure(Lorg/codehaus/jackson/JsonParser$Feature;Z)Lorg/codehaus/jackson/JsonFactory;
+#enable(Lorg/codehaus/jackson/JsonParser$Feature;)Lorg/codehaus/jackson/JsonFactory;
+#disable(Lorg/codehaus/jackson/JsonParser$Feature;)Lorg/codehaus/jackson/JsonFactory;
+#isEnabled(Lorg/codehaus/jackson/JsonParser$Feature;)Z
+#configure(Lorg/codehaus/jackson/JsonGenerator$Feature;Z)Lorg/codehaus/jackson/JsonFactory;
+#enable(Lorg/codehaus/jackson/JsonGenerator$Feature;)Lorg/codehaus/jackson/JsonFactory;
+#disable(Lorg/codehaus/jackson/JsonGenerator$Feature;)Lorg/codehaus/jackson/JsonFactory;
+#isEnabled(Lorg/codehaus/jackson/JsonGenerator$Feature;)Z
+#setCodec(Lorg/codehaus/jackson/ObjectCodec;)Lorg/codehaus/jackson/JsonFactory;
-#setCodec(Lorg/codehaus/jackson/ObjectCodec;)V
@1.3.0
+#_getBufferRecycler()Lorg/codehaus/jackson/util/BufferRecycler;
@1.6.0
+#version()Lorg/codehaus/jackson/Version;
*#enableGeneratorFeature(Lorg/codehaus/jackson/JsonGenerator$Feature;)V[deprecated]
*#disableGeneratorFeature(Lorg/codehaus/jackson/JsonGenerator$Feature;)V[deprecated]
*#setGeneratorFeature(Lorg/codehaus/jackson/JsonGenerator$Feature;Z)V[deprecated]
*#isGeneratorFeatureEnabled(Lorg/codehaus/jackson/JsonGenerator$Feature;)Z[deprecated]
@1.8.0
+#getFormatName()Ljava/lang/String;
+#hasFormat(Lorg/codehaus/jackson/format/InputAccessor;)Lorg/codehaus/jackson/format/MatchStrength;
+#getInputDecorator()Lorg/codehaus/jackson/io/InputDecorator;
+#setInputDecorator(Lorg/codehaus/jackson/io/InputDecorator;)Lorg/codehaus/jackson/JsonFactory;
+#getCharacterEscapes()Lorg/codehaus/jackson/io/CharacterEscapes;
+#setCharacterEscapes(Lorg/codehaus/jackson/io/CharacterEscapes;)Lorg/codehaus/jackson/JsonFactory;
+#getOutputDecorator()Lorg/codehaus/jackson/io/OutputDecorator;
+#setOutputDecorator(Lorg/codehaus/jackson/io/OutputDecorator;)Lorg/codehaus/jackson/JsonFactory;
+#createJsonGenerator(Ljava/io/OutputStream;)Lorg/codehaus/jackson/JsonGenerator;

+###org/codehaus/jackson/JsonGenerationException
@0.9.6
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/codehaus/jackson/JsonGenerator$Feature
@0.9.6
+#values()[Lorg/codehaus/jackson/JsonGenerator$Feature;
+#valueOf(Ljava/lang/String;)Lorg/codehaus/jackson/JsonGenerator$Feature;
+#collectDefaults()I
+#enabledByDefault()Z
+#getMask()I

+###org/codehaus/jackson/JsonGenerator
@0.9.6
+#enableFeature(Lorg/codehaus/jackson/JsonGenerator$Feature;)V
+#disableFeature(Lorg/codehaus/jackson/JsonGenerator$Feature;)V
+#setFeature(Lorg/codehaus/jackson/JsonGenerator$Feature;Z)V
+#isFeatureEnabled(Lorg/codehaus/jackson/JsonGenerator$Feature;)Z
+#setPrettyPrinter(Lorg/codehaus/jackson/PrettyPrinter;)V
+#useDefaultPrettyPrinter()V
+#writeStartArray()V
+#writeEndArray()V
+#writeStartObject()V
+#writeEndObject()V
+#writeFieldName(Ljava/lang/String;)V
+#writeString(Ljava/lang/String;)V
+#writeString([CII)V
+#writeRaw(Ljava/lang/String;)V
+#writeRaw(Ljava/lang/String;II)V
+#writeRaw([CII)V
+#writeRaw(C)V
+#writeBinary(Lorg/codehaus/jackson/Base64Variant;[BII)V
+#writeBinary([BII)V
+#writeBinary([B)V
+#writeNumber(I)V
+#writeNumber(J)V
+#writeNumber(D)V
+#writeNumber(F)V
+#writeNumber(Ljava/math/BigDecimal;)V
+#writeNumber(Ljava/lang/String;)V
+#writeBoolean(Z)V
+#writeNull()V
+#writeStringField(Ljava/lang/String;Ljava/lang/String;)V
+#writeBooleanField(Ljava/lang/String;Z)V
+#writeNullField(Ljava/lang/String;)V
+#writeNumberField(Ljava/lang/String;I)V
+#writeNumberField(Ljava/lang/String;J)V
+#writeNumberField(Ljava/lang/String;D)V
+#writeNumberField(Ljava/lang/String;F)V
+#writeNumberField(Ljava/lang/String;Ljava/math/BigDecimal;)V
+#writeArrayFieldStart(Ljava/lang/String;)V
+#writeObjectFieldStart(Ljava/lang/String;)V
+#copyCurrentEvent(Lorg/codehaus/jackson/JsonParser;)V
+#copyCurrentStructure(Lorg/codehaus/jackson/JsonParser;)V
+#getOutputContext()Lorg/codehaus/jackson/JsonWriteContext;
+#flush()V
+#close()V
@0.9.8
+#setCodec(Lorg/codehaus/jackson/ObjectCodec;)V
+#getCodec()Lorg/codehaus/jackson/ObjectCodec;
+#writeObject(Ljava/lang/Object;)V
+#writeObjectField(Ljava/lang/String;Ljava/lang/Object;)V
+#getOutputContext()Lorg/codehaus/jackson/JsonStreamContext;
-#getOutputContext()Lorg/codehaus/jackson/JsonWriteContext;
@0.9.9
+#writeTree(Lorg/codehaus/jackson/JsonNode;)V
@0.9.9-3
+#writeRawValue(Ljava/lang/String;)V
+#writeRawValue(Ljava/lang/String;II)V
+#writeRawValue([CII)V
+#isClosed()Z
@0.9.9-5
+#writeNumber(Ljava/math/BigInteger;)V
@1.2.0
+#enable(Lorg/codehaus/jackson/JsonGenerator$Feature;)Lorg/codehaus/jackson/JsonGenerator;
+#disable(Lorg/codehaus/jackson/JsonGenerator$Feature;)Lorg/codehaus/jackson/JsonGenerator;
+#configure(Lorg/codehaus/jackson/JsonGenerator$Feature;Z)Lorg/codehaus/jackson/JsonGenerator;
+#isEnabled(Lorg/codehaus/jackson/JsonGenerator$Feature;)Z
+#setCodec(Lorg/codehaus/jackson/ObjectCodec;)Lorg/codehaus/jackson/JsonGenerator;
+#setPrettyPrinter(Lorg/codehaus/jackson/PrettyPrinter;)Lorg/codehaus/jackson/JsonGenerator;
+#useDefaultPrettyPrinter()Lorg/codehaus/jackson/JsonGenerator;
-#setCodec(Lorg/codehaus/jackson/ObjectCodec;)V
-#setPrettyPrinter(Lorg/codehaus/jackson/PrettyPrinter;)V
-#useDefaultPrettyPrinter()V
@1.3.0
+#writeBinaryField(Ljava/lang/String;[B)V
@1.6.0
+#version()Lorg/codehaus/jackson/Version;
+#writeFieldName(Lorg/codehaus/jackson/io/SerializedString;)V
@1.7.0
+#writeFieldName(Lorg/codehaus/jackson/SerializableString;)V
+#writeString(Lorg/codehaus/jackson/SerializableString;)V
+#writeRawUTF8String([BII)V
+#writeUTF8String([BII)V
@1.8.0
+#setSchema(Lorg/codehaus/jackson/FormatSchema;)V
+#canUseSchema(Lorg/codehaus/jackson/FormatSchema;)Z
+#getOutputTarget()Ljava/lang/Object;
*#enableFeature(Lorg/codehaus/jackson/JsonGenerator$Feature;)V[deprecated]
*#disableFeature(Lorg/codehaus/jackson/JsonGenerator$Feature;)V[deprecated]
*#setFeature(Lorg/codehaus/jackson/JsonGenerator$Feature;Z)V[deprecated]
*#isFeatureEnabled(Lorg/codehaus/jackson/JsonGenerator$Feature;)Z[deprecated]
+#setHighestNonEscapedChar(I)Lorg/codehaus/jackson/JsonGenerator;
+#getHighestEscapedChar()I
+#getCharacterEscapes()Lorg/codehaus/jackson/io/CharacterEscapes;
+#setCharacterEscapes(Lorg/codehaus/jackson/io/CharacterEscapes;)Lorg/codehaus/jackson/JsonGenerator;

+###org/codehaus/jackson/JsonLocation
@0.9.6
+#<init>(Ljava/lang/Object;JII)V
+#getSourceRef()Ljava/lang/Object;
+#getLineNr()I
+#getColumnNr()I
+#getCharOffset()J
+#getByteOffset()J
+#toString()Ljava/lang/String;
@1.3.0
+#<init>(Ljava/lang/Object;JJII)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/codehaus/jackson/JsonNode
@0.9.8
+#isValueNode()Z
+#isContainerNode()Z
+#isMissingNode()Z
+#isArray()Z
+#isObject()Z
+#isNumber()Z
+#isIntegralNumber()Z
+#isFloatingPointNumber()Z
+#isInt()Z
+#isLong()Z
+#isDouble()Z
+#isBigDecimal()Z
+#isTextual()Z
+#isBoolean()Z
+#isNull()Z
+#isBinary()Z
+#getTextValue()Ljava/lang/String;
+#getBinaryValue()[B
+#getBooleanValue()Z
+#getNumberValue()Ljava/lang/Number;
+#getIntValue()I
+#getLongValue()J
+#getDoubleValue()D
+#getDecimalValue()Ljava/math/BigDecimal;
+#get(I)Lorg/codehaus/jackson/JsonNode;
+#get(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
+#getFieldValue(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;[deprecated]
+#getElementValue(I)Lorg/codehaus/jackson/JsonNode;[deprecated]
+#getValueAsText()Ljava/lang/String;
+#size()I
+#iterator()Ljava/util/Iterator;
+#getElements()Ljava/util/Iterator;
+#getFieldNames()Ljava/util/Iterator;
+#path(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
+#getPath(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;[deprecated]
+#path(I)Lorg/codehaus/jackson/JsonNode;
+#getPath(I)Lorg/codehaus/jackson/JsonNode;[deprecated]
+#writeTo(Lorg/codehaus/jackson/JsonGenerator;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
@0.9.9
+#isPojo()Z
@0.9.9-5
+#isBigInteger()Z
+#getBigIntegerValue()Ljava/math/BigInteger;
@1.3.0
+#asToken()Lorg/codehaus/jackson/JsonToken;
+#getNumberType()Lorg/codehaus/jackson/JsonParser$NumberType;
+#traverse()Lorg/codehaus/jackson/JsonParser;
+#append()Lorg/codehaus/jackson/JsonGenerator;
@1.5.0
-#append()Lorg/codehaus/jackson/JsonGenerator;
@1.6.0
+#getValueAsInt()I
+#getValueAsInt(I)I
+#getValueAsLong()J
+#getValueAsLong(J)J
+#getValueAsDouble()D
+#getValueAsDouble(D)D
+#has(Ljava/lang/String;)Z
+#has(I)Z
+#findValue(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
+#findValues(Ljava/lang/String;)Ljava/util/List;
+#findValuesAsText(Ljava/lang/String;)Ljava/util/List;
+#findPath(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
+#findParent(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
+#findParents(Ljava/lang/String;)Ljava/util/List;
+#findValues(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
+#findValuesAsText(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
+#findParents(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
*#writeTo(Lorg/codehaus/jackson/JsonGenerator;)V[deprecated]
@1.7.0
+#getValueAsBoolean()Z
+#getValueAsBoolean(Z)Z
@1.8.0
+#getFields()Ljava/util/Iterator;
+#with(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
@1.9.0
+#asText()Ljava/lang/String;
+#asInt()I
+#asInt(I)I
+#asLong()J
+#asLong(J)J
+#asDouble()D
+#asDouble(D)D
+#asBoolean()Z
+#asBoolean(Z)Z
*#getValueAsText()Ljava/lang/String;[deprecated]
*#getValueAsInt()I[deprecated]
*#getValueAsInt(I)I[deprecated]
*#getValueAsLong()J[deprecated]
*#getValueAsLong(J)J[deprecated]
*#getValueAsDouble()D[deprecated]
*#getValueAsDouble(D)D[deprecated]
*#getValueAsBoolean()Z[deprecated]
*#getValueAsBoolean(Z)Z[deprecated]
-#getFieldValue(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;[deprecated]
-#getElementValue(I)Lorg/codehaus/jackson/JsonNode;[deprecated]
-#writeTo(Lorg/codehaus/jackson/JsonGenerator;)V[deprecated]

+###org/codehaus/jackson/JsonParseException
@0.9.6
+#<init>(Ljava/lang/String;Lorg/codehaus/jackson/JsonLocation;)V
+#<init>(Ljava/lang/String;Lorg/codehaus/jackson/JsonLocation;Ljava/lang/Throwable;)V

+###org/codehaus/jackson/JsonParser$Feature
@0.9.6
+#values()[Lorg/codehaus/jackson/JsonParser$Feature;
+#valueOf(Ljava/lang/String;)Lorg/codehaus/jackson/JsonParser$Feature;
+#collectDefaults()I
+#enabledByDefault()Z
+#getMask()I
@1.3.0
+#enabledIn(I)Z

+###org/codehaus/jackson/JsonParser$NumberType
@0.9.6
+#values()[Lorg/codehaus/jackson/JsonParser$NumberType;
+#valueOf(Ljava/lang/String;)Lorg/codehaus/jackson/JsonParser$NumberType;

+###org/codehaus/jackson/JsonParser
@0.9.6
+#enableFeature(Lorg/codehaus/jackson/JsonParser$Feature;)V
+#disableFeature(Lorg/codehaus/jackson/JsonParser$Feature;)V
+#setFeature(Lorg/codehaus/jackson/JsonParser$Feature;Z)V
+#isFeatureEnabled(Lorg/codehaus/jackson/JsonParser$Feature;)Z
+#nextToken()Lorg/codehaus/jackson/JsonToken;
+#skipChildren()V
+#getCurrentToken()Lorg/codehaus/jackson/JsonToken;
+#hasCurrentToken()Z
+#getCurrentName()Ljava/lang/String;
+#close()V
+#getParsingContext()Lorg/codehaus/jackson/JsonReadContext;
+#getTokenLocation()Lorg/codehaus/jackson/JsonLocation;
+#getCurrentLocation()Lorg/codehaus/jackson/JsonLocation;
+#getText()Ljava/lang/String;
+#getTextCharacters()[C
+#getTextLength()I
+#getTextOffset()I
+#getNumberValue()Ljava/lang/Number;
+#getNumberType()Lorg/codehaus/jackson/JsonParser$NumberType;
+#getByteValue()B
+#getShortValue()S
+#getIntValue()I
+#getLongValue()J
+#getFloatValue()F
+#getDoubleValue()D
+#getDecimalValue()Ljava/math/BigDecimal;
@0.9.7
+#nextValue()Lorg/codehaus/jackson/JsonToken;
+#getBinaryValue(Lorg/codehaus/jackson/Base64Variant;)[B
+#getBinaryValue()[B
@0.9.8
+#getParsingContext()Lorg/codehaus/jackson/JsonStreamContext;
+#readValueAs(Ljava/lang/Class;)Ljava/lang/Object;
+#readValueAs(Lorg/codehaus/jackson/type/TypeReference;)Ljava/lang/Object;
-#getParsingContext()Lorg/codehaus/jackson/JsonReadContext;
@0.9.9-3
+#isClosed()Z
+#clearCurrentToken()V
+#getLastClearedToken()Lorg/codehaus/jackson/JsonToken;
@0.9.9-4
+#readValueAsTree()Lorg/codehaus/jackson/JsonNode;
@0.9.9-5
+#getBigIntegerValue()Ljava/math/BigInteger;
@1.2.0
+#enable(Lorg/codehaus/jackson/JsonParser$Feature;)Lorg/codehaus/jackson/JsonParser;
+#disable(Lorg/codehaus/jackson/JsonParser$Feature;)Lorg/codehaus/jackson/JsonParser;
+#configure(Lorg/codehaus/jackson/JsonParser$Feature;Z)Lorg/codehaus/jackson/JsonParser;
+#isEnabled(Lorg/codehaus/jackson/JsonParser$Feature;)Z
+#skipChildren()Lorg/codehaus/jackson/JsonParser;
-#skipChildren()V
@1.3.0
+#getCodec()Lorg/codehaus/jackson/ObjectCodec;
+#setCodec(Lorg/codehaus/jackson/ObjectCodec;)V
+#getBooleanValue()Z
+#getEmbeddedObject()Ljava/lang/Object;
@1.6.0
+#version()Lorg/codehaus/jackson/Version;
+#releaseBuffered(Ljava/io/OutputStream;)I
+#releaseBuffered(Ljava/io/Writer;)I
+#hasTextCharacters()Z
+#getValueAsInt()I
+#getValueAsInt(I)I
+#getValueAsLong()J
+#getValueAsLong(J)J
+#getValueAsDouble()D
+#getValueAsDouble(D)D
@1.7.0
+#isExpectedStartArrayToken()Z
+#getValueAsBoolean()Z
+#getValueAsBoolean(Z)Z
@1.8.0
+#setSchema(Lorg/codehaus/jackson/FormatSchema;)V
+#canUseSchema(Lorg/codehaus/jackson/FormatSchema;)Z
+#getInputSource()Ljava/lang/Object;
@1.9.0
+#nextFieldName(Lorg/codehaus/jackson/SerializableString;)Z
+#nextTextValue()Ljava/lang/String;
+#nextIntValue(I)I
+#nextLongValue(J)J
+#nextBooleanValue()Ljava/lang/Boolean;
+#readValuesAs(Ljava/lang/Class;)Ljava/util/Iterator;
+#readValuesAs(Lorg/codehaus/jackson/type/TypeReference;)Ljava/util/Iterator;

+###org/codehaus/jackson/JsonProcessingException
@0.9.6
+#getLocation()Lorg/codehaus/jackson/JsonLocation;
+#getMessage()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/codehaus/jackson/JsonStreamContext
@0.9.8
+#<init>(I)V
+#getParent()Lorg/codehaus/jackson/JsonStreamContext;
+#inArray()Z
+#inRoot()Z
+#inObject()Z
+#getTypeDesc()Ljava/lang/String;
+#getEntryCount()I
+#getCurrentIndex()I
+#getCurrentName()Ljava/lang/String;
@1.7.0
-#<init>(I)V

+###org/codehaus/jackson/JsonToken
@0.9.6
+#values()[Lorg/codehaus/jackson/JsonToken;
+#valueOf(Ljava/lang/String;)Lorg/codehaus/jackson/JsonToken;
+#asString()Ljava/lang/String;
+#asCharArray()[C
+#asByteArray()[B
+#isNumeric()Z
+#isScalarValue()Z

+###org/codehaus/jackson/ObjectCodec
@0.9.8
+#readValue(Lorg/codehaus/jackson/JsonParser;Ljava/lang/Class;)Ljava/lang/Object;
+#readValue(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/type/TypeReference;)Ljava/lang/Object;
+#writeValue(Lorg/codehaus/jackson/JsonGenerator;Ljava/lang/Object;)V
@0.9.9
+#readValue(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/type/JavaType;)Ljava/lang/Object;
+#readTree(Lorg/codehaus/jackson/JsonParser;)Lorg/codehaus/jackson/JsonNode;
+#writeTree(Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/JsonNode;)V
@1.2.0
+#createObjectNode()Lorg/codehaus/jackson/JsonNode;
+#createArrayNode()Lorg/codehaus/jackson/JsonNode;
@1.3.0
+#treeAsTokens(Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonParser;
+#treeToValue(Lorg/codehaus/jackson/JsonNode;Ljava/lang/Class;)Ljava/lang/Object;
@1.9.0
+#readValues(Lorg/codehaus/jackson/JsonParser;Ljava/lang/Class;)Ljava/util/Iterator;
+#readValues(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/type/TypeReference;)Ljava/util/Iterator;
+#readValues(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/type/JavaType;)Ljava/util/Iterator;

+###org/codehaus/jackson/PrettyPrinter
@0.9.6
+#writeRootValueSeparator(Lorg/codehaus/jackson/JsonGenerator;)V
+#writeStartObject(Lorg/codehaus/jackson/JsonGenerator;)V
+#writeEndObject(Lorg/codehaus/jackson/JsonGenerator;I)V
+#writeObjectEntrySeparator(Lorg/codehaus/jackson/JsonGenerator;)V
+#writeObjectFieldValueSeparator(Lorg/codehaus/jackson/JsonGenerator;)V
+#writeStartArray(Lorg/codehaus/jackson/JsonGenerator;)V
+#writeEndArray(Lorg/codehaus/jackson/JsonGenerator;I)V
+#writeArrayValueSeparator(Lorg/codehaus/jackson/JsonGenerator;)V
+#beforeArrayValues(Lorg/codehaus/jackson/JsonGenerator;)V
+#beforeObjectEntries(Lorg/codehaus/jackson/JsonGenerator;)V

+###org/codehaus/jackson/annotate/JsonAnySetter
@0.9.8

+###org/codehaus/jackson/annotate/JsonAutoDetect
@0.9.8
+#value()[Lorg/codehaus/jackson/annotate/JsonMethod;
@1.5.0
+#getterVisibility()Lorg/codehaus/jackson/annotate/JsonAutoDetect$Visibility;
+#isGetterVisibility()Lorg/codehaus/jackson/annotate/JsonAutoDetect$Visibility;
+#setterVisibility()Lorg/codehaus/jackson/annotate/JsonAutoDetect$Visibility;
+#creatorVisibility()Lorg/codehaus/jackson/annotate/JsonAutoDetect$Visibility;
+#fieldVisibility()Lorg/codehaus/jackson/annotate/JsonAutoDetect$Visibility;

+###org/codehaus/jackson/annotate/JsonClass
@0.9.8
+#value()Ljava/lang/Class;
@1.9.0
-###org/codehaus/jackson/annotate/JsonClass

+###org/codehaus/jackson/annotate/JsonContentClass
@0.9.8
+#value()Ljava/lang/Class;
@1.9.0
-###org/codehaus/jackson/annotate/JsonContentClass

+###org/codehaus/jackson/annotate/JsonCreator
@0.9.8

+###org/codehaus/jackson/annotate/JsonGetter
@0.9.8
+#value()Ljava/lang/String;

+###org/codehaus/jackson/annotate/JsonIgnore
@0.9.8
@0.9.9
+#value()Z

+###org/codehaus/jackson/annotate/JsonKeyClass
@0.9.8
+#value()Ljava/lang/Class;
@1.9.0
-###org/codehaus/jackson/annotate/JsonKeyClass

+###org/codehaus/jackson/annotate/JsonMethod
@0.9.8
+#values()[Lorg/codehaus/jackson/annotate/JsonMethod;
+#valueOf(Ljava/lang/String;)Lorg/codehaus/jackson/annotate/JsonMethod;
@0.9.9
+#getterEnabled()Z
+#setterEnabled()Z
@0.9.9-5
+#creatorEnabled()Z
@1.1.0
+#fieldEnabled()Z
@1.3.0
+#isGetterEnabled()Z

+###org/codehaus/jackson/annotate/JsonSetter
@0.9.8
+#value()Ljava/lang/String;

+###org/codehaus/jackson/annotate/JsonUseDeserializer
@0.9.8
+#value()Ljava/lang/Class;
@1.5.0
-###org/codehaus/jackson/annotate/JsonUseDeserializer

+###org/codehaus/jackson/annotate/JsonUseSerializer
@0.9.8
+#value()Ljava/lang/Class;
@1.5.0
-###org/codehaus/jackson/annotate/JsonUseSerializer

+###org/codehaus/jackson/annotate/JsonValue
@0.9.9-3
+#value()Z

+###org/codehaus/jackson/annotate/JsonWriteNullProperties
@0.9.9-2
+#value()Z

+###org/codehaus/jackson/annotate/NoClass
@0.9.9
@1.5.0
-###org/codehaus/jackson/annotate/NoClass

+###org/codehaus/jackson/impl/ByteSourceBootstrapper
@0.9.6
+#<init>(Lorg/codehaus/jackson/io/IOContext;Ljava/io/InputStream;)V
+#<init>(Lorg/codehaus/jackson/io/IOContext;[BII)V
+#detectEncoding()Lorg/codehaus/jackson/JsonEncoding;
+#constructReader()Ljava/io/Reader;
+#constructParser(ILorg/codehaus/jackson/sym/NameCanonicalizer;Lorg/codehaus/jackson/sym/SymbolTable;)Lorg/codehaus/jackson/JsonParser;
@0.9.8
+#constructParser(ILorg/codehaus/jackson/ObjectCodec;Lorg/codehaus/jackson/sym/NameCanonicalizer;Lorg/codehaus/jackson/sym/SymbolTable;)Lorg/codehaus/jackson/JsonParser;
-#constructParser(ILorg/codehaus/jackson/sym/NameCanonicalizer;Lorg/codehaus/jackson/sym/SymbolTable;)Lorg/codehaus/jackson/JsonParser;
@0.9.9
+#constructParser(ILorg/codehaus/jackson/ObjectCodec;Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;)Lorg/codehaus/jackson/JsonParser;
-#constructParser(ILorg/codehaus/jackson/ObjectCodec;Lorg/codehaus/jackson/sym/NameCanonicalizer;Lorg/codehaus/jackson/sym/SymbolTable;)Lorg/codehaus/jackson/JsonParser;
@1.8.0
+#hasJSONFormat(Lorg/codehaus/jackson/format/InputAccessor;)Lorg/codehaus/jackson/format/MatchStrength;

+###org/codehaus/jackson/impl/DefaultPrettyPrinter$FixedSpaceIndenter
@0.9.6
+#<init>()V
+#writeIndentation(Lorg/codehaus/jackson/JsonGenerator;I)V
+#isInline()Z
@1.6.0
-###org/codehaus/jackson/impl/DefaultPrettyPrinter$FixedSpaceIndenter

+###org/codehaus/jackson/impl/DefaultPrettyPrinter$Lf2SpacesIndenter
@0.9.6
+#<init>()V
+#isInline()Z
+#writeIndentation(Lorg/codehaus/jackson/JsonGenerator;I)V
@1.6.0
-###org/codehaus/jackson/impl/DefaultPrettyPrinter$Lf2SpacesIndenter

+###org/codehaus/jackson/impl/DefaultPrettyPrinter$NopIndenter
@0.9.6
+#<init>()V
+#writeIndentation(Lorg/codehaus/jackson/JsonGenerator;I)V
+#isInline()Z
@1.6.0
-###org/codehaus/jackson/impl/DefaultPrettyPrinter$NopIndenter

+###org/codehaus/jackson/impl/DefaultPrettyPrinter
@0.9.6
+#<init>()V
+#indentArraysWith(Lorg/codehaus/jackson/impl/Indenter;)V
+#indentObjectsWith(Lorg/codehaus/jackson/impl/Indenter;)V
+#spacesInObjectEntries(Z)V
+#writeRootValueSeparator(Lorg/codehaus/jackson/JsonGenerator;)V
+#writeStartObject(Lorg/codehaus/jackson/JsonGenerator;)V
+#beforeObjectEntries(Lorg/codehaus/jackson/JsonGenerator;)V
+#writeObjectFieldValueSeparator(Lorg/codehaus/jackson/JsonGenerator;)V
+#writeObjectEntrySeparator(Lorg/codehaus/jackson/JsonGenerator;)V
+#writeEndObject(Lorg/codehaus/jackson/JsonGenerator;I)V
+#writeStartArray(Lorg/codehaus/jackson/JsonGenerator;)V
+#beforeArrayValues(Lorg/codehaus/jackson/JsonGenerator;)V
+#writeArrayValueSeparator(Lorg/codehaus/jackson/JsonGenerator;)V
+#writeEndArray(Lorg/codehaus/jackson/JsonGenerator;I)V
@1.6.0
-#indentArraysWith(Lorg/codehaus/jackson/impl/Indenter;)V
-#indentObjectsWith(Lorg/codehaus/jackson/impl/Indenter;)V
-#spacesInObjectEntries(Z)V
-#writeRootValueSeparator(Lorg/codehaus/jackson/JsonGenerator;)V
-#writeStartObject(Lorg/codehaus/jackson/JsonGenerator;)V
-#beforeObjectEntries(Lorg/codehaus/jackson/JsonGenerator;)V
-#writeObjectFieldValueSeparator(Lorg/codehaus/jackson/JsonGenerator;)V
-#writeObjectEntrySeparator(Lorg/codehaus/jackson/JsonGenerator;)V
-#writeEndObject(Lorg/codehaus/jackson/JsonGenerator;I)V
-#writeStartArray(Lorg/codehaus/jackson/JsonGenerator;)V
-#beforeArrayValues(Lorg/codehaus/jackson/JsonGenerator;)V
-#writeArrayValueSeparator(Lorg/codehaus/jackson/JsonGenerator;)V
-#writeEndArray(Lorg/codehaus/jackson/JsonGenerator;I)V

+###org/codehaus/jackson/impl/Indenter
@0.9.6
+#writeIndentation(Lorg/codehaus/jackson/JsonGenerator;I)V
+#isInline()Z

+###org/codehaus/jackson/impl/JsonGeneratorBase
@0.9.6
+#enableFeature(Lorg/codehaus/jackson/JsonGenerator$Feature;)V
+#disableFeature(Lorg/codehaus/jackson/JsonGenerator$Feature;)V
+#isFeatureEnabled(Lorg/codehaus/jackson/JsonGenerator$Feature;)Z
+#useDefaultPrettyPrinter()V
+#getOutputContext()Lorg/codehaus/jackson/JsonWriteContext;
+#writeStartArray()V
+#writeEndArray()V
+#writeStartObject()V
+#writeEndObject()V
+#writeFieldName(Ljava/lang/String;)V
+#doWriteFieldName(Ljava/lang/String;Z)V
+#writeNumber(I)V
+#writeNumber(J)V
+#writeNumber(D)V
+#writeNumber(F)V
+#writeNumber(Ljava/math/BigDecimal;)V
+#writeBoolean(Z)V
+#writeNull()V
+#flush()V
+#close()V
+#copyCurrentEvent(Lorg/codehaus/jackson/JsonParser;)V
+#copyCurrentStructure(Lorg/codehaus/jackson/JsonParser;)V
@0.9.7
-#doWriteFieldName(Ljava/lang/String;Z)V
@0.9.8
+#setCodec(Lorg/codehaus/jackson/ObjectCodec;)V
+#getCodec()Lorg/codehaus/jackson/ObjectCodec;
+#getOutputContext()Lorg/codehaus/jackson/impl/JsonWriteContext;
+#writeObject(Ljava/lang/Object;)V
+#getOutputContext()Lorg/codehaus/jackson/JsonStreamContext;
-#getOutputContext()Lorg/codehaus/jackson/JsonWriteContext;
@0.9.9
+#writeTree(Lorg/codehaus/jackson/JsonNode;)V
@0.9.9-3
+#isClosed()Z
@1.2.0
+#enable(Lorg/codehaus/jackson/JsonGenerator$Feature;)Lorg/codehaus/jackson/JsonGenerator;
+#disable(Lorg/codehaus/jackson/JsonGenerator$Feature;)Lorg/codehaus/jackson/JsonGenerator;
+#isEnabled(Lorg/codehaus/jackson/JsonGenerator$Feature;)Z
+#useDefaultPrettyPrinter()Lorg/codehaus/jackson/JsonGenerator;
+#setCodec(Lorg/codehaus/jackson/ObjectCodec;)Lorg/codehaus/jackson/JsonGenerator;
-#enableFeature(Lorg/codehaus/jackson/JsonGenerator$Feature;)V
-#disableFeature(Lorg/codehaus/jackson/JsonGenerator$Feature;)V
-#isFeatureEnabled(Lorg/codehaus/jackson/JsonGenerator$Feature;)Z
-#useDefaultPrettyPrinter()V
-#setCodec(Lorg/codehaus/jackson/ObjectCodec;)V
@1.6.0
+#version()Lorg/codehaus/jackson/Version;
+#writeFieldName(Lorg/codehaus/jackson/io/SerializedString;)V
+#writeRawValue(Ljava/lang/String;)V
+#writeRawValue(Ljava/lang/String;II)V
+#writeRawValue([CII)V
-#writeNumber(I)V
-#writeNumber(J)V
-#writeNumber(D)V
-#writeNumber(F)V
-#writeNumber(Ljava/math/BigDecimal;)V
-#writeBoolean(Z)V
-#writeNull()V
@1.7.0
-#writeFieldName(Ljava/lang/String;)V
-#writeFieldName(Lorg/codehaus/jackson/io/SerializedString;)V

+###org/codehaus/jackson/impl/JsonNumericParserBase
@0.9.6
+#getNumberValue()Ljava/lang/Number;
+#getNumberType()Lorg/codehaus/jackson/JsonParser$NumberType;
+#getByteValue()B
+#getShortValue()S
+#getIntValue()I
+#getLongValue()J
+#getFloatValue()F
+#getDoubleValue()D
+#getDecimalValue()Ljava/math/BigDecimal;
@0.9.9-5
+#getBigIntegerValue()Ljava/math/BigInteger;
@1.3.0
-#getByteValue()B
-#getShortValue()S
@1.9.0
-#getNumberValue()Ljava/lang/Number;
-#getNumberType()Lorg/codehaus/jackson/JsonParser$NumberType;
-#getIntValue()I
-#getLongValue()J
-#getBigIntegerValue()Ljava/math/BigInteger;
-#getFloatValue()F
-#getDoubleValue()D
-#getDecimalValue()Ljava/math/BigDecimal;

+###org/codehaus/jackson/impl/JsonParserBase
@0.9.6
+#enableFeature(Lorg/codehaus/jackson/JsonParser$Feature;)V
+#disableFeature(Lorg/codehaus/jackson/JsonParser$Feature;)V
+#setFeature(Lorg/codehaus/jackson/JsonParser$Feature;Z)V
+#isFeatureEnabled(Lorg/codehaus/jackson/JsonParser$Feature;)Z
+#nextToken()Lorg/codehaus/jackson/JsonToken;
+#skipChildren()V
+#getCurrentToken()Lorg/codehaus/jackson/JsonToken;
+#hasCurrentToken()Z
+#getCurrentName()Ljava/lang/String;
+#close()V
+#getParsingContext()Lorg/codehaus/jackson/JsonReadContext;
+#getTokenLocation()Lorg/codehaus/jackson/JsonLocation;
+#getCurrentLocation()Lorg/codehaus/jackson/JsonLocation;
+#getText()Ljava/lang/String;
+#getTextCharacters()[C
+#getTextLength()I
+#getTextOffset()I
+#getTokenCharacterOffset()J
+#getTokenLineNr()I
+#getTokenColumnNr()I
@0.9.7
+#nextValue()Lorg/codehaus/jackson/JsonToken;
+#getBinaryValue(Lorg/codehaus/jackson/Base64Variant;)[B
+#_getByteArrayBuilder()Lorg/codehaus/jackson/util/ByteArrayBuilder;
@0.9.8
+#getParsingContext()Lorg/codehaus/jackson/impl/JsonReadContext;
+#getParsingContext()Lorg/codehaus/jackson/JsonStreamContext;
-#getParsingContext()Lorg/codehaus/jackson/JsonReadContext;
@0.9.9-3
+#isClosed()Z
-#enableFeature(Lorg/codehaus/jackson/JsonParser$Feature;)V
-#disableFeature(Lorg/codehaus/jackson/JsonParser$Feature;)V
-#setFeature(Lorg/codehaus/jackson/JsonParser$Feature;Z)V
-#isFeatureEnabled(Lorg/codehaus/jackson/JsonParser$Feature;)Z
-#getCurrentToken()Lorg/codehaus/jackson/JsonToken;
-#hasCurrentToken()Z
@1.2.0
+#skipChildren()Lorg/codehaus/jackson/JsonParser;
-#skipChildren()V
@1.3.0
-#nextValue()Lorg/codehaus/jackson/JsonToken;
@1.6.0
+#version()Lorg/codehaus/jackson/Version;
+#hasTextCharacters()Z
-#nextToken()Lorg/codehaus/jackson/JsonToken;
-#skipChildren()Lorg/codehaus/jackson/JsonParser;
@1.7.0
-#getText()Ljava/lang/String;
-#getTextCharacters()[C
-#getTextLength()I
-#getTextOffset()I
-#getBinaryValue(Lorg/codehaus/jackson/Base64Variant;)[B
@1.9.0
+#getNumberValue()Ljava/lang/Number;
+#getNumberType()Lorg/codehaus/jackson/JsonParser$NumberType;
+#getIntValue()I
+#getLongValue()J
+#getBigIntegerValue()Ljava/math/BigInteger;
+#getFloatValue()F
+#getDoubleValue()D
+#getDecimalValue()Ljava/math/BigDecimal;

+###org/codehaus/jackson/impl/JsonReadContext
@0.9.8
+#<init>(Lorg/codehaus/jackson/impl/JsonReadContext;III)V
+#createRootContext(II)Lorg/codehaus/jackson/impl/JsonReadContext;
+#createChildArrayContext(II)Lorg/codehaus/jackson/impl/JsonReadContext;
+#createChildObjectContext(II)Lorg/codehaus/jackson/impl/JsonReadContext;
+#getCurrentName()Ljava/lang/String;
+#getParent()Lorg/codehaus/jackson/impl/JsonReadContext;
+#getStartLocation(Ljava/lang/Object;)Lorg/codehaus/jackson/JsonLocation;
+#expectComma()Z
+#setCurrentName(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#getParent()Lorg/codehaus/jackson/JsonStreamContext;
@1.9.0
+#createRootContext()Lorg/codehaus/jackson/impl/JsonReadContext;

+###org/codehaus/jackson/impl/JsonWriteContext
@0.9.8
+#createRootContext()Lorg/codehaus/jackson/impl/JsonWriteContext;
+#createChildArrayContext()Lorg/codehaus/jackson/impl/JsonWriteContext;
+#createChildObjectContext()Lorg/codehaus/jackson/impl/JsonWriteContext;
+#getParent()Lorg/codehaus/jackson/impl/JsonWriteContext;
+#writeFieldName(Ljava/lang/String;)I
+#writeValue()I
+#toString()Ljava/lang/String;
+#getParent()Lorg/codehaus/jackson/JsonStreamContext;
@1.7.0
+#getCurrentName()Ljava/lang/String;

+###org/codehaus/jackson/impl/ReaderBasedNumericParser
@0.9.6
+#<init>(Lorg/codehaus/jackson/io/IOContext;ILjava/io/Reader;)V
@1.9.0
-###org/codehaus/jackson/impl/ReaderBasedNumericParser

+###org/codehaus/jackson/impl/ReaderBasedParser
@0.9.6
+#<init>(Lorg/codehaus/jackson/io/IOContext;ILjava/io/Reader;Lorg/codehaus/jackson/sym/SymbolTable;)V
+#nextToken()Lorg/codehaus/jackson/JsonToken;
+#close()V
@0.9.8
+#<init>(Lorg/codehaus/jackson/io/IOContext;ILjava/io/Reader;Lorg/codehaus/jackson/ObjectCodec;Lorg/codehaus/jackson/sym/SymbolTable;)V
+#readValueAs(Ljava/lang/Class;)Ljava/lang/Object;
+#readValueAs(Lorg/codehaus/jackson/type/TypeReference;)Ljava/lang/Object;
-#<init>(Lorg/codehaus/jackson/io/IOContext;ILjava/io/Reader;Lorg/codehaus/jackson/sym/SymbolTable;)V
@0.9.9
+#<init>(Lorg/codehaus/jackson/io/IOContext;ILjava/io/Reader;Lorg/codehaus/jackson/ObjectCodec;Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;)V
-#<init>(Lorg/codehaus/jackson/io/IOContext;ILjava/io/Reader;Lorg/codehaus/jackson/ObjectCodec;Lorg/codehaus/jackson/sym/SymbolTable;)V
@0.9.9-4
+#readValueAsTree()Lorg/codehaus/jackson/JsonNode;
@1.3.0
+#getCodec()Lorg/codehaus/jackson/ObjectCodec;
+#setCodec(Lorg/codehaus/jackson/ObjectCodec;)V
-#readValueAs(Ljava/lang/Class;)Ljava/lang/Object;
-#readValueAs(Lorg/codehaus/jackson/type/TypeReference;)Ljava/lang/Object;
-#readValueAsTree()Lorg/codehaus/jackson/JsonNode;
@1.7.0
+#getText()Ljava/lang/String;
+#getTextCharacters()[C
+#getTextLength()I
+#getTextOffset()I
+#getBinaryValue(Lorg/codehaus/jackson/Base64Variant;)[B
@1.9.0
+#releaseBuffered(Ljava/io/Writer;)I
+#getInputSource()Ljava/lang/Object;
+#nextTextValue()Ljava/lang/String;
+#nextIntValue(I)I
+#nextLongValue(J)J
+#nextBooleanValue()Ljava/lang/Boolean;

+###org/codehaus/jackson/impl/ReaderBasedParserBase
@0.9.6
@1.6.0
+#releaseBuffered(Ljava/io/Writer;)I
@1.8.0
+#getInputSource()Ljava/lang/Object;

+###org/codehaus/jackson/impl/StreamBasedParserBase
@0.9.6
@1.6.0
+#releaseBuffered(Ljava/io/OutputStream;)I
@1.8.0
+#getInputSource()Ljava/lang/Object;

+###org/codehaus/jackson/impl/Utf8NumericParser
@0.9.6
+#<init>(Lorg/codehaus/jackson/io/IOContext;ILjava/io/InputStream;[BIIZ)V
@1.7.0
-###org/codehaus/jackson/impl/Utf8NumericParser

+###org/codehaus/jackson/impl/Utf8StreamParser
@0.9.6
+#<init>(Lorg/codehaus/jackson/io/IOContext;ILjava/io/InputStream;Lorg/codehaus/jackson/sym/NameCanonicalizer;[BIIZ)V
+#nextToken()Lorg/codehaus/jackson/JsonToken;
+#close()V
+#growArrayBy([II)[I
@0.9.8
+#<init>(Lorg/codehaus/jackson/io/IOContext;ILjava/io/InputStream;Lorg/codehaus/jackson/ObjectCodec;Lorg/codehaus/jackson/sym/NameCanonicalizer;[BIIZ)V
+#readValueAs(Ljava/lang/Class;)Ljava/lang/Object;
+#readValueAs(Lorg/codehaus/jackson/type/TypeReference;)Ljava/lang/Object;
-#<init>(Lorg/codehaus/jackson/io/IOContext;ILjava/io/InputStream;Lorg/codehaus/jackson/sym/NameCanonicalizer;[BIIZ)V
@0.9.9
+#<init>(Lorg/codehaus/jackson/io/IOContext;ILjava/io/InputStream;Lorg/codehaus/jackson/ObjectCodec;Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;[BIIZ)V
-#<init>(Lorg/codehaus/jackson/io/IOContext;ILjava/io/InputStream;Lorg/codehaus/jackson/ObjectCodec;Lorg/codehaus/jackson/sym/NameCanonicalizer;[BIIZ)V
@0.9.9-4
+#readValueAsTree()Lorg/codehaus/jackson/JsonNode;
@1.3.0
+#getCodec()Lorg/codehaus/jackson/ObjectCodec;
+#setCodec(Lorg/codehaus/jackson/ObjectCodec;)V
-#readValueAs(Ljava/lang/Class;)Ljava/lang/Object;
-#readValueAs(Lorg/codehaus/jackson/type/TypeReference;)Ljava/lang/Object;
-#readValueAsTree()Lorg/codehaus/jackson/JsonNode;
@1.7.0
+#getText()Ljava/lang/String;
+#getTextCharacters()[C
+#getTextLength()I
+#getTextOffset()I
+#getBinaryValue(Lorg/codehaus/jackson/Base64Variant;)[B
@1.9.0
+#releaseBuffered(Ljava/io/OutputStream;)I
+#getInputSource()Ljava/lang/Object;
+#nextFieldName(Lorg/codehaus/jackson/SerializableString;)Z
+#nextTextValue()Ljava/lang/String;
+#nextIntValue(I)I
+#nextLongValue(J)J
+#nextBooleanValue()Ljava/lang/Boolean;

+###org/codehaus/jackson/impl/WriterBasedGenerator
@0.9.6
+#<init>(Lorg/codehaus/jackson/io/IOContext;ILjava/io/Writer;)V
+#doWriteFieldName(Ljava/lang/String;Z)V
+#writeString(Ljava/lang/String;)V
+#writeString([CII)V
+#writeRaw(Ljava/lang/String;)V
+#writeRaw(Ljava/lang/String;II)V
+#writeRaw([CII)V
+#writeRaw(C)V
+#writeBinary(Lorg/codehaus/jackson/Base64Variant;[BII)V
+#writeNumber(I)V
+#writeNumber(J)V
+#writeNumber(D)V
+#writeNumber(F)V
+#writeNumber(Ljava/math/BigDecimal;)V
+#writeNumber(Ljava/lang/String;)V
+#writeBoolean(Z)V
+#writeNull()V
+#flush()V
+#close()V
@0.9.7
-#doWriteFieldName(Ljava/lang/String;Z)V
@0.9.8
+#<init>(Lorg/codehaus/jackson/io/IOContext;ILorg/codehaus/jackson/ObjectCodec;Ljava/io/Writer;)V
+#writeObject(Ljava/lang/Object;)V
-#<init>(Lorg/codehaus/jackson/io/IOContext;ILjava/io/Writer;)V
@0.9.9
+#writeTree(Lorg/codehaus/jackson/JsonNode;)V
@0.9.9-3
+#writeRawValue(Ljava/lang/String;)V
+#writeRawValue(Ljava/lang/String;II)V
+#writeRawValue([CII)V
@0.9.9-5
+#writeNumber(Ljava/math/BigInteger;)V
@1.5.0
-#writeObject(Ljava/lang/Object;)V
-#writeTree(Lorg/codehaus/jackson/JsonNode;)V
@1.6.0
+#_writeFieldName(Lorg/codehaus/jackson/io/SerializedString;Z)V
-#writeRawValue(Ljava/lang/String;)V
-#writeRawValue(Ljava/lang/String;II)V
-#writeRawValue([CII)V
@1.7.0
+#writeFieldName(Ljava/lang/String;)V
+#writeStringField(Ljava/lang/String;Ljava/lang/String;)V
+#writeFieldName(Lorg/codehaus/jackson/io/SerializedString;)V
+#writeFieldName(Lorg/codehaus/jackson/SerializableString;)V
+#writeStartArray()V
+#writeEndArray()V
+#writeStartObject()V
+#writeEndObject()V
+#_writeFieldName(Lorg/codehaus/jackson/SerializableString;Z)V
+#writeString(Lorg/codehaus/jackson/SerializableString;)V
+#writeRawUTF8String([BII)V
+#writeUTF8String([BII)V
-#_writeFieldName(Lorg/codehaus/jackson/io/SerializedString;Z)V
@1.8.0
+#setHighestNonEscapedChar(I)Lorg/codehaus/jackson/JsonGenerator;
+#getHighestEscapedChar()I
+#setCharacterEscapes(Lorg/codehaus/jackson/io/CharacterEscapes;)Lorg/codehaus/jackson/JsonGenerator;
+#getCharacterEscapes()Lorg/codehaus/jackson/io/CharacterEscapes;
+#getOutputTarget()Ljava/lang/Object;

+###org/codehaus/jackson/io/IOContext
@0.9.6
+#<init>(Lorg/codehaus/jackson/util/BufferRecycler;Ljava/lang/Object;Z)V
+#setEncoding(Lorg/codehaus/jackson/JsonEncoding;)V
+#getSourceReference()Ljava/lang/Object;
+#getEncoding()Lorg/codehaus/jackson/JsonEncoding;
+#isResourceManaged()Z
+#constructTextBuffer()Lorg/codehaus/jackson/util/TextBuffer;
+#allocReadIOBuffer()[B
+#allocWriteIOBuffer()[B
+#allocTokenBuffer()[C
+#allocConcatBuffer()[C
+#allocNameCopyBuffer(I)[C
+#releaseReadIOBuffer([B)V
+#releaseWriteIOBuffer([B)V
+#releaseTokenBuffer([C)V
+#releaseConcatBuffer([C)V
+#releaseNameCopyBuffer([C)V
@1.5.0
+#allocWriteEncodingBuffer()[B
+#releaseWriteEncodingBuffer([B)V
-#allocWriteIOBuffer()[B
-#releaseWriteIOBuffer([B)V

+###org/codehaus/jackson/io/MergedStream
@0.9.6
+#<init>(Lorg/codehaus/jackson/io/IOContext;Ljava/io/InputStream;[BII)V
+#available()I
+#close()V
+#mark(I)V
+#markSupported()Z
+#read()I
+#read([B)I
+#read([BII)I
+#reset()V
+#skip(J)J

+###org/codehaus/jackson/io/NumberInput
@0.9.6
+#<init>()V
+#parseInt([CII)I
+#parseLong([CII)J
@1.3.4
+#inLongRange([CIIZ)Z
@1.4.0
-#inLongRange([CIIZ)Z
@1.4.2
+#inLongRange([CIIZ)Z
@1.5.0
+#inLongRange(Ljava/lang/String;Z)Z
@1.6.0
+#parseAsInt(Ljava/lang/String;I)I
+#parseAsLong(Ljava/lang/String;J)J
+#parseAsDouble(Ljava/lang/String;D)D
@1.7.0
+#parseInt(Ljava/lang/String;)I
+#parseLong(Ljava/lang/String;)J
@1.7.4
+#parseDouble(Ljava/lang/String;)D

+###org/codehaus/jackson/io/NumberOutput
@0.9.6
+#<init>()V
+#outputInt(I[CI)I
+#outputLong(J[CI)I
+#toString(I)Ljava/lang/String;
+#toString(J)Ljava/lang/String;
+#toString(D)Ljava/lang/String;
@1.6.0
+#outputInt(I[BI)I
+#outputLong(J[BI)I

+###org/codehaus/jackson/io/UTF32Reader
@0.9.6
+#<init>(Lorg/codehaus/jackson/io/IOContext;Ljava/io/InputStream;[BIIZ)V
+#read([CII)I
+#read()I
+#close()V
@1.1.1
-#read()I
-#close()V
@1.2.1
+#read()I
+#close()V

+###org/codehaus/jackson/io/UTF8Writer
@0.9.6
+#<init>(Lorg/codehaus/jackson/io/IOContext;Ljava/io/OutputStream;)V
+#append(C)Ljava/io/Writer;
+#close()V
+#flush()V
+#write([C)V
+#write([CII)V
+#write(I)V
+#write(Ljava/lang/String;)V
+#write(Ljava/lang/String;II)V
+#append(C)Ljava/lang/Appendable;

+###org/codehaus/jackson/sym/BytesToNameCanonicalizer
@0.9.9
+#createRoot()Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;
+#makeChild()Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;
+#release()V
+#size()I
+#maybeDirty()Z
+#getEmptyName()Lorg/codehaus/jackson/sym/Name;
+#findName(I)Lorg/codehaus/jackson/sym/Name;
+#findName(II)Lorg/codehaus/jackson/sym/Name;
+#findName([II)Lorg/codehaus/jackson/sym/Name;
+#addName(Ljava/lang/String;[II)Lorg/codehaus/jackson/sym/Name;
+#calcHash(I)I
+#calcHash(II)I
+#calcHash([II)I
+#toString()Ljava/lang/String;
+#constructName(ILjava/lang/String;II)Lorg/codehaus/jackson/sym/Name;
+#constructName(ILjava/lang/String;[II)Lorg/codehaus/jackson/sym/Name;
@1.3.0
+#makeChild(Z)Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;
-#makeChild()Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;
-#constructName(ILjava/lang/String;II)Lorg/codehaus/jackson/sym/Name;
-#constructName(ILjava/lang/String;[II)Lorg/codehaus/jackson/sym/Name;
@1.5.0
+#makeChild(ZZ)Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;
-#makeChild(Z)Lorg/codehaus/jackson/sym/BytesToNameCanonicalizer;
-#toString()Ljava/lang/String;
@1.6.0
+#addName(Ljava/lang/String;II)Lorg/codehaus/jackson/sym/Name;
@1.9.9
+#bucketCount()I
+#hashSeed()I
+#collisionCount()I
+#maxCollisionLength()I

+###org/codehaus/jackson/sym/CharsToNameCanonicalizer
@0.9.9
+#createRoot()Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;
+#<init>(I)V
+#makeChild()Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;
+#release()V
+#size()I
+#maybeDirty()Z
+#findSymbol([CIII)Ljava/lang/String;
+#calcHash([CII)I
+#calcHash(Ljava/lang/String;)I
@1.3.0
+#createRoot(Z)Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;
+#<init>(IZ)V
+#makeChild(Z)Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;
-#createRoot()Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;
-#<init>(I)V
-#makeChild()Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;
@1.5.0
+#createRoot()Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;
+#makeChild(ZZ)Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;
-#createRoot(Z)Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;
-#<init>(IZ)V
-#makeChild(Z)Lorg/codehaus/jackson/sym/CharsToNameCanonicalizer;
@1.9.9
+#bucketCount()I
+#hashSeed()I
+#collisionCount()I
+#maxCollisionLength()I
+#_hashToIndex(I)I

+###org/codehaus/jackson/sym/Name
@0.9.6
+#getName()Ljava/lang/String;
+#equals(I)Z
+#equals(II)Z
+#equals([II)Z
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/codehaus/jackson/sym/Name1
@0.9.6
+#equals(I)Z
+#equals(II)Z
+#equals([II)Z

+###org/codehaus/jackson/sym/Name2
@0.9.6
+#equals(I)Z
+#equals(II)Z
+#equals([II)Z

+###org/codehaus/jackson/sym/Name3
@0.9.6
+#equals(I)Z
+#equals(II)Z
+#equals([II)Z

+###org/codehaus/jackson/sym/NameN
@0.9.6
+#equals(I)Z
+#equals(II)Z
+#equals([II)Z

+###org/codehaus/jackson/type/JavaType
@0.9.9
+#narrowBy(Ljava/lang/Class;)Lorg/codehaus/jackson/type/JavaType;
+#narrowContentsBy(Ljava/lang/Class;)Lorg/codehaus/jackson/type/JavaType;
+#getRawClass()Ljava/lang/Class;
+#hasRawClass(Ljava/lang/Class;)Z
+#isFullyTyped()Z
+#isContainerType()Z
+#isAbstract()Z
+#isArrayType()Z
+#isEnumType()Z
+#isInterface()Z
+#isPrimitive()Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.1.0
+#widenBy(Ljava/lang/Class;)Lorg/codehaus/jackson/type/JavaType;
+#findVariableType(Ljava/lang/String;)Lorg/codehaus/jackson/type/JavaType;
@1.3.0
+#setHandler(Ljava/lang/Object;)V
+#isConcrete()Z
+#isThrowable()Z
+#getKeyType()Lorg/codehaus/jackson/type/JavaType;
+#getContentType()Lorg/codehaus/jackson/type/JavaType;
+#getHandler()Ljava/lang/Object;
-#isFullyTyped()Z
@1.5.0
+#forcedNarrowBy(Ljava/lang/Class;)Lorg/codehaus/jackson/type/JavaType;
+#setValueHandler(Ljava/lang/Object;)V
+#setTypeHandler(Ljava/lang/Object;)V
+#isFinal()Z
+#containedTypeCount()I
+#containedType(I)Lorg/codehaus/jackson/type/JavaType;
+#containedTypeName(I)Ljava/lang/String;
+#getValueHandler()Ljava/lang/Object;
+#getTypeHandler()Ljava/lang/Object;
+#toCanonical()Ljava/lang/String;
-#setHandler(Ljava/lang/Object;)V
-#findVariableType(Ljava/lang/String;)Lorg/codehaus/jackson/type/JavaType;
-#getHandler()Ljava/lang/Object;
@1.6.0
+#hasGenericTypes()Z
+#findGenericTypesFor(Ljava/lang/Class;)Ljava/util/List;
+#getGenericSignature()Ljava/lang/String;
+#getGenericSignature(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;
+#getErasedSignature()Ljava/lang/String;
+#getErasedSignature(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;
@1.7.0
+#withTypeHandler(Ljava/lang/Object;)Lorg/codehaus/jackson/type/JavaType;
+#withContentTypeHandler(Ljava/lang/Object;)Lorg/codehaus/jackson/type/JavaType;
*#setTypeHandler(Ljava/lang/Object;)V[deprecated]
-#findGenericTypesFor(Ljava/lang/Class;)Ljava/util/List;
@1.8.0
+#widenContentsBy(Ljava/lang/Class;)Lorg/codehaus/jackson/type/JavaType;
+#isCollectionLikeType()Z
+#isMapLikeType()Z
@1.9.0
+#withValueHandler(Ljava/lang/Object;)Lorg/codehaus/jackson/type/JavaType;
+#withContentValueHandler(Ljava/lang/Object;)Lorg/codehaus/jackson/type/JavaType;
*#setValueHandler(Ljava/lang/Object;)V[deprecated]
-#setTypeHandler(Ljava/lang/Object;)V[deprecated]

+###org/codehaus/jackson/type/TypeReference
@0.9.8
+#getType()Ljava/lang/reflect/Type;
+#compareTo(Lorg/codehaus/jackson/type/TypeReference;)I
+#compareTo(Ljava/lang/Object;)I

+###org/codehaus/jackson/util/BufferRecycler$ByteBufferType
@0.9.6
+#values()[Lorg/codehaus/jackson/util/BufferRecycler$ByteBufferType;
+#valueOf(Ljava/lang/String;)Lorg/codehaus/jackson/util/BufferRecycler$ByteBufferType;

+###org/codehaus/jackson/util/BufferRecycler$CharBufferType
@0.9.6
+#values()[Lorg/codehaus/jackson/util/BufferRecycler$CharBufferType;
+#valueOf(Ljava/lang/String;)Lorg/codehaus/jackson/util/BufferRecycler$CharBufferType;

+###org/codehaus/jackson/util/BufferRecycler
@0.9.6
+#<init>()V
+#allocByteBuffer(Lorg/codehaus/jackson/util/BufferRecycler$ByteBufferType;)[B
+#releaseByteBuffer(Lorg/codehaus/jackson/util/BufferRecycler$ByteBufferType;[B)V
+#allocCharBuffer(Lorg/codehaus/jackson/util/BufferRecycler$CharBufferType;)[C
+#allocCharBuffer(Lorg/codehaus/jackson/util/BufferRecycler$CharBufferType;I)[C
+#releaseCharBuffer(Lorg/codehaus/jackson/util/BufferRecycler$CharBufferType;[C)V

+###org/codehaus/jackson/util/ByteArrayBuilder
@0.9.7
+#<init>()V
+#reset()V
+#append(I)V
+#appendTwoBytes(I)V
+#appendThreeBytes(I)V
+#toByteArray()[B
@1.3.0
+#<init>(I)V
@1.5.0
+#<init>(Lorg/codehaus/jackson/util/BufferRecycler;)V
+#<init>(Lorg/codehaus/jackson/util/BufferRecycler;I)V
+#release()V
+#write([B)V
+#write([BII)V
+#write(I)V
+#close()V
+#flush()V
@1.6.0
+#resetAndGetFirstSegment()[B
+#finishCurrentSegment()[B
+#completeAndCoalesce(I)[B
+#getCurrentSegment()[B
+#setCurrentSegmentLength(I)V
+#getCurrentSegmentLength()I

+###org/codehaus/jackson/util/CharTypes
@0.9.6
+#getInputCodeLatin1()[I
+#getInputCodeUtf8()[I
+#getInputCodeComment()[I
+#getOutputEscapes()[I
+#charToHex(I)I
+#appendQuoted(Ljava/lang/StringBuilder;Ljava/lang/String;)V
@1.2.0
+#getInputCodeLatin1JsNames()[I
+#getInputCodeUtf8JsNames()[I
@1.3.0
+#<init>()V
@1.6.0
+#copyHexChars()[C
+#copyHexBytes()[B
@1.8.0
+#get7BitOutputEscapes()[I
-#getOutputEscapes()[I

+###org/codehaus/jackson/util/TextBuffer
@0.9.6
+#<init>(Lorg/codehaus/jackson/util/BufferRecycler;)V
+#releaseBuffers()V
+#resetWithEmpty()V
+#resetWithShared([CII)V
+#resetWithCopy([CII)V
+#size()I
+#getTextOffset()I
+#getTextBuffer()[C
+#contentsAsString()Ljava/lang/String;
+#contentsAsArray()[C
+#contentsAsDecimal()Ljava/math/BigDecimal;
+#contentsAsDouble()D
+#ensureNotShared()V
+#append([CII)V
+#getCurrentSegment()[C
+#emptyAndGetCurrentSegment()[C
+#getCurrentSegmentSize()I
+#setCurrentLength(I)V
+#finishCurrentSegment()[C
+#expandCurrentSegment()[C
+#toString()Ljava/lang/String;
@1.3.0
+#append(C)V
+#append(Ljava/lang/String;II)V
@1.6.0
+#resetWithString(Ljava/lang/String;)V
@1.9.0
+#hasTextAsCharacters()Z

+###org/codehaus/jackson/annotate/JacksonAnnotation
@1.1.0

+###org/codehaus/jackson/annotate/JsonAutoDetect$Visibility
@1.5.0
+#values()[Lorg/codehaus/jackson/annotate/JsonAutoDetect$Visibility;
+#valueOf(Ljava/lang/String;)Lorg/codehaus/jackson/annotate/JsonAutoDetect$Visibility;
+#isVisible(Ljava/lang/reflect/Member;)Z

+###org/codehaus/jackson/annotate/JsonIgnoreProperties
@1.4.0
+#value()[Ljava/lang/String;
+#ignoreUnknown()Z

+###org/codehaus/jackson/annotate/JsonProperty
@1.1.0
+#value()Ljava/lang/String;

+###org/codehaus/jackson/annotate/JsonPropertyOrder
@1.4.0
+#value()[Ljava/lang/String;
+#alphabetic()Z

+###org/codehaus/jackson/annotate/JsonSubTypes$Type
@1.5.0
+#value()Ljava/lang/Class;
+#name()Ljava/lang/String;

+###org/codehaus/jackson/annotate/JsonSubTypes
@1.5.0
+#value()[Lorg/codehaus/jackson/annotate/JsonSubTypes$Type;

+###org/codehaus/jackson/annotate/JsonTypeInfo$As
@1.5.0
+#values()[Lorg/codehaus/jackson/annotate/JsonTypeInfo$As;
+#valueOf(Ljava/lang/String;)Lorg/codehaus/jackson/annotate/JsonTypeInfo$As;

+###org/codehaus/jackson/annotate/JsonTypeInfo$Id
@1.5.0
+#values()[Lorg/codehaus/jackson/annotate/JsonTypeInfo$Id;
+#valueOf(Ljava/lang/String;)Lorg/codehaus/jackson/annotate/JsonTypeInfo$Id;
+#getDefaultPropertyName()Ljava/lang/String;

+###org/codehaus/jackson/annotate/JsonTypeInfo
@1.5.0
+#use()Lorg/codehaus/jackson/annotate/JsonTypeInfo$Id;
+#include()Lorg/codehaus/jackson/annotate/JsonTypeInfo$As;
+#property()Ljava/lang/String;
@1.9.0
+#defaultImpl()Ljava/lang/Class;

+###org/codehaus/jackson/annotate/JsonTypeName
@1.5.0
+#value()Ljava/lang/String;

+###org/codehaus/jackson/io/SegmentedStringWriter
@1.3.0
+#<init>(Lorg/codehaus/jackson/util/BufferRecycler;)V
+#append(C)Ljava/io/Writer;
+#append(Ljava/lang/CharSequence;)Ljava/io/Writer;
+#append(Ljava/lang/CharSequence;II)Ljava/io/Writer;
+#close()V
+#flush()V
+#write([C)V
+#write([CII)V
+#write(I)V
+#write(Ljava/lang/String;)V
+#write(Ljava/lang/String;II)V
+#getAndClear()Ljava/lang/String;
+#append(C)Ljava/lang/Appendable;
+#append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
+#append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;

+###org/codehaus/jackson/util/InternCache
@0.9.9-5
+#intern(Ljava/lang/String;)Ljava/lang/String;

+###org/codehaus/jackson/util/JsonGeneratorDelegate
@1.4.0
+#<init>(Lorg/codehaus/jackson/JsonGenerator;)V
+#close()V
+#copyCurrentEvent(Lorg/codehaus/jackson/JsonParser;)V
+#copyCurrentStructure(Lorg/codehaus/jackson/JsonParser;)V
+#disable(Lorg/codehaus/jackson/JsonGenerator$Feature;)Lorg/codehaus/jackson/JsonGenerator;
+#enable(Lorg/codehaus/jackson/JsonGenerator$Feature;)Lorg/codehaus/jackson/JsonGenerator;
+#flush()V
+#getCodec()Lorg/codehaus/jackson/ObjectCodec;
+#getOutputContext()Lorg/codehaus/jackson/JsonStreamContext;
+#isClosed()Z
+#isEnabled(Lorg/codehaus/jackson/JsonGenerator$Feature;)Z
+#setCodec(Lorg/codehaus/jackson/ObjectCodec;)Lorg/codehaus/jackson/JsonGenerator;
+#useDefaultPrettyPrinter()Lorg/codehaus/jackson/JsonGenerator;
+#writeBinary(Lorg/codehaus/jackson/Base64Variant;[BII)V
+#writeBoolean(Z)V
+#writeEndArray()V
+#writeEndObject()V
+#writeFieldName(Ljava/lang/String;)V
+#writeNull()V
+#writeNumber(I)V
+#writeNumber(J)V
+#writeNumber(Ljava/math/BigInteger;)V
+#writeNumber(D)V
+#writeNumber(F)V
+#writeNumber(Ljava/math/BigDecimal;)V
+#writeNumber(Ljava/lang/String;)V
+#writeObject(Ljava/lang/Object;)V
+#writeRaw(Ljava/lang/String;)V
+#writeRaw(Ljava/lang/String;II)V
+#writeRaw([CII)V
+#writeRaw(C)V
+#writeRawValue(Ljava/lang/String;)V
+#writeRawValue(Ljava/lang/String;II)V
+#writeRawValue([CII)V
+#writeStartArray()V
+#writeStartObject()V
+#writeString(Ljava/lang/String;)V
+#writeString([CII)V
+#writeTree(Lorg/codehaus/jackson/JsonNode;)V
@1.6.0
+#writeFieldName(Lorg/codehaus/jackson/io/SerializedString;)V
@1.7.0
+#writeFieldName(Lorg/codehaus/jackson/SerializableString;)V
+#writeString(Lorg/codehaus/jackson/SerializableString;)V
+#writeRawUTF8String([BII)V
+#writeUTF8String([BII)V
@1.8.0
+#setSchema(Lorg/codehaus/jackson/FormatSchema;)V
+#canUseSchema(Lorg/codehaus/jackson/FormatSchema;)Z
+#version()Lorg/codehaus/jackson/Version;
+#getOutputTarget()Ljava/lang/Object;

+###org/codehaus/jackson/util/JsonParserDelegate
@1.4.0
+#<init>(Lorg/codehaus/jackson/JsonParser;)V
+#setCodec(Lorg/codehaus/jackson/ObjectCodec;)V
+#getCodec()Lorg/codehaus/jackson/ObjectCodec;
+#enable(Lorg/codehaus/jackson/JsonParser$Feature;)Lorg/codehaus/jackson/JsonParser;
+#disable(Lorg/codehaus/jackson/JsonParser$Feature;)Lorg/codehaus/jackson/JsonParser;
+#isEnabled(Lorg/codehaus/jackson/JsonParser$Feature;)Z
+#close()V
+#isClosed()Z
+#getCurrentToken()Lorg/codehaus/jackson/JsonToken;
+#hasCurrentToken()Z
+#clearCurrentToken()V
+#getCurrentName()Ljava/lang/String;
+#getCurrentLocation()Lorg/codehaus/jackson/JsonLocation;
+#getLastClearedToken()Lorg/codehaus/jackson/JsonToken;
+#getParsingContext()Lorg/codehaus/jackson/JsonStreamContext;
+#getText()Ljava/lang/String;
+#getTextCharacters()[C
+#getTextLength()I
+#getTextOffset()I
+#getBigIntegerValue()Ljava/math/BigInteger;
+#getByteValue()B
+#getShortValue()S
+#getDecimalValue()Ljava/math/BigDecimal;
+#getDoubleValue()D
+#getFloatValue()F
+#getIntValue()I
+#getLongValue()J
+#getNumberType()Lorg/codehaus/jackson/JsonParser$NumberType;
+#getNumberValue()Ljava/lang/Number;
+#getBinaryValue(Lorg/codehaus/jackson/Base64Variant;)[B
+#getTokenLocation()Lorg/codehaus/jackson/JsonLocation;
+#nextToken()Lorg/codehaus/jackson/JsonToken;
+#skipChildren()Lorg/codehaus/jackson/JsonParser;
@1.8.0
+#setSchema(Lorg/codehaus/jackson/FormatSchema;)V
+#canUseSchema(Lorg/codehaus/jackson/FormatSchema;)Z
+#version()Lorg/codehaus/jackson/Version;
+#getInputSource()Ljava/lang/Object;
@1.8.8
+#getBooleanValue()Z
+#getEmbeddedObject()Ljava/lang/Object;
@1.9.0
-#getBooleanValue()Z
-#getEmbeddedObject()Ljava/lang/Object;
@1.9.4
+#getBooleanValue()Z
+#getEmbeddedObject()Ljava/lang/Object;

+###org/codehaus/jackson/util/JsonParserSequence
@1.5.0
+#createFlattened(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/JsonParser;)Lorg/codehaus/jackson/util/JsonParserSequence;
+#close()V
+#nextToken()Lorg/codehaus/jackson/JsonToken;
+#containedParsersCount()I

+###org/codehaus/jackson/util/TokenBuffer$Parser
@1.5.0
+#<init>(Lorg/codehaus/jackson/util/TokenBuffer$Segment;Lorg/codehaus/jackson/ObjectCodec;)V
+#setLocation(Lorg/codehaus/jackson/JsonLocation;)V
+#getCodec()Lorg/codehaus/jackson/ObjectCodec;
+#setCodec(Lorg/codehaus/jackson/ObjectCodec;)V
+#close()V
+#nextToken()Lorg/codehaus/jackson/JsonToken;
+#skipChildren()Lorg/codehaus/jackson/JsonParser;
+#isClosed()Z
+#getParsingContext()Lorg/codehaus/jackson/JsonStreamContext;
+#getTokenLocation()Lorg/codehaus/jackson/JsonLocation;
+#getCurrentLocation()Lorg/codehaus/jackson/JsonLocation;
+#getCurrentName()Ljava/lang/String;
+#getText()Ljava/lang/String;
+#getTextCharacters()[C
+#getTextLength()I
+#getTextOffset()I
+#getBigIntegerValue()Ljava/math/BigInteger;
+#getDecimalValue()Ljava/math/BigDecimal;
+#getDoubleValue()D
+#getFloatValue()F
+#getIntValue()I
+#getLongValue()J
+#getNumberType()Lorg/codehaus/jackson/JsonParser$NumberType;
+#getNumberValue()Ljava/lang/Number;
+#getEmbeddedObject()Ljava/lang/Object;
+#getBinaryValue(Lorg/codehaus/jackson/Base64Variant;)[B
@1.6.0
+#peekNextToken()Lorg/codehaus/jackson/JsonToken;
+#hasTextCharacters()Z
-#skipChildren()Lorg/codehaus/jackson/JsonParser;

+###org/codehaus/jackson/util/TokenBuffer$Segment
@1.5.0
+#<init>()V
+#type(I)Lorg/codehaus/jackson/JsonToken;
+#get(I)Ljava/lang/Object;
+#next()Lorg/codehaus/jackson/util/TokenBuffer$Segment;
+#append(ILorg/codehaus/jackson/JsonToken;)Lorg/codehaus/jackson/util/TokenBuffer$Segment;
+#append(ILorg/codehaus/jackson/JsonToken;Ljava/lang/Object;)Lorg/codehaus/jackson/util/TokenBuffer$Segment;
+#set(ILorg/codehaus/jackson/JsonToken;)V
+#set(ILorg/codehaus/jackson/JsonToken;Ljava/lang/Object;)V

+###org/codehaus/jackson/util/TokenBuffer
@1.5.0
+#<init>(Lorg/codehaus/jackson/ObjectCodec;)V
+#asParser()Lorg/codehaus/jackson/JsonParser;
+#asParser(Lorg/codehaus/jackson/ObjectCodec;)Lorg/codehaus/jackson/JsonParser;
+#asParser(Lorg/codehaus/jackson/JsonParser;)Lorg/codehaus/jackson/JsonParser;
+#serialize(Lorg/codehaus/jackson/JsonGenerator;)V
+#toString()Ljava/lang/String;
+#enable(Lorg/codehaus/jackson/JsonGenerator$Feature;)Lorg/codehaus/jackson/JsonGenerator;
+#disable(Lorg/codehaus/jackson/JsonGenerator$Feature;)Lorg/codehaus/jackson/JsonGenerator;
+#isEnabled(Lorg/codehaus/jackson/JsonGenerator$Feature;)Z
+#useDefaultPrettyPrinter()Lorg/codehaus/jackson/JsonGenerator;
+#setCodec(Lorg/codehaus/jackson/ObjectCodec;)Lorg/codehaus/jackson/JsonGenerator;
+#getCodec()Lorg/codehaus/jackson/ObjectCodec;
+#getOutputContext()Lorg/codehaus/jackson/impl/JsonWriteContext;
+#flush()V
+#close()V
+#isClosed()Z
+#writeStartArray()V
+#writeEndArray()V
+#writeStartObject()V
+#writeEndObject()V
+#writeFieldName(Ljava/lang/String;)V
+#writeString(Ljava/lang/String;)V
+#writeString([CII)V
+#writeRaw(Ljava/lang/String;)V
+#writeRaw(Ljava/lang/String;II)V
+#writeRaw([CII)V
+#writeRaw(C)V
+#writeRawValue(Ljava/lang/String;)V
+#writeRawValue(Ljava/lang/String;II)V
+#writeRawValue([CII)V
+#writeNumber(I)V
+#writeNumber(J)V
+#writeNumber(D)V
+#writeNumber(F)V
+#writeNumber(Ljava/math/BigDecimal;)V
+#writeNumber(Ljava/math/BigInteger;)V
+#writeNumber(Ljava/lang/String;)V
+#writeBoolean(Z)V
+#writeNull()V
+#writeObject(Ljava/lang/Object;)V
+#writeTree(Lorg/codehaus/jackson/JsonNode;)V
+#writeBinary(Lorg/codehaus/jackson/Base64Variant;[BII)V
+#copyCurrentEvent(Lorg/codehaus/jackson/JsonParser;)V
+#copyCurrentStructure(Lorg/codehaus/jackson/JsonParser;)V
+#getOutputContext()Lorg/codehaus/jackson/JsonStreamContext;
@1.6.0
+#writeFieldName(Lorg/codehaus/jackson/io/SerializedString;)V
@1.7.0
+#writeFieldName(Lorg/codehaus/jackson/SerializableString;)V
+#writeString(Lorg/codehaus/jackson/SerializableString;)V
+#writeRawUTF8String([BII)V
+#writeUTF8String([BII)V

+###org/codehaus/jackson/FormatSchema
@1.8.0
+#getSchemaType()Ljava/lang/String;

+###org/codehaus/jackson/SerializableString
@1.7.0
+#getValue()Ljava/lang/String;
+#charLength()I
+#asQuotedChars()[C
+#asUnquotedUTF8()[B
+#asQuotedUTF8()[B

+###org/codehaus/jackson/Version
@1.6.0
+#<init>(IIILjava/lang/String;)V
+#unknownVersion()Lorg/codehaus/jackson/Version;
+#isUknownVersion()Z
+#isSnapshot()Z
+#getMajorVersion()I
+#getMinorVersion()I
+#getPatchLevel()I
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Lorg/codehaus/jackson/Version;)I
+#compareTo(Ljava/lang/Object;)I

+###org/codehaus/jackson/Versioned
@1.6.0
+#version()Lorg/codehaus/jackson/Version;

+###org/codehaus/jackson/annotate/JsonAnyGetter
@1.6.0

+###org/codehaus/jackson/annotate/JsonBackReference
@1.6.0
+#value()Ljava/lang/String;

+###org/codehaus/jackson/annotate/JsonIgnoreType
@1.7.0
+#value()Z

+###org/codehaus/jackson/annotate/JsonManagedReference
@1.6.0
+#value()Ljava/lang/String;

+###org/codehaus/jackson/annotate/JsonRawValue
@1.7.0
+#value()Z

+###org/codehaus/jackson/annotate/JsonTypeInfo$None
@1.9.0
+#<init>()V

+###org/codehaus/jackson/annotate/JsonUnwrapped
@1.9.0
+#enabled()Z

+###org/codehaus/jackson/format/DataFormatDetector
@1.8.0
+#<init>([Lorg/codehaus/jackson/JsonFactory;)V
+#<init>(Ljava/util/Collection;)V
+#withOptimalMatch(Lorg/codehaus/jackson/format/MatchStrength;)Lorg/codehaus/jackson/format/DataFormatDetector;
+#withMinimalMatch(Lorg/codehaus/jackson/format/MatchStrength;)Lorg/codehaus/jackson/format/DataFormatDetector;
+#withMaxInputLookahead(I)Lorg/codehaus/jackson/format/DataFormatDetector;
+#findFormat(Ljava/io/InputStream;)Lorg/codehaus/jackson/format/DataFormatMatcher;
+#findFormat([B)Lorg/codehaus/jackson/format/DataFormatMatcher;

+###org/codehaus/jackson/format/DataFormatMatcher
@1.8.0
+#hasMatch()Z
+#getMatchStrength()Lorg/codehaus/jackson/format/MatchStrength;
+#getMatch()Lorg/codehaus/jackson/JsonFactory;
+#getMatchedFormatName()Ljava/lang/String;
+#createParserWithMatch()Lorg/codehaus/jackson/JsonParser;
+#getDataStream()Ljava/io/InputStream;

+###org/codehaus/jackson/format/InputAccessor$Std
@1.8.0
+#<init>(Ljava/io/InputStream;[B)V
+#<init>([B)V
+#hasMoreBytes()Z
+#nextByte()B
+#reset()V
+#createMatcher(Lorg/codehaus/jackson/JsonFactory;Lorg/codehaus/jackson/format/MatchStrength;)Lorg/codehaus/jackson/format/DataFormatMatcher;

+###org/codehaus/jackson/format/InputAccessor
@1.8.0
+#hasMoreBytes()Z
+#nextByte()B
+#reset()V

+###org/codehaus/jackson/format/MatchStrength
@1.8.0
+#values()[Lorg/codehaus/jackson/format/MatchStrength;
+#valueOf(Ljava/lang/String;)Lorg/codehaus/jackson/format/MatchStrength;

+###org/codehaus/jackson/impl/JsonParserMinimalBase
@1.6.0
+#nextToken()Lorg/codehaus/jackson/JsonToken;
+#skipChildren()Lorg/codehaus/jackson/JsonParser;
+#getCurrentName()Ljava/lang/String;
+#close()V
+#isClosed()Z
+#getParsingContext()Lorg/codehaus/jackson/JsonStreamContext;
+#getText()Ljava/lang/String;
+#getTextCharacters()[C
+#hasTextCharacters()Z
+#getTextLength()I
+#getTextOffset()I
+#getBinaryValue(Lorg/codehaus/jackson/Base64Variant;)[B
+#getValueAsInt(I)I
+#getValueAsLong(J)J
+#getValueAsDouble(D)D
@1.7.0
+#getValueAsBoolean(Z)Z

+###org/codehaus/jackson/impl/Utf8Generator
@1.6.0
+#<init>(Lorg/codehaus/jackson/io/IOContext;ILorg/codehaus/jackson/ObjectCodec;Ljava/io/OutputStream;)V
+#writeString(Ljava/lang/String;)V
+#writeString([CII)V
+#writeRaw(Ljava/lang/String;)V
+#writeRaw(Ljava/lang/String;II)V
+#writeRaw([CII)V
+#writeRaw(C)V
+#writeBinary(Lorg/codehaus/jackson/Base64Variant;[BII)V
+#writeNumber(I)V
+#writeNumber(J)V
+#writeNumber(Ljava/math/BigInteger;)V
+#writeNumber(D)V
+#writeNumber(F)V
+#writeNumber(Ljava/math/BigDecimal;)V
+#writeNumber(Ljava/lang/String;)V
+#writeBoolean(Z)V
+#writeNull()V
+#flush()V
+#close()V
@1.7.0
+#writeStringField(Ljava/lang/String;Ljava/lang/String;)V
+#writeFieldName(Ljava/lang/String;)V
+#writeFieldName(Lorg/codehaus/jackson/io/SerializedString;)V
+#writeFieldName(Lorg/codehaus/jackson/SerializableString;)V
+#writeStartArray()V
+#writeEndArray()V
+#writeStartObject()V
+#writeEndObject()V
+#writeString(Lorg/codehaus/jackson/SerializableString;)V
+#writeRawUTF8String([BII)V
+#writeUTF8String([BII)V
@1.7.2
+#<init>(Lorg/codehaus/jackson/io/IOContext;ILorg/codehaus/jackson/ObjectCodec;Ljava/io/OutputStream;[BIZ)V
@1.8.0
+#setHighestNonEscapedChar(I)Lorg/codehaus/jackson/JsonGenerator;
+#getHighestEscapedChar()I
+#setCharacterEscapes(Lorg/codehaus/jackson/io/CharacterEscapes;)Lorg/codehaus/jackson/JsonGenerator;
+#getCharacterEscapes()Lorg/codehaus/jackson/io/CharacterEscapes;
+#getOutputTarget()Ljava/lang/Object;

+###org/codehaus/jackson/io/CharacterEscapes
@1.8.0
+#<init>()V
+#getEscapeCodesForAscii()[I
+#getEscapeSequence(I)Lorg/codehaus/jackson/SerializableString;
+#standardAsciiEscapesForJSON()[I

+###org/codehaus/jackson/io/InputDecorator
@1.8.0
+#<init>()V
+#decorate(Lorg/codehaus/jackson/io/IOContext;Ljava/io/InputStream;)Ljava/io/InputStream;
+#decorate(Lorg/codehaus/jackson/io/IOContext;[BII)Ljava/io/InputStream;
+#decorate(Lorg/codehaus/jackson/io/IOContext;Ljava/io/Reader;)Ljava/io/Reader;

+###org/codehaus/jackson/io/JsonStringEncoder
@1.6.0
+#<init>()V
+#getInstance()Lorg/codehaus/jackson/io/JsonStringEncoder;
+#quoteAsString(Ljava/lang/String;)[C
+#quoteAsUTF8(Ljava/lang/String;)[B
+#encodeAsUTF8(Ljava/lang/String;)[B

+###org/codehaus/jackson/io/OutputDecorator
@1.8.0
+#<init>()V
+#decorate(Lorg/codehaus/jackson/io/IOContext;Ljava/io/OutputStream;)Ljava/io/OutputStream;
+#decorate(Lorg/codehaus/jackson/io/IOContext;Ljava/io/Writer;)Ljava/io/Writer;

+###org/codehaus/jackson/io/SerializedString
@1.6.0
+#<init>(Ljava/lang/String;)V
+#getValue()Ljava/lang/String;
+#charLength()I
+#asQuotedChars()[C
+#asUnquotedUTF8()[B
+#asQuotedUTF8()[B
@1.7.0
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/codehaus/jackson/util/DefaultPrettyPrinter$FixedSpaceIndenter
@1.6.0
+#<init>()V
+#writeIndentation(Lorg/codehaus/jackson/JsonGenerator;I)V
+#isInline()Z

+###org/codehaus/jackson/util/DefaultPrettyPrinter$Lf2SpacesIndenter
@1.6.0
+#<init>()V
+#isInline()Z
+#writeIndentation(Lorg/codehaus/jackson/JsonGenerator;I)V

+###org/codehaus/jackson/util/DefaultPrettyPrinter$NopIndenter
@1.6.0
+#<init>()V
+#writeIndentation(Lorg/codehaus/jackson/JsonGenerator;I)V
+#isInline()Z

+###org/codehaus/jackson/util/DefaultPrettyPrinter
@1.6.0
+#<init>()V
+#indentArraysWith(Lorg/codehaus/jackson/impl/Indenter;)V
+#indentObjectsWith(Lorg/codehaus/jackson/impl/Indenter;)V
+#spacesInObjectEntries(Z)V
+#writeRootValueSeparator(Lorg/codehaus/jackson/JsonGenerator;)V
+#writeStartObject(Lorg/codehaus/jackson/JsonGenerator;)V
+#beforeObjectEntries(Lorg/codehaus/jackson/JsonGenerator;)V
+#writeObjectFieldValueSeparator(Lorg/codehaus/jackson/JsonGenerator;)V
+#writeObjectEntrySeparator(Lorg/codehaus/jackson/JsonGenerator;)V
+#writeEndObject(Lorg/codehaus/jackson/JsonGenerator;I)V
+#writeStartArray(Lorg/codehaus/jackson/JsonGenerator;)V
+#beforeArrayValues(Lorg/codehaus/jackson/JsonGenerator;)V
+#writeArrayValueSeparator(Lorg/codehaus/jackson/JsonGenerator;)V
+#writeEndArray(Lorg/codehaus/jackson/JsonGenerator;I)V

+###org/codehaus/jackson/util/MinimalPrettyPrinter
@1.6.0
+#<init>()V
+#setRootValueSeparator(Ljava/lang/String;)V
+#writeRootValueSeparator(Lorg/codehaus/jackson/JsonGenerator;)V
+#writeStartObject(Lorg/codehaus/jackson/JsonGenerator;)V
+#beforeObjectEntries(Lorg/codehaus/jackson/JsonGenerator;)V
+#writeObjectFieldValueSeparator(Lorg/codehaus/jackson/JsonGenerator;)V
+#writeObjectEntrySeparator(Lorg/codehaus/jackson/JsonGenerator;)V
+#writeEndObject(Lorg/codehaus/jackson/JsonGenerator;I)V
+#writeStartArray(Lorg/codehaus/jackson/JsonGenerator;)V
+#beforeArrayValues(Lorg/codehaus/jackson/JsonGenerator;)V
+#writeArrayValueSeparator(Lorg/codehaus/jackson/JsonGenerator;)V
+#writeEndArray(Lorg/codehaus/jackson/JsonGenerator;I)V
@1.9.0
+#<init>(Ljava/lang/String;)V

+###org/codehaus/jackson/util/VersionUtil
@1.6.0
+#<init>()V
+#versionFor(Ljava/lang/Class;)Lorg/codehaus/jackson/Version;
+#parseVersion(Ljava/lang/String;)Lorg/codehaus/jackson/Version;

+###org/codehaus/jackson/sym/NameCanonicalizer
@0.9.6
+#createRoot()Lorg/codehaus/jackson/sym/NameCanonicalizer;
+#makeChild()Lorg/codehaus/jackson/sym/NameCanonicalizer;
+#release()V
+#size()I
+#maybeDirty()Z
+#getEmptyName()Lorg/codehaus/jackson/sym/Name;
+#findName(I)Lorg/codehaus/jackson/sym/Name;
+#findName(II)Lorg/codehaus/jackson/sym/Name;
+#findName([II)Lorg/codehaus/jackson/sym/Name;
+#addName(Ljava/lang/String;[II)Lorg/codehaus/jackson/sym/Name;
+#calcHash(I)I
+#calcHash(II)I
+#calcHash([II)I
+#toString()Ljava/lang/String;
+#constructName(ILjava/lang/String;II)Lorg/codehaus/jackson/sym/Name;
+#constructName(ILjava/lang/String;[II)Lorg/codehaus/jackson/sym/Name;
@0.9.9
-###org/codehaus/jackson/sym/NameCanonicalizer

+###org/codehaus/jackson/sym/SymbolTable
@0.9.6
+#createRoot()Lorg/codehaus/jackson/sym/SymbolTable;
+#<init>(I)V
+#makeChild()Lorg/codehaus/jackson/sym/SymbolTable;
+#release()V
+#size()I
+#maybeDirty()Z
+#findSymbol([CIII)Ljava/lang/String;
+#calcHash([CII)I
+#calcHash(Ljava/lang/String;)I
@0.9.9
-###org/codehaus/jackson/sym/SymbolTable

+###org/codehaus/jackson/JsonContext
@0.9.6
+#<init>(I)V
+#getParent()Lorg/codehaus/jackson/JsonContext;
+#inArray()Z
+#inRoot()Z
+#inObject()Z
+#getTypeDesc()Ljava/lang/String;
+#getEntryCount()I
+#getCurrentIndex()I
+#getCurrentName()Ljava/lang/String;
@0.9.8
-###org/codehaus/jackson/JsonContext

+###org/codehaus/jackson/JsonReadContext
@0.9.6
+#<init>(III)V
+#getParent()Lorg/codehaus/jackson/JsonReadContext;
+#getStartLocation(Ljava/lang/Object;)Lorg/codehaus/jackson/JsonLocation;
+#getCurrentName()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#getParent()Lorg/codehaus/jackson/JsonContext;
@0.9.8
-###org/codehaus/jackson/JsonReadContext

+###org/codehaus/jackson/JsonWriteContext
@0.9.6
+#<init>(I)V
+#getParent()Lorg/codehaus/jackson/JsonWriteContext;
+#getParent()Lorg/codehaus/jackson/JsonContext;
@0.9.8
-###org/codehaus/jackson/JsonWriteContext

+###org/codehaus/jackson/impl/JsonReadContextImpl
@0.9.6
+#<init>(Lorg/codehaus/jackson/impl/JsonReadContextImpl;III)V
+#createRootContext(II)Lorg/codehaus/jackson/impl/JsonReadContextImpl;
+#createChildArrayContext(II)Lorg/codehaus/jackson/impl/JsonReadContextImpl;
+#createChildObjectContext(II)Lorg/codehaus/jackson/impl/JsonReadContextImpl;
+#getParent()Lorg/codehaus/jackson/impl/JsonReadContextImpl;
+#getParentImpl()Lorg/codehaus/jackson/impl/JsonReadContextImpl;
+#expectComma()Z
+#setCurrentName(Ljava/lang/String;)V
+#getParent()Lorg/codehaus/jackson/JsonReadContext;
+#getParent()Lorg/codehaus/jackson/JsonContext;
@0.9.8
-###org/codehaus/jackson/impl/JsonReadContextImpl

+###org/codehaus/jackson/impl/JsonWriteContextImpl
@0.9.6
+#createRootContext()Lorg/codehaus/jackson/impl/JsonWriteContextImpl;
+#createChildArrayContext()Lorg/codehaus/jackson/impl/JsonWriteContextImpl;
+#createChildObjectContext()Lorg/codehaus/jackson/impl/JsonWriteContextImpl;
+#getParent()Lorg/codehaus/jackson/impl/JsonWriteContextImpl;
+#getParentImpl()Lorg/codehaus/jackson/impl/JsonWriteContextImpl;
+#writeFieldName(Ljava/lang/String;)I
+#writeValue()I
+#toString()Ljava/lang/String;
+#getParent()Lorg/codehaus/jackson/JsonWriteContext;
+#getParent()Lorg/codehaus/jackson/JsonContext;
@0.9.8
-###org/codehaus/jackson/impl/JsonWriteContextImpl

+###org/codehaus/jackson/map/AnnotationIntrospector$Pair
@1.1.0
+#<init>(Lorg/codehaus/jackson/map/AnnotationIntrospector;Lorg/codehaus/jackson/map/AnnotationIntrospector;)V
+#isHandled(Ljava/lang/annotation/Annotation;)Z
+#findCachability(Lorg/codehaus/jackson/map/introspect/AnnotatedClass;)Ljava/lang/Boolean;
+#findFieldAutoDetection(Lorg/codehaus/jackson/map/introspect/AnnotatedClass;)Ljava/lang/Boolean;
+#isIgnorableMethod(Lorg/codehaus/jackson/map/introspect/AnnotatedMethod;)Z
+#isIgnorableField(Lorg/codehaus/jackson/map/introspect/AnnotatedField;)Z
+#findSerializer(Lorg/codehaus/jackson/map/introspect/Annotated;)Ljava/lang/Object;
+#findSerializationInclusion(Lorg/codehaus/jackson/map/introspect/Annotated;Lorg/codehaus/jackson/map/annotate/JsonSerialize$Inclusion;)Lorg/codehaus/jackson/map/annotate/JsonSerialize$Inclusion;
+#findSerializationType(Lorg/codehaus/jackson/map/introspect/Annotated;)Ljava/lang/Class;
+#findGetterAutoDetection(Lorg/codehaus/jackson/map/introspect/AnnotatedClass;)Ljava/lang/Boolean;
+#findGettablePropertyName(Lorg/codehaus/jackson/map/introspect/AnnotatedMethod;)Ljava/lang/String;
+#hasAsValueAnnotation(Lorg/codehaus/jackson/map/introspect/AnnotatedMethod;)Z
+#findEnumValue(Ljava/lang/Enum;)Ljava/lang/String;
+#findSerializablePropertyName(Lorg/codehaus/jackson/map/introspect/AnnotatedField;)Ljava/lang/String;
+#findDeserializer(Lorg/codehaus/jackson/map/introspect/Annotated;)Ljava/lang/Object;
+#findDeserializationType(Lorg/codehaus/jackson/map/introspect/Annotated;)Ljava/lang/Class;
+#findDeserializationKeyType(Lorg/codehaus/jackson/map/introspect/Annotated;)Ljava/lang/Class;
+#findDeserializationContentType(Lorg/codehaus/jackson/map/introspect/Annotated;)Ljava/lang/Class;
+#findCreatorAutoDetection(Lorg/codehaus/jackson/map/introspect/AnnotatedClass;)Ljava/lang/Boolean;
+#findSetterAutoDetection(Lorg/codehaus/jackson/map/introspect/AnnotatedClass;)Ljava/lang/Boolean;
+#findSettablePropertyName(Lorg/codehaus/jackson/map/introspect/AnnotatedMethod;)Ljava/lang/String;
+#hasAnySetterAnnotation(Lorg/codehaus/jackson/map/introspect/AnnotatedMethod;)Z
+#hasCreatorAnnotation(Lorg/codehaus/jackson/map/introspect/AnnotatedMethod;)Z
+#findDeserializablePropertyName(Lorg/codehaus/jackson/map/introspect/AnnotatedField;)Ljava/lang/String;
@1.1.1
-###org/codehaus/jackson/map/AnnotationIntrospector$Pair

+###org/codehaus/jackson/map/AnnotationIntrospector
@1.1.0
+#<init>()V
+#isHandled(Ljava/lang/annotation/Annotation;)Z
+#findCachability(Lorg/codehaus/jackson/map/introspect/AnnotatedClass;)Ljava/lang/Boolean;
+#findFieldAutoDetection(Lorg/codehaus/jackson/map/introspect/AnnotatedClass;)Ljava/lang/Boolean;
+#isIgnorableMethod(Lorg/codehaus/jackson/map/introspect/AnnotatedMethod;)Z
+#isIgnorableField(Lorg/codehaus/jackson/map/introspect/AnnotatedField;)Z
+#findSerializer(Lorg/codehaus/jackson/map/introspect/Annotated;)Ljava/lang/Object;
+#findSerializationInclusion(Lorg/codehaus/jackson/map/introspect/Annotated;Lorg/codehaus/jackson/map/annotate/JsonSerialize$Inclusion;)Lorg/codehaus/jackson/map/annotate/JsonSerialize$Inclusion;
+#findSerializationType(Lorg/codehaus/jackson/map/introspect/Annotated;)Ljava/lang/Class;
+#findGetterAutoDetection(Lorg/codehaus/jackson/map/introspect/AnnotatedClass;)Ljava/lang/Boolean;
+#findGettablePropertyName(Lorg/codehaus/jackson/map/introspect/AnnotatedMethod;)Ljava/lang/String;
+#hasAsValueAnnotation(Lorg/codehaus/jackson/map/introspect/AnnotatedMethod;)Z
+#findEnumValue(Ljava/lang/Enum;)Ljava/lang/String;
+#findSerializablePropertyName(Lorg/codehaus/jackson/map/introspect/AnnotatedField;)Ljava/lang/String;
+#findDeserializer(Lorg/codehaus/jackson/map/introspect/Annotated;)Ljava/lang/Object;
+#findDeserializationType(Lorg/codehaus/jackson/map/introspect/Annotated;)Ljava/lang/Class;
+#findDeserializationKeyType(Lorg/codehaus/jackson/map/introspect/Annotated;)Ljava/lang/Class;
+#findDeserializationContentType(Lorg/codehaus/jackson/map/introspect/Annotated;)Ljava/lang/Class;
+#findCreatorAutoDetection(Lorg/codehaus/jackson/map/introspect/AnnotatedClass;)Ljava/lang/Boolean;
+#findSetterAutoDetection(Lorg/codehaus/jackson/map/introspect/AnnotatedClass;)Ljava/lang/Boolean;
+#findSettablePropertyName(Lorg/codehaus/jackson/map/introspect/AnnotatedMethod;)Ljava/lang/String;
+#hasAnySetterAnnotation(Lorg/codehaus/jackson/map/introspect/AnnotatedMethod;)Z
+#hasCreatorAnnotation(Lorg/codehaus/jackson/map/introspect/AnnotatedMethod;)Z
+#findDeserializablePropertyName(Lorg/codehaus/jackson/map/introspect/AnnotatedField;)Ljava/lang/String;
@1.1.1
-###org/codehaus/jackson/map/AnnotationIntrospector

+###org/codehaus/jackson/map/BeanDescription
@1.1.0
+#getType()Lorg/codehaus/jackson/type/JavaType;
+#getBeanClass()Ljava/lang/Class;
+#findGetters(ZLjava/util/Collection;)Ljava/util/LinkedHashMap;
+#findSetters(Z)Ljava/util/LinkedHashMap;
@1.1.1
-###org/codehaus/jackson/map/BeanDescription

+###org/codehaus/jackson/map/ClassIntrospector
@1.1.0
+#forSerialization(Lorg/codehaus/jackson/map/SerializationConfig;Ljava/lang/Class;)Lorg/codehaus/jackson/map/BeanDescription;
+#forDeserialization(Lorg/codehaus/jackson/map/DeserializationConfig;Lorg/codehaus/jackson/type/JavaType;)Lorg/codehaus/jackson/map/BeanDescription;
+#forCreation(Lorg/codehaus/jackson/map/DeserializationConfig;Ljava/lang/Class;)Lorg/codehaus/jackson/map/BeanDescription;
+#forClassAnnotations(Lorg/codehaus/jackson/map/DeserializationConfig;Ljava/lang/Class;)Lorg/codehaus/jackson/map/BeanDescription;
+#forClassAnnotations(Lorg/codehaus/jackson/map/SerializationConfig;Ljava/lang/Class;)Lorg/codehaus/jackson/map/BeanDescription;
@1.1.1
-###org/codehaus/jackson/map/ClassIntrospector

+###org/codehaus/jackson/map/DeserializationConfig$Feature
@1.1.0
+#values()[Lorg/codehaus/jackson/map/DeserializationConfig$Feature;
+#valueOf(Ljava/lang/String;)Lorg/codehaus/jackson/map/DeserializationConfig$Feature;
+#collectDefaults()I
+#enabledByDefault()Z
+#getMask()I
@1.1.1
-###org/codehaus/jackson/map/DeserializationConfig$Feature

+###org/codehaus/jackson/map/DeserializationConfig
@1.1.0
+#<init>(Lorg/codehaus/jackson/map/ClassIntrospector;Lorg/codehaus/jackson/map/AnnotationIntrospector;)V
+#createUnshared()Lorg/codehaus/jackson/map/DeserializationConfig;
+#fromAnnotations(Ljava/lang/Class;)V
+#addHandler(Lorg/codehaus/jackson/map/DeserializationProblemHandler;)V
+#clearHandlers()V
+#isEnabled(Lorg/codehaus/jackson/map/DeserializationConfig$Feature;)Z
+#getBase64Variant()Lorg/codehaus/jackson/Base64Variant;
+#getProblemHandlers()Lorg/codehaus/jackson/map/util/LinkedNode;
+#getDateFormat()Ljava/text/DateFormat;
+#getAnnotationIntrospector()Lorg/codehaus/jackson/map/AnnotationIntrospector;
+#setAnnotationIntrospector(Lorg/codehaus/jackson/map/AnnotationIntrospector;)V
+#introspect(Lorg/codehaus/jackson/type/JavaType;)Lorg/codehaus/jackson/map/BeanDescription;
+#introspectForCreation(Ljava/lang/Class;)Lorg/codehaus/jackson/map/BeanDescription;
+#introspectClassAnnotations(Ljava/lang/Class;)Lorg/codehaus/jackson/map/BeanDescription;
+#enable(Lorg/codehaus/jackson/map/DeserializationConfig$Feature;)V
+#disable(Lorg/codehaus/jackson/map/DeserializationConfig$Feature;)V
+#set(Lorg/codehaus/jackson/map/DeserializationConfig$Feature;Z)V
+#setDateFormat(Ljava/text/DateFormat;)V
+#setIntrospector(Lorg/codehaus/jackson/map/ClassIntrospector;)V
@1.1.1
-###org/codehaus/jackson/map/DeserializationConfig

+###org/codehaus/jackson/map/DeserializationContext
@1.1.0
+#getConfig()Lorg/codehaus/jackson/map/DeserializationConfig;
+#isEnabled(Lorg/codehaus/jackson/map/DeserializationConfig$Feature;)Z
+#getBase64Variant()Lorg/codehaus/jackson/Base64Variant;
+#getParser()Lorg/codehaus/jackson/JsonParser;
+#leaseObjectBuffer()Lorg/codehaus/jackson/map/util/ObjectBuffer;
+#returnObjectBuffer(Lorg/codehaus/jackson/map/util/ObjectBuffer;)V
+#getArrayBuilders()Lorg/codehaus/jackson/map/util/ArrayBuilders;
+#parseDate(Ljava/lang/String;)Ljava/util/Date;
+#constructCalendar(Ljava/util/Date;)Ljava/util/Calendar;
+#mappingException(Ljava/lang/Class;)Lorg/codehaus/jackson/map/JsonMappingException;
+#instantiationException(Ljava/lang/Class;Ljava/lang/Exception;)Lorg/codehaus/jackson/map/JsonMappingException;
+#weirdStringException(Ljava/lang/Class;Ljava/lang/String;)Lorg/codehaus/jackson/map/JsonMappingException;
+#weirdNumberException(Ljava/lang/Class;Ljava/lang/String;)Lorg/codehaus/jackson/map/JsonMappingException;
+#weirdKeyException(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)Lorg/codehaus/jackson/map/JsonMappingException;
+#unknownFieldException(Ljava/lang/Object;Ljava/lang/String;)Lorg/codehaus/jackson/map/JsonMappingException;
@1.1.1
-###org/codehaus/jackson/map/DeserializationContext

+###org/codehaus/jackson/map/DeserializationProblemHandler
@1.1.0
+#<init>()V
+#handleUnknownProperty(Lorg/codehaus/jackson/map/DeserializationContext;Lorg/codehaus/jackson/map/JsonDeserializer;Ljava/lang/Object;Ljava/lang/String;)Z
@1.1.1
-###org/codehaus/jackson/map/DeserializationProblemHandler

+###org/codehaus/jackson/map/JsonDeserializer$None
@1.1.0
+#<init>()V
@1.1.1
-###org/codehaus/jackson/map/JsonDeserializer$None

+###org/codehaus/jackson/map/JsonDeserializer
@1.1.0
+#<init>()V
+#deserialize(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Ljava/lang/Object;
+#deserialize(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;Ljava/lang/Object;)Ljava/lang/Object;
+#getNullValue()Ljava/lang/Object;
+#shouldBeCached()Z[deprecated]
@1.1.1
-###org/codehaus/jackson/map/JsonDeserializer

+###org/codehaus/jackson/map/JsonMappingException$Reference
@1.1.0
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#<init>(Ljava/lang/Object;I)V
+#setFrom(Ljava/lang/Object;)V
+#setFieldName(Ljava/lang/String;)V
+#setIndex(I)V
+#getFrom()Ljava/lang/Object;
+#getFieldName()Ljava/lang/String;
+#getIndex()I
+#toString()Ljava/lang/String;
@1.1.1
-###org/codehaus/jackson/map/JsonMappingException$Reference

+###org/codehaus/jackson/map/JsonMappingException
@1.1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Lorg/codehaus/jackson/JsonLocation;)V
+#<init>(Ljava/lang/String;Lorg/codehaus/jackson/JsonLocation;Ljava/lang/Throwable;)V
+#from(Lorg/codehaus/jackson/JsonParser;Ljava/lang/String;)Lorg/codehaus/jackson/map/JsonMappingException;
+#from(Lorg/codehaus/jackson/JsonParser;Ljava/lang/String;Ljava/lang/Throwable;)Lorg/codehaus/jackson/map/JsonMappingException;
+#wrapWithPath(Ljava/lang/Throwable;Ljava/lang/Object;Ljava/lang/String;)Lorg/codehaus/jackson/map/JsonMappingException;
+#wrapWithPath(Ljava/lang/Throwable;Ljava/lang/Object;I)Lorg/codehaus/jackson/map/JsonMappingException;
+#wrapWithPath(Ljava/lang/Throwable;Lorg/codehaus/jackson/map/JsonMappingException$Reference;)Lorg/codehaus/jackson/map/JsonMappingException;
+#getPath()Ljava/util/List;
+#prependPath(Ljava/lang/Object;Ljava/lang/String;)V
+#prependPath(Ljava/lang/Object;I)V
+#prependPath(Lorg/codehaus/jackson/map/JsonMappingException$Reference;)V
+#getMessage()Ljava/lang/String;
+#toString()Ljava/lang/String;
@1.1.1
-###org/codehaus/jackson/map/JsonMappingException

+###org/codehaus/jackson/map/JsonSerializable
@1.1.0
+#serialize(Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
@1.1.1
-###org/codehaus/jackson/map/JsonSerializable

+###org/codehaus/jackson/map/JsonSerializer$None
@1.1.0
+#<init>()V
@1.1.1
-###org/codehaus/jackson/map/JsonSerializer$None

+###org/codehaus/jackson/map/JsonSerializer
@1.1.0
+#<init>()V
+#serialize(Ljava/lang/Object;Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
@1.1.1
-###org/codehaus/jackson/map/JsonSerializer

+###org/codehaus/jackson/map/SerializationConfig$Feature
@1.1.0
+#values()[Lorg/codehaus/jackson/map/SerializationConfig$Feature;
+#valueOf(Ljava/lang/String;)Lorg/codehaus/jackson/map/SerializationConfig$Feature;
+#collectDefaults()I
+#enabledByDefault()Z
+#getMask()I
@1.1.1
-###org/codehaus/jackson/map/SerializationConfig$Feature

+###org/codehaus/jackson/map/SerializationConfig
@1.1.0
+#<init>(Lorg/codehaus/jackson/map/ClassIntrospector;Lorg/codehaus/jackson/map/AnnotationIntrospector;)V
+#createUnshared()Lorg/codehaus/jackson/map/SerializationConfig;
+#fromAnnotations(Ljava/lang/Class;)V
+#isEnabled(Lorg/codehaus/jackson/map/SerializationConfig$Feature;)Z
+#getDateFormat()Ljava/text/DateFormat;
+#getSerializationInclusion()Lorg/codehaus/jackson/map/annotate/JsonSerialize$Inclusion;
+#getAnnotationIntrospector()Lorg/codehaus/jackson/map/AnnotationIntrospector;
+#introspect(Ljava/lang/Class;)Lorg/codehaus/jackson/map/BeanDescription;
+#introspectClassAnnotations(Ljava/lang/Class;)Lorg/codehaus/jackson/map/BeanDescription;
+#enable(Lorg/codehaus/jackson/map/SerializationConfig$Feature;)V
+#disable(Lorg/codehaus/jackson/map/SerializationConfig$Feature;)V
+#set(Lorg/codehaus/jackson/map/SerializationConfig$Feature;Z)V
+#setSerializationInclusion(Lorg/codehaus/jackson/map/annotate/JsonSerialize$Inclusion;)V
+#setDateFormat(Ljava/text/DateFormat;)V
+#setIntrospector(Lorg/codehaus/jackson/map/ClassIntrospector;)V
+#setAnnotationIntrospector(Lorg/codehaus/jackson/map/AnnotationIntrospector;)V
+#toString()Ljava/lang/String;
@1.1.1
-###org/codehaus/jackson/map/SerializationConfig

+###org/codehaus/jackson/map/SerializerFactory
@1.1.0
+#<init>()V
+#createSerializer(Ljava/lang/Class;Lorg/codehaus/jackson/map/SerializationConfig;)Lorg/codehaus/jackson/map/JsonSerializer;
@1.1.1
-###org/codehaus/jackson/map/SerializerFactory

+###org/codehaus/jackson/map/SerializerProvider
@1.1.0
+#serializeValue(Lorg/codehaus/jackson/map/SerializationConfig;Lorg/codehaus/jackson/JsonGenerator;Ljava/lang/Object;Lorg/codehaus/jackson/map/SerializerFactory;)V
+#generateJsonSchema(Ljava/lang/Class;Lorg/codehaus/jackson/map/SerializationConfig;Lorg/codehaus/jackson/map/SerializerFactory;)Lorg/codehaus/jackson/schema/JsonSchema;
+#hasSerializerFor(Lorg/codehaus/jackson/map/SerializationConfig;Ljava/lang/Class;Lorg/codehaus/jackson/map/SerializerFactory;)Z
+#getConfig()Lorg/codehaus/jackson/map/SerializationConfig;
+#isEnabled(Lorg/codehaus/jackson/map/SerializationConfig$Feature;)Z
+#findValueSerializer(Ljava/lang/Class;)Lorg/codehaus/jackson/map/JsonSerializer;
+#getKeySerializer()Lorg/codehaus/jackson/map/JsonSerializer;
+#getNullKeySerializer()Lorg/codehaus/jackson/map/JsonSerializer;
+#getNullValueSerializer()Lorg/codehaus/jackson/map/JsonSerializer;
+#getUnknownTypeSerializer(Ljava/lang/Class;)Lorg/codehaus/jackson/map/JsonSerializer;
+#defaultSerializeValue(Ljava/lang/Object;Lorg/codehaus/jackson/JsonGenerator;)V
+#defaultSerializeField(Ljava/lang/String;Ljava/lang/Object;Lorg/codehaus/jackson/JsonGenerator;)V
+#defaultSerializeDateValue(JLorg/codehaus/jackson/JsonGenerator;)V
+#defaultSerializeDateValue(Ljava/util/Date;Lorg/codehaus/jackson/JsonGenerator;)V
@1.1.1
-###org/codehaus/jackson/map/SerializerProvider

+###org/codehaus/jackson/map/annotate/JsonSerialize$Inclusion
@1.1.0
+#values()[Lorg/codehaus/jackson/map/annotate/JsonSerialize$Inclusion;
+#valueOf(Ljava/lang/String;)Lorg/codehaus/jackson/map/annotate/JsonSerialize$Inclusion;
@1.1.1
-###org/codehaus/jackson/map/annotate/JsonSerialize$Inclusion

+###org/codehaus/jackson/map/annotate/JsonSerialize
@1.1.0
+#using()Ljava/lang/Class;
+#as()Ljava/lang/Class;
+#include()Lorg/codehaus/jackson/map/annotate/JsonSerialize$Inclusion;
@1.1.1
-###org/codehaus/jackson/map/annotate/JsonSerialize

+###org/codehaus/jackson/map/introspect/Annotated
@1.1.0
+#<init>()V
+#getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#hasAnnotation(Ljava/lang/Class;)Z
+#getAnnotated()Ljava/lang/reflect/AnnotatedElement;
+#isPublic()Z
+#getName()Ljava/lang/String;
+#getType()Ljava/lang/Class;
@1.1.1
-###org/codehaus/jackson/map/introspect/Annotated

+###org/codehaus/jackson/map/introspect/AnnotatedClass$FactoryMethodFilter
@1.1.0
+#<init>()V
+#includeMethod(Ljava/lang/reflect/Method;)Z
@1.1.1
-###org/codehaus/jackson/map/introspect/AnnotatedClass$FactoryMethodFilter

+###org/codehaus/jackson/map/introspect/AnnotatedClass
@1.1.0
+#construct(Ljava/lang/Class;Lorg/codehaus/jackson/map/AnnotationIntrospector;)Lorg/codehaus/jackson/map/introspect/AnnotatedClass;
+#resolveCreators(Z)V
+#resolveMemberMethods(Lorg/codehaus/jackson/map/introspect/MethodFilter;)V
+#resolveFields()V
+#getAnnotated()Ljava/lang/Class;
+#getModifiers()I
+#getName()Ljava/lang/String;
+#getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#getType()Ljava/lang/Class;
+#getDefaultConstructor()Lorg/codehaus/jackson/map/introspect/AnnotatedConstructor;
+#getSingleArgConstructors()Ljava/util/List;
+#getSingleArgStaticMethods()Ljava/util/List;
+#memberMethods()Ljava/lang/Iterable;
+#getMemberMethodCount()I
+#findMethod(Ljava/lang/String;[Ljava/lang/Class;)Lorg/codehaus/jackson/map/introspect/AnnotatedMethod;
+#getFieldCount()I
+#fields()Ljava/lang/Iterable;
+#toString()Ljava/lang/String;
+#getAnnotated()Ljava/lang/reflect/AnnotatedElement;
@1.1.1
-###org/codehaus/jackson/map/introspect/AnnotatedClass

+###org/codehaus/jackson/map/introspect/AnnotatedConstructor
@1.1.0
+#<init>(Ljava/lang/reflect/Constructor;Lorg/codehaus/jackson/map/introspect/AnnotationMap;)V
+#getAnnotated()Ljava/lang/reflect/Constructor;
+#getModifiers()I
+#getName()Ljava/lang/String;
+#getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#getType()Ljava/lang/Class;
+#getParameterTypes()[Ljava/lang/Class;
+#fixAccess()V
+#getAnnotated()Ljava/lang/reflect/AnnotatedElement;
@1.1.1
-###org/codehaus/jackson/map/introspect/AnnotatedConstructor

+###org/codehaus/jackson/map/introspect/AnnotatedField
@1.1.0
+#<init>(Ljava/lang/reflect/Field;Lorg/codehaus/jackson/map/introspect/AnnotationMap;)V
+#getAnnotated()Ljava/lang/reflect/Field;
+#getModifiers()I
+#getName()Ljava/lang/String;
+#getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#getType()Ljava/lang/Class;
+#getGenericType()Ljava/lang/reflect/Type;
+#getDeclaringClass()Ljava/lang/Class;
+#getFullName()Ljava/lang/String;
+#getAnnotationCount()I
+#fixAccess()V
+#toString()Ljava/lang/String;
+#getAnnotated()Ljava/lang/reflect/AnnotatedElement;
@1.1.1
-###org/codehaus/jackson/map/introspect/AnnotatedField

+###org/codehaus/jackson/map/introspect/AnnotatedMethod
@1.1.0
+#<init>(Ljava/lang/reflect/Method;Lorg/codehaus/jackson/map/introspect/AnnotationMap;)V
+#addIfNotPresent(Ljava/lang/annotation/Annotation;)V
+#getAnnotated()Ljava/lang/reflect/Method;
+#getModifiers()I
+#getName()Ljava/lang/String;
+#getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#getType()Ljava/lang/Class;
+#getGenericParameterTypes()[Ljava/lang/reflect/Type;
+#getParameterTypes()[Ljava/lang/Class;
+#getParameterCount()I
+#getGenericReturnType()Ljava/lang/reflect/Type;
+#getReturnType()Ljava/lang/Class;
+#getDeclaringClass()Ljava/lang/Class;
+#getFullName()Ljava/lang/String;
+#getAnnotationCount()I
+#fixAccess()V
+#toString()Ljava/lang/String;
+#getAnnotated()Ljava/lang/reflect/AnnotatedElement;
@1.1.1
-###org/codehaus/jackson/map/introspect/AnnotatedMethod

+###org/codehaus/jackson/map/introspect/AnnotatedMethodMap
@1.1.0
+#<init>()V
+#add(Lorg/codehaus/jackson/map/introspect/AnnotatedMethod;)V
+#remove(Lorg/codehaus/jackson/map/introspect/AnnotatedMethod;)V
+#isEmpty()Z
+#size()I
+#find(Ljava/lang/String;[Ljava/lang/Class;)Lorg/codehaus/jackson/map/introspect/AnnotatedMethod;
+#find(Ljava/lang/reflect/Method;)Lorg/codehaus/jackson/map/introspect/AnnotatedMethod;
+#iterator()Ljava/util/Iterator;
@1.1.1
-###org/codehaus/jackson/map/introspect/AnnotatedMethodMap

+###org/codehaus/jackson/map/introspect/AnnotationMap
@1.1.0
+#<init>()V
+#get(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#size()I
+#addIfNotPresent(Ljava/lang/annotation/Annotation;)V
+#add(Ljava/lang/annotation/Annotation;)V
+#toString()Ljava/lang/String;
@1.1.1
-###org/codehaus/jackson/map/introspect/AnnotationMap

+###org/codehaus/jackson/map/introspect/MethodFilter
@1.1.0
+#includeMethod(Ljava/lang/reflect/Method;)Z
@1.1.1
-###org/codehaus/jackson/map/introspect/MethodFilter

+###org/codehaus/jackson/map/introspect/MethodKey
@1.1.0
+#<init>(Ljava/lang/reflect/Method;)V
+#<init>(Ljava/lang/String;[Ljava/lang/Class;)V
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.1.1
-###org/codehaus/jackson/map/introspect/MethodKey

+###org/codehaus/jackson/map/util/ArrayBuilders$BooleanBuilder
@1.1.0
+#<init>()V
+#_constructArray(I)[Z
+#_constructArray(I)Ljava/lang/Object;
@1.1.1
-###org/codehaus/jackson/map/util/ArrayBuilders$BooleanBuilder

+###org/codehaus/jackson/map/util/ArrayBuilders$ByteBuilder
@1.1.0
+#<init>()V
+#_constructArray(I)[B
+#_constructArray(I)Ljava/lang/Object;
@1.1.1
-###org/codehaus/jackson/map/util/ArrayBuilders$ByteBuilder

+###org/codehaus/jackson/map/util/ArrayBuilders$DoubleBuilder
@1.1.0
+#<init>()V
+#_constructArray(I)[D
+#_constructArray(I)Ljava/lang/Object;
@1.1.1
-###org/codehaus/jackson/map/util/ArrayBuilders$DoubleBuilder

+###org/codehaus/jackson/map/util/ArrayBuilders$FloatBuilder
@1.1.0
+#<init>()V
+#_constructArray(I)[F
+#_constructArray(I)Ljava/lang/Object;
@1.1.1
-###org/codehaus/jackson/map/util/ArrayBuilders$FloatBuilder

+###org/codehaus/jackson/map/util/ArrayBuilders$IntBuilder
@1.1.0
+#<init>()V
+#_constructArray(I)[I
+#_constructArray(I)Ljava/lang/Object;
@1.1.1
-###org/codehaus/jackson/map/util/ArrayBuilders$IntBuilder

+###org/codehaus/jackson/map/util/ArrayBuilders$LongBuilder
@1.1.0
+#<init>()V
+#_constructArray(I)[J
+#_constructArray(I)Ljava/lang/Object;
@1.1.1
-###org/codehaus/jackson/map/util/ArrayBuilders$LongBuilder

+###org/codehaus/jackson/map/util/ArrayBuilders$ShortBuilder
@1.1.0
+#<init>()V
+#_constructArray(I)[S
+#_constructArray(I)Ljava/lang/Object;
@1.1.1
-###org/codehaus/jackson/map/util/ArrayBuilders$ShortBuilder

+###org/codehaus/jackson/map/util/ArrayBuilders
@1.1.0
+#<init>()V
+#getBooleanBuilder()Lorg/codehaus/jackson/map/util/ArrayBuilders$BooleanBuilder;
+#getByteBuilder()Lorg/codehaus/jackson/map/util/ArrayBuilders$ByteBuilder;
+#getShortBuilder()Lorg/codehaus/jackson/map/util/ArrayBuilders$ShortBuilder;
+#getIntBuilder()Lorg/codehaus/jackson/map/util/ArrayBuilders$IntBuilder;
+#getLongBuilder()Lorg/codehaus/jackson/map/util/ArrayBuilders$LongBuilder;
+#getFloatBuilder()Lorg/codehaus/jackson/map/util/ArrayBuilders$FloatBuilder;
+#getDoubleBuilder()Lorg/codehaus/jackson/map/util/ArrayBuilders$DoubleBuilder;
@1.1.1
-###org/codehaus/jackson/map/util/ArrayBuilders

+###org/codehaus/jackson/map/util/ClassUtil
@1.1.0
+#findSuperTypes(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;
+#canBeABeanType(Ljava/lang/Class;)Ljava/lang/String;
+#isLocalType(Ljava/lang/Class;)Ljava/lang/String;
+#isProxyType(Ljava/lang/Class;)Z
+#isConcrete(Ljava/lang/Class;)Z
+#hasGetterSignature(Ljava/lang/reflect/Method;)Z
+#getRootCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#throwAsIAE(Ljava/lang/Throwable;)V
+#throwAsIAE(Ljava/lang/Throwable;Ljava/lang/String;)V
+#unwrapAndThrowAsIAE(Ljava/lang/Throwable;)V
+#unwrapAndThrowAsIAE(Ljava/lang/Throwable;Ljava/lang/String;)V
+#createInstance(Ljava/lang/Class;Z)Ljava/lang/Object;
+#checkAndFixAccess(Ljava/lang/reflect/Member;)V
@1.1.1
-###org/codehaus/jackson/map/util/ClassUtil

+###org/codehaus/jackson/map/util/LinkedNode
@1.1.0
+#<init>(Ljava/lang/Object;Lorg/codehaus/jackson/map/util/LinkedNode;)V
+#next()Lorg/codehaus/jackson/map/util/LinkedNode;
+#value()Ljava/lang/Object;
+#contains(Lorg/codehaus/jackson/map/util/LinkedNode;Ljava/lang/Object;)Z
@1.1.1
-###org/codehaus/jackson/map/util/LinkedNode

+###org/codehaus/jackson/map/util/ObjectBuffer
@1.1.0
+#<init>()V
+#resetAndStart()[Ljava/lang/Object;
+#appendCompletedChunk([Ljava/lang/Object;)[Ljava/lang/Object;
+#completeAndClearBuffer([Ljava/lang/Object;I)[Ljava/lang/Object;
+#completeAndClearBuffer([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;
+#initialCapacity()I
+#bufferedSize()I
@1.1.1
-###org/codehaus/jackson/map/util/ObjectBuffer

+###org/codehaus/jackson/map/util/PrimitiveArrayBuilder
@1.1.0
+#resetAndStart()Ljava/lang/Object;
+#appendCompletedChunk(Ljava/lang/Object;I)Ljava/lang/Object;
+#completeAndClearBuffer(Ljava/lang/Object;I)Ljava/lang/Object;
@1.1.1
-###org/codehaus/jackson/map/util/PrimitiveArrayBuilder

+###org/codehaus/jackson/map/util/StdDateFormat
@1.1.0
+#<init>()V
+#clone()Lorg/codehaus/jackson/map/util/StdDateFormat;
+#getBlueprintISO8601Format()Ljava/text/DateFormat;
+#getISO8601Format(Ljava/util/TimeZone;)Ljava/text/DateFormat;
+#getBlueprintRFC1123Format()Ljava/text/DateFormat;
+#getRFC1123Format(Ljava/util/TimeZone;)Ljava/text/DateFormat;
+#parse(Ljava/lang/String;)Ljava/util/Date;
+#parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;
+#format(Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
+#clone()Ljava/lang/Object;
@1.1.1
-###org/codehaus/jackson/map/util/StdDateFormat

+###org/codehaus/jackson/node/ArrayNode
@1.1.0
+#<init>(Lorg/codehaus/jackson/node/JsonNodeFactory;)V
+#isArray()Z
+#size()I
+#getElements()Ljava/util/Iterator;
+#get(I)Lorg/codehaus/jackson/JsonNode;
+#get(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
+#path(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
+#path(I)Lorg/codehaus/jackson/JsonNode;
+#serialize(Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
+#set(ILorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
+#add(Lorg/codehaus/jackson/JsonNode;)V
+#insert(ILorg/codehaus/jackson/JsonNode;)V
+#remove(I)Lorg/codehaus/jackson/JsonNode;
+#addArray()Lorg/codehaus/jackson/node/ArrayNode;
+#addObject()Lorg/codehaus/jackson/node/ObjectNode;
+#addPOJO(Ljava/lang/Object;)V
+#addNull()V
+#add(I)V
+#add(J)V
+#add(F)V
+#add(D)V
+#add(Ljava/math/BigDecimal;)V
+#add(Ljava/lang/String;)V
+#add(Z)V
+#add([B)V
+#insertArray(I)Lorg/codehaus/jackson/node/ArrayNode;
+#insertObject(I)Lorg/codehaus/jackson/node/ObjectNode;
+#insertPOJO(ILjava/lang/Object;)V
+#insertNull(I)V
+#insert(II)V
+#insert(IJ)V
+#insert(IF)V
+#insert(ID)V
+#insert(ILjava/math/BigDecimal;)V
+#insert(ILjava/lang/String;)V
+#insert(IZ)V
+#insert(I[B)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#_set(ILorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
@1.1.1
-###org/codehaus/jackson/node/ArrayNode

+###org/codehaus/jackson/node/BaseJsonNode
@1.1.0
+#serialize(Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
+#writeTo(Lorg/codehaus/jackson/JsonGenerator;)V
@1.1.1
-###org/codehaus/jackson/node/BaseJsonNode

+###org/codehaus/jackson/node/BigIntegerNode
@1.1.0
+#<init>(Ljava/math/BigInteger;)V
+#valueOf(Ljava/math/BigInteger;)Lorg/codehaus/jackson/node/BigIntegerNode;
+#isIntegralNumber()Z
+#isBigInteger()Z
+#getNumberValue()Ljava/lang/Number;
+#getIntValue()I
+#getLongValue()J
+#getBigIntegerValue()Ljava/math/BigInteger;
+#getDoubleValue()D
+#getDecimalValue()Ljava/math/BigDecimal;
+#getValueAsText()Ljava/lang/String;
+#serialize(Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.1.1
-###org/codehaus/jackson/node/BigIntegerNode

+###org/codehaus/jackson/node/BinaryNode
@1.1.0
+#<init>([B)V
+#<init>([BII)V
+#valueOf([B)Lorg/codehaus/jackson/node/BinaryNode;
+#valueOf([BII)Lorg/codehaus/jackson/node/BinaryNode;
+#isBinary()Z
+#getBinaryValue()[B
+#getValueAsText()Ljava/lang/String;
+#serialize(Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.1.1
-###org/codehaus/jackson/node/BinaryNode

+###org/codehaus/jackson/node/BooleanNode
@1.1.0
+#getTrue()Lorg/codehaus/jackson/node/BooleanNode;
+#getFalse()Lorg/codehaus/jackson/node/BooleanNode;
+#valueOf(Z)Lorg/codehaus/jackson/node/BooleanNode;
+#isBoolean()Z
+#getBooleanValue()Z
+#getValueAsText()Ljava/lang/String;
+#serialize(Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
+#equals(Ljava/lang/Object;)Z
@1.1.1
-###org/codehaus/jackson/node/BooleanNode

+###org/codehaus/jackson/node/ContainerNode$NoNodesIterator
@1.1.0
+#instance()Lorg/codehaus/jackson/node/ContainerNode$NoNodesIterator;
+#hasNext()Z
+#next()Lorg/codehaus/jackson/JsonNode;
+#remove()V
+#next()Ljava/lang/Object;
@1.1.1
-###org/codehaus/jackson/node/ContainerNode$NoNodesIterator

+###org/codehaus/jackson/node/ContainerNode$NoStringsIterator
@1.1.0
+#instance()Lorg/codehaus/jackson/node/ContainerNode$NoStringsIterator;
+#hasNext()Z
+#next()Ljava/lang/String;
+#remove()V
+#next()Ljava/lang/Object;
@1.1.1
-###org/codehaus/jackson/node/ContainerNode$NoStringsIterator

+###org/codehaus/jackson/node/ContainerNode
@1.1.0
+#isContainerNode()Z
+#getValueAsText()Ljava/lang/String;
+#size()I
+#get(I)Lorg/codehaus/jackson/JsonNode;
+#get(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
+#arrayNode()Lorg/codehaus/jackson/node/ArrayNode;
+#objectNode()Lorg/codehaus/jackson/node/ObjectNode;
+#nullNode()Lorg/codehaus/jackson/node/NullNode;
+#booleanNode(Z)Lorg/codehaus/jackson/node/BooleanNode;
+#numberNode(B)Lorg/codehaus/jackson/node/NumericNode;
+#numberNode(S)Lorg/codehaus/jackson/node/NumericNode;
+#numberNode(I)Lorg/codehaus/jackson/node/NumericNode;
+#numberNode(J)Lorg/codehaus/jackson/node/NumericNode;
+#numberNode(F)Lorg/codehaus/jackson/node/NumericNode;
+#numberNode(D)Lorg/codehaus/jackson/node/NumericNode;
+#numberNode(Ljava/math/BigDecimal;)Lorg/codehaus/jackson/node/NumericNode;
+#textNode(Ljava/lang/String;)Lorg/codehaus/jackson/node/TextNode;
+#binaryNode([B)Lorg/codehaus/jackson/node/BinaryNode;
+#binaryNode([BII)Lorg/codehaus/jackson/node/BinaryNode;
+#POJONode(Ljava/lang/Object;)Lorg/codehaus/jackson/node/POJONode;
@1.1.1
-###org/codehaus/jackson/node/ContainerNode

+###org/codehaus/jackson/node/DecimalNode
@1.1.0
+#<init>(Ljava/math/BigDecimal;)V
+#valueOf(Ljava/math/BigDecimal;)Lorg/codehaus/jackson/node/DecimalNode;
+#isFloatingPointNumber()Z
+#isBigDecimal()Z
+#getNumberValue()Ljava/lang/Number;
+#getIntValue()I
+#getLongValue()J
+#getBigIntegerValue()Ljava/math/BigInteger;
+#getDoubleValue()D
+#getDecimalValue()Ljava/math/BigDecimal;
+#getValueAsText()Ljava/lang/String;
+#serialize(Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.1.1
-###org/codehaus/jackson/node/DecimalNode

+###org/codehaus/jackson/node/DoubleNode
@1.1.0
+#<init>(D)V
+#valueOf(D)Lorg/codehaus/jackson/node/DoubleNode;
+#isFloatingPointNumber()Z
+#isDouble()Z
+#getNumberValue()Ljava/lang/Number;
+#getIntValue()I
+#getLongValue()J
+#getDoubleValue()D
+#getDecimalValue()Ljava/math/BigDecimal;
+#getBigIntegerValue()Ljava/math/BigInteger;
+#getValueAsText()Ljava/lang/String;
+#serialize(Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.1.1
-###org/codehaus/jackson/node/DoubleNode

+###org/codehaus/jackson/node/IntNode
@1.1.0
+#<init>(I)V
+#valueOf(I)Lorg/codehaus/jackson/node/IntNode;
+#isIntegralNumber()Z
+#isInt()Z
+#getNumberValue()Ljava/lang/Number;
+#getIntValue()I
+#getLongValue()J
+#getDoubleValue()D
+#getDecimalValue()Ljava/math/BigDecimal;
+#getBigIntegerValue()Ljava/math/BigInteger;
+#getValueAsText()Ljava/lang/String;
+#serialize(Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.1.1
-###org/codehaus/jackson/node/IntNode

+###org/codehaus/jackson/node/JsonNodeFactory
@1.1.0
+#booleanNode(Z)Lorg/codehaus/jackson/node/BooleanNode;
+#nullNode()Lorg/codehaus/jackson/node/NullNode;
+#numberNode(B)Lorg/codehaus/jackson/node/NumericNode;
+#numberNode(S)Lorg/codehaus/jackson/node/NumericNode;
+#numberNode(I)Lorg/codehaus/jackson/node/NumericNode;
+#numberNode(J)Lorg/codehaus/jackson/node/NumericNode;
+#numberNode(Ljava/math/BigInteger;)Lorg/codehaus/jackson/node/NumericNode;
+#numberNode(F)Lorg/codehaus/jackson/node/NumericNode;
+#numberNode(D)Lorg/codehaus/jackson/node/NumericNode;
+#numberNode(Ljava/math/BigDecimal;)Lorg/codehaus/jackson/node/NumericNode;
+#textNode(Ljava/lang/String;)Lorg/codehaus/jackson/node/TextNode;
+#binaryNode([B)Lorg/codehaus/jackson/node/BinaryNode;
+#binaryNode([BII)Lorg/codehaus/jackson/node/BinaryNode;
+#arrayNode()Lorg/codehaus/jackson/node/ArrayNode;
+#objectNode()Lorg/codehaus/jackson/node/ObjectNode;
+#POJONode(Ljava/lang/Object;)Lorg/codehaus/jackson/node/POJONode;
@1.1.1
-###org/codehaus/jackson/node/JsonNodeFactory

+###org/codehaus/jackson/node/LongNode
@1.1.0
+#<init>(J)V
+#valueOf(J)Lorg/codehaus/jackson/node/LongNode;
+#isIntegralNumber()Z
+#isLong()Z
+#getNumberValue()Ljava/lang/Number;
+#getIntValue()I
+#getLongValue()J
+#getDoubleValue()D
+#getDecimalValue()Ljava/math/BigDecimal;
+#getBigIntegerValue()Ljava/math/BigInteger;
+#getValueAsText()Ljava/lang/String;
+#serialize(Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.1.1
-###org/codehaus/jackson/node/LongNode

+###org/codehaus/jackson/node/MissingNode
@1.1.0
+#getInstance()Lorg/codehaus/jackson/node/MissingNode;
+#isMissingNode()Z
+#getValueAsText()Ljava/lang/String;
+#path(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
+#path(I)Lorg/codehaus/jackson/JsonNode;
+#serialize(Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@1.1.1
-###org/codehaus/jackson/node/MissingNode

+###org/codehaus/jackson/node/NullNode
@1.1.0
+#getInstance()Lorg/codehaus/jackson/node/NullNode;
+#isNull()Z
+#getValueAsText()Ljava/lang/String;
+#serialize(Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
+#equals(Ljava/lang/Object;)Z
@1.1.1
-###org/codehaus/jackson/node/NullNode

+###org/codehaus/jackson/node/NumericNode
@1.1.0
+#isNumber()Z
+#getNumberValue()Ljava/lang/Number;
+#getIntValue()I
+#getLongValue()J
+#getDoubleValue()D
+#getDecimalValue()Ljava/math/BigDecimal;
+#getBigIntegerValue()Ljava/math/BigInteger;
+#getValueAsText()Ljava/lang/String;
@1.1.1
-###org/codehaus/jackson/node/NumericNode

+###org/codehaus/jackson/node/ObjectNode$NoFieldsIterator
@1.1.0
+#hasNext()Z
+#next()Ljava/util/Map$Entry;
+#remove()V
+#next()Ljava/lang/Object;
@1.1.1
-###org/codehaus/jackson/node/ObjectNode$NoFieldsIterator

+###org/codehaus/jackson/node/ObjectNode
@1.1.0
+#<init>(Lorg/codehaus/jackson/node/JsonNodeFactory;)V
+#isObject()Z
+#size()I
+#getElements()Ljava/util/Iterator;
+#get(I)Lorg/codehaus/jackson/JsonNode;
+#get(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
+#getFieldNames()Ljava/util/Iterator;
+#path(I)Lorg/codehaus/jackson/JsonNode;
+#path(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
+#serialize(Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
+#getFields()Ljava/util/Iterator;
+#put(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
+#remove(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
+#putArray(Ljava/lang/String;)Lorg/codehaus/jackson/node/ArrayNode;
+#putObject(Ljava/lang/String;)Lorg/codehaus/jackson/node/ObjectNode;
+#putPOJO(Ljava/lang/String;Ljava/lang/Object;)V
+#putNull(Ljava/lang/String;)V
+#put(Ljava/lang/String;I)V
+#put(Ljava/lang/String;J)V
+#put(Ljava/lang/String;F)V
+#put(Ljava/lang/String;D)V
+#put(Ljava/lang/String;Ljava/math/BigDecimal;)V
+#put(Ljava/lang/String;Ljava/lang/String;)V
+#put(Ljava/lang/String;Z)V
+#put(Ljava/lang/String;[B)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.1.1
-###org/codehaus/jackson/node/ObjectNode

+###org/codehaus/jackson/node/POJONode
@1.1.0
+#<init>(Ljava/lang/Object;)V
+#getValueAsText()Ljava/lang/String;
+#isPojo()Z
+#serialize(Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
+#getPojo()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.1.1
-###org/codehaus/jackson/node/POJONode

+###org/codehaus/jackson/node/TextNode
@1.1.0
+#<init>(Ljava/lang/String;)V
+#valueOf(Ljava/lang/String;)Lorg/codehaus/jackson/node/TextNode;
+#isTextual()Z
+#getTextValue()Ljava/lang/String;
+#getValueAsText()Ljava/lang/String;
+#serialize(Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.1.1
-###org/codehaus/jackson/node/TextNode

+###org/codehaus/jackson/node/ValueNode
@1.1.0
+#isValueNode()Z
+#path(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
+#path(I)Lorg/codehaus/jackson/JsonNode;
+#toString()Ljava/lang/String;
@1.1.1
-###org/codehaus/jackson/node/ValueNode

+###org/codehaus/jackson/schema/JsonSchema
@1.1.0
+#<init>(Lorg/codehaus/jackson/node/ObjectNode;)V
+#getSchemaNode()Lorg/codehaus/jackson/node/ObjectNode;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#getDefaultSchemaNode()Lorg/codehaus/jackson/JsonNode;
@1.1.1
-###org/codehaus/jackson/schema/JsonSchema

+###org/codehaus/jackson/schema/JsonSerializableSchema
@1.1.0
+#schemaType()Ljava/lang/String;
+#schemaObjectPropertiesDefinition()Ljava/lang/String;
+#schemaItemDefinition()Ljava/lang/String;
@1.1.1
-###org/codehaus/jackson/schema/JsonSerializableSchema

+###org/codehaus/jackson/schema/SchemaAware
@1.1.0
+#getSchema(Lorg/codehaus/jackson/map/SerializerProvider;Ljava/lang/reflect/Type;)Lorg/codehaus/jackson/JsonNode;
@1.1.1
-###org/codehaus/jackson/schema/SchemaAware

+###org/codehaus/jackson/annotate/meta/Inherit
@0.9.9
+#values()[Lorg/codehaus/jackson/annotate/meta/Inherit;
+#valueOf(Ljava/lang/String;)Lorg/codehaus/jackson/annotate/meta/Inherit;
@0.9.9-3
-###org/codehaus/jackson/annotate/meta/Inherit

+###org/codehaus/jackson/annotate/meta/Inheritance
@0.9.9
+#value()Lorg/codehaus/jackson/annotate/meta/Inherit;
@0.9.9-3
-###org/codehaus/jackson/annotate/meta/Inheritance
